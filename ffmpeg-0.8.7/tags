!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$aligned	libavcodec/alpha/dsputil_alpha_asm.S	/^$aligned:$/;"	l
$aligned	libavcodec/alpha/motion_est_mvi_asm.S	/^$aligned:$/;"	l
$unaligned	libavcodec/alpha/dsputil_alpha_asm.S	/^$unaligned:$/;"	l
$unaligned	libavcodec/alpha/motion_est_mvi_asm.S	/^$unaligned:$/;"	l
A	libavcodec/dsputil.c	2009;"	d	file:
A	libavcodec/dsputil.c	2014;"	d	file:
A	libavcodec/dsputil.c	2044;"	d	file:
A	libavcodec/huffyuv.c	43;"	d	file:
A	libavcodec/huffyuv.c	48;"	d	file:
A	libavcodec/jpegls.h	/^    int A[367], B[367], C[365], N[367];$/;"	m	struct:JLSState
A	libavcodec/options.c	471;"	d	file:
A	libavcodec/options.c	63;"	d	file:
A	libavfilter/vf_drawbox.c	/^enum { Y, U, V, A };$/;"	e	enum:__anon19	file:
A	libavfilter/vf_lut.c	79;"	d	file:
A1	libavcodec/bfin/pixels_bfin.S	/^        A1 = A0 = 0;$/;"	d
A1	libavcodec/binkidct.c	29;"	d	file:
A1	libavcodec/faandct.c	54;"	d	file:
A2	libavcodec/binkidct.c	30;"	d	file:
A2	libavcodec/eaidct.c	32;"	d	file:
A2	libavcodec/faandct.c	55;"	d	file:
A2	libavcodec/faanidct.c	36;"	d	file:
A3	libavcodec/binkidct.c	31;"	d	file:
A32_BITSTREAM_READER	libavcodec/get_bits.h	44;"	d
A4	libavcodec/binkidct.c	32;"	d	file:
A4	libavcodec/eaidct.c	31;"	d	file:
A4	libavcodec/faandct.c	57;"	d	file:
A4	libavcodec/faanidct.c	35;"	d	file:
A5	libavcodec/eaidct.c	33;"	d	file:
A5	libavcodec/faandct.c	56;"	d	file:
A64Context	libavcodec/a64enc.h	/^typedef struct A64Context {$/;"	s
A64Context	libavcodec/a64enc.h	/^} A64Context;$/;"	t	typeref:struct:A64Context
A64MuxerContext	libavformat/a64.c	/^typedef struct A64MuxerContext {$/;"	s	file:
A64MuxerContext	libavformat/a64.c	/^} A64MuxerContext;$/;"	t	typeref:struct:A64MuxerContext	file:
AA	libavcodec/mpegaudiodec.c	1318;"	d	file:
AA	libavcodec/mpegaudiodec.c	1325;"	d	file:
AACAC3ParseContext	libavcodec/aac_ac3_parser.h	/^typedef struct AACAC3ParseContext {$/;"	s
AACAC3ParseContext	libavcodec/aac_ac3_parser.h	/^} AACAC3ParseContext;$/;"	t	typeref:struct:AACAC3ParseContext
AACAC3ParseError	libavcodec/aac_ac3_parser.h	/^} AACAC3ParseError;$/;"	t	typeref:enum:__anon164
AACADTSHeaderInfo	libavcodec/aacadtsdec.h	/^} AACADTSHeaderInfo;$/;"	t	typeref:struct:__anon121
AACBSFContext	libavcodec/aac_adtstoasc_bsf.c	/^typedef struct AACBSFContext {$/;"	s	file:
AACBSFContext	libavcodec/aac_adtstoasc_bsf.c	/^} AACBSFContext;$/;"	t	typeref:struct:AACBSFContext	file:
AACCoefficientsEncoder	libavcodec/aacenc.h	/^typedef struct AACCoefficientsEncoder {$/;"	s
AACCoefficientsEncoder	libavcodec/aacenc.h	/^} AACCoefficientsEncoder;$/;"	t	typeref:struct:AACCoefficientsEncoder
AACContext	libavcodec/aac.h	/^} AACContext;$/;"	t	typeref:struct:__anon246
AACContext	libavcodec/libvo-aacenc.c	/^typedef struct AACContext {$/;"	s	file:
AACContext	libavcodec/libvo-aacenc.c	/^} AACContext;$/;"	t	typeref:struct:AACContext	file:
AACENC_FLAGS	libavcodec/aacenc.c	675;"	d	file:
AACEncContext	libavcodec/aacenc.h	/^typedef struct AACEncContext {$/;"	s
AACEncContext	libavcodec/aacenc.h	/^} AACEncContext;$/;"	t	typeref:struct:AACEncContext
AACEncOptions	libavcodec/aacenc.h	/^typedef struct AACEncOptions {$/;"	s
AACEncOptions	libavcodec/aacenc.h	/^} AACEncOptions;$/;"	t	typeref:struct:AACEncOptions
AACPS_TABLEGEN_H	libavcodec/aacps_tablegen.h	24;"	d
AACPsyContext	libavcodec/aacpsy.h	/^typedef struct AACPsyContext {$/;"	s
AACPsyContext	libavcodec/aacpsy.h	/^}AACPsyContext;$/;"	t	typeref:struct:AACPsyContext
AACPsyModelType	libavcodec/aacpsy.h	/^enum AACPsyModelType{$/;"	g
AAC_AC3_PARSE_ERROR_BSID	libavcodec/aac_ac3_parser.h	/^    AAC_AC3_PARSE_ERROR_BSID        = -2,$/;"	e	enum:__anon164
AAC_AC3_PARSE_ERROR_CHANNEL_CFG	libavcodec/aac_ac3_parser.h	/^    AAC_AC3_PARSE_ERROR_CHANNEL_CFG = -7,$/;"	e	enum:__anon164
AAC_AC3_PARSE_ERROR_CRC	libavcodec/aac_ac3_parser.h	/^    AAC_AC3_PARSE_ERROR_CRC         = -6,$/;"	e	enum:__anon164
AAC_AC3_PARSE_ERROR_FRAME_SIZE	libavcodec/aac_ac3_parser.h	/^    AAC_AC3_PARSE_ERROR_FRAME_SIZE  = -4,$/;"	e	enum:__anon164
AAC_AC3_PARSE_ERROR_FRAME_TYPE	libavcodec/aac_ac3_parser.h	/^    AAC_AC3_PARSE_ERROR_FRAME_TYPE  = -5,$/;"	e	enum:__anon164
AAC_AC3_PARSE_ERROR_SAMPLE_RATE	libavcodec/aac_ac3_parser.h	/^    AAC_AC3_PARSE_ERROR_SAMPLE_RATE = -3,$/;"	e	enum:__anon164
AAC_AC3_PARSE_ERROR_SYNC	libavcodec/aac_ac3_parser.h	/^    AAC_AC3_PARSE_ERROR_SYNC        = -1,$/;"	e	enum:__anon164
AAC_ADTS_HEADER_SIZE	libavcodec/aacadtsdec.h	29;"	d
AAC_BLOCK_SIZE_LONG	libavcodec/aacpsy.c	90;"	d	file:
AAC_BLOCK_SIZE_SHORT	libavcodec/aacpsy.c	91;"	d	file:
AAC_CHANNEL_BACK	libavcodec/aac.h	/^    AAC_CHANNEL_BACK  = 3,$/;"	e	enum:ChannelPosition
AAC_CHANNEL_CC	libavcodec/aac.h	/^    AAC_CHANNEL_CC    = 5,$/;"	e	enum:ChannelPosition
AAC_CHANNEL_FRONT	libavcodec/aac.h	/^    AAC_CHANNEL_FRONT = 1,$/;"	e	enum:ChannelPosition
AAC_CHANNEL_LFE	libavcodec/aac.h	/^    AAC_CHANNEL_LFE   = 4,$/;"	e	enum:ChannelPosition
AAC_CHANNEL_SIDE	libavcodec/aac.h	/^    AAC_CHANNEL_SIDE  = 2,$/;"	e	enum:ChannelPosition
AAC_INIT_VLC_STATIC	libavcodec/aacdec.c	542;"	d	file:
AAC_MAX_CHANNELS	libavcodec/aacenc.c	47;"	d	file:
AAC_NB_PSY_MODELS	libavcodec/aacpsy.h	/^    AAC_NB_PSY_MODELS          \/\/\/< total number of psychoacoustic models, since it's not a part of the ABI new models can be added freely$/;"	e	enum:AACPsyModelType
AAC_NUM_BLOCKS_SHORT	libavcodec/aacpsy.c	92;"	d	file:
AAC_PSY_3GPP	libavcodec/aacpsy.h	/^    AAC_PSY_3GPP,              \/\/\/< model following recommendations from 3GPP TS 26.403$/;"	e	enum:AACPsyModelType
AAC_PSY_TEST	libavcodec/aacpsy.h	/^    AAC_PSY_TEST,              \/\/\/< a sample model to exercise encoder$/;"	e	enum:AACPsyModelType
AANSCALE_BITS	libavcodec/dct-test.c	144;"	d	file:
ABCD	libavutil/md5.c	/^    uint32_t ABCD[4];$/;"	m	struct:AVMD5	file:
ABS	libavfilter/libmpcodecs/pullup.c	214;"	d	file:
ABS	libavfilter/libmpcodecs/vf_denoise3d.c	166;"	d	file:
ABS	libavfilter/libmpcodecs/vf_hqdn3d.c	262;"	d	file:
ABS	libavfilter/libmpcodecs/vf_mcdeint.c	73;"	d	file:
ABS	libavfilter/libmpcodecs/vf_test.c	41;"	d	file:
ABS3_MMX2	libavcodec/x86/png_mmx.c	110;"	d	file:
ABS3_SSSE3	libavcodec/x86/png_mmx.c	121;"	d	file:
AC3BitAllocParameters	libavcodec/ac3.h	/^typedef struct AC3BitAllocParameters {$/;"	s
AC3BitAllocParameters	libavcodec/ac3.h	/^} AC3BitAllocParameters;$/;"	t	typeref:struct:AC3BitAllocParameters
AC3Block	libavcodec/ac3enc.h	/^typedef struct AC3Block {$/;"	s
AC3Block	libavcodec/ac3enc.h	/^} AC3Block;$/;"	t	typeref:struct:AC3Block
AC3ChannelMode	libavcodec/ac3.h	/^} AC3ChannelMode;$/;"	t	typeref:enum:__anon169
AC3DSPContext	libavcodec/ac3dsp.h	/^typedef struct AC3DSPContext {$/;"	s
AC3DSPContext	libavcodec/ac3dsp.h	/^} AC3DSPContext;$/;"	t	typeref:struct:AC3DSPContext
AC3DecodeContext	libavcodec/ac3dec.h	/^} AC3DecodeContext;$/;"	t	typeref:struct:__anon88
AC3DeltaStrategy	libavcodec/ac3.h	/^} AC3DeltaStrategy;$/;"	t	typeref:enum:__anon168
AC3ENC_PARAM	libavcodec/ac3enc.h	44;"	d
AC3ENC_PARAM	libavcodec/ac3enc_combined.c	15;"	d	file:
AC3ENC_TYPE	libavcodec/ac3enc_combined.c	21;"	d	file:
AC3ENC_TYPE	libavcodec/ac3enc_fixed.c	33;"	d	file:
AC3ENC_TYPE	libavcodec/ac3enc_float.c	36;"	d	file:
AC3ENC_TYPE	libavcodec/eac3enc.c	32;"	d	file:
AC3ENC_TYPE_AC3	libavcodec/ac3enc.h	47;"	d
AC3ENC_TYPE_AC3	libavcodec/ac3enc_combined.c	18;"	d	file:
AC3ENC_TYPE_AC3_FIXED	libavcodec/ac3enc.h	46;"	d
AC3ENC_TYPE_AC3_FIXED	libavcodec/ac3enc_combined.c	17;"	d	file:
AC3ENC_TYPE_EAC3	libavcodec/ac3enc.h	48;"	d
AC3ENC_TYPE_EAC3	libavcodec/ac3enc_combined.c	19;"	d	file:
AC3EncOptions	libavcodec/ac3.h	/^typedef struct AC3EncOptions {$/;"	s
AC3EncOptions	libavcodec/ac3.h	/^} AC3EncOptions;$/;"	t	typeref:struct:AC3EncOptions
AC3EncodeContext	libavcodec/ac3enc.h	/^typedef struct AC3EncodeContext {$/;"	s
AC3EncodeContext	libavcodec/ac3enc.h	/^} AC3EncodeContext;$/;"	t	typeref:struct:AC3EncodeContext
AC3HeaderInfo	libavcodec/ac3.h	/^} AC3HeaderInfo;$/;"	t	typeref:struct:__anon170
AC3MDCTContext	libavcodec/ac3enc.h	/^typedef struct AC3MDCTContext {$/;"	s
AC3MDCTContext	libavcodec/ac3enc.h	/^} AC3MDCTContext;$/;"	t	typeref:struct:AC3MDCTContext
AC3Mant	libavcodec/ac3enc.c	/^typedef struct AC3Mant {$/;"	s	file:
AC3Mant	libavcodec/ac3enc.c	/^} AC3Mant;$/;"	t	typeref:struct:AC3Mant	file:
AC3_BLOCK_SIZE	libavcodec/ac3.h	35;"	d
AC3_CHMAP_C	libavcodec/ac3tab.h	/^    AC3_CHMAP_C=        1<<(15-1),$/;"	e	enum:CustomChannelMapLocation
AC3_CHMAP_C_SUR	libavcodec/ac3tab.h	/^    AC3_CHMAP_C_SUR=    1<<(15-7),$/;"	e	enum:CustomChannelMapLocation
AC3_CHMAP_L	libavcodec/ac3tab.h	/^    AC3_CHMAP_L=        1<<(15-0),$/;"	e	enum:CustomChannelMapLocation
AC3_CHMAP_LFE	libavcodec/ac3tab.h	/^    AC3_CHMAP_LFE =     1<<(15-15)$/;"	e	enum:CustomChannelMapLocation
AC3_CHMAP_L_SUR	libavcodec/ac3tab.h	/^    AC3_CHMAP_L_SUR=    1<<(15-3),$/;"	e	enum:CustomChannelMapLocation
AC3_CHMAP_R	libavcodec/ac3tab.h	/^    AC3_CHMAP_R=        1<<(15-2),$/;"	e	enum:CustomChannelMapLocation
AC3_CHMAP_R_SUR	libavcodec/ac3tab.h	/^    AC3_CHMAP_R_SUR =   1<<(15-4),$/;"	e	enum:CustomChannelMapLocation
AC3_CHMODE_2F1R	libavcodec/ac3.h	/^    AC3_CHMODE_2F1R,$/;"	e	enum:__anon169
AC3_CHMODE_2F2R	libavcodec/ac3.h	/^    AC3_CHMODE_2F2R,$/;"	e	enum:__anon169
AC3_CHMODE_3F	libavcodec/ac3.h	/^    AC3_CHMODE_3F,$/;"	e	enum:__anon169
AC3_CHMODE_3F1R	libavcodec/ac3.h	/^    AC3_CHMODE_3F1R,$/;"	e	enum:__anon169
AC3_CHMODE_3F2R	libavcodec/ac3.h	/^    AC3_CHMODE_3F2R$/;"	e	enum:__anon169
AC3_CHMODE_DUALMONO	libavcodec/ac3.h	/^    AC3_CHMODE_DUALMONO = 0,$/;"	e	enum:__anon169
AC3_CHMODE_MONO	libavcodec/ac3.h	/^    AC3_CHMODE_MONO,$/;"	e	enum:__anon169
AC3_CHMODE_STEREO	libavcodec/ac3.h	/^    AC3_CHMODE_STEREO,$/;"	e	enum:__anon169
AC3_CRITICAL_BANDS	libavcodec/ac3.h	39;"	d
AC3_EXPONENT_MIN	libavcodec/x86/ac3dsp.asm	/^AC3_EXPONENT_MIN mmx$/;"	l
AC3_EXPONENT_MIN	libavcodec/x86/ac3dsp.asm	/^AC3_EXPONENT_MIN mmxext$/;"	l
AC3_EXPONENT_MIN	libavcodec/x86/ac3dsp.asm	/^AC3_EXPONENT_MIN sse2$/;"	l
AC3_FRAME_BUFFER_SIZE	libavcodec/ac3dec.h	66;"	d
AC3_FRAME_SIZE	libavcodec/ac3.h	37;"	d
AC3_HEADER_SIZE	libavcodec/ac3_parser.c	30;"	d	file:
AC3_ID	libavformat/mpeg.h	43;"	d
AC3_MAX_BLOCKS	libavcodec/ac3.h	36;"	d
AC3_MAX_CHANNELS	libavcodec/ac3.h	31;"	d
AC3_MAX_CODED_FRAME_SIZE	libavcodec/ac3.h	30;"	d
AC3_MAX_COEFS	libavcodec/ac3.h	34;"	d
AC3_MAX_CPL_BANDS	libavcodec/ac3.h	40;"	d
AC3_MAX_MSB_ABS_INT16	libavcodec/x86/ac3dsp.asm	/^AC3_MAX_MSB_ABS_INT16 mmx, or_abs$/;"	l
AC3_MAX_MSB_ABS_INT16	libavcodec/x86/ac3dsp.asm	/^AC3_MAX_MSB_ABS_INT16 mmxext, min_max$/;"	l
AC3_MAX_MSB_ABS_INT16	libavcodec/x86/ac3dsp.asm	/^AC3_MAX_MSB_ABS_INT16 sse2, min_max$/;"	l
AC3_MAX_MSB_ABS_INT16	libavcodec/x86/ac3dsp.asm	/^AC3_MAX_MSB_ABS_INT16 ssse3, or_abs$/;"	l
AC3_NAME	libavcodec/ac3enc.h	51;"	d
AC3_NAME	libavcodec/ac3enc.h	57;"	d
AC3_OUTPUT_LFEON	libavcodec/ac3dec.h	61;"	d
AC3_SHIFT	libavcodec/x86/ac3dsp.asm	/^AC3_SHIFT l, 16, psllw, mmx$/;"	l
AC3_SHIFT	libavcodec/x86/ac3dsp.asm	/^AC3_SHIFT l, 16, psllw, sse2$/;"	l
AC3_SHIFT	libavcodec/x86/ac3dsp.asm	/^AC3_SHIFT r, 32, psrad, mmx$/;"	l
AC3_SHIFT	libavcodec/x86/ac3dsp.asm	/^AC3_SHIFT r, 32, psrad, sse2$/;"	l
AC3_WINDOW_SIZE	libavcodec/ac3.h	38;"	d
ACB_TYPE_ASYMMETRIC	libavcodec/wmavoice.c	/^    ACB_TYPE_ASYMMETRIC = 1, \/\/\/< adaptive codebook with per-frame pitch, which$/;"	e	enum:__anon155	file:
ACB_TYPE_HAMMING	libavcodec/wmavoice.c	/^    ACB_TYPE_HAMMING    = 2  \/\/\/< Per-block pitch with signal generation using$/;"	e	enum:__anon155	file:
ACB_TYPE_NONE	libavcodec/wmavoice.c	/^    ACB_TYPE_NONE       = 0, \/\/\/< no adaptive codebook (only hardcoded fixed)$/;"	e	enum:__anon155	file:
ACCEL_SPARC_VIS	libavcodec/sparc/dsputil_vis.c	3940;"	d	file:
ACCEL_SPARC_VIS2	libavcodec/sparc/dsputil_vis.c	3941;"	d	file:
ACCUM	libavcodec/x86/mlpdsp.c	100;"	d	file:
ACCUM	libavcodec/x86/mlpdsp.c	74;"	d	file:
ACCUMULATE_DIFFS	libpostproc/postprocess_altivec_template.c	875;"	d	file:
ACCUMULATE_DIFFS	libpostproc/postprocess_altivec_template.c	889;"	d	file:
ACDC_VLC_BITS	libavcodec/4xm.c	37;"	d	file:
ACE_VO_TYPE	libavcodec/mpeg4video.h	42;"	d
ACODEC_TESTS	config.mak	/^ACODEC_TESTS=ac3_fixed adpcm_ima_qt adpcm_ima_wav adpcm_ms adpcm_swf adpcm_yam alac aref flac g726 mp2 pcm wmav1 wmav2 $/;"	m
AC_END	libavcodec/mpegvideo.h	485;"	d
AC_ERROR	libavcodec/mpegvideo.h	482;"	d
AC_MODES	libavcodec/vc1acdata.h	27;"	d
AC_PRED	libavcodec/arm/asm-offsets.h	34;"	d
AC_VLC_BITS	libavcodec/intrax8.c	34;"	d	file:
AC_VLC_BITS	libavcodec/vc1dec.c	47;"	d	file:
AC_VLC_MTD	libavcodec/intrax8.c	38;"	d	file:
ADAPT_LEVEL	libavcodec/sonic.c	118;"	d	file:
ADD	libavcodec/dct32.c	112;"	d	file:
ADD	libavcodec/ppc/idct_altivec.c	200;"	d	file:
ADD	libavcodec/ppc/vc1dsp_altivec.c	309;"	d	file:
ADD	libavcodec/ppc/vp3dsp_altivec.c	169;"	d	file:
ADD	libavcodec/ps2/idct_mmi.c	272;"	d	file:
ADD4x4IDCT	libavcodec/x86/h264_idct_10bit.asm	/^ADD4x4IDCT avx$/;"	l
ADD4x4IDCT	libavcodec/x86/h264_idct_10bit.asm	/^ADD4x4IDCT sse2$/;"	l
ADD8	libavcodec/ppc/vp3dsp_altivec.c	107;"	d	file:
ADDPIXELSCLAMPED	libavcodec/sparc/simple_idct_vis.c	344;"	d	file:
ADDROUNDER	libavcodec/sparc/simple_idct_vis.c	395;"	d	file:
ADDROUNDER	libavcodec/sparc/simple_idct_vis.c	456;"	d	file:
ADDROUNDER	libavcodec/sparc/simple_idct_vis.c	457;"	d	file:
ADDROUNDER	libavcodec/sparc/simple_idct_vis.c	495;"	d	file:
ADDROUNDER	libavcodec/sparc/simple_idct_vis.c	496;"	d	file:
ADDROUNDER	libavcodec/sparc/simple_idct_vis.c	509;"	d	file:
ADDROUNDER	libavcodec/sparc/simple_idct_vis.c	510;"	d	file:
ADPCMChannelStatus	libavcodec/adpcm.c	/^typedef struct ADPCMChannelStatus {$/;"	s	file:
ADPCMChannelStatus	libavcodec/adpcm.c	/^} ADPCMChannelStatus;$/;"	t	typeref:struct:ADPCMChannelStatus	file:
ADPCMContext	libavcodec/adpcm.c	/^typedef struct ADPCMContext {$/;"	s	file:
ADPCMContext	libavcodec/adpcm.c	/^} ADPCMContext;$/;"	t	typeref:struct:ADPCMContext	file:
ADPCM_CODEC	libavcodec/adpcm.c	1813;"	d	file:
ADPCM_DECODER	libavcodec/adpcm.c	1797;"	d	file:
ADPCM_DECODER	libavcodec/adpcm.c	1810;"	d	file:
ADPCM_ENCODER	libavcodec/adpcm.c	1779;"	d	file:
ADPCM_ENCODER	libavcodec/adpcm.c	1793;"	d	file:
ADTSContext	libavformat/adts.h	/^} ADTSContext;$/;"	t	typeref:struct:__anon431
ADTS_HEADER_SIZE	libavformat/adts.h	29;"	d
ADVANCE_BLOCK	libavcodec/rpza.c	54;"	d	file:
ADVANCE_BLOCK	libavcodec/smc.c	63;"	d	file:
ADV_SIMPLE_VO_TYPE	libavcodec/mpeg4video.h	43;"	d
ADXContext	libavcodec/adx.h	/^} ADXContext;$/;"	t	typeref:struct:__anon159
AES3_HEADER_LEN	libavcodec/s302m.c	26;"	d	file:
AFTER_IMDCT	libavcodec/aac.h	/^    AFTER_IMDCT = 3,$/;"	e	enum:CouplingPoint
AIC_MODE1_BITS	libavcodec/rv40vlc2.h	429;"	d
AIC_MODE1_NUM	libavcodec/rv40vlc2.h	427;"	d
AIC_MODE1_SIZE	libavcodec/rv40vlc2.h	428;"	d
AIC_MODE2_BITS	libavcodec/rv40vlc2.h	54;"	d
AIC_MODE2_NUM	libavcodec/rv40vlc2.h	52;"	d
AIC_MODE2_SIZE	libavcodec/rv40vlc2.h	53;"	d
AIC_TOP_BITS	libavcodec/rv40vlc2.h	36;"	d
AIC_TOP_SIZE	libavcodec/rv40vlc2.h	37;"	d
AIFF	libavformat/aiffdec.c	29;"	d	file:
AIFFInputContext	libavformat/aiffdec.c	/^} AIFFInputContext;$/;"	t	typeref:struct:__anon411	file:
AIFFOutputContext	libavformat/aiffenc.c	/^} AIFFOutputContext;$/;"	t	typeref:struct:__anon453	file:
AIFF_C_VERSION1	libavformat/aiffdec.c	30;"	d	file:
AI_CANONNAME	libavformat/network.h	142;"	d
AI_NUMERICHOST	libavformat/network.h	146;"	d
AI_PASSIVE	libavformat/network.h	138;"	d
ALACContext	libavcodec/alac.c	/^} ALACContext;$/;"	t	typeref:struct:__anon266	file:
ALAC_CHMODE_LEFT_RIGHT	libavcodec/alacenc.c	42;"	d	file:
ALAC_CHMODE_LEFT_SIDE	libavcodec/alacenc.c	43;"	d	file:
ALAC_CHMODE_MID_SIDE	libavcodec/alacenc.c	45;"	d	file:
ALAC_CHMODE_RIGHT_SIDE	libavcodec/alacenc.c	44;"	d	file:
ALAC_ESCAPE_CODE	libavcodec/alacenc.c	35;"	d	file:
ALAC_EXTRADATA_SIZE	libavcodec/alac.c	61;"	d	file:
ALAC_EXTRADATA_SIZE	libavcodec/alacenc.c	31;"	d	file:
ALAC_FRAME_FOOTER_SIZE	libavcodec/alacenc.c	33;"	d	file:
ALAC_FRAME_HEADER_SIZE	libavcodec/alacenc.c	32;"	d	file:
ALAC_HEADER	libavformat/cafdec.c	121;"	d	file:
ALAC_MAX_LPC_ORDER	libavcodec/alacenc.c	36;"	d	file:
ALAC_MAX_LPC_PRECISION	libavcodec/alacenc.c	39;"	d	file:
ALAC_MAX_LPC_SHIFT	libavcodec/alacenc.c	40;"	d	file:
ALAC_PREAMBLE	libavformat/cafdec.c	120;"	d	file:
ALGO_NOP	libavcodec/truemotion1.c	102;"	d	file:
ALGO_RGB16H	libavcodec/truemotion1.c	104;"	d	file:
ALGO_RGB16V	libavcodec/truemotion1.c	103;"	d	file:
ALGO_RGB24H	libavcodec/truemotion1.c	105;"	d	file:
ALIGN	libavcodec/rtjpeg.c	31;"	d	file:
ALIGN	libavutil/mem.c	62;"	d	file:
ALIGN_MASK	libpostproc/postprocess_template.c	28;"	d	file:
ALLFFLIBS	Makefile	/^ALLFFLIBS = avcodec avdevice avfilter avformat avutil postproc swscale$/;"	m
ALLHEADERS	common.mak	/^ALLHEADERS := $(subst $(SRC_DIR)\/,$(SUBDIR),$(wildcard $(SRC_DIR)\/*.h $(SRC_DIR)\/$(ARCH)\/*.h))$/;"	m
ALLMANPAGES	Makefile	/^ALLMANPAGES = $(BASENAMES:%=%.1)$/;"	m
ALLOW_INTERLACE	libavcodec/h264.h	60;"	d
ALLPROGS	Makefile	/^ALLPROGS    = $(BASENAMES:%=%$(EXESUF))$/;"	m
ALLPROGS_G	Makefile	/^ALLPROGS_G  = $(BASENAMES:%=%_g$(EXESUF))$/;"	m
ALL_S_FILES	av.mk	/^ALL_S_FILES := $(addprefix $(TARGET_ARCH)\/, $(notdir $(ALL_S_FILES)))  $/;"	m
ALL_S_FILES	av.mk	/^ALL_S_FILES := $(wildcard $(LOCAL_PATH)\/$(TARGET_ARCH)\/*.S)  $/;"	m
ALL_S_OBJS	av.mk	/^    ALL_S_OBJS := $(patsubst %.S,%.o,$(ALL_S_FILES))  $/;"	m
ALPHA	libavfilter/drawutils.c	/^enum { RED = 0, GREEN, BLUE, ALPHA };$/;"	e	enum:__anon42	file:
ALPHA_BLEND	ffplay.c	402;"	d	file:
ALPHA_SEP	libavutil/parseutils.c	299;"	d	file:
ALP_MMX_FILTER_OFFSET	libswscale/swscale_internal.h	232;"	d
ALSA_BUFFER_SIZE_MAX	libavdevice/alsa-audio.h	45;"	d
ALSBlockData	libavcodec/alsdec.c	/^} ALSBlockData;$/;"	t	typeref:struct:__anon153	file:
ALSChannelData	libavcodec/alsdec.c	/^} ALSChannelData;$/;"	t	typeref:struct:__anon151	file:
ALSDecContext	libavcodec/alsdec.c	/^} ALSDecContext;$/;"	t	typeref:struct:__anon152	file:
ALSSpecificConfig	libavcodec/alsdec.c	/^} ALSSpecificConfig;$/;"	t	typeref:struct:__anon150	file:
ALS_SUITE	tests/fate/als.mak	/^ALS_SUITE = 00 01 02 03 04 05$/;"	m
ALT32_CORR	libswscale/swscale_internal.h	41;"	d
ALT32_CORR	libswscale/swscale_internal.h	43;"	d
ALTIVEC_STORE_SUM_CLIP	libavcodec/ppc/h264_altivec.c	410;"	d	file:
ALTIVEC_TRANSPOSE_8x8_SHORT	libpostproc/postprocess_altivec_template.c	25;"	d	file:
ALT_BITSTREAM_READER	libavcodec/dv.c	40;"	d	file:
ALT_BITSTREAM_READER	libavcodec/get_bits.h	39;"	d
ALT_BITSTREAM_READER	libavcodec/get_bits.h	46;"	d
ALT_BITSTREAM_READER	libavcodec/imc.c	38;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/apedec.c	23;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/bink.c	29;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/binkaudio.c	32;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/eatgq.c	32;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/eatgv.c	32;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/escape124.c	24;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/indeo2.c	26;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/indeo5.c	30;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/interplayvideo.c	44;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/ivi_common.c	29;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/msgsmdec.c	22;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/nellymoser.c	38;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/nellymoserdec.c	44;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/qdm2.c	37;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/ra288.c	23;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/sipr.c	30;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/smacker.c	37;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/tiertexseqv.c	28;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/tta.c	30;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/vorbis.c	23;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/vorbisdec.c	26;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/wavpack.c	21;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/xan.c	38;"	d	file:
ALT_BITSTREAM_READER_LE	libavcodec/xxan.c	26;"	d	file:
ALZHEIMER_DC_0L0_PRED8x8	libavcodec/h264pred.h	82;"	d
ALZHEIMER_DC_0LT_PRED8x8	libavcodec/h264pred.h	80;"	d
ALZHEIMER_DC_L00_PRED8x8	libavcodec/h264pred.h	81;"	d
ALZHEIMER_DC_L0T_PRED8x8	libavcodec/h264pred.h	79;"	d
AMASK_BWX	libavcodec/alpha/asm.h	37;"	d
AMASK_CIX	libavcodec/alpha/asm.h	39;"	d
AMASK_FIX	libavcodec/alpha/asm.h	38;"	d
AMASK_MVI	libavcodec/alpha/asm.h	40;"	d
AMFDataType	libavformat/flv.h	/^} AMFDataType;$/;"	t	typeref:enum:__anon420
AMF_DATA_TYPE_ARRAY	libavformat/flv.h	/^    AMF_DATA_TYPE_ARRAY       = 0x0a,$/;"	e	enum:__anon420
AMF_DATA_TYPE_BOOL	libavformat/flv.h	/^    AMF_DATA_TYPE_BOOL        = 0x01,$/;"	e	enum:__anon420
AMF_DATA_TYPE_DATE	libavformat/flv.h	/^    AMF_DATA_TYPE_DATE        = 0x0b,$/;"	e	enum:__anon420
AMF_DATA_TYPE_LONG_STRING	libavformat/flv.h	/^    AMF_DATA_TYPE_LONG_STRING = 0x0c,$/;"	e	enum:__anon420
AMF_DATA_TYPE_MIXEDARRAY	libavformat/flv.h	/^    AMF_DATA_TYPE_MIXEDARRAY  = 0x08,$/;"	e	enum:__anon420
AMF_DATA_TYPE_NULL	libavformat/flv.h	/^    AMF_DATA_TYPE_NULL        = 0x05,$/;"	e	enum:__anon420
AMF_DATA_TYPE_NUMBER	libavformat/flv.h	/^    AMF_DATA_TYPE_NUMBER      = 0x00,$/;"	e	enum:__anon420
AMF_DATA_TYPE_OBJECT	libavformat/flv.h	/^    AMF_DATA_TYPE_OBJECT      = 0x03,$/;"	e	enum:__anon420
AMF_DATA_TYPE_OBJECT_END	libavformat/flv.h	/^    AMF_DATA_TYPE_OBJECT_END  = 0x09,$/;"	e	enum:__anon420
AMF_DATA_TYPE_REFERENCE	libavformat/flv.h	/^    AMF_DATA_TYPE_REFERENCE   = 0x07,$/;"	e	enum:__anon420
AMF_DATA_TYPE_STRING	libavformat/flv.h	/^    AMF_DATA_TYPE_STRING      = 0x02,$/;"	e	enum:__anon420
AMF_DATA_TYPE_UNDEFINED	libavformat/flv.h	/^    AMF_DATA_TYPE_UNDEFINED   = 0x06,$/;"	e	enum:__anon420
AMF_DATA_TYPE_UNSUPPORTED	libavformat/flv.h	/^    AMF_DATA_TYPE_UNSUPPORTED = 0x0d,$/;"	e	enum:__anon420
AMF_END_OF_OBJECT	libavformat/flv.h	43;"	d
AMP_MAX	libavcodec/twinvq.c	210;"	d	file:
AMRContext	libavcodec/amrnbdec.c	/^typedef struct AMRContext {$/;"	s	file:
AMRContext	libavcodec/amrnbdec.c	/^} AMRContext;$/;"	t	typeref:struct:AMRContext	file:
AMRContext	libavcodec/libopencore-amr.c	/^typedef struct AMRContext {$/;"	s	file:
AMRContext	libavcodec/libopencore-amr.c	/^} AMRContext;$/;"	t	typeref:struct:AMRContext	file:
AMRFixed	libavcodec/acelp_vectors.h	/^} AMRFixed;$/;"	t	typeref:struct:__anon122
AMRNBFrame	libavcodec/amrnbdata.h	/^} AMRNBFrame;$/;"	t	typeref:struct:__anon284
AMRNBSubframe	libavcodec/amrnbdata.h	/^} AMRNBSubframe;$/;"	t	typeref:struct:__anon283
AMRWBContext	libavcodec/amrwbdec.c	/^} AMRWBContext;$/;"	t	typeref:struct:__anon64	file:
AMRWBContext	libavcodec/libopencore-amr.c	/^typedef struct AMRWBContext {$/;"	s	file:
AMRWBContext	libavcodec/libopencore-amr.c	/^} AMRWBContext;$/;"	t	typeref:struct:AMRWBContext	file:
AMRWBContext	libavcodec/libvo-amrwbenc.c	/^typedef struct AMRWBContext {$/;"	s	file:
AMRWBContext	libavcodec/libvo-amrwbenc.c	/^} AMRWBContext;$/;"	t	typeref:struct:AMRWBContext	file:
AMRWBFrame	libavcodec/amrwbdata.h	/^} AMRWBFrame;$/;"	t	typeref:struct:__anon111
AMRWBSubFrame	libavcodec/amrwbdata.h	/^} AMRWBSubFrame;$/;"	t	typeref:struct:__anon110
AMRWB_P_DELAY_MAX	libavcodec/amrwbdata.h	47;"	d
AMRWB_P_DELAY_MIN	libavcodec/amrwbdata.h	48;"	d
AMRWB_SFR_SIZE	libavcodec/amrwbdata.h	45;"	d
AMRWB_SFR_SIZE_16k	libavcodec/amrwbdata.h	46;"	d
AMRWB_header	libavformat/amr.c	/^static const char AMRWB_header [] = "#!AMR-WB\\n";$/;"	v	file:
AMR_AGC_ALPHA	libavcodec/amrnbdec.c	95;"	d	file:
AMR_BIT	libavcodec/amrnbdata.h	74;"	d
AMR_BIT	libavcodec/amrwbdata.h	85;"	d
AMR_BLOCK_SIZE	libavcodec/amrnbdec.c	59;"	d	file:
AMR_OF	libavcodec/amrnbdata.h	76;"	d
AMR_OF	libavcodec/amrwbdata.h	87;"	d
AMR_SAMPLE_BOUND	libavcodec/amrnbdec.c	60;"	d	file:
AMR_SAMPLE_SCALE	libavcodec/amrnbdec.c	71;"	d	file:
AMR_SUBFRAME_SIZE	libavcodec/amrnbdata.h	36;"	d
AMR_TILT_GAMMA_T	libavcodec/amrnbdec.c	93;"	d	file:
AMR_TILT_RESPONSE	libavcodec/amrnbdec.c	91;"	d	file:
AMR_USE_16BIT_TABLES	libavcodec/amrwbdec.c	38;"	d	file:
AMR_bitrates	libavcodec/libopencore-amr.c	/^typedef struct AMR_bitrates {$/;"	s	file:
AMR_bitrates	libavcodec/libopencore-amr.c	/^} AMR_bitrates;$/;"	t	typeref:struct:AMR_bitrates	file:
AMR_header	libavformat/amr.c	/^static const char AMR_header [] = "#!AMR\\n";$/;"	v	file:
ANALYZE	libavfilter/libmpcodecs/vf_phase.c	/^            ANALYZE, FULL_ANALYZE, AUTO, AUTO_ANALYZE };$/;"	e	enum:mode	file:
ANIM_TAG	libavformat/anm.c	47;"	d	file:
ANullContext	libavfilter/asrc_anullsrc.c	/^} ANullContext;$/;"	t	typeref:struct:__anon41	file:
AOT_AAC_LC	libavcodec/mpeg4audio.h	/^    AOT_AAC_LC,                \/\/\/< Y                       Low Complexity$/;"	e	enum:AudioObjectType
AOT_AAC_LTP	libavcodec/mpeg4audio.h	/^    AOT_AAC_LTP,               \/\/\/< Y                       Long Term Prediction$/;"	e	enum:AudioObjectType
AOT_AAC_MAIN	libavcodec/mpeg4audio.h	/^    AOT_AAC_MAIN,              \/\/\/< Y                       Main$/;"	e	enum:AudioObjectType
AOT_AAC_SCALABLE	libavcodec/mpeg4audio.h	/^    AOT_AAC_SCALABLE,          \/\/\/< N                       Scalable$/;"	e	enum:AudioObjectType
AOT_AAC_SSR	libavcodec/mpeg4audio.h	/^    AOT_AAC_SSR,               \/\/\/< N (code in SoC repo)    Scalable Sample Rate$/;"	e	enum:AudioObjectType
AOT_ALS	libavcodec/mpeg4audio.h	/^    AOT_ALS,                   \/\/\/< Y                       Audio LosslesS$/;"	e	enum:AudioObjectType
AOT_CELP	libavcodec/mpeg4audio.h	/^    AOT_CELP,                  \/\/\/< N                       Code Excited Linear Prediction$/;"	e	enum:AudioObjectType
AOT_DST	libavcodec/mpeg4audio.h	/^    AOT_DST,                   \/\/\/< N                       Direct Stream Transfer$/;"	e	enum:AudioObjectType
AOT_ER_AAC_ELD	libavcodec/mpeg4audio.h	/^    AOT_ER_AAC_ELD,            \/\/\/< N                       Error Resilient Enhanced Low Delay$/;"	e	enum:AudioObjectType
AOT_ER_AAC_LC	libavcodec/mpeg4audio.h	/^    AOT_ER_AAC_LC,             \/\/\/< N                       Error Resilient Low Complexity$/;"	e	enum:AudioObjectType
AOT_ER_AAC_LD	libavcodec/mpeg4audio.h	/^    AOT_ER_AAC_LD,             \/\/\/< N                       Error Resilient Low Delay$/;"	e	enum:AudioObjectType
AOT_ER_AAC_LTP	libavcodec/mpeg4audio.h	/^    AOT_ER_AAC_LTP       = 19, \/\/\/< N                       Error Resilient Long Term Prediction$/;"	e	enum:AudioObjectType
AOT_ER_AAC_SCALABLE	libavcodec/mpeg4audio.h	/^    AOT_ER_AAC_SCALABLE,       \/\/\/< N                       Error Resilient Scalable$/;"	e	enum:AudioObjectType
AOT_ER_BSAC	libavcodec/mpeg4audio.h	/^    AOT_ER_BSAC,               \/\/\/< N                       Error Resilient Bit-Sliced Arithmetic Coding$/;"	e	enum:AudioObjectType
AOT_ER_CELP	libavcodec/mpeg4audio.h	/^    AOT_ER_CELP,               \/\/\/< N                       Error Resilient Code Excited Linear Prediction$/;"	e	enum:AudioObjectType
AOT_ER_HILN	libavcodec/mpeg4audio.h	/^    AOT_ER_HILN,               \/\/\/< N                       Error Resilient Harmonic and Individual Lines plus Noise$/;"	e	enum:AudioObjectType
AOT_ER_HVXC	libavcodec/mpeg4audio.h	/^    AOT_ER_HVXC,               \/\/\/< N                       Error Resilient Harmonic Vector eXcitation Coding$/;"	e	enum:AudioObjectType
AOT_ER_PARAM	libavcodec/mpeg4audio.h	/^    AOT_ER_PARAM,              \/\/\/< N                       Error Resilient Parametric$/;"	e	enum:AudioObjectType
AOT_ER_TWINVQ	libavcodec/mpeg4audio.h	/^    AOT_ER_TWINVQ,             \/\/\/< N                       Error Resilient Twin Vector Quantizer$/;"	e	enum:AudioObjectType
AOT_ESCAPE	libavcodec/mpeg4audio.h	/^    AOT_ESCAPE,                \/\/\/< Y                       Escape Value$/;"	e	enum:AudioObjectType
AOT_HVXC	libavcodec/mpeg4audio.h	/^    AOT_HVXC,                  \/\/\/< N                       Harmonic Vector eXcitation Coding$/;"	e	enum:AudioObjectType
AOT_L1	libavcodec/mpeg4audio.h	/^    AOT_L1,                    \/\/\/< Y                       Layer 1$/;"	e	enum:AudioObjectType
AOT_L2	libavcodec/mpeg4audio.h	/^    AOT_L2,                    \/\/\/< Y                       Layer 2$/;"	e	enum:AudioObjectType
AOT_L3	libavcodec/mpeg4audio.h	/^    AOT_L3,                    \/\/\/< Y                       Layer 3$/;"	e	enum:AudioObjectType
AOT_LD_SURROUND	libavcodec/mpeg4audio.h	/^    AOT_LD_SURROUND,           \/\/\/< N                       Low Delay MPEG Surround$/;"	e	enum:AudioObjectType
AOT_MAINSYNTH	libavcodec/mpeg4audio.h	/^    AOT_MAINSYNTH,             \/\/\/< N                       Main Synthesis$/;"	e	enum:AudioObjectType
AOT_MIDI	libavcodec/mpeg4audio.h	/^    AOT_MIDI,                  \/\/\/< N                       General MIDI$/;"	e	enum:AudioObjectType
AOT_NULL	libavcodec/mpeg4audio.h	/^    AOT_NULL,$/;"	e	enum:AudioObjectType
AOT_PS	libavcodec/mpeg4audio.h	/^    AOT_PS,                    \/\/\/< N                       Parametric Stereo$/;"	e	enum:AudioObjectType
AOT_SAFX	libavcodec/mpeg4audio.h	/^    AOT_SAFX,                  \/\/\/< N                       Algorithmic Synthesis and Audio Effects$/;"	e	enum:AudioObjectType
AOT_SAOC	libavcodec/mpeg4audio.h	/^    AOT_SAOC,                  \/\/\/< N                       Spatial Audio Object Coding$/;"	e	enum:AudioObjectType
AOT_SBR	libavcodec/mpeg4audio.h	/^    AOT_SBR,                   \/\/\/< Y                       Spectral Band Replication$/;"	e	enum:AudioObjectType
AOT_SLS	libavcodec/mpeg4audio.h	/^    AOT_SLS,                   \/\/\/< N                       Scalable LosslesS$/;"	e	enum:AudioObjectType
AOT_SLS_NON_CORE	libavcodec/mpeg4audio.h	/^    AOT_SLS_NON_CORE,          \/\/\/< N                       Scalable LosslesS (non core)$/;"	e	enum:AudioObjectType
AOT_SMR_MAIN	libavcodec/mpeg4audio.h	/^    AOT_SMR_MAIN,              \/\/\/< N                       Symbolic Music Representation Main$/;"	e	enum:AudioObjectType
AOT_SMR_SIMPLE	libavcodec/mpeg4audio.h	/^    AOT_SMR_SIMPLE,            \/\/\/< N                       Symbolic Music Representation Simple$/;"	e	enum:AudioObjectType
AOT_SSC	libavcodec/mpeg4audio.h	/^    AOT_SSC,                   \/\/\/< N                       SinuSoidal Coding$/;"	e	enum:AudioObjectType
AOT_SURROUND	libavcodec/mpeg4audio.h	/^    AOT_SURROUND,              \/\/\/< N                       MPEG Surround$/;"	e	enum:AudioObjectType
AOT_TTSI	libavcodec/mpeg4audio.h	/^    AOT_TTSI             = 12, \/\/\/< N                       Text-To-Speech Interface$/;"	e	enum:AudioObjectType
AOT_TWINVQ	libavcodec/mpeg4audio.h	/^    AOT_TWINVQ,                \/\/\/< N                       Twin Vector Quantizer$/;"	e	enum:AudioObjectType
AOT_USAC	libavcodec/mpeg4audio.h	/^    AOT_USAC,                  \/\/\/< N                       Unified Speech and Audio Coding$/;"	e	enum:AudioObjectType
AOT_USAC_NOSBR	libavcodec/mpeg4audio.h	/^    AOT_USAC_NOSBR,            \/\/\/< N                       Unified Speech and Audio Coding (no SBR)$/;"	e	enum:AudioObjectType
AOT_WAVESYNTH	libavcodec/mpeg4audio.h	/^    AOT_WAVESYNTH,             \/\/\/< N                       Wavetable Synthesis$/;"	e	enum:AudioObjectType
APCK_COEF	libswscale/swscale_internal.h	48;"	d
APCK_COEF	libswscale/swscale_internal.h	52;"	d
APCK_PTR2	libswscale/swscale_internal.h	47;"	d
APCK_PTR2	libswscale/swscale_internal.h	51;"	d
APCK_SIZE	libswscale/swscale_internal.h	49;"	d
APCK_SIZE	libswscale/swscale_internal.h	53;"	d
APECompressionLevel	libavcodec/apedec.c	/^enum APECompressionLevel {$/;"	g	file:
APEContext	libavcodec/apedec.c	/^typedef struct APEContext {$/;"	s	file:
APEContext	libavcodec/apedec.c	/^} APEContext;$/;"	t	typeref:struct:APEContext	file:
APEContext	libavformat/ape.c	/^} APEContext;$/;"	t	typeref:struct:__anon335	file:
APEFilter	libavcodec/apedec.c	/^typedef struct APEFilter {$/;"	s	file:
APEFilter	libavcodec/apedec.c	/^} APEFilter;$/;"	t	typeref:struct:APEFilter	file:
APEFrame	libavformat/ape.c	/^} APEFrame;$/;"	t	typeref:struct:__anon334	file:
APEPredictor	libavcodec/apedec.c	/^typedef struct APEPredictor {$/;"	s	file:
APEPredictor	libavcodec/apedec.c	/^} APEPredictor;$/;"	t	typeref:struct:APEPredictor	file:
APERangecoder	libavcodec/apedec.c	/^typedef struct APERangecoder {$/;"	s	file:
APERangecoder	libavcodec/apedec.c	/^} APERangecoder;$/;"	t	typeref:struct:APERangecoder	file:
APERice	libavcodec/apedec.c	/^typedef struct APERice {$/;"	s	file:
APERice	libavcodec/apedec.c	/^} APERice;$/;"	t	typeref:struct:APERice	file:
APESIGN	libavcodec/apedec.c	/^static inline int APESIGN(int32_t x) {$/;"	f	file:
APE_EXTRADATA_SIZE	libavformat/ape.c	42;"	d	file:
APE_FILTER_LEVELS	libavcodec/apedec.c	71;"	d	file:
APE_FRAMECODE_MONO_SILENCE	libavcodec/apedec.c	39;"	d	file:
APE_FRAMECODE_PSEUDO_STEREO	libavcodec/apedec.c	41;"	d	file:
APE_FRAMECODE_STEREO_SILENCE	libavcodec/apedec.c	40;"	d	file:
APE_MAX_VERSION	libavformat/ape.c	31;"	d	file:
APE_MIN_VERSION	libavformat/ape.c	30;"	d	file:
APE_TAG_FLAG_CONTAINS_HEADER	libavformat/apetag.c	30;"	d	file:
APE_TAG_FLAG_IS_HEADER	libavformat/apetag.c	31;"	d	file:
APE_TAG_FOOTER_BYTES	libavformat/apetag.c	29;"	d	file:
APE_TAG_VERSION	libavformat/apetag.c	28;"	d	file:
APP0	libavcodec/mjpeg.h	/^    APP0  = 0xe0,$/;"	e	enum:__anon218
APP1	libavcodec/mjpeg.h	/^    APP1  = 0xe1,$/;"	e	enum:__anon218
APP10	libavcodec/mjpeg.h	/^    APP10 = 0xea,$/;"	e	enum:__anon218
APP11	libavcodec/mjpeg.h	/^    APP11 = 0xeb,$/;"	e	enum:__anon218
APP12	libavcodec/mjpeg.h	/^    APP12 = 0xec,$/;"	e	enum:__anon218
APP13	libavcodec/mjpeg.h	/^    APP13 = 0xed,$/;"	e	enum:__anon218
APP14	libavcodec/mjpeg.h	/^    APP14 = 0xee,$/;"	e	enum:__anon218
APP15	libavcodec/mjpeg.h	/^    APP15 = 0xef,$/;"	e	enum:__anon218
APP2	libavcodec/mjpeg.h	/^    APP2  = 0xe2,$/;"	e	enum:__anon218
APP3	libavcodec/mjpeg.h	/^    APP3  = 0xe3,$/;"	e	enum:__anon218
APP4	libavcodec/mjpeg.h	/^    APP4  = 0xe4,$/;"	e	enum:__anon218
APP5	libavcodec/mjpeg.h	/^    APP5  = 0xe5,$/;"	e	enum:__anon218
APP6	libavcodec/mjpeg.h	/^    APP6  = 0xe6,$/;"	e	enum:__anon218
APP7	libavcodec/mjpeg.h	/^    APP7  = 0xe7,$/;"	e	enum:__anon218
APP8	libavcodec/mjpeg.h	/^    APP8  = 0xe8,$/;"	e	enum:__anon218
APP9	libavcodec/mjpeg.h	/^    APP9  = 0xe9,$/;"	e	enum:__anon218
APPLY_C_PREDICTOR	libavcodec/truemotion1.c	522;"	d	file:
APPLY_C_PREDICTOR_24	libavcodec/truemotion1.c	539;"	d	file:
APPLY_WINDOW_INT16	libavcodec/x86/dsputil_yasm.asm	/^APPLY_WINDOW_INT16 mmxext,     0, 0$/;"	l
APPLY_WINDOW_INT16	libavcodec/x86/dsputil_yasm.asm	/^APPLY_WINDOW_INT16 mmxext_ba,  1, 0$/;"	l
APPLY_WINDOW_INT16	libavcodec/x86/dsputil_yasm.asm	/^APPLY_WINDOW_INT16 sse2,       0, 0$/;"	l
APPLY_WINDOW_INT16	libavcodec/x86/dsputil_yasm.asm	/^APPLY_WINDOW_INT16 sse2_ba,    1, 0$/;"	l
APPLY_WINDOW_INT16	libavcodec/x86/dsputil_yasm.asm	/^APPLY_WINDOW_INT16 ssse3,      0, 1$/;"	l
APPLY_WINDOW_INT16	libavcodec/x86/dsputil_yasm.asm	/^APPLY_WINDOW_INT16 ssse3_atom, 0, 1$/;"	l
APPLY_Y_PREDICTOR	libavcodec/truemotion1.c	557;"	d	file:
APPLY_Y_PREDICTOR_24	libavcodec/truemotion1.c	574;"	d	file:
AR	config.mak	/^AR=\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/bin\/arm-linux-androideabi-ar$/;"	m
ARCH	config.mak	/^ARCH=c$/;"	m
ARCH_ALPHA	config.h	14;"	d
ARCH_ARM	config.h	15;"	d
ARCH_AVR32	config.h	16;"	d
ARCH_AVR32_AP	config.h	17;"	d
ARCH_AVR32_UC	config.h	18;"	d
ARCH_BFIN	config.h	19;"	d
ARCH_HEADERS	libavutil/Makefile	/^ARCH_HEADERS = bswap.h intmath.h intreadwrite.h timer.h$/;"	m
ARCH_IA64	config.h	20;"	d
ARCH_M68K	config.h	21;"	d
ARCH_MIPS	config.h	22;"	d
ARCH_MIPS64	config.h	23;"	d
ARCH_PARISC	config.h	24;"	d
ARCH_PPC	config.h	25;"	d
ARCH_PPC64	config.h	26;"	d
ARCH_S390	config.h	27;"	d
ARCH_SH4	config.h	28;"	d
ARCH_SPARC	config.h	29;"	d
ARCH_SPARC64	config.h	30;"	d
ARCH_TOMI	config.h	31;"	d
ARCH_X86	config.h	32;"	d
ARCH_X86_32	config.h	33;"	d
ARCH_X86_64	config.h	34;"	d
AREF	Makefile	/^AREF = fate-acodec-aref$/;"	m
ARG_COEFF	libswscale/bfin/internal_bfin.S	/^#define ARG_COEFF 28$/;"	d
ARG_OUT	libswscale/bfin/internal_bfin.S	/^#define ARG_OUT   20$/;"	d
ARG_PRETTY_GUID	libavformat/wtvdec.c	39;"	d	file:
ARG_W	libswscale/bfin/internal_bfin.S	/^#define ARG_W     24$/;"	d
ARG_chromStride	libswscale/bfin/internal_bfin.S	/^#define ARG_chromStride 36$/;"	d
ARG_height	libswscale/bfin/internal_bfin.S	/^#define ARG_height      28$/;"	d
ARG_lumStride	libswscale/bfin/internal_bfin.S	/^#define ARG_lumStride   32$/;"	d
ARG_srcStride	libswscale/bfin/internal_bfin.S	/^#define ARG_srcStride   40$/;"	d
ARG_vdst	libswscale/bfin/internal_bfin.S	/^#define ARG_vdst        20$/;"	d
ARG_width	libswscale/bfin/internal_bfin.S	/^#define ARG_width       24$/;"	d
ARTS_VO_TYPE	libavcodec/mpeg4video.h	41;"	d
AS	config.mak	/^AS=\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/bin\/arm-linux-androideabi-gcc$/;"	m
ASDEP	config.mak	/^ASDEP=$/;"	m
ASFContext	libavformat/asfdec.c	/^} ASFContext;$/;"	t	typeref:struct:__anon332	file:
ASFContext	libavformat/asfenc.c	/^} ASFContext;$/;"	t	typeref:struct:__anon470	file:
ASFIndex	libavformat/asf.h	/^} ASFIndex;$/;"	t	typeref:struct:__anon401
ASFLAGS	config.mak	/^ASFLAGS= -fPIC -DANDROID  -g$/;"	m
ASFMainHeader	libavformat/asf.h	/^} ASFMainHeader;$/;"	t	typeref:struct:__anon400
ASFStream	libavformat/asf.h	/^} ASFStream;$/;"	t	typeref:struct:__anon399
ASF_INDEXED_INTERVAL	libavformat/asfenc.c	31;"	d	file:
ASF_INDEX_BLOCK	libavformat/asfenc.c	32;"	d	file:
ASF_MAX_STREAMS	libavformat/asfdec.c	79;"	d	file:
ASF_PACKET_ERROR_CORRECTION_DATA_SIZE	libavformat/asfenc.c	34;"	d	file:
ASF_PACKET_ERROR_CORRECTION_FLAGS	libavformat/asfenc.c	35;"	d	file:
ASF_PACKET_ERROR_CORRECTION_FLAGS_FIELD_SIZE	libavformat/asfenc.c	41;"	d	file:
ASF_PACKET_ERROR_CORRECTION_FLAGS_FIELD_SIZE	libavformat/asfenc.c	43;"	d	file:
ASF_PACKET_FLAG_ERROR_CORRECTION_PRESENT	libavformat/asf.h	114;"	d
ASF_PAYLOAD_FLAGS	libavformat/asfenc.c	55;"	d	file:
ASF_PAYLOAD_LENGTH_FIELD_SIZE	libavformat/asfenc.c	137;"	d	file:
ASF_PAYLOAD_LENGTH_FIELD_SIZE	libavformat/asfenc.c	140;"	d	file:
ASF_PAYLOAD_LENGTH_FIELD_SIZE	libavformat/asfenc.c	143;"	d	file:
ASF_PAYLOAD_MEDIA_OBJECT_NUMBER_FIELD_SIZE	libavformat/asfenc.c	124;"	d	file:
ASF_PAYLOAD_MEDIA_OBJECT_NUMBER_FIELD_SIZE	libavformat/asfenc.c	127;"	d	file:
ASF_PAYLOAD_MEDIA_OBJECT_NUMBER_FIELD_SIZE	libavformat/asfenc.c	130;"	d	file:
ASF_PAYLOAD_MEDIA_OBJECT_NUMBER_FIELD_SIZE	libavformat/asfenc.c	133;"	d	file:
ASF_PAYLOAD_OFFSET_INTO_MEDIA_OBJECT_FIELD_SIZE	libavformat/asfenc.c	111;"	d	file:
ASF_PAYLOAD_OFFSET_INTO_MEDIA_OBJECT_FIELD_SIZE	libavformat/asfenc.c	114;"	d	file:
ASF_PAYLOAD_OFFSET_INTO_MEDIA_OBJECT_FIELD_SIZE	libavformat/asfenc.c	117;"	d	file:
ASF_PAYLOAD_OFFSET_INTO_MEDIA_OBJECT_FIELD_SIZE	libavformat/asfenc.c	120;"	d	file:
ASF_PAYLOAD_REPLICATED_DATA_LENGTH	libavformat/asfenc.c	160;"	d	file:
ASF_PAYLOAD_REPLICATED_DATA_LENGTH_FIELD_SIZE	libavformat/asfenc.c	101;"	d	file:
ASF_PAYLOAD_REPLICATED_DATA_LENGTH_FIELD_SIZE	libavformat/asfenc.c	104;"	d	file:
ASF_PAYLOAD_REPLICATED_DATA_LENGTH_FIELD_SIZE	libavformat/asfenc.c	107;"	d	file:
ASF_PAYLOAD_REPLICATED_DATA_LENGTH_FIELD_SIZE	libavformat/asfenc.c	98;"	d	file:
ASF_PL_FLAG_KEY_FRAME	libavformat/asf.h	173;"	d
ASF_PL_FLAG_MEDIA_OBJECT_NUMBER_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	161;"	d
ASF_PL_FLAG_MEDIA_OBJECT_NUMBER_LENGTH_FIELD_IS_DWORD	libavformat/asf.h	163;"	d
ASF_PL_FLAG_MEDIA_OBJECT_NUMBER_LENGTH_FIELD_IS_WORD	libavformat/asf.h	162;"	d
ASF_PL_FLAG_OFFSET_INTO_MEDIA_OBJECT_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	156;"	d
ASF_PL_FLAG_OFFSET_INTO_MEDIA_OBJECT_LENGTH_FIELD_IS_DWORD	libavformat/asf.h	158;"	d
ASF_PL_FLAG_OFFSET_INTO_MEDIA_OBJECT_LENGTH_FIELD_IS_WORD	libavformat/asf.h	157;"	d
ASF_PL_FLAG_PAYLOAD_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	169;"	d
ASF_PL_FLAG_PAYLOAD_LENGTH_FIELD_IS_WORD	libavformat/asf.h	170;"	d
ASF_PL_FLAG_REPLICATED_DATA_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	151;"	d
ASF_PL_FLAG_REPLICATED_DATA_LENGTH_FIELD_IS_DWORD	libavformat/asf.h	153;"	d
ASF_PL_FLAG_REPLICATED_DATA_LENGTH_FIELD_IS_WORD	libavformat/asf.h	152;"	d
ASF_PL_FLAG_STREAM_NUMBER_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	166;"	d
ASF_PL_MASK_MEDIA_OBJECT_NUMBER_LENGTH_FIELD_SIZE	libavformat/asf.h	164;"	d
ASF_PL_MASK_OFFSET_INTO_MEDIA_OBJECT_LENGTH_FIELD_SIZE	libavformat/asf.h	159;"	d
ASF_PL_MASK_PAYLOAD_LENGTH_FIELD_SIZE	libavformat/asf.h	171;"	d
ASF_PL_MASK_REPLICATED_DATA_LENGTH_FIELD_SIZE	libavformat/asf.h	154;"	d
ASF_PL_MASK_STREAM_NUMBER_LENGTH_FIELD_SIZE	libavformat/asf.h	167;"	d
ASF_PPI_FLAG_MULTIPLE_PAYLOADS_PRESENT	libavformat/asf.h	133;"	d
ASF_PPI_FLAG_PACKET_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	145;"	d
ASF_PPI_FLAG_PACKET_LENGTH_FIELD_IS_DWORD	libavformat/asf.h	147;"	d
ASF_PPI_FLAG_PACKET_LENGTH_FIELD_IS_WORD	libavformat/asf.h	146;"	d
ASF_PPI_FLAG_PADDING_LENGTH_FIELD_IS_BYTE	libavformat/asf.h	140;"	d
ASF_PPI_FLAG_PADDING_LENGTH_FIELD_IS_DWORD	libavformat/asf.h	142;"	d
ASF_PPI_FLAG_PADDING_LENGTH_FIELD_IS_WORD	libavformat/asf.h	141;"	d
ASF_PPI_FLAG_SEQUENCE_FIELD_IS_BYTE	libavformat/asf.h	135;"	d
ASF_PPI_FLAG_SEQUENCE_FIELD_IS_DWORD	libavformat/asf.h	137;"	d
ASF_PPI_FLAG_SEQUENCE_FIELD_IS_WORD	libavformat/asf.h	136;"	d
ASF_PPI_LENGTH_TYPE_FLAGS	libavformat/asfenc.c	53;"	d	file:
ASF_PPI_MASK_PACKET_LENGTH_FIELD_SIZE	libavformat/asf.h	148;"	d
ASF_PPI_MASK_PADDING_LENGTH_FIELD_SIZE	libavformat/asf.h	143;"	d
ASF_PPI_MASK_SEQUENCE_FIELD_SIZE	libavformat/asf.h	138;"	d
ASF_PPI_PACKET_LENGTH_FIELD_SIZE	libavformat/asfenc.c	72;"	d	file:
ASF_PPI_PACKET_LENGTH_FIELD_SIZE	libavformat/asfenc.c	75;"	d	file:
ASF_PPI_PACKET_LENGTH_FIELD_SIZE	libavformat/asfenc.c	78;"	d	file:
ASF_PPI_PACKET_LENGTH_FIELD_SIZE	libavformat/asfenc.c	81;"	d	file:
ASF_PPI_PADDING_LENGTH_FIELD_SIZE	libavformat/asfenc.c	85;"	d	file:
ASF_PPI_PADDING_LENGTH_FIELD_SIZE	libavformat/asfenc.c	88;"	d	file:
ASF_PPI_PADDING_LENGTH_FIELD_SIZE	libavformat/asfenc.c	91;"	d	file:
ASF_PPI_PADDING_LENGTH_FIELD_SIZE	libavformat/asfenc.c	94;"	d	file:
ASF_PPI_PROPERTY_FLAGS	libavformat/asfenc.c	46;"	d	file:
ASF_PPI_SEQUENCE_FIELD_SIZE	libavformat/asfenc.c	58;"	d	file:
ASF_PPI_SEQUENCE_FIELD_SIZE	libavformat/asfenc.c	61;"	d	file:
ASF_PPI_SEQUENCE_FIELD_SIZE	libavformat/asfenc.c	64;"	d	file:
ASF_PPI_SEQUENCE_FIELD_SIZE	libavformat/asfenc.c	67;"	d	file:
ASMALIGN	libavfilter/libmpcodecs/mp_image.h	37;"	d
ASQRT	libavcodec/eaidct.c	30;"	d	file:
ASS	libavcodec/ass_split.h	/^} ASS;$/;"	t	typeref:struct:__anon251
ASSCodesCallbacks	libavcodec/ass_split.h	/^} ASSCodesCallbacks;$/;"	t	typeref:struct:__anon252
ASSContext	libavformat/assdec.c	/^typedef struct ASSContext{$/;"	s	file:
ASSContext	libavformat/assdec.c	/^}ASSContext;$/;"	t	typeref:struct:ASSContext	file:
ASSContext	libavformat/assenc.c	/^typedef struct ASSContext{$/;"	s	file:
ASSContext	libavformat/assenc.c	/^}ASSContext;$/;"	t	typeref:struct:ASSContext	file:
ASSConvertFunc	libavcodec/ass_split.c	/^typedef int (*ASSConvertFunc)(void *dest, const char *buf, int len);$/;"	t	file:
ASSDialog	libavcodec/ass_split.h	/^} ASSDialog;$/;"	t	typeref:struct:__anon250
ASSERT_ALIGNED	libavcodec/ppc/h264_template_altivec.c	22;"	d	file:
ASSERT_ALIGNED	libavcodec/ppc/h264_template_altivec.c	24;"	d	file:
ASSFieldType	libavcodec/ass_split.c	/^} ASSFieldType;$/;"	t	typeref:enum:__anon143	file:
ASSFields	libavcodec/ass_split.c	/^} ASSFields;$/;"	t	typeref:struct:__anon144	file:
ASSIGN_LF	libavcodec/x86/vc1dsp_mmx.c	783;"	d	file:
ASSScriptInfo	libavcodec/ass_split.h	/^} ASSScriptInfo;$/;"	t	typeref:struct:__anon248
ASSSection	libavcodec/ass_split.c	/^} ASSSection;$/;"	t	typeref:struct:__anon145	file:
ASSSplitContext	libavcodec/ass_split.c	/^struct ASSSplitContext {$/;"	s	file:
ASSSplitContext	libavcodec/ass_split.h	/^typedef struct ASSSplitContext ASSSplitContext;$/;"	t	typeref:struct:ASSSplitContext
ASSStyle	libavcodec/ass_split.h	/^} ASSStyle;$/;"	t	typeref:struct:__anon249
ASS_ALGN	libavcodec/ass_split.c	/^    ASS_ALGN,$/;"	e	enum:__anon143	file:
ASS_COLOR	libavcodec/ass_split.c	/^    ASS_COLOR,$/;"	e	enum:__anon143	file:
ASS_DEFAULT_ALIGNMENT	libavcodec/ass.h	38;"	d
ASS_DEFAULT_BACK_COLOR	libavcodec/ass.h	34;"	d
ASS_DEFAULT_BOLD	libavcodec/ass.h	35;"	d
ASS_DEFAULT_COLOR	libavcodec/ass.h	33;"	d
ASS_DEFAULT_FONT	libavcodec/ass.h	31;"	d
ASS_DEFAULT_FONT_SIZE	libavcodec/ass.h	32;"	d
ASS_DEFAULT_ITALIC	libavcodec/ass.h	36;"	d
ASS_DEFAULT_UNDERLINE	libavcodec/ass.h	37;"	d
ASS_FLT	libavcodec/ass_split.c	/^    ASS_FLT,$/;"	e	enum:__anon143	file:
ASS_INT	libavcodec/ass_split.c	/^    ASS_INT,$/;"	e	enum:__anon143	file:
ASS_STR	libavcodec/ass_split.c	/^    ASS_STR,$/;"	e	enum:__anon143	file:
ASS_TIMESTAMP	libavcodec/ass_split.c	/^    ASS_TIMESTAMP,$/;"	e	enum:__anon143	file:
ASV1Context	libavcodec/asv1.c	/^typedef struct ASV1Context{$/;"	s	file:
ASV1Context	libavcodec/asv1.c	/^} ASV1Context;$/;"	t	typeref:struct:ASV1Context	file:
ASV2_LEVEL_VLC_BITS	libavcodec/asv1.c	37;"	d	file:
AS_DEPFLAGS	config.mak	/^AS_DEPFLAGS=-MMD -MF $(@:.o=.d) -MT $@$/;"	m
AT	libavcodec/alpha/regdef.h	61;"	d
AT1Ctx	libavcodec/atrac1.c	/^} AT1Ctx;$/;"	t	typeref:struct:__anon120	file:
AT1SUCtx	libavcodec/atrac1.c	/^} AT1SUCtx;$/;"	t	typeref:struct:__anon119	file:
AT1_FRAME_SIZE	libavcodec/atrac1.c	47;"	d	file:
AT1_MAX_BFU	libavcodec/atrac1.c	44;"	d	file:
AT1_MAX_CHANNELS	libavcodec/atrac1.c	49;"	d	file:
AT1_QMF_BANDS	libavcodec/atrac1.c	51;"	d	file:
AT1_SU_MAX_BITS	libavcodec/atrac1.c	48;"	d	file:
AT1_SU_SAMPLES	libavcodec/atrac1.c	46;"	d	file:
AT1_SU_SIZE	libavcodec/atrac1.c	45;"	d	file:
AT1_SU_SIZE	libavformat/aea.c	28;"	d	file:
ATH_ADD	libavcodec/aacpsy.c	275;"	d	file:
ATOM_PREAMBLE_SIZE	tools/qt-faststart.c	74;"	d	file:
ATRAC3Context	libavcodec/atrac3.c	/^} ATRAC3Context;$/;"	t	typeref:struct:__anon131	file:
ATTR_BLINK	libavcodec/ansi.c	34;"	d	file:
ATTR_BOLD	libavcodec/ansi.c	31;"	d	file:
ATTR_CONCEALED	libavcodec/ansi.c	36;"	d	file:
ATTR_FAINT	libavcodec/ansi.c	32;"	d	file:
ATTR_NAME_TYPE_INT	libavformat/rtpdec_mpeg4.c	71;"	d	file:
ATTR_NAME_TYPE_STR	libavformat/rtpdec_mpeg4.c	72;"	d	file:
ATTR_REVERSE	libavcodec/ansi.c	35;"	d	file:
ATTR_UNDERLINE	libavcodec/ansi.c	33;"	d	file:
AUDIO_BLOCK	libavcodec/bethsoftvideo.h	/^    AUDIO_BLOCK         = 0x7d,$/;"	e	enum:BethsoftVidBlockType
AUDIO_BLOCK_SIZE	libavdevice/oss_audio.c	44;"	d	file:
AUDIO_DIFF_AVG_NB	ffplay.c	78;"	d	file:
AUDIO_FIFO_SIZE	libavformat/swf.h	57;"	d
AUDIO_ID	libavformat/mpeg.h	41;"	d
AUDIO_ID	libavformat/mpegvideodec.c	32;"	d	file:
AUDIO_INBUF_SIZE	doc/examples/encoding-example.c	42;"	d	file:
AUDIO_REFILL_THRESH	doc/examples/encoding-example.c	43;"	d	file:
AUDIO_SAMPLING_RATE	libavformat/mtv.c	34;"	d	file:
AUDIO_SID	libavformat/mtv.c	36;"	d	file:
AUDIO_STREAM_INDEX	libavformat/mxg.c	28;"	d	file:
AUDI_TAG	libavformat/wc3movie.c	46;"	d	file:
AUD_CHUNK_PREAMBLE_SIZE	libavformat/westwood.c	40;"	d	file:
AUD_CHUNK_SIGNATURE	libavformat/westwood.c	41;"	d	file:
AUD_HEADER_SIZE	libavformat/westwood.c	39;"	d	file:
AUHeaders	libavformat/rtpdec_mpeg4.c	/^    struct AUHeaders {$/;"	s	struct:PayloadContext	file:
AUTO	libavfilter/libmpcodecs/vf_phase.c	/^            ANALYZE, FULL_ANALYZE, AUTO, AUTO_ANALYZE };$/;"	e	enum:mode	file:
AUTO_ANALYZE	libavfilter/libmpcodecs/vf_phase.c	/^            ANALYZE, FULL_ANALYZE, AUTO, AUTO_ANALYZE };$/;"	e	enum:mode	file:
AU_UNKNOWN_SIZE	libavformat/au.c	36;"	d	file:
AU_UNKNOWN_SIZE	libavformat/sol.c	31;"	d	file:
AVAES	libavutil/aes.c	/^typedef struct AVAES{$/;"	s	file:
AVAES	libavutil/aes.c	/^}AVAES;$/;"	t	typeref:struct:AVAES	file:
AVAudioConvert	libavcodec/audioconvert.c	/^struct AVAudioConvert {$/;"	s	file:
AVAudioConvert	libavcodec/audioconvert.h	/^typedef struct AVAudioConvert AVAudioConvert;$/;"	t	typeref:struct:AVAudioConvert
AVAudioServiceType	libavcodec/avcodec.h	/^enum AVAudioServiceType {$/;"	g
AVBitStreamFilter	libavcodec/avcodec.h	/^typedef struct AVBitStreamFilter {$/;"	s
AVBitStreamFilter	libavcodec/avcodec.h	/^} AVBitStreamFilter;$/;"	t	typeref:struct:AVBitStreamFilter
AVBitStreamFilterContext	libavcodec/avcodec.h	/^typedef struct AVBitStreamFilterContext {$/;"	s
AVBitStreamFilterContext	libavcodec/avcodec.h	/^} AVBitStreamFilterContext;$/;"	t	typeref:struct:AVBitStreamFilterContext
AVCHROMA_LOC_BOTTOM	libavcodec/avcodec.h	/^    AVCHROMA_LOC_BOTTOM     =6,$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_BOTTOMLEFT	libavcodec/avcodec.h	/^    AVCHROMA_LOC_BOTTOMLEFT =5,$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_CENTER	libavcodec/avcodec.h	/^    AVCHROMA_LOC_CENTER     =2, \/\/\/< mpeg1, jpeg, h263$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_LEFT	libavcodec/avcodec.h	/^    AVCHROMA_LOC_LEFT       =1, \/\/\/< mpeg2\/4, h264 default$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_NB	libavcodec/avcodec.h	/^    AVCHROMA_LOC_NB           , \/\/\/< Not part of ABI$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_TOP	libavcodec/avcodec.h	/^    AVCHROMA_LOC_TOP        =4,$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_TOPLEFT	libavcodec/avcodec.h	/^    AVCHROMA_LOC_TOPLEFT    =3, \/\/\/< DV$/;"	e	enum:AVChromaLocation
AVCHROMA_LOC_UNSPECIFIED	libavcodec/avcodec.h	/^    AVCHROMA_LOC_UNSPECIFIED=0,$/;"	e	enum:AVChromaLocation
AVCODEC_A64COLORS_H	libavcodec/a64colors.h	28;"	d
AVCODEC_A64ENC_H	libavcodec/a64enc.h	28;"	d
AVCODEC_A64TABLES_H	libavcodec/a64tables.h	28;"	d
AVCODEC_AACADTSDEC_H	libavcodec/aacadtsdec.h	24;"	d
AVCODEC_AACDECTAB_H	libavcodec/aacdectab.h	31;"	d
AVCODEC_AACENC_H	libavcodec/aacenc.h	23;"	d
AVCODEC_AACPSY_H	libavcodec/aacpsy.h	23;"	d
AVCODEC_AACSBRDATA_H	libavcodec/aacsbrdata.h	29;"	d
AVCODEC_AACSBR_H	libavcodec/aacsbr.h	30;"	d
AVCODEC_AACTAB_H	libavcodec/aactab.h	31;"	d
AVCODEC_AAC_AC3_PARSER_H	libavcodec/aac_ac3_parser.h	24;"	d
AVCODEC_AAC_H	libavcodec/aac.h	31;"	d
AVCODEC_AAC_TABLEGEN_DECL_H	libavcodec/aac_tablegen_decl.h	24;"	d
AVCODEC_AAC_TABLEGEN_H	libavcodec/aac_tablegen.h	24;"	d
AVCODEC_AANDCTTAB_H	libavcodec/aandcttab.h	25;"	d
AVCODEC_AC3DEC_DATA_H	libavcodec/ac3dec_data.h	23;"	d
AVCODEC_AC3DEC_H	libavcodec/ac3dec.h	51;"	d
AVCODEC_AC3DSP_H	libavcodec/ac3dsp.h	23;"	d
AVCODEC_AC3ENC_H	libavcodec/ac3enc.h	29;"	d
AVCODEC_AC3TAB_H	libavcodec/ac3tab.h	23;"	d
AVCODEC_AC3_H	libavcodec/ac3.h	28;"	d
AVCODEC_AC3_PARSER_H	libavcodec/ac3_parser.h	24;"	d
AVCODEC_ACELP_FILTERS_H	libavcodec/acelp_filters.h	24;"	d
AVCODEC_ACELP_PITCH_DELAY_H	libavcodec/acelp_pitch_delay.h	24;"	d
AVCODEC_ACELP_VECTORS_H	libavcodec/acelp_vectors.h	24;"	d
AVCODEC_ADX_H	libavcodec/adx.h	32;"	d
AVCODEC_ALPHA_ASM_H	libavcodec/alpha/asm.h	23;"	d
AVCODEC_ALPHA_DSPUTIL_ALPHA_H	libavcodec/alpha/dsputil_alpha.h	20;"	d
AVCODEC_ALPHA_REGDEF_H	libavcodec/alpha/regdef.h	24;"	d
AVCODEC_AMRNBDATA_H	libavcodec/amrnbdata.h	30;"	d
AVCODEC_AMRWBDATA_H	libavcodec/amrwbdata.h	28;"	d
AVCODEC_AMR_H	libavcodec/amr.h	24;"	d
AVCODEC_ARM_AAC_H	libavcodec/arm/aac.h	22;"	d
AVCODEC_ARM_ASM_OFFSETS_H	libavcodec/arm/asm-offsets.h	22;"	d
AVCODEC_ARM_DSPUTIL_H	libavcodec/arm/dsputil_arm.h	22;"	d
AVCODEC_ARM_MATHOPS_H	libavcodec/arm/mathops.h	23;"	d
AVCODEC_ARM_MPEGVIDEO_H	libavcodec/arm/mpegvideo_arm.h	20;"	d
AVCODEC_ARM_VP56_ARITH_H	libavcodec/arm/vp56_arith.h	22;"	d
AVCODEC_ARM_VP8_H	libavcodec/arm/vp8.h	20;"	d
AVCODEC_ASS_H	libavcodec/ass.h	23;"	d
AVCODEC_ASS_SPLIT_H	libavcodec/ass_split.h	23;"	d
AVCODEC_ATRAC1DATA_H	libavcodec/atrac1data.h	29;"	d
AVCODEC_ATRAC3DATA_H	libavcodec/atrac3data.h	29;"	d
AVCODEC_ATRAC_H	libavcodec/atrac.h	29;"	d
AVCODEC_AUDIOCONVERT_H	libavcodec/audioconvert.h	24;"	d
AVCODEC_AVCODEC_H	libavcodec/avcodec.h	22;"	d
AVCODEC_AVFFT_H	libavcodec/avfft.h	20;"	d
AVCODEC_AVR32_MATHOPS_H	libavcodec/avr32/mathops.h	23;"	d
AVCODEC_BETHSOFTVIDEO_H	libavcodec/bethsoftvideo.h	23;"	d
AVCODEC_BFIN_CONFIG_BFIN_H	libavcodec/bfin/config_bfin.h	32;"	d
AVCODEC_BFIN_DSPUTIL_BFIN_H	libavcodec/bfin/dsputil_bfin.h	25;"	d
AVCODEC_BFIN_MATHOPS_H	libavcodec/bfin/mathops.h	23;"	d
AVCODEC_BGMC_H	libavcodec/bgmc.h	30;"	d
AVCODEC_BINKDATA_H	libavcodec/binkdata.h	23;"	d
AVCODEC_BMP_H	libavcodec/bmp.h	23;"	d
AVCODEC_BYTESTREAM_H	libavcodec/bytestream.h	23;"	d
AVCODEC_CABAC_H	libavcodec/cabac.h	28;"	d
AVCODEC_CAVSDATA_H	libavcodec/cavsdata.h	23;"	d
AVCODEC_CAVSDSP_H	libavcodec/cavsdsp.h	23;"	d
AVCODEC_CAVS_H	libavcodec/cavs.h	23;"	d
AVCODEC_CBRT_TABLEGEN_H	libavcodec/cbrt_tablegen.h	24;"	d
AVCODEC_CELP_FILTERS_H	libavcodec/celp_filters.h	24;"	d
AVCODEC_CELP_MATH_H	libavcodec/celp_math.h	24;"	d
AVCODEC_CGA_DATA_H	libavcodec/cga_data.h	27;"	d
AVCODEC_COOKDATA_H	libavcodec/cookdata.h	29;"	d
AVCODEC_DCADATA_H	libavcodec/dcadata.h	24;"	d
AVCODEC_DCADSP_H	libavcodec/dcadsp.h	20;"	d
AVCODEC_DCAENC_H	libavcodec/dcaenc.h	23;"	d
AVCODEC_DCAHUFF_H	libavcodec/dcahuff.h	24;"	d
AVCODEC_DCA_H	libavcodec/dca.h	26;"	d
AVCODEC_DCT32_H	libavcodec/dct32.h	20;"	d
AVCODEC_DCTREF_H	libavcodec/dctref.h	23;"	d
AVCODEC_DCT_H	libavcodec/dct.h	25;"	d
AVCODEC_DIRAC_H	libavcodec/dirac.h	23;"	d
AVCODEC_DNXHDDATA_H	libavcodec/dnxhddata.h	23;"	d
AVCODEC_DNXHDENC_H	libavcodec/dnxhdenc.h	25;"	d
AVCODEC_DSPUTIL_H	libavcodec/dsputil.h	31;"	d
AVCODEC_DVDATA_H	libavcodec/dvdata.h	28;"	d
AVCODEC_DV_TABLEGEN_H	libavcodec/dv_tablegen.h	24;"	d
AVCODEC_DV_VLC_DATA_H	libavcodec/dv_vlc_data.h	28;"	d
AVCODEC_DWT_H	libavcodec/dwt.h	22;"	d
AVCODEC_DWT_H	libavcodec/j2k_dwt.h	23;"	d
AVCODEC_DXVA_H	libavcodec/dxva2.h	24;"	d
AVCODEC_DXVA_INTERNAL_H	libavcodec/dxva2_internal.h	24;"	d
AVCODEC_EAC3DEC_DATA_H	libavcodec/eac3dec_data.h	23;"	d
AVCODEC_EAC3ENC_H	libavcodec/eac3enc.h	28;"	d
AVCODEC_ELBG_H	libavcodec/elbg.h	22;"	d
AVCODEC_FAANDCT_H	libavcodec/faandct.h	30;"	d
AVCODEC_FAANIDCT_H	libavcodec/faanidct.h	23;"	d
AVCODEC_FAXCOMPR_H	libavcodec/faxcompr.h	28;"	d
AVCODEC_FFT_H	libavcodec/fft.h	23;"	d
AVCODEC_FFT_INTERNAL_H	libavcodec/fft-internal.h	20;"	d
AVCODEC_FLACDATA_H	libavcodec/flacdata.h	23;"	d
AVCODEC_FLAC_H	libavcodec/flac.h	28;"	d
AVCODEC_FLV_H	libavcodec/flv.h	21;"	d
AVCODEC_FMTCONVERT_H	libavcodec/fmtconvert.h	24;"	d
AVCODEC_G729DATA_H	libavcodec/g729data.h	23;"	d
AVCODEC_GET_BITS_H	libavcodec/get_bits.h	27;"	d
AVCODEC_GOLOMB_H	libavcodec/golomb.h	31;"	d
AVCODEC_GSMDEC_DATA	libavcodec/gsmdec_data.h	23;"	d
AVCODEC_H261DATA_H	libavcodec/h261data.h	28;"	d
AVCODEC_H261_H	libavcodec/h261.h	29;"	d
AVCODEC_H263DATA_H	libavcodec/h263data.h	30;"	d
AVCODEC_H263_H	libavcodec/h263.h	21;"	d
AVCODEC_H263_PARSER_H	libavcodec/h263_parser.h	23;"	d
AVCODEC_H264DATA_H	libavcodec/h264data.h	30;"	d
AVCODEC_H264DSP_H	libavcodec/h264dsp.h	28;"	d
AVCODEC_H264IDCT_INTERNAL_H	libavcodec/h264idct_template.c	31;"	d	file:
AVCODEC_H264PRED_H	libavcodec/h264pred.h	29;"	d
AVCODEC_H264_H	libavcodec/h264.h	29;"	d
AVCODEC_H264_HIGH_DEPTH_H	libavcodec/high_bit_depth.h	45;"	d
AVCODEC_H264_MVPRED_H	libavcodec/h264_mvpred.h	29;"	d
AVCODEC_HUFFMAN_H	libavcodec/huffman.h	24;"	d
AVCODEC_IIRFILTER_H	libavcodec/iirfilter.h	28;"	d
AVCODEC_IMCDATA_H	libavcodec/imcdata.h	25;"	d
AVCODEC_IMGCONVERT_H	libavcodec/imgconvert.h	25;"	d
AVCODEC_INDEO2DATA_H	libavcodec/indeo2data.h	23;"	d
AVCODEC_INDEO3DATA_H	libavcodec/indeo3data.h	23;"	d
AVCODEC_INDEO5DATA_H	libavcodec/indeo5data.h	28;"	d
AVCODEC_INTERNAL_H	libavcodec/internal.h	25;"	d
AVCODEC_INTRAX8HUF_H	libavcodec/intrax8huf.h	20;"	d
AVCODEC_INTRAX8_H	libavcodec/intrax8.h	20;"	d
AVCODEC_IVI_COMMON_H	libavcodec/ivi_common.h	30;"	d
AVCODEC_IVI_DSP_H	libavcodec/ivi_dsp.h	30;"	d
AVCODEC_J2K_H	libavcodec/j2k.h	23;"	d
AVCODEC_JPEGLSDEC_H	libavcodec/jpeglsdec.h	29;"	d
AVCODEC_JPEGLS_H	libavcodec/jpegls.h	29;"	d
AVCODEC_KBDWIN_H	libavcodec/kbdwin.h	20;"	d
AVCODEC_LAGARITHRAC_H	libavcodec/lagarithrac.h	31;"	d
AVCODEC_LCL_H	libavcodec/lcl.h	23;"	d
AVCODEC_LIBDIRAC_H	libavcodec/libdirac.h	27;"	d
AVCODEC_LIBDIRAC_LIBSCHRO_H	libavcodec/libdirac_libschro.h	27;"	d
AVCODEC_LIBSCHROEDINGER_H	libavcodec/libschroedinger.h	27;"	d
AVCODEC_LIBXVID_INTERNAL_H	libavcodec/libxvid_internal.h	22;"	d
AVCODEC_LPC_H	libavcodec/lpc.h	23;"	d
AVCODEC_LSP_H	libavcodec/lsp.h	24;"	d
AVCODEC_LZW_H	libavcodec/lzw.h	31;"	d
AVCODEC_MATHOPS_H	libavcodec/mathops.h	23;"	d
AVCODEC_MAX_AUDIO_FRAME_SIZE	libavcodec/avcodec.h	424;"	d
AVCODEC_MIPS_MATHOPS_H	libavcodec/mips/mathops.h	22;"	d
AVCODEC_MJPEGDEC_H	libavcodec/mjpegdec.h	30;"	d
AVCODEC_MJPEGENC_H	libavcodec/mjpegenc.h	34;"	d
AVCODEC_MJPEG_H	libavcodec/mjpeg.h	34;"	d
AVCODEC_MLP_H	libavcodec/mlp.h	23;"	d
AVCODEC_MLP_PARSER_H	libavcodec/mlp_parser.h	28;"	d
AVCODEC_MOTIONPIXELS_TABLEGEN_H	libavcodec/motionpixels_tablegen.h	24;"	d
AVCODEC_MPC7DATA_H	libavcodec/mpc7data.h	23;"	d
AVCODEC_MPC8DATA_H	libavcodec/mpc8data.h	23;"	d
AVCODEC_MPC8HUFF_H	libavcodec/mpc8huff.h	23;"	d
AVCODEC_MPCDATA_H	libavcodec/mpcdata.h	23;"	d
AVCODEC_MPC_H	libavcodec/mpc.h	30;"	d
AVCODEC_MPEG12DATA_H	libavcodec/mpeg12data.h	29;"	d
AVCODEC_MPEG12DECDATA_H	libavcodec/mpeg12decdata.h	29;"	d
AVCODEC_MPEG12_H	libavcodec/mpeg12.h	23;"	d
AVCODEC_MPEG4AUDIO_H	libavcodec/mpeg4audio.h	23;"	d
AVCODEC_MPEG4DATA_H	libavcodec/mpeg4data.h	29;"	d
AVCODEC_MPEG4VIDEO_H	libavcodec/mpeg4video.h	24;"	d
AVCODEC_MPEG4VIDEO_PARSER_H	libavcodec/mpeg4video_parser.h	24;"	d
AVCODEC_MPEGAUDIODATA_H	libavcodec/mpegaudiodata.h	28;"	d
AVCODEC_MPEGAUDIODECHEADER_H	libavcodec/mpegaudiodecheader.h	28;"	d
AVCODEC_MPEGAUDIODECTAB_H	libavcodec/mpegaudiodectab.h	28;"	d
AVCODEC_MPEGAUDIODSP_H	libavcodec/mpegaudiodsp.h	20;"	d
AVCODEC_MPEGAUDIOTAB_H	libavcodec/mpegaudiotab.h	31;"	d
AVCODEC_MPEGAUDIO_H	libavcodec/mpegaudio.h	27;"	d
AVCODEC_MPEGAUDIO_TABLEGEN_H	libavcodec/mpegaudio_tablegen.h	24;"	d
AVCODEC_MPEGVIDEO_COMMON_H	libavcodec/mpegvideo_common.h	31;"	d
AVCODEC_MPEGVIDEO_H	libavcodec/mpegvideo.h	29;"	d
AVCODEC_MQC_H	libavcodec/mqc.h	23;"	d
AVCODEC_MSGSMDEC_H	libavcodec/msgsmdec.h	23;"	d
AVCODEC_MSMPEG4DATA_H	libavcodec/msmpeg4data.h	31;"	d
AVCODEC_MSMPEG4_H	libavcodec/msmpeg4.h	27;"	d
AVCODEC_MSRLEDEC_H	libavcodec/msrledec.h	23;"	d
AVCODEC_NELLYMOSER_H	libavcodec/nellymoser.h	35;"	d
AVCODEC_OPT_H	libavcodec/opt.h	26;"	d
AVCODEC_PARSER_H	libavcodec/parser.h	24;"	d
AVCODEC_PCM_TABLEGEN_H	libavcodec/pcm_tablegen.h	24;"	d
AVCODEC_PNG_H	libavcodec/png.h	23;"	d
AVCODEC_PNM_H	libavcodec/pnm.h	23;"	d
AVCODEC_PPC_DSPUTIL_ALTIVEC_H	libavcodec/ppc/dsputil_altivec.h	24;"	d
AVCODEC_PPC_MATHOPS_H	libavcodec/ppc/mathops.h	24;"	d
AVCODEC_PPC_REGS_H	libavcodec/ppc/regs.h	22;"	d
AVCODEC_PPC_TYPES_ALTIVEC_H	libavcodec/ppc/types_altivec.h	22;"	d
AVCODEC_PPC_UTIL_ALTIVEC_H	libavcodec/ppc/util_altivec.h	25;"	d
AVCODEC_PS2_MMI_H	libavcodec/ps2/mmi.h	22;"	d
AVCODEC_PSYMODEL_H	libavcodec/psymodel.h	23;"	d
AVCODEC_PS_H	libavcodec/aacps.h	23;"	d
AVCODEC_PUT_BITS_H	libavcodec/put_bits.h	27;"	d
AVCODEC_QCELPDATA_H	libavcodec/qcelpdata.h	23;"	d
AVCODEC_QDM2DATA_H	libavcodec/qdm2data.h	31;"	d
AVCODEC_QDM2_TABLEGEN_H	libavcodec/qdm2_tablegen.h	24;"	d
AVCODEC_RA144_H	libavcodec/ra144.h	23;"	d
AVCODEC_RA288_H	libavcodec/ra288.h	23;"	d
AVCODEC_RANGECODER_H	libavcodec/rangecoder.h	28;"	d
AVCODEC_RATECONTROL_H	libavcodec/ratecontrol.h	24;"	d
AVCODEC_RAW_H	libavcodec/raw.h	28;"	d
AVCODEC_RDFT_H	libavcodec/rdft.h	23;"	d
AVCODEC_RECTANGLE_H	libavcodec/rectangle.h	29;"	d
AVCODEC_RLE_H	libavcodec/rle.h	22;"	d
AVCODEC_RL_H	libavcodec/rl.h	28;"	d
AVCODEC_ROQVIDEO_H	libavcodec/roqvideo.h	23;"	d
AVCODEC_RTJPEG_H	libavcodec/rtjpeg.h	23;"	d
AVCODEC_RV30DATA_H	libavcodec/rv30data.h	28;"	d
AVCODEC_RV34DATA_H	libavcodec/rv34data.h	28;"	d
AVCODEC_RV34VLC_H	libavcodec/rv34vlc.h	28;"	d
AVCODEC_RV34_H	libavcodec/rv34.h	28;"	d
AVCODEC_RV40DATA_H	libavcodec/rv40data.h	28;"	d
AVCODEC_RV40VLC2_H	libavcodec/rv40vlc2.h	28;"	d
AVCODEC_S3TC_H	libavcodec/s3tc.h	23;"	d
AVCODEC_SBR_H	libavcodec/sbr.h	30;"	d
AVCODEC_SGI_H	libavcodec/sgi.h	23;"	d
AVCODEC_SH4_DSPUTIL_SH4_H	libavcodec/sh4/dsputil_sh4.h	20;"	d
AVCODEC_SH4_SH4_H	libavcodec/sh4/sh4.h	22;"	d
AVCODEC_SIMPLE_IDCT_H	libavcodec/simple_idct.h	29;"	d
AVCODEC_SINEWIN_H	libavcodec/sinewin.h	22;"	d
AVCODEC_SINEWIN_TABLEGEN_H	libavcodec/sinewin_tablegen.h	24;"	d
AVCODEC_SIPR16KDATA_H	libavcodec/sipr16kdata.h	25;"	d
AVCODEC_SIPRDATA_H	libavcodec/siprdata.h	25;"	d
AVCODEC_SIPR_H	libavcodec/sipr.h	25;"	d
AVCODEC_SNOW_H	libavcodec/snow.h	23;"	d
AVCODEC_SP5X_H	libavcodec/sp5x.h	23;"	d
AVCODEC_SPARC_DSPUTIL_VIS_H	libavcodec/sparc/dsputil_vis.h	20;"	d
AVCODEC_SPARC_VIS_H	libavcodec/sparc/vis.h	43;"	d
AVCODEC_SVQ1ENC_CB_H	libavcodec/svq1enc_cb.h	28;"	d
AVCODEC_SVQ1_CB_H	libavcodec/svq1_cb.h	32;"	d
AVCODEC_SVQ1_H	libavcodec/svq1.h	36;"	d
AVCODEC_SVQ1_VLC_H	libavcodec/svq1_vlc.h	22;"	d
AVCODEC_SYNTH_FILTER_H	libavcodec/synth_filter.h	22;"	d
AVCODEC_TABLEPRINT_H	libavcodec/tableprint.h	24;"	d
AVCODEC_TARGA_H	libavcodec/targa.h	20;"	d
AVCODEC_THREAD_H	libavcodec/thread.h	28;"	d
AVCODEC_TIFF_H	libavcodec/tiff.h	22;"	d
AVCODEC_TRUEMOTION1DATA_H	libavcodec/truemotion1data.h	26;"	d
AVCODEC_TRUESPEECH_DATA_H	libavcodec/truespeech_data.h	23;"	d
AVCODEC_TWINVQ_DATA_H	libavcodec/twinvq_data.h	23;"	d
AVCODEC_ULTI_CB_H	libavcodec/ulti_cb.h	23;"	d
AVCODEC_UNARY_H	libavcodec/unary.h	22;"	d
AVCODEC_VAAPI_H	libavcodec/vaapi.h	25;"	d
AVCODEC_VAAPI_INTERNAL_H	libavcodec/vaapi_internal.h	25;"	d
AVCODEC_VC1ACDATA_H	libavcodec/vc1acdata.h	23;"	d
AVCODEC_VC1DATA_H	libavcodec/vc1data.h	29;"	d
AVCODEC_VC1DSP_H	libavcodec/vc1dsp.h	29;"	d
AVCODEC_VC1_H	libavcodec/vc1.h	24;"	d
AVCODEC_VDPAU_H	libavcodec/vdpau.h	25;"	d
AVCODEC_VDPAU_INTERNAL_H	libavcodec/vdpau_internal.h	25;"	d
AVCODEC_VERSION_H	libavcodec/version.h	21;"	d
AVCODEC_VORBIS_ENC_DATA_H	libavcodec/vorbis_enc_data.h	22;"	d
AVCODEC_VORBIS_H	libavcodec/vorbis.h	22;"	d
AVCODEC_VP3DATA_H	libavcodec/vp3data.h	22;"	d
AVCODEC_VP56DATA_H	libavcodec/vp56data.h	25;"	d
AVCODEC_VP56DSP_H	libavcodec/vp56dsp.h	22;"	d
AVCODEC_VP56_H	libavcodec/vp56.h	25;"	d
AVCODEC_VP5DATA_H	libavcodec/vp5data.h	25;"	d
AVCODEC_VP6DATA_H	libavcodec/vp6data.h	25;"	d
AVCODEC_VP8DATA_H	libavcodec/vp8data.h	25;"	d
AVCODEC_VP8DSP_H	libavcodec/vp8dsp.h	26;"	d
AVCODEC_VP8_H	libavcodec/vp8.h	26;"	d
AVCODEC_WMADATA_H	libavcodec/wmadata.h	28;"	d
AVCODEC_WMAPRODATA_H	libavcodec/wmaprodata.h	29;"	d
AVCODEC_WMAVOICE_DATA_H	libavcodec/wmavoice_data.h	29;"	d
AVCODEC_WMA_H	libavcodec/wma.h	23;"	d
AVCODEC_WMV2_H	libavcodec/wmv2.h	22;"	d
AVCODEC_X86_CABAC_H	libavcodec/x86/cabac.h	22;"	d
AVCODEC_X86_DSPUTIL_MMX_H	libavcodec/x86/dsputil_mmx.h	23;"	d
AVCODEC_X86_FFT_H	libavcodec/x86/fft.h	20;"	d
AVCODEC_X86_H264_I386_H	libavcodec/x86/h264_i386.h	30;"	d
AVCODEC_X86_IDCT_XVID_H	libavcodec/x86/idct_xvid.h	27;"	d
AVCODEC_X86_MATHOPS_H	libavcodec/x86/mathops.h	23;"	d
AVCODEC_X86_VP56_ARITH_H	libavcodec/x86/vp56_arith.h	25;"	d
AVCODEC_XIPH_H	libavcodec/xiph.h	22;"	d
AVCODEC_XVMC_H	libavcodec/xvmc.h	22;"	d
AVCODEC_XVMC_INTERNAL_H	libavcodec/xvmc_internal.h	22;"	d
AVCOL_PRI_BT470BG	libavcodec/avcodec.h	/^    AVCOL_PRI_BT470BG    =5, \/\/\/< also ITU-R BT601-6 625 \/ ITU-R BT1358 625 \/ ITU-R BT1700 625 PAL & SECAM$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_BT470M	libavcodec/avcodec.h	/^    AVCOL_PRI_BT470M     =4,$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_BT709	libavcodec/avcodec.h	/^    AVCOL_PRI_BT709      =1, \/\/\/< also ITU-R BT1361 \/ IEC 61966-2-4 \/ SMPTE RP177 Annex B$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_FILM	libavcodec/avcodec.h	/^    AVCOL_PRI_FILM       =8,$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_NB	libavcodec/avcodec.h	/^    AVCOL_PRI_NB           , \/\/\/< Not part of ABI$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_SMPTE170M	libavcodec/avcodec.h	/^    AVCOL_PRI_SMPTE170M  =6, \/\/\/< also ITU-R BT601-6 525 \/ ITU-R BT1358 525 \/ ITU-R BT1700 NTSC$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_SMPTE240M	libavcodec/avcodec.h	/^    AVCOL_PRI_SMPTE240M  =7, \/\/\/< functionally identical to above$/;"	e	enum:AVColorPrimaries
AVCOL_PRI_UNSPECIFIED	libavcodec/avcodec.h	/^    AVCOL_PRI_UNSPECIFIED=2,$/;"	e	enum:AVColorPrimaries
AVCOL_RANGE_JPEG	libavcodec/avcodec.h	/^    AVCOL_RANGE_JPEG       =2, \/\/\/< the normal     2^n-1   "JPEG" YUV ranges$/;"	e	enum:AVColorRange
AVCOL_RANGE_MPEG	libavcodec/avcodec.h	/^    AVCOL_RANGE_MPEG       =1, \/\/\/< the normal 219*2^(n-8) "MPEG" YUV ranges$/;"	e	enum:AVColorRange
AVCOL_RANGE_NB	libavcodec/avcodec.h	/^    AVCOL_RANGE_NB           , \/\/\/< Not part of ABI$/;"	e	enum:AVColorRange
AVCOL_RANGE_UNSPECIFIED	libavcodec/avcodec.h	/^    AVCOL_RANGE_UNSPECIFIED=0,$/;"	e	enum:AVColorRange
AVCOL_SPC_BT470BG	libavcodec/avcodec.h	/^    AVCOL_SPC_BT470BG    =5, \/\/\/< also ITU-R BT601-6 625 \/ ITU-R BT1358 625 \/ ITU-R BT1700 625 PAL & SECAM \/ IEC 61966-2-4 xvYCC601$/;"	e	enum:AVColorSpace
AVCOL_SPC_BT709	libavcodec/avcodec.h	/^    AVCOL_SPC_BT709      =1, \/\/\/< also ITU-R BT1361 \/ IEC 61966-2-4 xvYCC709 \/ SMPTE RP177 Annex B$/;"	e	enum:AVColorSpace
AVCOL_SPC_FCC	libavcodec/avcodec.h	/^    AVCOL_SPC_FCC        =4,$/;"	e	enum:AVColorSpace
AVCOL_SPC_NB	libavcodec/avcodec.h	/^    AVCOL_SPC_NB           , \/\/\/< Not part of ABI$/;"	e	enum:AVColorSpace
AVCOL_SPC_RGB	libavcodec/avcodec.h	/^    AVCOL_SPC_RGB        =0,$/;"	e	enum:AVColorSpace
AVCOL_SPC_SMPTE170M	libavcodec/avcodec.h	/^    AVCOL_SPC_SMPTE170M  =6, \/\/\/< also ITU-R BT601-6 525 \/ ITU-R BT1358 525 \/ ITU-R BT1700 NTSC \/ functionally identical to above$/;"	e	enum:AVColorSpace
AVCOL_SPC_SMPTE240M	libavcodec/avcodec.h	/^    AVCOL_SPC_SMPTE240M  =7,$/;"	e	enum:AVColorSpace
AVCOL_SPC_UNSPECIFIED	libavcodec/avcodec.h	/^    AVCOL_SPC_UNSPECIFIED=2,$/;"	e	enum:AVColorSpace
AVCOL_TRC_BT709	libavcodec/avcodec.h	/^    AVCOL_TRC_BT709      =1, \/\/\/< also ITU-R BT1361$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_GAMMA22	libavcodec/avcodec.h	/^    AVCOL_TRC_GAMMA22    =4, \/\/\/< also ITU-R BT470M \/ ITU-R BT1700 625 PAL & SECAM$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_GAMMA28	libavcodec/avcodec.h	/^    AVCOL_TRC_GAMMA28    =5, \/\/\/< also ITU-R BT470BG$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_NB	libavcodec/avcodec.h	/^    AVCOL_TRC_NB           , \/\/\/< Not part of ABI$/;"	e	enum:AVColorTransferCharacteristic
AVCOL_TRC_UNSPECIFIED	libavcodec/avcodec.h	/^    AVCOL_TRC_UNSPECIFIED=2,$/;"	e	enum:AVColorTransferCharacteristic
AVCRC	libavutil/crc.h	/^typedef uint32_t AVCRC;$/;"	t
AVCRCId	libavutil/crc.h	/^}AVCRCId;$/;"	t	typeref:enum:__anon301
AVChapter	libavformat/avformat.h	/^typedef struct AVChapter {$/;"	s
AVChapter	libavformat/avformat.h	/^} AVChapter;$/;"	t	typeref:struct:AVChapter
AVChapterMap	ffmpeg.c	/^typedef struct AVChapterMap {$/;"	s	file:
AVChapterMap	ffmpeg.c	/^} AVChapterMap;$/;"	t	typeref:struct:AVChapterMap	file:
AVChapterMap	ffmpeg/ffmpeg.c	/^typedef struct AVChapterMap {$/;"	s	file:
AVChapterMap	ffmpeg/ffmpeg.c	/^} AVChapterMap;$/;"	t	typeref:struct:AVChapterMap	file:
AVChromaLocation	libavcodec/avcodec.h	/^enum AVChromaLocation{$/;"	g
AVClass	libavutil/log.h	/^} AVClass;$/;"	t	typeref:struct:__anon308
AVCodec	libavcodec/avcodec.h	/^typedef struct AVCodec {$/;"	s
AVCodec	libavcodec/avcodec.h	/^} AVCodec;$/;"	t	typeref:struct:AVCodec
AVCodecContext	libavcodec/avcodec.h	/^typedef struct AVCodecContext {$/;"	s
AVCodecContext	libavcodec/avcodec.h	/^} AVCodecContext;$/;"	t	typeref:struct:AVCodecContext
AVCodecGuid	libavformat/riff.h	/^} AVCodecGuid;$/;"	t	typeref:struct:__anon374
AVCodecParser	libavcodec/avcodec.h	/^typedef struct AVCodecParser {$/;"	s
AVCodecParser	libavcodec/avcodec.h	/^} AVCodecParser;$/;"	t	typeref:struct:AVCodecParser
AVCodecParserContext	libavcodec/avcodec.h	/^typedef struct AVCodecParserContext {$/;"	s
AVCodecParserContext	libavcodec/avcodec.h	/^} AVCodecParserContext;$/;"	t	typeref:struct:AVCodecParserContext
AVCodecTag	libavformat/internal.h	/^typedef struct AVCodecTag {$/;"	s
AVCodecTag	libavformat/internal.h	/^} AVCodecTag;$/;"	t	typeref:struct:AVCodecTag
AVColorPrimaries	libavcodec/avcodec.h	/^enum AVColorPrimaries{$/;"	g
AVColorRange	libavcodec/avcodec.h	/^enum AVColorRange{$/;"	g
AVColorSpace	libavcodec/avcodec.h	/^enum AVColorSpace{$/;"	g
AVColorTransferCharacteristic	libavcodec/avcodec.h	/^enum AVColorTransferCharacteristic{$/;"	g
AVComponentDescriptor	libavutil/pixdesc.h	/^typedef struct AVComponentDescriptor{$/;"	s
AVComponentDescriptor	libavutil/pixdesc.h	/^}AVComponentDescriptor;$/;"	t	typeref:struct:AVComponentDescriptor
AVDES	libavutil/des.c	/^typedef struct AVDES AVDES;$/;"	t	typeref:struct:AVDES	file:
AVDES	libavutil/des.h	/^struct AVDES {$/;"	s
AVDEVICE_ALSA_AUDIO_H	libavdevice/alsa-audio.h	31;"	d
AVDEVICE_AVDEVICE_H	libavdevice/avdevice.h	20;"	d
AVDEVICE_DV1394_H	libavdevice/dv1394.h	29;"	d
AVDEVICE_SNDIO_COMMON_H	libavdevice/sndio_common.h	23;"	d
AVDISCARD_ALL	libavcodec/avcodec.h	/^    AVDISCARD_ALL    = 48, \/\/\/< discard all$/;"	e	enum:AVDiscard
AVDISCARD_BIDIR	libavcodec/avcodec.h	/^    AVDISCARD_BIDIR  = 16, \/\/\/< discard all bidirectional frames$/;"	e	enum:AVDiscard
AVDISCARD_DEFAULT	libavcodec/avcodec.h	/^    AVDISCARD_DEFAULT=  0, \/\/\/< discard useless packets like 0 size packets in avi$/;"	e	enum:AVDiscard
AVDISCARD_NONE	libavcodec/avcodec.h	/^    AVDISCARD_NONE   =-16, \/\/\/< discard nothing$/;"	e	enum:AVDiscard
AVDISCARD_NONKEY	libavcodec/avcodec.h	/^    AVDISCARD_NONKEY = 32, \/\/\/< discard all frames except keyframes$/;"	e	enum:AVDiscard
AVDISCARD_NONREF	libavcodec/avcodec.h	/^    AVDISCARD_NONREF =  8, \/\/\/< discard all non reference$/;"	e	enum:AVDiscard
AVDictionary	libavutil/dict.h	/^typedef struct AVDictionary AVDictionary;$/;"	t	typeref:struct:AVDictionary
AVDictionary	libavutil/internal.h	/^struct AVDictionary {$/;"	s
AVDictionaryEntry	libavutil/dict.h	/^} AVDictionaryEntry;$/;"	t	typeref:struct:__anon295
AVDiscard	libavcodec/avcodec.h	/^enum AVDiscard{$/;"	g
AVERROR	libavutil/error.h	32;"	d
AVERROR	libavutil/error.h	36;"	d
AVERROR_BSF_NOT_FOUND	libavutil/error.h	40;"	d
AVERROR_DECODER_NOT_FOUND	libavutil/error.h	41;"	d
AVERROR_DEMUXER_NOT_FOUND	libavutil/error.h	42;"	d
AVERROR_ENCODER_NOT_FOUND	libavutil/error.h	43;"	d
AVERROR_EOF	libavutil/error.h	44;"	d
AVERROR_EXIT	libavutil/error.h	45;"	d
AVERROR_FILTER_NOT_FOUND	libavutil/error.h	46;"	d
AVERROR_INVALIDDATA	libavutil/error.h	47;"	d
AVERROR_MUXER_NOT_FOUND	libavutil/error.h	48;"	d
AVERROR_OPTION_NOT_FOUND	libavutil/error.h	49;"	d
AVERROR_PATCHWELCOME	libavutil/error.h	50;"	d
AVERROR_PROTOCOL_NOT_FOUND	libavutil/error.h	51;"	d
AVERROR_STREAM_NOT_FOUND	libavutil/error.h	52;"	d
AVExpr	libavutil/eval.c	/^struct AVExpr {$/;"	s	file:
AVExpr	libavutil/eval.h	/^typedef struct AVExpr AVExpr;$/;"	t	typeref:struct:AVExpr
AVExtFloat	libavutil/intfloat_readwrite.h	/^typedef struct AVExtFloat  {$/;"	s
AVExtFloat	libavutil/intfloat_readwrite.h	/^} AVExtFloat;$/;"	t	typeref:struct:AVExtFloat
AVFILTER_AVCODEC_H	libavfilter/avcodec.h	20;"	d
AVFILTER_AVFILTERGRAPH_H	libavfilter/avfiltergraph.h	23;"	d
AVFILTER_AVFILTER_H	libavfilter/avfilter.h	23;"	d
AVFILTER_DRAWUTILS_H	libavfilter/drawutils.h	20;"	d
AVFILTER_GRADFUN_H	libavfilter/gradfun.h	23;"	d
AVFILTER_INTERNAL_H	libavfilter/internal.h	20;"	d
AVFILTER_VSINK_BUFFER_H	libavfilter/vsink_buffer.h	20;"	d
AVFILTER_VSRC_BUFFER_H	libavfilter/vsrc_buffer.h	22;"	d
AVFILTER_YADIF_H	libavfilter/yadif.h	20;"	d
AVFMTCTX_NOHEADER	libavformat/avformat.h	667;"	d
AVFMT_FLAG_CUSTOM_IO	libavformat/avformat.h	761;"	d
AVFMT_FLAG_GENPTS	libavformat/avformat.h	752;"	d
AVFMT_FLAG_IGNDTS	libavformat/avformat.h	755;"	d
AVFMT_FLAG_IGNIDX	libavformat/avformat.h	753;"	d
AVFMT_FLAG_KEEP_SIDE_DATA	libavformat/avformat.h	765;"	d
AVFMT_FLAG_MP4A_LATM	libavformat/avformat.h	762;"	d
AVFMT_FLAG_NOFILLIN	libavformat/avformat.h	756;"	d
AVFMT_FLAG_NONBLOCK	libavformat/avformat.h	754;"	d
AVFMT_FLAG_NOPARSE	libavformat/avformat.h	757;"	d
AVFMT_FLAG_PRIV_OPT	libavformat/avformat.h	764;"	d
AVFMT_FLAG_RTP_HINT	libavformat/avformat.h	759;"	d
AVFMT_FLAG_SORT_DTS	libavformat/avformat.h	763;"	d
AVFMT_GENERIC_INDEX	libavformat/avformat.h	269;"	d
AVFMT_GLOBALHEADER	libavformat/avformat.h	267;"	d
AVFMT_INFINITEOUTPUTLOOP	libavformat/avformat.h	745;"	d
AVFMT_NEEDNUMBER	libavformat/avformat.h	263;"	d
AVFMT_NOBINSEARCH	libavformat/avformat.h	274;"	d
AVFMT_NODIMENSIONS	libavformat/avformat.h	272;"	d
AVFMT_NOFILE	libavformat/avformat.h	262;"	d
AVFMT_NOGENSEARCH	libavformat/avformat.h	275;"	d
AVFMT_NOOUTPUTLOOP	libavformat/avformat.h	744;"	d
AVFMT_NOSTREAMS	libavformat/avformat.h	273;"	d
AVFMT_NOTIMESTAMPS	libavformat/avformat.h	268;"	d
AVFMT_RAWPICTURE	libavformat/avformat.h	265;"	d
AVFMT_SHOW_IDS	libavformat/avformat.h	264;"	d
AVFMT_TS_DISCONT	libavformat/avformat.h	270;"	d
AVFMT_TS_NONSTRICT	libavformat/avformat.h	276;"	d
AVFMT_VARIABLE_FPS	libavformat/avformat.h	271;"	d
AVFORMAT_ADTS_H	libavformat/adts.h	24;"	d
AVFORMAT_AIFF_H	libavformat/aiff.h	28;"	d
AVFORMAT_APETAG_H	libavformat/apetag.h	24;"	d
AVFORMAT_ASFCRYPT_H	libavformat/asfcrypt.h	23;"	d
AVFORMAT_ASF_H	libavformat/asf.h	22;"	d
AVFORMAT_AUDIOINTERLEAVE_H	libavformat/audiointerleave.h	24;"	d
AVFORMAT_AVC_H	libavformat/avc.h	23;"	d
AVFORMAT_AVFORMAT_H	libavformat/avformat.h	22;"	d
AVFORMAT_AVIO_H	libavformat/avio.h	21;"	d
AVFORMAT_AVIO_INTERNAL_H	libavformat/avio_internal.h	21;"	d
AVFORMAT_AVI_H	libavformat/avi.h	22;"	d
AVFORMAT_AVLANGUAGE_H	libavformat/avlanguage.h	22;"	d
AVFORMAT_CAF_H	libavformat/caf.h	28;"	d
AVFORMAT_DV_H	libavformat/dv.h	29;"	d
AVFORMAT_FFMETA_H	libavformat/ffmeta.h	23;"	d
AVFORMAT_FFM_H	libavformat/ffm.h	23;"	d
AVFORMAT_FLACENC_H	libavformat/flacenc.h	23;"	d
AVFORMAT_FLV_H	libavformat/flv.h	25;"	d
AVFORMAT_GXF_H	libavformat/gxf.h	23;"	d
AVFORMAT_HTTPAUTH_H	libavformat/httpauth.h	23;"	d
AVFORMAT_HTTP_H	libavformat/http.h	23;"	d
AVFORMAT_ID3V1_H	libavformat/id3v1.h	23;"	d
AVFORMAT_ID3V2_H	libavformat/id3v2.h	23;"	d
AVFORMAT_INTERNAL_H	libavformat/internal.h	22;"	d
AVFORMAT_ISOM_H	libavformat/isom.h	25;"	d
AVFORMAT_MATROSKA_H	libavformat/matroska.h	23;"	d
AVFORMAT_METADATA_H	libavformat/metadata.h	22;"	d
AVFORMAT_MMS_H	libavformat/mms.h	22;"	d
AVFORMAT_MOVENC_H	libavformat/movenc.h	25;"	d
AVFORMAT_MPEGTS_H	libavformat/mpegts.h	23;"	d
AVFORMAT_MPEG_H	libavformat/mpeg.h	23;"	d
AVFORMAT_MXF_H	libavformat/mxf.h	22;"	d
AVFORMAT_NETWORK_H	libavformat/network.h	22;"	d
AVFORMAT_NUT_H	libavformat/nut.h	23;"	d
AVFORMAT_OGGDEC_H	libavformat/oggdec.h	26;"	d
AVFORMAT_OS_SUPPORT_H	libavformat/os_support.h	23;"	d
AVFORMAT_PCM_H	libavformat/pcm.h	23;"	d
AVFORMAT_QTPALETTE_H	libavformat/qtpalette.h	24;"	d
AVFORMAT_RAWDEC_H	libavformat/rawdec.h	23;"	d
AVFORMAT_RAWENC_H	libavformat/rawenc.h	23;"	d
AVFORMAT_RDT_H	libavformat/rdt.h	23;"	d
AVFORMAT_RIFF_H	libavformat/riff.h	29;"	d
AVFORMAT_RM_H	libavformat/rm.h	23;"	d
AVFORMAT_RSO_H	libavformat/rso.h	23;"	d
AVFORMAT_RTMPPKT_H	libavformat/rtmppkt.h	23;"	d
AVFORMAT_RTMP_H	libavformat/rtmp.h	23;"	d
AVFORMAT_RTPDEC_FORMATS_H	libavformat/rtpdec_formats.h	23;"	d
AVFORMAT_RTPDEC_H	libavformat/rtpdec.h	23;"	d
AVFORMAT_RTPENC_CHAIN_H	libavformat/rtpenc_chain.h	23;"	d
AVFORMAT_RTPENC_H	libavformat/rtpenc.h	22;"	d
AVFORMAT_RTP_H	libavformat/rtp.h	22;"	d
AVFORMAT_RTSPCODES_H	libavformat/rtspcodes.h	23;"	d
AVFORMAT_RTSP_H	libavformat/rtsp.h	22;"	d
AVFORMAT_SAUCE_H	libavformat/sauce.h	28;"	d
AVFORMAT_SEEK_H	libavformat/seek.h	24;"	d
AVFORMAT_SOX_H	libavformat/sox.h	23;"	d
AVFORMAT_SPDIF_H	libavformat/spdif.h	23;"	d
AVFORMAT_SWF_H	libavformat/swf.h	24;"	d
AVFORMAT_TIMEFILTER_H	libavformat/timefilter.h	26;"	d
AVFORMAT_URL_H	libavformat/url.h	26;"	d
AVFORMAT_VERSION_H	libavformat/version.h	22;"	d
AVFORMAT_VOC_H	libavformat/voc.h	23;"	d
AVFORMAT_VORBISCOMMENT_H	libavformat/vorbiscomment.h	23;"	d
AVFORMAT_WTV_H	libavformat/wtv.h	23;"	d
AVFifoBuffer	libavutil/fifo.h	/^typedef struct AVFifoBuffer {$/;"	s
AVFifoBuffer	libavutil/fifo.h	/^} AVFifoBuffer;$/;"	t	typeref:struct:AVFifoBuffer
AVFilter	libavfilter/avfilter.h	/^typedef struct AVFilter {$/;"	s
AVFilter	libavfilter/avfilter.h	/^} AVFilter;$/;"	t	typeref:struct:AVFilter
AVFilterBuffer	libavfilter/avfilter.h	/^typedef struct AVFilterBuffer {$/;"	s
AVFilterBuffer	libavfilter/avfilter.h	/^} AVFilterBuffer;$/;"	t	typeref:struct:AVFilterBuffer
AVFilterBufferRef	libavfilter/avfilter.h	/^typedef struct AVFilterBufferRef {$/;"	s
AVFilterBufferRef	libavfilter/avfilter.h	/^} AVFilterBufferRef;$/;"	t	typeref:struct:AVFilterBufferRef
AVFilterBufferRefAudioProps	libavfilter/avfilter.h	/^typedef struct AVFilterBufferRefAudioProps {$/;"	s
AVFilterBufferRefAudioProps	libavfilter/avfilter.h	/^} AVFilterBufferRefAudioProps;$/;"	t	typeref:struct:AVFilterBufferRefAudioProps
AVFilterBufferRefVideoProps	libavfilter/avfilter.h	/^typedef struct AVFilterBufferRefVideoProps {$/;"	s
AVFilterBufferRefVideoProps	libavfilter/avfilter.h	/^} AVFilterBufferRefVideoProps;$/;"	t	typeref:struct:AVFilterBufferRefVideoProps
AVFilterContext	libavfilter/avfilter.h	/^struct AVFilterContext {$/;"	s
AVFilterContext	libavfilter/avfilter.h	/^typedef struct AVFilterContext AVFilterContext;$/;"	t	typeref:struct:AVFilterContext
AVFilterFormats	libavfilter/avfilter.h	/^typedef struct AVFilterFormats {$/;"	s
AVFilterFormats	libavfilter/avfilter.h	/^}  AVFilterFormats;$/;"	t	typeref:struct:AVFilterFormats
AVFilterGraph	libavfilter/avfiltergraph.h	/^typedef struct AVFilterGraph {$/;"	s
AVFilterGraph	libavfilter/avfiltergraph.h	/^} AVFilterGraph;$/;"	t	typeref:struct:AVFilterGraph
AVFilterInOut	libavfilter/avfiltergraph.h	/^typedef struct AVFilterInOut {$/;"	s
AVFilterInOut	libavfilter/avfiltergraph.h	/^} AVFilterInOut;$/;"	t	typeref:struct:AVFilterInOut
AVFilterLink	libavfilter/avfilter.h	/^struct AVFilterLink {$/;"	s
AVFilterLink	libavfilter/avfilter.h	/^typedef struct AVFilterLink    AVFilterLink;$/;"	t	typeref:struct:AVFilterLink
AVFilterPad	libavfilter/avfilter.h	/^struct AVFilterPad {$/;"	s
AVFilterPad	libavfilter/avfilter.h	/^typedef struct AVFilterPad     AVFilterPad;$/;"	t	typeref:struct:AVFilterPad
AVFilterPool	libavfilter/internal.h	/^typedef struct AVFilterPool {$/;"	s
AVFilterPool	libavfilter/internal.h	/^} AVFilterPool;$/;"	t	typeref:struct:AVFilterPool
AVFormatContext	libavformat/avformat.h	/^typedef struct AVFormatContext {$/;"	s
AVFormatContext	libavformat/avformat.h	/^} AVFormatContext;$/;"	t	typeref:struct:AVFormatContext
AVFormatParameters	libavformat/avformat.h	/^typedef struct AVFormatParameters {$/;"	s
AVFormatParameters	libavformat/avformat.h	/^} AVFormatParameters;$/;"	t	typeref:struct:AVFormatParameters
AVFrac	libavformat/avformat.h	/^typedef struct AVFrac {$/;"	s
AVFrac	libavformat/avformat.h	/^} AVFrac;$/;"	t	typeref:struct:AVFrac
AVFrame	libavcodec/avcodec.h	/^typedef struct AVFrame {$/;"	s
AVFrame	libavcodec/avcodec.h	/^} AVFrame;$/;"	t	typeref:struct:AVFrame
AVG2	libavcodec/alpha/dsputil_alpha.c	239;"	d	file:
AVG2	libavcodec/alpha/dsputil_alpha.c	250;"	d	file:
AVG2	libavcodec/alpha/dsputil_alpha.c	254;"	d	file:
AVG4	libavcodec/alpha/dsputil_alpha.c	240;"	d	file:
AVG4	libavcodec/alpha/dsputil_alpha.c	251;"	d	file:
AVG4	libavcodec/alpha/dsputil_alpha.c	255;"	d	file:
AVG4_ROUNDER	libavcodec/alpha/dsputil_alpha.c	241;"	d	file:
AVG4_ROUNDER	libavcodec/alpha/dsputil_alpha.c	252;"	d	file:
AVG4_ROUNDER	libavcodec/alpha/dsputil_alpha.c	256;"	d	file:
AVG_3DNOW_OP	libavcodec/x86/cavsdsp_mmx.c	419;"	d	file:
AVG_3DNOW_OP	libavcodec/x86/dsputil_mmx.c	1506;"	d	file:
AVG_3DNOW_OP	libavcodec/x86/h264_qpel_mmx.c	1164;"	d	file:
AVG_MMX2_OP	libavcodec/x86/cavsdsp_mmx.c	423;"	d	file:
AVG_MMX2_OP	libavcodec/x86/dsputil_mmx.c	1510;"	d	file:
AVG_MMX2_OP	libavcodec/x86/h264_qpel_mmx.c	1168;"	d	file:
AVG_OP_U8_ALTIVEC	libavcodec/ppc/h264_altivec.c	31;"	d	file:
AVG_OP_U8_ALTIVEC	libavcodec/ppc/vc1dsp_altivec.c	325;"	d	file:
AVHWAccel	libavcodec/avcodec.h	/^typedef struct AVHWAccel {$/;"	s
AVHWAccel	libavcodec/avcodec.h	/^} AVHWAccel;$/;"	t	typeref:struct:AVHWAccel
AVIContext	libavformat/avidec.c	/^} AVIContext;$/;"	t	typeref:struct:__anon451	file:
AVIContext	libavformat/avienc.c	/^} AVIContext;$/;"	t	typeref:struct:__anon343	file:
AVIF_COPYRIGHTED	libavformat/avi.h	31;"	d
AVIF_HASINDEX	libavformat/avi.h	26;"	d
AVIF_ISINTERLEAVED	libavformat/avi.h	28;"	d
AVIF_MUSTUSEINDEX	libavformat/avi.h	27;"	d
AVIF_TRUSTCKTYPE	libavformat/avi.h	29;"	d
AVIF_WASCAPTUREFILE	libavformat/avi.h	30;"	d
AVIIF_INDEX	libavformat/avi.h	38;"	d
AVIIentry	libavformat/avienc.c	/^typedef struct AVIIentry {$/;"	s	file:
AVIIentry	libavformat/avienc.c	/^} AVIIentry;$/;"	t	typeref:struct:AVIIentry	file:
AVIIndex	libavformat/avienc.c	/^typedef struct AVIIndex {$/;"	s	file:
AVIIndex	libavformat/avienc.c	/^} AVIIndex;$/;"	t	typeref:struct:AVIIndex	file:
AVINDEX_KEYFRAME	libavformat/avformat.h	461;"	d
AVIOContext	libavformat/avio.h	/^} AVIOContext;$/;"	t	typeref:struct:__anon396
AVIO_FLAG_NONBLOCK	libavformat/avio.h	550;"	d
AVIO_FLAG_READ	libavformat/avio.h	531;"	d
AVIO_FLAG_READ_WRITE	libavformat/avio.h	533;"	d
AVIO_FLAG_WRITE	libavformat/avio.h	532;"	d
AVIO_SEEKABLE_NORMAL	libavformat/avio.h	36;"	d
AVIStream	libavformat/avidec.c	/^typedef struct AVIStream {$/;"	s	file:
AVIStream	libavformat/avidec.c	/^} AVIStream;$/;"	t	typeref:struct:AVIStream	file:
AVIStream	libavformat/avienc.c	/^} AVIStream ;$/;"	t	typeref:struct:__anon344	file:
AVISynthContext	libavformat/avisynth.c	/^} AVISynthContext;$/;"	t	typeref:struct:__anon475	file:
AVISynthStream	libavformat/avisynth.c	/^} AVISynthStream;$/;"	t	typeref:struct:__anon474	file:
AVI_INDEX_CLUSTER_SIZE	libavformat/avienc.c	37;"	d	file:
AVI_MASTER_INDEX_SIZE	libavformat/avi.h	34;"	d
AVI_MAX_RIFF_SIZE	libavformat/avi.h	33;"	d
AVI_MAX_STREAM_COUNT	libavformat/avi.h	35;"	d
AVIndexEntry	libavformat/avformat.h	/^typedef struct AVIndexEntry {$/;"	s
AVIndexEntry	libavformat/avformat.h	/^} AVIndexEntry;$/;"	t	typeref:struct:AVIndexEntry
AVInputFile	ffmpeg.c	/^typedef struct AVInputFile {$/;"	s	file:
AVInputFile	ffmpeg.c	/^} AVInputFile;$/;"	t	typeref:struct:AVInputFile	file:
AVInputFile	ffmpeg/ffmpeg.c	/^typedef struct AVInputFile {$/;"	s	file:
AVInputFile	ffmpeg/ffmpeg.c	/^} AVInputFile;$/;"	t	typeref:struct:AVInputFile	file:
AVInputFormat	libavformat/avformat.h	/^typedef struct AVInputFormat {$/;"	s
AVInputFormat	libavformat/avformat.h	/^} AVInputFormat;$/;"	t	typeref:struct:AVInputFormat
AVInputStream	ffmpeg.c	/^typedef struct AVInputStream {$/;"	s	file:
AVInputStream	ffmpeg.c	/^} AVInputStream;$/;"	t	typeref:struct:AVInputStream	file:
AVInputStream	ffmpeg/ffmpeg.c	/^typedef struct AVInputStream {$/;"	s	file:
AVInputStream	ffmpeg/ffmpeg.c	/^} AVInputStream;$/;"	t	typeref:struct:AVInputStream	file:
AVInteger	libavutil/integer.h	/^typedef struct AVInteger{$/;"	s
AVInteger	libavutil/integer.h	/^} AVInteger;$/;"	t	typeref:struct:AVInteger
AVLFG	libavutil/lfg.h	/^} AVLFG;$/;"	t	typeref:struct:__anon297
AVLINK_INIT	libavfilter/avfilter.h	/^        AVLINK_INIT             \/\/\/< complete$/;"	e	enum:AVFilterLink::__anon21
AVLINK_STARTINIT	libavfilter/avfilter.h	/^        AVLINK_STARTINIT,       \/\/\/< started, but incomplete$/;"	e	enum:AVFilterLink::__anon21
AVLINK_UNINIT	libavfilter/avfilter.h	/^        AVLINK_UNINIT = 0,      \/\/\/< not started$/;"	e	enum:AVFilterLink::__anon21
AVLPCType	libavcodec/avcodec.h	/^attribute_deprecated enum AVLPCType {$/;"	g
AVLangCodespace	libavformat/avlanguage.h	/^enum AVLangCodespace {$/;"	g
AVLockOp	libavcodec/avcodec.h	/^enum AVLockOp {$/;"	g
AVMD5	libavutil/md5.c	/^typedef struct AVMD5{$/;"	s	file:
AVMD5	libavutil/md5.c	/^} AVMD5;$/;"	t	typeref:struct:AVMD5	file:
AVMEDIA_TYPE_ATTACHMENT	libavutil/avutil.h	/^    AVMEDIA_TYPE_ATTACHMENT,$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_AUDIO	libavutil/avutil.h	/^    AVMEDIA_TYPE_AUDIO,$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_DATA	libavutil/avutil.h	/^    AVMEDIA_TYPE_DATA,$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_NB	libavutil/avutil.h	/^    AVMEDIA_TYPE_NB$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_SUBTITLE	libavutil/avutil.h	/^    AVMEDIA_TYPE_SUBTITLE,$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_UNKNOWN	libavutil/avutil.h	/^    AVMEDIA_TYPE_UNKNOWN = -1,$/;"	e	enum:AVMediaType
AVMEDIA_TYPE_VIDEO	libavutil/avutil.h	/^    AVMEDIA_TYPE_VIDEO,$/;"	e	enum:AVMediaType
AVMediaType	libavutil/avutil.h	/^enum AVMediaType {$/;"	g
AVMetaDataMap	ffmpeg.c	/^typedef struct AVMetaDataMap {$/;"	s	file:
AVMetaDataMap	ffmpeg.c	/^} AVMetaDataMap;$/;"	t	typeref:struct:AVMetaDataMap	file:
AVMetaDataMap	ffmpeg/ffmpeg.c	/^typedef struct AVMetaDataMap {$/;"	s	file:
AVMetaDataMap	ffmpeg/ffmpeg.c	/^} AVMetaDataMap;$/;"	t	typeref:struct:AVMetaDataMap	file:
AVMetadata	libavformat/avformat.h	/^typedef attribute_deprecated AVDictionary AVMetadata;$/;"	t
AVMetadataConv	libavformat/avformat.h	/^typedef struct AVMetadataConv AVMetadataConv;$/;"	t	typeref:struct:AVMetadataConv
AVMetadataConv	libavformat/metadata.h	/^struct AVMetadataConv{$/;"	s
AVMetadataConv	libavformat/metadata.h	/^typedef struct AVMetadataConv AVMetadataConv;$/;"	t	typeref:struct:AVMetadataConv
AVMetadataTag	libavformat/avformat.h	/^typedef attribute_deprecated AVDictionaryEntry  AVMetadataTag;$/;"	t
AVOption	libavutil/opt.h	/^typedef struct AVOption {$/;"	s
AVOption	libavutil/opt.h	/^} AVOption;$/;"	t	typeref:struct:AVOption
AVOptionType	libavutil/opt.h	/^enum AVOptionType{$/;"	g
AVOutputFormat	libavformat/avformat.h	/^typedef struct AVOutputFormat {$/;"	s
AVOutputFormat	libavformat/avformat.h	/^} AVOutputFormat;$/;"	t	typeref:struct:AVOutputFormat
AVOutputStream	ffmpeg.c	/^typedef struct AVOutputStream {$/;"	s	file:
AVOutputStream	ffmpeg.c	/^} AVOutputStream;$/;"	t	typeref:struct:AVOutputStream	file:
AVOutputStream	ffmpeg/ffmpeg.c	/^typedef struct AVOutputStream {$/;"	s	file:
AVOutputStream	ffmpeg/ffmpeg.c	/^} AVOutputStream;$/;"	t	typeref:struct:AVOutputStream	file:
AVPALETTE_COUNT	libavcodec/avcodec.h	3089;"	d
AVPALETTE_SIZE	libavcodec/avcodec.h	3088;"	d
AVPROBE_PADDING_SIZE	libavformat/avformat.h	240;"	d
AVPROBE_SCORE_MAX	libavformat/avformat.h	239;"	d
AVPacket	libavcodec/avcodec.h	/^typedef struct AVPacket {$/;"	s
AVPacket	libavcodec/avcodec.h	/^} AVPacket;$/;"	t	typeref:struct:AVPacket
AVPacketList	libavformat/avformat.h	/^typedef struct AVPacketList {$/;"	s
AVPacketList	libavformat/avformat.h	/^} AVPacketList;$/;"	t	typeref:struct:AVPacketList
AVPacketSideDataType	libavcodec/avcodec.h	/^enum AVPacketSideDataType {$/;"	g
AVPaletteControl	libavcodec/avcodec.h	/^typedef struct AVPaletteControl {$/;"	s
AVPanScan	libavcodec/avcodec.h	/^typedef struct AVPanScan{$/;"	s
AVPanScan	libavcodec/avcodec.h	/^}AVPanScan;$/;"	t	typeref:struct:AVPanScan
AVParserState	libavformat/seek.h	/^typedef struct AVParserState {$/;"	s
AVParserState	libavformat/seek.h	/^} AVParserState;$/;"	t	typeref:struct:AVParserState
AVParserStreamState	libavformat/seek.h	/^typedef struct AVParserStreamState {$/;"	s
AVParserStreamState	libavformat/seek.h	/^} AVParserStreamState;$/;"	t	typeref:struct:AVParserStreamState
AVPicture	libavcodec/avcodec.h	/^typedef struct AVPicture {$/;"	s
AVPicture	libavcodec/avcodec.h	/^} AVPicture;$/;"	t	typeref:struct:AVPicture
AVPictureType	libavutil/avutil.h	/^enum AVPictureType {$/;"	g
AVPixFmtDescriptor	libavutil/pixdesc.h	/^typedef struct AVPixFmtDescriptor{$/;"	s
AVPixFmtDescriptor	libavutil/pixdesc.h	/^}AVPixFmtDescriptor;$/;"	t	typeref:struct:AVPixFmtDescriptor
AVProbeData	libavformat/avformat.h	/^typedef struct AVProbeData {$/;"	s
AVProbeData	libavformat/avformat.h	/^} AVProbeData;$/;"	t	typeref:struct:AVProbeData
AVProfile	libavcodec/avcodec.h	/^typedef struct AVProfile {$/;"	s
AVProfile	libavcodec/avcodec.h	/^} AVProfile;$/;"	t	typeref:struct:AVProfile
AVProgram	libavformat/avformat.h	/^typedef struct AVProgram {$/;"	s
AVProgram	libavformat/avformat.h	/^} AVProgram;$/;"	t	typeref:struct:AVProgram
AVRC4	libavutil/rc4.c	/^typedef struct AVRC4 AVRC4;$/;"	t	typeref:struct:AVRC4	file:
AVRC4	libavutil/rc4.h	/^struct AVRC4 {$/;"	s
AVRational	libavutil/rational.h	/^typedef struct AVRational{$/;"	s
AVRational	libavutil/rational.h	/^} AVRational;$/;"	t	typeref:struct:AVRational
AVResampleContext	libavcodec/resample2.c	/^typedef struct AVResampleContext{$/;"	s	file:
AVResampleContext	libavcodec/resample2.c	/^}AVResampleContext;$/;"	t	typeref:struct:AVResampleContext	file:
AVRounding	libavutil/mathematics.h	/^enum AVRounding {$/;"	g
AVRtpPayloadTypes	libavformat/rtp.c	/^} AVRtpPayloadTypes[]=$/;"	v	typeref:struct:__anon392	file:
AVSContext	libavcodec/cavs.h	/^} AVSContext;$/;"	t	typeref:struct:__anon207
AVSEEK_FLAG_ANY	libavformat/avformat.h	1368;"	d
AVSEEK_FLAG_BACKWARD	libavformat/avformat.h	1366;"	d
AVSEEK_FLAG_BYTE	libavformat/avformat.h	1367;"	d
AVSEEK_FLAG_FRAME	libavformat/avformat.h	1369;"	d
AVSEEK_FORCE	libavformat/avio.h	430;"	d
AVSEEK_SIZE	libavformat/avio.h	422;"	d
AVSHA	libavutil/sha.c	/^typedef struct AVSHA {$/;"	s	file:
AVSHA	libavutil/sha.c	/^} AVSHA;$/;"	t	typeref:struct:AVSHA	file:
AVSTREAM_PARSE_FULL	libavformat/avformat.h	/^    AVSTREAM_PARSE_FULL,       \/**< full parsing and repack *\/$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_FULL_ONCE	libavformat/avformat.h	/^    AVSTREAM_PARSE_FULL_ONCE,  \/**< full parsing and repack of the first frame only, only implemented for H.264 currently *\/$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_HEADERS	libavformat/avformat.h	/^    AVSTREAM_PARSE_HEADERS,    \/**< Only parse headers, do not repack. *\/$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_NONE	libavformat/avformat.h	/^    AVSTREAM_PARSE_NONE,$/;"	e	enum:AVStreamParseType
AVSTREAM_PARSE_TIMESTAMPS	libavformat/avformat.h	/^    AVSTREAM_PARSE_TIMESTAMPS, \/**< full parsing and interpolation of timestamps for frames not starting on a packet boundary *\/$/;"	e	enum:AVStreamParseType
AVS_AUDIO	libavcodec/avs.c	/^    AVS_AUDIO     = 0x02,$/;"	e	enum:__anon176	file:
AVS_AUDIO	libavformat/avs.c	/^    AVS_AUDIO     = 0x02,$/;"	e	enum:avs_block_type	file:
AVS_GAME_DATA	libavcodec/avs.c	/^    AVS_GAME_DATA = 0x04,$/;"	e	enum:__anon176	file:
AVS_GAME_DATA	libavformat/avs.c	/^    AVS_GAME_DATA = 0x04,$/;"	e	enum:avs_block_type	file:
AVS_I_FRAME	libavcodec/avs.c	/^    AVS_I_FRAME     = 0x00,$/;"	e	enum:__anon177	file:
AVS_NONE	libavformat/avs.c	/^    AVS_NONE      = 0x00,$/;"	e	enum:avs_block_type	file:
AVS_PALETTE	libavcodec/avs.c	/^    AVS_PALETTE   = 0x03,$/;"	e	enum:__anon176	file:
AVS_PALETTE	libavformat/avs.c	/^    AVS_PALETTE   = 0x03,$/;"	e	enum:avs_block_type	file:
AVS_P_FRAME_2X2	libavcodec/avs.c	/^    AVS_P_FRAME_2X2 = 0x02,$/;"	e	enum:__anon177	file:
AVS_P_FRAME_2X3	libavcodec/avs.c	/^    AVS_P_FRAME_2X3 = 0x03,$/;"	e	enum:__anon177	file:
AVS_P_FRAME_3X3	libavcodec/avs.c	/^    AVS_P_FRAME_3X3 = 0x01,$/;"	e	enum:__anon177	file:
AVS_VIDEO	libavcodec/avs.c	/^    AVS_VIDEO     = 0x01,$/;"	e	enum:__anon176	file:
AVS_VIDEO	libavformat/avs.c	/^    AVS_VIDEO     = 0x01,$/;"	e	enum:avs_block_type	file:
AVSampleFormat	libavutil/samplefmt.h	/^enum AVSampleFormat {$/;"	g
AVStream	libavformat/avformat.h	/^typedef struct AVStream {$/;"	s
AVStream	libavformat/avformat.h	/^} AVStream;$/;"	t	typeref:struct:AVStream
AVStreamMap	ffmpeg.c	/^typedef struct AVStreamMap {$/;"	s	file:
AVStreamMap	ffmpeg.c	/^} AVStreamMap;$/;"	t	typeref:struct:AVStreamMap	file:
AVStreamMap	ffmpeg/ffmpeg.c	/^typedef struct AVStreamMap {$/;"	s	file:
AVStreamMap	ffmpeg/ffmpeg.c	/^} AVStreamMap;$/;"	t	typeref:struct:AVStreamMap	file:
AVStreamParseType	libavformat/avformat.h	/^enum AVStreamParseType {$/;"	g
AVSubtitle	libavcodec/avcodec.h	/^typedef struct AVSubtitle {$/;"	s
AVSubtitle	libavcodec/avcodec.h	/^} AVSubtitle;$/;"	t	typeref:struct:AVSubtitle
AVSubtitleRect	libavcodec/avcodec.h	/^typedef struct AVSubtitleRect {$/;"	s
AVSubtitleRect	libavcodec/avcodec.h	/^} AVSubtitleRect;$/;"	t	typeref:struct:AVSubtitleRect
AVSubtitleType	libavcodec/avcodec.h	/^enum AVSubtitleType {$/;"	g
AVSyncPoint	libavformat/seek.c	/^} AVSyncPoint;$/;"	t	typeref:struct:__anon438	file:
AVTreeNode	libavutil/tree.c	/^typedef struct AVTreeNode{$/;"	s	file:
AVTreeNode	libavutil/tree.c	/^}AVTreeNode;$/;"	t	typeref:struct:AVTreeNode	file:
AVUNERROR	libavutil/error.h	33;"	d
AVUNERROR	libavutil/error.h	37;"	d
AVUTIL_ADLER32_H	libavutil/adler32.h	22;"	d
AVUTIL_AES_H	libavutil/aes.h	22;"	d
AVUTIL_ARM_BSWAP_H	libavutil/arm/bswap.h	20;"	d
AVUTIL_ARM_INTMATH_H	libavutil/arm/intmath.h	22;"	d
AVUTIL_ARM_INTREADWRITE_H	libavutil/arm/intreadwrite.h	20;"	d
AVUTIL_ARM_TIMER_H	libavutil/arm/timer.h	22;"	d
AVUTIL_ATTRIBUTES_H	libavutil/attributes.h	27;"	d
AVUTIL_AUDIOCONVERT_H	libavutil/audioconvert.h	23;"	d
AVUTIL_AVASSERT_H	libavutil/avassert.h	28;"	d
AVUTIL_AVCONFIG_H	libavutil/avconfig.h	3;"	d
AVUTIL_AVR32_BSWAP_H	libavutil/avr32/bswap.h	20;"	d
AVUTIL_AVR32_INTREADWRITE_H	libavutil/avr32/intreadwrite.h	22;"	d
AVUTIL_AVSTRING_H	libavutil/avstring.h	22;"	d
AVUTIL_AVUTIL_H	libavutil/avutil.h	22;"	d
AVUTIL_BASE64_H	libavutil/base64.h	22;"	d
AVUTIL_BFIN_BSWAP_H	libavutil/bfin/bswap.h	27;"	d
AVUTIL_BFIN_TIMER_H	libavutil/bfin/timer.h	22;"	d
AVUTIL_BSWAP_H	libavutil/bswap.h	27;"	d
AVUTIL_COLORSPACE_H	libavutil/colorspace.h	28;"	d
AVUTIL_COMMON_H	libavutil/common.h	27;"	d
AVUTIL_CPU_H	libavutil/cpu.h	22;"	d
AVUTIL_CRC_DATA_H	libavutil/crc_data.h	22;"	d
AVUTIL_CRC_H	libavutil/crc.h	22;"	d
AVUTIL_DES_H	libavutil/des.h	23;"	d
AVUTIL_DICT_H	libavutil/dict.h	26;"	d
AVUTIL_ERROR_H	libavutil/error.h	25;"	d
AVUTIL_EVAL_H	libavutil/eval.h	27;"	d
AVUTIL_FIFO_H	libavutil/fifo.h	25;"	d
AVUTIL_FILE_H	libavutil/file.h	20;"	d
AVUTIL_IMGUTILS_H	libavutil/imgutils.h	20;"	d
AVUTIL_INTEGER_H	libavutil/integer.h	29;"	d
AVUTIL_INTERNAL_H	libavutil/internal.h	27;"	d
AVUTIL_INTFLOAT_READWRITE_H	libavutil/intfloat_readwrite.h	22;"	d
AVUTIL_INTMATH_H	libavutil/intmath.h	22;"	d
AVUTIL_INTREADWRITE_H	libavutil/intreadwrite.h	20;"	d
AVUTIL_LFG_H	libavutil/lfg.h	23;"	d
AVUTIL_LIBM_H	libavutil/libm.h	25;"	d
AVUTIL_LLS_H	libavutil/lls.h	24;"	d
AVUTIL_LOG_H	libavutil/log.h	22;"	d
AVUTIL_LZO_H	libavutil/lzo.h	23;"	d
AVUTIL_MATHEMATICS_H	libavutil/mathematics.h	22;"	d
AVUTIL_MD5_H	libavutil/md5.h	22;"	d
AVUTIL_MEM_H	libavutil/mem.h	27;"	d
AVUTIL_MIPS_INTREADWRITE_H	libavutil/mips/intreadwrite.h	22;"	d
AVUTIL_OPT_H	libavutil/opt.h	23;"	d
AVUTIL_PARSEUTILS_H	libavutil/parseutils.h	20;"	d
AVUTIL_PCA_H	libavutil/pca.h	28;"	d
AVUTIL_PIXDESC_H	libavutil/pixdesc.h	23;"	d
AVUTIL_PIXFMT_H	libavutil/pixfmt.h	22;"	d
AVUTIL_PPC_INTREADWRITE_H	libavutil/ppc/intreadwrite.h	22;"	d
AVUTIL_PPC_TIMER_H	libavutil/ppc/timer.h	22;"	d
AVUTIL_RANDOM_SEED_H	libavutil/random_seed.h	22;"	d
AVUTIL_RATIONAL_H	libavutil/rational.h	29;"	d
AVUTIL_RC4_H	libavutil/rc4.h	22;"	d
AVUTIL_SAMPLEFMT_H	libavutil/samplefmt.h	20;"	d
AVUTIL_SH4_BSWAP_H	libavutil/sh4/bswap.h	25;"	d
AVUTIL_SHA_H	libavutil/sha.h	22;"	d
AVUTIL_SOFTFLOAT_H	libavutil/softfloat.h	22;"	d
AVUTIL_TIMER_H	libavutil/timer.h	25;"	d
AVUTIL_TOMI_INTREADWRITE_H	libavutil/tomi/intreadwrite.h	22;"	d
AVUTIL_TREE_H	libavutil/tree.h	30;"	d
AVUTIL_X86_BSWAP_H	libavutil/x86/bswap.h	25;"	d
AVUTIL_X86_CPU_H	libavutil/x86_cpu.h	22;"	d
AVUTIL_X86_INTMATH_H	libavutil/x86/intmath.h	22;"	d
AVUTIL_X86_INTREADWRITE_H	libavutil/x86/intreadwrite.h	22;"	d
AVUTIL_X86_TIMER_H	libavutil/x86/timer.h	22;"	d
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR addpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR addps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR addsd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR addss, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR addsubpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR addsubps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR andnpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR andnps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR andpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR andps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR blendpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR blendps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR blendvpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR blendvps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR cmppd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR cmpps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR cmpsd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR cmpss, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR divpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR divps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR divsd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR divss, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR dppd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR dpps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR haddpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR haddps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR hsubpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR hsubps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR maxpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR maxps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR maxsd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR maxss, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR minpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR minps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR minsd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR minss, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR mpsadbw, 0, 1$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR mulpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR mulps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR mulsd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR mulss, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR orpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR orps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR packssdw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR packsswb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR packusdw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR packuswb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR paddb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR paddd, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR paddq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR paddsb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR paddsw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR paddusb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR paddusw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR paddw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR palignr, 0, 1$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pand, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pandn, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pavgb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pavgw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pblendvb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pblendw, 0, 1$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pcmpeqb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pcmpeqd, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pcmpeqq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pcmpeqw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pcmpestri, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pcmpestrm, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pcmpgtb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pcmpgtd, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pcmpgtq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pcmpgtw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pcmpistri, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pcmpistrm, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pfadd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pfmul, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pfsub, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR phaddd, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR phaddsw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR phaddw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR phsubd, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR phsubsw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR phsubw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmaddubsw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmaddwd, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmaxsb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmaxsd, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmaxsw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmaxub, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmaxud, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmaxuw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pminsb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pminsd, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pminsw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pminub, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pminud, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pminuw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmuldq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmulhrsw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmulhuw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmulhw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmulld, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmullw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pmuludq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR por, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psadbw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pshufb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psignb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psignd, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psignw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pslld, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pslldq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psllq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psllw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psrad, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psraw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psrld, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psrldq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psrlq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psrlw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psubb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psubd, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psubq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psubsb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psubsw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psubusb, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psubusw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR psubw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR punpckhbw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR punpckhdq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR punpckhqdq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR punpckhwd, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR punpcklbw, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR punpckldq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR punpcklqdq, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR punpcklwd, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR pxor, 0, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR shufps, 0, 1$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR subpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR subps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR subsd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR subss, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR unpckhpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR unpckhps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR unpcklpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR unpcklps, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR xorpd, 1, 0$/;"	l
AVX_INSTR	libavcodec/x86/x86inc.asm	/^AVX_INSTR xorps, 1, 0$/;"	l
AV_AUDIO_SERVICE_TYPE_COMMENTARY	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_COMMENTARY        = 5,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_DIALOGUE	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_DIALOGUE          = 4,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_EFFECTS	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_EFFECTS           = 1,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_EMERGENCY	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_EMERGENCY         = 6,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED  = 3,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_KARAOKE	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_KARAOKE           = 8,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_MAIN	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_MAIN              = 0,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_NB	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_NB                   , \/\/\/< Not part of ABI$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED = 2,$/;"	e	enum:AVAudioServiceType
AV_AUDIO_SERVICE_TYPE_VOICE_OVER	libavcodec/avcodec.h	/^    AV_AUDIO_SERVICE_TYPE_VOICE_OVER        = 7,$/;"	e	enum:AVAudioServiceType
AV_BASE64_SIZE	libavutil/base64.h	52;"	d
AV_BE2NE16C	libavutil/bswap.h	117;"	d
AV_BE2NE32C	libavutil/bswap.h	118;"	d
AV_BE2NE64C	libavutil/bswap.h	119;"	d
AV_BE2NEC	libavutil/bswap.h	104;"	d
AV_BE2NEC	libavutil/bswap.h	113;"	d
AV_BSWAP16C	libavutil/bswap.h	51;"	d
AV_BSWAP32C	libavutil/bswap.h	52;"	d
AV_BSWAP64C	libavutil/bswap.h	53;"	d
AV_BSWAPC	libavutil/bswap.h	55;"	d
AV_CAT_SEPARATOR	libavformat/concat.c	29;"	d	file:
AV_CH_BACK_CENTER	libavutil/audioconvert.h	41;"	d
AV_CH_BACK_LEFT	libavutil/audioconvert.h	37;"	d
AV_CH_BACK_RIGHT	libavutil/audioconvert.h	38;"	d
AV_CH_FRONT_CENTER	libavutil/audioconvert.h	35;"	d
AV_CH_FRONT_LEFT	libavutil/audioconvert.h	33;"	d
AV_CH_FRONT_LEFT_OF_CENTER	libavutil/audioconvert.h	39;"	d
AV_CH_FRONT_RIGHT	libavutil/audioconvert.h	34;"	d
AV_CH_FRONT_RIGHT_OF_CENTER	libavutil/audioconvert.h	40;"	d
AV_CH_LAYOUT_2_1	libavutil/audioconvert.h	62;"	d
AV_CH_LAYOUT_2_2	libavutil/audioconvert.h	65;"	d
AV_CH_LAYOUT_4POINT0	libavutil/audioconvert.h	64;"	d
AV_CH_LAYOUT_5POINT0	libavutil/audioconvert.h	67;"	d
AV_CH_LAYOUT_5POINT0_BACK	libavutil/audioconvert.h	69;"	d
AV_CH_LAYOUT_5POINT1	libavutil/audioconvert.h	68;"	d
AV_CH_LAYOUT_5POINT1_BACK	libavutil/audioconvert.h	70;"	d
AV_CH_LAYOUT_7POINT0	libavutil/audioconvert.h	71;"	d
AV_CH_LAYOUT_7POINT1	libavutil/audioconvert.h	72;"	d
AV_CH_LAYOUT_7POINT1_WIDE	libavutil/audioconvert.h	73;"	d
AV_CH_LAYOUT_MONO	libavutil/audioconvert.h	60;"	d
AV_CH_LAYOUT_NATIVE	libavutil/audioconvert.h	57;"	d
AV_CH_LAYOUT_QUAD	libavutil/audioconvert.h	66;"	d
AV_CH_LAYOUT_STEREO	libavutil/audioconvert.h	61;"	d
AV_CH_LAYOUT_STEREO_DOWNMIX	libavutil/audioconvert.h	74;"	d
AV_CH_LAYOUT_SURROUND	libavutil/audioconvert.h	63;"	d
AV_CH_LOW_FREQUENCY	libavutil/audioconvert.h	36;"	d
AV_CH_SIDE_LEFT	libavutil/audioconvert.h	42;"	d
AV_CH_SIDE_RIGHT	libavutil/audioconvert.h	43;"	d
AV_CH_STEREO_LEFT	libavutil/audioconvert.h	51;"	d
AV_CH_STEREO_RIGHT	libavutil/audioconvert.h	52;"	d
AV_CH_TOP_BACK_CENTER	libavutil/audioconvert.h	49;"	d
AV_CH_TOP_BACK_LEFT	libavutil/audioconvert.h	48;"	d
AV_CH_TOP_BACK_RIGHT	libavutil/audioconvert.h	50;"	d
AV_CH_TOP_CENTER	libavutil/audioconvert.h	44;"	d
AV_CH_TOP_FRONT_CENTER	libavutil/audioconvert.h	46;"	d
AV_CH_TOP_FRONT_LEFT	libavutil/audioconvert.h	45;"	d
AV_CH_TOP_FRONT_RIGHT	libavutil/audioconvert.h	47;"	d
AV_CODEC_DEFAULT_BITRATE	libavcodec/options.c	68;"	d	file:
AV_COPY	libavutil/intreadwrite.h	471;"	d
AV_COPY128	libavutil/intreadwrite.h	487;"	d
AV_COPY128	libavutil/x86/intreadwrite.h	/^static av_always_inline void AV_COPY128(void *d, const void *s)$/;"	f
AV_COPY128	libavutil/x86/intreadwrite.h	66;"	d
AV_COPY16	libavutil/intreadwrite.h	475;"	d
AV_COPY32	libavutil/intreadwrite.h	479;"	d
AV_COPY64	libavutil/intreadwrite.h	483;"	d
AV_COPY64	libavutil/x86/intreadwrite.h	/^static av_always_inline void AV_COPY64(void *d, const void *s)$/;"	f
AV_COPY64	libavutil/x86/intreadwrite.h	32;"	d
AV_CPU_FLAG_3DNOW	libavutil/cpu.h	29;"	d
AV_CPU_FLAG_3DNOWEXT	libavutil/cpu.h	33;"	d
AV_CPU_FLAG_ALTIVEC	libavutil/cpu.h	42;"	d
AV_CPU_FLAG_ATOM	libavutil/cpu.h	37;"	d
AV_CPU_FLAG_AVX	libavutil/cpu.h	40;"	d
AV_CPU_FLAG_FORCE	libavutil/cpu.h	24;"	d
AV_CPU_FLAG_IWMMXT	libavutil/cpu.h	41;"	d
AV_CPU_FLAG_MMX	libavutil/cpu.h	27;"	d
AV_CPU_FLAG_MMX2	libavutil/cpu.h	28;"	d
AV_CPU_FLAG_SSE	libavutil/cpu.h	30;"	d
AV_CPU_FLAG_SSE2	libavutil/cpu.h	31;"	d
AV_CPU_FLAG_SSE2SLOW	libavutil/cpu.h	32;"	d
AV_CPU_FLAG_SSE3	libavutil/cpu.h	34;"	d
AV_CPU_FLAG_SSE3SLOW	libavutil/cpu.h	35;"	d
AV_CPU_FLAG_SSE4	libavutil/cpu.h	38;"	d
AV_CPU_FLAG_SSE42	libavutil/cpu.h	39;"	d
AV_CPU_FLAG_SSSE3	libavutil/cpu.h	36;"	d
AV_CRC_16_ANSI	libavutil/crc.h	/^    AV_CRC_16_ANSI,$/;"	e	enum:__anon301
AV_CRC_16_CCITT	libavutil/crc.h	/^    AV_CRC_16_CCITT,$/;"	e	enum:__anon301
AV_CRC_32_IEEE	libavutil/crc.h	/^    AV_CRC_32_IEEE,$/;"	e	enum:__anon301
AV_CRC_32_IEEE_LE	libavutil/crc.h	/^    AV_CRC_32_IEEE_LE,  \/*< reversed bitorder version of AV_CRC_32_IEEE *\/$/;"	e	enum:__anon301
AV_CRC_8_ATM	libavutil/crc.h	/^    AV_CRC_8_ATM,$/;"	e	enum:__anon301
AV_CRC_MAX	libavutil/crc.h	/^    AV_CRC_MAX,         \/*< Not part of public API! Do not use outside libavutil. *\/$/;"	e	enum:__anon301
AV_DELAY_MAX	ffmpeg.c	1086;"	d	file:
AV_DELAY_MAX	ffmpeg/ffmpeg.c	1086;"	d	file:
AV_DICT_APPEND	libavutil/dict.h	33;"	d
AV_DICT_DONT_OVERWRITE	libavutil/dict.h	32;"	d
AV_DICT_DONT_STRDUP_KEY	libavutil/dict.h	30;"	d
AV_DICT_DONT_STRDUP_VAL	libavutil/dict.h	31;"	d
AV_DICT_IGNORE_SUFFIX	libavutil/dict.h	29;"	d
AV_DICT_MATCH_CASE	libavutil/dict.h	28;"	d
AV_DISPOSITION_CLEAN_EFFECTS	libavformat/avformat.h	482;"	d
AV_DISPOSITION_COMMENT	libavformat/avformat.h	470;"	d
AV_DISPOSITION_DEFAULT	libavformat/avformat.h	467;"	d
AV_DISPOSITION_DUB	libavformat/avformat.h	468;"	d
AV_DISPOSITION_FORCED	libavformat/avformat.h	479;"	d
AV_DISPOSITION_HEARING_IMPAIRED	libavformat/avformat.h	480;"	d
AV_DISPOSITION_KARAOKE	libavformat/avformat.h	472;"	d
AV_DISPOSITION_LYRICS	libavformat/avformat.h	471;"	d
AV_DISPOSITION_ORIGINAL	libavformat/avformat.h	469;"	d
AV_DISPOSITION_VISUAL_IMPAIRED	libavformat/avformat.h	481;"	d
AV_GCC_VERSION_AT_LEAST	libavutil/attributes.h	30;"	d
AV_GCC_VERSION_AT_LEAST	libavutil/attributes.h	32;"	d
AV_GLUE	libavutil/avutil.h	33;"	d
AV_HAVE_BIGENDIAN	libavutil/avconfig.h	4;"	d
AV_HAVE_FAST_UNALIGNED	libavutil/avconfig.h	5;"	d
AV_INTEGER_SIZE	libavutil/integer.h	34;"	d
AV_JOIN	libavutil/avutil.h	34;"	d
AV_LANG_ISO639_1	libavformat/avlanguage.h	/^    AV_LANG_ISO639_1       \/** 2-char code of language as per ISO\/IEC 639-1 *\/$/;"	e	enum:AVLangCodespace
AV_LANG_ISO639_2_BIBL	libavformat/avlanguage.h	/^    AV_LANG_ISO639_2_BIBL, \/** 3-char bibliographic language codes as per ISO-IEC 639-2 *\/$/;"	e	enum:AVLangCodespace
AV_LANG_ISO639_2_TERM	libavformat/avlanguage.h	/^    AV_LANG_ISO639_2_TERM, \/** 3-char terminologic language codes as per ISO-IEC 639-2 *\/$/;"	e	enum:AVLangCodespace
AV_LE2NE16C	libavutil/bswap.h	120;"	d
AV_LE2NE32C	libavutil/bswap.h	121;"	d
AV_LE2NE64C	libavutil/bswap.h	122;"	d
AV_LE2NEC	libavutil/bswap.h	105;"	d
AV_LE2NEC	libavutil/bswap.h	114;"	d
AV_LOCK_CREATE	libavcodec/avcodec.h	/^  AV_LOCK_CREATE,  \/\/\/< Create a mutex$/;"	e	enum:AVLockOp
AV_LOCK_DESTROY	libavcodec/avcodec.h	/^  AV_LOCK_DESTROY, \/\/\/< Free mutex resources$/;"	e	enum:AVLockOp
AV_LOCK_OBTAIN	libavcodec/avcodec.h	/^  AV_LOCK_OBTAIN,  \/\/\/< Lock the mutex$/;"	e	enum:AVLockOp
AV_LOCK_RELEASE	libavcodec/avcodec.h	/^  AV_LOCK_RELEASE, \/\/\/< Unlock the mutex$/;"	e	enum:AVLockOp
AV_LOG_DEBUG	libavutil/log.h	116;"	d
AV_LOG_ERROR	libavutil/log.h	102;"	d
AV_LOG_FATAL	libavutil/log.h	96;"	d
AV_LOG_INFO	libavutil/log.h	110;"	d
AV_LOG_PANIC	libavutil/log.h	89;"	d
AV_LOG_QUIET	libavutil/log.h	84;"	d
AV_LOG_SKIP_REPEATED	libavutil/log.h	164;"	d
AV_LOG_VERBOSE	libavutil/log.h	111;"	d
AV_LOG_WARNING	libavutil/log.h	108;"	d
AV_LPC_TYPE_CHOLESKY	libavcodec/avcodec.h	/^    AV_LPC_TYPE_CHOLESKY    =  3, \/\/\/< Cholesky factorization$/;"	e	enum:AVLPCType
AV_LPC_TYPE_DEFAULT	libavcodec/avcodec.h	/^    AV_LPC_TYPE_DEFAULT     = -1, \/\/\/< use the codec default LPC type$/;"	e	enum:AVLPCType
AV_LPC_TYPE_FIXED	libavcodec/avcodec.h	/^    AV_LPC_TYPE_FIXED       =  1, \/\/\/< fixed LPC coefficients$/;"	e	enum:AVLPCType
AV_LPC_TYPE_LEVINSON	libavcodec/avcodec.h	/^    AV_LPC_TYPE_LEVINSON    =  2, \/\/\/< Levinson-Durbin recursion$/;"	e	enum:AVLPCType
AV_LPC_TYPE_NB	libavcodec/avcodec.h	/^    AV_LPC_TYPE_NB              , \/\/\/< Not part of ABI$/;"	e	enum:AVLPCType
AV_LPC_TYPE_NONE	libavcodec/avcodec.h	/^    AV_LPC_TYPE_NONE        =  0, \/\/\/< do not use LPC prediction or use all zero coefficients$/;"	e	enum:AVLPCType
AV_LZO_ERROR	libavutil/lzo.h	36;"	d
AV_LZO_INPUT_DEPLETED	libavutil/lzo.h	30;"	d
AV_LZO_INPUT_PADDING	libavutil/lzo.h	39;"	d
AV_LZO_INVALID_BACKPTR	libavutil/lzo.h	34;"	d
AV_LZO_OUTPUT_FULL	libavutil/lzo.h	32;"	d
AV_LZO_OUTPUT_PADDING	libavutil/lzo.h	40;"	d
AV_METADATA_DONT_OVERWRITE	libavformat/avformat.h	129;"	d
AV_METADATA_DONT_STRDUP_KEY	libavformat/avformat.h	127;"	d
AV_METADATA_DONT_STRDUP_VAL	libavformat/avformat.h	128;"	d
AV_METADATA_IGNORE_SUFFIX	libavformat/avformat.h	126;"	d
AV_METADATA_MATCH_CASE	libavformat/avformat.h	125;"	d
AV_NE	libavutil/common.h	41;"	d
AV_NE	libavutil/common.h	43;"	d
AV_NOPTS_VALUE	libavutil/avutil.h	102;"	d
AV_NOSYNC_THRESHOLD	ffplay.c	70;"	d	file:
AV_OPT_FLAG_AUDIO_PARAM	libavutil/opt.h	82;"	d
AV_OPT_FLAG_DECODING_PARAM	libavutil/opt.h	80;"	d
AV_OPT_FLAG_ENCODING_PARAM	libavutil/opt.h	79;"	d
AV_OPT_FLAG_METADATA	libavutil/opt.h	81;"	d
AV_OPT_FLAG_SUBTITLE_PARAM	libavutil/opt.h	84;"	d
AV_OPT_FLAG_VIDEO_PARAM	libavutil/opt.h	83;"	d
AV_OPT_SEARCH_CHILDREN	libavutil/opt.h	217;"	d
AV_PARSER_PTS_NB	libavcodec/avcodec.h	3989;"	d
AV_PERM_NEG_LINESIZES	libavfilter/avfilter.h	92;"	d
AV_PERM_PRESERVE	libavfilter/avfilter.h	89;"	d
AV_PERM_READ	libavfilter/avfilter.h	87;"	d
AV_PERM_REUSE	libavfilter/avfilter.h	90;"	d
AV_PERM_REUSE2	libavfilter/avfilter.h	91;"	d
AV_PERM_WRITE	libavfilter/avfilter.h	88;"	d
AV_PICTURE_TYPE_B	libavutil/avutil.h	/^    AV_PICTURE_TYPE_B,     \/\/\/< Bi-dir predicted$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_BI	libavutil/avutil.h	/^    AV_PICTURE_TYPE_BI,    \/\/\/< BI type$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_I	libavutil/avutil.h	/^    AV_PICTURE_TYPE_I,     \/\/\/< Intra$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_NONE	libavutil/avutil.h	/^    AV_PICTURE_TYPE_NONE = 0, \/\/\/< Undefined$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_P	libavutil/avutil.h	/^    AV_PICTURE_TYPE_P,     \/\/\/< Predicted$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_S	libavutil/avutil.h	/^    AV_PICTURE_TYPE_S,     \/\/\/< S(GMC)-VOP MPEG4$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_SI	libavutil/avutil.h	/^    AV_PICTURE_TYPE_SI,    \/\/\/< Switching Intra$/;"	e	enum:AVPictureType
AV_PICTURE_TYPE_SP	libavutil/avutil.h	/^    AV_PICTURE_TYPE_SP,    \/\/\/< Switching Predicted$/;"	e	enum:AVPictureType
AV_PKT_DATA_PALETTE	libavcodec/avcodec.h	/^    AV_PKT_DATA_PALETTE,$/;"	e	enum:AVPacketSideDataType
AV_PKT_FLAG_KEY	libavcodec/avcodec.h	1138;"	d
AV_PRAGMA	libavutil/avutil.h	36;"	d
AV_PROGRAM_RUNNING	libavformat/avformat.h	646;"	d
AV_RB	libavutil/intreadwrite.h	346;"	d
AV_RB	libavutil/intreadwrite.h	351;"	d
AV_RB16	libavutil/avr32/intreadwrite.h	/^static av_always_inline uint16_t AV_RB16(const void *p)$/;"	f
AV_RB16	libavutil/avr32/intreadwrite.h	53;"	d
AV_RB16	libavutil/intreadwrite.h	208;"	d
AV_RB16	libavutil/intreadwrite.h	364;"	d
AV_RB16	libavutil/intreadwrite.h	82;"	d
AV_RB16	libavutil/tomi/intreadwrite.h	/^static av_always_inline uint16_t AV_RB16(const void *p)$/;"	f
AV_RB16	libavutil/tomi/intreadwrite.h	27;"	d
AV_RB24	libavutil/avr32/intreadwrite.h	/^static av_always_inline uint32_t AV_RB24(const void *p)$/;"	f
AV_RB24	libavutil/avr32/intreadwrite.h	64;"	d
AV_RB24	libavutil/intreadwrite.h	406;"	d
AV_RB24	libavutil/intreadwrite.h	94;"	d
AV_RB32	libavutil/avr32/intreadwrite.h	/^static av_always_inline uint32_t AV_RB32(const void *p)$/;"	f
AV_RB32	libavutil/avr32/intreadwrite.h	130;"	d
AV_RB32	libavutil/avr32/intreadwrite.h	94;"	d
AV_RB32	libavutil/intreadwrite.h	106;"	d
AV_RB32	libavutil/intreadwrite.h	232;"	d
AV_RB32	libavutil/intreadwrite.h	378;"	d
AV_RB32	libavutil/tomi/intreadwrite.h	/^static av_always_inline uint32_t AV_RB32(const void *p)$/;"	f
AV_RB32	libavutil/tomi/intreadwrite.h	74;"	d
AV_RB64	libavutil/avr32/intreadwrite.h	/^static av_always_inline uint64_t AV_RB64(const void *p)$/;"	f
AV_RB64	libavutil/avr32/intreadwrite.h	164;"	d
AV_RB64	libavutil/intreadwrite.h	118;"	d
AV_RB64	libavutil/intreadwrite.h	264;"	d
AV_RB64	libavutil/intreadwrite.h	392;"	d
AV_RB64	libavutil/ppc/intreadwrite.h	105;"	d
AV_RB8	libavutil/intreadwrite.h	357;"	d
AV_READ_TIME	libavutil/arm/timer.h	29;"	d
AV_READ_TIME	libavutil/bfin/timer.h	26;"	d
AV_READ_TIME	libavutil/ppc/timer.h	26;"	d
AV_READ_TIME	libavutil/timer.h	42;"	d
AV_READ_TIME	libavutil/x86/timer.h	26;"	d
AV_RL	libavutil/intreadwrite.h	348;"	d
AV_RL	libavutil/intreadwrite.h	353;"	d
AV_RL16	libavutil/avr32/intreadwrite.h	/^static av_always_inline uint16_t AV_RL16(const void *p)$/;"	f
AV_RL16	libavutil/avr32/intreadwrite.h	42;"	d
AV_RL16	libavutil/intreadwrite.h	132;"	d
AV_RL16	libavutil/intreadwrite.h	220;"	d
AV_RL16	libavutil/intreadwrite.h	371;"	d
AV_RL16	libavutil/ppc/intreadwrite.h	/^static av_always_inline uint16_t AV_RL16(const void *p)$/;"	f
AV_RL16	libavutil/ppc/intreadwrite.h	29;"	d
AV_RL16	libavutil/tomi/intreadwrite.h	/^static av_always_inline uint16_t AV_RL16(const void *p)$/;"	f
AV_RL16	libavutil/tomi/intreadwrite.h	51;"	d
AV_RL24	libavutil/avr32/intreadwrite.h	/^static av_always_inline uint32_t AV_RL24(const void *p)$/;"	f
AV_RL24	libavutil/avr32/intreadwrite.h	78;"	d
AV_RL24	libavutil/intreadwrite.h	144;"	d
AV_RL24	libavutil/intreadwrite.h	420;"	d
AV_RL32	libavutil/avr32/intreadwrite.h	/^static av_always_inline uint32_t AV_RL32(const void *p)$/;"	f
AV_RL32	libavutil/avr32/intreadwrite.h	109;"	d
AV_RL32	libavutil/avr32/intreadwrite.h	146;"	d
AV_RL32	libavutil/intreadwrite.h	156;"	d
AV_RL32	libavutil/intreadwrite.h	248;"	d
AV_RL32	libavutil/intreadwrite.h	385;"	d
AV_RL32	libavutil/ppc/intreadwrite.h	/^static av_always_inline uint32_t AV_RL32(const void *p)$/;"	f
AV_RL32	libavutil/ppc/intreadwrite.h	43;"	d
AV_RL32	libavutil/tomi/intreadwrite.h	/^static av_always_inline uint32_t AV_RL32(const void *p)$/;"	f
AV_RL32	libavutil/tomi/intreadwrite.h	112;"	d
AV_RL64	libavutil/avr32/intreadwrite.h	/^static av_always_inline uint64_t AV_RL64(const void *p)$/;"	f
AV_RL64	libavutil/avr32/intreadwrite.h	173;"	d
AV_RL64	libavutil/intreadwrite.h	168;"	d
AV_RL64	libavutil/intreadwrite.h	288;"	d
AV_RL64	libavutil/intreadwrite.h	399;"	d
AV_RL64	libavutil/ppc/intreadwrite.h	/^static av_always_inline uint64_t AV_RL64(const void *p)$/;"	f
AV_RL64	libavutil/ppc/intreadwrite.h	59;"	d
AV_RL64	libavutil/ppc/intreadwrite.h	75;"	d
AV_RL8	libavutil/intreadwrite.h	360;"	d
AV_RN	libavutil/intreadwrite.h	192;"	d
AV_RN	libavutil/intreadwrite.h	197;"	d
AV_RN	libavutil/intreadwrite.h	202;"	d
AV_RN	libavutil/intreadwrite.h	312;"	d
AV_RN	libavutil/intreadwrite.h	315;"	d
AV_RN16	libavutil/arm/intreadwrite.h	/^static av_always_inline unsigned AV_RN16(const void *p)$/;"	f
AV_RN16	libavutil/arm/intreadwrite.h	27;"	d
AV_RN16	libavutil/intreadwrite.h	134;"	d
AV_RN16	libavutil/intreadwrite.h	322;"	d
AV_RN16	libavutil/intreadwrite.h	84;"	d
AV_RN16A	libavutil/intreadwrite.h	442;"	d
AV_RN24	libavutil/intreadwrite.h	146;"	d
AV_RN24	libavutil/intreadwrite.h	96;"	d
AV_RN2P	libavcodec/high_bit_depth.h	33;"	d
AV_RN2P	libavcodec/high_bit_depth.h	66;"	d
AV_RN32	libavutil/arm/intreadwrite.h	/^static av_always_inline uint32_t AV_RN32(const void *p)$/;"	f
AV_RN32	libavutil/arm/intreadwrite.h	41;"	d
AV_RN32	libavutil/intreadwrite.h	108;"	d
AV_RN32	libavutil/intreadwrite.h	158;"	d
AV_RN32	libavutil/intreadwrite.h	326;"	d
AV_RN32	libavutil/mips/intreadwrite.h	/^static av_always_inline uint32_t AV_RN32(const void *p)$/;"	f
AV_RN32	libavutil/mips/intreadwrite.h	29;"	d
AV_RN32A	libavutil/intreadwrite.h	446;"	d
AV_RN4P	libavcodec/high_bit_depth.h	34;"	d
AV_RN4P	libavcodec/high_bit_depth.h	67;"	d
AV_RN4PA	libavcodec/high_bit_depth.h	35;"	d
AV_RN4PA	libavcodec/high_bit_depth.h	68;"	d
AV_RN64	libavutil/arm/intreadwrite.h	/^static av_always_inline uint64_t AV_RN64(const void *p)$/;"	f
AV_RN64	libavutil/arm/intreadwrite.h	55;"	d
AV_RN64	libavutil/intreadwrite.h	120;"	d
AV_RN64	libavutil/intreadwrite.h	170;"	d
AV_RN64	libavutil/intreadwrite.h	330;"	d
AV_RN64	libavutil/mips/intreadwrite.h	/^static av_always_inline uint64_t AV_RN64(const void *p)$/;"	f
AV_RN64	libavutil/mips/intreadwrite.h	53;"	d
AV_RN64	libavutil/mips/intreadwrite.h	77;"	d
AV_RN64A	libavutil/intreadwrite.h	450;"	d
AV_RNA	libavutil/intreadwrite.h	438;"	d
AV_ROUND_DOWN	libavutil/mathematics.h	/^    AV_ROUND_DOWN     = 2, \/\/\/< Round toward -infinity.$/;"	e	enum:AVRounding
AV_ROUND_INF	libavutil/mathematics.h	/^    AV_ROUND_INF      = 1, \/\/\/< Round away from zero.$/;"	e	enum:AVRounding
AV_ROUND_NEAR_INF	libavutil/mathematics.h	/^    AV_ROUND_NEAR_INF = 5, \/\/\/< Round to nearest and halfway cases away from zero.$/;"	e	enum:AVRounding
AV_ROUND_UP	libavutil/mathematics.h	/^    AV_ROUND_UP       = 3, \/\/\/< Round toward +infinity.$/;"	e	enum:AVRounding
AV_ROUND_ZERO	libavutil/mathematics.h	/^    AV_ROUND_ZERO     = 0, \/\/\/< Round toward zero.$/;"	e	enum:AVRounding
AV_SAMPLE_FMT_DBL	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_DBL,         \/\/\/< double$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_FLT	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_FLT,         \/\/\/< float$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_NB	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_NB           \/\/\/< Number of sample formats. DO NOT USE if linking dynamically$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_NONE	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_NONE = -1,$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S16	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S16,         \/\/\/< signed 16 bits$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_S32	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_S32,         \/\/\/< signed 32 bits$/;"	e	enum:AVSampleFormat
AV_SAMPLE_FMT_U8	libavutil/samplefmt.h	/^    AV_SAMPLE_FMT_U8,          \/\/\/< unsigned 8 bits$/;"	e	enum:AVSampleFormat
AV_STRINGIFY	libavutil/avutil.h	30;"	d
AV_SWAP	libavutil/intreadwrite.h	494;"	d
AV_SWAP64	libavutil/intreadwrite.h	497;"	d
AV_SWAP64	libavutil/x86/intreadwrite.h	/^static av_always_inline void AV_SWAP64(void *a, void *b)$/;"	f
AV_SWAP64	libavutil/x86/intreadwrite.h	42;"	d
AV_SYNC_AUDIO_MASTER	ffplay.c	/^    AV_SYNC_AUDIO_MASTER, \/* default choice *\/$/;"	e	enum:__anon1	file:
AV_SYNC_EXTERNAL_CLOCK	ffplay.c	/^    AV_SYNC_EXTERNAL_CLOCK, \/* synchronize to an external clock *\/$/;"	e	enum:__anon1	file:
AV_SYNC_THRESHOLD	ffplay.c	68;"	d	file:
AV_SYNC_VIDEO_MASTER	ffplay.c	/^    AV_SYNC_VIDEO_MASTER,$/;"	e	enum:__anon1	file:
AV_TIME_BASE	libavutil/avutil.h	103;"	d
AV_TIME_BASE_Q	libavutil/avutil.h	104;"	d
AV_TOSTRING	libavutil/avutil.h	31;"	d
AV_VERSION	libavutil/avutil.h	40;"	d
AV_VERSION_DOT	libavutil/avutil.h	39;"	d
AV_VERSION_INT	libavutil/avutil.h	38;"	d
AV_VSINK_BUF_FLAG_PEEK	libavfilter/vsink_buffer.h	34;"	d
AV_VSRC_BUF_FLAG_OVERWRITE	libavfilter/vsrc_buffer.h	36;"	d
AV_WB	libavutil/intreadwrite.h	347;"	d
AV_WB	libavutil/intreadwrite.h	352;"	d
AV_WB16	libavutil/intreadwrite.h	213;"	d
AV_WB16	libavutil/intreadwrite.h	367;"	d
AV_WB16	libavutil/intreadwrite.h	88;"	d
AV_WB16	libavutil/tomi/intreadwrite.h	/^static av_always_inline void AV_WB16(void *p, uint16_t v)$/;"	f
AV_WB16	libavutil/tomi/intreadwrite.h	40;"	d
AV_WB24	libavutil/intreadwrite.h	100;"	d
AV_WB24	libavutil/intreadwrite.h	412;"	d
AV_WB32	libavutil/avr32/intreadwrite.h	/^static av_always_inline void AV_WB32(void *p, uint32_t v)$/;"	f
AV_WB32	libavutil/avr32/intreadwrite.h	102;"	d
AV_WB32	libavutil/intreadwrite.h	112;"	d
AV_WB32	libavutil/intreadwrite.h	239;"	d
AV_WB32	libavutil/intreadwrite.h	381;"	d
AV_WB32	libavutil/tomi/intreadwrite.h	/^static av_always_inline void AV_WB32(void *p, uint32_t v)$/;"	f
AV_WB32	libavutil/tomi/intreadwrite.h	96;"	d
AV_WB64	libavutil/avr32/intreadwrite.h	/^static av_always_inline void AV_WB64(void *p, uint64_t v)$/;"	f
AV_WB64	libavutil/avr32/intreadwrite.h	112;"	d
AV_WB64	libavutil/intreadwrite.h	124;"	d
AV_WB64	libavutil/intreadwrite.h	275;"	d
AV_WB64	libavutil/intreadwrite.h	395;"	d
AV_WB64	libavutil/ppc/intreadwrite.h	106;"	d
AV_WB8	libavutil/intreadwrite.h	358;"	d
AV_WL	libavutil/intreadwrite.h	349;"	d
AV_WL	libavutil/intreadwrite.h	354;"	d
AV_WL16	libavutil/intreadwrite.h	138;"	d
AV_WL16	libavutil/intreadwrite.h	225;"	d
AV_WL16	libavutil/intreadwrite.h	374;"	d
AV_WL16	libavutil/ppc/intreadwrite.h	/^static av_always_inline void AV_WL16(void *p, uint16_t v)$/;"	f
AV_WL16	libavutil/ppc/intreadwrite.h	37;"	d
AV_WL16	libavutil/tomi/intreadwrite.h	/^static av_always_inline void AV_WL16(void *p, uint16_t v)$/;"	f
AV_WL16	libavutil/tomi/intreadwrite.h	64;"	d
AV_WL24	libavutil/intreadwrite.h	150;"	d
AV_WL24	libavutil/intreadwrite.h	426;"	d
AV_WL32	libavutil/avr32/intreadwrite.h	110;"	d
AV_WL32	libavutil/intreadwrite.h	162;"	d
AV_WL32	libavutil/intreadwrite.h	255;"	d
AV_WL32	libavutil/intreadwrite.h	388;"	d
AV_WL32	libavutil/ppc/intreadwrite.h	/^static av_always_inline void AV_WL32(void *p, uint32_t v)$/;"	f
AV_WL32	libavutil/ppc/intreadwrite.h	51;"	d
AV_WL32	libavutil/tomi/intreadwrite.h	/^static av_always_inline void AV_WL32(void *p, uint32_t v)$/;"	f
AV_WL32	libavutil/tomi/intreadwrite.h	134;"	d
AV_WL64	libavutil/avr32/intreadwrite.h	/^static av_always_inline void AV_WL64(void *p, uint64_t v)$/;"	f
AV_WL64	libavutil/avr32/intreadwrite.h	120;"	d
AV_WL64	libavutil/intreadwrite.h	174;"	d
AV_WL64	libavutil/intreadwrite.h	299;"	d
AV_WL64	libavutil/intreadwrite.h	402;"	d
AV_WL64	libavutil/ppc/intreadwrite.h	/^static av_always_inline void AV_WL64(void *p, uint64_t v)$/;"	f
AV_WL64	libavutil/ppc/intreadwrite.h	67;"	d
AV_WL64	libavutil/ppc/intreadwrite.h	86;"	d
AV_WL8	libavutil/intreadwrite.h	361;"	d
AV_WN	libavutil/intreadwrite.h	193;"	d
AV_WN	libavutil/intreadwrite.h	198;"	d
AV_WN	libavutil/intreadwrite.h	203;"	d
AV_WN	libavutil/intreadwrite.h	313;"	d
AV_WN	libavutil/intreadwrite.h	316;"	d
AV_WN16	libavutil/arm/intreadwrite.h	/^static av_always_inline void AV_WN16(void *p, uint16_t v)$/;"	f
AV_WN16	libavutil/arm/intreadwrite.h	35;"	d
AV_WN16	libavutil/intreadwrite.h	140;"	d
AV_WN16	libavutil/intreadwrite.h	334;"	d
AV_WN16	libavutil/intreadwrite.h	90;"	d
AV_WN16A	libavutil/intreadwrite.h	454;"	d
AV_WN24	libavutil/intreadwrite.h	102;"	d
AV_WN24	libavutil/intreadwrite.h	152;"	d
AV_WN2P	libavcodec/high_bit_depth.h	36;"	d
AV_WN2P	libavcodec/high_bit_depth.h	69;"	d
AV_WN32	libavutil/arm/intreadwrite.h	/^static av_always_inline void AV_WN32(void *p, uint32_t v)$/;"	f
AV_WN32	libavutil/arm/intreadwrite.h	49;"	d
AV_WN32	libavutil/intreadwrite.h	114;"	d
AV_WN32	libavutil/intreadwrite.h	164;"	d
AV_WN32	libavutil/intreadwrite.h	338;"	d
AV_WN32	libavutil/mips/intreadwrite.h	/^static av_always_inline void AV_WN32(void *p, uint32_t v)$/;"	f
AV_WN32	libavutil/mips/intreadwrite.h	41;"	d
AV_WN32A	libavutil/intreadwrite.h	458;"	d
AV_WN4P	libavcodec/high_bit_depth.h	37;"	d
AV_WN4P	libavcodec/high_bit_depth.h	70;"	d
AV_WN4PA	libavcodec/high_bit_depth.h	38;"	d
AV_WN4PA	libavcodec/high_bit_depth.h	71;"	d
AV_WN64	libavutil/arm/intreadwrite.h	/^static av_always_inline void AV_WN64(void *p, uint64_t v)$/;"	f
AV_WN64	libavutil/arm/intreadwrite.h	66;"	d
AV_WN64	libavutil/intreadwrite.h	126;"	d
AV_WN64	libavutil/intreadwrite.h	176;"	d
AV_WN64	libavutil/intreadwrite.h	342;"	d
AV_WN64	libavutil/mips/intreadwrite.h	/^static av_always_inline void AV_WN64(void *p, uint64_t v)$/;"	f
AV_WN64	libavutil/mips/intreadwrite.h	65;"	d
AV_WN64	libavutil/mips/intreadwrite.h	86;"	d
AV_WN64A	libavutil/intreadwrite.h	462;"	d
AV_WNA	libavutil/intreadwrite.h	439;"	d
AV_XVMC_ID	libavcodec/xvmc.h	28;"	d
AV_ZERO	libavutil/intreadwrite.h	500;"	d
AV_ZERO128	libavutil/intreadwrite.h	515;"	d
AV_ZERO128	libavutil/x86/intreadwrite.h	/^static av_always_inline void AV_ZERO128(void *d)$/;"	f
AV_ZERO128	libavutil/x86/intreadwrite.h	82;"	d
AV_ZERO16	libavutil/intreadwrite.h	503;"	d
AV_ZERO32	libavutil/intreadwrite.h	507;"	d
AV_ZERO64	libavutil/intreadwrite.h	511;"	d
AV_ZERO64	libavutil/x86/intreadwrite.h	/^static av_always_inline void AV_ZERO64(void *d)$/;"	f
AV_ZERO64	libavutil/x86/intreadwrite.h	53;"	d
A_AVAIL	libavcodec/cavs.h	36;"	d
AacPsyBand	libavcodec/aacpsy.c	/^typedef struct AacPsyBand{$/;"	s	file:
AacPsyBand	libavcodec/aacpsy.c	/^}AacPsyBand;$/;"	t	typeref:struct:AacPsyBand	file:
AacPsyChannel	libavcodec/aacpsy.c	/^typedef struct AacPsyChannel{$/;"	s	file:
AacPsyChannel	libavcodec/aacpsy.c	/^}AacPsyChannel;$/;"	t	typeref:struct:AacPsyChannel	file:
AacPsyCoeffs	libavcodec/aacpsy.c	/^typedef struct AacPsyCoeffs{$/;"	s	file:
AacPsyCoeffs	libavcodec/aacpsy.c	/^}AacPsyCoeffs;$/;"	t	typeref:struct:AacPsyCoeffs	file:
AacPsyContext	libavcodec/aacpsy.c	/^typedef struct AacPsyContext{$/;"	s	file:
AacPsyContext	libavcodec/aacpsy.c	/^}AacPsyContext;$/;"	t	typeref:struct:AacPsyContext	file:
AascContext	libavcodec/aasc.c	/^typedef struct AascContext {$/;"	s	file:
AascContext	libavcodec/aasc.c	/^} AascContext;$/;"	t	typeref:struct:AascContext	file:
AdaptCoeff1	libavcodec/adpcm.c	/^static const uint8_t AdaptCoeff1[] = {$/;"	v	file:
AdaptCoeff2	libavcodec/adpcm.c	/^static const int8_t AdaptCoeff2[] = {$/;"	v	file:
AdaptationTable	libavcodec/adpcm.c	/^static const int AdaptationTable[] = {$/;"	v	file:
AlacEncodeContext	libavcodec/alacenc.c	/^typedef struct AlacEncodeContext {$/;"	s	file:
AlacEncodeContext	libavcodec/alacenc.c	/^} AlacEncodeContext;$/;"	t	typeref:struct:AlacEncodeContext	file:
AlacLPCContext	libavcodec/alacenc.c	/^typedef struct AlacLPCContext {$/;"	s	file:
AlacLPCContext	libavcodec/alacenc.c	/^} AlacLPCContext;$/;"	t	typeref:struct:AlacLPCContext	file:
AlsaData	libavdevice/alsa-audio.h	/^} AlsaData;$/;"	t	typeref:struct:__anon313
AnmContext	libavcodec/anm.c	/^typedef struct AnmContext {$/;"	s	file:
AnmContext	libavcodec/anm.c	/^} AnmContext;$/;"	t	typeref:struct:AnmContext	file:
AnmDemuxContext	libavformat/anm.c	/^} AnmDemuxContext;$/;"	t	typeref:struct:__anon435	file:
AnsiContext	libavcodec/ansi.c	/^} AnsiContext;$/;"	t	typeref:struct:__anon173	file:
AnyType	libavformat/mxf.h	/^    AnyType,$/;"	e	enum:MXFMetadataSetType
AppleHTTPContext	libavformat/applehttp.c	/^typedef struct AppleHTTPContext {$/;"	s	file:
AppleHTTPContext	libavformat/applehttp.c	/^} AppleHTTPContext;$/;"	t	typeref:struct:AppleHTTPContext	file:
AppleHTTPContext	libavformat/applehttpproto.c	/^typedef struct AppleHTTPContext {$/;"	s	file:
AppleHTTPContext	libavformat/applehttpproto.c	/^} AppleHTTPContext;$/;"	t	typeref:struct:AppleHTTPContext	file:
AspectContext	libavfilter/vf_aspect.c	/^} AspectContext;$/;"	t	typeref:struct:__anon26	file:
Atom	libavformat/r3d.c	/^} Atom;$/;"	t	typeref:struct:__anon487	file:
AttrNameMap	libavformat/rtpdec_mpeg4.c	/^} AttrNameMap;$/;"	t	typeref:struct:__anon463	file:
AudioData	libavdevice/oss_audio.c	/^} AudioData;$/;"	t	typeref:struct:__anon311	file:
AudioDevice	libavdevice/dshow.h	/^    AudioDevice = 1,$/;"	e	enum:dshowDeviceType
AudioInterleaveContext	libavformat/audiointerleave.h	/^} AudioInterleaveContext;$/;"	t	typeref:struct:__anon342
AudioObjectType	libavcodec/mpeg4audio.h	/^enum AudioObjectType {$/;"	g
AudioTrack	libavformat/4xm.c	/^typedef struct AudioTrack {$/;"	s	file:
AudioTrack	libavformat/4xm.c	/^} AudioTrack;$/;"	t	typeref:struct:AudioTrack	file:
AuraDecodeContext	libavcodec/aura.c	/^typedef struct AuraDecodeContext {$/;"	s	file:
AuraDecodeContext	libavcodec/aura.c	/^} AuraDecodeContext;$/;"	t	typeref:struct:AuraDecodeContext	file:
AvsBlockType	libavcodec/avs.c	/^} AvsBlockType;$/;"	t	typeref:enum:__anon176	file:
AvsBlockType	libavformat/avs.c	/^} AvsBlockType;$/;"	t	typeref:enum:avs_block_type	file:
AvsContext	libavcodec/avs.c	/^} AvsContext;$/;"	t	typeref:struct:__anon175	file:
AvsFormat	libavformat/avs.c	/^} AvsFormat;$/;"	t	typeref:struct:avs_format	file:
AvsVideoSubType	libavcodec/avs.c	/^} AvsVideoSubType;$/;"	t	typeref:enum:__anon177	file:
B	libavcodec/dsputil.c	2006;"	d	file:
B	libavcodec/dsputil.c	2011;"	d	file:
B	libavcodec/dsputil.c	2041;"	d	file:
B	libavcodec/huffyuv.c	40;"	d	file:
B	libavcodec/huffyuv.c	45;"	d	file:
B	libavcodec/intrax8.c	441;"	d	file:
B	libavcodec/intrax8.c	504;"	d	file:
B	libavcodec/jpegls.h	/^    int A[367], B[367], C[365], N[367];$/;"	m	struct:JLSState
B	libavfilter/vf_lut.c	78;"	d	file:
B0	libavcodec/bfin/fdct_bfin.S	/^        B0 = B2;$/;"	d
B0	libavcodec/bfin/idct_bfin.S	/^    B0 = R0;                 \/\/ Pointer to Input matrix$/;"	d
B0	libavcodec/bfin/pixels_bfin.S	/^        B0 = I0;$/;"	d
B0	libavcodec/bfin/vp3_idct_bfin.S	/^    B0 = R0;                 \/\/ Pointer to Input matrix$/;"	d
B0	libavcodec/faandct.c	44;"	d	file:
B0	libavcodec/faanidct.c	26;"	d	file:
B1	libavcodec/bfin/fdct_bfin.S	/^        B1 = B0;$/;"	d
B1	libavcodec/bfin/pixels_bfin.S	/^        B1 = I1;$/;"	d
B1	libavcodec/faandct.c	45;"	d	file:
B1	libavcodec/faanidct.c	27;"	d	file:
B2	libavcodec/bfin/idct_bfin.S	/^    B2 = R2;$/;"	d
B2	libavcodec/bfin/vp3_idct_bfin.S	/^    B2 = R2;$/;"	d
B2	libavcodec/faandct.c	46;"	d	file:
B2	libavcodec/faanidct.c	28;"	d	file:
B3	libavcodec/bfin/idct_bfin.S	/^    B3 = R1;$/;"	d
B3	libavcodec/bfin/pixels_bfin.S	/^        B3 = I3;$/;"	d
B3	libavcodec/bfin/vp3_idct_bfin.S	/^    B3 = R1;$/;"	d
B3	libavcodec/faandct.c	47;"	d	file:
B3	libavcodec/faanidct.c	29;"	d	file:
B4	libavcodec/faandct.c	48;"	d	file:
B4	libavcodec/faanidct.c	30;"	d	file:
B5	libavcodec/faandct.c	49;"	d	file:
B5	libavcodec/faanidct.c	31;"	d	file:
B6	libavcodec/faandct.c	50;"	d	file:
B6	libavcodec/faanidct.c	32;"	d	file:
B7	libavcodec/faandct.c	51;"	d	file:
B7	libavcodec/faanidct.c	33;"	d	file:
BACKSTEP_SIZE	libavcodec/mpegaudiodec.c	41;"	d	file:
BANDS	libavcodec/imc.c	50;"	d	file:
BANDS	libavcodec/mpc.h	39;"	d
BANDS	libavcodec/mpc7.c	38;"	d	file:
BARK	libavcodec/vorbisdec.c	156;"	d	file:
BARK_N_COEF_MAX	libavcodec/twinvq.c	218;"	d	file:
BASE	libavutil/adler32.c	27;"	d	file:
BASENAMES	Makefile	/^BASENAMES   = ffmpeg ffplay ffprobe ffserver$/;"	m
BASEVOL	libavcodec/adx.h	45;"	d
BASE_QUANT	libavcodec/sonic.c	74;"	d	file:
BASE_WAIT	libavcodec/crystalhd.c	97;"	d	file:
BASIS_SHIFT	libavcodec/dsputil.h	505;"	d
BEFORE_TNS	libavcodec/aac.h	/^    BEFORE_TNS,$/;"	e	enum:CouplingPoint
BENCHMARK_LIBLZO_SAFE	libavutil/lzo.c	253;"	d	file:
BENCHMARK_LIBLZO_UNSAFE	libavutil/lzo.c	254;"	d	file:
BESSEL_I0_ITER	libavcodec/kbdwin.c	24;"	d	file:
BETWEEN_TNS_AND_IMDCT	libavcodec/aac.h	/^    BETWEEN_TNS_AND_IMDCT,$/;"	e	enum:CouplingPoint
BEToUV	libswscale/x86/swscale_template.c	/^static void RENAME(BEToUV)(uint8_t *dstU, uint8_t *dstV,$/;"	f	file:
BEToUV_c	libswscale/swscale_template.c	/^static inline void BEToUV_c(uint8_t *dstU, uint8_t *dstV, const uint8_t *src1,$/;"	f	file:
BE_16	tools/qt-faststart.c	37;"	d	file:
BE_32	tools/qt-faststart.c	38;"	d	file:
BE_64	tools/qt-faststart.c	42;"	d	file:
BE_FOURCC	tools/qt-faststart.c	51;"	d	file:
BF	libavcodec/dct32.c	79;"	d	file:
BF	libavcodec/fft-internal.h	27;"	d
BF	libavcodec/fft-internal.h	49;"	d
BF	libavcodec/simple_idct.c	434;"	d	file:
BF0	libavcodec/dct32.c	87;"	d	file:
BF1	libavcodec/dct32.c	95;"	d	file:
BF2	libavcodec/dct32.c	102;"	d	file:
BFIContext	libavcodec/bfi.c	/^typedef struct BFIContext {$/;"	s	file:
BFIContext	libavcodec/bfi.c	/^} BFIContext;$/;"	t	typeref:struct:BFIContext	file:
BFIContext	libavformat/bfi.c	/^typedef struct BFIContext {$/;"	s	file:
BFIContext	libavformat/bfi.c	/^} BFIContext;$/;"	t	typeref:struct:BFIContext	file:
BIAS	libavcodec/pcm_tablegen.h	37;"	d
BIG_PRIME	libavcodec/elbg.c	323;"	d	file:
BINC	libavcodec/x86/mlpdsp.c	106;"	d	file:
BINDIR	config.mak	/^BINDIR=$(DESTDIR)${prefix}\/bin$/;"	m
BINKB_NB_SRC	libavcodec/bink.c	/^    BINKB_NB_SRC$/;"	e	enum:OldSources	file:
BINKB_SRC_BLOCK_TYPES	libavcodec/bink.c	/^    BINKB_SRC_BLOCK_TYPES = 0, \/\/\/< 8x8 block types$/;"	e	enum:OldSources	file:
BINKB_SRC_COLORS	libavcodec/bink.c	/^    BINKB_SRC_COLORS,          \/\/\/< pixel values used for different block types$/;"	e	enum:OldSources	file:
BINKB_SRC_INTER_COEFS	libavcodec/bink.c	/^    BINKB_SRC_INTER_COEFS,     \/\/\/< number of coefficients for residue blocks$/;"	e	enum:OldSources	file:
BINKB_SRC_INTER_DC	libavcodec/bink.c	/^    BINKB_SRC_INTER_DC,        \/\/\/< DC values for interblocks with DCT$/;"	e	enum:OldSources	file:
BINKB_SRC_INTER_Q	libavcodec/bink.c	/^    BINKB_SRC_INTER_Q,         \/\/\/< quantizer values for interblocks with DCT$/;"	e	enum:OldSources	file:
BINKB_SRC_INTRA_DC	libavcodec/bink.c	/^    BINKB_SRC_INTRA_DC,        \/\/\/< DC values for intrablocks with DCT$/;"	e	enum:OldSources	file:
BINKB_SRC_INTRA_Q	libavcodec/bink.c	/^    BINKB_SRC_INTRA_Q,         \/\/\/< quantizer values for intrablocks with DCT$/;"	e	enum:OldSources	file:
BINKB_SRC_PATTERN	libavcodec/bink.c	/^    BINKB_SRC_PATTERN,         \/\/\/< 8-bit values for 2-colour pattern fill$/;"	e	enum:OldSources	file:
BINKB_SRC_X_OFF	libavcodec/bink.c	/^    BINKB_SRC_X_OFF,           \/\/\/< X components of motion value$/;"	e	enum:OldSources	file:
BINKB_SRC_Y_OFF	libavcodec/bink.c	/^    BINKB_SRC_Y_OFF,           \/\/\/< Y components of motion value$/;"	e	enum:OldSources	file:
BINK_AUD_16BITS	libavformat/bink.c	/^    BINK_AUD_16BITS = 0x4000, \/\/\/< prefer 16-bit output$/;"	e	enum:BinkAudFlags	file:
BINK_AUD_STEREO	libavformat/bink.c	/^    BINK_AUD_STEREO = 0x2000,$/;"	e	enum:BinkAudFlags	file:
BINK_AUD_USEDCT	libavformat/bink.c	/^    BINK_AUD_USEDCT = 0x1000,$/;"	e	enum:BinkAudFlags	file:
BINK_BLOCK_MAX_SIZE	libavcodec/binkaudio.c	43;"	d	file:
BINK_EXTRADATA_SIZE	libavformat/bink.c	40;"	d	file:
BINK_FLAG_ALPHA	libavcodec/bink.c	32;"	d	file:
BINK_FLAG_GRAY	libavcodec/bink.c	33;"	d	file:
BINK_MAX_AUDIO_TRACKS	libavformat/bink.c	41;"	d	file:
BINK_MAX_HEIGHT	libavformat/bink.c	43;"	d	file:
BINK_MAX_WIDTH	libavformat/bink.c	42;"	d	file:
BINK_NB_SRC	libavcodec/bink.c	/^    BINK_NB_SRC$/;"	e	enum:Sources	file:
BINK_SRC_BLOCK_TYPES	libavcodec/bink.c	/^    BINK_SRC_BLOCK_TYPES = 0, \/\/\/< 8x8 block types$/;"	e	enum:Sources	file:
BINK_SRC_COLORS	libavcodec/bink.c	/^    BINK_SRC_COLORS,          \/\/\/< pixel values used for different block types$/;"	e	enum:Sources	file:
BINK_SRC_INTER_DC	libavcodec/bink.c	/^    BINK_SRC_INTER_DC,        \/\/\/< DC values for interblocks with DCT$/;"	e	enum:Sources	file:
BINK_SRC_INTRA_DC	libavcodec/bink.c	/^    BINK_SRC_INTRA_DC,        \/\/\/< DC values for intrablocks with DCT$/;"	e	enum:Sources	file:
BINK_SRC_PATTERN	libavcodec/bink.c	/^    BINK_SRC_PATTERN,         \/\/\/< 8-bit values for 2-colour pattern fill$/;"	e	enum:Sources	file:
BINK_SRC_RUN	libavcodec/bink.c	/^    BINK_SRC_RUN,             \/\/\/< run lengths for special fill block$/;"	e	enum:Sources	file:
BINK_SRC_SUB_BLOCK_TYPES	libavcodec/bink.c	/^    BINK_SRC_SUB_BLOCK_TYPES, \/\/\/< 16x16 block types (a subset of 8x8 block types)$/;"	e	enum:Sources	file:
BINK_SRC_X_OFF	libavcodec/bink.c	/^    BINK_SRC_X_OFF,           \/\/\/< X components of motion value$/;"	e	enum:Sources	file:
BINK_SRC_Y_OFF	libavcodec/bink.c	/^    BINK_SRC_Y_OFF,           \/\/\/< Y components of motion value$/;"	e	enum:Sources	file:
BIN_ONLY_SHAPE	libavcodec/mpeg4video.h	34;"	d
BIN_SHAPE	libavcodec/mpeg4video.h	33;"	d
BITALLOC_12_COUNT	libavcodec/dcahuff.h	45;"	d
BITALLOC_12_VLC_BITS	libavcodec/dcahuff.h	46;"	d
BITMAP_BYTERUN1	libavformat/iff.c	/^    BITMAP_BYTERUN1$/;"	e	enum:__anon394	file:
BITMAP_ID	libavformat/swf.h	60;"	d
BITMAP_RAW	libavformat/iff.c	/^    BITMAP_RAW,$/;"	e	enum:__anon394	file:
BITS	libavcodec/cos_tablegen.c	30;"	d	file:
BITSHIFTSIZE	libavcodec/shorten.c	49;"	d	file:
BITSTREAM_WRITER_LE	libavcodec/gif.c	50;"	d	file:
BITSTREAM_WRITER_LE	libavcodec/nellymoserenc.c	44;"	d	file:
BITSTREAM_WRITER_LE	libavcodec/vorbisenc.c	34;"	d	file:
BITSTREAM_WRITER_LE	libavformat/gif.c	46;"	d	file:
BITS_FRW_ACC	libavcodec/x86/fdct_mmx.c	48;"	d	file:
BITS_FRW_ACC	libavcodec/x86/idct_mmx_xvid.c	57;"	d	file:
BITS_INV_ACC	libavcodec/ps2/idct_mmi.c	32;"	d	file:
BITS_INV_ACC	libavcodec/x86/idct_mmx_xvid.c	50;"	d	file:
BITS_IN_JSAMPLE	libavcodec/jfdctint.c	70;"	d	file:
BITS_LEFT	libavcodec/qdm2.c	71;"	d	file:
BIT_DEPTH	libavcodec/dsputil.c	45;"	d	file:
BIT_DEPTH	libavcodec/dsputil.c	47;"	d	file:
BIT_DEPTH	libavcodec/dsputil.c	49;"	d	file:
BIT_DEPTH	libavcodec/dsputil.c	51;"	d	file:
BIT_DEPTH	libavcodec/dsputil.c	53;"	d	file:
BIT_DEPTH	libavcodec/h264dsp.c	32;"	d	file:
BIT_DEPTH	libavcodec/h264dsp.c	34;"	d	file:
BIT_DEPTH	libavcodec/h264dsp.c	36;"	d	file:
BIT_DEPTH	libavcodec/h264dsp.c	38;"	d	file:
BIT_DEPTH	libavcodec/h264dsp.c	40;"	d	file:
BIT_DEPTH	libavcodec/h264dsp.c	42;"	d	file:
BIT_DEPTH	libavcodec/h264idct.c	28;"	d	file:
BIT_DEPTH	libavcodec/h264idct.c	30;"	d	file:
BIT_DEPTH	libavcodec/h264idct.c	32;"	d	file:
BIT_DEPTH	libavcodec/h264idct.c	34;"	d	file:
BIT_DEPTH	libavcodec/h264idct.c	36;"	d	file:
BIT_DEPTH	libavcodec/h264idct.c	38;"	d	file:
BIT_DEPTH	libavcodec/h264pred.c	30;"	d	file:
BIT_DEPTH	libavcodec/h264pred.c	32;"	d	file:
BIT_DEPTH	libavcodec/h264pred.c	34;"	d	file:
BIT_DEPTH	libavcodec/h264pred.c	36;"	d	file:
BIT_DEPTH	libavcodec/h264pred.c	38;"	d	file:
BIT_DEPTH	libavcodec/h264pred.c	40;"	d	file:
BIT_DEPTH	libavcodec/high_bit_depth.h	22;"	d
BIT_DEPTH_FUNCS	libavcodec/dsputil.c	3159;"	d	file:
BIT_POS	libavcodec/amrwbdec.c	345;"	d	file:
BIT_STR	libavcodec/amrwbdec.c	342;"	d	file:
BIWEIGHT_FUNC_DBL_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_DBL_MM  8$/;"	l
BIWEIGHT_FUNC_DBL_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_DBL_MM 16$/;"	l
BIWEIGHT_FUNC_HALF_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_HALF_MM 4,  2,  8, 0, mmx2$/;"	l
BIWEIGHT_FUNC_HALF_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_HALF_MM 4,  4,  8, 0, mmx2$/;"	l
BIWEIGHT_FUNC_HALF_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_HALF_MM 4,  8,  8, 0, mmx2$/;"	l
BIWEIGHT_FUNC_HALF_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_HALF_MM 8,  4, 16, 8, sse2$/;"	l
BIWEIGHT_FUNC_HALF_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_HALF_MM 8,  8, 16, 8, sse2$/;"	l
BIWEIGHT_FUNC_HALF_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_HALF_MM 8, 16, 16, 8, sse2$/;"	l
BIWEIGHT_FUNC_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_MM  8,  4,  0, mmx2$/;"	l
BIWEIGHT_FUNC_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_MM  8,  8,  0, mmx2$/;"	l
BIWEIGHT_FUNC_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_MM  8, 16,  0, mmx2$/;"	l
BIWEIGHT_FUNC_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_MM 16,  8,  8, sse2$/;"	l
BIWEIGHT_FUNC_MM	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_FUNC_MM 16, 16,  8, sse2$/;"	l
BIWEIGHT_SSSE3_16	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_SSSE3_16  8$/;"	l
BIWEIGHT_SSSE3_16	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_SSSE3_16 16$/;"	l
BIWEIGHT_SSSE3_8	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_SSSE3_8  4$/;"	l
BIWEIGHT_SSSE3_8	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_SSSE3_8  8$/;"	l
BIWEIGHT_SSSE3_8	libavcodec/x86/h264_weight.asm	/^BIWEIGHT_SSSE3_8 16$/;"	l
BLK	libavcodec/kmvc.c	56;"	d	file:
BLKSIZE	libavcodec/adpcm.c	57;"	d	file:
BLK_16X16	libavcodec/cavs.h	/^  BLK_16X16,$/;"	e	enum:cavs_block
BLK_16X8	libavcodec/cavs.h	/^  BLK_16X8,$/;"	e	enum:cavs_block
BLK_8X16	libavcodec/cavs.h	/^  BLK_8X16,$/;"	e	enum:cavs_block
BLK_8X8	libavcodec/cavs.h	/^  BLK_8X8$/;"	e	enum:cavs_block
BLOCK	libavfilter/libmpcodecs/vf_uspp.c	43;"	d	file:
BLOCKSIZE	libavcodec/ra144.h	29;"	d
BLOCKSIZE	libavformat/crypto.c	30;"	d	file:
BLOCKSZ	libavfilter/libmpcodecs/vf_fspp.c	61;"	d	file:
BLOCKS_PER_LOOP	libavcodec/apedec.c	35;"	d	file:
BLOCK_2x2	libavcodec/truemotion1.c	108;"	d	file:
BLOCK_2x4	libavcodec/truemotion1.c	109;"	d	file:
BLOCK_4x2	libavcodec/truemotion1.c	110;"	d	file:
BLOCK_4x4	libavcodec/truemotion1.c	111;"	d	file:
BLOCK_INTRA	libavcodec/snow.c	383;"	d	file:
BLOCK_LAST_INDEX	libavcodec/arm/asm-offsets.h	35;"	d
BLOCK_MAX_BITS	libavcodec/wma.h	33;"	d
BLOCK_MAX_SIZE	libavcodec/wma.h	34;"	d
BLOCK_METRICS_TEMPLATE	libavfilter/libmpcodecs/vf_filmdint.c	386;"	d	file:
BLOCK_MIN_BITS	libavcodec/wma.h	32;"	d
BLOCK_NB_SIZES	libavcodec/wma.h	36;"	d
BLOCK_OPT	libavcodec/snow.c	384;"	d	file:
BLOCK_SIZE	libavformat/au.c	166;"	d	file:
BLOCK_SIZE	libavformat/rsodec.c	73;"	d	file:
BLOCK_SIZE	libpostproc/postprocess.c	113;"	d	file:
BLOCK_TYPE_AUDIO	libavcodec/vmdav.c	463;"	d	file:
BLOCK_TYPE_INITIAL	libavcodec/vmdav.c	464;"	d	file:
BLOCK_TYPE_SILENCE	libavcodec/vmdav.c	465;"	d	file:
BLOCK_TYPE_VLC_BITS	libavcodec/4xm.c	36;"	d	file:
BLOCK_X	libavcodec/vp3.c	563;"	d	file:
BLOCK_Y	libavcodec/vp3.c	564;"	d	file:
BLUE	libavfilter/drawutils.c	/^enum { RED = 0, GREEN, BLUE, ALPHA };$/;"	e	enum:__anon42	file:
BLUE_DITHER	libswscale/swscale_internal.h	215;"	d
BLURV	libavfilter/libmpcodecs/vf_gradfun.c	192;"	d	file:
BLURV	libavfilter/x86/gradfun.c	126;"	d	file:
BMPContext	libavcodec/bmp.h	/^typedef struct BMPContext {$/;"	s
BMPContext	libavcodec/bmp.h	/^} BMPContext;$/;"	t	typeref:struct:BMPContext
BMPTYPE_RGB	libavcodec/lcl.h	26;"	d
BMPTYPE_YUV	libavcodec/lcl.h	25;"	d
BMP_BITFIELDS	libavcodec/bmp.h	/^    BMP_BITFIELDS   =3,$/;"	e	enum:__anon126
BMP_RGB	libavcodec/bmp.h	/^    BMP_RGB         =0,$/;"	e	enum:__anon126
BMP_RLE4	libavcodec/bmp.h	/^    BMP_RLE4        =2,$/;"	e	enum:__anon126
BMP_RLE8	libavcodec/bmp.h	/^    BMP_RLE8        =1,$/;"	e	enum:__anon126
BMVTypes	libavcodec/vc1.h	/^enum BMVTypes {$/;"	g
BMV_TYPE_BACKWARD	libavcodec/vc1.h	/^    BMV_TYPE_BACKWARD,$/;"	e	enum:BMVTypes
BMV_TYPE_FORWARD	libavcodec/vc1.h	/^    BMV_TYPE_FORWARD,$/;"	e	enum:BMVTypes
BMV_TYPE_INTERPOLATED	libavcodec/vc1.h	/^    BMV_TYPE_INTERPOLATED$/;"	e	enum:BMVTypes
BNAM_TAG	libavformat/wc3movie.c	38;"	d	file:
BOTTOM_FIRST	libavfilter/libmpcodecs/vf_phase.c	/^enum mode { PROGRESSIVE, TOP_FIRST, BOTTOM_FIRST,$/;"	e	enum:mode	file:
BOTTOM_FIRST_ANALYZE	libavfilter/libmpcodecs/vf_phase.c	/^            TOP_FIRST_ANALYZE, BOTTOM_FIRST_ANALYZE,$/;"	e	enum:mode	file:
BOTTOM_VALUE	libavcodec/apedec.c	233;"	d	file:
BOUNDARY_TAG	libavformat/mpjpeg.c	25;"	d	file:
BPP	ffplay.c	429;"	d	file:
BRANCHLESS_GET_CABAC	libavcodec/x86/cabac.h	54;"	d
BRANCHLESS_GET_CABAC_UPDATE	libavcodec/x86/cabac.h	30;"	d
BRANCHLESS_GET_CABAC_UPDATE	libavcodec/x86/cabac.h	40;"	d
BRCH_TAG	libavformat/wc3movie.c	42;"	d	file:
BREAK_LEFT	libavfilter/libmpcodecs/pullup.c	464;"	d	file:
BREAK_RIGHT	libavfilter/libmpcodecs/pullup.c	465;"	d	file:
BRIEF	common.mak	/^BRIEF  = CC AS YASM AR LD HOSTCC STRIP CP$/;"	m
BROKEN_RELOCATIONS	libavutil/x86_cpu.h	75;"	d
BTYPE_VLC_BITS	libavcodec/rv40vlc2.h	677;"	d
BTYPE_VLC_SIZE	libavcodec/rv40vlc2.h	676;"	d
BU	libswscale/rgb2rgb.c	100;"	d	file:
BU	libswscale/swscale.c	75;"	d	file:
BU	libswscale/swscale_unscaled.c	40;"	d	file:
BU	libswscale/x86/rgb2rgb.c	75;"	d	file:
BUCKET_BITS	libavcodec/dnxhdenc.c	661;"	d	file:
BUFFERSIZE	libavcodec/ra144.h	30;"	d
BUFFER_CAT	libavcodec/libxvidff.c	44;"	d	file:
BUFFER_DURATION	libavformat/rmenc.c	46;"	d	file:
BUFFER_PADDING_SIZE	libavformat/bethsoftvid.c	99;"	d	file:
BUFFER_REMAINING	libavcodec/libxvidff.c	43;"	d	file:
BUFFER_SIZE	libavcodec/libmp3lame.c	32;"	d	file:
BUFFER_SIZE	libavcodec/libvorbis.c	40;"	d	file:
BUFFER_SIZE	libavcodec/libxvidff.c	42;"	d	file:
BUFFER_SIZE	libavformat/http.c	38;"	d	file:
BUILDSUF	config.mak	/^BUILDSUF=$/;"	m
BUILTIN_MEMCPY	libavutil/lzo.c	72;"	d	file:
BUILT_HEADERS	libavutil/Makefile	/^BUILT_HEADERS = avconfig.h$/;"	m
BURST_HEADER_SIZE	libavformat/spdif.h	29;"	d
BUTTERFLIES	libavcodec/fft.c	208;"	d	file:
BUTTERFLIES	libavcodec/fft.c	267;"	d	file:
BUTTERFLIES	libavcodec/fft.c	268;"	d	file:
BUTTERFLIES_BIG	libavcodec/fft.c	220;"	d	file:
BUTTERFLY1	libavcodec/dsputil.c	2050;"	d	file:
BUTTERFLY2	libavcodec/dsputil.c	2046;"	d	file:
BUTTERFLYA	libavcodec/dsputil.c	2059;"	d	file:
BV	libswscale/rgb2rgb.c	99;"	d	file:
BV	libswscale/swscale.c	74;"	d	file:
BV	libswscale/swscale_unscaled.c	39;"	d	file:
BV	libswscale/x86/rgb2rgb.c	74;"	d	file:
BVID_DemuxContext	libavformat/bethsoftvid.c	/^typedef struct BVID_DemuxContext$/;"	s	file:
BVID_DemuxContext	libavformat/bethsoftvid.c	/^} BVID_DemuxContext;$/;"	t	typeref:struct:BVID_DemuxContext	file:
BWD0	libavcodec/cavs.h	48;"	d
BWD1	libavcodec/cavs.h	49;"	d
BY	libswscale/rgb2rgb.c	98;"	d	file:
BY	libswscale/swscale.c	73;"	d	file:
BY	libswscale/swscale_unscaled.c	38;"	d	file:
BY	libswscale/x86/rgb2rgb.c	73;"	d	file:
BYTES_PER_FRAME_RECORD	libavformat/sierravmd.c	34;"	d	file:
BYTE_VEC	libavcodec/alpha/asm.h	/^static inline uint64_t BYTE_VEC(uint64_t x)$/;"	f
BYTE_VEC32	libavcodec/dsputil.h	584;"	d
BYTE_VEC64	libavcodec/dsputil.h	585;"	d
B_8X8	libavcodec/cavs.h	/^  B_8X8 = 29$/;"	e	enum:cavs_mb
B_AVAIL	libavcodec/cavs.h	37;"	d
B_BWD_16X16	libavcodec/cavs.h	/^  B_BWD_16X16,$/;"	e	enum:cavs_mb
B_DIRECT	libavcodec/cavs.h	/^  B_DIRECT,$/;"	e	enum:cavs_mb
B_FRACTION_DEN	libavcodec/vc1data.h	85;"	d
B_FWD_16X16	libavcodec/cavs.h	/^  B_FWD_16X16,$/;"	e	enum:cavs_mb
B_SKIP	libavcodec/cavs.h	/^  B_SKIP,$/;"	e	enum:cavs_mb
B_SUB_BWD	libavcodec/cavs.h	/^  B_SUB_BWD,$/;"	e	enum:cavs_sub_mb
B_SUB_DIRECT	libavcodec/cavs.h	/^  B_SUB_DIRECT,$/;"	e	enum:cavs_sub_mb
B_SUB_FWD	libavcodec/cavs.h	/^  B_SUB_FWD,$/;"	e	enum:cavs_sub_mb
B_SUB_SYM	libavcodec/cavs.h	/^  B_SUB_SYM$/;"	e	enum:cavs_sub_mb
B_SYM_16X16	libavcodec/cavs.h	/^  B_SYM_16X16,$/;"	e	enum:cavs_mb
Band	libavcodec/mpc.h	/^}Band;$/;"	t	typeref:struct:__anon178
BandCodingPath	libavcodec/aaccoder.c	/^typedef struct BandCodingPath {$/;"	s	file:
BandCodingPath	libavcodec/aaccoder.c	/^} BandCodingPath;$/;"	t	typeref:struct:BandCodingPath	file:
BandType	libavcodec/aac.h	/^enum BandType {$/;"	g
BethsoftVidBlockType	libavcodec/bethsoftvideo.h	/^enum BethsoftVidBlockType$/;"	g
BethsoftvidContext	libavcodec/bethsoftvideo.c	/^typedef struct BethsoftvidContext {$/;"	s	file:
BethsoftvidContext	libavcodec/bethsoftvideo.c	/^} BethsoftvidContext;$/;"	t	typeref:struct:BethsoftvidContext	file:
BiCompression	libavcodec/bmp.h	/^} BiCompression;$/;"	t	typeref:enum:__anon126
BinkAudFlags	libavformat/bink.c	/^enum BinkAudFlags {$/;"	g	file:
BinkAudioContext	libavcodec/binkaudio.c	/^} BinkAudioContext;$/;"	t	typeref:struct:__anon136	file:
BinkContext	libavcodec/bink.c	/^typedef struct BinkContext {$/;"	s	file:
BinkContext	libavcodec/bink.c	/^} BinkContext;$/;"	t	typeref:struct:BinkContext	file:
BinkDemuxContext	libavformat/bink.c	/^} BinkDemuxContext;$/;"	t	typeref:struct:__anon403	file:
BitAlloc	libavcodec/dca.c	/^} BitAlloc;$/;"	t	typeref:struct:__anon92	file:
BitBuf	libavcodec/kmvc.c	/^typedef struct BitBuf {$/;"	s	file:
BitBuf	libavcodec/kmvc.c	/^} BitBuf;$/;"	t	typeref:struct:BitBuf	file:
BlackFrameContext	libavfilter/vf_blackframe.c	/^} BlackFrameContext;$/;"	t	typeref:struct:__anon49	file:
Block	libavcodec/flashsv2enc.c	/^typedef struct Block {$/;"	s	file:
Block	libavcodec/flashsv2enc.c	/^} Block;$/;"	t	typeref:struct:Block	file:
BlockInfo	libavcodec/dv.c	/^typedef struct BlockInfo {$/;"	s	file:
BlockInfo	libavcodec/dv.c	/^} BlockInfo;$/;"	t	typeref:struct:BlockInfo	file:
BlockNode	libavcodec/snow.c	/^typedef struct BlockNode{$/;"	s	file:
BlockNode	libavcodec/snow.c	/^}BlockNode;$/;"	t	typeref:struct:BlockNode	file:
BlockTypes	libavcodec/bink.c	/^enum BlockTypes {$/;"	g	file:
BufPic	libavfilter/vf_fifo.c	/^typedef struct BufPic {$/;"	s	file:
BufPic	libavfilter/vf_fifo.c	/^} BufPic;$/;"	t	typeref:struct:BufPic	file:
BufferSinkContext	libavfilter/vsink_buffer.c	/^} BufferSinkContext;$/;"	t	typeref:struct:__anon39	file:
BufferSourceContext	libavfilter/vsrc_buffer.c	/^} BufferSourceContext;$/;"	t	typeref:struct:__anon25	file:
Bundle	libavcodec/bink.c	/^typedef struct Bundle {$/;"	s	file:
Bundle	libavcodec/bink.c	/^} Bundle;$/;"	t	typeref:struct:Bundle	file:
ByteIOContext	libavformat/avio.h	/^typedef attribute_deprecated AVIOContext ByteIOContext;$/;"	t
C	libavcodec/jpegls.h	/^    int A[367], B[367], C[365], N[367];$/;"	m	struct:JLSState
C0	libavcodec/x86/simple_idct_mmx.c	36;"	d	file:
C1	libavcodec/mpegaudiodec.c	550;"	d	file:
C1	libavcodec/ppc/fdct_altivec.c	36;"	d	file:
C1	libavcodec/simple_idct.c	405;"	d	file:
C1	libavcodec/simple_idct.c	484;"	d	file:
C1	libavcodec/simple_idct.c	488;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	165;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	174;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	181;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	190;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	197;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	206;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	213;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	222;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	229;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	238;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	245;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	254;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	261;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	270;"	d	file:
C1	libavcodec/x86/fdct_mmx.c	277;"	d	file:
C1	libavcodec/x86/simple_idct_mmx.c	37;"	d	file:
C2	libavcodec/mpegaudiodec.c	551;"	d	file:
C2	libavcodec/ppc/fdct_altivec.c	37;"	d	file:
C2	libavcodec/simple_idct.c	406;"	d	file:
C2	libavcodec/simple_idct.c	485;"	d	file:
C2	libavcodec/simple_idct.c	489;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	166;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	175;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	182;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	191;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	198;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	207;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	214;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	223;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	230;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	239;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	246;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	255;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	262;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	271;"	d	file:
C2	libavcodec/x86/fdct_mmx.c	278;"	d	file:
C2	libavcodec/x86/simple_idct_mmx.c	38;"	d	file:
C3	libavcodec/mpegaudiodec.c	478;"	d	file:
C3	libavcodec/mpegaudiodec.c	552;"	d	file:
C3	libavcodec/ppc/fdct_altivec.c	38;"	d	file:
C3	libavcodec/simple_idct.c	490;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	167;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	176;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	183;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	192;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	199;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	208;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	215;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	224;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	231;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	240;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	247;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	256;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	263;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	272;"	d	file:
C3	libavcodec/x86/fdct_mmx.c	279;"	d	file:
C3	libavcodec/x86/simple_idct_mmx.c	39;"	d	file:
C4	libavcodec/mpegaudiodec.c	553;"	d	file:
C4	libavcodec/ppc/fdct_altivec.c	39;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	168;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	177;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	184;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	193;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	200;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	209;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	216;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	225;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	232;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	241;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	248;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	257;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	264;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	273;"	d	file:
C4	libavcodec/x86/fdct_mmx.c	280;"	d	file:
C4	libavcodec/x86/idct_mmx.c	423;"	d	file:
C4	libavcodec/x86/idct_mmx.c	568;"	d	file:
C4	libavcodec/x86/simple_idct_mmx.c	43;"	d	file:
C5	libavcodec/mpegaudiodec.c	554;"	d	file:
C5	libavcodec/ppc/fdct_altivec.c	40;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	169;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	178;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	185;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	194;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	201;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	210;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	217;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	226;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	233;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	242;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	249;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	258;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	265;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	274;"	d	file:
C5	libavcodec/x86/fdct_mmx.c	281;"	d	file:
C5	libavcodec/x86/simple_idct_mmx.c	45;"	d	file:
C6	libavcodec/mpegaudiodec.c	555;"	d	file:
C6	libavcodec/ppc/fdct_altivec.c	41;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	170;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	179;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	186;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	195;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	202;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	211;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	218;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	227;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	234;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	243;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	250;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	259;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	266;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	275;"	d	file:
C6	libavcodec/x86/fdct_mmx.c	282;"	d	file:
C6	libavcodec/x86/simple_idct_mmx.c	46;"	d	file:
C64	libavfilter/libmpcodecs/vf_fspp.c	703;"	d	file:
C64XRES	libavcodec/a64enc.h	33;"	d
C64YRES	libavcodec/a64enc.h	34;"	d
C7	libavcodec/mpegaudiodec.c	556;"	d	file:
C7	libavcodec/ppc/fdct_altivec.c	42;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	171;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	180;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	187;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	196;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	203;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	212;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	219;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	228;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	235;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	244;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	251;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	260;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	267;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	276;"	d	file:
C7	libavcodec/x86/fdct_mmx.c	283;"	d	file:
C7	libavcodec/x86/simple_idct_mmx.c	47;"	d	file:
C8	libavcodec/mpegaudiodec.c	557;"	d	file:
C93BlockRecord	libavformat/c93.c	/^} C93BlockRecord;$/;"	t	typeref:struct:__anon481	file:
C93BlockType	libavcodec/c93.c	/^} C93BlockType;$/;"	t	typeref:enum:__anon277	file:
C93DecoderContext	libavcodec/c93.c	/^} C93DecoderContext;$/;"	t	typeref:struct:__anon276	file:
C93DemuxContext	libavformat/c93.c	/^} C93DemuxContext;$/;"	t	typeref:struct:__anon482	file:
C93_4X4_2COLOR	libavcodec/c93.c	/^    C93_4X4_2COLOR     = 0x0A,$/;"	e	enum:__anon277	file:
C93_4X4_4COLOR	libavcodec/c93.c	/^    C93_4X4_4COLOR     = 0x0D,$/;"	e	enum:__anon277	file:
C93_4X4_4COLOR_GRP	libavcodec/c93.c	/^    C93_4X4_4COLOR_GRP = 0x0B,$/;"	e	enum:__anon277	file:
C93_4X4_FROM_CURR	libavcodec/c93.c	/^    C93_4X4_FROM_CURR  = 0x07,$/;"	e	enum:__anon277	file:
C93_4X4_FROM_PREV	libavcodec/c93.c	/^    C93_4X4_FROM_PREV  = 0x06,$/;"	e	enum:__anon277	file:
C93_8X8_2COLOR	libavcodec/c93.c	/^    C93_8X8_2COLOR     = 0x08,$/;"	e	enum:__anon277	file:
C93_8X8_FROM_PREV	libavcodec/c93.c	/^    C93_8X8_FROM_PREV  = 0x02,$/;"	e	enum:__anon277	file:
C93_8X8_INTRA	libavcodec/c93.c	/^    C93_8X8_INTRA      = 0x0F,$/;"	e	enum:__anon277	file:
C93_FIRST_FRAME	libavcodec/c93.c	46;"	d	file:
C93_FIRST_FRAME	libavformat/c93.c	104;"	d	file:
C93_HAS_PALETTE	libavcodec/c93.c	45;"	d	file:
C93_HAS_PALETTE	libavformat/c93.c	103;"	d	file:
C93_NOOP	libavcodec/c93.c	/^    C93_NOOP           = 0x0E,$/;"	e	enum:__anon277	file:
CABAC	libavcodec/h264.h	86;"	d
CABAC	libavcodec/h264_cabac.c	28;"	d	file:
CABAC	libavcodec/h264_cavlc.c	28;"	d	file:
CABACContext	libavcodec/cabac.h	/^typedef struct CABACContext{$/;"	s
CABACContext	libavcodec/cabac.h	/^}CABACContext;$/;"	t	typeref:struct:CABACContext
CABAC_BITS	libavcodec/cabac.h	37;"	d
CABAC_MASK	libavcodec/cabac.h	38;"	d
CABAC_ON_STACK	libavcodec/h264_cabac.c	1614;"	d	file:
CAFContext	libavformat/cafenc.c	/^} CAFContext;$/;"	t	typeref:struct:__anon337	file:
CAF_MAX_PKT_SIZE	libavformat/cafdec.c	307;"	d	file:
CALL_2X_PIXELS	libavcodec/dsputil.h	179;"	d
CALL_MMX2_FILTER_CODE	libswscale/x86/swscale_template.c	2259;"	d	file:
CANDIDATE_MB_TYPE_BACKWARD	libavcodec/mpegvideo.h	408;"	d
CANDIDATE_MB_TYPE_BACKWARD_I	libavcodec/mpegvideo.h	413;"	d
CANDIDATE_MB_TYPE_BIDIR	libavcodec/mpegvideo.h	409;"	d
CANDIDATE_MB_TYPE_BIDIR_I	libavcodec/mpegvideo.h	414;"	d
CANDIDATE_MB_TYPE_DIRECT	libavcodec/mpegvideo.h	406;"	d
CANDIDATE_MB_TYPE_DIRECT0	libavcodec/mpegvideo.h	416;"	d
CANDIDATE_MB_TYPE_FORWARD	libavcodec/mpegvideo.h	407;"	d
CANDIDATE_MB_TYPE_FORWARD_I	libavcodec/mpegvideo.h	412;"	d
CANDIDATE_MB_TYPE_INTER	libavcodec/mpegvideo.h	401;"	d
CANDIDATE_MB_TYPE_INTER4V	libavcodec/mpegvideo.h	402;"	d
CANDIDATE_MB_TYPE_INTER_I	libavcodec/mpegvideo.h	411;"	d
CANDIDATE_MB_TYPE_INTRA	libavcodec/mpegvideo.h	400;"	d
CANDIDATE_MB_TYPE_SKIPPED	libavcodec/mpegvideo.h	403;"	d
CANONICAL_HEADER_SIZE	libavcodec/shorten.c	74;"	d	file:
CAVSDSPContext	libavcodec/cavsdsp.h	/^typedef struct CAVSDSPContext {$/;"	s
CAVSDSPContext	libavcodec/cavsdsp.h	/^} CAVSDSPContext;$/;"	t	typeref:struct:CAVSDSPContext
CAVS_MC	libavcodec/cavsdsp.c	422;"	d	file:
CAVS_MC	libavcodec/x86/cavsdsp_mmx.c	401;"	d	file:
CAVS_PIC_I_START_CODE	libavformat/cavsvideodec.c	26;"	d	file:
CAVS_PIC_PB_START_CODE	libavformat/cavsvideodec.c	28;"	d	file:
CAVS_PROFILE_JIZHUN	libavformat/cavsvideodec.c	30;"	d	file:
CAVS_SEQ_START_CODE	libavformat/cavsvideodec.c	25;"	d	file:
CAVS_START_CODE	libavcodec/cavs.h	32;"	d
CAVS_SUBPIX	libavcodec/cavsdsp.c	260;"	d	file:
CAVS_SUBPIX_HV	libavcodec/cavsdsp.c	330;"	d	file:
CAVS_UNDEF_START_CODE	libavformat/cavsvideodec.c	27;"	d	file:
CAVS_VIDEO_EDIT_CODE	libavformat/cavsvideodec.c	29;"	d	file:
CBF0_TAG	libavcodec/vqavideo.c	85;"	d	file:
CBFZ_TAG	libavcodec/vqavideo.c	86;"	d	file:
CBP0_TAG	libavcodec/vqavideo.c	87;"	d	file:
CBPC_B_VLC_BITS	libavcodec/ituh263dec.c	51;"	d	file:
CBPPAT_VLC_SIZE	libavcodec/rv34vlc.h	35;"	d
CBPY_VLC_BITS	libavcodec/h263.h	35;"	d
CBPZ_TAG	libavcodec/vqavideo.c	88;"	d	file:
CBP_VLC_SIZE	libavcodec/rv34vlc.h	36;"	d
CBU	libswscale/swscale_internal.h	/^    vector signed short   CBU;$/;"	m	struct:SwsContext
CC	config.mak	/^CC=\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/bin\/arm-linux-androideabi-gcc$/;"	m
CC	libavcodec/h264_cabac.c	1617;"	d	file:
CCDEP	config.mak	/^CCDEP=$/;"	m
CCITT_SYMS	libavcodec/faxcompr.c	32;"	d	file:
CC_DEPFLAGS	config.mak	/^CC_DEPFLAGS=-MMD -MF $(@:.o=.d) -MT $@$/;"	m
CC_IDENT	config.mak	/^CC_IDENT=gcc 4.4.3 (GCC)$/;"	m
CC_O	config.mak	/^CC_O=-o $@$/;"	m
CC_TYPE	config.h	7;"	d
CC_VERSION	config.h	8;"	d
CD	libavcodec/truemotion2.c	/^    int CD[4];$/;"	m	struct:TM2Context	file:
CDG_BORDER_HEIGHT	libavcodec/cdgraphics.c	39;"	d	file:
CDG_BORDER_WIDTH	libavcodec/cdgraphics.c	38;"	d	file:
CDG_COMMAND	libavcodec/cdgraphics.c	42;"	d	file:
CDG_DATA_SIZE	libavcodec/cdgraphics.c	57;"	d	file:
CDG_DISPLAY_HEIGHT	libavcodec/cdgraphics.c	37;"	d	file:
CDG_DISPLAY_WIDTH	libavcodec/cdgraphics.c	36;"	d	file:
CDG_FULL_HEIGHT	libavcodec/cdgraphics.c	35;"	d	file:
CDG_FULL_WIDTH	libavcodec/cdgraphics.c	34;"	d	file:
CDG_HEADER_SIZE	libavcodec/cdgraphics.c	62;"	d	file:
CDG_INST_BORDER_PRESET	libavcodec/cdgraphics.c	47;"	d	file:
CDG_INST_LOAD_PAL_HIGH	libavcodec/cdgraphics.c	52;"	d	file:
CDG_INST_LOAD_PAL_LO	libavcodec/cdgraphics.c	51;"	d	file:
CDG_INST_MEMORY_PRESET	libavcodec/cdgraphics.c	46;"	d	file:
CDG_INST_SCROLL_COPY	libavcodec/cdgraphics.c	50;"	d	file:
CDG_INST_SCROLL_PRESET	libavcodec/cdgraphics.c	49;"	d	file:
CDG_INST_TILE_BLOCK	libavcodec/cdgraphics.c	48;"	d	file:
CDG_INST_TILE_BLOCK_XOR	libavcodec/cdgraphics.c	53;"	d	file:
CDG_MASK	libavcodec/cdgraphics.c	43;"	d	file:
CDG_MINIMUM_PKT_SIZE	libavcodec/cdgraphics.c	60;"	d	file:
CDG_MINIMUM_SCROLL_SIZE	libavcodec/cdgraphics.c	61;"	d	file:
CDG_PACKET_SIZE	libavcodec/cdgraphics.c	56;"	d	file:
CDG_PACKET_SIZE	libavformat/cdg.c	24;"	d	file:
CDG_PALETTE_SIZE	libavcodec/cdgraphics.c	63;"	d	file:
CDG_TILE_HEIGHT	libavcodec/cdgraphics.c	58;"	d	file:
CDG_TILE_WIDTH	libavcodec/cdgraphics.c	59;"	d	file:
CDGraphicsContext	libavcodec/cdgraphics.c	/^typedef struct CDGraphicsContext {$/;"	s	file:
CDGraphicsContext	libavcodec/cdgraphics.c	/^} CDGraphicsContext;$/;"	t	typeref:struct:CDGraphicsContext	file:
CDXA_TAG	libavformat/psxstr.c	36;"	d	file:
CDXA_TYPE_AUDIO	libavformat/psxstr.c	46;"	d	file:
CDXA_TYPE_DATA	libavformat/psxstr.c	45;"	d	file:
CDXA_TYPE_MASK	libavformat/psxstr.c	44;"	d	file:
CDXA_TYPE_VIDEO	libavformat/psxstr.c	47;"	d	file:
CFLAGS	config.mak	/^CFLAGS= -fPIC -DANDROID  -std=c99 -fomit-frame-pointer -marm -g -Wdeclaration-after-statement -Wall -Wno-parentheses -Wno-switch -Wdisabled-optimization -Wpointer-arith -Wredundant-decls -Wno-pointer-sign -Wcast-qual -Wwrite-strings -Wtype-limits -Wundef -Wmissing-prototypes -Wno-pointer-to-int-cast -O3 -fno-math-errno -fno-signed-zeros -fno-tree-vectorize -Werror=implicit-function-declaration -Werror=missing-prototypes$/;"	m
CFRAME_BUFFER_COUNT	libavcodec/4xm.c	39;"	d	file:
CFrameBuffer	libavcodec/4xm.c	/^typedef struct CFrameBuffer{$/;"	s	file:
CFrameBuffer	libavcodec/4xm.c	/^}CFrameBuffer;$/;"	t	typeref:struct:CFrameBuffer	file:
CGU	libswscale/swscale_internal.h	/^    vector signed short   CGU;$/;"	m	struct:SwsContext
CGV	libswscale/swscale_internal.h	/^    vector signed short   CGV;$/;"	m	struct:SwsContext
CHANNELS_MAX	libavcodec/twinvq.c	216;"	d	file:
CHANSIZE	libavcodec/shorten.c	46;"	d	file:
CHARSET_CHARS	libavcodec/a64multienc.c	34;"	d	file:
CHDContext	libavcodec/crystalhd.c	/^} CHDContext;$/;"	t	typeref:struct:__anon268	file:
CHECK	libavfilter/libmpcodecs/vf_mcdeint.c	128;"	d	file:
CHECK	libavfilter/vf_yadif.c	58;"	d	file:
CHECK	libavfilter/x86/yadif_template.c	260;"	d	file:
CHECK	libavfilter/x86/yadif_template.c	58;"	d	file:
CHECK1	libavfilter/x86/yadif_template.c	261;"	d	file:
CHECK1	libavfilter/x86/yadif_template.c	83;"	d	file:
CHECK2	libavfilter/x86/yadif_template.c	262;"	d	file:
CHECK2	libavfilter/x86/yadif_template.c	93;"	d	file:
CHECK_BIDIR	libavcodec/motion_est.c	1527;"	d	file:
CHECK_BIDIR2	libavcodec/motion_est.c	1544;"	d	file:
CHECK_BUFFER_SIZE	libavcodec/targa.c	36;"	d	file:
CHECK_CLIPPED_MV	libavcodec/motion_est_template.c	517;"	d	file:
CHECK_CODEC	ffserver.c	3701;"	d	file:
CHECK_COUNT	libavcodec/vqavideo.c	192;"	d	file:
CHECK_COUNT	libavformat/mpegts.c	1431;"	d	file:
CHECK_HALF_MV	libavcodec/motion_est_template.c	38;"	d	file:
CHECK_MV	libavcodec/motion_est_template.c	498;"	d	file:
CHECK_MV_DIR	libavcodec/motion_est_template.c	526;"	d	file:
CHECK_PIXEL_PTR	libavcodec/flicvideo.c	62;"	d	file:
CHECK_PIXEL_PTR	libavcodec/qtrle.c	59;"	d	file:
CHECK_QUARTER_MV	libavcodec/motion_est_template.c	265;"	d	file:
CHECK_READ_VAL	libavcodec/bink.c	295;"	d	file:
CHECK_SAD_HALF_MV	libavcodec/motion_est.c	410;"	d	file:
CHECK_STREAM_PTR	libavcodec/interplayvideo.c	75;"	d	file:
CHECK_STREAM_PTR	libavcodec/msvideo1.c	38;"	d	file:
CHECK_STREAM_PTR	libavcodec/qtrle.c	52;"	d	file:
CHECK_SUBSEQUENT_NSVS	libavformat/nsvdec.c	27;"	d	file:
CHK_OFFS	libavcodec/arm/asm-offsets.h	26;"	d
CHROMA444	libavcodec/h264.h	89;"	d
CHROMA_420	libavcodec/mpegvideo.h	634;"	d
CHROMA_422	libavcodec/mpegvideo.h	635;"	d
CHROMA_444	libavcodec/mpegvideo.h	636;"	d
CHROMA_BIAS	libavcodec/roqvideoenc.c	64;"	d	file:
CHROMA_DC_BLOCK_INDEX	libavcodec/h264.h	736;"	d
CHROMA_DC_COEFF_TOKEN_VLC_BITS	libavcodec/h264.h	42;"	d
CHROMA_DC_TOTAL_ZEROS_VLC_BITS	libavcodec/h264.h	45;"	d
CHROMA_HEIGHT	libavfilter/vf_unsharp.c	48;"	d	file:
CHROMA_MC	libavcodec/x86/dsputil_mmx.c	1845;"	d	file:
CHROMA_MC2	libavcodec/x86/h264_chromamc_10bit.asm	/^CHROMA_MC2 avg, mmxext$/;"	l
CHROMA_MC2	libavcodec/x86/h264_chromamc_10bit.asm	/^CHROMA_MC2 put, mmxext$/;"	l
CHROMA_MC4	libavcodec/x86/h264_chromamc_10bit.asm	/^CHROMA_MC4 avg, mmxext$/;"	l
CHROMA_MC4	libavcodec/x86/h264_chromamc_10bit.asm	/^CHROMA_MC4 put, mmxext$/;"	l
CHROMA_MC8	libavcodec/x86/h264_chromamc_10bit.asm	/^CHROMA_MC8 avg, avx$/;"	l
CHROMA_MC8	libavcodec/x86/h264_chromamc_10bit.asm	/^CHROMA_MC8 avg, sse2$/;"	l
CHROMA_MC8	libavcodec/x86/h264_chromamc_10bit.asm	/^CHROMA_MC8 put, avx$/;"	l
CHROMA_MC8	libavcodec/x86/h264_chromamc_10bit.asm	/^CHROMA_MC8 put, sse2$/;"	l
CHROMA_MC8_ALTIVEC_CORE	libavcodec/ppc/h264_template_altivec.c	293;"	d	file:
CHROMA_MC8_ALTIVEC_CORE	libavcodec/ppc/h264_template_altivec.c	29;"	d	file:
CHROMA_MC8_ALTIVEC_CORE_SIMPLE	libavcodec/ppc/h264_template_altivec.c	54;"	d	file:
CHROMA_QP_TABLE_END	libavcodec/h264_ps.c	62;"	d	file:
CHROMA_WIDTH	libavfilter/vf_unsharp.c	47;"	d	file:
CHROM_DERING	libpostproc/postprocess_internal.h	43;"	d
CHROM_H_DEBLOCK	libpostproc/postprocess_internal.h	41;"	d
CHROM_LEVEL_FIX	libpostproc/postprocess_internal.h	45;"	d
CHROM_V_DEBLOCK	libpostproc/postprocess_internal.h	40;"	d
CHR_MMX_FILTER_OFFSET	libswscale/swscale_internal.h	225;"	d
CHUNK_AUDIO_ONLY	libavformat/ipmovie.c	42;"	d	file:
CHUNK_BAD	libavformat/ipmovie.c	51;"	d	file:
CHUNK_DONE	libavformat/ipmovie.c	48;"	d	file:
CHUNK_END	libavformat/ipmovie.c	46;"	d	file:
CHUNK_EOF	libavformat/ipmovie.c	50;"	d	file:
CHUNK_HEADER_LENGTH	libavformat/mmsh.c	37;"	d	file:
CHUNK_INIT_AUDIO	libavformat/ipmovie.c	41;"	d	file:
CHUNK_INIT_VIDEO	libavformat/ipmovie.c	43;"	d	file:
CHUNK_NOMEM	libavformat/ipmovie.c	49;"	d	file:
CHUNK_PREAMBLE_SIZE	libavcodec/vqavideo.c	76;"	d	file:
CHUNK_PREAMBLE_SIZE	libavformat/ipmovie.c	38;"	d	file:
CHUNK_SHUTDOWN	libavformat/ipmovie.c	45;"	d	file:
CHUNK_TYPE_ASF_HEADER	libavformat/mmsh.c	/^    CHUNK_TYPE_ASF_HEADER    = 0x4824,$/;"	e	enum:__anon496	file:
CHUNK_TYPE_DATA	libavformat/mmsh.c	/^    CHUNK_TYPE_DATA          = 0x4424,$/;"	e	enum:__anon496	file:
CHUNK_TYPE_END	libavformat/mmsh.c	/^    CHUNK_TYPE_END           = 0x4524,$/;"	e	enum:__anon496	file:
CHUNK_TYPE_STREAM_CHANGE	libavformat/mmsh.c	/^    CHUNK_TYPE_STREAM_CHANGE = 0x4324,$/;"	e	enum:__anon496	file:
CHUNK_VIDEO	libavformat/ipmovie.c	44;"	d	file:
CH_BACK_CENTER	libavcodec/avcodec.h	387;"	d
CH_BACK_LEFT	libavcodec/avcodec.h	383;"	d
CH_BACK_RIGHT	libavcodec/avcodec.h	384;"	d
CH_FRONT_CENTER	libavcodec/avcodec.h	381;"	d
CH_FRONT_LEFT	libavcodec/avcodec.h	379;"	d
CH_FRONT_LEFT_OF_CENTER	libavcodec/avcodec.h	385;"	d
CH_FRONT_RIGHT	libavcodec/avcodec.h	380;"	d
CH_FRONT_RIGHT_OF_CENTER	libavcodec/avcodec.h	386;"	d
CH_LAYOUT_2_1	libavcodec/avcodec.h	408;"	d
CH_LAYOUT_2_2	libavcodec/avcodec.h	411;"	d
CH_LAYOUT_4POINT0	libavcodec/avcodec.h	410;"	d
CH_LAYOUT_5POINT0	libavcodec/avcodec.h	413;"	d
CH_LAYOUT_5POINT0_BACK	libavcodec/avcodec.h	415;"	d
CH_LAYOUT_5POINT1	libavcodec/avcodec.h	414;"	d
CH_LAYOUT_5POINT1_BACK	libavcodec/avcodec.h	416;"	d
CH_LAYOUT_7POINT0	libavcodec/avcodec.h	417;"	d
CH_LAYOUT_7POINT1	libavcodec/avcodec.h	418;"	d
CH_LAYOUT_7POINT1_WIDE	libavcodec/avcodec.h	419;"	d
CH_LAYOUT_MONO	libavcodec/avcodec.h	406;"	d
CH_LAYOUT_NATIVE	libavcodec/avcodec.h	403;"	d
CH_LAYOUT_QUAD	libavcodec/avcodec.h	412;"	d
CH_LAYOUT_STEREO	libavcodec/avcodec.h	407;"	d
CH_LAYOUT_STEREO_DOWNMIX	libavcodec/avcodec.h	420;"	d
CH_LAYOUT_SURROUND	libavcodec/avcodec.h	409;"	d
CH_LOW_FREQUENCY	libavcodec/avcodec.h	382;"	d
CH_SIDE_LEFT	libavcodec/avcodec.h	388;"	d
CH_SIDE_RIGHT	libavcodec/avcodec.h	389;"	d
CH_STEREO_LEFT	libavcodec/avcodec.h	397;"	d
CH_STEREO_RIGHT	libavcodec/avcodec.h	398;"	d
CH_TOP_BACK_CENTER	libavcodec/avcodec.h	395;"	d
CH_TOP_BACK_LEFT	libavcodec/avcodec.h	394;"	d
CH_TOP_BACK_RIGHT	libavcodec/avcodec.h	396;"	d
CH_TOP_CENTER	libavcodec/avcodec.h	390;"	d
CH_TOP_FRONT_CENTER	libavcodec/avcodec.h	392;"	d
CH_TOP_FRONT_LEFT	libavcodec/avcodec.h	391;"	d
CH_TOP_FRONT_RIGHT	libavcodec/avcodec.h	393;"	d
CIDEntry	libavcodec/dnxhddata.h	/^} CIDEntry;$/;"	t	typeref:struct:__anon281
CIND_TAG	libavformat/westwood.c	55;"	d	file:
CINF_TAG	libavformat/westwood.c	53;"	d	file:
CINH_TAG	libavformat/westwood.c	54;"	d	file:
CIN_CUR_BMP	libavcodec/dsicinav.c	/^    CIN_CUR_BMP = 0, \/* current *\/$/;"	e	enum:CinVideoBitmapIndex	file:
CIN_INT_BMP	libavcodec/dsicinav.c	/^    CIN_INT_BMP = 2  \/* intermediate *\/$/;"	e	enum:CinVideoBitmapIndex	file:
CIN_PRE_BMP	libavcodec/dsicinav.c	/^    CIN_PRE_BMP = 1, \/* previous *\/$/;"	e	enum:CinVideoBitmapIndex	file:
CLCLengthTab	libavcodec/atrac3data.h	/^static const uint8_t CLCLengthTab[8] = {0, 4, 3, 3, 4, 4, 5, 6};$/;"	v
CLEANFILES	libavcodec/Makefile	/^CLEANFILES = *_tables.c *_tables.h *_tablegen$(HOSTEXESUF)$/;"	m
CLEANSUFFIXES	common.mak	/^CLEANSUFFIXES     = *.d *.o *~ *.ho *.map *.ver$/;"	m
CLEAR_ACCUM	libavcodec/x86/mlpdsp.c	68;"	d	file:
CLEAR_ACCUM	libavcodec/x86/mlpdsp.c	90;"	d	file:
CLEAR_BLOCKS	libavcodec/x86/dsputil_mmx.c	499;"	d	file:
CLEAR_EVEN	libavcodec/x86/idct_sse2_xvid.c	118;"	d	file:
CLEAR_EVEN	libavcodec/x86/idct_sse2_xvid.c	136;"	d	file:
CLEAR_ODD	libavcodec/x86/idct_sse2_xvid.c	105;"	d	file:
CLEAR_PACKEDYUV_PATTERN	libavfilter/vf_mp.c	431;"	d	file:
CLEAR_PACKEDYUV_PATTERN_SWAPPED	libavfilter/vf_mp.c	432;"	d	file:
CLIENTGUID	libavformat/mmsh.c	44;"	d	file:
CLIP	libavcodec/high_bit_depth.h	39;"	d
CLIP	libavcodec/high_bit_depth.h	93;"	d
CLIP	libavcodec/v210enc.c	69;"	d	file:
CLIP	libpostproc/postprocess_internal.h	/^static inline int CLIP(int a){$/;"	f
CLIPMAX	libavcodec/ps2/idct_mmi.c	54;"	d	file:
CLIP_PIXEL	libavcodec/high_bit_depth.h	46;"	d
CLIP_SYMM	libavcodec/rv40.c	277;"	d	file:
CLJRContext	libavcodec/cljr.c	/^typedef struct CLJRContext{$/;"	s	file:
CLJRContext	libavcodec/cljr.c	/^} CLJRContext;$/;"	t	typeref:struct:CLJRContext	file:
CLOSEYUV2RGBFUNC	libswscale/yuv2rgb.c	159;"	d	file:
CLOSE_READER	libavcodec/get_bits.h	132;"	d
CLOSE_READER	libavcodec/get_bits.h	187;"	d
CMAC	libavcodec/fft-test.c	46;"	d	file:
CMD	Makefile	/^$(FATE_ACODEC):  CMD = codectest acodec$/;"	m
CMD	Makefile	/^$(FATE_LAVF):    CMD = lavftest$/;"	m
CMD	Makefile	/^$(FATE_LAVFI):   CMD = lavfitest$/;"	m
CMD	Makefile	/^$(FATE_SEEK):    CMD = seektest$/;"	m
CMD	Makefile	/^$(FATE_VSYNTH1): CMD = codectest vsynth1$/;"	m
CMD	Makefile	/^$(FATE_VSYNTH2): CMD = codectest vsynth2$/;"	m
CMD	tests/fate.mak	/^fate-4xm-1: CMD = framecrc -i $(SAMPLES)\/4xm\/version1.4xm -pix_fmt rgb24 -an$/;"	m
CMD	tests/fate.mak	/^fate-4xm-2: CMD = framecrc -i $(SAMPLES)\/4xm\/version2.4xm -pix_fmt rgb24 -an$/;"	m
CMD	tests/fate.mak	/^fate-8bps: CMD = framecrc  -i $(SAMPLES)\/8bps\/full9iron-partial.mov -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-aac-demux: CMD = crc  -i $(SAMPLES)\/aac\/ct_faac-adts.aac -acodec copy$/;"	m
CMD	tests/fate.mak	/^fate-aasc: CMD = framecrc  -i $(SAMPLES)\/aasc\/AASC-1.5MB.AVI -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-adpcm-ea-r2: CMD = crc  -i $(SAMPLES)\/ea-mpc\/THX_logo.mpc -vn$/;"	m
CMD	tests/fate.mak	/^fate-adpcm-ea-r3: CMD = crc  -i $(SAMPLES)\/ea-vp6\/THX_logo.vp6 -vn$/;"	m
CMD	tests/fate.mak	/^fate-aea-demux: CMD = crc  -i $(SAMPLES)\/aea\/chirp.aea -acodec copy$/;"	m
CMD	tests/fate.mak	/^fate-alg-mm: CMD = framecrc  -i $(SAMPLES)\/alg-mm\/ibmlogo.mm -an -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-amv: CMD = framecrc  -idct simple -i $(SAMPLES)\/amv\/MTV_high_res_320x240_sample_Penguin_Joke_MTV_from_WMV.amv -t 10$/;"	m
CMD	tests/fate.mak	/^fate-armovie-escape124: CMD = framecrc  -i $(SAMPLES)\/rpl\/ESCAPE.RPL -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-auravision-v2: CMD = framecrc  -i $(SAMPLES)\/auravision\/salma-hayek-in-ugly-betty-partial-avi -an$/;"	m
CMD	tests/fate.mak	/^fate-auravision: CMD = framecrc  -i $(SAMPLES)\/auravision\/SOUVIDEO.AVI -an$/;"	m
CMD	tests/fate.mak	/^fate-bethsoft-vid: CMD = framecrc  -i $(SAMPLES)\/bethsoft-vid\/ANIM0001.VID -vsync 0 -t 5 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-bfi: CMD = framecrc  -i $(SAMPLES)\/bfi\/2287.bfi -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-bink-demux-video: CMD = framecrc  -i $(SAMPLES)\/bink\/hol2br.bik$/;"	m
CMD	tests/fate.mak	/^fate-bink-demux: CMD = crc  -i $(SAMPLES)\/bink\/Snd0a7d9b58.dee -vn -acodec copy$/;"	m
CMD	tests/fate.mak	/^fate-caf: CMD = crc  -i $(SAMPLES)\/caf\/caf-pcm16.caf$/;"	m
CMD	tests/fate.mak	/^fate-cdgraphics: CMD = framecrc  -t 1 -i $(SAMPLES)\/cdgraphics\/BrotherJohn.cdg -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-cljr: CMD = framecrc  -i $(SAMPLES)\/cljr\/testcljr-partial.avi$/;"	m
CMD	tests/fate.mak	/^fate-corepng: CMD = framecrc  -i $(SAMPLES)\/png1\/corepng-partial.avi$/;"	m
CMD	tests/fate.mak	/^fate-creative-adpcm-8-2.6bit: CMD = md5  -i $(SAMPLES)\/creative\/BBC_3BIT.VOC -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-creative-adpcm-8-2bit: CMD = md5  -i $(SAMPLES)\/creative\/BBC_2BIT.VOC -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-creative-adpcm-8-4bit: CMD = md5  -i $(SAMPLES)\/creative\/BBC_4BIT.VOC -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-creative-adpcm: CMD = md5  -i $(SAMPLES)\/creative\/intro-partial.wav -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-creatureshock-avs: CMD = framecrc  -i $(SAMPLES)\/creatureshock-avs\/OUTATIME.AVS -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-cryo-apc: CMD = md5  -i $(SAMPLES)\/cryo-apc\/cine007.APC -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-cscd: CMD = framecrc  -i $(SAMPLES)\/CSCD\/sample_video.avi -an -vsync 0 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-cvid-palette: CMD = framecrc  -i $(SAMPLES)\/cvid\/catfight-cvid-pal8-partial.mov -pix_fmt rgb24 -an$/;"	m
CMD	tests/fate.mak	/^fate-cvid: CMD = framecrc  -i $(SAMPLES)\/cvid\/laracroft-cinepak-partial.avi -an$/;"	m
CMD	tests/fate.mak	/^fate-cyberia-c93: CMD = framecrc  -i $(SAMPLES)\/cyberia-c93\/intro1.c93 -t 3 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-cyuv: CMD = framecrc  -i $(SAMPLES)\/cyuv\/cyuv.avi$/;"	m
CMD	tests/fate.mak	/^fate-d-cinema-demux: CMD = framecrc  -i $(SAMPLES)\/d-cinema\/THX_Science_FLT_1920-partial.302 -acodec copy -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-delphine-cin: CMD = framecrc  -i $(SAMPLES)\/delphine-cin\/LOGO-partial.CIN -pix_fmt rgb24 -vsync 0$/;"	m
CMD	tests/fate.mak	/^fate-deluxepaint-anm: CMD = framecrc  -i $(SAMPLES)\/deluxepaint-anm\/INTRO1.ANM -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-dpx: CMD = framecrc  -i $(SAMPLES)\/dpx\/lighthouse_rgb48.dpx$/;"	m
CMD	tests/fate.mak	/^fate-duck-dk3: CMD = md5  -i $(SAMPLES)\/duck\/sop-audio-only.avi -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-duck-dk4: CMD = md5  -i $(SAMPLES)\/duck\/salsa-audio-only.avi -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-duck-tm2: CMD = framecrc  -i $(SAMPLES)\/duck\/tm20.avi$/;"	m
CMD	tests/fate.mak	/^fate-ea-cdata: CMD = md5  -i $(SAMPLES)\/ea-cdata\/166b084d.46410f77.0009b440.24be960c.cdata -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-ea-cmv: CMD = framecrc  -i $(SAMPLES)\/ea-cmv\/TITLE.CMV -vsync 0 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-ea-dct: CMD = framecrc  -idct simple -i $(SAMPLES)\/ea-dct\/NFS2Esprit-partial.dct$/;"	m
CMD	tests/fate.mak	/^fate-ea-mad-adpcm-ea-r1: CMD = framecrc  -i $(SAMPLES)\/ea-mad\/NFS6LogoE.mad$/;"	m
CMD	tests/fate.mak	/^fate-ea-mad-pcm-planar: CMD = framecrc  -i $(SAMPLES)\/ea-mad\/xeasport.mad$/;"	m
CMD	tests/fate.mak	/^fate-ea-tgq: CMD = framecrc  -i $(SAMPLES)\/ea-tgq\/v27.tgq -an$/;"	m
CMD	tests/fate.mak	/^fate-ea-tgv-ima-ea-eacs: CMD = framecrc  -i $(SAMPLES)\/ea-tgv\/INTRO8K-partial.TGV -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-ea-tgv-ima-ea-sead: CMD = framecrc  -i $(SAMPLES)\/ea-tgv\/INTEL_S.TGV -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-ea-tqi-adpcm: CMD = framecrc  -i $(SAMPLES)\/ea-wve\/networkBackbone-partial.wve$/;"	m
CMD	tests/fate.mak	/^fate-ea-vp60: CMD = framecrc  -i $(SAMPLES)\/ea-vp6\/g36.vp6$/;"	m
CMD	tests/fate.mak	/^fate-ea-vp61: CMD = framecrc  -i $(SAMPLES)\/ea-vp6\/MovieSkirmishGondor.vp6 -t 4$/;"	m
CMD	tests/fate.mak	/^fate-feeble-dxa: CMD = framecrc  -i $(SAMPLES)\/dxa\/meetsquid.dxa -t 2 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-film-cvid-pcm-stereo-8bit: CMD = framecrc  -i $(SAMPLES)\/film\/logo-capcom.cpk$/;"	m
CMD	tests/fate.mak	/^fate-flic-af11-palette-change: CMD = framecrc  -i $(SAMPLES)\/fli\/fli-engines.fli -t 3.3 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-flic-af12: CMD = framecrc  -i $(SAMPLES)\/fli\/jj00c2.fli -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-flic-magiccarpet: CMD = framecrc  -i $(SAMPLES)\/fli\/intel.dat -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-fraps-v0: CMD = framecrc  -i $(SAMPLES)\/fraps\/Griffin_Ragdoll01-partial.avi$/;"	m
CMD	tests/fate.mak	/^fate-fraps-v1: CMD = framecrc  -i $(SAMPLES)\/fraps\/sample-v1.avi -an$/;"	m
CMD	tests/fate.mak	/^fate-fraps-v2: CMD = framecrc  -i $(SAMPLES)\/fraps\/test3-nosound-partial.avi$/;"	m
CMD	tests/fate.mak	/^fate-fraps-v3: CMD = framecrc  -i $(SAMPLES)\/fraps\/psclient-partial.avi -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-fraps-v4: CMD = framecrc  -i $(SAMPLES)\/fraps\/WoW_2006-11-03_14-58-17-19-nosound-partial.avi$/;"	m
CMD	tests/fate.mak	/^fate-fraps-v5: CMD = framecrc  -i $(SAMPLES)\/fraps\/fraps-v5-bouncing-balls-partial.avi$/;"	m
CMD	tests/fate.mak	/^fate-frwu: CMD = framecrc  -i $(SAMPLES)\/frwu\/frwu.avi$/;"	m
CMD	tests/fate.mak	/^fate-funcom-iss: CMD = md5  -i $(SAMPLES)\/funcom-iss\/0004010100.iss -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-id-cin-video: CMD = framecrc  -i $(SAMPLES)\/idcin\/idlog-2MB.cin -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-idroq-video-dpcm: CMD = framecrc  -i $(SAMPLES)\/idroq\/idlogo.roq$/;"	m
CMD	tests/fate.mak	/^fate-idroq-video-encode: CMD = md5  -t 0.2 -f image2 -vcodec pgmyuv -i $(SAMPLES)\/ffmpeg-synthetic\/vsynth1\/%02d.pgm -sws_flags +bitexact -vf pad=512:512:80:112 -f RoQ$/;"	m
CMD	tests/fate.mak	/^fate-iff-byterun1: CMD = framecrc  -i $(SAMPLES)\/iff\/ASH.LBM -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-iff-fibonacci: CMD = md5  -i $(SAMPLES)\/iff\/dasboot-in-compressed -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-iff-ilbm: CMD = framecrc  -i $(SAMPLES)\/iff\/lms-matriks.ilbm -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-iff-pcm: CMD = md5  -i $(SAMPLES)\/iff\/Bells -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-indeo2: CMD = framecrc  -i $(SAMPLES)\/rt21\/VPAR0026.AVI$/;"	m
CMD	tests/fate.mak	/^fate-indeo3: CMD = framecrc  -i $(SAMPLES)\/iv32\/cubes.mov$/;"	m
CMD	tests/fate.mak	/^fate-indeo5: CMD = framecrc  -i $(SAMPLES)\/iv50\/Educ_Movie_DeadlyForce.avi -an$/;"	m
CMD	tests/fate.mak	/^fate-interplay-mve-16bit: CMD = framecrc  -i $(SAMPLES)\/interplay-mve\/descent3-level5-16bit-partial.mve -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-interplay-mve-8bit: CMD = framecrc  -i $(SAMPLES)\/interplay-mve\/interplay-logo-2MB.mve -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-iv8-demux: CMD = framecrc  -i $(SAMPLES)\/iv8\/zzz-partial.mpg -vsync 0 -vcodec copy$/;"	m
CMD	tests/fate.mak	/^fate-kmvc: CMD = framecrc  -i $(SAMPLES)\/KMVC\/LOGO1.AVI -an -t 3 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-lmlm4-demux: CMD = framecrc  -i $(SAMPLES)\/lmlm4\/LMLM4_CIFat30fps.divx -t 3 -acodec copy -vcodec copy$/;"	m
CMD	tests/fate.mak	/^fate-loco-rgb: CMD = framecrc  -i $(SAMPLES)\/loco\/pig-loco-rgb.avi$/;"	m
CMD	tests/fate.mak	/^fate-loco-yuy2: CMD = framecrc  -i $(SAMPLES)\/loco\/pig-loco-0.avi$/;"	m
CMD	tests/fate.mak	/^fate-lossless-appleaudio: CMD = md5  -i $(SAMPLES)\/lossless-audio\/inside.m4a -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-lossless-meridianaudio: CMD = md5  -i $(SAMPLES)\/lossless-audio\/luckynight-partial.mlp -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-lossless-monkeysaudio: CMD = md5  -i $(SAMPLES)\/lossless-audio\/luckynight-partial.ape -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-lossless-shortenaudio: CMD = md5  -i $(SAMPLES)\/lossless-audio\/luckynight-partial.shn -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-lossless-tta: CMD = crc  -i $(SAMPLES)\/lossless-audio\/inside.tta$/;"	m
CMD	tests/fate.mak	/^fate-lossless-wavpackaudio: CMD = md5  -i $(SAMPLES)\/lossless-audio\/luckynight-partial.wv -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-maxis-xa: CMD = md5  -i $(SAMPLES)\/maxis-xa\/SC2KBUG.XA -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-mimic: CMD = framecrc  -idct simple -i $(SAMPLES)\/mimic\/mimic2-womanloveffmpeg.cam -vsync 0$/;"	m
CMD	tests/fate.mak	/^fate-motionpixels: CMD = framecrc  -i $(SAMPLES)\/motion-pixels\/INTRO-partial.MVI -an -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-mpc7-demux: CMD = crc  -i $(SAMPLES)\/musepack\/inside-mp7.mpc -acodec copy$/;"	m
CMD	tests/fate.mak	/^fate-mpc8-demux: CMD = crc  -i $(SAMPLES)\/musepack\/inside-mp8.mpc -acodec copy$/;"	m
CMD	tests/fate.mak	/^fate-msrle-8bit: CMD = framecrc  -i $(SAMPLES)\/msrle\/Search-RLE.avi -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-msvideo1-16bit: CMD = framecrc  -i $(SAMPLES)\/cram\/clock-cram16.avi -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-msvideo1-8bit: CMD = framecrc  -i $(SAMPLES)\/cram\/skating.avi -t 1 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-mszh: CMD = framecrc  -i $(SAMPLES)\/lcl\/mszh-1frame.avi$/;"	m
CMD	tests/fate.mak	/^fate-mtv: CMD = framecrc  -i $(SAMPLES)\/mtv\/comedian_auto-partial.mtv -acodec copy -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-mxf-demux: CMD = framecrc  -i $(SAMPLES)\/mxf\/C0023S01.mxf -acodec copy -vcodec copy$/;"	m
CMD	tests/fate.mak	/^fate-nc-demux: CMD = framecrc  -i $(SAMPLES)\/nc-camera\/nc-sample-partial -vcodec copy$/;"	m
CMD	tests/fate.mak	/^fate-nsv-demux: CMD = framecrc  -i $(SAMPLES)\/nsv\/witchblade-51kbps.nsv -t 6 -vcodec copy -acodec copy$/;"	m
CMD	tests/fate.mak	/^fate-nuv: CMD = framecrc  -idct simple -i $(SAMPLES)\/nuv\/Today.nuv$/;"	m
CMD	tests/fate.mak	/^fate-oma-demux: CMD = crc  -i $(SAMPLES)\/oma\/01-Untitled-partial.oma -acodec copy$/;"	m
CMD	tests/fate.mak	/^fate-pcm_dvd: CMD = framecrc  -i $(SAMPLES)\/pcm-dvd\/coolitnow-partial.vob -vn$/;"	m
CMD	tests/fate.mak	/^fate-psx-str-v3-adpcm_xa: CMD = framecrc  -i $(SAMPLES)\/psx-str\/abc000_cut.str -vn$/;"	m
CMD	tests/fate.mak	/^fate-psx-str-v3-mdec: CMD = framecrc  -i $(SAMPLES)\/psx-str\/abc000_cut.str -an$/;"	m
CMD	tests/fate.mak	/^fate-psx-str: CMD = framecrc  -i $(SAMPLES)\/psx-str\/descent-partial.str$/;"	m
CMD	tests/fate.mak	/^fate-ptx: CMD = framecrc  -i $(SAMPLES)\/ptx\/_113kw_pic.ptx -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-pva-demux: CMD = framecrc  -idct simple -i $(SAMPLES)\/pva\/PVA_test-partial.pva -t 0.6 -acodec copy$/;"	m
CMD	tests/fate.mak	/^fate-qcp-demux: CMD = crc  -i $(SAMPLES)\/qcp\/0036580847.QCP -acodec copy$/;"	m
CMD	tests/fate.mak	/^fate-qpeg: CMD = framecrc  -i $(SAMPLES)\/qpeg\/Clock.avi -an -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-qt-alaw-mono: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-1-16-B-alaw.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-alaw-stereo: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-2-16-B-alaw.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-ima4-mono: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-1-16-B-ima4.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-ima4-stereo: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-2-16-B-ima4.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-mac3-mono: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-1-8-MAC3.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-mac3-stereo: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-2-8-MAC3.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-mac6-mono: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-1-8-MAC6.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-mac6-stereo: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-2-8-MAC6.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-msadpcm-stereo: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-2-16-L-ms02.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-msimaadpcm-stereo: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-2-16-L-ms11.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-rawpcm-16bit-stereo-signed-be: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-2-16-B-twos.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-rawpcm-16bit-stereo-signed-le: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-2-16-L-sowt.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-rawpcm-8bit-mono-unsigned: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-1-8-raw.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-rawpcm-8bit-stereo-unsigned: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-2-8-raw.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-ulaw-mono: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-1-16-B-ulaw.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qt-ulaw-stereo: CMD = md5  -i $(SAMPLES)\/qt-surge-suite\/surge-2-16-B-ulaw.mov -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-qtrle-16bit: CMD = framecrc  -i $(SAMPLES)\/qtrle\/mr-cork-rle.mov -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-qtrle-1bit: CMD = framecrc  -i $(SAMPLES)\/qtrle\/Animation-Monochrome.mov$/;"	m
CMD	tests/fate.mak	/^fate-qtrle-24bit: CMD = framecrc  -i $(SAMPLES)\/qtrle\/aletrek-rle.mov -vsync 0$/;"	m
CMD	tests/fate.mak	/^fate-qtrle-2bit: CMD = framecrc  -i $(SAMPLES)\/qtrle\/Animation-4Greys.mov -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-qtrle-32bit: CMD = framecrc  -i $(SAMPLES)\/qtrle\/ultra_demo_720_480_32bpp_rle.mov -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-qtrle-4bit: CMD = framecrc  -i $(SAMPLES)\/qtrle\/Animation-16Greys.mov -pix_fmt rgb24 -an$/;"	m
CMD	tests/fate.mak	/^fate-qtrle-8bit: CMD = framecrc  -i $(SAMPLES)\/qtrle\/criticalpath-credits.mov -vsync 0 -pix_fmt rgb24 -an$/;"	m
CMD	tests/fate.mak	/^fate-quickdraw: CMD = framecrc  -i $(SAMPLES)\/quickdraw\/Airplane.mov -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-real-14_4: CMD = md5  -i $(SAMPLES)\/real\/ra3_in_rm_file.rm -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-real-rv40: CMD = framecrc  -i $(SAMPLES)\/real\/spygames-2MB.rmvb -t 10 -an$/;"	m
CMD	tests/fate.mak	/^fate-redcode-demux: CMD = framecrc  -i $(SAMPLES)\/r3d\/4MB-sample.r3d -vcodec copy -acodec copy$/;"	m
CMD	tests/fate.mak	/^fate-rl2: CMD = framecrc  -i $(SAMPLES)\/rl2\/Z4915300.RL2 -pix_fmt rgb24 -an -vsync 0$/;"	m
CMD	tests/fate.mak	/^fate-rpza: CMD = framecrc  -i $(SAMPLES)\/rpza\/rpza2.mov -t 2 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-sierra-audio: CMD = md5  -i $(SAMPLES)\/sol\/lsl7sample.sol -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-sierra-vmd: CMD = framecrc  -i $(SAMPLES)\/vmd\/12.vmd -vsync 0 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-siff: CMD = framecrc  -i $(SAMPLES)\/SIFF\/INTRO_B.VB -t 3 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-smacker: CMD = framecrc  -i $(SAMPLES)\/smacker\/wetlogo.smk -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-smc: CMD = framecrc  -i $(SAMPLES)\/smc\/cass_schi.qt -vsync 0 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-sp5x: CMD = framecrc  -idct simple -i $(SAMPLES)\/sp5x\/sp5x_problem.avi$/;"	m
CMD	tests/fate.mak	/^fate-sub-srt: CMD = md5  -i $(SAMPLES)\/sub\/SubRip_capability_tester.srt -f ass$/;"	m
CMD	tests/fate.mak	/^fate-sunraster-1bit-raw: CMD = framecrc  -i $(SAMPLES)\/sunraster\/lena-1bit-raw.sun$/;"	m
CMD	tests/fate.mak	/^fate-sunraster-1bit-rle: CMD = framecrc  -i $(SAMPLES)\/sunraster\/lena-1bit-rle.sun$/;"	m
CMD	tests/fate.mak	/^fate-sunraster-24bit-raw: CMD = framecrc  -i $(SAMPLES)\/sunraster\/lena-24bit-raw.sun$/;"	m
CMD	tests/fate.mak	/^fate-sunraster-24bit-rle: CMD = framecrc  -i $(SAMPLES)\/sunraster\/lena-24bit-rle.sun$/;"	m
CMD	tests/fate.mak	/^fate-sunraster-8bit-raw: CMD = framecrc  -i $(SAMPLES)\/sunraster\/lena-8bit-raw.sun -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-sunraster-8bit-rle: CMD = framecrc  -i $(SAMPLES)\/sunraster\/lena-8bit-rle.sun -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-svq1: CMD = framecrc  -i $(SAMPLES)\/svq1\/marymary-shackles.mov -an -t 10$/;"	m
CMD	tests/fate.mak	/^fate-svq3: CMD = framecrc  -i $(SAMPLES)\/svq3\/Vertical400kbit.sorenson3.mov -t 6 -an$/;"	m
CMD	tests/fate.mak	/^fate-thp-mjpeg-adpcm: CMD = framecrc  -idct simple -i $(SAMPLES)\/thp\/pikmin2-opening1-partial.thp$/;"	m
CMD	tests/fate.mak	/^fate-tiertex-seq: CMD = framecrc  -i $(SAMPLES)\/tiertex-seq\/Gameover.seq -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-tmv: CMD = framecrc  -i $(SAMPLES)\/tmv\/pop-partial.tmv -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-truemotion1-15: CMD = framecrc -i $(SAMPLES)\/duck\/phant2-940.duk -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-truemotion1-24: CMD = framecrc -i $(SAMPLES)\/duck\/sonic3dblast_intro-partial.avi -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-tscc-15bit: CMD = framecrc  -i $(SAMPLES)\/tscc\/oneminute.avi -t 15 -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-tscc-32bit: CMD = framecrc  -i $(SAMPLES)\/tscc\/2004-12-17-uebung9-partial.avi -pix_fmt rgb24 -an$/;"	m
CMD	tests/fate.mak	/^fate-ulti: CMD = framecrc  -i $(SAMPLES)\/ulti\/hit12w.avi -an$/;"	m
CMD	tests/fate.mak	/^fate-v210: CMD = framecrc  -i $(SAMPLES)\/v210\/v210_720p-partial.avi -pix_fmt yuv422p16be -an$/;"	m
CMD	tests/fate.mak	/^fate-vc1: CMD = framecrc  -i $(SAMPLES)\/vc1\/SA00040.vc1$/;"	m
CMD	tests/fate.mak	/^fate-vcr1: CMD = framecrc  -i $(SAMPLES)\/vcr1\/VCR1test.avi -an$/;"	m
CMD	tests/fate.mak	/^fate-video-xl: CMD = framecrc  -i $(SAMPLES)\/vixl\/pig-vixl.avi$/;"	m
CMD	tests/fate.mak	/^fate-vmnc-16bit: CMD = framecrc  -i $(SAMPLES)\/VMnc\/test.avi -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-vmnc-32bit: CMD = framecrc  -i $(SAMPLES)\/VMnc\/VS2k5DebugDemo-01-partial.avi -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-vp5: CMD = framecrc  -i $(SAMPLES)\/vp5\/potter512-400-partial.avi -an$/;"	m
CMD	tests/fate.mak	/^fate-vp6a: CMD = framecrc  -i $(SAMPLES)\/flash-vp6\/300x180-Scr-f8-056alpha.flv$/;"	m
CMD	tests/fate.mak	/^fate-vp6f: CMD = framecrc  -i $(SAMPLES)\/flash-vp6\/clip1024.flv$/;"	m
CMD	tests/fate.mak	/^fate-vqa-cc: CMD = framecrc  -i $(SAMPLES)\/vqa\/cc-demo1-partial.vqa -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-vqf-demux: CMD = md5  -i $(SAMPLES)\/vqf\/achterba.vqf -acodec copy -f framecrc$/;"	m
CMD	tests/fate.mak	/^fate-w64: CMD = crc  -i $(SAMPLES)\/w64\/w64-pcm16.w64$/;"	m
CMD	tests/fate.mak	/^fate-wc3movie-xan: CMD = framecrc  -i $(SAMPLES)\/wc3movie\/SC_32-part.MVE -pix_fmt rgb24$/;"	m
CMD	tests/fate.mak	/^fate-westwood-aud: CMD = md5  -i $(SAMPLES)\/westwood-aud\/excellent.aud -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-wnv1: CMD = framecrc  -i $(SAMPLES)\/wnv1\/wnv1-codec.avi -an$/;"	m
CMD	tests/fate.mak	/^fate-xan-dpcm: CMD = md5  -i $(SAMPLES)\/wc4-xan\/wc4_2.avi -vn -f s16le$/;"	m
CMD	tests/fate.mak	/^fate-zlib: CMD = framecrc  -i $(SAMPLES)\/lcl\/zlib-1frame.avi$/;"	m
CMD	tests/fate.mak	/^fate-zmbv-15bit: CMD = framecrc  -i $(SAMPLES)\/zmbv\/zmbv_15bit.avi -pix_fmt rgb24 -t 25$/;"	m
CMD	tests/fate.mak	/^fate-zmbv-16bit: CMD = framecrc  -i $(SAMPLES)\/zmbv\/zmbv_16bit.avi -pix_fmt rgb24 -t 25$/;"	m
CMD	tests/fate.mak	/^fate-zmbv-32bit: CMD = framecrc  -i $(SAMPLES)\/zmbv\/zmbv_32bit.avi -pix_fmt rgb24 -t 25$/;"	m
CMD	tests/fate.mak	/^fate-zmbv-8bit: CMD = framecrc  -i $(SAMPLES)\/zmbv\/wc2_001-partial.avi -an -pix_fmt rgb24$/;"	m
CMD	tests/fate/aac.mak	/^fate-aac-al04_44: CMD = pcm -i $(SAMPLES)\/aac\/al04_44.mp4$/;"	m
CMD	tests/fate/aac.mak	/^fate-aac-al07_96: CMD = pcm -i $(SAMPLES)\/aac\/al07_96.mp4$/;"	m
CMD	tests/fate/aac.mak	/^fate-aac-al_sbr_hq_cm_48_2: CMD = pcm -i $(SAMPLES)\/aac\/al_sbr_cm_48_2.mp4$/;"	m
CMD	tests/fate/aac.mak	/^fate-aac-al_sbr_ps_06_ur: CMD = pcm -i $(SAMPLES)\/aac\/al_sbr_ps_06_new.mp4$/;"	m
CMD	tests/fate/aac.mak	/^fate-aac-am00_88: CMD = pcm -i $(SAMPLES)\/aac\/am00_88.mp4$/;"	m
CMD	tests/fate/aac.mak	/^fate-aac-ap05_48: CMD = pcm -i $(SAMPLES)\/aac\/ap05_48.mp4$/;"	m
CMD	tests/fate/aac.mak	/^fate-aac-latm_000000001180bc60: CMD = pcm -i $(SAMPLES)\/aac\/latm_000000001180bc60.mpg$/;"	m
CMD	tests/fate/fft.mak	/^fate-dct1d:  CMD = run libavcodec\/fft-test -d$/;"	m
CMD	tests/fate/fft.mak	/^fate-fft-fixed:   CMD = run libavcodec\/fft-fixed-test$/;"	m
CMD	tests/fate/fft.mak	/^fate-fft:    CMD = run libavcodec\/fft-test$/;"	m
CMD	tests/fate/fft.mak	/^fate-idct1d: CMD = run libavcodec\/fft-test -d -i$/;"	m
CMD	tests/fate/fft.mak	/^fate-ifft-fixed:  CMD = run libavcodec\/fft-fixed-test -i$/;"	m
CMD	tests/fate/fft.mak	/^fate-ifft:   CMD = run libavcodec\/fft-test -i$/;"	m
CMD	tests/fate/fft.mak	/^fate-imdct-fixed: CMD = run libavcodec\/fft-fixed-test -m -i$/;"	m
CMD	tests/fate/fft.mak	/^fate-imdct:  CMD = run libavcodec\/fft-test -m -i$/;"	m
CMD	tests/fate/fft.mak	/^fate-irdft:  CMD = run libavcodec\/fft-test -r -i$/;"	m
CMD	tests/fate/fft.mak	/^fate-mdct-fixed:  CMD = run libavcodec\/fft-fixed-test -m$/;"	m
CMD	tests/fate/fft.mak	/^fate-mdct:   CMD = run libavcodec\/fft-test -m$/;"	m
CMD	tests/fate/fft.mak	/^fate-rdft:   CMD = run libavcodec\/fft-test -r$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-aud_mw_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/AUD_MW_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-ba1_ft_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/BA1_FT_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-ba1_sony_d: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/BA1_Sony_D.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-ba2_sony_f: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/BA2_Sony_F.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-ba3_sva_c: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/BA3_SVA_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-ba_mw_d: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/BA_MW_D.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-bamq1_jvc_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/BAMQ1_JVC_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-bamq2_jvc_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/BAMQ2_JVC_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-banm_mw_d: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/BANM_MW_D.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-basqp1_sony_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/BASQP1_Sony_C.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-caba1_sony_d: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CABA1_Sony_D.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-caba1_sva_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CABA1_SVA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-caba2_sony_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CABA2_Sony_E.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-caba2_sva_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CABA2_SVA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-caba3_sony_c: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CABA3_Sony_C.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-caba3_sva_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CABA3_SVA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-caba3_toshiba_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CABA3_TOSHIBA_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cabac_mot_fld0_full: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/camp_mot_fld0_full.26l$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cabac_mot_frm0_full: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/camp_mot_frm0_full.26l$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cabac_mot_mbaff0_full: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/camp_mot_mbaff0_full.26l$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cabac_mot_picaff0_full: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/camp_mot_picaff0_full.26l$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cabaci3_sony_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CABACI3_Sony_B.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cabast3_sony_e: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CABAST3_Sony_E.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cabastbr3_sony_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CABASTBR3_Sony_B.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cabref3_sand_d: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CABREF3_Sand_D.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cacqp3_sony_d: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CACQP3_Sony_D.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cafi1_sva_c: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAFI1_SVA_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cama1_sony_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CAMA1_Sony_C.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cama1_toshiba_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAMA1_TOSHIBA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cama1_vtc_c: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/cama1_vtc_c.avc$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cama2_vtc_b: CMD = framecrc  -vsync 0 -i $(SAMPLES)\/h264-conformance\/cama2_vtc_b.avc$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cama3_sand_e: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAMA3_Sand_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cama3_vtc_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/cama3_vtc_b.avc$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-camaci3_sony_c: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAMACI3_Sony_C.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-camanl1_toshiba_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAMANL1_TOSHIBA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-camanl2_toshiba_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAMANL2_TOSHIBA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-camanl3_sand_e: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAMANL3_Sand_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-camasl3_sony_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAMASL3_Sony_B.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-camp_mot_mbaff_l30: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAMP_MOT_MBAFF_L30.26l$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-camp_mot_mbaff_l31: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAMP_MOT_MBAFF_L31.26l$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-canl1_sony_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CANL1_Sony_E.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-canl1_sva_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CANL1_SVA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-canl1_toshiba_g: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CANL1_TOSHIBA_G.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-canl2_sony_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CANL2_Sony_E.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-canl2_sva_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CANL2_SVA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-canl3_sony_c: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CANL3_Sony_C.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-canl3_sva_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CANL3_SVA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-canl4_sva_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CANL4_SVA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-canlma2_sony_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CANLMA2_Sony_C.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-canlma3_sony_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CANLMA3_Sony_C.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-capa1_toshiba_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAPA1_TOSHIBA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-capama3_sand_f: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAPAMA3_Sand_F.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-capcm1_sand_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CAPCM1_Sand_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-capcmnl1_sand_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CAPCMNL1_Sand_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-capm3_sony_d: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAPM3_Sony_D.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-caqp1_sony_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CAQP1_Sony_B.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cavlc_mot_fld0_full_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/cvmp_mot_fld0_full_B.26l$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cavlc_mot_frm0_full_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/cvmp_mot_frm0_full_B.26l$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cavlc_mot_mbaff0_full_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/cvmp_mot_mbaff0_full_B.26l$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cavlc_mot_picaff0_full_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/cvmp_mot_picaff0_full_B.26l$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cawp1_toshiba_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CAWP1_TOSHIBA_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cawp5_toshiba_e: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CAWP5_TOSHIBA_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-ci1_ft_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CI1_FT_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-ci_mw_d: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CI_MW_D.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvbs3_sony_c: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVBS3_Sony_C.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvcanlma2_sony_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CVCANLMA2_Sony_C.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvfi1_sony_d: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVFI1_Sony_D.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvfi1_sva_c: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVFI1_SVA_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvfi2_sony_h: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVFI2_Sony_H.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvfi2_sva_c: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVFI2_SVA_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvma1_sony_d: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CVMA1_Sony_D.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvma1_toshiba_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVMA1_TOSHIBA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvmanl1_toshiba_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVMANL1_TOSHIBA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvmanl2_toshiba_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVMANL2_TOSHIBA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvmapaqp3_sony_e: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVMAPAQP3_Sony_E.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvmaqp2_sony_g: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVMAQP2_Sony_G.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvmaqp3_sony_d: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVMAQP3_Sony_D.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvmp_mot_fld_l30_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVMP_MOT_FLD_L30_B.26l$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvmp_mot_frm_l31_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVMP_MOT_FRM_L31_B.26l$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvnlfi1_sony_c: CMD = framecrc  -vsync 0 -i $(SAMPLES)\/h264-conformance\/CVNLFI1_Sony_C.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvnlfi2_sony_h: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVNLFI2_Sony_H.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvpa1_toshiba_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVPA1_TOSHIBA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvpcmnl1_sva_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CVPCMNL1_SVA_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvpcmnl2_sva_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CVPCMNL2_SVA_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvwp1_toshiba_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/CVWP1_TOSHIBA_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvwp2_toshiba_e: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVWP2_TOSHIBA_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvwp3_toshiba_e: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVWP3_TOSHIBA_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-cvwp5_toshiba_e: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/CVWP5_TOSHIBA_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-fi1_sony_e: CMD = framecrc  -vsync 0 -i $(SAMPLES)\/h264-conformance\/FI1_Sony_E.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-alphaconformanceg: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/test8b43.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-bcrm_freh10: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/freh10.264 -vsync 0$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-brcm_freh11: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/freh11.264 -vsync 0$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-brcm_freh3: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/freh3.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-brcm_freh4: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/freh4.264 -vsync 0$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-brcm_freh5: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/freh5.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-brcm_freh8: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/freh8.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-brcm_freh9: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/freh9.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-freh12_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/Freh12_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-freh1_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/Freh1_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-freh2_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/Freh2_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-freh6: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/freh6.264 -vsync 0$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-freh7_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/Freh7_B.264 -vsync 0$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-frext01_jvc_d: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/FREXT01_JVC_D.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-frext02_jvc_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/FREXT02_JVC_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-frext1_panasonic_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/FRExt1_Panasonic.avc$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-frext2_panasonic_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/FRExt2_Panasonic.avc -vsync 0$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-frext3_panasonic_d: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/FRExt3_Panasonic.avc$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-frext4_panasonic_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/FRExt4_Panasonic.avc$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-frext_mmco4_sony_b: CMD = framecrc  -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/FRExt_MMCO4_Sony_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hcaff1_hhi_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HCAFF1_HHI.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hcafr1_hhi_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HCAFR1_HHI.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hcafr2_hhi_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HCAFR2_HHI.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hcafr3_hhi_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HCAFR3_HHI.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hcafr4_hhi_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HCAFR4_HHI.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hcamff1_hhi_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HCAMFF1_HHI.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpca_brcm_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCA_BRCM_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcadq_brcm_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCADQ_BRCM_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcafl_bcrm_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCAFL_BRCM_C.264 -vsync 0$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcaflnl_bcrm_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCAFLNL_BRCM_C.264 -vsync 0$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcalq_brcm_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCALQ_BRCM_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcamapalq_bcrm_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCAMAPALQ_BRCM_B.264 -vsync 0$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcamolq_brcm_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCAMOLQ_BRCM_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcanl_brcm_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCANL_BRCM_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcaq2lq_brcm_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCAQ2LQ_BRCM_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcv_brcm_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCV_BRCM_A.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcvfl_bcrm_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCVFL_BRCM_A.264 -vsync 0$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcvflnl_bcrm_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCVFLNL_BRCM_A.264 -vsync 0$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcvmolq_brcm_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCVMOLQ_BRCM_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-hpcvnl_brcm_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/HPCVNL_BRCM_A.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-pph10i1_panasonic_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/PPH10I1_Panasonic_A.264 -pix_fmt yuv420p10le$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-pph10i2_panasonic_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/PPH10I2_Panasonic_A.264 -pix_fmt yuv420p10le$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-pph10i3_panasonic_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/PPH10I3_Panasonic_A.264 -pix_fmt yuv420p10le$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-pph10i4_panasonic_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/PPH10I4_Panasonic_A.264 -pix_fmt yuv420p10le$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-pph10i5_panasonic_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/PPH10I5_Panasonic_A.264 -pix_fmt yuv420p10le$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-pph10i6_panasonic_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/PPH10I6_Panasonic_A.264 -pix_fmt yuv420p10le$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-frext-pph10i7_panasonic_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/FRext\/PPH10I7_Panasonic_A.264 -pix_fmt yuv420p10le$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-hcbp2_hhi_a: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/HCBP2_HHI_A.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-hcmp1_hhi_a: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/HCMP1_HHI_A.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-ls_sva_d: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/LS_SVA_D.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-midr_mw_d: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/MIDR_MW_D.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mps_mw_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/MPS_MW_A.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mr1_bt_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/MR1_BT_A.h264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mr1_mw_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/MR1_MW_A.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mr2_mw_a: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/MR2_MW_A.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mr2_tandberg_e: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/MR2_TANDBERG_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mr3_tandberg_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/MR3_TANDBERG_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mr4_tandberg_c: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/MR4_TANDBERG_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mr5_tandberg_c: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/MR5_TANDBERG_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mr6_bt_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/MR6_BT_B.h264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mr7_bt_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/MR7_BT_B.h264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mr8_bt_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/MR8_BT_B.h264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mr9_bt_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/MR9_BT_B.h264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-mv1_brcm_d: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/src19td.IBP.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-nl1_sony_d: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/NL1_Sony_D.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-nl2_sony_h: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/NL2_Sony_H.jsv$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-nl3_sva_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/NL3_SVA_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-nlmq1_jvc_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/NLMQ1_JVC_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-nlmq2_jvc_c: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/NLMQ2_JVC_C.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-nrf_mw_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/NRF_MW_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sharp_mp_field_1_b: CMD = framecrc  -vsync 0 -i $(SAMPLES)\/h264-conformance\/Sharp_MP_Field_1_B.jvt$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sharp_mp_field_2_b: CMD = framecrc  -vsync 0 -i $(SAMPLES)\/h264-conformance\/Sharp_MP_Field_2_B.jvt$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sharp_mp_field_3_b: CMD = framecrc  -vsync 0 -i $(SAMPLES)\/h264-conformance\/Sharp_MP_Field_3_B.jvt$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sharp_mp_paff_1r2: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/Sharp_MP_PAFF_1r2.jvt$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sharp_mp_paff_2r: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/Sharp_MP_PAFF_2.jvt$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sl1_sva_b: CMD = framecrc  -vsync 0 -strict 1 -i $(SAMPLES)\/h264-conformance\/SL1_SVA_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sva_ba1_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/SVA_BA1_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sva_ba2_d: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/SVA_BA2_D.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sva_base_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/SVA_Base_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sva_cl1_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/SVA_CL1_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sva_fm1_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/SVA_FM1_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sva_nl1_b: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/SVA_NL1_B.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-conformance-sva_nl2_e: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264-conformance\/SVA_NL2_E.264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-extreme-plane-pred: CMD = framemd5 -strict 1 -vsync 0 -i $(SAMPLES)\/h264\/extreme-plane-pred.h264$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-interlace-crop: CMD = framecrc -vsync 0 -vframes 3 -i $(SAMPLES)\/h264\/interlaced_crop.mp4$/;"	m
CMD	tests/fate/h264.mak	/^fate-h264-lossless: CMD = framecrc -vsync 0 -i $(SAMPLES)\/h264\/lossless.h264$/;"	m
CMD	tests/fate/mp3.mak	/^fate-mp3-float-conf-compl: CMD = pcm -acodec mp3float -i $(SAMPLES)\/mp3-conformance\/compl.bit$/;"	m
CMD	tests/fate/mp3.mak	/^fate-mp3-float-conf-he_32khz: CMD = pcm -acodec mp3float  -fs 343296 -i $(SAMPLES)\/mp3-conformance\/he_32khz.bit$/;"	m
CMD	tests/fate/mp3.mak	/^fate-mp3-float-conf-he_44khz: CMD = pcm -acodec mp3float -fs 942336 -i $(SAMPLES)\/mp3-conformance\/he_44khz.bit$/;"	m
CMD	tests/fate/mp3.mak	/^fate-mp3-float-conf-he_48khz: CMD = pcm -acodec mp3float -fs 343296 -i $(SAMPLES)\/mp3-conformance\/he_48khz.bit$/;"	m
CMD	tests/fate/mp3.mak	/^fate-mp3-float-conf-hecommon: CMD = pcm -acodec mp3float -fs 133632 -i $(SAMPLES)\/mp3-conformance\/hecommon.bit$/;"	m
CMD	tests/fate/mp3.mak	/^fate-mp3-float-conf-si: CMD = pcm -acodec mp3float -fs 269568 -i $(SAMPLES)\/mp3-conformance\/si.bit$/;"	m
CMD	tests/fate/mp3.mak	/^fate-mp3-float-conf-si_block: CMD = pcm -acodec mp3float -fs 145152 -i $(SAMPLES)\/mp3-conformance\/si_block.bit$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-10: CMD = pcm -i $(SAMPLES)\/vorbis\/lsp-test4_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-11: CMD = pcm -i $(SAMPLES)\/vorbis\/lsp-test_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-12: CMD = pcm -i $(SAMPLES)\/vorbis\/mono_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-13: CMD = pcm -i $(SAMPLES)\/vorbis\/moog_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-14: CMD = pcm -i $(SAMPLES)\/vorbis\/rc1-test_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-15: CMD = pcm -i $(SAMPLES)\/vorbis\/rc2-test2_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-16: CMD = pcm -i $(SAMPLES)\/vorbis\/rc2-test_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-17: CMD = pcm -i $(SAMPLES)\/vorbis\/rc3-test_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-18: CMD = pcm -i $(SAMPLES)\/vorbis\/sleepzor_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-19: CMD = pcm -i $(SAMPLES)\/vorbis\/test-short2_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-1: CMD = pcm -i $(SAMPLES)\/vorbis\/1.0.1-test_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-2: CMD = pcm -i $(SAMPLES)\/vorbis\/1.0-test_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-3: CMD = pcm -i $(SAMPLES)\/vorbis\/beta3-test_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-4: CMD = pcm -i $(SAMPLES)\/vorbis\/beta4-test_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-5: CMD = pcm -i $(SAMPLES)\/vorbis\/chain-test1_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-6: CMD = pcm -i $(SAMPLES)\/vorbis\/chain-test2_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-7: CMD = pcm -i $(SAMPLES)\/vorbis\/highrate-test_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-8: CMD = pcm -i $(SAMPLES)\/vorbis\/lsp-test2_small.ogg$/;"	m
CMD	tests/fate/vorbis.mak	/^fate-vorbis-9: CMD = pcm -i $(SAMPLES)\/vorbis\/lsp-test3_small.ogg$/;"	m
CMD	tests/fate2.mak	/^fate-ac3-2.0: CMD = pcm -i $(SAMPLES)\/ac3\/monsters_inc_2.0_192_small.ac3$/;"	m
CMD	tests/fate2.mak	/^fate-ac3-5.1: CMD = pcm -i $(SAMPLES)\/ac3\/monsters_inc_5.1_448_small.ac3$/;"	m
CMD	tests/fate2.mak	/^fate-amrnb-10k2: CMD = pcm -i $(SAMPLES)\/amrnb\/10.2k.amr$/;"	m
CMD	tests/fate2.mak	/^fate-amrnb-12k2: CMD = pcm -i $(SAMPLES)\/amrnb\/12.2k.amr$/;"	m
CMD	tests/fate2.mak	/^fate-amrnb-4k75: CMD = pcm -i $(SAMPLES)\/amrnb\/4.75k.amr$/;"	m
CMD	tests/fate2.mak	/^fate-amrnb-5k15: CMD = pcm -i $(SAMPLES)\/amrnb\/5.15k.amr$/;"	m
CMD	tests/fate2.mak	/^fate-amrnb-5k9: CMD = pcm -i $(SAMPLES)\/amrnb\/5.9k.amr$/;"	m
CMD	tests/fate2.mak	/^fate-amrnb-6k7: CMD = pcm -i $(SAMPLES)\/amrnb\/6.7k.amr$/;"	m
CMD	tests/fate2.mak	/^fate-amrnb-7k4: CMD = pcm -i $(SAMPLES)\/amrnb\/7.4k.amr$/;"	m
CMD	tests/fate2.mak	/^fate-amrnb-7k95: CMD = pcm -i $(SAMPLES)\/amrnb\/7.95k.amr$/;"	m
CMD	tests/fate2.mak	/^fate-amrwb-12k65: CMD = pcm -i $(SAMPLES)\/amrwb\/seed-12k65.awb$/;"	m
CMD	tests/fate2.mak	/^fate-amrwb-14k25: CMD = pcm -i $(SAMPLES)\/amrwb\/seed-14k25.awb$/;"	m
CMD	tests/fate2.mak	/^fate-amrwb-15k85: CMD = pcm -i $(SAMPLES)\/amrwb\/seed-15k85.awb$/;"	m
CMD	tests/fate2.mak	/^fate-amrwb-18k25: CMD = pcm -i $(SAMPLES)\/amrwb\/seed-18k25.awb$/;"	m
CMD	tests/fate2.mak	/^fate-amrwb-19k85: CMD = pcm -i $(SAMPLES)\/amrwb\/seed-19k85.awb$/;"	m
CMD	tests/fate2.mak	/^fate-amrwb-23k05: CMD = pcm -i $(SAMPLES)\/amrwb\/seed-23k05.awb$/;"	m
CMD	tests/fate2.mak	/^fate-amrwb-23k85-2: CMD = pcm -i $(SAMPLES)\/amrwb\/deus-23k85.awb$/;"	m
CMD	tests/fate2.mak	/^fate-amrwb-23k85: CMD = pcm -i $(SAMPLES)\/amrwb\/seed-23k85.awb$/;"	m
CMD	tests/fate2.mak	/^fate-amrwb-6k60: CMD = pcm -i $(SAMPLES)\/amrwb\/seed-6k60.awb$/;"	m
CMD	tests/fate2.mak	/^fate-amrwb-8k85: CMD = pcm -i $(SAMPLES)\/amrwb\/seed-8k85.awb$/;"	m
CMD	tests/fate2.mak	/^fate-ansi: CMD = framecrc -ar 44100 -i $(SAMPLES)\/ansi\/TRE-IOM5.ANS -pix_fmt rgb24$/;"	m
CMD	tests/fate2.mak	/^fate-atrac1: CMD = pcm -i $(SAMPLES)\/atrac1\/test_tones_small.aea$/;"	m
CMD	tests/fate2.mak	/^fate-atrac3-1: CMD = pcm -i $(SAMPLES)\/atrac3\/mc_sich_at3_066_small.wav$/;"	m
CMD	tests/fate2.mak	/^fate-atrac3-2: CMD = pcm -i $(SAMPLES)\/atrac3\/mc_sich_at3_105_small.wav$/;"	m
CMD	tests/fate2.mak	/^fate-atrac3-3: CMD = pcm -i $(SAMPLES)\/atrac3\/mc_sich_at3_132_small.wav$/;"	m
CMD	tests/fate2.mak	/^fate-binkaudio-dct: CMD = pcm -i $(SAMPLES)\/bink\/binkaudio_dct.bik$/;"	m
CMD	tests/fate2.mak	/^fate-binkaudio-rdft: CMD = pcm -i $(SAMPLES)\/bink\/binkaudio_rdft.bik$/;"	m
CMD	tests/fate2.mak	/^fate-dts: CMD = pcm -i $(SAMPLES)\/dts\/dts.ts$/;"	m
CMD	tests/fate2.mak	/^fate-dxa-scummvm: CMD = framecrc -i $(SAMPLES)\/dxa\/scummvm.dxa -pix_fmt rgb24$/;"	m
CMD	tests/fate2.mak	/^fate-eac3-1: CMD = pcm -i $(SAMPLES)\/eac3\/csi_miami_5.1_256_spx_small.eac3$/;"	m
CMD	tests/fate2.mak	/^fate-eac3-2: CMD = pcm -i $(SAMPLES)\/eac3\/csi_miami_stereo_128_spx_small.eac3$/;"	m
CMD	tests/fate2.mak	/^fate-eac3-3: CMD = pcm -i $(SAMPLES)\/eac3\/matrix2_commentary1_stereo_192_small.eac3$/;"	m
CMD	tests/fate2.mak	/^fate-eac3-4: CMD = pcm -i $(SAMPLES)\/eac3\/serenity_english_5.1_1536_small.eac3$/;"	m
CMD	tests/fate2.mak	/^fate-fax-g3: CMD = framecrc -i $(SAMPLES)\/CCITT_fax\/G31D.TIF$/;"	m
CMD	tests/fate2.mak	/^fate-fax-g3s: CMD = framecrc -i $(SAMPLES)\/CCITT_fax\/G31DS.TIF$/;"	m
CMD	tests/fate2.mak	/^fate-g722dec-1: CMD = framecrc -ar 16000 -i $(SAMPLES)\/g722\/conf-adminmenu-162.g722$/;"	m
CMD	tests/fate2.mak	/^fate-gsm-ms: CMD = framecrc -i $(SAMPLES)\/gsm\/ciao.wav$/;"	m
CMD	tests/fate2.mak	/^fate-gsm: CMD = framecrc -t 10 -i $(SAMPLES)\/gsm\/sample-gsm-8000.mov$/;"	m
CMD	tests/fate2.mak	/^fate-imc: CMD = pcm -i $(SAMPLES)\/imc\/imc.avi$/;"	m
CMD	tests/fate2.mak	/^fate-mjpegb: CMD = framecrc -idct simple -flags +bitexact -i $(SAMPLES)\/mjpegb\/mjpegb_part.mov -an$/;"	m
CMD	tests/fate2.mak	/^fate-mpeg2-field-enc: CMD = framecrc -flags +bitexact -dct fastint -idct simple -i $(SAMPLES)\/mpeg2\/mpeg2_field_encoding.ts -an$/;"	m
CMD	tests/fate2.mak	/^fate-msmpeg4v1: CMD = framecrc -flags +bitexact -dct fastint -idct simple -i $(SAMPLES)\/msmpeg4v1\/mpg4.avi -an$/;"	m
CMD	tests/fate2.mak	/^fate-musepack7: CMD = pcm -i $(SAMPLES)\/musepack\/inside-mp7.mpc$/;"	m
CMD	tests/fate2.mak	/^fate-nellymoser: CMD = pcm -i $(SAMPLES)\/nellymoser\/nellymoser.flv$/;"	m
CMD	tests/fate2.mak	/^fate-pictor: CMD = framecrc -i $(SAMPLES)\/pictor\/MFISH.PIC -pix_fmt rgb24 -an$/;"	m
CMD	tests/fate2.mak	/^fate-qcelp: CMD = pcm -i $(SAMPLES)\/qcp\/0036580847.QCP$/;"	m
CMD	tests/fate2.mak	/^fate-qdm2: CMD = pcm -i $(SAMPLES)\/qt-surge-suite\/surge-2-16-B-QDM2.mov$/;"	m
CMD	tests/fate2.mak	/^fate-ra-288: CMD = pcm -i $(SAMPLES)\/real\/ra_288.rm$/;"	m
CMD	tests/fate2.mak	/^fate-ra-cook: CMD = pcm -i $(SAMPLES)\/real\/ra_cook.rm$/;"	m
CMD	tests/fate2.mak	/^fate-rv30: CMD = framecrc -flags +bitexact -dct fastint -idct simple -i $(SAMPLES)\/real\/rv30.rm -an$/;"	m
CMD	tests/fate2.mak	/^fate-sha: CMD = run libavutil\/sha-test$/;"	m
CMD	tests/fate2.mak	/^fate-sipr-16k: CMD = pcm -i $(SAMPLES)\/sipr\/sipr_16k.rm$/;"	m
CMD	tests/fate2.mak	/^fate-sipr-5k0: CMD = pcm -i $(SAMPLES)\/sipr\/sipr_5k0.rm$/;"	m
CMD	tests/fate2.mak	/^fate-sipr-6k5: CMD = pcm -i $(SAMPLES)\/sipr\/sipr_6k5.rm$/;"	m
CMD	tests/fate2.mak	/^fate-sipr-8k5: CMD = pcm -i $(SAMPLES)\/sipr\/sipr_8k5.rm$/;"	m
CMD	tests/fate2.mak	/^fate-truespeech: CMD = pcm -i $(SAMPLES)\/truespeech\/a6.wav$/;"	m
CMD	tests/fate2.mak	/^fate-twinvq: CMD = pcm -i $(SAMPLES)\/vqf\/achterba.vqf$/;"	m
CMD	tests/fate2.mak	/^fate-txd-16bpp: CMD = framecrc -i $(SAMPLES)\/txd\/misc.txd -pix_fmt bgra -an$/;"	m
CMD	tests/fate2.mak	/^fate-txd-pal8: CMD = framecrc -i $(SAMPLES)\/txd\/outro.txd -pix_fmt rgb24 -an$/;"	m
CMD	tests/fate2.mak	/^fate-vp3: CMD = framecrc -i $(SAMPLES)\/vp3\/vp31.avi$/;"	m
CMD	tests/fate2.mak	/^fate-wmapro-2ch: CMD = pcm -i $(SAMPLES)\/wmapro\/Beethovens_9th-1_small.wma$/;"	m
CMD	tests/fate2.mak	/^fate-wmapro-5.1: CMD = pcm -i $(SAMPLES)\/wmapro\/latin_192_mulitchannel_cut.wma$/;"	m
CMD	tests/fate2.mak	/^fate-wmavoice-11k: CMD = pcm -i $(SAMPLES)\/wmavoice\/streaming_CBR-11K.wma$/;"	m
CMD	tests/fate2.mak	/^fate-wmavoice-19k: CMD = pcm -i $(SAMPLES)\/wmavoice\/streaming_CBR-19K.wma$/;"	m
CMD	tests/fate2.mak	/^fate-wmavoice-7k: CMD = pcm -i $(SAMPLES)\/wmavoice\/streaming_CBR-7K.wma$/;"	m
CMD	tests/fate2.mak	/^fate-wmv8-drm-nodec: CMD = framecrc -cryptokey 137381538c84c068111902a59c5cf6c340247c39 -i $(SAMPLES)\/wmv8\/wmv_drm.wmv -acodec copy -vcodec copy$/;"	m
CMD	tests/fate2.mak	/^fate-wmv8-drm: CMD = framecrc -cryptokey 137381538c84c068111902a59c5cf6c340247c39 -i $(SAMPLES)\/wmv8\/wmv_drm.wmv -an -vframes 162$/;"	m
CMD	tests/fate2.mak	/^fate-ws_snd: CMD = md5  -i $(SAMPLES)\/vqa\/ws_snd.vqa -f s16le$/;"	m
CMD	tests/fate2.mak	/^fate-yop: CMD = framecrc -i $(SAMPLES)\/yop\/test1.yop -pix_fmt rgb24 -an$/;"	m
CMDS_TAG	libavformat/westwood.c	59;"	d	file:
CMIXLEV_NUM_OPTIONS	libavcodec/ac3enc.c	53;"	d	file:
CMOV_ATOM	tools/qt-faststart.c	70;"	d	file:
CMP	tests/fate/aac.mak	/^$(FATE_AAC): CMP = oneoff$/;"	m
CMP	tests/fate/mp3.mak	/^$(FATE_MP3): CMP = stddev$/;"	m
CMP	tests/fate/mp3.mak	/^fate-mp3-float-conf-compl: CMP = stddev$/;"	m
CMP	tests/fate/mp3.mak	/^fate-mp3-float-conf-he_32khz: CMP = stddev$/;"	m
CMP	tests/fate/mp3.mak	/^fate-mp3-float-conf-he_44khz: CMP = stddev$/;"	m
CMP	tests/fate/mp3.mak	/^fate-mp3-float-conf-he_48khz: CMP = stddev$/;"	m
CMP	tests/fate/mp3.mak	/^fate-mp3-float-conf-hecommon: CMP = stddev$/;"	m
CMP	tests/fate/mp3.mak	/^fate-mp3-float-conf-si: CMP = stddev$/;"	m
CMP	tests/fate/mp3.mak	/^fate-mp3-float-conf-si_block: CMP = stddev$/;"	m
CMP	tests/fate/vorbis.mak	/^$(FATE_VORBIS): CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-ac3-2.0: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-ac3-5.1: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-amrnb-10k2: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrnb-12k2: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrnb-4k75: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrnb-5k15: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrnb-5k9: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrnb-6k7: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrnb-7k4: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrnb-7k95: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrwb-12k65: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrwb-14k25: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrwb-15k85: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrwb-18k25: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrwb-19k85: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrwb-23k05: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrwb-23k85-2: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrwb-23k85: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrwb-6k60: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-amrwb-8k85: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-atrac1: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-atrac3-1: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-atrac3-2: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-atrac3-3: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-binkaudio-dct: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-binkaudio-rdft: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-dts: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-eac3-1: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-eac3-2: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-eac3-3: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-eac3-4: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-imc: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-musepack7: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-nellymoser: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-qcelp: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-qdm2: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-ra-288: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-ra-cook: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-sipr-16k: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-sipr-5k0: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-sipr-6k5: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-sipr-8k5: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-truespeech: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-twinvq: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-wmapro-2ch: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-wmapro-5.1: CMP = oneoff$/;"	m
CMP	tests/fate2.mak	/^fate-wmavoice-11k: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-wmavoice-19k: CMP = stddev$/;"	m
CMP	tests/fate2.mak	/^fate-wmavoice-7k: CMP = stddev$/;"	m
CMUL	libavcodec/fft-internal.h	32;"	d
CMUL	libavcodec/fft-internal.h	59;"	d
CMUL	libavcodec/x86/fft_3dn2.c	106;"	d	file:
CMULA	libavcodec/ppc/fft_altivec.c	57;"	d	file:
CMULB	libavcodec/ppc/fft_altivec.c	100;"	d	file:
CMULL	libavcodec/fft-internal.h	62;"	d
CMULS	libavcodec/fft-internal.h	54;"	d
CN_SHIFT	libavcodec/simple_idct.c	403;"	d	file:
CN_SHIFT	libavcodec/simple_idct.c	481;"	d	file:
CN_SHIFT	libavcodec/simple_idct.c	486;"	d	file:
CO64_ATOM	tools/qt-faststart.c	72;"	d	file:
COBJMACROS	libavcodec/dxva2_internal.h	27;"	d
COBJMACROS	libavdevice/dshow.h	26;"	d
COCTET	libavcodec/smc.c	40;"	d	file:
CODEC_CAP_CHANNEL_CONF	libavcodec/avcodec.h	677;"	d
CODEC_CAP_DELAY	libavcodec/avcodec.h	647;"	d
CODEC_CAP_DR1	libavcodec/avcodec.h	637;"	d
CODEC_CAP_DRAW_HORIZ_BAND	libavcodec/avcodec.h	631;"	d
CODEC_CAP_EXPERIMENTAL	libavcodec/avcodec.h	673;"	d
CODEC_CAP_FRAME_THREADS	libavcodec/avcodec.h	687;"	d
CODEC_CAP_HWACCEL	libavcodec/avcodec.h	642;"	d
CODEC_CAP_HWACCEL_VDPAU	libavcodec/avcodec.h	656;"	d
CODEC_CAP_LOSSLESS	libavcodec/avcodec.h	695;"	d
CODEC_CAP_NEG_LINESIZES	libavcodec/avcodec.h	682;"	d
CODEC_CAP_PARSE_ONLY	libavcodec/avcodec.h	639;"	d
CODEC_CAP_SLICE_THREADS	libavcodec/avcodec.h	691;"	d
CODEC_CAP_SMALL_LAST_FRAME	libavcodec/avcodec.h	652;"	d
CODEC_CAP_SUBFRAMES	libavcodec/avcodec.h	668;"	d
CODEC_CAP_TRUNCATED	libavcodec/avcodec.h	640;"	d
CODEC_FLAG2_8X8DCT	libavcodec/avcodec.h	608;"	d
CODEC_FLAG2_AUD	libavcodec/avcodec.h	610;"	d
CODEC_FLAG2_BIT_RESERVOIR	libavcodec/avcodec.h	618;"	d
CODEC_FLAG2_BPYRAMID	libavcodec/avcodec.h	605;"	d
CODEC_FLAG2_BRDO	libavcodec/avcodec.h	611;"	d
CODEC_FLAG2_CHUNKS	libavcodec/avcodec.h	616;"	d
CODEC_FLAG2_DROP_FRAME_TIMECODE	libavcodec/avcodec.h	614;"	d
CODEC_FLAG2_FAST	libavcodec/avcodec.h	601;"	d
CODEC_FLAG2_FASTPSKIP	libavcodec/avcodec.h	609;"	d
CODEC_FLAG2_INTRA_REFRESH	libavcodec/avcodec.h	622;"	d
CODEC_FLAG2_INTRA_VLC	libavcodec/avcodec.h	612;"	d
CODEC_FLAG2_LOCAL_HEADER	libavcodec/avcodec.h	604;"	d
CODEC_FLAG2_MBTREE	libavcodec/avcodec.h	619;"	d
CODEC_FLAG2_MEMC_ONLY	libavcodec/avcodec.h	613;"	d
CODEC_FLAG2_MIXED_REFS	libavcodec/avcodec.h	607;"	d
CODEC_FLAG2_NON_LINEAR_QUANT	libavcodec/avcodec.h	617;"	d
CODEC_FLAG2_NO_OUTPUT	libavcodec/avcodec.h	603;"	d
CODEC_FLAG2_PSY	libavcodec/avcodec.h	620;"	d
CODEC_FLAG2_SKIP_RD	libavcodec/avcodec.h	615;"	d
CODEC_FLAG2_SSIM	libavcodec/avcodec.h	621;"	d
CODEC_FLAG2_STRICT_GOP	libavcodec/avcodec.h	602;"	d
CODEC_FLAG2_WPRED	libavcodec/avcodec.h	606;"	d
CODEC_FLAG_4MV	libavcodec/avcodec.h	564;"	d
CODEC_FLAG_AC_PRED	libavcodec/avcodec.h	590;"	d
CODEC_FLAG_ALT_SCAN	libavcodec/avcodec.h	586;"	d
CODEC_FLAG_BITEXACT	libavcodec/avcodec.h	588;"	d
CODEC_FLAG_CBP_RD	libavcodec/avcodec.h	592;"	d
CODEC_FLAG_CLOSED_GOP	libavcodec/avcodec.h	600;"	d
CODEC_FLAG_EMU_EDGE	libavcodec/avcodec.h	579;"	d
CODEC_FLAG_EXTERN_HUFF	libavcodec/avcodec.h	577;"	d
CODEC_FLAG_GLOBAL_HEADER	libavcodec/avcodec.h	587;"	d
CODEC_FLAG_GMC	libavcodec/avcodec.h	566;"	d
CODEC_FLAG_GRAY	libavcodec/avcodec.h	578;"	d
CODEC_FLAG_H263P_AIV	libavcodec/avcodec.h	594;"	d
CODEC_FLAG_H263P_SLICE_STRUCT	libavcodec/avcodec.h	597;"	d
CODEC_FLAG_H263P_UMV	libavcodec/avcodec.h	591;"	d
CODEC_FLAG_INPUT_PRESERVED	libavcodec/avcodec.h	574;"	d
CODEC_FLAG_INTERLACED_DCT	libavcodec/avcodec.h	584;"	d
CODEC_FLAG_INTERLACED_ME	libavcodec/avcodec.h	598;"	d
CODEC_FLAG_LOOP_FILTER	libavcodec/avcodec.h	596;"	d
CODEC_FLAG_LOW_DELAY	libavcodec/avcodec.h	585;"	d
CODEC_FLAG_MV0	libavcodec/avcodec.h	567;"	d
CODEC_FLAG_NORMALIZE_AQP	libavcodec/avcodec.h	583;"	d
CODEC_FLAG_OBMC	libavcodec/avcodec.h	595;"	d
CODEC_FLAG_PART	libavcodec/avcodec.h	568;"	d
CODEC_FLAG_PASS1	libavcodec/avcodec.h	575;"	d
CODEC_FLAG_PASS2	libavcodec/avcodec.h	576;"	d
CODEC_FLAG_PSNR	libavcodec/avcodec.h	580;"	d
CODEC_FLAG_QPEL	libavcodec/avcodec.h	565;"	d
CODEC_FLAG_QP_RD	libavcodec/avcodec.h	593;"	d
CODEC_FLAG_QSCALE	libavcodec/avcodec.h	563;"	d
CODEC_FLAG_SVCD_SCAN_OFFSET	libavcodec/avcodec.h	599;"	d
CODEC_FLAG_TRUNCATED	libavcodec/avcodec.h	581;"	d
CODEC_ID_4XM	libavcodec/avcodec.h	/^    CODEC_ID_4XM,$/;"	e	enum:CodecID
CODEC_ID_8BPS	libavcodec/avcodec.h	/^    CODEC_ID_8BPS,$/;"	e	enum:CodecID
CODEC_ID_8SVX_EXP	libavcodec/avcodec.h	/^    CODEC_ID_8SVX_EXP,$/;"	e	enum:CodecID
CODEC_ID_8SVX_FIB	libavcodec/avcodec.h	/^    CODEC_ID_8SVX_FIB,$/;"	e	enum:CodecID
CODEC_ID_8SVX_RAW	libavcodec/avcodec.h	/^    CODEC_ID_8SVX_RAW,$/;"	e	enum:CodecID
CODEC_ID_A64_MULTI	libavcodec/avcodec.h	/^    CODEC_ID_A64_MULTI,$/;"	e	enum:CodecID
CODEC_ID_A64_MULTI5	libavcodec/avcodec.h	/^    CODEC_ID_A64_MULTI5,$/;"	e	enum:CodecID
CODEC_ID_AAC	libavcodec/avcodec.h	/^    CODEC_ID_AAC,$/;"	e	enum:CodecID
CODEC_ID_AAC_LATM	libavcodec/avcodec.h	/^    CODEC_ID_AAC_LATM,$/;"	e	enum:CodecID
CODEC_ID_AASC	libavcodec/avcodec.h	/^    CODEC_ID_AASC,$/;"	e	enum:CodecID
CODEC_ID_AC3	libavcodec/avcodec.h	/^    CODEC_ID_AC3,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_4XM	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_4XM,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_ADX	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_ADX,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_CT	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_CT,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_EA	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_EA,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_EA_MAXIS_XA	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_EA_MAXIS_XA,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_EA_R1	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_EA_R1,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_EA_R2	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_EA_R2,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_EA_R3	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_EA_R3,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_EA_XAS	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_EA_XAS,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_G722	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_G722,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_G726	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_G726,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_AMV	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_AMV,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_DK3	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_DK3,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_DK4	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_DK4,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_EA_EACS	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_EA_EACS,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_EA_SEAD	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_EA_SEAD,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_ISS	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_ISS,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_QT	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_QT= 0x11000,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_SMJPEG	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_SMJPEG,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_WAV	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_WAV,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_IMA_WS	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_IMA_WS,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_MS	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_MS,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_SBPRO_2	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_SBPRO_2,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_SBPRO_3	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_SBPRO_3,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_SBPRO_4	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_SBPRO_4,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_SWF	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_SWF,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_THP	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_THP,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_XA	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_XA,$/;"	e	enum:CodecID
CODEC_ID_ADPCM_YAMAHA	libavcodec/avcodec.h	/^    CODEC_ID_ADPCM_YAMAHA,$/;"	e	enum:CodecID
CODEC_ID_ALAC	libavcodec/avcodec.h	/^    CODEC_ID_ALAC,$/;"	e	enum:CodecID
CODEC_ID_AMR_NB	libavcodec/avcodec.h	/^    CODEC_ID_AMR_NB= 0x12000,$/;"	e	enum:CodecID
CODEC_ID_AMR_WB	libavcodec/avcodec.h	/^    CODEC_ID_AMR_WB,$/;"	e	enum:CodecID
CODEC_ID_AMV	libavcodec/avcodec.h	/^    CODEC_ID_AMV,$/;"	e	enum:CodecID
CODEC_ID_ANM	libavcodec/avcodec.h	/^    CODEC_ID_ANM,$/;"	e	enum:CodecID
CODEC_ID_ANSI	libavcodec/avcodec.h	/^    CODEC_ID_ANSI,$/;"	e	enum:CodecID
CODEC_ID_APE	libavcodec/avcodec.h	/^    CODEC_ID_APE,$/;"	e	enum:CodecID
CODEC_ID_ASV1	libavcodec/avcodec.h	/^    CODEC_ID_ASV1,$/;"	e	enum:CodecID
CODEC_ID_ASV2	libavcodec/avcodec.h	/^    CODEC_ID_ASV2,$/;"	e	enum:CodecID
CODEC_ID_ATRAC1	libavcodec/avcodec.h	/^    CODEC_ID_ATRAC1,$/;"	e	enum:CodecID
CODEC_ID_ATRAC3	libavcodec/avcodec.h	/^    CODEC_ID_ATRAC3,$/;"	e	enum:CodecID
CODEC_ID_ATRAC3P	libavcodec/avcodec.h	/^    CODEC_ID_ATRAC3P,$/;"	e	enum:CodecID
CODEC_ID_AURA	libavcodec/avcodec.h	/^    CODEC_ID_AURA,$/;"	e	enum:CodecID
CODEC_ID_AURA2	libavcodec/avcodec.h	/^    CODEC_ID_AURA2,$/;"	e	enum:CodecID
CODEC_ID_AVS	libavcodec/avcodec.h	/^    CODEC_ID_AVS,$/;"	e	enum:CodecID
CODEC_ID_BETHSOFTVID	libavcodec/avcodec.h	/^    CODEC_ID_BETHSOFTVID,$/;"	e	enum:CodecID
CODEC_ID_BFI	libavcodec/avcodec.h	/^    CODEC_ID_BFI,$/;"	e	enum:CodecID
CODEC_ID_BINKAUDIO_DCT	libavcodec/avcodec.h	/^    CODEC_ID_BINKAUDIO_DCT,$/;"	e	enum:CodecID
CODEC_ID_BINKAUDIO_RDFT	libavcodec/avcodec.h	/^    CODEC_ID_BINKAUDIO_RDFT,$/;"	e	enum:CodecID
CODEC_ID_BINKVIDEO	libavcodec/avcodec.h	/^    CODEC_ID_BINKVIDEO,$/;"	e	enum:CodecID
CODEC_ID_BMP	libavcodec/avcodec.h	/^    CODEC_ID_BMP,$/;"	e	enum:CodecID
CODEC_ID_C93	libavcodec/avcodec.h	/^    CODEC_ID_C93,$/;"	e	enum:CodecID
CODEC_ID_CAVS	libavcodec/avcodec.h	/^    CODEC_ID_CAVS,$/;"	e	enum:CodecID
CODEC_ID_CDGRAPHICS	libavcodec/avcodec.h	/^    CODEC_ID_CDGRAPHICS,$/;"	e	enum:CodecID
CODEC_ID_CELT	libavcodec/avcodec.h	/^    CODEC_ID_CELT,$/;"	e	enum:CodecID
CODEC_ID_CINEPAK	libavcodec/avcodec.h	/^    CODEC_ID_CINEPAK,$/;"	e	enum:CodecID
CODEC_ID_CLJR	libavcodec/avcodec.h	/^    CODEC_ID_CLJR,$/;"	e	enum:CodecID
CODEC_ID_CMV	libavcodec/avcodec.h	/^    CODEC_ID_CMV,$/;"	e	enum:CodecID
CODEC_ID_COOK	libavcodec/avcodec.h	/^    CODEC_ID_COOK,$/;"	e	enum:CodecID
CODEC_ID_CSCD	libavcodec/avcodec.h	/^    CODEC_ID_CSCD,$/;"	e	enum:CodecID
CODEC_ID_CYUV	libavcodec/avcodec.h	/^    CODEC_ID_CYUV,$/;"	e	enum:CodecID
CODEC_ID_DFA	libavcodec/avcodec.h	/^    CODEC_ID_DFA,$/;"	e	enum:CodecID
CODEC_ID_DIRAC	libavcodec/avcodec.h	/^    CODEC_ID_DIRAC,$/;"	e	enum:CodecID
CODEC_ID_DNXHD	libavcodec/avcodec.h	/^    CODEC_ID_DNXHD,$/;"	e	enum:CodecID
CODEC_ID_DPX	libavcodec/avcodec.h	/^    CODEC_ID_DPX,$/;"	e	enum:CodecID
CODEC_ID_DSICINAUDIO	libavcodec/avcodec.h	/^    CODEC_ID_DSICINAUDIO,$/;"	e	enum:CodecID
CODEC_ID_DSICINVIDEO	libavcodec/avcodec.h	/^    CODEC_ID_DSICINVIDEO,$/;"	e	enum:CodecID
CODEC_ID_DTS	libavcodec/avcodec.h	/^    CODEC_ID_DTS,$/;"	e	enum:CodecID
CODEC_ID_DVAUDIO	libavcodec/avcodec.h	/^    CODEC_ID_DVAUDIO,$/;"	e	enum:CodecID
CODEC_ID_DVB_SUBTITLE	libavcodec/avcodec.h	/^    CODEC_ID_DVB_SUBTITLE,$/;"	e	enum:CodecID
CODEC_ID_DVB_TELETEXT	libavcodec/avcodec.h	/^    CODEC_ID_DVB_TELETEXT,$/;"	e	enum:CodecID
CODEC_ID_DVD_SUBTITLE	libavcodec/avcodec.h	/^    CODEC_ID_DVD_SUBTITLE= 0x17000,$/;"	e	enum:CodecID
CODEC_ID_DVVIDEO	libavcodec/avcodec.h	/^    CODEC_ID_DVVIDEO,$/;"	e	enum:CodecID
CODEC_ID_DXA	libavcodec/avcodec.h	/^    CODEC_ID_DXA,$/;"	e	enum:CodecID
CODEC_ID_EAC3	libavcodec/avcodec.h	/^    CODEC_ID_EAC3,$/;"	e	enum:CodecID
CODEC_ID_ESCAPE124	libavcodec/avcodec.h	/^    CODEC_ID_ESCAPE124,$/;"	e	enum:CodecID
CODEC_ID_FFH264	libavcodec/avcodec.h	/^    CODEC_ID_FFH264,$/;"	e	enum:CodecID
CODEC_ID_FFMETADATA	libavcodec/avcodec.h	/^    CODEC_ID_FFMETADATA=0x21000,   \/\/\/< Dummy codec for streams containing only metadata information.$/;"	e	enum:CodecID
CODEC_ID_FFV1	libavcodec/avcodec.h	/^    CODEC_ID_FFV1,$/;"	e	enum:CodecID
CODEC_ID_FFVHUFF	libavcodec/avcodec.h	/^    CODEC_ID_FFVHUFF,$/;"	e	enum:CodecID
CODEC_ID_FLAC	libavcodec/avcodec.h	/^    CODEC_ID_FLAC,$/;"	e	enum:CodecID
CODEC_ID_FLASHSV	libavcodec/avcodec.h	/^    CODEC_ID_FLASHSV,$/;"	e	enum:CodecID
CODEC_ID_FLASHSV2	libavcodec/avcodec.h	/^    CODEC_ID_FLASHSV2,$/;"	e	enum:CodecID
CODEC_ID_FLIC	libavcodec/avcodec.h	/^    CODEC_ID_FLIC,$/;"	e	enum:CodecID
CODEC_ID_FLV1	libavcodec/avcodec.h	/^    CODEC_ID_FLV1,$/;"	e	enum:CodecID
CODEC_ID_FRAPS	libavcodec/avcodec.h	/^    CODEC_ID_FRAPS,$/;"	e	enum:CodecID
CODEC_ID_FRWU	libavcodec/avcodec.h	/^    CODEC_ID_FRWU,$/;"	e	enum:CodecID
CODEC_ID_GIF	libavcodec/avcodec.h	/^    CODEC_ID_GIF,$/;"	e	enum:CodecID
CODEC_ID_GSM	libavcodec/avcodec.h	/^    CODEC_ID_GSM, \/\/\/< as in Berlin toast format$/;"	e	enum:CodecID
CODEC_ID_GSM_MS	libavcodec/avcodec.h	/^    CODEC_ID_GSM_MS, \/* as found in WAV *\/$/;"	e	enum:CodecID
CODEC_ID_H261	libavcodec/avcodec.h	/^    CODEC_ID_H261,$/;"	e	enum:CodecID
CODEC_ID_H263	libavcodec/avcodec.h	/^    CODEC_ID_H263,$/;"	e	enum:CodecID
CODEC_ID_H263I	libavcodec/avcodec.h	/^    CODEC_ID_H263I,$/;"	e	enum:CodecID
CODEC_ID_H263P	libavcodec/avcodec.h	/^    CODEC_ID_H263P,$/;"	e	enum:CodecID
CODEC_ID_H264	libavcodec/avcodec.h	/^    CODEC_ID_H264,$/;"	e	enum:CodecID
CODEC_ID_HDMV_PGS_SUBTITLE	libavcodec/avcodec.h	/^    CODEC_ID_HDMV_PGS_SUBTITLE,$/;"	e	enum:CodecID
CODEC_ID_HUFFYUV	libavcodec/avcodec.h	/^    CODEC_ID_HUFFYUV,$/;"	e	enum:CodecID
CODEC_ID_IDCIN	libavcodec/avcodec.h	/^    CODEC_ID_IDCIN,$/;"	e	enum:CodecID
CODEC_ID_IFF_BYTERUN1	libavcodec/avcodec.h	/^    CODEC_ID_IFF_BYTERUN1,$/;"	e	enum:CodecID
CODEC_ID_IFF_ILBM	libavcodec/avcodec.h	/^    CODEC_ID_IFF_ILBM,$/;"	e	enum:CodecID
CODEC_ID_IMC	libavcodec/avcodec.h	/^    CODEC_ID_IMC,$/;"	e	enum:CodecID
CODEC_ID_INDEO2	libavcodec/avcodec.h	/^    CODEC_ID_INDEO2,$/;"	e	enum:CodecID
CODEC_ID_INDEO3	libavcodec/avcodec.h	/^    CODEC_ID_INDEO3,$/;"	e	enum:CodecID
CODEC_ID_INDEO4	libavcodec/avcodec.h	/^    CODEC_ID_INDEO4,$/;"	e	enum:CodecID
CODEC_ID_INDEO5	libavcodec/avcodec.h	/^    CODEC_ID_INDEO5,$/;"	e	enum:CodecID
CODEC_ID_INTERPLAY_DPCM	libavcodec/avcodec.h	/^    CODEC_ID_INTERPLAY_DPCM,$/;"	e	enum:CodecID
CODEC_ID_INTERPLAY_VIDEO	libavcodec/avcodec.h	/^    CODEC_ID_INTERPLAY_VIDEO,$/;"	e	enum:CodecID
CODEC_ID_JPEG2000	libavcodec/avcodec.h	/^    CODEC_ID_JPEG2000,$/;"	e	enum:CodecID
CODEC_ID_JPEGLS	libavcodec/avcodec.h	/^    CODEC_ID_JPEGLS,$/;"	e	enum:CodecID
CODEC_ID_JV	libavcodec/avcodec.h	/^    CODEC_ID_JV,$/;"	e	enum:CodecID
CODEC_ID_KGV1	libavcodec/avcodec.h	/^    CODEC_ID_KGV1,$/;"	e	enum:CodecID
CODEC_ID_KMVC	libavcodec/avcodec.h	/^    CODEC_ID_KMVC,$/;"	e	enum:CodecID
CODEC_ID_LAGARITH	libavcodec/avcodec.h	/^    CODEC_ID_LAGARITH,$/;"	e	enum:CodecID
CODEC_ID_LJPEG	libavcodec/avcodec.h	/^    CODEC_ID_LJPEG,$/;"	e	enum:CodecID
CODEC_ID_LOCO	libavcodec/avcodec.h	/^    CODEC_ID_LOCO,$/;"	e	enum:CodecID
CODEC_ID_MACE3	libavcodec/avcodec.h	/^    CODEC_ID_MACE3,$/;"	e	enum:CodecID
CODEC_ID_MACE6	libavcodec/avcodec.h	/^    CODEC_ID_MACE6,$/;"	e	enum:CodecID
CODEC_ID_MAD	libavcodec/avcodec.h	/^    CODEC_ID_MAD,$/;"	e	enum:CodecID
CODEC_ID_MDEC	libavcodec/avcodec.h	/^    CODEC_ID_MDEC,$/;"	e	enum:CodecID
CODEC_ID_MICRODVD	libavcodec/avcodec.h	/^    CODEC_ID_MICRODVD,$/;"	e	enum:CodecID
CODEC_ID_MIMIC	libavcodec/avcodec.h	/^    CODEC_ID_MIMIC,$/;"	e	enum:CodecID
CODEC_ID_MJPEG	libavcodec/avcodec.h	/^    CODEC_ID_MJPEG,$/;"	e	enum:CodecID
CODEC_ID_MJPEGB	libavcodec/avcodec.h	/^    CODEC_ID_MJPEGB,$/;"	e	enum:CodecID
CODEC_ID_MLP	libavcodec/avcodec.h	/^    CODEC_ID_MLP,$/;"	e	enum:CodecID
CODEC_ID_MMVIDEO	libavcodec/avcodec.h	/^    CODEC_ID_MMVIDEO,$/;"	e	enum:CodecID
CODEC_ID_MOTIONPIXELS	libavcodec/avcodec.h	/^    CODEC_ID_MOTIONPIXELS,$/;"	e	enum:CodecID
CODEC_ID_MOV_TEXT	libavcodec/avcodec.h	/^    CODEC_ID_MOV_TEXT,$/;"	e	enum:CodecID
CODEC_ID_MP1	libavcodec/avcodec.h	/^    CODEC_ID_MP1,$/;"	e	enum:CodecID
CODEC_ID_MP2	libavcodec/avcodec.h	/^    CODEC_ID_MP2= 0x15000,$/;"	e	enum:CodecID
CODEC_ID_MP3	libavcodec/avcodec.h	/^    CODEC_ID_MP3, \/\/\/< preferred ID for decoding MPEG audio layer 1, 2 or 3$/;"	e	enum:CodecID
CODEC_ID_MP3ADU	libavcodec/avcodec.h	/^    CODEC_ID_MP3ADU,$/;"	e	enum:CodecID
CODEC_ID_MP3ON4	libavcodec/avcodec.h	/^    CODEC_ID_MP3ON4,$/;"	e	enum:CodecID
CODEC_ID_MP4ALS	libavcodec/avcodec.h	/^    CODEC_ID_MP4ALS,$/;"	e	enum:CodecID
CODEC_ID_MPEG1VIDEO	libavcodec/avcodec.h	/^    CODEC_ID_MPEG1VIDEO,$/;"	e	enum:CodecID
CODEC_ID_MPEG2TS	libavcodec/avcodec.h	/^    CODEC_ID_MPEG2TS= 0x20000, \/**< _FAKE_ codec to indicate a raw MPEG-2 TS$/;"	e	enum:CodecID
CODEC_ID_MPEG2VIDEO	libavcodec/avcodec.h	/^    CODEC_ID_MPEG2VIDEO, \/\/\/< preferred ID for MPEG-1\/2 video decoding$/;"	e	enum:CodecID
CODEC_ID_MPEG2VIDEO_XVMC	libavcodec/avcodec.h	/^    CODEC_ID_MPEG2VIDEO_XVMC,$/;"	e	enum:CodecID
CODEC_ID_MPEG4	libavcodec/avcodec.h	/^    CODEC_ID_MPEG4,$/;"	e	enum:CodecID
CODEC_ID_MSMPEG4V1	libavcodec/avcodec.h	/^    CODEC_ID_MSMPEG4V1,$/;"	e	enum:CodecID
CODEC_ID_MSMPEG4V2	libavcodec/avcodec.h	/^    CODEC_ID_MSMPEG4V2,$/;"	e	enum:CodecID
CODEC_ID_MSMPEG4V3	libavcodec/avcodec.h	/^    CODEC_ID_MSMPEG4V3,$/;"	e	enum:CodecID
CODEC_ID_MSRLE	libavcodec/avcodec.h	/^    CODEC_ID_MSRLE,$/;"	e	enum:CodecID
CODEC_ID_MSVIDEO1	libavcodec/avcodec.h	/^    CODEC_ID_MSVIDEO1,$/;"	e	enum:CodecID
CODEC_ID_MSZH	libavcodec/avcodec.h	/^    CODEC_ID_MSZH,$/;"	e	enum:CodecID
CODEC_ID_MUSEPACK7	libavcodec/avcodec.h	/^    CODEC_ID_MUSEPACK7,$/;"	e	enum:CodecID
CODEC_ID_MUSEPACK8	libavcodec/avcodec.h	/^    CODEC_ID_MUSEPACK8,$/;"	e	enum:CodecID
CODEC_ID_MXPEG	libavcodec/avcodec.h	/^    CODEC_ID_MXPEG,$/;"	e	enum:CodecID
CODEC_ID_NELLYMOSER	libavcodec/avcodec.h	/^    CODEC_ID_NELLYMOSER,$/;"	e	enum:CodecID
CODEC_ID_NONE	libavcodec/avcodec.h	/^    CODEC_ID_NONE,$/;"	e	enum:CodecID
CODEC_ID_NUV	libavcodec/avcodec.h	/^    CODEC_ID_NUV,$/;"	e	enum:CodecID
CODEC_ID_PAM	libavcodec/avcodec.h	/^    CODEC_ID_PAM,$/;"	e	enum:CodecID
CODEC_ID_PBM	libavcodec/avcodec.h	/^    CODEC_ID_PBM,$/;"	e	enum:CodecID
CODEC_ID_PCM_ALAW	libavcodec/avcodec.h	/^    CODEC_ID_PCM_ALAW,$/;"	e	enum:CodecID
CODEC_ID_PCM_BLURAY	libavcodec/avcodec.h	/^    CODEC_ID_PCM_BLURAY,$/;"	e	enum:CodecID
CODEC_ID_PCM_DVD	libavcodec/avcodec.h	/^    CODEC_ID_PCM_DVD,$/;"	e	enum:CodecID
CODEC_ID_PCM_F32BE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_F32BE,$/;"	e	enum:CodecID
CODEC_ID_PCM_F32LE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_F32LE,$/;"	e	enum:CodecID
CODEC_ID_PCM_F64BE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_F64BE,$/;"	e	enum:CodecID
CODEC_ID_PCM_F64LE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_F64LE,$/;"	e	enum:CodecID
CODEC_ID_PCM_LXF	libavcodec/avcodec.h	/^    CODEC_ID_PCM_LXF,$/;"	e	enum:CodecID
CODEC_ID_PCM_MULAW	libavcodec/avcodec.h	/^    CODEC_ID_PCM_MULAW,$/;"	e	enum:CodecID
CODEC_ID_PCM_S16BE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_S16BE,$/;"	e	enum:CodecID
CODEC_ID_PCM_S16LE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_S16LE= 0x10000,$/;"	e	enum:CodecID
CODEC_ID_PCM_S16LE_PLANAR	libavcodec/avcodec.h	/^    CODEC_ID_PCM_S16LE_PLANAR,$/;"	e	enum:CodecID
CODEC_ID_PCM_S24BE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_S24BE,$/;"	e	enum:CodecID
CODEC_ID_PCM_S24DAUD	libavcodec/avcodec.h	/^    CODEC_ID_PCM_S24DAUD,$/;"	e	enum:CodecID
CODEC_ID_PCM_S24LE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_S24LE,$/;"	e	enum:CodecID
CODEC_ID_PCM_S32BE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_S32BE,$/;"	e	enum:CodecID
CODEC_ID_PCM_S32LE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_S32LE,$/;"	e	enum:CodecID
CODEC_ID_PCM_S8	libavcodec/avcodec.h	/^    CODEC_ID_PCM_S8,$/;"	e	enum:CodecID
CODEC_ID_PCM_U16BE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_U16BE,$/;"	e	enum:CodecID
CODEC_ID_PCM_U16LE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_U16LE,$/;"	e	enum:CodecID
CODEC_ID_PCM_U24BE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_U24BE,$/;"	e	enum:CodecID
CODEC_ID_PCM_U24LE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_U24LE,$/;"	e	enum:CodecID
CODEC_ID_PCM_U32BE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_U32BE,$/;"	e	enum:CodecID
CODEC_ID_PCM_U32LE	libavcodec/avcodec.h	/^    CODEC_ID_PCM_U32LE,$/;"	e	enum:CodecID
CODEC_ID_PCM_U8	libavcodec/avcodec.h	/^    CODEC_ID_PCM_U8,$/;"	e	enum:CodecID
CODEC_ID_PCM_ZORK	libavcodec/avcodec.h	/^    CODEC_ID_PCM_ZORK,$/;"	e	enum:CodecID
CODEC_ID_PCX	libavcodec/avcodec.h	/^    CODEC_ID_PCX,$/;"	e	enum:CodecID
CODEC_ID_PGM	libavcodec/avcodec.h	/^    CODEC_ID_PGM,$/;"	e	enum:CodecID
CODEC_ID_PGMYUV	libavcodec/avcodec.h	/^    CODEC_ID_PGMYUV,$/;"	e	enum:CodecID
CODEC_ID_PICTOR	libavcodec/avcodec.h	/^    CODEC_ID_PICTOR,$/;"	e	enum:CodecID
CODEC_ID_PNG	libavcodec/avcodec.h	/^    CODEC_ID_PNG,$/;"	e	enum:CodecID
CODEC_ID_PPM	libavcodec/avcodec.h	/^    CODEC_ID_PPM,$/;"	e	enum:CodecID
CODEC_ID_PROBE	libavcodec/avcodec.h	/^    CODEC_ID_PROBE= 0x19000, \/\/\/< codec_id is not known (like CODEC_ID_NONE) but lavf should attempt to identify it$/;"	e	enum:CodecID
CODEC_ID_PRORES	libavcodec/avcodec.h	/^    CODEC_ID_PRORES,$/;"	e	enum:CodecID
CODEC_ID_PTX	libavcodec/avcodec.h	/^    CODEC_ID_PTX,$/;"	e	enum:CodecID
CODEC_ID_QCELP	libavcodec/avcodec.h	/^    CODEC_ID_QCELP,$/;"	e	enum:CodecID
CODEC_ID_QDM2	libavcodec/avcodec.h	/^    CODEC_ID_QDM2,$/;"	e	enum:CodecID
CODEC_ID_QDMC	libavcodec/avcodec.h	/^    CODEC_ID_QDMC,$/;"	e	enum:CodecID
CODEC_ID_QDRAW	libavcodec/avcodec.h	/^    CODEC_ID_QDRAW,$/;"	e	enum:CodecID
CODEC_ID_QPEG	libavcodec/avcodec.h	/^    CODEC_ID_QPEG,$/;"	e	enum:CodecID
CODEC_ID_QTRLE	libavcodec/avcodec.h	/^    CODEC_ID_QTRLE,$/;"	e	enum:CodecID
CODEC_ID_R10K	libavcodec/avcodec.h	/^    CODEC_ID_R10K,$/;"	e	enum:CodecID
CODEC_ID_R210	libavcodec/avcodec.h	/^    CODEC_ID_R210,$/;"	e	enum:CodecID
CODEC_ID_RAWVIDEO	libavcodec/avcodec.h	/^    CODEC_ID_RAWVIDEO,$/;"	e	enum:CodecID
CODEC_ID_RA_144	libavcodec/avcodec.h	/^    CODEC_ID_RA_144= 0x13000,$/;"	e	enum:CodecID
CODEC_ID_RA_288	libavcodec/avcodec.h	/^    CODEC_ID_RA_288,$/;"	e	enum:CodecID
CODEC_ID_RL2	libavcodec/avcodec.h	/^    CODEC_ID_RL2,$/;"	e	enum:CodecID
CODEC_ID_ROQ	libavcodec/avcodec.h	/^    CODEC_ID_ROQ,$/;"	e	enum:CodecID
CODEC_ID_ROQ_DPCM	libavcodec/avcodec.h	/^    CODEC_ID_ROQ_DPCM= 0x14000,$/;"	e	enum:CodecID
CODEC_ID_RPZA	libavcodec/avcodec.h	/^    CODEC_ID_RPZA,$/;"	e	enum:CodecID
CODEC_ID_RV10	libavcodec/avcodec.h	/^    CODEC_ID_RV10,$/;"	e	enum:CodecID
CODEC_ID_RV20	libavcodec/avcodec.h	/^    CODEC_ID_RV20,$/;"	e	enum:CodecID
CODEC_ID_RV30	libavcodec/avcodec.h	/^    CODEC_ID_RV30,$/;"	e	enum:CodecID
CODEC_ID_RV40	libavcodec/avcodec.h	/^    CODEC_ID_RV40,$/;"	e	enum:CodecID
CODEC_ID_S302M	libavcodec/avcodec.h	/^    CODEC_ID_S302M,$/;"	e	enum:CodecID
CODEC_ID_SGI	libavcodec/avcodec.h	/^    CODEC_ID_SGI,$/;"	e	enum:CodecID
CODEC_ID_SHORTEN	libavcodec/avcodec.h	/^    CODEC_ID_SHORTEN,$/;"	e	enum:CodecID
CODEC_ID_SIPR	libavcodec/avcodec.h	/^    CODEC_ID_SIPR,$/;"	e	enum:CodecID
CODEC_ID_SMACKAUDIO	libavcodec/avcodec.h	/^    CODEC_ID_SMACKAUDIO,$/;"	e	enum:CodecID
CODEC_ID_SMACKVIDEO	libavcodec/avcodec.h	/^    CODEC_ID_SMACKVIDEO,$/;"	e	enum:CodecID
CODEC_ID_SMC	libavcodec/avcodec.h	/^    CODEC_ID_SMC,$/;"	e	enum:CodecID
CODEC_ID_SNOW	libavcodec/avcodec.h	/^    CODEC_ID_SNOW,$/;"	e	enum:CodecID
CODEC_ID_SOL_DPCM	libavcodec/avcodec.h	/^    CODEC_ID_SOL_DPCM,$/;"	e	enum:CodecID
CODEC_ID_SONIC	libavcodec/avcodec.h	/^    CODEC_ID_SONIC,$/;"	e	enum:CodecID
CODEC_ID_SONIC_LS	libavcodec/avcodec.h	/^    CODEC_ID_SONIC_LS,$/;"	e	enum:CodecID
CODEC_ID_SP5X	libavcodec/avcodec.h	/^    CODEC_ID_SP5X,$/;"	e	enum:CodecID
CODEC_ID_SPEEX	libavcodec/avcodec.h	/^    CODEC_ID_SPEEX,$/;"	e	enum:CodecID
CODEC_ID_SRT	libavcodec/avcodec.h	/^    CODEC_ID_SRT,$/;"	e	enum:CodecID
CODEC_ID_SSA	libavcodec/avcodec.h	/^    CODEC_ID_SSA,$/;"	e	enum:CodecID
CODEC_ID_SUNRAST	libavcodec/avcodec.h	/^    CODEC_ID_SUNRAST,$/;"	e	enum:CodecID
CODEC_ID_SVQ1	libavcodec/avcodec.h	/^    CODEC_ID_SVQ1,$/;"	e	enum:CodecID
CODEC_ID_SVQ3	libavcodec/avcodec.h	/^    CODEC_ID_SVQ3,$/;"	e	enum:CodecID
CODEC_ID_TARGA	libavcodec/avcodec.h	/^    CODEC_ID_TARGA,$/;"	e	enum:CodecID
CODEC_ID_TEXT	libavcodec/avcodec.h	/^    CODEC_ID_TEXT,  \/\/\/< raw UTF-8 text$/;"	e	enum:CodecID
CODEC_ID_TGQ	libavcodec/avcodec.h	/^    CODEC_ID_TGQ,$/;"	e	enum:CodecID
CODEC_ID_TGV	libavcodec/avcodec.h	/^    CODEC_ID_TGV,$/;"	e	enum:CodecID
CODEC_ID_THEORA	libavcodec/avcodec.h	/^    CODEC_ID_THEORA,$/;"	e	enum:CodecID
CODEC_ID_THP	libavcodec/avcodec.h	/^    CODEC_ID_THP,$/;"	e	enum:CodecID
CODEC_ID_TIERTEXSEQVIDEO	libavcodec/avcodec.h	/^    CODEC_ID_TIERTEXSEQVIDEO,$/;"	e	enum:CodecID
CODEC_ID_TIFF	libavcodec/avcodec.h	/^    CODEC_ID_TIFF,$/;"	e	enum:CodecID
CODEC_ID_TMV	libavcodec/avcodec.h	/^    CODEC_ID_TMV,$/;"	e	enum:CodecID
CODEC_ID_TQI	libavcodec/avcodec.h	/^    CODEC_ID_TQI,$/;"	e	enum:CodecID
CODEC_ID_TRUEHD	libavcodec/avcodec.h	/^    CODEC_ID_TRUEHD,$/;"	e	enum:CodecID
CODEC_ID_TRUEMOTION1	libavcodec/avcodec.h	/^    CODEC_ID_TRUEMOTION1,$/;"	e	enum:CodecID
CODEC_ID_TRUEMOTION2	libavcodec/avcodec.h	/^    CODEC_ID_TRUEMOTION2,$/;"	e	enum:CodecID
CODEC_ID_TRUESPEECH	libavcodec/avcodec.h	/^    CODEC_ID_TRUESPEECH,$/;"	e	enum:CodecID
CODEC_ID_TSCC	libavcodec/avcodec.h	/^    CODEC_ID_TSCC,$/;"	e	enum:CodecID
CODEC_ID_TTA	libavcodec/avcodec.h	/^    CODEC_ID_TTA,$/;"	e	enum:CodecID
CODEC_ID_TTF	libavcodec/avcodec.h	/^    CODEC_ID_TTF= 0x18000,$/;"	e	enum:CodecID
CODEC_ID_TWINVQ	libavcodec/avcodec.h	/^    CODEC_ID_TWINVQ,$/;"	e	enum:CodecID
CODEC_ID_TXD	libavcodec/avcodec.h	/^    CODEC_ID_TXD,$/;"	e	enum:CodecID
CODEC_ID_ULTI	libavcodec/avcodec.h	/^    CODEC_ID_ULTI,$/;"	e	enum:CodecID
CODEC_ID_V210	libavcodec/avcodec.h	/^    CODEC_ID_V210,$/;"	e	enum:CodecID
CODEC_ID_V210X	libavcodec/avcodec.h	/^    CODEC_ID_V210X,$/;"	e	enum:CodecID
CODEC_ID_VB	libavcodec/avcodec.h	/^    CODEC_ID_VB,$/;"	e	enum:CodecID
CODEC_ID_VC1	libavcodec/avcodec.h	/^    CODEC_ID_VC1,$/;"	e	enum:CodecID
CODEC_ID_VCR1	libavcodec/avcodec.h	/^    CODEC_ID_VCR1,$/;"	e	enum:CodecID
CODEC_ID_VIXL	libavcodec/avcodec.h	/^    CODEC_ID_VIXL,$/;"	e	enum:CodecID
CODEC_ID_VMDAUDIO	libavcodec/avcodec.h	/^    CODEC_ID_VMDAUDIO,$/;"	e	enum:CodecID
CODEC_ID_VMDVIDEO	libavcodec/avcodec.h	/^    CODEC_ID_VMDVIDEO,$/;"	e	enum:CodecID
CODEC_ID_VMNC	libavcodec/avcodec.h	/^    CODEC_ID_VMNC,$/;"	e	enum:CodecID
CODEC_ID_VORBIS	libavcodec/avcodec.h	/^    CODEC_ID_VORBIS,$/;"	e	enum:CodecID
CODEC_ID_VOXWARE	libavcodec/avcodec.h	/^    CODEC_ID_VOXWARE,$/;"	e	enum:CodecID
CODEC_ID_VP3	libavcodec/avcodec.h	/^    CODEC_ID_VP3,$/;"	e	enum:CodecID
CODEC_ID_VP5	libavcodec/avcodec.h	/^    CODEC_ID_VP5,$/;"	e	enum:CodecID
CODEC_ID_VP6	libavcodec/avcodec.h	/^    CODEC_ID_VP6,$/;"	e	enum:CodecID
CODEC_ID_VP6A	libavcodec/avcodec.h	/^    CODEC_ID_VP6A,$/;"	e	enum:CodecID
CODEC_ID_VP6F	libavcodec/avcodec.h	/^    CODEC_ID_VP6F,$/;"	e	enum:CodecID
CODEC_ID_VP8	libavcodec/avcodec.h	/^    CODEC_ID_VP8,$/;"	e	enum:CodecID
CODEC_ID_WAVPACK	libavcodec/avcodec.h	/^    CODEC_ID_WAVPACK,$/;"	e	enum:CodecID
CODEC_ID_WESTWOOD_SND1	libavcodec/avcodec.h	/^    CODEC_ID_WESTWOOD_SND1,$/;"	e	enum:CodecID
CODEC_ID_WMALOSSLESS	libavcodec/avcodec.h	/^    CODEC_ID_WMALOSSLESS,$/;"	e	enum:CodecID
CODEC_ID_WMAPRO	libavcodec/avcodec.h	/^    CODEC_ID_WMAPRO,$/;"	e	enum:CodecID
CODEC_ID_WMAV1	libavcodec/avcodec.h	/^    CODEC_ID_WMAV1,$/;"	e	enum:CodecID
CODEC_ID_WMAV2	libavcodec/avcodec.h	/^    CODEC_ID_WMAV2,$/;"	e	enum:CodecID
CODEC_ID_WMAVOICE	libavcodec/avcodec.h	/^    CODEC_ID_WMAVOICE,$/;"	e	enum:CodecID
CODEC_ID_WMV1	libavcodec/avcodec.h	/^    CODEC_ID_WMV1,$/;"	e	enum:CodecID
CODEC_ID_WMV2	libavcodec/avcodec.h	/^    CODEC_ID_WMV2,$/;"	e	enum:CodecID
CODEC_ID_WMV3	libavcodec/avcodec.h	/^    CODEC_ID_WMV3,$/;"	e	enum:CodecID
CODEC_ID_WNV1	libavcodec/avcodec.h	/^    CODEC_ID_WNV1,$/;"	e	enum:CodecID
CODEC_ID_WS_VQA	libavcodec/avcodec.h	/^    CODEC_ID_WS_VQA,$/;"	e	enum:CodecID
CODEC_ID_XAN_DPCM	libavcodec/avcodec.h	/^    CODEC_ID_XAN_DPCM,$/;"	e	enum:CodecID
CODEC_ID_XAN_WC3	libavcodec/avcodec.h	/^    CODEC_ID_XAN_WC3,$/;"	e	enum:CodecID
CODEC_ID_XAN_WC4	libavcodec/avcodec.h	/^    CODEC_ID_XAN_WC4,$/;"	e	enum:CodecID
CODEC_ID_XSUB	libavcodec/avcodec.h	/^    CODEC_ID_XSUB,$/;"	e	enum:CodecID
CODEC_ID_YOP	libavcodec/avcodec.h	/^    CODEC_ID_YOP,$/;"	e	enum:CodecID
CODEC_ID_ZLIB	libavcodec/avcodec.h	/^    CODEC_ID_ZLIB,$/;"	e	enum:CodecID
CODEC_ID_ZMBV	libavcodec/avcodec.h	/^    CODEC_ID_ZMBV,$/;"	e	enum:CodecID
CODEC_MSZH	libavcodec/lcl.h	46;"	d
CODEC_ZLIB	libavcodec/lcl.h	47;"	d
CODE_BITS	libavcodec/apedec.c	229;"	d	file:
CODE_VLC_BITS	libavcodec/indeo2.c	39;"	d	file:
CODE_VLC_BITS	libavcodec/wnv1.c	46;"	d	file:
CODING_MODE_COUNT	libavcodec/vp3.c	74;"	d	file:
COEFFS	libavcodec/imc.c	51;"	d	file:
COEFF_0	libavcodec/eac3dec.c	156;"	d	file:
COEFF_1	libavcodec/eac3dec.c	159;"	d	file:
COEFF_2	libavcodec/eac3dec.c	162;"	d	file:
COEFF_BITS	libavfilter/libmpcodecs/vf_perspective.c	41;"	d	file:
COEFF_LEN	libswscale/bfin/internal_bfin.S	/^#define COEFF_LEN        11*4$/;"	d
COEFF_REL_CY_OFF	libswscale/bfin/internal_bfin.S	/^#define COEFF_REL_CY_OFF 4*4$/;"	d
COEFF_TOKEN_VLC_BITS	libavcodec/h264.h	43;"	d
COEFF_VLC_SIZE	libavcodec/rv34vlc.h	39;"	d
COLOR	libavcodec/mpegvideo.c	1501;"	d	file:
COLORSPACE_15_7	libavcodec/flashsv2enc.c	58;"	d	file:
COLORSPACE_BGR	libavcodec/flashsv2enc.c	57;"	d	file:
COLORS_PER_TABLE	libavcodec/smc.c	42;"	d	file:
COL_SHIFT	libavcodec/alpha/simple_idct_alpha.c	44;"	d	file:
COL_SHIFT	libavcodec/arm/simple_idct_arm.S	/^#define COL_SHIFT 20$/;"	d
COL_SHIFT	libavcodec/arm/simple_idct_armv5te.S	/^#define COL_SHIFT 20$/;"	d
COL_SHIFT	libavcodec/arm/simple_idct_armv6.S	/^#define COL_SHIFT 20$/;"	d
COL_SHIFT	libavcodec/arm/simple_idct_neon.S	/^#define COL_SHIFT 20$/;"	d
COL_SHIFT	libavcodec/simple_idct.c	56;"	d	file:
COL_SHIFT	libavcodec/x86/idct_mmx.c	30;"	d	file:
COL_SHIFT	libavcodec/x86/idct_mmx.c	588;"	d	file:
COL_SHIFT	libavcodec/x86/idct_sse2_xvid.c	54;"	d	file:
COL_SHIFT	libavcodec/x86/simple_idct_mmx.c	50;"	d	file:
COL_SHIFTED_1	libavcodec/arm/simple_idct_arm.S	/^#define COL_SHIFTED_1 524288 \/* 1<< (COL_SHIFT-1) *\/$/;"	d
COM	libavcodec/mjpeg.h	/^    COM   = 0xfe,       \/* comment *\/$/;"	e	enum:__anon218
COMMON_CHANNEL_MAP	libavcodec/ac3tab.c	98;"	d	file:
COMPARABLE	libavfilter/libmpcodecs/vf_detc.c	51;"	d	file:
COMPARE	libpostproc/postprocess_altivec_template.c	618;"	d	file:
COMPARE	libpostproc/postprocess_altivec_template.c	645;"	d	file:
COMPATIBLE_FRAME	libavcodec/vp3.c	1071;"	d	file:
COMPE	libavfilter/libmpcodecs/vf_detc.c	50;"	d	file:
COMPENSATE	libavcodec/ivi_dsp.c	239;"	d	file:
COMPENSATE	libavcodec/ivi_dsp.c	253;"	d	file:
COMPENSATE	libavcodec/ivi_dsp.c	255;"	d	file:
COMPENSATE	libavcodec/ivi_dsp.c	268;"	d	file:
COMPENSATE	libavcodec/ivi_dsp.c	279;"	d	file:
COMPENSATE	libavcodec/ivi_dsp.c	293;"	d	file:
COMPENSATE	libavcodec/ivi_dsp.c	295;"	d	file:
COMPENSATE	libavcodec/ivi_dsp.c	308;"	d	file:
COMPENSATE	libavcodec/ivi_dsp.c	329;"	d	file:
COMPENSATE	libavcodec/ivi_dsp.c	341;"	d	file:
COMPENSATE	libavcodec/ivi_dsp.c	371;"	d	file:
COMPENSATE	libavcodec/ivi_dsp.c	386;"	d	file:
COMPILE_3DNOW	libpostproc/postprocess.c	588;"	d	file:
COMPILE_ALTIVEC	libpostproc/postprocess.c	574;"	d	file:
COMPILE_C	libpostproc/postprocess.c	570;"	d	file:
COMPILE_MMX	libpostproc/postprocess.c	580;"	d	file:
COMPILE_MMX2	libpostproc/postprocess.c	584;"	d	file:
COMPILE_TEMPLATE_AMD3DNOW	libswscale/x86/rgb2rgb.c	112;"	d	file:
COMPILE_TEMPLATE_AMD3DNOW	libswscale/x86/rgb2rgb.c	115;"	d	file:
COMPILE_TEMPLATE_AMD3DNOW	libswscale/x86/rgb2rgb.c	86;"	d	file:
COMPILE_TEMPLATE_MMX2	libswscale/x86/rgb2rgb.c	110;"	d	file:
COMPILE_TEMPLATE_MMX2	libswscale/x86/rgb2rgb.c	113;"	d	file:
COMPILE_TEMPLATE_MMX2	libswscale/x86/rgb2rgb.c	85;"	d	file:
COMPILE_TEMPLATE_MMX2	libswscale/x86/rgb2rgb.c	96;"	d	file:
COMPILE_TEMPLATE_MMX2	libswscale/x86/rgb2rgb.c	97;"	d	file:
COMPILE_TEMPLATE_MMX2	libswscale/x86/swscale_mmx.c	87;"	d	file:
COMPILE_TEMPLATE_MMX2	libswscale/x86/swscale_mmx.c	95;"	d	file:
COMPILE_TEMPLATE_MMX2	libswscale/x86/swscale_mmx.c	96;"	d	file:
COMPILE_TEMPLATE_MMX2	libswscale/x86/yuv2rgb_mmx.c	52;"	d	file:
COMPILE_TEMPLATE_MMX2	libswscale/x86/yuv2rgb_mmx.c	53;"	d	file:
COMPILE_TEMPLATE_MMX2	libswscale/x86/yuv2rgb_mmx.c	61;"	d	file:
COMPILE_TEMPLATE_MMX2	libswscale/x86/yuv2rgb_mmx.c	62;"	d	file:
COMPILE_TEMPLATE_SSE	libavfilter/x86/yadif.c	30;"	d	file:
COMPILE_TEMPLATE_SSE	libavfilter/x86/yadif.c	42;"	d	file:
COMPILE_TEMPLATE_SSE2	libswscale/x86/rgb2rgb.c	103;"	d	file:
COMPILE_TEMPLATE_SSE2	libswscale/x86/rgb2rgb.c	104;"	d	file:
COMPILE_TEMPLATE_SSE2	libswscale/x86/rgb2rgb.c	111;"	d	file:
COMPILE_TEMPLATE_SSE2	libswscale/x86/rgb2rgb.c	114;"	d	file:
COMPILE_TEMPLATE_SSE2	libswscale/x86/rgb2rgb.c	87;"	d	file:
COMPILE_TEMPLATE_SSSE3	libavfilter/x86/yadif.c	31;"	d	file:
COMPILE_TEMPLATE_SSSE3	libavfilter/x86/yadif.c	35;"	d	file:
COMPRESSION_LEVEL_EXTRA_HIGH	libavcodec/apedec.c	/^    COMPRESSION_LEVEL_EXTRA_HIGH = 4000,$/;"	e	enum:APECompressionLevel	file:
COMPRESSION_LEVEL_FAST	libavcodec/apedec.c	/^    COMPRESSION_LEVEL_FAST       = 1000,$/;"	e	enum:APECompressionLevel	file:
COMPRESSION_LEVEL_HIGH	libavcodec/apedec.c	/^    COMPRESSION_LEVEL_HIGH       = 3000,$/;"	e	enum:APECompressionLevel	file:
COMPRESSION_LEVEL_INSANE	libavcodec/apedec.c	/^    COMPRESSION_LEVEL_INSANE     = 5000$/;"	e	enum:APECompressionLevel	file:
COMPRESSION_LEVEL_NORMAL	libavcodec/apedec.c	/^    COMPRESSION_LEVEL_NORMAL     = 2000,$/;"	e	enum:APECompressionLevel	file:
COMPUTE_VR	libpostproc/postprocess_altivec_template.c	337;"	d	file:
COMP_EXP	libavformat/iff.c	/^    COMP_EXP$/;"	e	enum:__anon393	file:
COMP_FIB	libavformat/iff.c	/^    COMP_FIB,$/;"	e	enum:__anon393	file:
COMP_MSZH	libavcodec/lcl.h	35;"	d
COMP_MSZH_NOCOMP	libavcodec/lcl.h	36;"	d
COMP_NONE	libavformat/iff.c	/^    COMP_NONE,$/;"	e	enum:__anon393	file:
COMP_ZLIB_HICOMP	libavcodec/lcl.h	38;"	d
COMP_ZLIB_HISPEED	libavcodec/lcl.h	37;"	d
COMP_ZLIB_NORMAL	libavcodec/lcl.h	39;"	d
CONDOVER_ALL	libavcodec/vc1.h	/^    CONDOVER_ALL,$/;"	e	enum:COTypes
CONDOVER_NONE	libavcodec/vc1.h	/^    CONDOVER_NONE = 0,$/;"	e	enum:COTypes
CONDOVER_SELECT	libavcodec/vc1.h	/^    CONDOVER_SELECT$/;"	e	enum:COTypes
CONFIG_A64MULTI5_ENCODER	config.h	545;"	d
CONFIG_A64MULTI5_ENCODER	config.mak	/^CONFIG_A64MULTI5_ENCODER=yes$/;"	m
CONFIG_A64MULTI_ENCODER	config.h	544;"	d
CONFIG_A64MULTI_ENCODER	config.mak	/^CONFIG_A64MULTI_ENCODER=yes$/;"	m
CONFIG_A64_MUXER	config.h	861;"	d
CONFIG_A64_MUXER	config.mak	/^CONFIG_A64_MUXER=yes$/;"	m
CONFIG_AAC_ADTSTOASC_BSF	config.h	696;"	d
CONFIG_AAC_ADTSTOASC_BSF	config.mak	/^CONFIG_AAC_ADTSTOASC_BSF=yes$/;"	m
CONFIG_AAC_DECODER	config.h	413;"	d
CONFIG_AAC_DECODER	config.mak	/^CONFIG_AAC_DECODER=yes$/;"	m
CONFIG_AAC_DEMUXER	config.h	709;"	d
CONFIG_AAC_DEMUXER	config.mak	/^CONFIG_AAC_DEMUXER=yes$/;"	m
CONFIG_AAC_ENCODER	config.h	593;"	d
CONFIG_AAC_ENCODER	config.mak	/^CONFIG_AAC_ENCODER=yes$/;"	m
CONFIG_AAC_LATM_DECODER	config.h	414;"	d
CONFIG_AAC_LATM_DECODER	config.mak	/^CONFIG_AAC_LATM_DECODER=yes$/;"	m
CONFIG_AAC_LATM_PARSER	config.h	675;"	d
CONFIG_AAC_LATM_PARSER	config.mak	/^CONFIG_AAC_LATM_PARSER=yes$/;"	m
CONFIG_AAC_PARSER	config.h	674;"	d
CONFIG_AAC_PARSER	config.mak	/^CONFIG_AAC_PARSER=yes$/;"	m
CONFIG_AANDCT	config.h	172;"	d
CONFIG_AANDCT	config.mak	/^CONFIG_AANDCT=yes$/;"	m
CONFIG_AASC_DECODER	config.h	252;"	d
CONFIG_AASC_DECODER	config.mak	/^CONFIG_AASC_DECODER=yes$/;"	m
CONFIG_AC3DSP	config.h	173;"	d
CONFIG_AC3DSP	config.mak	/^CONFIG_AC3DSP=yes$/;"	m
CONFIG_AC3ENC_FLOAT	libavcodec/ac3enc.h	40;"	d
CONFIG_AC3ENC_FLOAT	libavcodec/ac3enc_fixed.c	30;"	d	file:
CONFIG_AC3ENC_FLOAT	libavcodec/ac3enc_float.c	29;"	d	file:
CONFIG_AC3ENC_FLOAT	libavcodec/eac3enc.c	27;"	d	file:
CONFIG_AC3_DECODER	config.h	415;"	d
CONFIG_AC3_DECODER	config.mak	/^CONFIG_AC3_DECODER=yes$/;"	m
CONFIG_AC3_DEMUXER	config.h	710;"	d
CONFIG_AC3_DEMUXER	config.mak	/^CONFIG_AC3_DEMUXER=yes$/;"	m
CONFIG_AC3_ENCODER	config.h	594;"	d
CONFIG_AC3_ENCODER	config.mak	/^CONFIG_AC3_ENCODER=yes$/;"	m
CONFIG_AC3_FIXED_ENCODER	config.h	595;"	d
CONFIG_AC3_FIXED_ENCODER	config.mak	/^CONFIG_AC3_FIXED_ENCODER=yes$/;"	m
CONFIG_AC3_FLOAT_ENCODER	config.h	596;"	d
CONFIG_AC3_FLOAT_ENCODER	config.mak	/^CONFIG_AC3_FLOAT_ENCODER=yes$/;"	m
CONFIG_AC3_MUXER	config.h	862;"	d
CONFIG_AC3_MUXER	config.mak	/^CONFIG_AC3_MUXER=yes$/;"	m
CONFIG_AC3_PARSER	config.h	676;"	d
CONFIG_AC3_PARSER	config.mak	/^CONFIG_AC3_PARSER=yes$/;"	m
CONFIG_ADPCM_4XM_DECODER	config.h	499;"	d
CONFIG_ADPCM_4XM_DECODER	config.mak	/^CONFIG_ADPCM_4XM_DECODER=yes$/;"	m
CONFIG_ADPCM_ADX_DECODER	config.h	500;"	d
CONFIG_ADPCM_ADX_DECODER	config.mak	/^CONFIG_ADPCM_ADX_DECODER=yes$/;"	m
CONFIG_ADPCM_ADX_ENCODER	config.h	632;"	d
CONFIG_ADPCM_ADX_ENCODER	config.mak	/^CONFIG_ADPCM_ADX_ENCODER=yes$/;"	m
CONFIG_ADPCM_CT_DECODER	config.h	501;"	d
CONFIG_ADPCM_CT_DECODER	config.mak	/^CONFIG_ADPCM_CT_DECODER=yes$/;"	m
CONFIG_ADPCM_EA_DECODER	config.h	502;"	d
CONFIG_ADPCM_EA_DECODER	config.mak	/^CONFIG_ADPCM_EA_DECODER=yes$/;"	m
CONFIG_ADPCM_EA_MAXIS_XA_DECODER	config.h	503;"	d
CONFIG_ADPCM_EA_MAXIS_XA_DECODER	config.mak	/^CONFIG_ADPCM_EA_MAXIS_XA_DECODER=yes$/;"	m
CONFIG_ADPCM_EA_R1_DECODER	config.h	504;"	d
CONFIG_ADPCM_EA_R1_DECODER	config.mak	/^CONFIG_ADPCM_EA_R1_DECODER=yes$/;"	m
CONFIG_ADPCM_EA_R2_DECODER	config.h	505;"	d
CONFIG_ADPCM_EA_R2_DECODER	config.mak	/^CONFIG_ADPCM_EA_R2_DECODER=yes$/;"	m
CONFIG_ADPCM_EA_R3_DECODER	config.h	506;"	d
CONFIG_ADPCM_EA_R3_DECODER	config.mak	/^CONFIG_ADPCM_EA_R3_DECODER=yes$/;"	m
CONFIG_ADPCM_EA_XAS_DECODER	config.h	507;"	d
CONFIG_ADPCM_EA_XAS_DECODER	config.mak	/^CONFIG_ADPCM_EA_XAS_DECODER=yes$/;"	m
CONFIG_ADPCM_G722_DECODER	config.h	508;"	d
CONFIG_ADPCM_G722_DECODER	config.mak	/^CONFIG_ADPCM_G722_DECODER=yes$/;"	m
CONFIG_ADPCM_G722_ENCODER	config.h	633;"	d
CONFIG_ADPCM_G722_ENCODER	config.mak	/^CONFIG_ADPCM_G722_ENCODER=yes$/;"	m
CONFIG_ADPCM_G726_DECODER	config.h	509;"	d
CONFIG_ADPCM_G726_DECODER	config.mak	/^CONFIG_ADPCM_G726_DECODER=yes$/;"	m
CONFIG_ADPCM_G726_ENCODER	config.h	634;"	d
CONFIG_ADPCM_G726_ENCODER	config.mak	/^CONFIG_ADPCM_G726_ENCODER=yes$/;"	m
CONFIG_ADPCM_IMA_AMV_DECODER	config.h	510;"	d
CONFIG_ADPCM_IMA_AMV_DECODER	config.mak	/^CONFIG_ADPCM_IMA_AMV_DECODER=yes$/;"	m
CONFIG_ADPCM_IMA_DK3_DECODER	config.h	511;"	d
CONFIG_ADPCM_IMA_DK3_DECODER	config.mak	/^CONFIG_ADPCM_IMA_DK3_DECODER=yes$/;"	m
CONFIG_ADPCM_IMA_DK4_DECODER	config.h	512;"	d
CONFIG_ADPCM_IMA_DK4_DECODER	config.mak	/^CONFIG_ADPCM_IMA_DK4_DECODER=yes$/;"	m
CONFIG_ADPCM_IMA_EA_EACS_DECODER	config.h	513;"	d
CONFIG_ADPCM_IMA_EA_EACS_DECODER	config.mak	/^CONFIG_ADPCM_IMA_EA_EACS_DECODER=yes$/;"	m
CONFIG_ADPCM_IMA_EA_SEAD_DECODER	config.h	514;"	d
CONFIG_ADPCM_IMA_EA_SEAD_DECODER	config.mak	/^CONFIG_ADPCM_IMA_EA_SEAD_DECODER=yes$/;"	m
CONFIG_ADPCM_IMA_ISS_DECODER	config.h	515;"	d
CONFIG_ADPCM_IMA_ISS_DECODER	config.mak	/^CONFIG_ADPCM_IMA_ISS_DECODER=yes$/;"	m
CONFIG_ADPCM_IMA_QT_DECODER	config.h	516;"	d
CONFIG_ADPCM_IMA_QT_DECODER	config.mak	/^CONFIG_ADPCM_IMA_QT_DECODER=yes$/;"	m
CONFIG_ADPCM_IMA_QT_ENCODER	config.h	635;"	d
CONFIG_ADPCM_IMA_QT_ENCODER	config.mak	/^CONFIG_ADPCM_IMA_QT_ENCODER=yes$/;"	m
CONFIG_ADPCM_IMA_SMJPEG_DECODER	config.h	517;"	d
CONFIG_ADPCM_IMA_SMJPEG_DECODER	config.mak	/^CONFIG_ADPCM_IMA_SMJPEG_DECODER=yes$/;"	m
CONFIG_ADPCM_IMA_WAV_DECODER	config.h	518;"	d
CONFIG_ADPCM_IMA_WAV_DECODER	config.mak	/^CONFIG_ADPCM_IMA_WAV_DECODER=yes$/;"	m
CONFIG_ADPCM_IMA_WAV_ENCODER	config.h	636;"	d
CONFIG_ADPCM_IMA_WAV_ENCODER	config.mak	/^CONFIG_ADPCM_IMA_WAV_ENCODER=yes$/;"	m
CONFIG_ADPCM_IMA_WS_DECODER	config.h	519;"	d
CONFIG_ADPCM_IMA_WS_DECODER	config.mak	/^CONFIG_ADPCM_IMA_WS_DECODER=yes$/;"	m
CONFIG_ADPCM_MS_DECODER	config.h	520;"	d
CONFIG_ADPCM_MS_DECODER	config.mak	/^CONFIG_ADPCM_MS_DECODER=yes$/;"	m
CONFIG_ADPCM_MS_ENCODER	config.h	637;"	d
CONFIG_ADPCM_MS_ENCODER	config.mak	/^CONFIG_ADPCM_MS_ENCODER=yes$/;"	m
CONFIG_ADPCM_SBPRO_2_DECODER	config.h	521;"	d
CONFIG_ADPCM_SBPRO_2_DECODER	config.mak	/^CONFIG_ADPCM_SBPRO_2_DECODER=yes$/;"	m
CONFIG_ADPCM_SBPRO_3_DECODER	config.h	522;"	d
CONFIG_ADPCM_SBPRO_3_DECODER	config.mak	/^CONFIG_ADPCM_SBPRO_3_DECODER=yes$/;"	m
CONFIG_ADPCM_SBPRO_4_DECODER	config.h	523;"	d
CONFIG_ADPCM_SBPRO_4_DECODER	config.mak	/^CONFIG_ADPCM_SBPRO_4_DECODER=yes$/;"	m
CONFIG_ADPCM_SWF_DECODER	config.h	524;"	d
CONFIG_ADPCM_SWF_DECODER	config.mak	/^CONFIG_ADPCM_SWF_DECODER=yes$/;"	m
CONFIG_ADPCM_SWF_ENCODER	config.h	638;"	d
CONFIG_ADPCM_SWF_ENCODER	config.mak	/^CONFIG_ADPCM_SWF_ENCODER=yes$/;"	m
CONFIG_ADPCM_THP_DECODER	config.h	525;"	d
CONFIG_ADPCM_THP_DECODER	config.mak	/^CONFIG_ADPCM_THP_DECODER=yes$/;"	m
CONFIG_ADPCM_XA_DECODER	config.h	526;"	d
CONFIG_ADPCM_XA_DECODER	config.mak	/^CONFIG_ADPCM_XA_DECODER=yes$/;"	m
CONFIG_ADPCM_YAMAHA_DECODER	config.h	527;"	d
CONFIG_ADPCM_YAMAHA_DECODER	config.mak	/^CONFIG_ADPCM_YAMAHA_DECODER=yes$/;"	m
CONFIG_ADPCM_YAMAHA_ENCODER	config.h	639;"	d
CONFIG_ADPCM_YAMAHA_ENCODER	config.mak	/^CONFIG_ADPCM_YAMAHA_ENCODER=yes$/;"	m
CONFIG_ADTS_MUXER	config.h	863;"	d
CONFIG_ADTS_MUXER	config.mak	/^CONFIG_ADTS_MUXER=yes$/;"	m
CONFIG_AEA_DEMUXER	config.h	711;"	d
CONFIG_AEA_DEMUXER	config.mak	/^CONFIG_AEA_DEMUXER=yes$/;"	m
CONFIG_AIFF_DEMUXER	config.h	712;"	d
CONFIG_AIFF_DEMUXER	config.mak	/^CONFIG_AIFF_DEMUXER=yes$/;"	m
CONFIG_AIFF_MUXER	config.h	864;"	d
CONFIG_AIFF_MUXER	config.mak	/^CONFIG_AIFF_MUXER=yes$/;"	m
CONFIG_ALAC_DECODER	config.h	416;"	d
CONFIG_ALAC_DECODER	config.mak	/^CONFIG_ALAC_DECODER=yes$/;"	m
CONFIG_ALAC_ENCODER	config.h	597;"	d
CONFIG_ALAC_ENCODER	config.mak	/^CONFIG_ALAC_ENCODER=yes$/;"	m
CONFIG_ALSA_INDEV	config.h	1031;"	d
CONFIG_ALSA_OUTDEV	config.h	1044;"	d
CONFIG_ALS_DECODER	config.h	417;"	d
CONFIG_ALS_DECODER	config.mak	/^CONFIG_ALS_DECODER=yes$/;"	m
CONFIG_AMRNB_DECODER	config.h	418;"	d
CONFIG_AMRNB_DECODER	config.mak	/^CONFIG_AMRNB_DECODER=yes$/;"	m
CONFIG_AMRWB_DECODER	config.h	419;"	d
CONFIG_AMRWB_DECODER	config.mak	/^CONFIG_AMRWB_DECODER=yes$/;"	m
CONFIG_AMR_DEMUXER	config.h	713;"	d
CONFIG_AMR_DEMUXER	config.mak	/^CONFIG_AMR_DEMUXER=yes$/;"	m
CONFIG_AMR_MUXER	config.h	865;"	d
CONFIG_AMR_MUXER	config.mak	/^CONFIG_AMR_MUXER=yes$/;"	m
CONFIG_AMV_DECODER	config.h	253;"	d
CONFIG_AMV_DECODER	config.mak	/^CONFIG_AMV_DECODER=yes$/;"	m
CONFIG_ANM_DECODER	config.h	254;"	d
CONFIG_ANM_DECODER	config.mak	/^CONFIG_ANM_DECODER=yes$/;"	m
CONFIG_ANM_DEMUXER	config.h	714;"	d
CONFIG_ANM_DEMUXER	config.mak	/^CONFIG_ANM_DEMUXER=yes$/;"	m
CONFIG_ANSI_DECODER	config.h	255;"	d
CONFIG_ANSI_DECODER	config.mak	/^CONFIG_ANSI_DECODER=yes$/;"	m
CONFIG_ANULLSINK_FILTER	config.h	967;"	d
CONFIG_ANULLSINK_FILTER	config.mak	/^CONFIG_ANULLSINK_FILTER=yes$/;"	m
CONFIG_ANULLSRC_FILTER	config.h	966;"	d
CONFIG_ANULLSRC_FILTER	config.mak	/^CONFIG_ANULLSRC_FILTER=yes$/;"	m
CONFIG_ANULL_FILTER	config.h	965;"	d
CONFIG_ANULL_FILTER	config.mak	/^CONFIG_ANULL_FILTER=yes$/;"	m
CONFIG_APC_DEMUXER	config.h	715;"	d
CONFIG_APC_DEMUXER	config.mak	/^CONFIG_APC_DEMUXER=yes$/;"	m
CONFIG_APE_DECODER	config.h	420;"	d
CONFIG_APE_DECODER	config.mak	/^CONFIG_APE_DECODER=yes$/;"	m
CONFIG_APE_DEMUXER	config.h	716;"	d
CONFIG_APE_DEMUXER	config.mak	/^CONFIG_APE_DEMUXER=yes$/;"	m
CONFIG_APPLEHTTP_DEMUXER	config.h	717;"	d
CONFIG_APPLEHTTP_DEMUXER	config.mak	/^CONFIG_APPLEHTTP_DEMUXER=yes$/;"	m
CONFIG_APPLEHTTP_PROTOCOL	config.h	1013;"	d
CONFIG_APPLEHTTP_PROTOCOL	config.mak	/^CONFIG_APPLEHTTP_PROTOCOL=yes$/;"	m
CONFIG_ASF_DEMUXER	config.h	718;"	d
CONFIG_ASF_DEMUXER	config.mak	/^CONFIG_ASF_DEMUXER=yes$/;"	m
CONFIG_ASF_MUXER	config.h	866;"	d
CONFIG_ASF_MUXER	config.mak	/^CONFIG_ASF_MUXER=yes$/;"	m
CONFIG_ASF_STREAM_MUXER	config.h	868;"	d
CONFIG_ASF_STREAM_MUXER	config.mak	/^CONFIG_ASF_STREAM_MUXER=yes$/;"	m
CONFIG_ASS_DECODER	config.h	528;"	d
CONFIG_ASS_DECODER	config.mak	/^CONFIG_ASS_DECODER=yes$/;"	m
CONFIG_ASS_DEMUXER	config.h	719;"	d
CONFIG_ASS_DEMUXER	config.mak	/^CONFIG_ASS_DEMUXER=yes$/;"	m
CONFIG_ASS_ENCODER	config.h	640;"	d
CONFIG_ASS_ENCODER	config.mak	/^CONFIG_ASS_ENCODER=yes$/;"	m
CONFIG_ASS_MUXER	config.h	867;"	d
CONFIG_ASS_MUXER	config.mak	/^CONFIG_ASS_MUXER=yes$/;"	m
CONFIG_ASV1_DECODER	config.h	256;"	d
CONFIG_ASV1_DECODER	config.mak	/^CONFIG_ASV1_DECODER=yes$/;"	m
CONFIG_ASV1_ENCODER	config.h	546;"	d
CONFIG_ASV1_ENCODER	config.mak	/^CONFIG_ASV1_ENCODER=yes$/;"	m
CONFIG_ASV2_DECODER	config.h	257;"	d
CONFIG_ASV2_DECODER	config.mak	/^CONFIG_ASV2_DECODER=yes$/;"	m
CONFIG_ASV2_ENCODER	config.h	547;"	d
CONFIG_ASV2_ENCODER	config.mak	/^CONFIG_ASV2_ENCODER=yes$/;"	m
CONFIG_ATRAC1_DECODER	config.h	421;"	d
CONFIG_ATRAC1_DECODER	config.mak	/^CONFIG_ATRAC1_DECODER=yes$/;"	m
CONFIG_ATRAC3_DECODER	config.h	422;"	d
CONFIG_ATRAC3_DECODER	config.mak	/^CONFIG_ATRAC3_DECODER=yes$/;"	m
CONFIG_AURA2_DECODER	config.h	259;"	d
CONFIG_AURA2_DECODER	config.mak	/^CONFIG_AURA2_DECODER=yes$/;"	m
CONFIG_AURA_DECODER	config.h	258;"	d
CONFIG_AURA_DECODER	config.mak	/^CONFIG_AURA_DECODER=yes$/;"	m
CONFIG_AU_DEMUXER	config.h	720;"	d
CONFIG_AU_DEMUXER	config.mak	/^CONFIG_AU_DEMUXER=yes$/;"	m
CONFIG_AU_MUXER	config.h	869;"	d
CONFIG_AU_MUXER	config.mak	/^CONFIG_AU_MUXER=yes$/;"	m
CONFIG_AVCODEC	config.h	174;"	d
CONFIG_AVCODEC	config.mak	/^CONFIG_AVCODEC=yes$/;"	m
CONFIG_AVDEVICE	config.h	175;"	d
CONFIG_AVDEVICE	config.mak	/^CONFIG_AVDEVICE=yes$/;"	m
CONFIG_AVFILTER	config.h	176;"	d
CONFIG_AVFILTER	config.mak	/^CONFIG_AVFILTER=yes$/;"	m
CONFIG_AVFORMAT	config.h	177;"	d
CONFIG_AVFORMAT	config.mak	/^CONFIG_AVFORMAT=yes$/;"	m
CONFIG_AVISYNTH	config.h	178;"	d
CONFIG_AVISYNTH_DEMUXER	config.h	722;"	d
CONFIG_AVI_DEMUXER	config.h	721;"	d
CONFIG_AVI_DEMUXER	config.mak	/^CONFIG_AVI_DEMUXER=yes$/;"	m
CONFIG_AVI_MUXER	config.h	870;"	d
CONFIG_AVI_MUXER	config.mak	/^CONFIG_AVI_MUXER=yes$/;"	m
CONFIG_AVM2_MUXER	config.h	871;"	d
CONFIG_AVM2_MUXER	config.mak	/^CONFIG_AVM2_MUXER=yes$/;"	m
CONFIG_AVS_DECODER	config.h	260;"	d
CONFIG_AVS_DECODER	config.mak	/^CONFIG_AVS_DECODER=yes$/;"	m
CONFIG_AVS_DEMUXER	config.h	723;"	d
CONFIG_AVS_DEMUXER	config.mak	/^CONFIG_AVS_DEMUXER=yes$/;"	m
CONFIG_AVUTIL	config.h	249;"	d
CONFIG_AVUTIL	config.mak	/^CONFIG_AVUTIL=yes$/;"	m
CONFIG_BETHSOFTVID_DECODER	config.h	261;"	d
CONFIG_BETHSOFTVID_DECODER	config.mak	/^CONFIG_BETHSOFTVID_DECODER=yes$/;"	m
CONFIG_BETHSOFTVID_DEMUXER	config.h	724;"	d
CONFIG_BETHSOFTVID_DEMUXER	config.mak	/^CONFIG_BETHSOFTVID_DEMUXER=yes$/;"	m
CONFIG_BFI_DECODER	config.h	262;"	d
CONFIG_BFI_DECODER	config.mak	/^CONFIG_BFI_DECODER=yes$/;"	m
CONFIG_BFI_DEMUXER	config.h	725;"	d
CONFIG_BFI_DEMUXER	config.mak	/^CONFIG_BFI_DEMUXER=yes$/;"	m
CONFIG_BINKAUDIO_DCT_DECODER	config.h	423;"	d
CONFIG_BINKAUDIO_DCT_DECODER	config.mak	/^CONFIG_BINKAUDIO_DCT_DECODER=yes$/;"	m
CONFIG_BINKAUDIO_RDFT_DECODER	config.h	424;"	d
CONFIG_BINKAUDIO_RDFT_DECODER	config.mak	/^CONFIG_BINKAUDIO_RDFT_DECODER=yes$/;"	m
CONFIG_BINK_DECODER	config.h	263;"	d
CONFIG_BINK_DECODER	config.mak	/^CONFIG_BINK_DECODER=yes$/;"	m
CONFIG_BINK_DEMUXER	config.h	726;"	d
CONFIG_BINK_DEMUXER	config.mak	/^CONFIG_BINK_DEMUXER=yes$/;"	m
CONFIG_BKTR_INDEV	config.h	1032;"	d
CONFIG_BLACKFRAME_FILTER	config.h	968;"	d
CONFIG_BMP_DECODER	config.h	264;"	d
CONFIG_BMP_DECODER	config.mak	/^CONFIG_BMP_DECODER=yes$/;"	m
CONFIG_BMP_ENCODER	config.h	548;"	d
CONFIG_BMP_ENCODER	config.mak	/^CONFIG_BMP_ENCODER=yes$/;"	m
CONFIG_BSFS	config.h	161;"	d
CONFIG_BSFS	config.mak	/^CONFIG_BSFS=yes$/;"	m
CONFIG_BUFFERSINK_FILTER	config.h	1011;"	d
CONFIG_BUFFERSINK_FILTER	config.mak	/^CONFIG_BUFFERSINK_FILTER=yes$/;"	m
CONFIG_BUFFER_FILTER	config.h	1006;"	d
CONFIG_BUFFER_FILTER	config.mak	/^CONFIG_BUFFER_FILTER=yes$/;"	m
CONFIG_BZLIB	config.h	179;"	d
CONFIG_C93_DECODER	config.h	265;"	d
CONFIG_C93_DECODER	config.mak	/^CONFIG_C93_DECODER=yes$/;"	m
CONFIG_C93_DEMUXER	config.h	727;"	d
CONFIG_C93_DEMUXER	config.mak	/^CONFIG_C93_DEMUXER=yes$/;"	m
CONFIG_CAF_DEMUXER	config.h	728;"	d
CONFIG_CAF_DEMUXER	config.mak	/^CONFIG_CAF_DEMUXER=yes$/;"	m
CONFIG_CAF_MUXER	config.h	872;"	d
CONFIG_CAF_MUXER	config.mak	/^CONFIG_CAF_MUXER=yes$/;"	m
CONFIG_CAVSVIDEO_DEMUXER	config.h	729;"	d
CONFIG_CAVSVIDEO_DEMUXER	config.mak	/^CONFIG_CAVSVIDEO_DEMUXER=yes$/;"	m
CONFIG_CAVSVIDEO_MUXER	config.h	873;"	d
CONFIG_CAVSVIDEO_MUXER	config.mak	/^CONFIG_CAVSVIDEO_MUXER=yes$/;"	m
CONFIG_CAVSVIDEO_PARSER	config.h	677;"	d
CONFIG_CAVSVIDEO_PARSER	config.mak	/^CONFIG_CAVSVIDEO_PARSER=yes$/;"	m
CONFIG_CAVS_DECODER	config.h	266;"	d
CONFIG_CAVS_DECODER	config.mak	/^CONFIG_CAVS_DECODER=yes$/;"	m
CONFIG_CDGRAPHICS_DECODER	config.h	267;"	d
CONFIG_CDGRAPHICS_DECODER	config.mak	/^CONFIG_CDGRAPHICS_DECODER=yes$/;"	m
CONFIG_CDG_DEMUXER	config.h	730;"	d
CONFIG_CDG_DEMUXER	config.mak	/^CONFIG_CDG_DEMUXER=yes$/;"	m
CONFIG_CHOMP_BSF	config.h	697;"	d
CONFIG_CHOMP_BSF	config.mak	/^CONFIG_CHOMP_BSF=yes$/;"	m
CONFIG_CINEPAK_DECODER	config.h	268;"	d
CONFIG_CINEPAK_DECODER	config.mak	/^CONFIG_CINEPAK_DECODER=yes$/;"	m
CONFIG_CLJR_DECODER	config.h	269;"	d
CONFIG_CLJR_DECODER	config.mak	/^CONFIG_CLJR_DECODER=yes$/;"	m
CONFIG_CLJR_ENCODER	libavcodec/cljr.c	32;"	d	file:
CONFIG_CLJR_ENCODER	libavcodec/cljr.c	33;"	d	file:
CONFIG_COLOR_FILTER	config.h	1007;"	d
CONFIG_COLOR_FILTER	config.mak	/^CONFIG_COLOR_FILTER=yes$/;"	m
CONFIG_CONCAT_PROTOCOL	config.h	1014;"	d
CONFIG_CONCAT_PROTOCOL	config.mak	/^CONFIG_CONCAT_PROTOCOL=yes$/;"	m
CONFIG_COOK_DECODER	config.h	425;"	d
CONFIG_COOK_DECODER	config.mak	/^CONFIG_COOK_DECODER=yes$/;"	m
CONFIG_COPY_FILTER	config.h	969;"	d
CONFIG_COPY_FILTER	config.mak	/^CONFIG_COPY_FILTER=yes$/;"	m
CONFIG_CRC_MUXER	config.h	874;"	d
CONFIG_CRC_MUXER	config.mak	/^CONFIG_CRC_MUXER=yes$/;"	m
CONFIG_CROPDETECT_FILTER	config.h	971;"	d
CONFIG_CROP_FILTER	config.h	970;"	d
CONFIG_CROP_FILTER	config.mak	/^CONFIG_CROP_FILTER=yes$/;"	m
CONFIG_CRYPTO_PROTOCOL	config.h	1015;"	d
CONFIG_CRYPTO_PROTOCOL	config.mak	/^CONFIG_CRYPTO_PROTOCOL=yes$/;"	m
CONFIG_CRYSTALHD	config.h	180;"	d
CONFIG_CSCD_DECODER	config.h	270;"	d
CONFIG_CSCD_DECODER	config.mak	/^CONFIG_CSCD_DECODER=yes$/;"	m
CONFIG_CYUV_DECODER	config.h	271;"	d
CONFIG_CYUV_DECODER	config.mak	/^CONFIG_CYUV_DECODER=yes$/;"	m
CONFIG_DAUD_DEMUXER	config.h	731;"	d
CONFIG_DAUD_DEMUXER	config.mak	/^CONFIG_DAUD_DEMUXER=yes$/;"	m
CONFIG_DAUD_MUXER	config.h	875;"	d
CONFIG_DAUD_MUXER	config.mak	/^CONFIG_DAUD_MUXER=yes$/;"	m
CONFIG_DCA_DECODER	config.h	426;"	d
CONFIG_DCA_DECODER	config.mak	/^CONFIG_DCA_DECODER=yes$/;"	m
CONFIG_DCA_ENCODER	config.h	598;"	d
CONFIG_DCA_ENCODER	config.mak	/^CONFIG_DCA_ENCODER=yes$/;"	m
CONFIG_DCA_PARSER	config.h	678;"	d
CONFIG_DCA_PARSER	config.mak	/^CONFIG_DCA_PARSER=yes$/;"	m
CONFIG_DCT	config.h	181;"	d
CONFIG_DCT	config.mak	/^CONFIG_DCT=yes$/;"	m
CONFIG_DECODERS	config.h	162;"	d
CONFIG_DECODERS	config.mak	/^CONFIG_DECODERS=yes$/;"	m
CONFIG_DEMUXERS	config.h	163;"	d
CONFIG_DEMUXERS	config.mak	/^CONFIG_DEMUXERS=yes$/;"	m
CONFIG_DFA_DECODER	config.h	272;"	d
CONFIG_DFA_DECODER	config.mak	/^CONFIG_DFA_DECODER=yes$/;"	m
CONFIG_DFA_DEMUXER	config.h	732;"	d
CONFIG_DFA_DEMUXER	config.mak	/^CONFIG_DFA_DEMUXER=yes$/;"	m
CONFIG_DIRAC_DEMUXER	config.h	733;"	d
CONFIG_DIRAC_DEMUXER	config.mak	/^CONFIG_DIRAC_DEMUXER=yes$/;"	m
CONFIG_DIRAC_MUXER	config.h	876;"	d
CONFIG_DIRAC_MUXER	config.mak	/^CONFIG_DIRAC_MUXER=yes$/;"	m
CONFIG_DIRAC_PARSER	config.h	679;"	d
CONFIG_DIRAC_PARSER	config.mak	/^CONFIG_DIRAC_PARSER=yes$/;"	m
CONFIG_DNXHD_DECODER	config.h	273;"	d
CONFIG_DNXHD_DECODER	config.mak	/^CONFIG_DNXHD_DECODER=yes$/;"	m
CONFIG_DNXHD_DEMUXER	config.h	734;"	d
CONFIG_DNXHD_DEMUXER	config.mak	/^CONFIG_DNXHD_DEMUXER=yes$/;"	m
CONFIG_DNXHD_ENCODER	config.h	549;"	d
CONFIG_DNXHD_ENCODER	config.mak	/^CONFIG_DNXHD_ENCODER=yes$/;"	m
CONFIG_DNXHD_MUXER	config.h	877;"	d
CONFIG_DNXHD_MUXER	config.mak	/^CONFIG_DNXHD_MUXER=yes$/;"	m
CONFIG_DNXHD_PARSER	config.h	680;"	d
CONFIG_DNXHD_PARSER	config.mak	/^CONFIG_DNXHD_PARSER=yes$/;"	m
CONFIG_DOC	config.h	182;"	d
CONFIG_DPX_DECODER	config.h	274;"	d
CONFIG_DPX_DECODER	config.mak	/^CONFIG_DPX_DECODER=yes$/;"	m
CONFIG_DPX_ENCODER	config.h	550;"	d
CONFIG_DPX_ENCODER	config.mak	/^CONFIG_DPX_ENCODER=yes$/;"	m
CONFIG_DRAWBOX_FILTER	config.h	972;"	d
CONFIG_DRAWBOX_FILTER	config.mak	/^CONFIG_DRAWBOX_FILTER=yes$/;"	m
CONFIG_DRAWTEXT_FILTER	config.h	973;"	d
CONFIG_DSHOW_INDEV	config.h	1033;"	d
CONFIG_DSICINAUDIO_DECODER	config.h	427;"	d
CONFIG_DSICINAUDIO_DECODER	config.mak	/^CONFIG_DSICINAUDIO_DECODER=yes$/;"	m
CONFIG_DSICINVIDEO_DECODER	config.h	275;"	d
CONFIG_DSICINVIDEO_DECODER	config.mak	/^CONFIG_DSICINVIDEO_DECODER=yes$/;"	m
CONFIG_DSICIN_DEMUXER	config.h	735;"	d
CONFIG_DSICIN_DEMUXER	config.mak	/^CONFIG_DSICIN_DEMUXER=yes$/;"	m
CONFIG_DTS_DEMUXER	config.h	736;"	d
CONFIG_DTS_DEMUXER	config.mak	/^CONFIG_DTS_DEMUXER=yes$/;"	m
CONFIG_DTS_MUXER	config.h	878;"	d
CONFIG_DTS_MUXER	config.mak	/^CONFIG_DTS_MUXER=yes$/;"	m
CONFIG_DUMP_EXTRADATA_BSF	config.h	698;"	d
CONFIG_DUMP_EXTRADATA_BSF	config.mak	/^CONFIG_DUMP_EXTRADATA_BSF=yes$/;"	m
CONFIG_DV1394_INDEV	config.h	1034;"	d
CONFIG_DV1394_INDEV	config.mak	/^CONFIG_DV1394_INDEV=yes$/;"	m
CONFIG_DVBSUB_DECODER	config.h	529;"	d
CONFIG_DVBSUB_DECODER	config.mak	/^CONFIG_DVBSUB_DECODER=yes$/;"	m
CONFIG_DVBSUB_ENCODER	config.h	641;"	d
CONFIG_DVBSUB_ENCODER	config.mak	/^CONFIG_DVBSUB_ENCODER=yes$/;"	m
CONFIG_DVBSUB_PARSER	config.h	681;"	d
CONFIG_DVBSUB_PARSER	config.mak	/^CONFIG_DVBSUB_PARSER=yes$/;"	m
CONFIG_DVDSUB_DECODER	config.h	530;"	d
CONFIG_DVDSUB_DECODER	config.mak	/^CONFIG_DVDSUB_DECODER=yes$/;"	m
CONFIG_DVDSUB_ENCODER	config.h	642;"	d
CONFIG_DVDSUB_ENCODER	config.mak	/^CONFIG_DVDSUB_ENCODER=yes$/;"	m
CONFIG_DVDSUB_PARSER	config.h	682;"	d
CONFIG_DVDSUB_PARSER	config.mak	/^CONFIG_DVDSUB_PARSER=yes$/;"	m
CONFIG_DVVIDEO_DECODER	config.h	276;"	d
CONFIG_DVVIDEO_DECODER	config.mak	/^CONFIG_DVVIDEO_DECODER=yes$/;"	m
CONFIG_DVVIDEO_ENCODER	config.h	551;"	d
CONFIG_DVVIDEO_ENCODER	config.mak	/^CONFIG_DVVIDEO_ENCODER=yes$/;"	m
CONFIG_DV_DEMUXER	config.h	737;"	d
CONFIG_DV_DEMUXER	config.mak	/^CONFIG_DV_DEMUXER=yes$/;"	m
CONFIG_DV_MUXER	config.h	879;"	d
CONFIG_DV_MUXER	config.mak	/^CONFIG_DV_MUXER=yes$/;"	m
CONFIG_DWT	config.h	183;"	d
CONFIG_DWT	config.mak	/^CONFIG_DWT=yes$/;"	m
CONFIG_DXA_DECODER	config.h	277;"	d
CONFIG_DXA_DEMUXER	config.h	738;"	d
CONFIG_DXA_DEMUXER	config.mak	/^CONFIG_DXA_DEMUXER=yes$/;"	m
CONFIG_DXVA2	config.h	184;"	d
CONFIG_EAC3_DECODER	config.h	428;"	d
CONFIG_EAC3_DECODER	config.mak	/^CONFIG_EAC3_DECODER=yes$/;"	m
CONFIG_EAC3_DEMUXER	config.h	741;"	d
CONFIG_EAC3_DEMUXER	config.mak	/^CONFIG_EAC3_DEMUXER=yes$/;"	m
CONFIG_EAC3_ENCODER	config.h	599;"	d
CONFIG_EAC3_ENCODER	config.mak	/^CONFIG_EAC3_ENCODER=yes$/;"	m
CONFIG_EAC3_MUXER	config.h	880;"	d
CONFIG_EAC3_MUXER	config.mak	/^CONFIG_EAC3_MUXER=yes$/;"	m
CONFIG_EACMV_DECODER	config.h	278;"	d
CONFIG_EACMV_DECODER	config.mak	/^CONFIG_EACMV_DECODER=yes$/;"	m
CONFIG_EAMAD_DECODER	config.h	279;"	d
CONFIG_EAMAD_DECODER	config.mak	/^CONFIG_EAMAD_DECODER=yes$/;"	m
CONFIG_EATGQ_DECODER	config.h	280;"	d
CONFIG_EATGQ_DECODER	config.mak	/^CONFIG_EATGQ_DECODER=yes$/;"	m
CONFIG_EATGV_DECODER	config.h	281;"	d
CONFIG_EATGV_DECODER	config.mak	/^CONFIG_EATGV_DECODER=yes$/;"	m
CONFIG_EATQI_DECODER	config.h	282;"	d
CONFIG_EATQI_DECODER	config.mak	/^CONFIG_EATQI_DECODER=yes$/;"	m
CONFIG_EA_CDATA_DEMUXER	config.h	740;"	d
CONFIG_EA_CDATA_DEMUXER	config.mak	/^CONFIG_EA_CDATA_DEMUXER=yes$/;"	m
CONFIG_EA_DEMUXER	config.h	739;"	d
CONFIG_EA_DEMUXER	config.mak	/^CONFIG_EA_DEMUXER=yes$/;"	m
CONFIG_EIGHTBPS_DECODER	config.h	283;"	d
CONFIG_EIGHTBPS_DECODER	config.mak	/^CONFIG_EIGHTBPS_DECODER=yes$/;"	m
CONFIG_EIGHTSVX_EXP_DECODER	config.h	284;"	d
CONFIG_EIGHTSVX_EXP_DECODER	config.mak	/^CONFIG_EIGHTSVX_EXP_DECODER=yes$/;"	m
CONFIG_EIGHTSVX_FIB_DECODER	config.h	285;"	d
CONFIG_EIGHTSVX_FIB_DECODER	config.mak	/^CONFIG_EIGHTSVX_FIB_DECODER=yes$/;"	m
CONFIG_EIGHTSVX_RAW_DECODER	config.h	286;"	d
CONFIG_EIGHTSVX_RAW_DECODER	config.mak	/^CONFIG_EIGHTSVX_RAW_DECODER=yes$/;"	m
CONFIG_ENCODERS	config.h	164;"	d
CONFIG_ENCODERS	config.mak	/^CONFIG_ENCODERS=yes$/;"	m
CONFIG_ESCAPE124_DECODER	config.h	287;"	d
CONFIG_ESCAPE124_DECODER	config.mak	/^CONFIG_ESCAPE124_DECODER=yes$/;"	m
CONFIG_FADE_FILTER	config.h	974;"	d
CONFIG_FADE_FILTER	config.mak	/^CONFIG_FADE_FILTER=yes$/;"	m
CONFIG_FASTDIV	config.h	185;"	d
CONFIG_FASTDIV	config.mak	/^CONFIG_FASTDIV=yes$/;"	m
CONFIG_FBDEV_INDEV	config.h	1035;"	d
CONFIG_FFMETADATA_DEMUXER	config.h	743;"	d
CONFIG_FFMETADATA_DEMUXER	config.mak	/^CONFIG_FFMETADATA_DEMUXER=yes$/;"	m
CONFIG_FFMETADATA_MUXER	config.h	882;"	d
CONFIG_FFMETADATA_MUXER	config.mak	/^CONFIG_FFMETADATA_MUXER=yes$/;"	m
CONFIG_FFMPEG	config.h	186;"	d
CONFIG_FFMPEG	config.mak	/^CONFIG_FFMPEG=yes$/;"	m
CONFIG_FFM_DEMUXER	config.h	742;"	d
CONFIG_FFM_DEMUXER	config.mak	/^CONFIG_FFM_DEMUXER=yes$/;"	m
CONFIG_FFM_MUXER	config.h	881;"	d
CONFIG_FFM_MUXER	config.mak	/^CONFIG_FFM_MUXER=yes$/;"	m
CONFIG_FFPLAY	config.h	187;"	d
CONFIG_FFPROBE	config.h	188;"	d
CONFIG_FFPROBE	config.mak	/^CONFIG_FFPROBE=yes$/;"	m
CONFIG_FFSERVER	config.h	189;"	d
CONFIG_FFT	config.h	190;"	d
CONFIG_FFT	config.mak	/^CONFIG_FFT=yes$/;"	m
CONFIG_FFT_FLOAT	libavcodec/ac3enc_fixed.c	29;"	d	file:
CONFIG_FFT_FLOAT	libavcodec/arm/fft_fixed_init_arm.c	21;"	d	file:
CONFIG_FFT_FLOAT	libavcodec/fft-fixed-test.c	19;"	d	file:
CONFIG_FFT_FLOAT	libavcodec/fft.h	26;"	d
CONFIG_FFT_FLOAT	libavcodec/fft_fixed.c	19;"	d	file:
CONFIG_FFT_FLOAT	libavcodec/fft_float.c	19;"	d	file:
CONFIG_FFT_FLOAT	libavcodec/mdct_fixed.c	19;"	d	file:
CONFIG_FFT_FLOAT	libavcodec/mdct_float.c	19;"	d	file:
CONFIG_FFV1_DECODER	config.h	288;"	d
CONFIG_FFV1_DECODER	config.mak	/^CONFIG_FFV1_DECODER=yes$/;"	m
CONFIG_FFV1_ENCODER	config.h	552;"	d
CONFIG_FFV1_ENCODER	config.mak	/^CONFIG_FFV1_ENCODER=yes$/;"	m
CONFIG_FFVHUFF_DECODER	config.h	289;"	d
CONFIG_FFVHUFF_DECODER	config.mak	/^CONFIG_FFVHUFF_DECODER=yes$/;"	m
CONFIG_FFVHUFF_ENCODER	config.h	553;"	d
CONFIG_FFVHUFF_ENCODER	config.mak	/^CONFIG_FFVHUFF_ENCODER=yes$/;"	m
CONFIG_FIELDORDER_FILTER	config.h	975;"	d
CONFIG_FIELDORDER_FILTER	config.mak	/^CONFIG_FIELDORDER_FILTER=yes$/;"	m
CONFIG_FIFO_FILTER	config.h	976;"	d
CONFIG_FIFO_FILTER	config.mak	/^CONFIG_FIFO_FILTER=yes$/;"	m
CONFIG_FILE_PROTOCOL	config.h	1016;"	d
CONFIG_FILE_PROTOCOL	config.mak	/^CONFIG_FILE_PROTOCOL=yes$/;"	m
CONFIG_FILMSTRIP_DEMUXER	config.h	744;"	d
CONFIG_FILMSTRIP_DEMUXER	config.mak	/^CONFIG_FILMSTRIP_DEMUXER=yes$/;"	m
CONFIG_FILMSTRIP_MUXER	config.h	883;"	d
CONFIG_FILMSTRIP_MUXER	config.mak	/^CONFIG_FILMSTRIP_MUXER=yes$/;"	m
CONFIG_FILTERS	config.h	165;"	d
CONFIG_FILTERS	config.mak	/^CONFIG_FILTERS=yes$/;"	m
CONFIG_FLAC_DECODER	config.h	429;"	d
CONFIG_FLAC_DECODER	config.mak	/^CONFIG_FLAC_DECODER=yes$/;"	m
CONFIG_FLAC_DEMUXER	config.h	745;"	d
CONFIG_FLAC_DEMUXER	config.mak	/^CONFIG_FLAC_DEMUXER=yes$/;"	m
CONFIG_FLAC_ENCODER	config.h	600;"	d
CONFIG_FLAC_ENCODER	config.mak	/^CONFIG_FLAC_ENCODER=yes$/;"	m
CONFIG_FLAC_MUXER	config.h	884;"	d
CONFIG_FLAC_MUXER	config.mak	/^CONFIG_FLAC_MUXER=yes$/;"	m
CONFIG_FLAC_PARSER	config.h	683;"	d
CONFIG_FLAC_PARSER	config.mak	/^CONFIG_FLAC_PARSER=yes$/;"	m
CONFIG_FLASHSV2_ENCODER	config.h	555;"	d
CONFIG_FLASHSV_DECODER	config.h	290;"	d
CONFIG_FLASHSV_ENCODER	config.h	554;"	d
CONFIG_FLIC_DECODER	config.h	291;"	d
CONFIG_FLIC_DECODER	config.mak	/^CONFIG_FLIC_DECODER=yes$/;"	m
CONFIG_FLIC_DEMUXER	config.h	746;"	d
CONFIG_FLIC_DEMUXER	config.mak	/^CONFIG_FLIC_DEMUXER=yes$/;"	m
CONFIG_FLOAT	libavcodec/mpegaudio.h	30;"	d
CONFIG_FLOAT	libavcodec/mpegaudiodec_float.c	22;"	d	file:
CONFIG_FLOAT	libavcodec/mpegaudiodsp_fixed.c	19;"	d	file:
CONFIG_FLOAT	libavcodec/mpegaudiodsp_float.c	19;"	d	file:
CONFIG_FLV_DECODER	config.h	292;"	d
CONFIG_FLV_DECODER	config.mak	/^CONFIG_FLV_DECODER=yes$/;"	m
CONFIG_FLV_DEMUXER	config.h	747;"	d
CONFIG_FLV_DEMUXER	config.mak	/^CONFIG_FLV_DEMUXER=yes$/;"	m
CONFIG_FLV_ENCODER	config.h	556;"	d
CONFIG_FLV_ENCODER	config.mak	/^CONFIG_FLV_ENCODER=yes$/;"	m
CONFIG_FLV_MUXER	config.h	885;"	d
CONFIG_FLV_MUXER	config.mak	/^CONFIG_FLV_MUXER=yes$/;"	m
CONFIG_FORMAT_FILTER	config.h	977;"	d
CONFIG_FORMAT_FILTER	config.mak	/^CONFIG_FORMAT_FILTER=yes$/;"	m
CONFIG_FOURXM_DECODER	config.h	293;"	d
CONFIG_FOURXM_DECODER	config.mak	/^CONFIG_FOURXM_DECODER=yes$/;"	m
CONFIG_FOURXM_DEMUXER	config.h	748;"	d
CONFIG_FOURXM_DEMUXER	config.mak	/^CONFIG_FOURXM_DEMUXER=yes$/;"	m
CONFIG_FRAMECRC_MUXER	config.h	886;"	d
CONFIG_FRAMECRC_MUXER	config.mak	/^CONFIG_FRAMECRC_MUXER=yes$/;"	m
CONFIG_FRAMEMD5_MUXER	config.h	887;"	d
CONFIG_FRAMEMD5_MUXER	config.mak	/^CONFIG_FRAMEMD5_MUXER=yes$/;"	m
CONFIG_FRAPS_DECODER	config.h	294;"	d
CONFIG_FRAPS_DECODER	config.mak	/^CONFIG_FRAPS_DECODER=yes$/;"	m
CONFIG_FREI0R	config.h	191;"	d
CONFIG_FREI0R_FILTER	config.h	978;"	d
CONFIG_FREI0R_SRC_FILTER	config.h	1008;"	d
CONFIG_FRWU_DECODER	config.h	295;"	d
CONFIG_FRWU_DECODER	config.mak	/^CONFIG_FRWU_DECODER=yes$/;"	m
CONFIG_G722_DEMUXER	config.h	749;"	d
CONFIG_G722_DEMUXER	config.mak	/^CONFIG_G722_DEMUXER=yes$/;"	m
CONFIG_G722_MUXER	config.h	888;"	d
CONFIG_G722_MUXER	config.mak	/^CONFIG_G722_MUXER=yes$/;"	m
CONFIG_GIF_DECODER	config.h	296;"	d
CONFIG_GIF_DECODER	config.mak	/^CONFIG_GIF_DECODER=yes$/;"	m
CONFIG_GIF_ENCODER	config.h	557;"	d
CONFIG_GIF_ENCODER	config.mak	/^CONFIG_GIF_ENCODER=yes$/;"	m
CONFIG_GIF_MUXER	config.h	889;"	d
CONFIG_GIF_MUXER	config.mak	/^CONFIG_GIF_MUXER=yes$/;"	m
CONFIG_GOLOMB	config.h	192;"	d
CONFIG_GOLOMB	config.mak	/^CONFIG_GOLOMB=yes$/;"	m
CONFIG_GOPHER_PROTOCOL	config.h	1017;"	d
CONFIG_GPL	config.h	193;"	d
CONFIG_GPLV3	config.h	250;"	d
CONFIG_GRADFUN_FILTER	config.h	979;"	d
CONFIG_GRADFUN_FILTER	config.mak	/^CONFIG_GRADFUN_FILTER=yes$/;"	m
CONFIG_GRAY	config.h	194;"	d
CONFIG_GSM_DECODER	config.h	430;"	d
CONFIG_GSM_DECODER	config.mak	/^CONFIG_GSM_DECODER=yes$/;"	m
CONFIG_GSM_DEMUXER	config.h	750;"	d
CONFIG_GSM_DEMUXER	config.mak	/^CONFIG_GSM_DEMUXER=yes$/;"	m
CONFIG_GSM_MS_DECODER	config.h	431;"	d
CONFIG_GSM_MS_DECODER	config.mak	/^CONFIG_GSM_MS_DECODER=yes$/;"	m
CONFIG_GXF_DEMUXER	config.h	751;"	d
CONFIG_GXF_DEMUXER	config.mak	/^CONFIG_GXF_DEMUXER=yes$/;"	m
CONFIG_GXF_MUXER	config.h	890;"	d
CONFIG_GXF_MUXER	config.mak	/^CONFIG_GXF_MUXER=yes$/;"	m
CONFIG_H261_DECODER	config.h	297;"	d
CONFIG_H261_DECODER	config.mak	/^CONFIG_H261_DECODER=yes$/;"	m
CONFIG_H261_DEMUXER	config.h	752;"	d
CONFIG_H261_DEMUXER	config.mak	/^CONFIG_H261_DEMUXER=yes$/;"	m
CONFIG_H261_ENCODER	config.h	558;"	d
CONFIG_H261_ENCODER	config.mak	/^CONFIG_H261_ENCODER=yes$/;"	m
CONFIG_H261_MUXER	config.h	891;"	d
CONFIG_H261_MUXER	config.mak	/^CONFIG_H261_MUXER=yes$/;"	m
CONFIG_H261_PARSER	config.h	684;"	d
CONFIG_H261_PARSER	config.mak	/^CONFIG_H261_PARSER=yes$/;"	m
CONFIG_H263I_DECODER	config.h	299;"	d
CONFIG_H263I_DECODER	config.mak	/^CONFIG_H263I_DECODER=yes$/;"	m
CONFIG_H263P_ENCODER	config.h	560;"	d
CONFIG_H263P_ENCODER	config.mak	/^CONFIG_H263P_ENCODER=yes$/;"	m
CONFIG_H263_DECODER	config.h	298;"	d
CONFIG_H263_DECODER	config.mak	/^CONFIG_H263_DECODER=yes$/;"	m
CONFIG_H263_DEMUXER	config.h	753;"	d
CONFIG_H263_DEMUXER	config.mak	/^CONFIG_H263_DEMUXER=yes$/;"	m
CONFIG_H263_ENCODER	config.h	559;"	d
CONFIG_H263_ENCODER	config.mak	/^CONFIG_H263_ENCODER=yes$/;"	m
CONFIG_H263_MUXER	config.h	892;"	d
CONFIG_H263_MUXER	config.mak	/^CONFIG_H263_MUXER=yes$/;"	m
CONFIG_H263_PARSER	config.h	685;"	d
CONFIG_H263_PARSER	config.mak	/^CONFIG_H263_PARSER=yes$/;"	m
CONFIG_H263_VAAPI_HWACCEL	config.h	662;"	d
CONFIG_H264DSP	config.h	195;"	d
CONFIG_H264DSP	config.mak	/^CONFIG_H264DSP=yes$/;"	m
CONFIG_H264PRED	config.h	196;"	d
CONFIG_H264PRED	config.mak	/^CONFIG_H264PRED=yes$/;"	m
CONFIG_H264_CRYSTALHD_DECODER	config.h	301;"	d
CONFIG_H264_DECODER	config.h	300;"	d
CONFIG_H264_DECODER	config.mak	/^CONFIG_H264_DECODER=yes$/;"	m
CONFIG_H264_DEMUXER	config.h	754;"	d
CONFIG_H264_DEMUXER	config.mak	/^CONFIG_H264_DEMUXER=yes$/;"	m
CONFIG_H264_DXVA2_HWACCEL	config.h	663;"	d
CONFIG_H264_MP4TOANNEXB_BSF	config.h	699;"	d
CONFIG_H264_MP4TOANNEXB_BSF	config.mak	/^CONFIG_H264_MP4TOANNEXB_BSF=yes$/;"	m
CONFIG_H264_MUXER	config.h	893;"	d
CONFIG_H264_MUXER	config.mak	/^CONFIG_H264_MUXER=yes$/;"	m
CONFIG_H264_PARSER	config.h	686;"	d
CONFIG_H264_PARSER	config.mak	/^CONFIG_H264_PARSER=yes$/;"	m
CONFIG_H264_VAAPI_HWACCEL	config.h	664;"	d
CONFIG_H264_VDPAU_DECODER	config.h	302;"	d
CONFIG_HARDCODED_TABLES	config.h	197;"	d
CONFIG_HARDCODED_TABLES	libavcodec/aac_tablegen.c	24;"	d	file:
CONFIG_HARDCODED_TABLES	libavcodec/aacps_tablegen.c	24;"	d	file:
CONFIG_HARDCODED_TABLES	libavcodec/cbrt_tablegen.c	24;"	d	file:
CONFIG_HARDCODED_TABLES	libavcodec/dv_tablegen.c	24;"	d	file:
CONFIG_HARDCODED_TABLES	libavcodec/motionpixels_tablegen.c	24;"	d	file:
CONFIG_HARDCODED_TABLES	libavcodec/mpegaudio_tablegen.c	24;"	d	file:
CONFIG_HARDCODED_TABLES	libavcodec/pcm_tablegen.c	24;"	d	file:
CONFIG_HARDCODED_TABLES	libavcodec/qdm2_tablegen.c	24;"	d	file:
CONFIG_HARDCODED_TABLES	libavcodec/sinewin_tablegen.c	24;"	d	file:
CONFIG_HFLIP_FILTER	config.h	980;"	d
CONFIG_HFLIP_FILTER	config.mak	/^CONFIG_HFLIP_FILTER=yes$/;"	m
CONFIG_HQDN3D_FILTER	config.h	981;"	d
CONFIG_HTTP_PROTOCOL	config.h	1018;"	d
CONFIG_HUFFMAN	config.h	198;"	d
CONFIG_HUFFMAN	config.mak	/^CONFIG_HUFFMAN=yes$/;"	m
CONFIG_HUFFYUV_DECODER	config.h	303;"	d
CONFIG_HUFFYUV_DECODER	config.mak	/^CONFIG_HUFFYUV_DECODER=yes$/;"	m
CONFIG_HUFFYUV_ENCODER	config.h	561;"	d
CONFIG_HUFFYUV_ENCODER	config.mak	/^CONFIG_HUFFYUV_ENCODER=yes$/;"	m
CONFIG_HWACCELS	config.h	166;"	d
CONFIG_IDCIN_DECODER	config.h	304;"	d
CONFIG_IDCIN_DECODER	config.mak	/^CONFIG_IDCIN_DECODER=yes$/;"	m
CONFIG_IDCIN_DEMUXER	config.h	755;"	d
CONFIG_IDCIN_DEMUXER	config.mak	/^CONFIG_IDCIN_DEMUXER=yes$/;"	m
CONFIG_IFF_BYTERUN1_DECODER	config.h	305;"	d
CONFIG_IFF_BYTERUN1_DECODER	config.mak	/^CONFIG_IFF_BYTERUN1_DECODER=yes$/;"	m
CONFIG_IFF_DEMUXER	config.h	756;"	d
CONFIG_IFF_DEMUXER	config.mak	/^CONFIG_IFF_DEMUXER=yes$/;"	m
CONFIG_IFF_ILBM_DECODER	config.h	306;"	d
CONFIG_IFF_ILBM_DECODER	config.mak	/^CONFIG_IFF_ILBM_DECODER=yes$/;"	m
CONFIG_IMAGE2PIPE_DEMUXER	config.h	758;"	d
CONFIG_IMAGE2PIPE_DEMUXER	config.mak	/^CONFIG_IMAGE2PIPE_DEMUXER=yes$/;"	m
CONFIG_IMAGE2PIPE_MUXER	config.h	895;"	d
CONFIG_IMAGE2PIPE_MUXER	config.mak	/^CONFIG_IMAGE2PIPE_MUXER=yes$/;"	m
CONFIG_IMAGE2_DEMUXER	config.h	757;"	d
CONFIG_IMAGE2_DEMUXER	config.mak	/^CONFIG_IMAGE2_DEMUXER=yes$/;"	m
CONFIG_IMAGE2_MUXER	config.h	894;"	d
CONFIG_IMAGE2_MUXER	config.mak	/^CONFIG_IMAGE2_MUXER=yes$/;"	m
CONFIG_IMC_DECODER	config.h	432;"	d
CONFIG_IMC_DECODER	config.mak	/^CONFIG_IMC_DECODER=yes$/;"	m
CONFIG_IMX_DUMP_HEADER_BSF	config.h	700;"	d
CONFIG_IMX_DUMP_HEADER_BSF	config.mak	/^CONFIG_IMX_DUMP_HEADER_BSF=yes$/;"	m
CONFIG_INDEO2_DECODER	config.h	307;"	d
CONFIG_INDEO2_DECODER	config.mak	/^CONFIG_INDEO2_DECODER=yes$/;"	m
CONFIG_INDEO3_DECODER	config.h	308;"	d
CONFIG_INDEO3_DECODER	config.mak	/^CONFIG_INDEO3_DECODER=yes$/;"	m
CONFIG_INDEO5_DECODER	config.h	309;"	d
CONFIG_INDEO5_DECODER	config.mak	/^CONFIG_INDEO5_DECODER=yes$/;"	m
CONFIG_INDEVS	config.h	167;"	d
CONFIG_INDEVS	config.mak	/^CONFIG_INDEVS=yes$/;"	m
CONFIG_INGENIENT_DEMUXER	config.h	759;"	d
CONFIG_INGENIENT_DEMUXER	config.mak	/^CONFIG_INGENIENT_DEMUXER=yes$/;"	m
CONFIG_INTERPLAY_DPCM_DECODER	config.h	495;"	d
CONFIG_INTERPLAY_DPCM_DECODER	config.mak	/^CONFIG_INTERPLAY_DPCM_DECODER=yes$/;"	m
CONFIG_INTERPLAY_VIDEO_DECODER	config.h	310;"	d
CONFIG_INTERPLAY_VIDEO_DECODER	config.mak	/^CONFIG_INTERPLAY_VIDEO_DECODER=yes$/;"	m
CONFIG_IPMOVIE_DEMUXER	config.h	760;"	d
CONFIG_IPMOVIE_DEMUXER	config.mak	/^CONFIG_IPMOVIE_DEMUXER=yes$/;"	m
CONFIG_IPOD_MUXER	config.h	896;"	d
CONFIG_IPOD_MUXER	config.mak	/^CONFIG_IPOD_MUXER=yes$/;"	m
CONFIG_ISS_DEMUXER	config.h	761;"	d
CONFIG_ISS_DEMUXER	config.mak	/^CONFIG_ISS_DEMUXER=yes$/;"	m
CONFIG_IV8_DEMUXER	config.h	762;"	d
CONFIG_IV8_DEMUXER	config.mak	/^CONFIG_IV8_DEMUXER=yes$/;"	m
CONFIG_IVF_DEMUXER	config.h	763;"	d
CONFIG_IVF_DEMUXER	config.mak	/^CONFIG_IVF_DEMUXER=yes$/;"	m
CONFIG_IVF_MUXER	config.h	897;"	d
CONFIG_IVF_MUXER	config.mak	/^CONFIG_IVF_MUXER=yes$/;"	m
CONFIG_JACK_INDEV	config.h	1036;"	d
CONFIG_JPEG2000_DECODER	config.h	311;"	d
CONFIG_JPEG2000_DECODER	config.mak	/^CONFIG_JPEG2000_DECODER=yes$/;"	m
CONFIG_JPEGLS_DECODER	config.h	312;"	d
CONFIG_JPEGLS_DECODER	config.mak	/^CONFIG_JPEGLS_DECODER=yes$/;"	m
CONFIG_JPEGLS_ENCODER	config.h	562;"	d
CONFIG_JPEGLS_ENCODER	config.mak	/^CONFIG_JPEGLS_ENCODER=yes$/;"	m
CONFIG_JV_DECODER	config.h	313;"	d
CONFIG_JV_DECODER	config.mak	/^CONFIG_JV_DECODER=yes$/;"	m
CONFIG_JV_DEMUXER	config.h	764;"	d
CONFIG_JV_DEMUXER	config.mak	/^CONFIG_JV_DEMUXER=yes$/;"	m
CONFIG_KGV1_DECODER	config.h	314;"	d
CONFIG_KGV1_DECODER	config.mak	/^CONFIG_KGV1_DECODER=yes$/;"	m
CONFIG_KMVC_DECODER	config.h	315;"	d
CONFIG_KMVC_DECODER	config.mak	/^CONFIG_KMVC_DECODER=yes$/;"	m
CONFIG_LAGARITH_DECODER	config.h	316;"	d
CONFIG_LAGARITH_DECODER	config.mak	/^CONFIG_LAGARITH_DECODER=yes$/;"	m
CONFIG_LGPLV3	config.h	251;"	d
CONFIG_LIBAACPLUS	config.h	199;"	d
CONFIG_LIBAACPLUS_ENCODER	config.h	645;"	d
CONFIG_LIBCDIO	config.h	200;"	d
CONFIG_LIBCELT	config.h	201;"	d
CONFIG_LIBCELT_DECODER	config.h	534;"	d
CONFIG_LIBDC1394	config.h	202;"	d
CONFIG_LIBDC1394_INDEV	config.h	1043;"	d
CONFIG_LIBDIRAC	config.h	203;"	d
CONFIG_LIBDIRAC_DECODER	config.h	535;"	d
CONFIG_LIBDIRAC_ENCODER	config.h	646;"	d
CONFIG_LIBFAAC	config.h	204;"	d
CONFIG_LIBFAAC_ENCODER	config.h	647;"	d
CONFIG_LIBFREETYPE	config.h	205;"	d
CONFIG_LIBGSM	config.h	206;"	d
CONFIG_LIBGSM_DECODER	config.h	536;"	d
CONFIG_LIBGSM_ENCODER	config.h	648;"	d
CONFIG_LIBGSM_MS_DECODER	config.h	537;"	d
CONFIG_LIBGSM_MS_ENCODER	config.h	649;"	d
CONFIG_LIBMP3LAME	config.h	207;"	d
CONFIG_LIBMP3LAME_ENCODER	config.h	650;"	d
CONFIG_LIBNUT	config.h	208;"	d
CONFIG_LIBNUT_DEMUXER	config.h	860;"	d
CONFIG_LIBNUT_MUXER	config.h	964;"	d
CONFIG_LIBOPENCORE_AMRNB	config.h	209;"	d
CONFIG_LIBOPENCORE_AMRNB_DECODER	config.h	538;"	d
CONFIG_LIBOPENCORE_AMRNB_ENCODER	config.h	651;"	d
CONFIG_LIBOPENCORE_AMRWB	config.h	210;"	d
CONFIG_LIBOPENCORE_AMRWB_DECODER	config.h	539;"	d
CONFIG_LIBOPENCV	config.h	211;"	d
CONFIG_LIBOPENJPEG	config.h	212;"	d
CONFIG_LIBOPENJPEG_DECODER	config.h	540;"	d
CONFIG_LIBRTMP	config.h	213;"	d
CONFIG_LIBSCHROEDINGER	config.h	214;"	d
CONFIG_LIBSCHROEDINGER_DECODER	config.h	541;"	d
CONFIG_LIBSCHROEDINGER_ENCODER	config.h	652;"	d
CONFIG_LIBSPEEX	config.h	215;"	d
CONFIG_LIBSPEEX_DECODER	config.h	542;"	d
CONFIG_LIBSPEEX_ENCODER	config.h	653;"	d
CONFIG_LIBTHEORA	config.h	216;"	d
CONFIG_LIBTHEORA_ENCODER	config.h	654;"	d
CONFIG_LIBVORBIS	config.h	219;"	d
CONFIG_LIBVORBIS_ENCODER	config.h	657;"	d
CONFIG_LIBVO_AACENC	config.h	217;"	d
CONFIG_LIBVO_AACENC_ENCODER	config.h	655;"	d
CONFIG_LIBVO_AMRWBENC	config.h	218;"	d
CONFIG_LIBVO_AMRWBENC_ENCODER	config.h	656;"	d
CONFIG_LIBVPX	config.h	220;"	d
CONFIG_LIBVPX_DECODER	config.h	543;"	d
CONFIG_LIBVPX_ENCODER	config.h	658;"	d
CONFIG_LIBX264	config.h	221;"	d
CONFIG_LIBX264_ENCODER	config.h	659;"	d
CONFIG_LIBXAVS	config.h	222;"	d
CONFIG_LIBXAVS_ENCODER	config.h	660;"	d
CONFIG_LIBXVID	config.h	223;"	d
CONFIG_LIBXVID_ENCODER	config.h	661;"	d
CONFIG_LJPEG_ENCODER	config.h	563;"	d
CONFIG_LJPEG_ENCODER	config.mak	/^CONFIG_LJPEG_ENCODER=yes$/;"	m
CONFIG_LMLM4_DEMUXER	config.h	765;"	d
CONFIG_LMLM4_DEMUXER	config.mak	/^CONFIG_LMLM4_DEMUXER=yes$/;"	m
CONFIG_LOCO_DECODER	config.h	317;"	d
CONFIG_LOCO_DECODER	config.mak	/^CONFIG_LOCO_DECODER=yes$/;"	m
CONFIG_LPC	config.h	224;"	d
CONFIG_LPC	config.mak	/^CONFIG_LPC=yes$/;"	m
CONFIG_LSP	config.h	225;"	d
CONFIG_LSP	config.mak	/^CONFIG_LSP=yes$/;"	m
CONFIG_LUTRGB_FILTER	config.h	983;"	d
CONFIG_LUTRGB_FILTER	config.mak	/^CONFIG_LUTRGB_FILTER=yes$/;"	m
CONFIG_LUTYUV_FILTER	config.h	984;"	d
CONFIG_LUTYUV_FILTER	config.mak	/^CONFIG_LUTYUV_FILTER=yes$/;"	m
CONFIG_LUT_FILTER	config.h	982;"	d
CONFIG_LUT_FILTER	config.mak	/^CONFIG_LUT_FILTER=yes$/;"	m
CONFIG_LXF_DEMUXER	config.h	766;"	d
CONFIG_LXF_DEMUXER	config.mak	/^CONFIG_LXF_DEMUXER=yes$/;"	m
CONFIG_M4V_DEMUXER	config.h	767;"	d
CONFIG_M4V_DEMUXER	config.mak	/^CONFIG_M4V_DEMUXER=yes$/;"	m
CONFIG_M4V_MUXER	config.h	898;"	d
CONFIG_M4V_MUXER	config.mak	/^CONFIG_M4V_MUXER=yes$/;"	m
CONFIG_MACE3_DECODER	config.h	433;"	d
CONFIG_MACE3_DECODER	config.mak	/^CONFIG_MACE3_DECODER=yes$/;"	m
CONFIG_MACE6_DECODER	config.h	434;"	d
CONFIG_MACE6_DECODER	config.mak	/^CONFIG_MACE6_DECODER=yes$/;"	m
CONFIG_MATROSKA_AUDIO_MUXER	config.h	901;"	d
CONFIG_MATROSKA_AUDIO_MUXER	config.mak	/^CONFIG_MATROSKA_AUDIO_MUXER=yes$/;"	m
CONFIG_MATROSKA_DEMUXER	config.h	768;"	d
CONFIG_MATROSKA_DEMUXER	config.mak	/^CONFIG_MATROSKA_DEMUXER=yes$/;"	m
CONFIG_MATROSKA_MUXER	config.h	900;"	d
CONFIG_MATROSKA_MUXER	config.mak	/^CONFIG_MATROSKA_MUXER=yes$/;"	m
CONFIG_MD5_MUXER	config.h	899;"	d
CONFIG_MD5_MUXER	config.mak	/^CONFIG_MD5_MUXER=yes$/;"	m
CONFIG_MD5_PROTOCOL	config.h	1021;"	d
CONFIG_MD5_PROTOCOL	config.mak	/^CONFIG_MD5_PROTOCOL=yes$/;"	m
CONFIG_MDCT	config.h	226;"	d
CONFIG_MDCT	config.mak	/^CONFIG_MDCT=yes$/;"	m
CONFIG_MDEC_DECODER	config.h	318;"	d
CONFIG_MDEC_DECODER	config.mak	/^CONFIG_MDEC_DECODER=yes$/;"	m
CONFIG_MEMALIGN_HACK	config.h	227;"	d
CONFIG_MICRODVD_DEMUXER	config.h	769;"	d
CONFIG_MICRODVD_DEMUXER	config.mak	/^CONFIG_MICRODVD_DEMUXER=yes$/;"	m
CONFIG_MICRODVD_MUXER	config.h	902;"	d
CONFIG_MICRODVD_MUXER	config.mak	/^CONFIG_MICRODVD_MUXER=yes$/;"	m
CONFIG_MIMIC_DECODER	config.h	319;"	d
CONFIG_MIMIC_DECODER	config.mak	/^CONFIG_MIMIC_DECODER=yes$/;"	m
CONFIG_MJPEG2JPEG_BSF	config.h	701;"	d
CONFIG_MJPEG2JPEG_BSF	config.mak	/^CONFIG_MJPEG2JPEG_BSF=yes$/;"	m
CONFIG_MJPEGA_DUMP_HEADER_BSF	config.h	702;"	d
CONFIG_MJPEGA_DUMP_HEADER_BSF	config.mak	/^CONFIG_MJPEGA_DUMP_HEADER_BSF=yes$/;"	m
CONFIG_MJPEGB_DECODER	config.h	321;"	d
CONFIG_MJPEGB_DECODER	config.mak	/^CONFIG_MJPEGB_DECODER=yes$/;"	m
CONFIG_MJPEG_DECODER	config.h	320;"	d
CONFIG_MJPEG_DECODER	config.mak	/^CONFIG_MJPEG_DECODER=yes$/;"	m
CONFIG_MJPEG_DEMUXER	config.h	770;"	d
CONFIG_MJPEG_DEMUXER	config.mak	/^CONFIG_MJPEG_DEMUXER=yes$/;"	m
CONFIG_MJPEG_ENCODER	config.h	564;"	d
CONFIG_MJPEG_ENCODER	config.mak	/^CONFIG_MJPEG_ENCODER=yes$/;"	m
CONFIG_MJPEG_MUXER	config.h	903;"	d
CONFIG_MJPEG_MUXER	config.mak	/^CONFIG_MJPEG_MUXER=yes$/;"	m
CONFIG_MJPEG_PARSER	config.h	687;"	d
CONFIG_MJPEG_PARSER	config.mak	/^CONFIG_MJPEG_PARSER=yes$/;"	m
CONFIG_MLIB	config.h	228;"	d
CONFIG_MLP_DECODER	config.h	435;"	d
CONFIG_MLP_DECODER	config.mak	/^CONFIG_MLP_DECODER=yes$/;"	m
CONFIG_MLP_DEMUXER	config.h	771;"	d
CONFIG_MLP_DEMUXER	config.mak	/^CONFIG_MLP_DEMUXER=yes$/;"	m
CONFIG_MLP_MUXER	config.h	904;"	d
CONFIG_MLP_MUXER	config.mak	/^CONFIG_MLP_MUXER=yes$/;"	m
CONFIG_MLP_PARSER	config.h	688;"	d
CONFIG_MLP_PARSER	config.mak	/^CONFIG_MLP_PARSER=yes$/;"	m
CONFIG_MMF_DEMUXER	config.h	773;"	d
CONFIG_MMF_DEMUXER	config.mak	/^CONFIG_MMF_DEMUXER=yes$/;"	m
CONFIG_MMF_MUXER	config.h	905;"	d
CONFIG_MMF_MUXER	config.mak	/^CONFIG_MMF_MUXER=yes$/;"	m
CONFIG_MMSH_PROTOCOL	config.h	1019;"	d
CONFIG_MMST_PROTOCOL	config.h	1020;"	d
CONFIG_MMVIDEO_DECODER	config.h	322;"	d
CONFIG_MMVIDEO_DECODER	config.mak	/^CONFIG_MMVIDEO_DECODER=yes$/;"	m
CONFIG_MM_DEMUXER	config.h	772;"	d
CONFIG_MM_DEMUXER	config.mak	/^CONFIG_MM_DEMUXER=yes$/;"	m
CONFIG_MOTIONPIXELS_DECODER	config.h	323;"	d
CONFIG_MOTIONPIXELS_DECODER	config.mak	/^CONFIG_MOTIONPIXELS_DECODER=yes$/;"	m
CONFIG_MOV2TEXTSUB_BSF	config.h	705;"	d
CONFIG_MOV2TEXTSUB_BSF	config.mak	/^CONFIG_MOV2TEXTSUB_BSF=yes$/;"	m
CONFIG_MOVIE_FILTER	config.h	1009;"	d
CONFIG_MOVIE_FILTER	config.mak	/^CONFIG_MOVIE_FILTER=yes$/;"	m
CONFIG_MOV_DEMUXER	config.h	774;"	d
CONFIG_MOV_DEMUXER	config.mak	/^CONFIG_MOV_DEMUXER=yes$/;"	m
CONFIG_MOV_MUXER	config.h	906;"	d
CONFIG_MOV_MUXER	config.mak	/^CONFIG_MOV_MUXER=yes$/;"	m
CONFIG_MP1FLOAT_DECODER	config.h	437;"	d
CONFIG_MP1FLOAT_DECODER	config.mak	/^CONFIG_MP1FLOAT_DECODER=yes$/;"	m
CONFIG_MP1_DECODER	config.h	436;"	d
CONFIG_MP1_DECODER	config.mak	/^CONFIG_MP1_DECODER=yes$/;"	m
CONFIG_MP2FLOAT_DECODER	config.h	439;"	d
CONFIG_MP2FLOAT_DECODER	config.mak	/^CONFIG_MP2FLOAT_DECODER=yes$/;"	m
CONFIG_MP2_DECODER	config.h	438;"	d
CONFIG_MP2_DECODER	config.mak	/^CONFIG_MP2_DECODER=yes$/;"	m
CONFIG_MP2_ENCODER	config.h	601;"	d
CONFIG_MP2_ENCODER	config.mak	/^CONFIG_MP2_ENCODER=yes$/;"	m
CONFIG_MP2_MUXER	config.h	907;"	d
CONFIG_MP2_MUXER	config.mak	/^CONFIG_MP2_MUXER=yes$/;"	m
CONFIG_MP3ADUFLOAT_DECODER	config.h	443;"	d
CONFIG_MP3ADUFLOAT_DECODER	config.mak	/^CONFIG_MP3ADUFLOAT_DECODER=yes$/;"	m
CONFIG_MP3ADU_DECODER	config.h	442;"	d
CONFIG_MP3ADU_DECODER	config.mak	/^CONFIG_MP3ADU_DECODER=yes$/;"	m
CONFIG_MP3FLOAT_DECODER	config.h	441;"	d
CONFIG_MP3FLOAT_DECODER	config.mak	/^CONFIG_MP3FLOAT_DECODER=yes$/;"	m
CONFIG_MP3ON4FLOAT_DECODER	config.h	445;"	d
CONFIG_MP3ON4FLOAT_DECODER	config.mak	/^CONFIG_MP3ON4FLOAT_DECODER=yes$/;"	m
CONFIG_MP3ON4_DECODER	config.h	444;"	d
CONFIG_MP3ON4_DECODER	config.mak	/^CONFIG_MP3ON4_DECODER=yes$/;"	m
CONFIG_MP3_DECODER	config.h	440;"	d
CONFIG_MP3_DECODER	config.mak	/^CONFIG_MP3_DECODER=yes$/;"	m
CONFIG_MP3_DEMUXER	config.h	775;"	d
CONFIG_MP3_DEMUXER	config.mak	/^CONFIG_MP3_DEMUXER=yes$/;"	m
CONFIG_MP3_HEADER_COMPRESS_BSF	config.h	703;"	d
CONFIG_MP3_HEADER_COMPRESS_BSF	config.mak	/^CONFIG_MP3_HEADER_COMPRESS_BSF=yes$/;"	m
CONFIG_MP3_HEADER_DECOMPRESS_BSF	config.h	704;"	d
CONFIG_MP3_HEADER_DECOMPRESS_BSF	config.mak	/^CONFIG_MP3_HEADER_DECOMPRESS_BSF=yes$/;"	m
CONFIG_MP3_MUXER	config.h	908;"	d
CONFIG_MP3_MUXER	config.mak	/^CONFIG_MP3_MUXER=yes$/;"	m
CONFIG_MP4_MUXER	config.h	909;"	d
CONFIG_MP4_MUXER	config.mak	/^CONFIG_MP4_MUXER=yes$/;"	m
CONFIG_MPC7_DECODER	config.h	446;"	d
CONFIG_MPC7_DECODER	config.mak	/^CONFIG_MPC7_DECODER=yes$/;"	m
CONFIG_MPC8_DECODER	config.h	447;"	d
CONFIG_MPC8_DECODER	config.mak	/^CONFIG_MPC8_DECODER=yes$/;"	m
CONFIG_MPC8_DEMUXER	config.h	777;"	d
CONFIG_MPC8_DEMUXER	config.mak	/^CONFIG_MPC8_DEMUXER=yes$/;"	m
CONFIG_MPC_DEMUXER	config.h	776;"	d
CONFIG_MPC_DEMUXER	config.mak	/^CONFIG_MPC_DEMUXER=yes$/;"	m
CONFIG_MPEG1SYSTEM_MUXER	config.h	910;"	d
CONFIG_MPEG1SYSTEM_MUXER	config.mak	/^CONFIG_MPEG1SYSTEM_MUXER=yes$/;"	m
CONFIG_MPEG1VCD_MUXER	config.h	911;"	d
CONFIG_MPEG1VCD_MUXER	config.mak	/^CONFIG_MPEG1VCD_MUXER=yes$/;"	m
CONFIG_MPEG1VIDEO_DECODER	config.h	325;"	d
CONFIG_MPEG1VIDEO_DECODER	config.mak	/^CONFIG_MPEG1VIDEO_DECODER=yes$/;"	m
CONFIG_MPEG1VIDEO_ENCODER	config.h	565;"	d
CONFIG_MPEG1VIDEO_ENCODER	config.mak	/^CONFIG_MPEG1VIDEO_ENCODER=yes$/;"	m
CONFIG_MPEG1VIDEO_MUXER	config.h	912;"	d
CONFIG_MPEG1VIDEO_MUXER	config.mak	/^CONFIG_MPEG1VIDEO_MUXER=yes$/;"	m
CONFIG_MPEG1_VDPAU_DECODER	config.h	332;"	d
CONFIG_MPEG1_VDPAU_HWACCEL	config.h	665;"	d
CONFIG_MPEG2DVD_MUXER	config.h	913;"	d
CONFIG_MPEG2DVD_MUXER	config.mak	/^CONFIG_MPEG2DVD_MUXER=yes$/;"	m
CONFIG_MPEG2SVCD_MUXER	config.h	914;"	d
CONFIG_MPEG2SVCD_MUXER	config.mak	/^CONFIG_MPEG2SVCD_MUXER=yes$/;"	m
CONFIG_MPEG2VIDEO_DECODER	config.h	326;"	d
CONFIG_MPEG2VIDEO_DECODER	config.mak	/^CONFIG_MPEG2VIDEO_DECODER=yes$/;"	m
CONFIG_MPEG2VIDEO_ENCODER	config.h	566;"	d
CONFIG_MPEG2VIDEO_ENCODER	config.mak	/^CONFIG_MPEG2VIDEO_ENCODER=yes$/;"	m
CONFIG_MPEG2VIDEO_MUXER	config.h	915;"	d
CONFIG_MPEG2VIDEO_MUXER	config.mak	/^CONFIG_MPEG2VIDEO_MUXER=yes$/;"	m
CONFIG_MPEG2VOB_MUXER	config.h	916;"	d
CONFIG_MPEG2VOB_MUXER	config.mak	/^CONFIG_MPEG2VOB_MUXER=yes$/;"	m
CONFIG_MPEG2_CRYSTALHD_DECODER	config.h	333;"	d
CONFIG_MPEG2_DXVA2_HWACCEL	config.h	666;"	d
CONFIG_MPEG2_VAAPI_HWACCEL	config.h	667;"	d
CONFIG_MPEG2_VDPAU_HWACCEL	config.h	668;"	d
CONFIG_MPEG4VIDEO_PARSER	config.h	689;"	d
CONFIG_MPEG4VIDEO_PARSER	config.mak	/^CONFIG_MPEG4VIDEO_PARSER=yes$/;"	m
CONFIG_MPEG4_CRYSTALHD_DECODER	config.h	328;"	d
CONFIG_MPEG4_DECODER	config.h	327;"	d
CONFIG_MPEG4_DECODER	config.mak	/^CONFIG_MPEG4_DECODER=yes$/;"	m
CONFIG_MPEG4_ENCODER	config.h	567;"	d
CONFIG_MPEG4_ENCODER	config.mak	/^CONFIG_MPEG4_ENCODER=yes$/;"	m
CONFIG_MPEG4_VAAPI_HWACCEL	config.h	669;"	d
CONFIG_MPEG4_VDPAU_DECODER	config.h	329;"	d
CONFIG_MPEGAUDIODSP	config.h	229;"	d
CONFIG_MPEGAUDIODSP	config.mak	/^CONFIG_MPEGAUDIODSP=yes$/;"	m
CONFIG_MPEGAUDIO_PARSER	config.h	690;"	d
CONFIG_MPEGAUDIO_PARSER	config.mak	/^CONFIG_MPEGAUDIO_PARSER=yes$/;"	m
CONFIG_MPEGPS_DEMUXER	config.h	778;"	d
CONFIG_MPEGPS_DEMUXER	config.mak	/^CONFIG_MPEGPS_DEMUXER=yes$/;"	m
CONFIG_MPEGTSRAW_DEMUXER	config.h	780;"	d
CONFIG_MPEGTSRAW_DEMUXER	config.mak	/^CONFIG_MPEGTSRAW_DEMUXER=yes$/;"	m
CONFIG_MPEGTS_DEMUXER	config.h	779;"	d
CONFIG_MPEGTS_DEMUXER	config.mak	/^CONFIG_MPEGTS_DEMUXER=yes$/;"	m
CONFIG_MPEGTS_MUXER	config.h	917;"	d
CONFIG_MPEGTS_MUXER	config.mak	/^CONFIG_MPEGTS_MUXER=yes$/;"	m
CONFIG_MPEGVIDEO_DECODER	config.h	330;"	d
CONFIG_MPEGVIDEO_DECODER	config.mak	/^CONFIG_MPEGVIDEO_DECODER=yes$/;"	m
CONFIG_MPEGVIDEO_DEMUXER	config.h	781;"	d
CONFIG_MPEGVIDEO_DEMUXER	config.mak	/^CONFIG_MPEGVIDEO_DEMUXER=yes$/;"	m
CONFIG_MPEGVIDEO_PARSER	config.h	691;"	d
CONFIG_MPEGVIDEO_PARSER	config.mak	/^CONFIG_MPEGVIDEO_PARSER=yes$/;"	m
CONFIG_MPEG_VDPAU_DECODER	config.h	331;"	d
CONFIG_MPEG_XVMC_DECODER	config.h	324;"	d
CONFIG_MPJPEG_MUXER	config.h	918;"	d
CONFIG_MPJPEG_MUXER	config.mak	/^CONFIG_MPJPEG_MUXER=yes$/;"	m
CONFIG_MP_FILTER	config.h	985;"	d
CONFIG_MSMPEG4V1_DECODER	config.h	335;"	d
CONFIG_MSMPEG4V1_DECODER	config.mak	/^CONFIG_MSMPEG4V1_DECODER=yes$/;"	m
CONFIG_MSMPEG4V2_DECODER	config.h	336;"	d
CONFIG_MSMPEG4V2_DECODER	config.mak	/^CONFIG_MSMPEG4V2_DECODER=yes$/;"	m
CONFIG_MSMPEG4V2_ENCODER	config.h	568;"	d
CONFIG_MSMPEG4V2_ENCODER	config.mak	/^CONFIG_MSMPEG4V2_ENCODER=yes$/;"	m
CONFIG_MSMPEG4V3_DECODER	config.h	337;"	d
CONFIG_MSMPEG4V3_DECODER	config.mak	/^CONFIG_MSMPEG4V3_DECODER=yes$/;"	m
CONFIG_MSMPEG4V3_ENCODER	config.h	569;"	d
CONFIG_MSMPEG4V3_ENCODER	config.mak	/^CONFIG_MSMPEG4V3_ENCODER=yes$/;"	m
CONFIG_MSMPEG4_CRYSTALHD_DECODER	config.h	334;"	d
CONFIG_MSMPEG4_DECODER	libavcodec/msmpeg4.h	52;"	d
CONFIG_MSMPEG4_ENCODER	libavcodec/msmpeg4.h	57;"	d
CONFIG_MSNWC_TCP_DEMUXER	config.h	782;"	d
CONFIG_MSNWC_TCP_DEMUXER	config.mak	/^CONFIG_MSNWC_TCP_DEMUXER=yes$/;"	m
CONFIG_MSRLE_DECODER	config.h	338;"	d
CONFIG_MSRLE_DECODER	config.mak	/^CONFIG_MSRLE_DECODER=yes$/;"	m
CONFIG_MSVIDEO1_DECODER	config.h	339;"	d
CONFIG_MSVIDEO1_DECODER	config.mak	/^CONFIG_MSVIDEO1_DECODER=yes$/;"	m
CONFIG_MSVIDEO1_ENCODER	config.h	570;"	d
CONFIG_MSVIDEO1_ENCODER	config.mak	/^CONFIG_MSVIDEO1_ENCODER=yes$/;"	m
CONFIG_MSZH_DECODER	config.h	340;"	d
CONFIG_MSZH_DECODER	config.mak	/^CONFIG_MSZH_DECODER=yes$/;"	m
CONFIG_MTV_DEMUXER	config.h	783;"	d
CONFIG_MTV_DEMUXER	config.mak	/^CONFIG_MTV_DEMUXER=yes$/;"	m
CONFIG_MUXERS	config.h	168;"	d
CONFIG_MUXERS	config.mak	/^CONFIG_MUXERS=yes$/;"	m
CONFIG_MVI_DEMUXER	config.h	784;"	d
CONFIG_MVI_DEMUXER	config.mak	/^CONFIG_MVI_DEMUXER=yes$/;"	m
CONFIG_MXF_D10_MUXER	config.h	920;"	d
CONFIG_MXF_D10_MUXER	config.mak	/^CONFIG_MXF_D10_MUXER=yes$/;"	m
CONFIG_MXF_DEMUXER	config.h	785;"	d
CONFIG_MXF_DEMUXER	config.mak	/^CONFIG_MXF_DEMUXER=yes$/;"	m
CONFIG_MXF_MUXER	config.h	919;"	d
CONFIG_MXF_MUXER	config.mak	/^CONFIG_MXF_MUXER=yes$/;"	m
CONFIG_MXG_DEMUXER	config.h	786;"	d
CONFIG_MXG_DEMUXER	config.mak	/^CONFIG_MXG_DEMUXER=yes$/;"	m
CONFIG_MXPEG_DECODER	config.h	341;"	d
CONFIG_MXPEG_DECODER	config.mak	/^CONFIG_MXPEG_DECODER=yes$/;"	m
CONFIG_NC_DEMUXER	config.h	787;"	d
CONFIG_NC_DEMUXER	config.mak	/^CONFIG_NC_DEMUXER=yes$/;"	m
CONFIG_NEGATE_FILTER	config.h	986;"	d
CONFIG_NEGATE_FILTER	config.mak	/^CONFIG_NEGATE_FILTER=yes$/;"	m
CONFIG_NELLYMOSER_DECODER	config.h	448;"	d
CONFIG_NELLYMOSER_DECODER	config.mak	/^CONFIG_NELLYMOSER_DECODER=yes$/;"	m
CONFIG_NELLYMOSER_ENCODER	config.h	602;"	d
CONFIG_NELLYMOSER_ENCODER	config.mak	/^CONFIG_NELLYMOSER_ENCODER=yes$/;"	m
CONFIG_NETWORK	config.h	230;"	d
CONFIG_NOFORMAT_FILTER	config.h	987;"	d
CONFIG_NOFORMAT_FILTER	config.mak	/^CONFIG_NOFORMAT_FILTER=yes$/;"	m
CONFIG_NOISE_BSF	config.h	706;"	d
CONFIG_NOISE_BSF	config.mak	/^CONFIG_NOISE_BSF=yes$/;"	m
CONFIG_NONFREE	config.h	231;"	d
CONFIG_NSV_DEMUXER	config.h	788;"	d
CONFIG_NSV_DEMUXER	config.mak	/^CONFIG_NSV_DEMUXER=yes$/;"	m
CONFIG_NULLSINK_FILTER	config.h	1012;"	d
CONFIG_NULLSINK_FILTER	config.mak	/^CONFIG_NULLSINK_FILTER=yes$/;"	m
CONFIG_NULLSRC_FILTER	config.h	1010;"	d
CONFIG_NULLSRC_FILTER	config.mak	/^CONFIG_NULLSRC_FILTER=yes$/;"	m
CONFIG_NULL_FILTER	config.h	988;"	d
CONFIG_NULL_FILTER	config.mak	/^CONFIG_NULL_FILTER=yes$/;"	m
CONFIG_NULL_MUXER	config.h	921;"	d
CONFIG_NULL_MUXER	config.mak	/^CONFIG_NULL_MUXER=yes$/;"	m
CONFIG_NUT_DEMUXER	config.h	789;"	d
CONFIG_NUT_DEMUXER	config.mak	/^CONFIG_NUT_DEMUXER=yes$/;"	m
CONFIG_NUT_MUXER	config.h	922;"	d
CONFIG_NUT_MUXER	config.mak	/^CONFIG_NUT_MUXER=yes$/;"	m
CONFIG_NUV_DECODER	config.h	342;"	d
CONFIG_NUV_DECODER	config.mak	/^CONFIG_NUV_DECODER=yes$/;"	m
CONFIG_NUV_DEMUXER	config.h	790;"	d
CONFIG_NUV_DEMUXER	config.mak	/^CONFIG_NUV_DEMUXER=yes$/;"	m
CONFIG_OCV_FILTER	config.h	989;"	d
CONFIG_OGG_DEMUXER	config.h	791;"	d
CONFIG_OGG_DEMUXER	config.mak	/^CONFIG_OGG_DEMUXER=yes$/;"	m
CONFIG_OGG_MUXER	config.h	923;"	d
CONFIG_OGG_MUXER	config.mak	/^CONFIG_OGG_MUXER=yes$/;"	m
CONFIG_OMA_DEMUXER	config.h	792;"	d
CONFIG_OMA_DEMUXER	config.mak	/^CONFIG_OMA_DEMUXER=yes$/;"	m
CONFIG_OSS_INDEV	config.h	1037;"	d
CONFIG_OSS_OUTDEV	config.h	1045;"	d
CONFIG_OUTDEVS	config.h	169;"	d
CONFIG_OVERLAY_FILTER	config.h	990;"	d
CONFIG_OVERLAY_FILTER	config.mak	/^CONFIG_OVERLAY_FILTER=yes$/;"	m
CONFIG_PAD_FILTER	config.h	991;"	d
CONFIG_PAD_FILTER	config.mak	/^CONFIG_PAD_FILTER=yes$/;"	m
CONFIG_PAM_DECODER	config.h	343;"	d
CONFIG_PAM_DECODER	config.mak	/^CONFIG_PAM_DECODER=yes$/;"	m
CONFIG_PAM_ENCODER	config.h	571;"	d
CONFIG_PAM_ENCODER	config.mak	/^CONFIG_PAM_ENCODER=yes$/;"	m
CONFIG_PARSERS	config.h	170;"	d
CONFIG_PARSERS	config.mak	/^CONFIG_PARSERS=yes$/;"	m
CONFIG_PBM_DECODER	config.h	344;"	d
CONFIG_PBM_DECODER	config.mak	/^CONFIG_PBM_DECODER=yes$/;"	m
CONFIG_PBM_ENCODER	config.h	572;"	d
CONFIG_PBM_ENCODER	config.mak	/^CONFIG_PBM_ENCODER=yes$/;"	m
CONFIG_PCM_ALAW_DECODER	config.h	469;"	d
CONFIG_PCM_ALAW_DECODER	config.mak	/^CONFIG_PCM_ALAW_DECODER=yes$/;"	m
CONFIG_PCM_ALAW_DEMUXER	config.h	793;"	d
CONFIG_PCM_ALAW_DEMUXER	config.mak	/^CONFIG_PCM_ALAW_DEMUXER=yes$/;"	m
CONFIG_PCM_ALAW_ENCODER	config.h	609;"	d
CONFIG_PCM_ALAW_ENCODER	config.mak	/^CONFIG_PCM_ALAW_ENCODER=yes$/;"	m
CONFIG_PCM_ALAW_MUXER	config.h	924;"	d
CONFIG_PCM_ALAW_MUXER	config.mak	/^CONFIG_PCM_ALAW_MUXER=yes$/;"	m
CONFIG_PCM_BLURAY_DECODER	config.h	470;"	d
CONFIG_PCM_BLURAY_DECODER	config.mak	/^CONFIG_PCM_BLURAY_DECODER=yes$/;"	m
CONFIG_PCM_DVD_DECODER	config.h	471;"	d
CONFIG_PCM_DVD_DECODER	config.mak	/^CONFIG_PCM_DVD_DECODER=yes$/;"	m
CONFIG_PCM_F32BE_DECODER	config.h	472;"	d
CONFIG_PCM_F32BE_DECODER	config.mak	/^CONFIG_PCM_F32BE_DECODER=yes$/;"	m
CONFIG_PCM_F32BE_DEMUXER	config.h	797;"	d
CONFIG_PCM_F32BE_DEMUXER	config.mak	/^CONFIG_PCM_F32BE_DEMUXER=yes$/;"	m
CONFIG_PCM_F32BE_ENCODER	config.h	610;"	d
CONFIG_PCM_F32BE_ENCODER	config.mak	/^CONFIG_PCM_F32BE_ENCODER=yes$/;"	m
CONFIG_PCM_F32BE_MUXER	config.h	928;"	d
CONFIG_PCM_F32BE_MUXER	config.mak	/^CONFIG_PCM_F32BE_MUXER=yes$/;"	m
CONFIG_PCM_F32LE_DECODER	config.h	473;"	d
CONFIG_PCM_F32LE_DECODER	config.mak	/^CONFIG_PCM_F32LE_DECODER=yes$/;"	m
CONFIG_PCM_F32LE_DEMUXER	config.h	798;"	d
CONFIG_PCM_F32LE_DEMUXER	config.mak	/^CONFIG_PCM_F32LE_DEMUXER=yes$/;"	m
CONFIG_PCM_F32LE_ENCODER	config.h	611;"	d
CONFIG_PCM_F32LE_ENCODER	config.mak	/^CONFIG_PCM_F32LE_ENCODER=yes$/;"	m
CONFIG_PCM_F32LE_MUXER	config.h	929;"	d
CONFIG_PCM_F32LE_MUXER	config.mak	/^CONFIG_PCM_F32LE_MUXER=yes$/;"	m
CONFIG_PCM_F64BE_DECODER	config.h	474;"	d
CONFIG_PCM_F64BE_DECODER	config.mak	/^CONFIG_PCM_F64BE_DECODER=yes$/;"	m
CONFIG_PCM_F64BE_DEMUXER	config.h	795;"	d
CONFIG_PCM_F64BE_DEMUXER	config.mak	/^CONFIG_PCM_F64BE_DEMUXER=yes$/;"	m
CONFIG_PCM_F64BE_ENCODER	config.h	612;"	d
CONFIG_PCM_F64BE_ENCODER	config.mak	/^CONFIG_PCM_F64BE_ENCODER=yes$/;"	m
CONFIG_PCM_F64BE_MUXER	config.h	926;"	d
CONFIG_PCM_F64BE_MUXER	config.mak	/^CONFIG_PCM_F64BE_MUXER=yes$/;"	m
CONFIG_PCM_F64LE_DECODER	config.h	475;"	d
CONFIG_PCM_F64LE_DECODER	config.mak	/^CONFIG_PCM_F64LE_DECODER=yes$/;"	m
CONFIG_PCM_F64LE_DEMUXER	config.h	796;"	d
CONFIG_PCM_F64LE_DEMUXER	config.mak	/^CONFIG_PCM_F64LE_DEMUXER=yes$/;"	m
CONFIG_PCM_F64LE_ENCODER	config.h	613;"	d
CONFIG_PCM_F64LE_ENCODER	config.mak	/^CONFIG_PCM_F64LE_ENCODER=yes$/;"	m
CONFIG_PCM_F64LE_MUXER	config.h	927;"	d
CONFIG_PCM_F64LE_MUXER	config.mak	/^CONFIG_PCM_F64LE_MUXER=yes$/;"	m
CONFIG_PCM_LXF_DECODER	config.h	476;"	d
CONFIG_PCM_LXF_DECODER	config.mak	/^CONFIG_PCM_LXF_DECODER=yes$/;"	m
CONFIG_PCM_MULAW_DECODER	config.h	477;"	d
CONFIG_PCM_MULAW_DECODER	config.mak	/^CONFIG_PCM_MULAW_DECODER=yes$/;"	m
CONFIG_PCM_MULAW_DEMUXER	config.h	794;"	d
CONFIG_PCM_MULAW_DEMUXER	config.mak	/^CONFIG_PCM_MULAW_DEMUXER=yes$/;"	m
CONFIG_PCM_MULAW_ENCODER	config.h	614;"	d
CONFIG_PCM_MULAW_ENCODER	config.mak	/^CONFIG_PCM_MULAW_ENCODER=yes$/;"	m
CONFIG_PCM_MULAW_MUXER	config.h	925;"	d
CONFIG_PCM_MULAW_MUXER	config.mak	/^CONFIG_PCM_MULAW_MUXER=yes$/;"	m
CONFIG_PCM_S16BE_DECODER	config.h	479;"	d
CONFIG_PCM_S16BE_DECODER	config.mak	/^CONFIG_PCM_S16BE_DECODER=yes$/;"	m
CONFIG_PCM_S16BE_DEMUXER	config.h	803;"	d
CONFIG_PCM_S16BE_DEMUXER	config.mak	/^CONFIG_PCM_S16BE_DEMUXER=yes$/;"	m
CONFIG_PCM_S16BE_ENCODER	config.h	616;"	d
CONFIG_PCM_S16BE_ENCODER	config.mak	/^CONFIG_PCM_S16BE_ENCODER=yes$/;"	m
CONFIG_PCM_S16BE_MUXER	config.h	934;"	d
CONFIG_PCM_S16BE_MUXER	config.mak	/^CONFIG_PCM_S16BE_MUXER=yes$/;"	m
CONFIG_PCM_S16LE_DECODER	config.h	480;"	d
CONFIG_PCM_S16LE_DECODER	config.mak	/^CONFIG_PCM_S16LE_DECODER=yes$/;"	m
CONFIG_PCM_S16LE_DEMUXER	config.h	804;"	d
CONFIG_PCM_S16LE_DEMUXER	config.mak	/^CONFIG_PCM_S16LE_DEMUXER=yes$/;"	m
CONFIG_PCM_S16LE_ENCODER	config.h	617;"	d
CONFIG_PCM_S16LE_ENCODER	config.mak	/^CONFIG_PCM_S16LE_ENCODER=yes$/;"	m
CONFIG_PCM_S16LE_MUXER	config.h	935;"	d
CONFIG_PCM_S16LE_MUXER	config.mak	/^CONFIG_PCM_S16LE_MUXER=yes$/;"	m
CONFIG_PCM_S16LE_PLANAR_DECODER	config.h	481;"	d
CONFIG_PCM_S16LE_PLANAR_DECODER	config.mak	/^CONFIG_PCM_S16LE_PLANAR_DECODER=yes$/;"	m
CONFIG_PCM_S24BE_DECODER	config.h	482;"	d
CONFIG_PCM_S24BE_DECODER	config.mak	/^CONFIG_PCM_S24BE_DECODER=yes$/;"	m
CONFIG_PCM_S24BE_DEMUXER	config.h	801;"	d
CONFIG_PCM_S24BE_DEMUXER	config.mak	/^CONFIG_PCM_S24BE_DEMUXER=yes$/;"	m
CONFIG_PCM_S24BE_ENCODER	config.h	618;"	d
CONFIG_PCM_S24BE_ENCODER	config.mak	/^CONFIG_PCM_S24BE_ENCODER=yes$/;"	m
CONFIG_PCM_S24BE_MUXER	config.h	932;"	d
CONFIG_PCM_S24BE_MUXER	config.mak	/^CONFIG_PCM_S24BE_MUXER=yes$/;"	m
CONFIG_PCM_S24DAUD_DECODER	config.h	483;"	d
CONFIG_PCM_S24DAUD_DECODER	config.mak	/^CONFIG_PCM_S24DAUD_DECODER=yes$/;"	m
CONFIG_PCM_S24DAUD_ENCODER	config.h	619;"	d
CONFIG_PCM_S24DAUD_ENCODER	config.mak	/^CONFIG_PCM_S24DAUD_ENCODER=yes$/;"	m
CONFIG_PCM_S24LE_DECODER	config.h	484;"	d
CONFIG_PCM_S24LE_DECODER	config.mak	/^CONFIG_PCM_S24LE_DECODER=yes$/;"	m
CONFIG_PCM_S24LE_DEMUXER	config.h	802;"	d
CONFIG_PCM_S24LE_DEMUXER	config.mak	/^CONFIG_PCM_S24LE_DEMUXER=yes$/;"	m
CONFIG_PCM_S24LE_ENCODER	config.h	620;"	d
CONFIG_PCM_S24LE_ENCODER	config.mak	/^CONFIG_PCM_S24LE_ENCODER=yes$/;"	m
CONFIG_PCM_S24LE_MUXER	config.h	933;"	d
CONFIG_PCM_S24LE_MUXER	config.mak	/^CONFIG_PCM_S24LE_MUXER=yes$/;"	m
CONFIG_PCM_S32BE_DECODER	config.h	485;"	d
CONFIG_PCM_S32BE_DECODER	config.mak	/^CONFIG_PCM_S32BE_DECODER=yes$/;"	m
CONFIG_PCM_S32BE_DEMUXER	config.h	799;"	d
CONFIG_PCM_S32BE_DEMUXER	config.mak	/^CONFIG_PCM_S32BE_DEMUXER=yes$/;"	m
CONFIG_PCM_S32BE_ENCODER	config.h	621;"	d
CONFIG_PCM_S32BE_ENCODER	config.mak	/^CONFIG_PCM_S32BE_ENCODER=yes$/;"	m
CONFIG_PCM_S32BE_MUXER	config.h	930;"	d
CONFIG_PCM_S32BE_MUXER	config.mak	/^CONFIG_PCM_S32BE_MUXER=yes$/;"	m
CONFIG_PCM_S32LE_DECODER	config.h	486;"	d
CONFIG_PCM_S32LE_DECODER	config.mak	/^CONFIG_PCM_S32LE_DECODER=yes$/;"	m
CONFIG_PCM_S32LE_DEMUXER	config.h	800;"	d
CONFIG_PCM_S32LE_DEMUXER	config.mak	/^CONFIG_PCM_S32LE_DEMUXER=yes$/;"	m
CONFIG_PCM_S32LE_ENCODER	config.h	622;"	d
CONFIG_PCM_S32LE_ENCODER	config.mak	/^CONFIG_PCM_S32LE_ENCODER=yes$/;"	m
CONFIG_PCM_S32LE_MUXER	config.h	931;"	d
CONFIG_PCM_S32LE_MUXER	config.mak	/^CONFIG_PCM_S32LE_MUXER=yes$/;"	m
CONFIG_PCM_S8_DECODER	config.h	478;"	d
CONFIG_PCM_S8_DECODER	config.mak	/^CONFIG_PCM_S8_DECODER=yes$/;"	m
CONFIG_PCM_S8_DEMUXER	config.h	805;"	d
CONFIG_PCM_S8_DEMUXER	config.mak	/^CONFIG_PCM_S8_DEMUXER=yes$/;"	m
CONFIG_PCM_S8_ENCODER	config.h	615;"	d
CONFIG_PCM_S8_ENCODER	config.mak	/^CONFIG_PCM_S8_ENCODER=yes$/;"	m
CONFIG_PCM_S8_MUXER	config.h	936;"	d
CONFIG_PCM_S8_MUXER	config.mak	/^CONFIG_PCM_S8_MUXER=yes$/;"	m
CONFIG_PCM_U16BE_DECODER	config.h	488;"	d
CONFIG_PCM_U16BE_DECODER	config.mak	/^CONFIG_PCM_U16BE_DECODER=yes$/;"	m
CONFIG_PCM_U16BE_DEMUXER	config.h	810;"	d
CONFIG_PCM_U16BE_DEMUXER	config.mak	/^CONFIG_PCM_U16BE_DEMUXER=yes$/;"	m
CONFIG_PCM_U16BE_ENCODER	config.h	624;"	d
CONFIG_PCM_U16BE_ENCODER	config.mak	/^CONFIG_PCM_U16BE_ENCODER=yes$/;"	m
CONFIG_PCM_U16BE_MUXER	config.h	941;"	d
CONFIG_PCM_U16BE_MUXER	config.mak	/^CONFIG_PCM_U16BE_MUXER=yes$/;"	m
CONFIG_PCM_U16LE_DECODER	config.h	489;"	d
CONFIG_PCM_U16LE_DECODER	config.mak	/^CONFIG_PCM_U16LE_DECODER=yes$/;"	m
CONFIG_PCM_U16LE_DEMUXER	config.h	811;"	d
CONFIG_PCM_U16LE_DEMUXER	config.mak	/^CONFIG_PCM_U16LE_DEMUXER=yes$/;"	m
CONFIG_PCM_U16LE_ENCODER	config.h	625;"	d
CONFIG_PCM_U16LE_ENCODER	config.mak	/^CONFIG_PCM_U16LE_ENCODER=yes$/;"	m
CONFIG_PCM_U16LE_MUXER	config.h	942;"	d
CONFIG_PCM_U16LE_MUXER	config.mak	/^CONFIG_PCM_U16LE_MUXER=yes$/;"	m
CONFIG_PCM_U24BE_DECODER	config.h	490;"	d
CONFIG_PCM_U24BE_DECODER	config.mak	/^CONFIG_PCM_U24BE_DECODER=yes$/;"	m
CONFIG_PCM_U24BE_DEMUXER	config.h	808;"	d
CONFIG_PCM_U24BE_DEMUXER	config.mak	/^CONFIG_PCM_U24BE_DEMUXER=yes$/;"	m
CONFIG_PCM_U24BE_ENCODER	config.h	626;"	d
CONFIG_PCM_U24BE_ENCODER	config.mak	/^CONFIG_PCM_U24BE_ENCODER=yes$/;"	m
CONFIG_PCM_U24BE_MUXER	config.h	939;"	d
CONFIG_PCM_U24BE_MUXER	config.mak	/^CONFIG_PCM_U24BE_MUXER=yes$/;"	m
CONFIG_PCM_U24LE_DECODER	config.h	491;"	d
CONFIG_PCM_U24LE_DECODER	config.mak	/^CONFIG_PCM_U24LE_DECODER=yes$/;"	m
CONFIG_PCM_U24LE_DEMUXER	config.h	809;"	d
CONFIG_PCM_U24LE_DEMUXER	config.mak	/^CONFIG_PCM_U24LE_DEMUXER=yes$/;"	m
CONFIG_PCM_U24LE_ENCODER	config.h	627;"	d
CONFIG_PCM_U24LE_ENCODER	config.mak	/^CONFIG_PCM_U24LE_ENCODER=yes$/;"	m
CONFIG_PCM_U24LE_MUXER	config.h	940;"	d
CONFIG_PCM_U24LE_MUXER	config.mak	/^CONFIG_PCM_U24LE_MUXER=yes$/;"	m
CONFIG_PCM_U32BE_DECODER	config.h	492;"	d
CONFIG_PCM_U32BE_DECODER	config.mak	/^CONFIG_PCM_U32BE_DECODER=yes$/;"	m
CONFIG_PCM_U32BE_DEMUXER	config.h	806;"	d
CONFIG_PCM_U32BE_DEMUXER	config.mak	/^CONFIG_PCM_U32BE_DEMUXER=yes$/;"	m
CONFIG_PCM_U32BE_ENCODER	config.h	628;"	d
CONFIG_PCM_U32BE_ENCODER	config.mak	/^CONFIG_PCM_U32BE_ENCODER=yes$/;"	m
CONFIG_PCM_U32BE_MUXER	config.h	937;"	d
CONFIG_PCM_U32BE_MUXER	config.mak	/^CONFIG_PCM_U32BE_MUXER=yes$/;"	m
CONFIG_PCM_U32LE_DECODER	config.h	493;"	d
CONFIG_PCM_U32LE_DECODER	config.mak	/^CONFIG_PCM_U32LE_DECODER=yes$/;"	m
CONFIG_PCM_U32LE_DEMUXER	config.h	807;"	d
CONFIG_PCM_U32LE_DEMUXER	config.mak	/^CONFIG_PCM_U32LE_DEMUXER=yes$/;"	m
CONFIG_PCM_U32LE_ENCODER	config.h	629;"	d
CONFIG_PCM_U32LE_ENCODER	config.mak	/^CONFIG_PCM_U32LE_ENCODER=yes$/;"	m
CONFIG_PCM_U32LE_MUXER	config.h	938;"	d
CONFIG_PCM_U32LE_MUXER	config.mak	/^CONFIG_PCM_U32LE_MUXER=yes$/;"	m
CONFIG_PCM_U8_DECODER	config.h	487;"	d
CONFIG_PCM_U8_DECODER	config.mak	/^CONFIG_PCM_U8_DECODER=yes$/;"	m
CONFIG_PCM_U8_DEMUXER	config.h	812;"	d
CONFIG_PCM_U8_DEMUXER	config.mak	/^CONFIG_PCM_U8_DEMUXER=yes$/;"	m
CONFIG_PCM_U8_ENCODER	config.h	623;"	d
CONFIG_PCM_U8_ENCODER	config.mak	/^CONFIG_PCM_U8_ENCODER=yes$/;"	m
CONFIG_PCM_U8_MUXER	config.h	943;"	d
CONFIG_PCM_U8_MUXER	config.mak	/^CONFIG_PCM_U8_MUXER=yes$/;"	m
CONFIG_PCM_ZORK_DECODER	config.h	494;"	d
CONFIG_PCM_ZORK_DECODER	config.mak	/^CONFIG_PCM_ZORK_DECODER=yes$/;"	m
CONFIG_PCM_ZORK_ENCODER	config.h	630;"	d
CONFIG_PCM_ZORK_ENCODER	config.mak	/^CONFIG_PCM_ZORK_ENCODER=yes$/;"	m
CONFIG_PCX_DECODER	config.h	345;"	d
CONFIG_PCX_DECODER	config.mak	/^CONFIG_PCX_DECODER=yes$/;"	m
CONFIG_PCX_ENCODER	config.h	573;"	d
CONFIG_PCX_ENCODER	config.mak	/^CONFIG_PCX_ENCODER=yes$/;"	m
CONFIG_PGMYUV_DECODER	config.h	347;"	d
CONFIG_PGMYUV_DECODER	config.mak	/^CONFIG_PGMYUV_DECODER=yes$/;"	m
CONFIG_PGMYUV_ENCODER	config.h	575;"	d
CONFIG_PGMYUV_ENCODER	config.mak	/^CONFIG_PGMYUV_ENCODER=yes$/;"	m
CONFIG_PGM_DECODER	config.h	346;"	d
CONFIG_PGM_DECODER	config.mak	/^CONFIG_PGM_DECODER=yes$/;"	m
CONFIG_PGM_ENCODER	config.h	574;"	d
CONFIG_PGM_ENCODER	config.mak	/^CONFIG_PGM_ENCODER=yes$/;"	m
CONFIG_PGSSUB_DECODER	config.h	531;"	d
CONFIG_PGSSUB_DECODER	config.mak	/^CONFIG_PGSSUB_DECODER=yes$/;"	m
CONFIG_PIC	config.h	232;"	d
CONFIG_PICTOR_DECODER	config.h	348;"	d
CONFIG_PICTOR_DECODER	config.mak	/^CONFIG_PICTOR_DECODER=yes$/;"	m
CONFIG_PIPE_PROTOCOL	config.h	1022;"	d
CONFIG_PIPE_PROTOCOL	config.mak	/^CONFIG_PIPE_PROTOCOL=yes$/;"	m
CONFIG_PIXDESCTEST_FILTER	config.h	992;"	d
CONFIG_PIXDESCTEST_FILTER	config.mak	/^CONFIG_PIXDESCTEST_FILTER=yes$/;"	m
CONFIG_PMP_DEMUXER	config.h	813;"	d
CONFIG_PMP_DEMUXER	config.mak	/^CONFIG_PMP_DEMUXER=yes$/;"	m
CONFIG_PNG_DECODER	config.h	349;"	d
CONFIG_PNG_ENCODER	config.h	576;"	d
CONFIG_PNM_PARSER	config.h	692;"	d
CONFIG_PNM_PARSER	config.mak	/^CONFIG_PNM_PARSER=yes$/;"	m
CONFIG_POSTPROC	config.h	233;"	d
CONFIG_PPM_DECODER	config.h	350;"	d
CONFIG_PPM_DECODER	config.mak	/^CONFIG_PPM_DECODER=yes$/;"	m
CONFIG_PPM_ENCODER	config.h	577;"	d
CONFIG_PPM_ENCODER	config.mak	/^CONFIG_PPM_ENCODER=yes$/;"	m
CONFIG_PROTOCOLS	config.h	171;"	d
CONFIG_PROTOCOLS	config.mak	/^CONFIG_PROTOCOLS=yes$/;"	m
CONFIG_PSP_MUXER	config.h	944;"	d
CONFIG_PSP_MUXER	config.mak	/^CONFIG_PSP_MUXER=yes$/;"	m
CONFIG_PTX_DECODER	config.h	351;"	d
CONFIG_PTX_DECODER	config.mak	/^CONFIG_PTX_DECODER=yes$/;"	m
CONFIG_PVA_DEMUXER	config.h	814;"	d
CONFIG_PVA_DEMUXER	config.mak	/^CONFIG_PVA_DEMUXER=yes$/;"	m
CONFIG_QCELP_DECODER	config.h	449;"	d
CONFIG_QCELP_DECODER	config.mak	/^CONFIG_QCELP_DECODER=yes$/;"	m
CONFIG_QCP_DEMUXER	config.h	815;"	d
CONFIG_QCP_DEMUXER	config.mak	/^CONFIG_QCP_DEMUXER=yes$/;"	m
CONFIG_QDM2_DECODER	config.h	450;"	d
CONFIG_QDM2_DECODER	config.mak	/^CONFIG_QDM2_DECODER=yes$/;"	m
CONFIG_QDRAW_DECODER	config.h	352;"	d
CONFIG_QDRAW_DECODER	config.mak	/^CONFIG_QDRAW_DECODER=yes$/;"	m
CONFIG_QPEG_DECODER	config.h	353;"	d
CONFIG_QPEG_DECODER	config.mak	/^CONFIG_QPEG_DECODER=yes$/;"	m
CONFIG_QTRLE_DECODER	config.h	354;"	d
CONFIG_QTRLE_DECODER	config.mak	/^CONFIG_QTRLE_DECODER=yes$/;"	m
CONFIG_QTRLE_ENCODER	config.h	578;"	d
CONFIG_QTRLE_ENCODER	config.mak	/^CONFIG_QTRLE_ENCODER=yes$/;"	m
CONFIG_R10K_DECODER	config.h	355;"	d
CONFIG_R10K_DECODER	config.mak	/^CONFIG_R10K_DECODER=yes$/;"	m
CONFIG_R210_DECODER	config.h	356;"	d
CONFIG_R210_DECODER	config.mak	/^CONFIG_R210_DECODER=yes$/;"	m
CONFIG_R3D_DEMUXER	config.h	816;"	d
CONFIG_R3D_DEMUXER	config.mak	/^CONFIG_R3D_DEMUXER=yes$/;"	m
CONFIG_RAWVIDEO_DECODER	config.h	357;"	d
CONFIG_RAWVIDEO_DECODER	config.mak	/^CONFIG_RAWVIDEO_DECODER=yes$/;"	m
CONFIG_RAWVIDEO_DEMUXER	config.h	817;"	d
CONFIG_RAWVIDEO_DEMUXER	config.mak	/^CONFIG_RAWVIDEO_DEMUXER=yes$/;"	m
CONFIG_RAWVIDEO_ENCODER	config.h	579;"	d
CONFIG_RAWVIDEO_ENCODER	config.mak	/^CONFIG_RAWVIDEO_ENCODER=yes$/;"	m
CONFIG_RAWVIDEO_MUXER	config.h	945;"	d
CONFIG_RAWVIDEO_MUXER	config.mak	/^CONFIG_RAWVIDEO_MUXER=yes$/;"	m
CONFIG_RA_144_DECODER	config.h	451;"	d
CONFIG_RA_144_DECODER	config.mak	/^CONFIG_RA_144_DECODER=yes$/;"	m
CONFIG_RA_144_ENCODER	config.h	603;"	d
CONFIG_RA_144_ENCODER	config.mak	/^CONFIG_RA_144_ENCODER=yes$/;"	m
CONFIG_RA_288_DECODER	config.h	452;"	d
CONFIG_RA_288_DECODER	config.mak	/^CONFIG_RA_288_DECODER=yes$/;"	m
CONFIG_RDFT	config.h	234;"	d
CONFIG_RDFT	config.mak	/^CONFIG_RDFT=yes$/;"	m
CONFIG_REMOVE_EXTRADATA_BSF	config.h	707;"	d
CONFIG_REMOVE_EXTRADATA_BSF	config.mak	/^CONFIG_REMOVE_EXTRADATA_BSF=yes$/;"	m
CONFIG_RL2_DECODER	config.h	358;"	d
CONFIG_RL2_DECODER	config.mak	/^CONFIG_RL2_DECODER=yes$/;"	m
CONFIG_RL2_DEMUXER	config.h	818;"	d
CONFIG_RL2_DEMUXER	config.mak	/^CONFIG_RL2_DEMUXER=yes$/;"	m
CONFIG_RM_DEMUXER	config.h	819;"	d
CONFIG_RM_DEMUXER	config.mak	/^CONFIG_RM_DEMUXER=yes$/;"	m
CONFIG_RM_MUXER	config.h	946;"	d
CONFIG_RM_MUXER	config.mak	/^CONFIG_RM_MUXER=yes$/;"	m
CONFIG_ROQ_DECODER	config.h	359;"	d
CONFIG_ROQ_DECODER	config.mak	/^CONFIG_ROQ_DECODER=yes$/;"	m
CONFIG_ROQ_DEMUXER	config.h	820;"	d
CONFIG_ROQ_DEMUXER	config.mak	/^CONFIG_ROQ_DEMUXER=yes$/;"	m
CONFIG_ROQ_DPCM_DECODER	config.h	496;"	d
CONFIG_ROQ_DPCM_DECODER	config.mak	/^CONFIG_ROQ_DPCM_DECODER=yes$/;"	m
CONFIG_ROQ_DPCM_ENCODER	config.h	631;"	d
CONFIG_ROQ_DPCM_ENCODER	config.mak	/^CONFIG_ROQ_DPCM_ENCODER=yes$/;"	m
CONFIG_ROQ_ENCODER	config.h	580;"	d
CONFIG_ROQ_ENCODER	config.mak	/^CONFIG_ROQ_ENCODER=yes$/;"	m
CONFIG_ROQ_MUXER	config.h	947;"	d
CONFIG_ROQ_MUXER	config.mak	/^CONFIG_ROQ_MUXER=yes$/;"	m
CONFIG_RPL_DEMUXER	config.h	821;"	d
CONFIG_RPL_DEMUXER	config.mak	/^CONFIG_RPL_DEMUXER=yes$/;"	m
CONFIG_RPZA_DECODER	config.h	360;"	d
CONFIG_RPZA_DECODER	config.mak	/^CONFIG_RPZA_DECODER=yes$/;"	m
CONFIG_RSO_DEMUXER	config.h	822;"	d
CONFIG_RSO_DEMUXER	config.mak	/^CONFIG_RSO_DEMUXER=yes$/;"	m
CONFIG_RSO_MUXER	config.h	948;"	d
CONFIG_RSO_MUXER	config.mak	/^CONFIG_RSO_MUXER=yes$/;"	m
CONFIG_RTMPE_PROTOCOL	config.h	1025;"	d
CONFIG_RTMPE_PROTOCOL	config.mak	/^CONFIG_RTMPE_PROTOCOL=yes$/;"	m
CONFIG_RTMPS_PROTOCOL	config.h	1027;"	d
CONFIG_RTMPS_PROTOCOL	config.mak	/^CONFIG_RTMPS_PROTOCOL=yes$/;"	m
CONFIG_RTMPTE_PROTOCOL	config.h	1026;"	d
CONFIG_RTMPTE_PROTOCOL	config.mak	/^CONFIG_RTMPTE_PROTOCOL=yes$/;"	m
CONFIG_RTMPT_PROTOCOL	config.h	1024;"	d
CONFIG_RTMPT_PROTOCOL	config.mak	/^CONFIG_RTMPT_PROTOCOL=yes$/;"	m
CONFIG_RTMP_PROTOCOL	config.h	1023;"	d
CONFIG_RTPDEC	config.h	235;"	d
CONFIG_RTP_DEMUXER	config.h	823;"	d
CONFIG_RTP_MUXER	config.h	949;"	d
CONFIG_RTP_MUXER	config.mak	/^CONFIG_RTP_MUXER=yes$/;"	m
CONFIG_RTP_PROTOCOL	config.h	1028;"	d
CONFIG_RTSP_DEMUXER	config.h	824;"	d
CONFIG_RTSP_MUXER	config.h	950;"	d
CONFIG_RUNTIME_CPUDETECT	config.h	236;"	d
CONFIG_RV10_DECODER	config.h	361;"	d
CONFIG_RV10_DECODER	config.mak	/^CONFIG_RV10_DECODER=yes$/;"	m
CONFIG_RV10_ENCODER	config.h	581;"	d
CONFIG_RV10_ENCODER	config.mak	/^CONFIG_RV10_ENCODER=yes$/;"	m
CONFIG_RV20_DECODER	config.h	362;"	d
CONFIG_RV20_DECODER	config.mak	/^CONFIG_RV20_DECODER=yes$/;"	m
CONFIG_RV20_ENCODER	config.h	582;"	d
CONFIG_RV20_ENCODER	config.mak	/^CONFIG_RV20_ENCODER=yes$/;"	m
CONFIG_RV30_DECODER	config.h	363;"	d
CONFIG_RV30_DECODER	config.mak	/^CONFIG_RV30_DECODER=yes$/;"	m
CONFIG_RV40_DECODER	config.h	364;"	d
CONFIG_RV40_DECODER	config.mak	/^CONFIG_RV40_DECODER=yes$/;"	m
CONFIG_S302M_DECODER	config.h	365;"	d
CONFIG_S302M_DECODER	config.mak	/^CONFIG_S302M_DECODER=yes$/;"	m
CONFIG_SAP_DEMUXER	config.h	825;"	d
CONFIG_SAP_MUXER	config.h	951;"	d
CONFIG_SCALE_FILTER	config.h	993;"	d
CONFIG_SCALE_FILTER	config.mak	/^CONFIG_SCALE_FILTER=yes$/;"	m
CONFIG_SDL_OUTDEV	config.h	1046;"	d
CONFIG_SDP_DEMUXER	config.h	826;"	d
CONFIG_SEGAFILM_DEMUXER	config.h	827;"	d
CONFIG_SEGAFILM_DEMUXER	config.mak	/^CONFIG_SEGAFILM_DEMUXER=yes$/;"	m
CONFIG_SELECT_FILTER	config.h	994;"	d
CONFIG_SELECT_FILTER	config.mak	/^CONFIG_SELECT_FILTER=yes$/;"	m
CONFIG_SETDAR_FILTER	config.h	995;"	d
CONFIG_SETDAR_FILTER	config.mak	/^CONFIG_SETDAR_FILTER=yes$/;"	m
CONFIG_SETPTS_FILTER	config.h	996;"	d
CONFIG_SETPTS_FILTER	config.mak	/^CONFIG_SETPTS_FILTER=yes$/;"	m
CONFIG_SETSAR_FILTER	config.h	997;"	d
CONFIG_SETSAR_FILTER	config.mak	/^CONFIG_SETSAR_FILTER=yes$/;"	m
CONFIG_SETTB_FILTER	config.h	998;"	d
CONFIG_SETTB_FILTER	config.mak	/^CONFIG_SETTB_FILTER=yes$/;"	m
CONFIG_SGI_DECODER	config.h	366;"	d
CONFIG_SGI_DECODER	config.mak	/^CONFIG_SGI_DECODER=yes$/;"	m
CONFIG_SGI_ENCODER	config.h	583;"	d
CONFIG_SGI_ENCODER	config.mak	/^CONFIG_SGI_ENCODER=yes$/;"	m
CONFIG_SHARED	config.h	237;"	d
CONFIG_SHORTEN_DECODER	config.h	453;"	d
CONFIG_SHORTEN_DECODER	config.mak	/^CONFIG_SHORTEN_DECODER=yes$/;"	m
CONFIG_SHORTEN_DEMUXER	config.h	828;"	d
CONFIG_SHORTEN_DEMUXER	config.mak	/^CONFIG_SHORTEN_DEMUXER=yes$/;"	m
CONFIG_SHOWINFO_FILTER	config.h	999;"	d
CONFIG_SHOWINFO_FILTER	config.mak	/^CONFIG_SHOWINFO_FILTER=yes$/;"	m
CONFIG_SIFF_DEMUXER	config.h	829;"	d
CONFIG_SIFF_DEMUXER	config.mak	/^CONFIG_SIFF_DEMUXER=yes$/;"	m
CONFIG_SINEWIN	config.h	238;"	d
CONFIG_SINEWIN	config.mak	/^CONFIG_SINEWIN=yes$/;"	m
CONFIG_SIPR_DECODER	config.h	454;"	d
CONFIG_SIPR_DECODER	config.mak	/^CONFIG_SIPR_DECODER=yes$/;"	m
CONFIG_SLICIFY_FILTER	config.h	1000;"	d
CONFIG_SLICIFY_FILTER	config.mak	/^CONFIG_SLICIFY_FILTER=yes$/;"	m
CONFIG_SMACKAUD_DECODER	config.h	455;"	d
CONFIG_SMACKAUD_DECODER	config.mak	/^CONFIG_SMACKAUD_DECODER=yes$/;"	m
CONFIG_SMACKER_DECODER	config.h	367;"	d
CONFIG_SMACKER_DECODER	config.mak	/^CONFIG_SMACKER_DECODER=yes$/;"	m
CONFIG_SMACKER_DEMUXER	config.h	830;"	d
CONFIG_SMACKER_DEMUXER	config.mak	/^CONFIG_SMACKER_DEMUXER=yes$/;"	m
CONFIG_SMALL	config.h	239;"	d
CONFIG_SMC_DECODER	config.h	368;"	d
CONFIG_SMC_DECODER	config.mak	/^CONFIG_SMC_DECODER=yes$/;"	m
CONFIG_SNDIO_INDEV	config.h	1038;"	d
CONFIG_SNDIO_OUTDEV	config.h	1047;"	d
CONFIG_SNOW_DECODER	config.h	369;"	d
CONFIG_SNOW_DECODER	config.mak	/^CONFIG_SNOW_DECODER=yes$/;"	m
CONFIG_SNOW_ENCODER	config.h	584;"	d
CONFIG_SNOW_ENCODER	config.mak	/^CONFIG_SNOW_ENCODER=yes$/;"	m
CONFIG_SOL_DEMUXER	config.h	831;"	d
CONFIG_SOL_DEMUXER	config.mak	/^CONFIG_SOL_DEMUXER=yes$/;"	m
CONFIG_SOL_DPCM_DECODER	config.h	497;"	d
CONFIG_SOL_DPCM_DECODER	config.mak	/^CONFIG_SOL_DPCM_DECODER=yes$/;"	m
CONFIG_SONIC_DECODER	config.h	456;"	d
CONFIG_SONIC_DECODER	config.mak	/^CONFIG_SONIC_DECODER=yes$/;"	m
CONFIG_SONIC_ENCODER	config.h	604;"	d
CONFIG_SONIC_ENCODER	config.mak	/^CONFIG_SONIC_ENCODER=yes$/;"	m
CONFIG_SONIC_LS_ENCODER	config.h	605;"	d
CONFIG_SONIC_LS_ENCODER	config.mak	/^CONFIG_SONIC_LS_ENCODER=yes$/;"	m
CONFIG_SOX_DEMUXER	config.h	832;"	d
CONFIG_SOX_DEMUXER	config.mak	/^CONFIG_SOX_DEMUXER=yes$/;"	m
CONFIG_SOX_MUXER	config.h	952;"	d
CONFIG_SOX_MUXER	config.mak	/^CONFIG_SOX_MUXER=yes$/;"	m
CONFIG_SP5X_DECODER	config.h	370;"	d
CONFIG_SP5X_DECODER	config.mak	/^CONFIG_SP5X_DECODER=yes$/;"	m
CONFIG_SPDIF_DEMUXER	config.h	833;"	d
CONFIG_SPDIF_DEMUXER	config.mak	/^CONFIG_SPDIF_DEMUXER=yes$/;"	m
CONFIG_SPDIF_MUXER	config.h	953;"	d
CONFIG_SPDIF_MUXER	config.mak	/^CONFIG_SPDIF_MUXER=yes$/;"	m
CONFIG_SPLIT_FILTER	config.h	1001;"	d
CONFIG_SPLIT_FILTER	config.mak	/^CONFIG_SPLIT_FILTER=yes$/;"	m
CONFIG_SRAM	config.h	240;"	d
CONFIG_SRT_DECODER	config.h	532;"	d
CONFIG_SRT_DECODER	config.mak	/^CONFIG_SRT_DECODER=yes$/;"	m
CONFIG_SRT_DEMUXER	config.h	834;"	d
CONFIG_SRT_DEMUXER	config.mak	/^CONFIG_SRT_DEMUXER=yes$/;"	m
CONFIG_SRT_ENCODER	config.h	643;"	d
CONFIG_SRT_ENCODER	config.mak	/^CONFIG_SRT_ENCODER=yes$/;"	m
CONFIG_SRT_MUXER	config.h	954;"	d
CONFIG_SRT_MUXER	config.mak	/^CONFIG_SRT_MUXER=yes$/;"	m
CONFIG_STATIC	config.h	241;"	d
CONFIG_STATIC	config.mak	/^CONFIG_STATIC=yes$/;"	m
CONFIG_STR_DEMUXER	config.h	835;"	d
CONFIG_STR_DEMUXER	config.mak	/^CONFIG_STR_DEMUXER=yes$/;"	m
CONFIG_SUNRAST_DECODER	config.h	371;"	d
CONFIG_SUNRAST_DECODER	config.mak	/^CONFIG_SUNRAST_DECODER=yes$/;"	m
CONFIG_SVQ1_DECODER	config.h	372;"	d
CONFIG_SVQ1_DECODER	config.mak	/^CONFIG_SVQ1_DECODER=yes$/;"	m
CONFIG_SVQ1_ENCODER	config.h	585;"	d
CONFIG_SVQ1_ENCODER	config.mak	/^CONFIG_SVQ1_ENCODER=yes$/;"	m
CONFIG_SVQ3_DECODER	config.h	373;"	d
CONFIG_SVQ3_DECODER	config.mak	/^CONFIG_SVQ3_DECODER=yes$/;"	m
CONFIG_SWF_DEMUXER	config.h	836;"	d
CONFIG_SWF_DEMUXER	config.mak	/^CONFIG_SWF_DEMUXER=yes$/;"	m
CONFIG_SWF_MUXER	config.h	955;"	d
CONFIG_SWF_MUXER	config.mak	/^CONFIG_SWF_MUXER=yes$/;"	m
CONFIG_SWSCALE	config.h	242;"	d
CONFIG_SWSCALE	config.mak	/^CONFIG_SWSCALE=yes$/;"	m
CONFIG_SWSCALE_ALPHA	config.h	243;"	d
CONFIG_SWSCALE_ALPHA	config.mak	/^CONFIG_SWSCALE_ALPHA=yes$/;"	m
CONFIG_TARGA_DECODER	config.h	374;"	d
CONFIG_TARGA_DECODER	config.mak	/^CONFIG_TARGA_DECODER=yes$/;"	m
CONFIG_TARGA_ENCODER	config.h	586;"	d
CONFIG_TARGA_ENCODER	config.mak	/^CONFIG_TARGA_ENCODER=yes$/;"	m
CONFIG_TCP_PROTOCOL	config.h	1029;"	d
CONFIG_TEXT2MOVSUB_BSF	config.h	708;"	d
CONFIG_TEXT2MOVSUB_BSF	config.mak	/^CONFIG_TEXT2MOVSUB_BSF=yes$/;"	m
CONFIG_TG2_MUXER	config.h	956;"	d
CONFIG_TG2_MUXER	config.mak	/^CONFIG_TG2_MUXER=yes$/;"	m
CONFIG_TGP_MUXER	config.h	957;"	d
CONFIG_TGP_MUXER	config.mak	/^CONFIG_TGP_MUXER=yes$/;"	m
CONFIG_THEORA_DECODER	config.h	375;"	d
CONFIG_THEORA_DECODER	config.mak	/^CONFIG_THEORA_DECODER=yes$/;"	m
CONFIG_THP_DECODER	config.h	376;"	d
CONFIG_THP_DECODER	config.mak	/^CONFIG_THP_DECODER=yes$/;"	m
CONFIG_THP_DEMUXER	config.h	837;"	d
CONFIG_THP_DEMUXER	config.mak	/^CONFIG_THP_DEMUXER=yes$/;"	m
CONFIG_TIERTEXSEQVIDEO_DECODER	config.h	377;"	d
CONFIG_TIERTEXSEQVIDEO_DECODER	config.mak	/^CONFIG_TIERTEXSEQVIDEO_DECODER=yes$/;"	m
CONFIG_TIERTEXSEQ_DEMUXER	config.h	838;"	d
CONFIG_TIERTEXSEQ_DEMUXER	config.mak	/^CONFIG_TIERTEXSEQ_DEMUXER=yes$/;"	m
CONFIG_TIFF_DECODER	config.h	378;"	d
CONFIG_TIFF_DECODER	config.mak	/^CONFIG_TIFF_DECODER=yes$/;"	m
CONFIG_TIFF_ENCODER	config.h	587;"	d
CONFIG_TIFF_ENCODER	config.mak	/^CONFIG_TIFF_ENCODER=yes$/;"	m
CONFIG_TMV_DECODER	config.h	379;"	d
CONFIG_TMV_DECODER	config.mak	/^CONFIG_TMV_DECODER=yes$/;"	m
CONFIG_TMV_DEMUXER	config.h	839;"	d
CONFIG_TMV_DEMUXER	config.mak	/^CONFIG_TMV_DEMUXER=yes$/;"	m
CONFIG_TRANSPOSE_FILTER	config.h	1002;"	d
CONFIG_TRANSPOSE_FILTER	config.mak	/^CONFIG_TRANSPOSE_FILTER=yes$/;"	m
CONFIG_TRUEHD_DECODER	config.h	457;"	d
CONFIG_TRUEHD_DECODER	config.mak	/^CONFIG_TRUEHD_DECODER=yes$/;"	m
CONFIG_TRUEHD_DEMUXER	config.h	840;"	d
CONFIG_TRUEHD_DEMUXER	config.mak	/^CONFIG_TRUEHD_DEMUXER=yes$/;"	m
CONFIG_TRUEHD_MUXER	config.h	958;"	d
CONFIG_TRUEHD_MUXER	config.mak	/^CONFIG_TRUEHD_MUXER=yes$/;"	m
CONFIG_TRUEMOTION1_DECODER	config.h	380;"	d
CONFIG_TRUEMOTION1_DECODER	config.mak	/^CONFIG_TRUEMOTION1_DECODER=yes$/;"	m
CONFIG_TRUEMOTION2_DECODER	config.h	381;"	d
CONFIG_TRUEMOTION2_DECODER	config.mak	/^CONFIG_TRUEMOTION2_DECODER=yes$/;"	m
CONFIG_TRUESPEECH_DECODER	config.h	458;"	d
CONFIG_TRUESPEECH_DECODER	config.mak	/^CONFIG_TRUESPEECH_DECODER=yes$/;"	m
CONFIG_TSCC_DECODER	config.h	382;"	d
CONFIG_TTA_DECODER	config.h	459;"	d
CONFIG_TTA_DECODER	config.mak	/^CONFIG_TTA_DECODER=yes$/;"	m
CONFIG_TTA_DEMUXER	config.h	841;"	d
CONFIG_TTA_DEMUXER	config.mak	/^CONFIG_TTA_DEMUXER=yes$/;"	m
CONFIG_TTY_DEMUXER	config.h	843;"	d
CONFIG_TTY_DEMUXER	config.mak	/^CONFIG_TTY_DEMUXER=yes$/;"	m
CONFIG_TWINVQ_DECODER	config.h	460;"	d
CONFIG_TWINVQ_DECODER	config.mak	/^CONFIG_TWINVQ_DECODER=yes$/;"	m
CONFIG_TXD_DECODER	config.h	383;"	d
CONFIG_TXD_DECODER	config.mak	/^CONFIG_TXD_DECODER=yes$/;"	m
CONFIG_TXD_DEMUXER	config.h	842;"	d
CONFIG_TXD_DEMUXER	config.mak	/^CONFIG_TXD_DEMUXER=yes$/;"	m
CONFIG_UDP_PROTOCOL	config.h	1030;"	d
CONFIG_ULTI_DECODER	config.h	384;"	d
CONFIG_ULTI_DECODER	config.mak	/^CONFIG_ULTI_DECODER=yes$/;"	m
CONFIG_UNSHARP_FILTER	config.h	1003;"	d
CONFIG_UNSHARP_FILTER	config.mak	/^CONFIG_UNSHARP_FILTER=yes$/;"	m
CONFIG_V210X_DECODER	config.h	386;"	d
CONFIG_V210X_DECODER	config.mak	/^CONFIG_V210X_DECODER=yes$/;"	m
CONFIG_V210_DECODER	config.h	385;"	d
CONFIG_V210_DECODER	config.mak	/^CONFIG_V210_DECODER=yes$/;"	m
CONFIG_V210_ENCODER	config.h	588;"	d
CONFIG_V210_ENCODER	config.mak	/^CONFIG_V210_ENCODER=yes$/;"	m
CONFIG_V4L2_INDEV	config.h	1039;"	d
CONFIG_V4L_INDEV	config.h	1040;"	d
CONFIG_VAAPI	config.h	244;"	d
CONFIG_VB_DECODER	config.h	387;"	d
CONFIG_VB_DECODER	config.mak	/^CONFIG_VB_DECODER=yes$/;"	m
CONFIG_VC1T_DEMUXER	config.h	845;"	d
CONFIG_VC1T_DEMUXER	config.mak	/^CONFIG_VC1T_DEMUXER=yes$/;"	m
CONFIG_VC1T_MUXER	config.h	959;"	d
CONFIG_VC1T_MUXER	config.mak	/^CONFIG_VC1T_MUXER=yes$/;"	m
CONFIG_VC1_CRYSTALHD_DECODER	config.h	389;"	d
CONFIG_VC1_DECODER	config.h	388;"	d
CONFIG_VC1_DECODER	config.mak	/^CONFIG_VC1_DECODER=yes$/;"	m
CONFIG_VC1_DEMUXER	config.h	844;"	d
CONFIG_VC1_DEMUXER	config.mak	/^CONFIG_VC1_DEMUXER=yes$/;"	m
CONFIG_VC1_DXVA2_HWACCEL	config.h	670;"	d
CONFIG_VC1_PARSER	config.h	693;"	d
CONFIG_VC1_PARSER	config.mak	/^CONFIG_VC1_PARSER=yes$/;"	m
CONFIG_VC1_VAAPI_HWACCEL	config.h	671;"	d
CONFIG_VC1_VDPAU_DECODER	config.h	390;"	d
CONFIG_VCR1_DECODER	config.h	391;"	d
CONFIG_VCR1_DECODER	config.mak	/^CONFIG_VCR1_DECODER=yes$/;"	m
CONFIG_VCR1_ENCODER	libavcodec/vcr1.c	34;"	d	file:
CONFIG_VCR1_ENCODER	libavcodec/vcr1.c	35;"	d	file:
CONFIG_VDPAU	config.h	245;"	d
CONFIG_VERSION3	config.h	246;"	d
CONFIG_VFLIP_FILTER	config.h	1004;"	d
CONFIG_VFLIP_FILTER	config.mak	/^CONFIG_VFLIP_FILTER=yes$/;"	m
CONFIG_VFWCAP_INDEV	config.h	1041;"	d
CONFIG_VMDAUDIO_DECODER	config.h	461;"	d
CONFIG_VMDAUDIO_DECODER	config.mak	/^CONFIG_VMDAUDIO_DECODER=yes$/;"	m
CONFIG_VMDVIDEO_DECODER	config.h	392;"	d
CONFIG_VMDVIDEO_DECODER	config.mak	/^CONFIG_VMDVIDEO_DECODER=yes$/;"	m
CONFIG_VMD_DEMUXER	config.h	846;"	d
CONFIG_VMD_DEMUXER	config.mak	/^CONFIG_VMD_DEMUXER=yes$/;"	m
CONFIG_VMNC_DECODER	config.h	393;"	d
CONFIG_VMNC_DECODER	config.mak	/^CONFIG_VMNC_DECODER=yes$/;"	m
CONFIG_VOC_DEMUXER	config.h	847;"	d
CONFIG_VOC_DEMUXER	config.mak	/^CONFIG_VOC_DEMUXER=yes$/;"	m
CONFIG_VOC_MUXER	config.h	960;"	d
CONFIG_VOC_MUXER	config.mak	/^CONFIG_VOC_MUXER=yes$/;"	m
CONFIG_VORBIS_DECODER	config.h	462;"	d
CONFIG_VORBIS_DECODER	config.mak	/^CONFIG_VORBIS_DECODER=yes$/;"	m
CONFIG_VORBIS_ENCODER	config.h	606;"	d
CONFIG_VORBIS_ENCODER	config.mak	/^CONFIG_VORBIS_ENCODER=yes$/;"	m
CONFIG_VP3_DECODER	config.h	394;"	d
CONFIG_VP3_DECODER	config.mak	/^CONFIG_VP3_DECODER=yes$/;"	m
CONFIG_VP3_PARSER	config.h	694;"	d
CONFIG_VP3_PARSER	config.mak	/^CONFIG_VP3_PARSER=yes$/;"	m
CONFIG_VP5_DECODER	config.h	395;"	d
CONFIG_VP5_DECODER	config.mak	/^CONFIG_VP5_DECODER=yes$/;"	m
CONFIG_VP6A_DECODER	config.h	397;"	d
CONFIG_VP6A_DECODER	config.mak	/^CONFIG_VP6A_DECODER=yes$/;"	m
CONFIG_VP6F_DECODER	config.h	398;"	d
CONFIG_VP6F_DECODER	config.mak	/^CONFIG_VP6F_DECODER=yes$/;"	m
CONFIG_VP6_DECODER	config.h	396;"	d
CONFIG_VP6_DECODER	config.mak	/^CONFIG_VP6_DECODER=yes$/;"	m
CONFIG_VP8_DECODER	config.h	399;"	d
CONFIG_VP8_DECODER	config.mak	/^CONFIG_VP8_DECODER=yes$/;"	m
CONFIG_VP8_PARSER	config.h	695;"	d
CONFIG_VP8_PARSER	config.mak	/^CONFIG_VP8_PARSER=yes$/;"	m
CONFIG_VQA_DECODER	config.h	400;"	d
CONFIG_VQA_DECODER	config.mak	/^CONFIG_VQA_DECODER=yes$/;"	m
CONFIG_VQF_DEMUXER	config.h	848;"	d
CONFIG_VQF_DEMUXER	config.mak	/^CONFIG_VQF_DEMUXER=yes$/;"	m
CONFIG_W64_DEMUXER	config.h	849;"	d
CONFIG_W64_DEMUXER	config.mak	/^CONFIG_W64_DEMUXER=yes$/;"	m
CONFIG_WAVPACK_DECODER	config.h	463;"	d
CONFIG_WAVPACK_DECODER	config.mak	/^CONFIG_WAVPACK_DECODER=yes$/;"	m
CONFIG_WAV_DEMUXER	config.h	850;"	d
CONFIG_WAV_DEMUXER	config.mak	/^CONFIG_WAV_DEMUXER=yes$/;"	m
CONFIG_WAV_MUXER	config.h	961;"	d
CONFIG_WAV_MUXER	config.mak	/^CONFIG_WAV_MUXER=yes$/;"	m
CONFIG_WC3_DEMUXER	config.h	851;"	d
CONFIG_WC3_DEMUXER	config.mak	/^CONFIG_WC3_DEMUXER=yes$/;"	m
CONFIG_WEBM_MUXER	config.h	962;"	d
CONFIG_WEBM_MUXER	config.mak	/^CONFIG_WEBM_MUXER=yes$/;"	m
CONFIG_WMAPRO_DECODER	config.h	464;"	d
CONFIG_WMAPRO_DECODER	config.mak	/^CONFIG_WMAPRO_DECODER=yes$/;"	m
CONFIG_WMAV1_DECODER	config.h	465;"	d
CONFIG_WMAV1_DECODER	config.mak	/^CONFIG_WMAV1_DECODER=yes$/;"	m
CONFIG_WMAV1_ENCODER	config.h	607;"	d
CONFIG_WMAV1_ENCODER	config.mak	/^CONFIG_WMAV1_ENCODER=yes$/;"	m
CONFIG_WMAV2_DECODER	config.h	466;"	d
CONFIG_WMAV2_DECODER	config.mak	/^CONFIG_WMAV2_DECODER=yes$/;"	m
CONFIG_WMAV2_ENCODER	config.h	608;"	d
CONFIG_WMAV2_ENCODER	config.mak	/^CONFIG_WMAV2_ENCODER=yes$/;"	m
CONFIG_WMAVOICE_DECODER	config.h	467;"	d
CONFIG_WMAVOICE_DECODER	config.mak	/^CONFIG_WMAVOICE_DECODER=yes$/;"	m
CONFIG_WMV1_DECODER	config.h	401;"	d
CONFIG_WMV1_DECODER	config.mak	/^CONFIG_WMV1_DECODER=yes$/;"	m
CONFIG_WMV1_ENCODER	config.h	589;"	d
CONFIG_WMV1_ENCODER	config.mak	/^CONFIG_WMV1_ENCODER=yes$/;"	m
CONFIG_WMV2_DECODER	config.h	402;"	d
CONFIG_WMV2_DECODER	config.mak	/^CONFIG_WMV2_DECODER=yes$/;"	m
CONFIG_WMV2_ENCODER	config.h	590;"	d
CONFIG_WMV2_ENCODER	config.mak	/^CONFIG_WMV2_ENCODER=yes$/;"	m
CONFIG_WMV3_CRYSTALHD_DECODER	config.h	404;"	d
CONFIG_WMV3_DECODER	config.h	403;"	d
CONFIG_WMV3_DECODER	config.mak	/^CONFIG_WMV3_DECODER=yes$/;"	m
CONFIG_WMV3_DXVA2_HWACCEL	config.h	672;"	d
CONFIG_WMV3_VAAPI_HWACCEL	config.h	673;"	d
CONFIG_WMV3_VDPAU_DECODER	config.h	405;"	d
CONFIG_WNV1_DECODER	config.h	406;"	d
CONFIG_WNV1_DECODER	config.mak	/^CONFIG_WNV1_DECODER=yes$/;"	m
CONFIG_WSAUD_DEMUXER	config.h	852;"	d
CONFIG_WSAUD_DEMUXER	config.mak	/^CONFIG_WSAUD_DEMUXER=yes$/;"	m
CONFIG_WSVQA_DEMUXER	config.h	853;"	d
CONFIG_WSVQA_DEMUXER	config.mak	/^CONFIG_WSVQA_DEMUXER=yes$/;"	m
CONFIG_WS_SND1_DECODER	config.h	468;"	d
CONFIG_WS_SND1_DECODER	config.mak	/^CONFIG_WS_SND1_DECODER=yes$/;"	m
CONFIG_WTV_DEMUXER	config.h	854;"	d
CONFIG_WTV_DEMUXER	config.mak	/^CONFIG_WTV_DEMUXER=yes$/;"	m
CONFIG_WV_DEMUXER	config.h	855;"	d
CONFIG_WV_DEMUXER	config.mak	/^CONFIG_WV_DEMUXER=yes$/;"	m
CONFIG_X11GRAB	config.h	247;"	d
CONFIG_X11_GRAB_DEVICE_INDEV	config.h	1042;"	d
CONFIG_XAN_DPCM_DECODER	config.h	498;"	d
CONFIG_XAN_DPCM_DECODER	config.mak	/^CONFIG_XAN_DPCM_DECODER=yes$/;"	m
CONFIG_XAN_WC3_DECODER	config.h	407;"	d
CONFIG_XAN_WC3_DECODER	config.mak	/^CONFIG_XAN_WC3_DECODER=yes$/;"	m
CONFIG_XAN_WC4_DECODER	config.h	408;"	d
CONFIG_XAN_WC4_DECODER	config.mak	/^CONFIG_XAN_WC4_DECODER=yes$/;"	m
CONFIG_XA_DEMUXER	config.h	856;"	d
CONFIG_XA_DEMUXER	config.mak	/^CONFIG_XA_DEMUXER=yes$/;"	m
CONFIG_XL_DECODER	config.h	409;"	d
CONFIG_XL_DECODER	config.mak	/^CONFIG_XL_DECODER=yes$/;"	m
CONFIG_XSUB_DECODER	config.h	533;"	d
CONFIG_XSUB_DECODER	config.mak	/^CONFIG_XSUB_DECODER=yes$/;"	m
CONFIG_XSUB_ENCODER	config.h	644;"	d
CONFIG_XSUB_ENCODER	config.mak	/^CONFIG_XSUB_ENCODER=yes$/;"	m
CONFIG_XWMA_DEMUXER	config.h	857;"	d
CONFIG_XWMA_DEMUXER	config.mak	/^CONFIG_XWMA_DEMUXER=yes$/;"	m
CONFIG_YADIF_FILTER	config.h	1005;"	d
CONFIG_YOP_DECODER	config.h	410;"	d
CONFIG_YOP_DECODER	config.mak	/^CONFIG_YOP_DECODER=yes$/;"	m
CONFIG_YOP_DEMUXER	config.h	858;"	d
CONFIG_YOP_DEMUXER	config.mak	/^CONFIG_YOP_DEMUXER=yes$/;"	m
CONFIG_YUV4MPEGPIPE_DEMUXER	config.h	859;"	d
CONFIG_YUV4MPEGPIPE_DEMUXER	config.mak	/^CONFIG_YUV4MPEGPIPE_DEMUXER=yes$/;"	m
CONFIG_YUV4MPEGPIPE_MUXER	config.h	963;"	d
CONFIG_YUV4MPEGPIPE_MUXER	config.mak	/^CONFIG_YUV4MPEGPIPE_MUXER=yes$/;"	m
CONFIG_ZLIB	config.h	248;"	d
CONFIG_ZLIB_DECODER	config.h	411;"	d
CONFIG_ZLIB_ENCODER	config.h	591;"	d
CONFIG_ZMBV_DECODER	config.h	412;"	d
CONFIG_ZMBV_ENCODER	config.h	592;"	d
CONST_1	libavcodec/sparc/dsputil_vis.c	88;"	d	file:
CONST_1024	libavcodec/sparc/dsputil_vis.c	96;"	d	file:
CONST_128	libavcodec/sparc/dsputil_vis.c	93;"	d	file:
CONST_2	libavcodec/sparc/dsputil_vis.c	89;"	d	file:
CONST_256	libavcodec/sparc/dsputil_vis.c	94;"	d	file:
CONST_3	libavcodec/sparc/dsputil_vis.c	90;"	d	file:
CONST_512	libavcodec/sparc/dsputil_vis.c	95;"	d	file:
CONST_6	libavcodec/sparc/dsputil_vis.c	91;"	d	file:
CONST_BITS	libavcodec/jfdctfst.c	107;"	d	file:
CONST_BITS	libavcodec/jfdctfst.c	331;"	d	file:
CONST_BITS	libavcodec/jfdctint.c	126;"	d	file:
CONST_BITS	libavcodec/jrevdct.c	1157;"	d	file:
CONST_BITS	libavcodec/jrevdct.c	81;"	d	file:
CONST_SCALE	libavcodec/jrevdct.c	136;"	d	file:
CONTEXT_SIZE	libavcodec/ffv1.c	38;"	d	file:
CONTROL_ERROR	libavfilter/libmpcodecs/mpc_info.h	40;"	d
CONTROL_FALSE	libavfilter/libmpcodecs/mpc_info.h	38;"	d
CONTROL_NA	libavfilter/libmpcodecs/mpc_info.h	41;"	d
CONTROL_OK	libavfilter/libmpcodecs/mpc_info.h	36;"	d
CONTROL_TRUE	libavfilter/libmpcodecs/mpc_info.h	37;"	d
CONTROL_UNKNOWN	libavfilter/libmpcodecs/mpc_info.h	39;"	d
CONV	libavcodec/audioconvert.c	125;"	d	file:
CONV_FLT	libavcodec/iirfilter.c	208;"	d	file:
CONV_IS	libswscale/swscale_unscaled.c	277;"	d	file:
CONV_S16	libavcodec/iirfilter.c	206;"	d	file:
COOKContext	libavcodec/cook.c	/^} COOKContext;$/;"	t	typeref:struct:cook	file:
COOKSubpacket	libavcodec/cook.c	/^} COOKSubpacket;$/;"	t	typeref:struct:__anon230	file:
COPY	libavcodec/bitstream.c	290;"	d	file:
COPY	libavcodec/mpegvideo.c	424;"	d	file:
COPY	libavcodec/mpegvideo.c	447;"	d	file:
COPY	libavcodec/mpegvideo_enc.c	210;"	d	file:
COPY	libavcodec/mpegvideo_enc.c	223;"	d	file:
COPY	libavcodec/ppc/idct_altivec.c	168;"	d	file:
COPY2	libavutil/lzo.c	74;"	d	file:
COPY2	libavutil/lzo.c	77;"	d	file:
COPY2	libavutil/lzo.c	80;"	d	file:
COPY3_IF_LT	libavcodec/mathops.h	131;"	d
COPY3_IF_LT	libavcodec/x86/mathops.h	91;"	d
COPY4	libavutil/lzo.c	75;"	d	file:
COPY4	libavutil/lzo.c	78;"	d	file:
COPY4	libavutil/lzo.c	81;"	d	file:
COPY_BUFFER_SIZE	tools/qt-faststart.c	75;"	d	file:
COPY_UP	libswscale/swscale_unscaled.c	486;"	d	file:
CORE	libavutil/md5.c	74;"	d	file:
CORE_VO_TYPE	libavcodec/mpeg4video.h	38;"	d
COS	libavcodec/dct.c	39;"	d	file:
COS0_0	libavcodec/dct32.c	42;"	d	file:
COS0_1	libavcodec/dct32.c	43;"	d	file:
COS0_10	libavcodec/dct32.c	52;"	d	file:
COS0_11	libavcodec/dct32.c	53;"	d	file:
COS0_12	libavcodec/dct32.c	54;"	d	file:
COS0_13	libavcodec/dct32.c	55;"	d	file:
COS0_14	libavcodec/dct32.c	56;"	d	file:
COS0_15	libavcodec/dct32.c	57;"	d	file:
COS0_2	libavcodec/dct32.c	44;"	d	file:
COS0_3	libavcodec/dct32.c	45;"	d	file:
COS0_4	libavcodec/dct32.c	46;"	d	file:
COS0_5	libavcodec/dct32.c	47;"	d	file:
COS0_6	libavcodec/dct32.c	48;"	d	file:
COS0_7	libavcodec/dct32.c	49;"	d	file:
COS0_8	libavcodec/dct32.c	50;"	d	file:
COS0_9	libavcodec/dct32.c	51;"	d	file:
COS1_0	libavcodec/dct32.c	59;"	d	file:
COS1_1	libavcodec/dct32.c	60;"	d	file:
COS1_2	libavcodec/dct32.c	61;"	d	file:
COS1_3	libavcodec/dct32.c	62;"	d	file:
COS1_4	libavcodec/dct32.c	63;"	d	file:
COS1_5	libavcodec/dct32.c	64;"	d	file:
COS1_6	libavcodec/dct32.c	65;"	d	file:
COS1_7	libavcodec/dct32.c	66;"	d	file:
COS2_0	libavcodec/dct32.c	68;"	d	file:
COS2_1	libavcodec/dct32.c	69;"	d	file:
COS2_2	libavcodec/dct32.c	70;"	d	file:
COS2_3	libavcodec/dct32.c	71;"	d	file:
COS3_0	libavcodec/dct32.c	73;"	d	file:
COS3_1	libavcodec/dct32.c	74;"	d	file:
COS4_0	libavcodec/dct32.c	76;"	d	file:
COST	libavcodec/ffv1.c	892;"	d	file:
COST2	libavcodec/ffv1.c	896;"	d	file:
COSTABLE	libavcodec/fft.h	100;"	d
COSTABLE_CONST	libavcodec/fft.h	95;"	d
COSTABLE_CONST	libavcodec/fft.h	97;"	d
COS_4_16	libavcodec/ps2/idct_mmi.c	52;"	d	file:
COS_TABLE_BITS	tests/audiogen.c	47;"	d	file:
COTypes	libavcodec/vc1.h	/^enum COTypes {$/;"	g
COUNT	libavcodec/h264.c	4036;"	d	file:
CP	config.mak	/^CP=cp -p$/;"	m
CPAIR	libavcodec/smc.c	38;"	d	file:
CPL0_TAG	libavcodec/vqavideo.c	89;"	d	file:
CPLZ_TAG	libavcodec/vqavideo.c	90;"	d	file:
CPL_CH	libavcodec/ac3.h	32;"	d
CPPFLAGS	common.mak	/^CPPFLAGS := $(IFLAGS) $(CPPFLAGS)$/;"	m
CPPFLAGS	config.mak	/^CPPFLAGS= -D_ISOC99_SOURCE -D_POSIX_C_SOURCE=200112 -D_XOPEN_SOURCE=600$/;"	m
CPUTYPE_I386	libavfilter/libmpcodecs/cpudetect.h	24;"	d
CPUTYPE_I486	libavfilter/libmpcodecs/cpudetect.h	25;"	d
CPUTYPE_I586	libavfilter/libmpcodecs/cpudetect.h	26;"	d
CPUTYPE_I686	libavfilter/libmpcodecs/cpudetect.h	27;"	d
CQUAD	libavcodec/smc.c	39;"	d	file:
CRC	libavcodec/apedec.c	/^    uint32_t CRC;                            \/\/\/< frame CRC$/;"	m	struct:APEContext	file:
CRC	libavcodec/wavpack.c	/^    uint32_t CRC;$/;"	m	struct:WavpackFrameContext	file:
CRC16_POLY	libavcodec/ac3enc.c	1517;"	d	file:
CRCState	libavformat/crcenc.c	/^typedef struct CRCState {$/;"	s	file:
CRCState	libavformat/crcenc.c	/^} CRCState;$/;"	t	typeref:struct:CRCState	file:
CRC_TABLE_SIZE	libavcodec/mlp.c	46;"	d	file:
CRC_TABLE_SIZE	libavcodec/mlp.c	48;"	d	file:
CROP_SCREENS	libavcodec/a64multienc.c	36;"	d	file:
CRV	libswscale/swscale_internal.h	/^    vector signed short   CRV;$/;"	m	struct:SwsContext
CS4	libavcodec/ps2/idct_mmi.c	39;"	d	file:
CSHIFT	libswscale/swscale_internal.h	/^    vector unsigned short CSHIFT;$/;"	m	struct:SwsContext
CSHIFT	tests/audiogen.c	70;"	d	file:
CS_HIGH_MOT_INTER	libavcodec/vc1.h	/^    CS_HIGH_MOT_INTER,$/;"	e	enum:CodingSet
CS_HIGH_MOT_INTRA	libavcodec/vc1.h	/^    CS_HIGH_MOT_INTRA = 0,$/;"	e	enum:CodingSet
CS_HIGH_RATE_INTER	libavcodec/vc1.h	/^    CS_HIGH_RATE_INTER$/;"	e	enum:CodingSet
CS_HIGH_RATE_INTRA	libavcodec/vc1.h	/^    CS_HIGH_RATE_INTRA,$/;"	e	enum:CodingSet
CS_LOW_MOT_INTER	libavcodec/vc1.h	/^    CS_LOW_MOT_INTER,$/;"	e	enum:CodingSet
CS_LOW_MOT_INTRA	libavcodec/vc1.h	/^    CS_LOW_MOT_INTRA,$/;"	e	enum:CodingSet
CS_MID_RATE_INTER	libavcodec/vc1.h	/^    CS_MID_RATE_INTER,$/;"	e	enum:CodingSet
CS_MID_RATE_INTRA	libavcodec/vc1.h	/^    CS_MID_RATE_INTRA,$/;"	e	enum:CodingSet
CS_PKT_INITIAL	libavformat/mmst.c	/^    CS_PKT_INITIAL                  = 0x01,$/;"	e	enum:__anon339	file:
CS_PKT_KEEPALIVE	libavformat/mmst.c	/^    CS_PKT_KEEPALIVE                = 0x1b,$/;"	e	enum:__anon339	file:
CS_PKT_MEDIA_FILE_REQUEST	libavformat/mmst.c	/^    CS_PKT_MEDIA_FILE_REQUEST       = 0x05,$/;"	e	enum:__anon339	file:
CS_PKT_MEDIA_HEADER_REQUEST	libavformat/mmst.c	/^    CS_PKT_MEDIA_HEADER_REQUEST     = 0x15,$/;"	e	enum:__anon339	file:
CS_PKT_PROTOCOL_SELECT	libavformat/mmst.c	/^    CS_PKT_PROTOCOL_SELECT          = 0x02,$/;"	e	enum:__anon339	file:
CS_PKT_START_FROM_PKT_ID	libavformat/mmst.c	/^    CS_PKT_START_FROM_PKT_ID        = 0x07,$/;"	e	enum:__anon339	file:
CS_PKT_STREAM_CLOSE	libavformat/mmst.c	/^    CS_PKT_STREAM_CLOSE             = 0x0d,$/;"	e	enum:__anon339	file:
CS_PKT_STREAM_ID_REQUEST	libavformat/mmst.c	/^    CS_PKT_STREAM_ID_REQUEST        = 0x33,$/;"	e	enum:__anon339	file:
CS_PKT_STREAM_PAUSE	libavformat/mmst.c	/^    CS_PKT_STREAM_PAUSE             = 0x09,$/;"	e	enum:__anon339	file:
CS_PKT_TIMING_DATA_REQUEST	libavformat/mmst.c	/^    CS_PKT_TIMING_DATA_REQUEST      = 0x18,$/;"	e	enum:__anon339	file:
CS_PKT_USER_PASSWORD	libavformat/mmst.c	/^    CS_PKT_USER_PASSWORD            = 0x1a,$/;"	e	enum:__anon339	file:
CTF0	libavcodec/ppc/fdct_altivec.c	285;"	d	file:
CTF0	libavcodec/ppc/fdct_altivec.c	300;"	d	file:
CTFX	libavcodec/ppc/fdct_altivec.c	315;"	d	file:
CTFX	libavcodec/ppc/fdct_altivec.c	326;"	d	file:
CTS	libavcodec/ppc/fdct_altivec.c	465;"	d	file:
CTS	libavcodec/ppc/fdct_altivec.c	483;"	d	file:
CUBIC_BLEND_DEINT_FILTER	libpostproc/postprocess_internal.h	61;"	d
CUBIC_IPOL_DEINT_FILTER	libpostproc/postprocess_internal.h	62;"	d
CVID_TAG	libavformat/segafilm.c	36;"	d	file:
CWdecoded	libavcodec/imc.c	/^    float CWdecoded[COEFFS];$/;"	m	struct:__anon90	file:
CWlengthT	libavcodec/imc.c	/^    int CWlengthT[COEFFS];     \/\/\/< how many bits in each codeword$/;"	m	struct:__anon90	file:
CY	libswscale/swscale_internal.h	/^    vector signed short   CY;$/;"	m	struct:SwsContext
C_AVAIL	libavcodec/cavs.h	38;"	d
C_CCIR_TO_JPEG	libavutil/colorspace.h	75;"	d
C_DC_SCALE	libavcodec/arm/asm-offsets.h	33;"	d
C_FILES	av.mk	/^C_FILES := $(patsubst %.o,%.c,$(C_OBJS))  $/;"	m
C_FIX	libavcodec/simple_idct.c	404;"	d	file:
C_FIX	libavcodec/simple_idct.c	483;"	d	file:
C_FIX	libavcodec/simple_idct.c	487;"	d	file:
C_JPEG_TO_CCIR	libavutil/colorspace.h	/^static inline int C_JPEG_TO_CCIR(int y) {$/;"	f
C_OBJS	av.mk	/^    C_OBJS := $(OBJS)  $/;"	m
C_OBJS	av.mk	/^    C_OBJS := $(filter-out $(ALL_S_OBJS),$(OBJS))  $/;"	m
C_SHIFT	libavcodec/simple_idct.c	410;"	d	file:
C_SHIFT	libavcodec/simple_idct.c	482;"	d	file:
C_SHIFT	libavcodec/simple_idct.c	491;"	d	file:
CaffContext	libavformat/cafdec.c	/^} CaffContext;$/;"	t	typeref:struct:__anon422	file:
CamStudioContext	libavcodec/cscd.c	/^} CamStudioContext;$/;"	t	typeref:struct:__anon232	file:
CamtasiaContext	libavcodec/tscc.c	/^} CamtasiaContext;$/;"	t	typeref:struct:TsccContext	file:
CdataDemuxContext	libavformat/eacdata.c	/^} CdataDemuxContext;$/;"	t	typeref:struct:__anon450	file:
CelEvaluation	libavcodec/roqvideoenc.c	/^} CelEvaluation;$/;"	t	typeref:struct:__anon73	file:
Ch	libavutil/sha.c	154;"	d	file:
ChannelCoupling	libavcodec/aac.h	/^} ChannelCoupling;$/;"	t	typeref:struct:__anon243
ChannelData	libavcodec/mace.c	/^typedef struct ChannelData {$/;"	s	file:
ChannelData	libavcodec/mace.c	/^} ChannelData;$/;"	t	typeref:struct:ChannelData	file:
ChannelElement	libavcodec/aac.h	/^} ChannelElement;$/;"	t	typeref:struct:__anon245
ChannelParams	libavcodec/mlp.h	/^} ChannelParams;$/;"	t	typeref:struct:__anon78
ChannelPosition	libavcodec/aac.h	/^enum ChannelPosition {$/;"	g
ChapterContext	libavformat/nut.h	/^} ChapterContext;$/;"	t	typeref:struct:__anon493
ChunkType	libavformat/mmsh.c	/^} ChunkType;$/;"	t	typeref:enum:__anon496	file:
CinAudioContext	libavcodec/dsicinav.c	/^typedef struct CinAudioContext {$/;"	s	file:
CinAudioContext	libavcodec/dsicinav.c	/^} CinAudioContext;$/;"	t	typeref:struct:CinAudioContext	file:
CinDemuxContext	libavformat/dsicin.c	/^typedef struct CinDemuxContext {$/;"	s	file:
CinDemuxContext	libavformat/dsicin.c	/^} CinDemuxContext;$/;"	t	typeref:struct:CinDemuxContext	file:
CinFileHeader	libavformat/dsicin.c	/^typedef struct CinFileHeader {$/;"	s	file:
CinFileHeader	libavformat/dsicin.c	/^} CinFileHeader;$/;"	t	typeref:struct:CinFileHeader	file:
CinFrameHeader	libavformat/dsicin.c	/^typedef struct CinFrameHeader {$/;"	s	file:
CinFrameHeader	libavformat/dsicin.c	/^} CinFrameHeader;$/;"	t	typeref:struct:CinFrameHeader	file:
CinVideoBitmapIndex	libavcodec/dsicinav.c	/^typedef enum CinVideoBitmapIndex {$/;"	g	file:
CinVideoBitmapIndex	libavcodec/dsicinav.c	/^} CinVideoBitmapIndex;$/;"	t	typeref:enum:CinVideoBitmapIndex	file:
CinVideoContext	libavcodec/dsicinav.c	/^typedef struct CinVideoContext {$/;"	s	file:
CinVideoContext	libavcodec/dsicinav.c	/^} CinVideoContext;$/;"	t	typeref:struct:CinVideoContext	file:
CinepakContext	libavcodec/cinepak.c	/^typedef struct CinepakContext {$/;"	s	file:
CinepakContext	libavcodec/cinepak.c	/^} CinepakContext;$/;"	t	typeref:struct:CinepakContext	file:
ClientState	libavformat/rtmpproto.c	/^} ClientState;$/;"	t	typeref:enum:__anon391	file:
Clip	libavformat/mxfdec.c	/^    Clip,$/;"	e	enum:MXFWrappingScheme	file:
CmvContext	libavcodec/eacmv.c	/^typedef struct CmvContext {$/;"	s	file:
CmvContext	libavcodec/eacmv.c	/^} CmvContext;$/;"	t	typeref:struct:CmvContext	file:
Code	libavcodec/lzwenc.c	/^typedef struct Code{$/;"	s	file:
Code	libavcodec/lzwenc.c	/^}Code;$/;"	t	typeref:struct:Code	file:
CodeBook	libavcodec/escape124.c	/^typedef struct CodeBook {$/;"	s	file:
CodeBook	libavcodec/escape124.c	/^} CodeBook;$/;"	t	typeref:struct:CodeBook	file:
CodecID	libavcodec/avcodec.h	/^enum CodecID {$/;"	g
CodecMime	libavformat/matroska.h	/^typedef struct CodecMime{$/;"	s
CodecMime	libavformat/matroska.h	/^}CodecMime;$/;"	t	typeref:struct:CodecMime
CodecTags	libavformat/matroska.h	/^typedef struct CodecTags{$/;"	s
CodecTags	libavformat/matroska.h	/^}CodecTags;$/;"	t	typeref:struct:CodecTags
CodingSet	libavcodec/vc1.h	/^enum CodingSet {$/;"	g
CodingSpool	libavcodec/roqvideoenc.c	/^} CodingSpool;$/;"	t	typeref:struct:__anon75	file:
CoefSumType	libavcodec/ac3enc.h	/^typedef float CoefSumType;$/;"	t
CoefSumType	libavcodec/ac3enc.h	/^typedef int64_t CoefSumType;$/;"	t
CoefType	libavcodec/ac3enc.h	/^typedef float CoefType;$/;"	t
CoefType	libavcodec/ac3enc.h	/^typedef int32_t CoefType;$/;"	t
CoefVLCTable	libavcodec/wma.h	/^typedef struct CoefVLCTable {$/;"	s
CoefVLCTable	libavcodec/wma.h	/^} CoefVLCTable;$/;"	t	typeref:struct:CoefVLCTable
Coefs	libavfilter/libmpcodecs/vf_denoise3d.c	/^        int Coefs[4][512];$/;"	m	struct:vf_priv_s	file:
Coefs	libavfilter/libmpcodecs/vf_hqdn3d.c	/^        int Coefs[4][512*16];$/;"	m	struct:vf_priv_s	file:
Coefs	libavfilter/vf_hqdn3d.c	/^    int Coefs[4][512*16];$/;"	m	struct:__anon8	file:
ColorContext	libavfilter/vsrc_color.c	/^} ColorContext;$/;"	t	typeref:struct:__anon27	file:
ColorEntry	libavutil/parseutils.c	/^} ColorEntry;$/;"	t	typeref:struct:__anon294	file:
CombineContext	libavcodec/ac3enc_combined.c	/^typedef struct CombineContext{$/;"	s	file:
CombineContext	libavcodec/ac3enc_combined.c	/^}CombineContext;$/;"	t	typeref:struct:CombineContext	file:
CompressionOptions	libavcodec/flacenc.c	/^typedef struct CompressionOptions {$/;"	s	file:
CompressionOptions	libavcodec/flacenc.c	/^} CompressionOptions;$/;"	t	typeref:struct:CompressionOptions	file:
ContentStorage	libavformat/mxf.h	/^    ContentStorage,$/;"	e	enum:MXFMetadataSetType
CopyRet	libavcodec/crystalhd.c	/^} CopyRet;$/;"	t	typeref:enum:__anon267	file:
CouplingPoint	libavcodec/aac.h	/^enum CouplingPoint {$/;"	g
CpuCaps	libavfilter/libmpcodecs/cpudetect.h	/^} CpuCaps;$/;"	t	typeref:struct:cpucaps_s
CropContext	libavfilter/vf_crop.c	/^} CropContext;$/;"	t	typeref:struct:__anon5	file:
CropDetectContext	libavfilter/vf_cropdetect.c	/^} CropDetectContext;$/;"	t	typeref:struct:__anon48	file:
CryptoContext	libavformat/crypto.c	/^} CryptoContext;$/;"	t	typeref:struct:__anon432	file:
CryptoContext	libavformat/mxf.h	/^    CryptoContext,$/;"	e	enum:MXFMetadataSetType
CustomChannelMapLocation	libavcodec/ac3tab.h	/^enum CustomChannelMapLocation{$/;"	g
CyuvDecodeContext	libavcodec/cyuv.c	/^typedef struct CyuvDecodeContext {$/;"	s	file:
CyuvDecodeContext	libavcodec/cyuv.c	/^} CyuvDecodeContext;$/;"	t	typeref:struct:CyuvDecodeContext	file:
D	libavcodec/options.c	475;"	d	file:
D	libavcodec/options.c	66;"	d	file:
D	libavcodec/truemotion2.c	/^    int D[4];$/;"	m	struct:TM2Context	file:
D	libavformat/options.c	67;"	d	file:
D	libavformat/options.c	97;"	d	file:
D2TS	libavfilter/vf_select.c	177;"	d	file:
D2TS	libavfilter/vf_setpts.c	98;"	d	file:
DAC	libavcodec/mjpeg.h	/^    DAC   = 0xcc,       \/* define arithmetic-coding conditioning *\/$/;"	e	enum:__anon218
DATADIR	config.mak	/^DATADIR=$(DESTDIR)${prefix}\/share\/ffmpeg$/;"	m
DATA_FILES	Makefile	/^DATA_FILES := $(wildcard $(SRC_DIR)\/ffpresets\/*.ffpreset)$/;"	m
DBA_NEW	libavcodec/ac3.h	/^    DBA_NEW,$/;"	e	enum:__anon168
DBA_NONE	libavcodec/ac3.h	/^    DBA_NONE,$/;"	e	enum:__anon168
DBA_RESERVED	libavcodec/ac3.h	/^    DBA_RESERVED$/;"	e	enum:__anon168
DBA_REUSE	libavcodec/ac3.h	/^    DBA_REUSE = 0,$/;"	e	enum:__anon168
DBCtx	libavcodec/smacker.c	/^typedef struct DBCtx {$/;"	s	file:
DBCtx	libavcodec/smacker.c	/^} DBCtx;$/;"	t	typeref:struct:DBCtx	file:
DCAContext	libavcodec/dca.c	/^} DCAContext;$/;"	t	typeref:struct:__anon93	file:
DCAContext	libavcodec/dcaenc.c	/^} DCAContext;$/;"	t	typeref:struct:__anon231	file:
DCADSPContext	libavcodec/dcadsp.h	/^typedef struct DCADSPContext {$/;"	s
DCADSPContext	libavcodec/dcadsp.h	/^} DCADSPContext;$/;"	t	typeref:struct:DCADSPContext
DCAExSSSpeakerMask	libavcodec/dca.c	/^enum DCAExSSSpeakerMask {$/;"	g	file:
DCAExtensionMask	libavcodec/dca.c	/^enum DCAExtensionMask {$/;"	g	file:
DCAMode	libavcodec/dca.c	/^enum DCAMode {$/;"	g	file:
DCAParseContext	libavcodec/dca_parser.c	/^typedef struct DCAParseContext {$/;"	s	file:
DCAParseContext	libavcodec/dca_parser.c	/^} DCAParseContext;$/;"	t	typeref:struct:DCAParseContext	file:
DCA_2F1R	libavcodec/dca.c	/^    DCA_2F1R,$/;"	e	enum:DCAMode	file:
DCA_2F2R	libavcodec/dca.c	/^    DCA_2F2R,$/;"	e	enum:DCAMode	file:
DCA_3F	libavcodec/dca.c	/^    DCA_3F,$/;"	e	enum:DCAMode	file:
DCA_3F1R	libavcodec/dca.c	/^    DCA_3F1R,$/;"	e	enum:DCAMode	file:
DCA_3F2R	libavcodec/dca.c	/^    DCA_3F2R,$/;"	e	enum:DCAMode	file:
DCA_4F2R	libavcodec/dca.c	/^    DCA_4F2R$/;"	e	enum:DCAMode	file:
DCA_ABITS_MAX	libavcodec/dca.c	49;"	d	file:
DCA_BLOCKS_MAX	libavcodec/dca.c	52;"	d	file:
DCA_BUFFER_PADDING_SIZE	libavcodec/dca.c	238;"	d	file:
DCA_CHANNEL	libavcodec/dca.c	/^    DCA_CHANNEL,$/;"	e	enum:DCAMode	file:
DCA_CHANNEL_BITS	libavcodec/dca.c	228;"	d	file:
DCA_CHANNEL_MASK	libavcodec/dca.c	229;"	d	file:
DCA_CORE_EXTS	libavcodec/dca.c	115;"	d	file:
DCA_DOLBY	libavcodec/dca.c	226;"	d	file:
DCA_EXSS_CENTER_LEFT_RIGHT	libavcodec/dca.c	/^    DCA_EXSS_CENTER_LEFT_RIGHT     = 0x0200,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_FRONT_CENTER	libavcodec/dca.c	/^    DCA_EXSS_FRONT_CENTER          = 0x0001,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_FRONT_HIGH_CENTER	libavcodec/dca.c	/^    DCA_EXSS_FRONT_HIGH_CENTER     = 0x0080,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_FRONT_HIGH_LEFT_RIGHT	libavcodec/dca.c	/^    DCA_EXSS_FRONT_HIGH_LEFT_RIGHT = 0x0020,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_FRONT_LEFT_RIGHT	libavcodec/dca.c	/^    DCA_EXSS_FRONT_LEFT_RIGHT      = 0x0002,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_LFE	libavcodec/dca.c	/^    DCA_EXSS_LFE                   = 0x0008,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_LFE2	libavcodec/dca.c	/^    DCA_EXSS_LFE2                  = 0x1000,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_OVERHEAD	libavcodec/dca.c	/^    DCA_EXSS_OVERHEAD              = 0x0100,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_REAR_CENTER	libavcodec/dca.c	/^    DCA_EXSS_REAR_CENTER           = 0x0010,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_REAR_HIGH_CENTER	libavcodec/dca.c	/^    DCA_EXSS_REAR_HIGH_CENTER      = 0x4000,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_REAR_HIGH_LEFT_RIGHT	libavcodec/dca.c	/^    DCA_EXSS_REAR_HIGH_LEFT_RIGHT  = 0x8000,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_REAR_LEFT_RIGHT	libavcodec/dca.c	/^    DCA_EXSS_REAR_LEFT_RIGHT       = 0x0040,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_SIDE_HIGH_LEFT_RIGHT	libavcodec/dca.c	/^    DCA_EXSS_SIDE_HIGH_LEFT_RIGHT  = 0x2000,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_SIDE_LEFT_RIGHT	libavcodec/dca.c	/^    DCA_EXSS_SIDE_LEFT_RIGHT       = 0x0800,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_SIDE_REAR_LEFT_RIGHT	libavcodec/dca.c	/^    DCA_EXSS_SIDE_REAR_LEFT_RIGHT  = 0x0004,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXSS_WIDE_LEFT_RIGHT	libavcodec/dca.c	/^    DCA_EXSS_WIDE_LEFT_RIGHT       = 0x0400,$/;"	e	enum:DCAExSSSpeakerMask	file:
DCA_EXT_CORE	libavcodec/dca.c	/^    DCA_EXT_CORE       = 0x001, \/\/\/< core in core substream$/;"	e	enum:DCAExtensionMask	file:
DCA_EXT_EXSS_CORE	libavcodec/dca.c	/^    DCA_EXT_EXSS_CORE  = 0x010, \/\/\/< core in ExSS (extension substream)$/;"	e	enum:DCAExtensionMask	file:
DCA_EXT_EXSS_LBR	libavcodec/dca.c	/^    DCA_EXT_EXSS_LBR   = 0x100, \/\/\/< low bitrate component in ExSS$/;"	e	enum:DCAExtensionMask	file:
DCA_EXT_EXSS_X96	libavcodec/dca.c	/^    DCA_EXT_EXSS_X96   = 0x080, \/\/\/< 96\/24 extension in ExSS$/;"	e	enum:DCAExtensionMask	file:
DCA_EXT_EXSS_XBR	libavcodec/dca.c	/^    DCA_EXT_EXSS_XBR   = 0x020, \/\/\/< extended bitrate extension in ExSS$/;"	e	enum:DCAExtensionMask	file:
DCA_EXT_EXSS_XLL	libavcodec/dca.c	/^    DCA_EXT_EXSS_XLL   = 0x200, \/\/\/< lossless extension in ExSS$/;"	e	enum:DCAExtensionMask	file:
DCA_EXT_EXSS_XXCH	libavcodec/dca.c	/^    DCA_EXT_EXSS_XXCH  = 0x040, \/\/\/< XXCh channels extension in ExSS$/;"	e	enum:DCAExtensionMask	file:
DCA_EXT_X96	libavcodec/dca.c	/^    DCA_EXT_X96        = 0x004, \/\/\/< 96\/24 extension in core substream$/;"	e	enum:DCAExtensionMask	file:
DCA_EXT_XCH	libavcodec/dca.c	/^    DCA_EXT_XCH        = 0x008, \/\/\/< XCh channel extension in core substream$/;"	e	enum:DCAExtensionMask	file:
DCA_EXT_XXCH	libavcodec/dca.c	/^    DCA_EXT_XXCH       = 0x002, \/\/\/< XXCh channels extension in core substream$/;"	e	enum:DCAExtensionMask	file:
DCA_HD_MARKER	libavcodec/dca.h	35;"	d
DCA_HEADER_SIZE	libavcodec/dcaenc.c	38;"	d	file:
DCA_LFE	libavcodec/dca.c	231;"	d	file:
DCA_LFE_MAX	libavcodec/dca.c	53;"	d	file:
DCA_MARKER_14B_BE	libavcodec/dca.h	31;"	d
DCA_MARKER_14B_BE	libavformat/dtsdec.c	26;"	d	file:
DCA_MARKER_14B_LE	libavcodec/dca.h	32;"	d
DCA_MARKER_14B_LE	libavformat/dtsdec.c	27;"	d	file:
DCA_MARKER_RAW_BE	libavcodec/dca.h	29;"	d
DCA_MARKER_RAW_BE	libavformat/dtsdec.c	28;"	d	file:
DCA_MARKER_RAW_LE	libavcodec/dca.h	30;"	d
DCA_MARKER_RAW_LE	libavformat/dtsdec.c	29;"	d	file:
DCA_MAX_EXSS_HEADER_SIZE	libavcodec/dca.c	236;"	d	file:
DCA_MAX_FRAME_SIZE	libavcodec/dca.c	235;"	d	file:
DCA_MAX_FRAME_SIZE	libavcodec/dcaenc.c	37;"	d	file:
DCA_MONO	libavcodec/dca.c	/^    DCA_MONO = 0,$/;"	e	enum:DCAMode	file:
DCA_PRIM_CHANNELS_MAX	libavcodec/dca.c	47;"	d	file:
DCA_STEREO	libavcodec/dca.c	/^    DCA_STEREO,$/;"	e	enum:DCAMode	file:
DCA_STEREO_SUMDIFF	libavcodec/dca.c	/^    DCA_STEREO_SUMDIFF,$/;"	e	enum:DCAMode	file:
DCA_STEREO_TOTAL	libavcodec/dca.c	/^    DCA_STEREO_TOTAL,$/;"	e	enum:DCAMode	file:
DCA_SUBBANDS	libavcodec/dca.c	48;"	d	file:
DCA_SUBBANDS	libavcodec/dcaenc.c	40;"	d	file:
DCA_SUBBANDS_32	libavcodec/dcaenc.c	36;"	d	file:
DCA_SUBFRAMES_MAX	libavcodec/dca.c	51;"	d	file:
DCA_SUBSUBFRAMES_MAX	libavcodec/dca.c	50;"	d	file:
DCT32_FLOAT	libavcodec/dct32_fixed.c	19;"	d	file:
DCT32_FLOAT	libavcodec/dct32_float.c	19;"	d	file:
DCT8_1D	libavcodec/dsputil.c	2166;"	d	file:
DCTBLOCK	libavcodec/jrevdct.c	/^typedef DCTELEM DCTBLOCK[DCTSIZE2];$/;"	t	file:
DCTContext	libavcodec/avfft.h	/^typedef struct DCTContext DCTContext;$/;"	t	typeref:struct:DCTContext
DCTContext	libavcodec/dct.h	/^struct DCTContext {$/;"	s
DCTELEM	libavcodec/dsputil.h	/^typedef short DCTELEM;$/;"	t
DCTELEM	libavfilter/libmpcodecs/vf_pp7.c	/^typedef short DCTELEM;$/;"	t	file:
DCTSIZE	libavcodec/jfdctfst.c	76;"	d	file:
DCTSIZE	libavcodec/jfdctint.c	69;"	d	file:
DCTSIZE	libavcodec/jrevdct.c	72;"	d	file:
DCTSIZE	libavcodec/jrevdct.c	946;"	d	file:
DCTSIZE	libavcodec/jrevdct.c	947;"	d	file:
DCTSIZE	libavfilter/libmpcodecs/vf_fspp.c	699;"	d	file:
DCTSIZE2	libavcodec/jrevdct.c	73;"	d	file:
DCTSIZE_S	libavfilter/libmpcodecs/vf_fspp.c	700;"	d	file:
DCTSTRIDE	libavcodec/jrevdct.c	948;"	d	file:
DCTTransformType	libavcodec/avfft.h	/^enum DCTTransformType {$/;"	g
DCT_0	libavcodec/vp8.h	/^    DCT_0,$/;"	e	enum:dct_token
DCT_1	libavcodec/vp8.h	/^    DCT_1,$/;"	e	enum:dct_token
DCT_2	libavcodec/vp8.h	/^    DCT_2,$/;"	e	enum:dct_token
DCT_3	libavcodec/vp8.h	/^    DCT_3,$/;"	e	enum:dct_token
DCT_4	libavcodec/vp8.h	/^    DCT_4,$/;"	e	enum:dct_token
DCT_8_INV_COL	libavcodec/x86/idct_mmx_xvid.c	392;"	d	file:
DCT_8_INV_COL8	libavcodec/ps2/idct_mmi.c	121;"	d	file:
DCT_8_INV_COL8_ADD	libavcodec/ps2/idct_mmi.c	283;"	d	file:
DCT_8_INV_COL8_PMS	libavcodec/ps2/idct_mmi.c	234;"	d	file:
DCT_8_INV_COL8_PUT	libavcodec/ps2/idct_mmi.c	262;"	d	file:
DCT_8_INV_COL8_STORE	libavcodec/ps2/idct_mmi.c	202;"	d	file:
DCT_8_INV_ROW1	libavcodec/ps2/idct_mmi.c	91;"	d	file:
DCT_8_INV_ROW_MMX	libavcodec/x86/idct_mmx_xvid.c	231;"	d	file:
DCT_8_INV_ROW_XMM	libavcodec/x86/idct_mmx_xvid.c	285;"	d	file:
DCT_CAT1	libavcodec/vp8.h	/^    DCT_CAT1,$/;"	e	enum:dct_token
DCT_CAT2	libavcodec/vp8.h	/^    DCT_CAT2,$/;"	e	enum:dct_token
DCT_CAT3	libavcodec/vp8.h	/^    DCT_CAT3,$/;"	e	enum:dct_token
DCT_CAT4	libavcodec/vp8.h	/^    DCT_CAT4,$/;"	e	enum:dct_token
DCT_CAT5	libavcodec/vp8.h	/^    DCT_CAT5,$/;"	e	enum:dct_token
DCT_CAT6	libavcodec/vp8.h	/^    DCT_CAT6,$/;"	e	enum:dct_token
DCT_EOB	libavcodec/vp8.h	/^    DCT_EOB,$/;"	e	enum:dct_token
DCT_I	libavcodec/avfft.h	/^    DCT_I,$/;"	e	enum:DCTTransformType
DCT_II	libavcodec/avfft.h	/^    DCT_II = 0,$/;"	e	enum:DCTTransformType
DCT_III	libavcodec/avfft.h	/^    DCT_III,$/;"	e	enum:DCTTransformType
DCT_SAD	libavcodec/x86/dsputilenc_mmx.c	1002;"	d	file:
DCT_SAD	libavcodec/x86/dsputilenc_mmx.c	978;"	d	file:
DCT_SAD	libavcodec/x86/dsputilenc_mmx.c	989;"	d	file:
DCT_SAD	libavcodec/x86/dsputilenc_mmx.c	991;"	d	file:
DCT_SAD4	libavcodec/x86/dsputilenc_mmx.c	939;"	d	file:
DCT_SAD_FUNC	libavcodec/x86/dsputilenc_mmx.c	967;"	d	file:
DCT_SAD_MMX	libavcodec/x86/dsputilenc_mmx.c	949;"	d	file:
DCT_SAD_SSE2	libavcodec/x86/dsputilenc_mmx.c	959;"	d	file:
DCTransformPtr	libavcodec/ivi_common.h	/^typedef void (DCTransformPtr) (const int32_t *in, int16_t *out, uint32_t pitch, int blk_size);$/;"	t
DC_127_PRED	libavcodec/h264pred.h	65;"	d
DC_127_PRED8x8	libavcodec/h264pred.h	85;"	d
DC_128_PRED	libavcodec/h264pred.h	51;"	d
DC_128_PRED8x8	libavcodec/h264pred.h	76;"	d
DC_129_PRED	libavcodec/h264pred.h	66;"	d
DC_129_PRED8x8	libavcodec/h264pred.h	86;"	d
DC_COEFF	libavcodec/vp3.c	1073;"	d	file:
DC_COND_IDCT	libavcodec/x86/simple_idct_mmx.c	471;"	d	file:
DC_END	libavcodec/mpegvideo.h	486;"	d
DC_ERROR	libavcodec/mpegvideo.h	483;"	d
DC_MARKER	libavcodec/mpeg4video.h	53;"	d
DC_MAX	libavcodec/msmpeg4.c	841;"	d	file:
DC_PRED	libavcodec/h264pred.h	40;"	d
DC_PRED8x8	libavcodec/h264pred.h	68;"	d
DC_START_BITS	libavcodec/bink.c	454;"	d	file:
DC_VLC_BITS	libavcodec/intrax8.c	33;"	d	file:
DC_VLC_BITS	libavcodec/mpeg12.h	27;"	d
DC_VLC_BITS	libavcodec/mpeg4videodec.c	33;"	d	file:
DC_VLC_BITS	libavcodec/msmpeg4.c	47;"	d	file:
DC_VLC_BITS	libavcodec/rv10.c	37;"	d	file:
DC_VLC_BITS	libavcodec/vc1dec.c	46;"	d	file:
DC_VLC_MTD	libavcodec/intrax8.c	37;"	d	file:
DEAD_COOKIE	libavformat/rtpdec_h264.c	69;"	d	file:
DEBLOCK_CHROMA	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_CHROMA avx$/;"	l
DEBLOCK_CHROMA	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_CHROMA mmxext$/;"	l
DEBLOCK_CHROMA	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_CHROMA sse2$/;"	l
DEBLOCK_LUMA	libavcodec/x86/h264_deblock.asm	/^DEBLOCK_LUMA avx$/;"	l
DEBLOCK_LUMA	libavcodec/x86/h264_deblock.asm	/^DEBLOCK_LUMA avx, v, 16$/;"	l
DEBLOCK_LUMA	libavcodec/x86/h264_deblock.asm	/^DEBLOCK_LUMA mmxext, v8, 8$/;"	l
DEBLOCK_LUMA	libavcodec/x86/h264_deblock.asm	/^DEBLOCK_LUMA sse2$/;"	l
DEBLOCK_LUMA	libavcodec/x86/h264_deblock.asm	/^DEBLOCK_LUMA sse2, v, 16$/;"	l
DEBLOCK_LUMA	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_LUMA avx$/;"	l
DEBLOCK_LUMA	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_LUMA mmxext$/;"	l
DEBLOCK_LUMA	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_LUMA sse2$/;"	l
DEBLOCK_LUMA_64	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_LUMA_64 avx$/;"	l
DEBLOCK_LUMA_64	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_LUMA_64 sse2$/;"	l
DEBLOCK_LUMA_INTRA	libavcodec/x86/h264_deblock.asm	/^DEBLOCK_LUMA_INTRA avx , v$/;"	l
DEBLOCK_LUMA_INTRA	libavcodec/x86/h264_deblock.asm	/^DEBLOCK_LUMA_INTRA mmxext, v8$/;"	l
DEBLOCK_LUMA_INTRA	libavcodec/x86/h264_deblock.asm	/^DEBLOCK_LUMA_INTRA sse2, v$/;"	l
DEBLOCK_LUMA_INTRA	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_LUMA_INTRA avx$/;"	l
DEBLOCK_LUMA_INTRA	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_LUMA_INTRA mmxext$/;"	l
DEBLOCK_LUMA_INTRA	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_LUMA_INTRA sse2$/;"	l
DEBLOCK_LUMA_INTRA_64	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_LUMA_INTRA_64 avx$/;"	l
DEBLOCK_LUMA_INTRA_64	libavcodec/x86/h264_deblock_10bit.asm	/^DEBLOCK_LUMA_INTRA_64 sse2$/;"	l
DEBUG_BUFFERS	libswscale/swscale_template.c	267;"	d	file:
DEBUG_SWSCALE_BUFFERS	libswscale/swscale_template.c	266;"	d	file:
DEC	libavdevice/bktr.c	345;"	d	file:
DEC	libavdevice/fbdev.c	252;"	d	file:
DEC	libavdevice/libdc1394.c	85;"	d	file:
DEC	libavdevice/v4l2.c	710;"	d	file:
DEC	libavdevice/vfwcap.c	465;"	d	file:
DEC	libavdevice/x11grab.c	466;"	d	file:
DEC	libavformat/img2.c	464;"	d	file:
DEC	libavformat/rawdec.c	208;"	d	file:
DEC	libavformat/rawdec.c	216;"	d	file:
DEC	libavformat/tty.c	155;"	d	file:
DECAY_CUTOFF	libavcodec/aacps.c	/^static const int   DECAY_CUTOFF[]      = { 10, 32 };$/;"	v	file:
DECAY_SLOPE	libavcodec/aacps.c	448;"	d	file:
DECLARE_ADDREF	libavdevice/dshow.h	79;"	d
DECLARE_ADDREF	libavdevice/dshow_enummediatypes.c	/^DECLARE_ADDREF(libAVEnumMediaTypes)$/;"	f
DECLARE_ADDREF	libavdevice/dshow_enumpins.c	/^DECLARE_ADDREF(libAVEnumPins)$/;"	f
DECLARE_ADDREF	libavdevice/dshow_filter.c	/^DECLARE_ADDREF(libAVFilter)$/;"	f
DECLARE_ADDREF	libavdevice/dshow_pin.c	/^DECLARE_ADDREF(libAVPin)$/;"	f
DECLARE_ALIGNED	libavutil/mem.h	34;"	d
DECLARE_ALIGNED	libavutil/mem.h	37;"	d
DECLARE_ALIGNED	libavutil/mem.h	44;"	d
DECLARE_ALIGNED	libavutil/mem.h	47;"	d
DECLARE_ALIGNED	libavutil/mem.h	50;"	d
DECLARE_ASM_CONST	libavutil/mem.h	35;"	d
DECLARE_ASM_CONST	libavutil/mem.h	40;"	d
DECLARE_ASM_CONST	libavutil/mem.h	45;"	d
DECLARE_ASM_CONST	libavutil/mem.h	48;"	d
DECLARE_ASM_CONST	libavutil/mem.h	51;"	d
DECLARE_CREATE	libavdevice/dshow.h	108;"	d
DECLARE_DESTROY	libavdevice/dshow.h	97;"	d
DECLARE_DESTROY	libavdevice/dshow_pin.c	/^DECLARE_DESTROY(libAVPin, nothing)$/;"	f
DECLARE_FUNCTION	libavcodec/x86/vc1dsp_mmx.c	460;"	d	file:
DECLARE_LOOP_FILTER	libavcodec/x86/vp8dsp-init.c	/^DECLARE_LOOP_FILTER(mmx)$/;"	f
DECLARE_LOOP_FILTER	libavcodec/x86/vp8dsp-init.c	232;"	d	file:
DECLARE_QUERYINTERFACE	libavdevice/dshow.h	56;"	d
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 0, eax, eax, ax, al,   [esp + stack_offset + 4]$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 0, rcx, ecx, cx,  cl,  ecx$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 0, rdi, edi, di,  dil, edi$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 1, ecx, ecx, cx, cl,   [esp + stack_offset + 8]$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 1, rdx, edx, dx,  dl,  edx$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 1, rsi, esi, si,  sil, esi$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 2, edx, edx, dx, dl,   [esp + stack_offset + 12]$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 2, r8,  r8d, r8w, r8b, r8d$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 2, rdx, edx, dx,  dl,  edx$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 3, ebx, ebx, bx, bl,   [esp + stack_offset + 16]$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 3, r9,  r9d, r9w, r9b, r9d$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 3, rcx, ecx, cx,  cl,  ecx$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 4, esi, esi, si, null, [esp + stack_offset + 20]$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 4, r8,  r8d, r8w, r8b, r8d$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 4, rdi, edi, di,  dil, [rsp + stack_offset + 40]$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 5, edi, edi, di, null, [esp + stack_offset + 24]$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 5, r9,  r9d, r9w, r9b, r9d$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 5, rsi, esi, si,  sil, [rsp + stack_offset + 48]$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 6, ebp, ebp, bp, null, [esp + stack_offset + 28]$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 6, rax, eax, ax,  al,  [rsp + stack_offset + 56]$/;"	l
DECLARE_REG	libavcodec/x86/x86inc.asm	/^DECLARE_REG 6, rax, eax, ax,  al,  [rsp + stack_offset + 8]$/;"	l
DECLARE_REG_SIZE	libavcodec/x86/x86inc.asm	/^DECLARE_REG_SIZE ax, al$/;"	l
DECLARE_REG_SIZE	libavcodec/x86/x86inc.asm	/^DECLARE_REG_SIZE bp, bpl$/;"	l
DECLARE_REG_SIZE	libavcodec/x86/x86inc.asm	/^DECLARE_REG_SIZE bx, bl$/;"	l
DECLARE_REG_SIZE	libavcodec/x86/x86inc.asm	/^DECLARE_REG_SIZE cx, cl$/;"	l
DECLARE_REG_SIZE	libavcodec/x86/x86inc.asm	/^DECLARE_REG_SIZE di, dil$/;"	l
DECLARE_REG_SIZE	libavcodec/x86/x86inc.asm	/^DECLARE_REG_SIZE dx, dl$/;"	l
DECLARE_REG_SIZE	libavcodec/x86/x86inc.asm	/^DECLARE_REG_SIZE si, sil$/;"	l
DECLARE_REG_TMP_SIZE	libavcodec/x86/x86inc.asm	/^DECLARE_REG_TMP_SIZE 0,1,2,3,4,5,6,7,8,9$/;"	l
DECLARE_RELEASE	libavdevice/dshow.h	86;"	d
DECL_FFT	libavcodec/fft.c	271;"	d	file:
DECL_FFT	libavcodec/x86/fft_mmx.asm	/^DECL_FFT 4, _3dn$/;"	l
DECL_FFT	libavcodec/x86/fft_mmx.asm	/^DECL_FFT 4, _3dn, _interleave$/;"	l
DECL_FFT	libavcodec/x86/fft_mmx.asm	/^DECL_FFT 4, _3dn2$/;"	l
DECL_FFT	libavcodec/x86/fft_mmx.asm	/^DECL_FFT 4, _3dn2, _interleave$/;"	l
DECL_FFT	libavcodec/x86/fft_mmx.asm	/^DECL_FFT 5, _sse$/;"	l
DECL_FFT	libavcodec/x86/fft_mmx.asm	/^DECL_FFT 5, _sse, _interleave$/;"	l
DECL_FFT	libavcodec/x86/fft_mmx.asm	/^DECL_FFT 6, _avx$/;"	l
DECL_FFT	libavcodec/x86/fft_mmx.asm	/^DECL_FFT 6, _avx, _interleave$/;"	l
DECL_FFTS	libavcodec/ppc/fft_altivec_s.S	/^DECL_FFTS 0$/;"	l
DECL_FFTS	libavcodec/ppc/fft_altivec_s.S	/^DECL_FFTS 1, _interleave$/;"	l
DECL_IMDCT	libavcodec/x86/fft_mmx.asm	/^DECL_IMDCT _avx, POSROTATESHUF_AVX$/;"	l
DECL_IMDCT	libavcodec/x86/fft_mmx.asm	/^DECL_IMDCT _sse, POSROTATESHUF$/;"	l
DECL_PASS	libavcodec/x86/fft_mmx.asm	/^DECL_PASS pass_3dn, PASS_SMALL 1, [wq], [wq+o1q]$/;"	l
DECL_PASS	libavcodec/x86/fft_mmx.asm	/^DECL_PASS pass_avx, PASS_BIG 1$/;"	l
DECL_PASS	libavcodec/x86/fft_mmx.asm	/^DECL_PASS pass_interleave_3dn, PASS_BIG 0$/;"	l
DECL_PASS	libavcodec/x86/fft_mmx.asm	/^DECL_PASS pass_interleave_avx, PASS_BIG 0$/;"	l
DECL_PASS	libavcodec/x86/fft_mmx.asm	/^DECL_PASS pass_interleave_sse, PASS_BIG 0$/;"	l
DECL_PASS	libavcodec/x86/fft_mmx.asm	/^DECL_PASS pass_sse, PASS_BIG 1$/;"	l
DECODE	libavcodec/pcm.c	247;"	d	file:
DECODER_BUFFER_SIZE	libavformat/oggdec.c	38;"	d	file:
DECODE_BYTES_PAD1	libavcodec/cook.c	256;"	d	file:
DECODE_BYTES_PAD2	libavcodec/cook.c	257;"	d	file:
DECODE_CABAC_MB_MVD	libavcodec/h264_cabac.c	1521;"	d	file:
DECODE_HAM_PLANE32	libavcodec/iff.c	352;"	d	file:
DECODE_SIGNIFICANCE	libavcodec/h264_cabac.c	1634;"	d	file:
DECODE_SLICE_ERROR	libavcodec/mpeg12.c	1704;"	d	file:
DECODE_SLICE_OK	libavcodec/mpeg12.c	1705;"	d	file:
DECORRELATE	libavcodec/flacdec.c	600;"	d	file:
DEC_MED	libavcodec/wavpack.c	214;"	d	file:
DEF	libavcodec/arm/dsputil_iwmmxt.c	25;"	d	file:
DEF	libavcodec/arm/dsputil_iwmmxt.c	29;"	d	file:
DEF	libavcodec/arm/dsputil_iwmmxt.c	33;"	d	file:
DEF	libavcodec/arm/dsputil_iwmmxt.c	37;"	d	file:
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(avg, pixels16)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(avg, pixels16_x2)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(avg, pixels16_xy2)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(avg, pixels16_y2)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(avg, pixels8)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(avg, pixels8_x2)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(avg, pixels8_xy2)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(avg, pixels8_y2)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(put, pixels16)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(put, pixels16_x2)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(put, pixels16_xy2)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(put, pixels16_y2)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(put, pixels8)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(put, pixels8_x2)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/arm/dsputil_iwmmxt_rnd_template.c	/^void DEF(put, pixels8_xy2)(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
DEF	libavcodec/bytestream.h	39;"	d
DEF	libavcodec/bytestream.h	54;"	d
DEF	libavcodec/x86/dsputil_mmx.c	163;"	d	file:
DEF	libavcodec/x86/dsputil_mmx.c	171;"	d	file:
DEF	libavcodec/x86/dsputil_mmx.c	178;"	d	file:
DEF	libavcodec/x86/dsputil_mmx.c	185;"	d	file:
DEF	libavcodec/x86/dsputil_mmx.c	194;"	d	file:
DEF	libavcodec/x86/dsputil_mmx.c	200;"	d	file:
DEF	libavcodec/x86/dsputil_mmx.c	207;"	d	file:
DEF	libavcodec/x86/dsputil_mmx.c	215;"	d	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static av_unused void DEF(avg, pixels16_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static av_unused void DEF(avg, pixels8_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(avg, pixels16)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(avg, pixels16_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(avg, pixels16_xy2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(avg, pixels16_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(avg, pixels8)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(avg, pixels8_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(avg, pixels8_xy2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(avg, pixels8_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(put, pixels16_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(put, pixels16_xy2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(put, pixels16_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(put, pixels8_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(put, pixels8_xy2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void DEF(put, pixels8_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void av_unused DEF(avg, pixels4)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void av_unused DEF(put, pixels16_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputil_mmx_rnd_template.c	/^static void av_unused DEF(put, pixels8_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f	file:
DEF	libavcodec/x86/dsputilenc_mmx.c	1051;"	d	file:
DEF	libavcodec/x86/dsputilenc_mmx.c	1057;"	d	file:
DEF	libavcodec/x86/dsputilenc_mmx.c	1062;"	d	file:
DEF	libavcodec/x86/dsputilenc_mmx.c	1071;"	d	file:
DEF	libavcodec/x86/dsputilenc_mmx.c	1078;"	d	file:
DEF	libavcodec/x86/dsputilenc_mmx.c	1090;"	d	file:
DEF64	libavcodec/bytestream.h	41;"	d
DEF64	libavcodec/bytestream.h	55;"	d
DEFAULT	libavcodec/options.c	476;"	d	file:
DEFAULT	libavcodec/options.c	60;"	d	file:
DEFAULT	libavformat/options.c	64;"	d	file:
DEFAULT	libavformat/options.c	98;"	d	file:
DEFAULT	libswscale/options.c	33;"	d	file:
DEFAULT_BG_COLOR	libavcodec/ansi.c	39;"	d	file:
DEFAULT_BLOCK_SIZE	libavcodec/shorten.c	43;"	d	file:
DEFAULT_CODEC_ID	libavdevice/alsa-audio.h	41;"	d
DEFAULT_FG_COLOR	libavcodec/ansi.c	38;"	d	file:
DEFAULT_FRAME_SIZE	libavcodec/alacenc.c	28;"	d	file:
DEFAULT_HEIGHT	tests/rotozoom.c	126;"	d	file:
DEFAULT_HEIGHT	tests/videogen.c	97;"	d	file:
DEFAULT_INTER_INDEX	libavcodec/msmpeg4.c	57;"	d	file:
DEFAULT_MAX_PRED_ORDER	libavcodec/alacenc.c	37;"	d	file:
DEFAULT_MIN_PRED_ORDER	libavcodec/alacenc.c	38;"	d	file:
DEFAULT_NB_PICT	tests/rotozoom.c	127;"	d	file:
DEFAULT_NB_PICT	tests/videogen.c	98;"	d	file:
DEFAULT_PACKET_SIZE	libavformat/mxg.c	29;"	d	file:
DEFAULT_PASS_LOGFILENAME_PREFIX	ffmpeg.c	261;"	d	file:
DEFAULT_PASS_LOGFILENAME_PREFIX	ffmpeg/ffmpeg.c	261;"	d	file:
DEFAULT_PES_HEADER_FREQ	libavformat/mpegtsenc.c	190;"	d	file:
DEFAULT_PES_PAYLOAD_SIZE	libavformat/mpegtsenc.c	191;"	d	file:
DEFAULT_PROVIDER_NAME	libavformat/mpegtsenc.c	186;"	d	file:
DEFAULT_SAMPLE_SIZE	libavcodec/alacenc.c	29;"	d	file:
DEFAULT_SCREEN_MODE	libavcodec/ansi.c	40;"	d	file:
DEFAULT_SERVICE_NAME	libavformat/mpegtsenc.c	187;"	d	file:
DEFAULT_WIDTH	tests/rotozoom.c	125;"	d	file:
DEFAULT_WIDTH	tests/videogen.c	96;"	d	file:
DEFCSP420_CVT	libswscale/ppc/yuv2rgb_altivec.c	279;"	d	file:
DEFFUNC	libavcodec/sh4/dsputil_align.c	263;"	d	file:
DEFINE_ARGS	libavcodec/x86/fft_mmx.asm	/^DEFINE_ARGS z, w, n, o1, o3$/;"	l
DEFINE_LUT_FILTER	libavfilter/vf_lut.c	346;"	d	file:
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 0$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 1$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 10$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 11$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 12$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 13$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 14$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 15$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 16$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 17$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 18$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 19$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 2$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 20$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 21$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 22$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 23$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 24$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 25$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 26$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 27$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 28$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 29$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 3$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 30$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 31$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 4$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 5$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 6$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 7$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 8$/;"	l
DEFINE_REG	libavcodec/ppc/asm.S	/^DEFINE_REG 9$/;"	l
DEFINE_SHUFFLE_BYTES	libswscale/rgb2rgb.c	328;"	d	file:
DEFREG	libavcodec/sh4/idct_sh4.c	79;"	d	file:
DEFUN	libavcodec/bfin/config_bfin.h	47;"	d
DEFUN	libswscale/bfin/internal_bfin.S	/^#define DEFUN(fname,where,interface) \\$/;"	d
DEFUN_END	libavcodec/bfin/config_bfin.h	54;"	d
DEFUN_END	libswscale/bfin/internal_bfin.S	/^#define DEFUN_END(fname) \\$/;"	d
DEF_OLD_QPEL	libavcodec/dsputil.h	161;"	d
DEF_T	libavcodec/bytestream.h	29;"	d
DEF_T	libavcodec/bytestream.h	56;"	d
DEINTERLACE	libavcodec/x86/deinterlace.asm	/^DEINTERLACE ""$/;"	l
DEINTERLACE	libavcodec/x86/deinterlace.asm	/^DEINTERLACE inplace$/;"	l
DEINT_CUBIC	libpostproc/postprocess_template.c	1485;"	d	file:
DEINT_FF	libpostproc/postprocess_template.c	1555;"	d	file:
DEINT_ID_GENR	libavformat/rmdec.c	29;"	d	file:
DEINT_ID_INT0	libavformat/rmdec.c	30;"	d	file:
DEINT_ID_INT4	libavformat/rmdec.c	31;"	d	file:
DEINT_ID_SIPR	libavformat/rmdec.c	32;"	d	file:
DEINT_ID_VBRF	libavformat/rmdec.c	33;"	d	file:
DEINT_ID_VBRS	libavformat/rmdec.c	34;"	d	file:
DEINT_L5	libpostproc/postprocess_template.c	1640;"	d	file:
DELAYED_PIC_REF	libavcodec/h264.h	102;"	d
DELAY_FRAMES	libavformat/mpc.c	29;"	d	file:
DELTA_ERR_MAX	libavcodec/elbg.c	32;"	d	file:
DEPCC	config.mak	/^DEPCC=\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/bin\/arm-linux-androideabi-gcc$/;"	m
DEPFLAGS	config.mak	/^DEPFLAGS=$(CPPFLAGS) $(CFLAGS) -MM$/;"	m
DEP_LIBS	common.mak	/^DEP_LIBS := $(foreach NAME,$(FFLIBS),lib$(NAME)\/$($(CONFIG_SHARED:yes=S)LIBNAME))$/;"	m
DERING	libpostproc/postprocess_internal.h	35;"	d
DERING_CORE	libpostproc/postprocess_template.c	1240;"	d	file:
DESCALE	libavcodec/jfdctfst.c	136;"	d	file:
DESCALE	libavcodec/jfdctfst.c	137;"	d	file:
DESCALE	libavcodec/jfdctfst.c	332;"	d	file:
DESCALE	libavcodec/jfdctint.c	76;"	d	file:
DESCALE	libavcodec/jfdctint.c	78;"	d	file:
DESCALE	libavcodec/jrevdct.c	152;"	d	file:
DESCALE	libavcodec/sh4/idct_sh4.c	85;"	d	file:
DESCALE	libavfilter/libmpcodecs/vf_fspp.c	708;"	d	file:
DESC_types	libavformat/mpegts.c	/^static const StreamType DESC_types[] = {$/;"	v	file:
DFT_C2R	libavcodec/avfft.h	/^    DFT_C2R,$/;"	e	enum:RDFTransformType
DFT_R2C	libavcodec/avfft.h	/^    DFT_R2C,$/;"	e	enum:RDFTransformType
DHP	libavcodec/mjpeg.h	/^    DHP   = 0xde,       \/* define hierarchical progression *\/$/;"	e	enum:__anon218
DHT	libavcodec/mjpeg.h	/^    DHT   = 0xc4,       \/* define huffman tables *\/$/;"	e	enum:__anon218
DIAG_DOWN_LEFT_PRED	libavcodec/h264pred.h	41;"	d
DIAG_DOWN_LEFT_PRED_RV40_NODOWN	libavcodec/h264pred.h	54;"	d
DIAG_DOWN_RIGHT_PRED	libavcodec/h264pred.h	42;"	d
DIRAC_PARSE_INFO_PREFIX	libavcodec/dirac_parser.c	33;"	d	file:
DIRS	libavcodec/Makefile	/^DIRS = alpha arm bfin mlib ppc ps2 sh4 sparc x86$/;"	m
DIRS	libavfilter/Makefile	/^DIRS = x86 libmpcodecs$/;"	m
DIRS	libavutil/Makefile	/^DIRS = arm bfin sh4 x86$/;"	m
DIRS	libswscale/Makefile	/^DIRS = bfin mlib ppc sparc x86$/;"	m
DISPLAY_SEGMENT	libavcodec/pgssubdec.c	/^    DISPLAY_SEGMENT      = 0x80,$/;"	e	enum:SegmentType	file:
DISTCLEANSUFFIXES	common.mak	/^DISTCLEANSUFFIXES = *.pc$/;"	m
DITHER16	libswscale/swscale_internal.h	235;"	d
DITHER1XBPP	libswscale/swscale_internal.h	38;"	d
DITHER1XBPP	libswscale/x86/yuv2rgb_mmx.c	39;"	d	file:
DITHER32	libswscale/swscale_internal.h	236;"	d
DITHERSTEPS	libavcodec/a64multienc.c	33;"	d	file:
DITHER_COPY	libswscale/swscale_unscaled.c	415;"	d	file:
DITHER_RGB	libswscale/x86/yuv2rgb_template.c	177;"	d	file:
DIVIDE_BY_3	libavcodec/sipr16k.c	172;"	d	file:
DK3_GET_NEXT_NIBBLE	libavcodec/adpcm.c	1008;"	d	file:
DNL	libavcodec/mjpeg.h	/^    DNL   = 0xdc,       \/* define number of lines *\/$/;"	e	enum:__anon218
DNXHDContext	libavcodec/dnxhddec.c	/^} DNXHDContext;$/;"	t	typeref:struct:__anon154	file:
DNXHDEncContext	libavcodec/dnxhdenc.h	/^typedef struct DNXHDEncContext {$/;"	s
DNXHDEncContext	libavcodec/dnxhdenc.h	/^} DNXHDEncContext;$/;"	t	typeref:struct:DNXHDEncContext
DNXHD_DC_VLC_BITS	libavcodec/dnxhddec.c	49;"	d	file:
DNXHD_HEADER_PREFIX	libavcodec/dnxhd_parser.c	29;"	d	file:
DNXHD_VLC_BITS	libavcodec/dnxhddec.c	48;"	d	file:
DO1	libavutil/adler32.c	29;"	d	file:
DO16	libavutil/adler32.c	31;"	d	file:
DO4	libavutil/adler32.c	30;"	d	file:
DOCS	Makefile	/^DOCS = $(addprefix doc\/, developer.html faq.html general.html libavfilter.html) $(HTMLPAGES) $(MANPAGES) $(PODPAGES)$/;"	m
DONT_UNPACK	libavcodec/x86/vc1dsp_mmx.c	56;"	d	file:
DOSUBDIR	Makefile	/^define DOSUBDIR$/;"	m
DOWN	libavcodec/cdgraphics.c	169;"	d	file:
DOWNMIX_TO_STEREO	libavcodec/dca.c	971;"	d	file:
DO_2BITS	libavformat/asfdec.c	697;"	d	file:
DO_UNPACK	libavcodec/x86/vc1dsp_mmx.c	55;"	d	file:
DPB	libavcodec/cavs.h	/^    Picture DPB[2];  \/\/\/< reference frames$/;"	m	struct:__anon207
DPB	libavcodec/vaapi_h264.c	/^typedef struct DPB {$/;"	s	file:
DPB	libavcodec/vaapi_h264.c	/^} DPB;$/;"	t	typeref:struct:DPB	file:
DPCMContext	libavcodec/dpcm.c	/^typedef struct DPCMContext {$/;"	s	file:
DPCMContext	libavcodec/dpcm.c	/^} DPCMContext;$/;"	t	typeref:struct:DPCMContext	file:
DPCM_DECODER	libavcodec/dpcm.c	301;"	d	file:
DPXContext	libavcodec/dpx.c	/^typedef struct DPXContext {$/;"	s	file:
DPXContext	libavcodec/dpx.c	/^} DPXContext;$/;"	t	typeref:struct:DPXContext	file:
DPXContext	libavcodec/dpxenc.c	/^typedef struct DPXContext {$/;"	s	file:
DPXContext	libavcodec/dpxenc.c	/^} DPXContext;$/;"	t	typeref:struct:DPXContext	file:
DQDOUBLE_BEDGE_BOTTOMLEFT	libavcodec/vc1.h	/^    DQDOUBLE_BEDGE_BOTTOMLEFT$/;"	e	enum:DQDoubleEdge
DQDOUBLE_BEDGE_BOTTOMRIGHT	libavcodec/vc1.h	/^    DQDOUBLE_BEDGE_BOTTOMRIGHT,$/;"	e	enum:DQDoubleEdge
DQDOUBLE_BEDGE_TOPLEFT	libavcodec/vc1.h	/^    DQDOUBLE_BEDGE_TOPLEFT,$/;"	e	enum:DQDoubleEdge
DQDOUBLE_BEDGE_TOPRIGHT	libavcodec/vc1.h	/^    DQDOUBLE_BEDGE_TOPRIGHT,$/;"	e	enum:DQDoubleEdge
DQDoubleEdge	libavcodec/vc1.h	/^enum DQDoubleEdge {$/;"	g
DQPROFILE_ALL_MBS	libavcodec/vc1.h	/^    DQPROFILE_ALL_MBS$/;"	e	enum:DQProfile
DQPROFILE_DOUBLE_EDGES	libavcodec/vc1.h	/^    DQPROFILE_DOUBLE_EDGES,$/;"	e	enum:DQProfile
DQPROFILE_FOUR_EDGES	libavcodec/vc1.h	/^    DQPROFILE_FOUR_EDGES,$/;"	e	enum:DQProfile
DQPROFILE_SINGLE_EDGE	libavcodec/vc1.h	/^    DQPROFILE_SINGLE_EDGE,$/;"	e	enum:DQProfile
DQProfile	libavcodec/vc1.h	/^enum DQProfile {$/;"	g
DQSINGLE_BEDGE_BOTTOM	libavcodec/vc1.h	/^    DQSINGLE_BEDGE_BOTTOM$/;"	e	enum:DQSingleEdge
DQSINGLE_BEDGE_LEFT	libavcodec/vc1.h	/^    DQSINGLE_BEDGE_LEFT,$/;"	e	enum:DQSingleEdge
DQSINGLE_BEDGE_RIGHT	libavcodec/vc1.h	/^    DQSINGLE_BEDGE_RIGHT,$/;"	e	enum:DQSingleEdge
DQSINGLE_BEDGE_TOP	libavcodec/vc1.h	/^    DQSINGLE_BEDGE_TOP,$/;"	e	enum:DQSingleEdge
DQSingleEdge	libavcodec/vc1.h	/^enum DQSingleEdge {$/;"	g
DQT	libavcodec/mjpeg.h	/^    DQT   = 0xdb,       \/* define quantization tables *\/$/;"	e	enum:__anon218
DRI	libavcodec/mjpeg.h	/^    DRI   = 0xdd,       \/* define restart interval *\/$/;"	e	enum:__anon218
DSHOWDEBUG	libavdevice/dshow.h	22;"	d
DSPContext	libavcodec/dsputil.h	/^typedef struct DSPContext {$/;"	s
DSPContext	libavcodec/dsputil.h	/^} DSPContext;$/;"	t	typeref:struct:DSPContext
DST	libavcodec/dsputil.c	2202;"	d	file:
DST	libavcodec/dsputil.c	2206;"	d	file:
DST	libavcodec/dsputil.c	2209;"	d	file:
DST	libavcodec/dsputil.c	2213;"	d	file:
DSTW_OFFSET	libswscale/swscale_internal.h	226;"	d
DST_0	libavcodec/sparc/dsputil_vis.c	84;"	d	file:
DST_1	libavcodec/sparc/dsputil_vis.c	85;"	d	file:
DST_2	libavcodec/sparc/dsputil_vis.c	86;"	d	file:
DST_3	libavcodec/sparc/dsputil_vis.c	87;"	d	file:
DST_I	libavcodec/avfft.h	/^    DST_I,$/;"	e	enum:DCTTransformType
DTS_ID	libavformat/mpeg.h	44;"	d
DUMMY_DURATION	libavformat/swf.h	33;"	d
DUMMY_FILE_SIZE	libavformat/swf.h	32;"	d
DUP4	libavcodec/sparc/dsputil_vis.c	54;"	d	file:
DUP8	libavcodec/sparc/dsputil_vis.c	55;"	d	file:
DUP_DATA	libavcodec/avpacket.c	103;"	d	file:
DURATION_MAX_READ_SIZE	libavformat/utils.c	1961;"	d	file:
DURATION_MAX_RETRY	libavformat/utils.c	1962;"	d	file:
DV1394_API_VERSION	libavdevice/dv1394.h	41;"	d
DV1394_DEFAULT_CARD	libavdevice/dv1394.h	32;"	d
DV1394_DEFAULT_CHANNEL	libavdevice/dv1394.h	31;"	d
DV1394_GET_STATUS	libavdevice/dv1394.h	/^        DV1394_GET_STATUS,$/;"	e	enum:__anon310
DV1394_INIT	libavdevice/dv1394.h	/^        DV1394_INIT,$/;"	e	enum:__anon310
DV1394_INVALID	libavdevice/dv1394.h	/^        DV1394_INVALID = 0,$/;"	e	enum:__anon310
DV1394_MAX_FRAMES	libavdevice/dv1394.h	201;"	d
DV1394_NTSC	libavdevice/dv1394.h	/^        DV1394_NTSC = 0,$/;"	e	enum:pal_or_ntsc
DV1394_NTSC_FRAME_SIZE	libavdevice/dv1394.h	208;"	d
DV1394_NTSC_HEIGHT	libavdevice/dv1394.h	36;"	d
DV1394_NTSC_PACKETS_PER_FRAME	libavdevice/dv1394.h	204;"	d
DV1394_PAL	libavdevice/dv1394.h	/^        DV1394_PAL$/;"	e	enum:pal_or_ntsc
DV1394_PAL_FRAME_SIZE	libavdevice/dv1394.h	209;"	d
DV1394_PAL_HEIGHT	libavdevice/dv1394.h	37;"	d
DV1394_PAL_PACKETS_PER_FRAME	libavdevice/dv1394.h	205;"	d
DV1394_RECEIVE_FRAMES	libavdevice/dv1394.h	/^        DV1394_RECEIVE_FRAMES,$/;"	e	enum:__anon310
DV1394_RING_FRAMES	libavdevice/dv1394.h	33;"	d
DV1394_SHUTDOWN	libavdevice/dv1394.h	/^        DV1394_SHUTDOWN,$/;"	e	enum:__anon310
DV1394_START_RECEIVE	libavdevice/dv1394.h	/^        DV1394_START_RECEIVE,$/;"	e	enum:__anon310
DV1394_SUBMIT_FRAMES	libavdevice/dv1394.h	/^        DV1394_SUBMIT_FRAMES,$/;"	e	enum:__anon310
DV1394_WAIT_FRAMES	libavdevice/dv1394.h	/^        DV1394_WAIT_FRAMES,$/;"	e	enum:__anon310
DV1394_WIDTH	libavdevice/dv1394.h	35;"	d
DVBSUB_CLUT_SEGMENT	libavcodec/dvbsubdec.c	29;"	d	file:
DVBSUB_DISPLAYDEFINITION_SEGMENT	libavcodec/dvbsubdec.c	31;"	d	file:
DVBSUB_DISPLAY_SEGMENT	libavcodec/dvbsubdec.c	32;"	d	file:
DVBSUB_OBJECT_SEGMENT	libavcodec/dvbsubdec.c	30;"	d	file:
DVBSUB_PAGE_SEGMENT	libavcodec/dvbsubdec.c	27;"	d	file:
DVBSUB_REGION_SEGMENT	libavcodec/dvbsubdec.c	28;"	d	file:
DVBSubCLUT	libavcodec/dvbsubdec.c	/^typedef struct DVBSubCLUT {$/;"	s	file:
DVBSubCLUT	libavcodec/dvbsubdec.c	/^} DVBSubCLUT;$/;"	t	typeref:struct:DVBSubCLUT	file:
DVBSubContext	libavcodec/dvbsubdec.c	/^typedef struct DVBSubContext {$/;"	s	file:
DVBSubContext	libavcodec/dvbsubdec.c	/^} DVBSubContext;$/;"	t	typeref:struct:DVBSubContext	file:
DVBSubDisplayDefinition	libavcodec/dvbsubdec.c	/^typedef struct DVBSubDisplayDefinition {$/;"	s	file:
DVBSubDisplayDefinition	libavcodec/dvbsubdec.c	/^} DVBSubDisplayDefinition;$/;"	t	typeref:struct:DVBSubDisplayDefinition	file:
DVBSubObject	libavcodec/dvbsubdec.c	/^typedef struct DVBSubObject {$/;"	s	file:
DVBSubObject	libavcodec/dvbsubdec.c	/^} DVBSubObject;$/;"	t	typeref:struct:DVBSubObject	file:
DVBSubObjectDisplay	libavcodec/dvbsubdec.c	/^typedef struct DVBSubObjectDisplay {$/;"	s	file:
DVBSubObjectDisplay	libavcodec/dvbsubdec.c	/^} DVBSubObjectDisplay;$/;"	t	typeref:struct:DVBSubObjectDisplay	file:
DVBSubParseContext	libavcodec/dvbsub_parser.c	/^typedef struct DVBSubParseContext {$/;"	s	file:
DVBSubParseContext	libavcodec/dvbsub_parser.c	/^} DVBSubParseContext;$/;"	t	typeref:struct:DVBSubParseContext	file:
DVBSubRegion	libavcodec/dvbsubdec.c	/^typedef struct DVBSubRegion {$/;"	s	file:
DVBSubRegion	libavcodec/dvbsubdec.c	/^} DVBSubRegion;$/;"	t	typeref:struct:DVBSubRegion	file:
DVBSubRegionDisplay	libavcodec/dvbsubdec.c	/^typedef struct DVBSubRegionDisplay {$/;"	s	file:
DVBSubRegionDisplay	libavcodec/dvbsubdec.c	/^} DVBSubRegionDisplay;$/;"	t	typeref:struct:DVBSubRegionDisplay	file:
DVBSubtitleContext	libavcodec/dvbsub.c	/^typedef struct DVBSubtitleContext {$/;"	s	file:
DVBSubtitleContext	libavcodec/dvbsub.c	/^} DVBSubtitleContext;$/;"	t	typeref:struct:DVBSubtitleContext	file:
DVDSubParseContext	libavcodec/dvdsub_parser.c	/^typedef struct DVDSubParseContext {$/;"	s	file:
DVDSubParseContext	libavcodec/dvdsub_parser.c	/^} DVDSubParseContext;$/;"	t	typeref:struct:DVDSubParseContext	file:
DVDemuxContext	libavformat/dv.c	/^struct DVDemuxContext {$/;"	s	file:
DVDemuxContext	libavformat/dv.h	/^typedef struct DVDemuxContext DVDemuxContext;$/;"	t	typeref:struct:DVDemuxContext
DVMuxContext	libavformat/dv.h	/^typedef struct DVMuxContext DVMuxContext;$/;"	t	typeref:struct:DVMuxContext
DVMuxContext	libavformat/dvenc.c	/^struct DVMuxContext {$/;"	s	file:
DVVideoContext	libavcodec/dv.c	/^typedef struct DVVideoContext {$/;"	s	file:
DVVideoContext	libavcodec/dv.c	/^} DVVideoContext;$/;"	t	typeref:struct:DVVideoContext	file:
DV_MAX_BPM	libavcodec/dvdata.h	275;"	d
DV_MAX_FRAME_SIZE	libavcodec/dvdata.h	270;"	d
DV_PROFILE_BYTES	libavcodec/dvdata.h	265;"	d
DV_PROFILE_IS_1080i50	libavcodec/dvdata.h	260;"	d
DV_PROFILE_IS_720p50	libavcodec/dvdata.h	261;"	d
DV_PROFILE_IS_HD	libavcodec/dvdata.h	259;"	d
DV_VLC_MAP_LEV_SIZE	libavcodec/dv_tablegen.h	31;"	d
DV_VLC_MAP_LEV_SIZE	libavcodec/dv_tablegen.h	34;"	d
DV_VLC_MAP_RUN_SIZE	libavcodec/dv_tablegen.h	30;"	d
DV_VLC_MAP_RUN_SIZE	libavcodec/dv_tablegen.h	33;"	d
DVprofile	libavcodec/dvdata.h	/^typedef struct DVprofile {$/;"	s
DVprofile	libavcodec/dvdata.h	/^} DVprofile;$/;"	t	typeref:struct:DVprofile
DVwork_chunk	libavcodec/dvdata.h	/^typedef struct DVwork_chunk {$/;"	s
DVwork_chunk	libavcodec/dvdata.h	/^} DVwork_chunk;$/;"	t	typeref:struct:DVwork_chunk
DWTCompose	libavcodec/dwt.h	/^} DWTCompose;$/;"	t	typeref:struct:__anon206
DWTContext	libavcodec/dwt.h	/^typedef struct DWTContext {$/;"	s
DWTContext	libavcodec/dwt.h	/^} DWTContext;$/;"	t	typeref:struct:DWTContext
DWTContext	libavcodec/j2k_dwt.h	/^} DWTContext;$/;"	t	typeref:struct:__anon233
DWTELEM	libavcodec/dwt.h	/^typedef int DWTELEM;$/;"	t
DWTType	libavcodec/j2k_dwt.h	/^enum DWTType{$/;"	g
DWT_53	libavcodec/dwt.h	57;"	d
DWT_97	libavcodec/dwt.h	56;"	d
DXAContext	libavformat/dxa.c	/^}DXAContext;$/;"	t	typeref:struct:__anon330	file:
DXA_EXTRA_SIZE	libavformat/dxa.c	26;"	d	file:
D_AVAIL	libavcodec/cavs.h	39;"	d
DataRateData	ffserver.c	/^} DataRateData;$/;"	t	typeref:struct:__anon498	file:
Decorr	libavcodec/wavpack.c	/^typedef struct Decorr {$/;"	s	file:
Decorr	libavcodec/wavpack.c	/^} Decorr;$/;"	t	typeref:struct:Decorr	file:
Descriptor	libavformat/mxf.h	/^    Descriptor,$/;"	e	enum:MXFMetadataSetType
DfaContext	libavcodec/dfa.c	/^typedef struct DfaContext {$/;"	s	file:
DfaContext	libavcodec/dfa.c	/^} DfaContext;$/;"	t	typeref:struct:DfaContext	file:
DigestParams	libavformat/httpauth.h	/^} DigestParams;$/;"	t	typeref:struct:__anon404
DilateContext	libavfilter/vf_libopencv.c	/^} DilateContext;$/;"	t	typeref:struct:__anon15	file:
DiracFreeFrame	libavcodec/libdiracenc.c	/^static void DiracFreeFrame(void *data)$/;"	f	file:
DiracParseContext	libavcodec/dirac_parser.c	/^typedef struct DiracParseContext {$/;"	s	file:
DiracParseContext	libavcodec/dirac_parser.c	/^} DiracParseContext;$/;"	t	typeref:struct:DiracParseContext	file:
DiracParseUnit	libavcodec/dirac_parser.c	/^typedef struct DiracParseUnit$/;"	s	file:
DiracParseUnit	libavcodec/dirac_parser.c	/^} DiracParseUnit;$/;"	t	typeref:struct:DiracParseUnit	file:
Dispositions	libavformat/nut.h	/^} Dispositions;$/;"	t	typeref:struct:__anon495
DrawBoxContext	libavfilter/vf_drawbox.c	/^} DrawBoxContext;$/;"	t	typeref:struct:__anon20	file:
DrawTextContext	libavfilter/vf_drawtext.c	/^} DrawTextContext;$/;"	t	typeref:struct:__anon24	file:
DxaDecContext	libavcodec/dxa.c	/^typedef struct DxaDecContext {$/;"	s	file:
DxaDecContext	libavcodec/dxa.c	/^} DxaDecContext;$/;"	t	typeref:struct:DxaDecContext	file:
DynBuffer	libavformat/aviobuf.c	/^typedef struct DynBuffer {$/;"	s	file:
DynBuffer	libavformat/aviobuf.c	/^} DynBuffer;$/;"	t	typeref:struct:DynBuffer	file:
DynamicPayloadPacketHandlerProc	libavformat/rtpdec.h	/^typedef int (*DynamicPayloadPacketHandlerProc) (AVFormatContext *ctx,$/;"	t
DynamicRangeControl	libavcodec/aac.h	/^} DynamicRangeControl;$/;"	t	typeref:struct:__anon241
E	libavcodec/libvpxenc.c	74;"	d	file:
E	libavcodec/libvpxenc.c	93;"	d	file:
E	libavcodec/options.c	474;"	d	file:
E	libavcodec/options.c	65;"	d	file:
E	libavformat/options.c	66;"	d	file:
E	libavformat/options.c	96;"	d	file:
EA3_HEADER_SIZE	libavformat/oma.c	52;"	d	file:
EAC3FrameType	libavcodec/ac3.h	/^} EAC3FrameType;$/;"	t	typeref:enum:__anon171
EAC3GaqMode	libavcodec/eac3dec.c	/^} EAC3GaqMode;$/;"	t	typeref:enum:__anon86	file:
EAC3_FRAME_TYPE_AC3_CONVERT	libavcodec/ac3.h	/^    EAC3_FRAME_TYPE_AC3_CONVERT,$/;"	e	enum:__anon171
EAC3_FRAME_TYPE_DEPENDENT	libavcodec/ac3.h	/^    EAC3_FRAME_TYPE_DEPENDENT,$/;"	e	enum:__anon171
EAC3_FRAME_TYPE_INDEPENDENT	libavcodec/ac3.h	/^    EAC3_FRAME_TYPE_INDEPENDENT = 0,$/;"	e	enum:__anon171
EAC3_FRAME_TYPE_RESERVED	libavcodec/ac3.h	/^    EAC3_FRAME_TYPE_RESERVED$/;"	e	enum:__anon171
EAC3_GAQ_12	libavcodec/eac3dec.c	/^    EAC3_GAQ_12,$/;"	e	enum:__anon86	file:
EAC3_GAQ_124	libavcodec/eac3dec.c	/^    EAC3_GAQ_124$/;"	e	enum:__anon86	file:
EAC3_GAQ_14	libavcodec/eac3dec.c	/^    EAC3_GAQ_14,$/;"	e	enum:__anon86	file:
EAC3_GAQ_NO	libavcodec/eac3dec.c	/^    EAC3_GAQ_NO =0,$/;"	e	enum:__anon86	file:
EAC3_SR_CODE_REDUCED	libavcodec/eac3dec.c	64;"	d	file:
EACS_TAG	libavformat/electronicarts.c	39;"	d	file:
EAI_FAIL	libavformat/network.h	126;"	d
EAI_FAMILY	libavformat/network.h	130;"	d
EAI_NONAME	libavformat/network.h	134;"	d
EA_PREAMBLE_SIZE	libavcodec/eacmv.c	149;"	d	file:
EA_PREAMBLE_SIZE	libavcodec/eamad.c	39;"	d	file:
EA_PREAMBLE_SIZE	libavcodec/eatgv.c	37;"	d	file:
EBML_BIN	libavformat/matroskadec.c	/^    EBML_BIN,$/;"	e	enum:__anon350	file:
EBML_FLOAT	libavformat/matroskadec.c	/^    EBML_FLOAT,$/;"	e	enum:__anon350	file:
EBML_ID_CRC32	libavformat/matroska.h	45;"	d
EBML_ID_DOCTYPE	libavformat/matroska.h	39;"	d
EBML_ID_DOCTYPEREADVERSION	libavformat/matroska.h	41;"	d
EBML_ID_DOCTYPEVERSION	libavformat/matroska.h	40;"	d
EBML_ID_EBMLMAXIDLENGTH	libavformat/matroska.h	37;"	d
EBML_ID_EBMLMAXSIZELENGTH	libavformat/matroska.h	38;"	d
EBML_ID_EBMLREADVERSION	libavformat/matroska.h	36;"	d
EBML_ID_EBMLVERSION	libavformat/matroska.h	35;"	d
EBML_ID_HEADER	libavformat/matroska.h	32;"	d
EBML_ID_VOID	libavformat/matroska.h	44;"	d
EBML_MAX_DEPTH	libavformat/matroska.h	259;"	d
EBML_NEST	libavformat/matroskadec.c	/^    EBML_NEST,$/;"	e	enum:__anon350	file:
EBML_NONE	libavformat/matroskadec.c	/^    EBML_NONE,$/;"	e	enum:__anon350	file:
EBML_PASS	libavformat/matroskadec.c	/^    EBML_PASS,$/;"	e	enum:__anon350	file:
EBML_STOP	libavformat/matroskadec.c	/^    EBML_STOP,$/;"	e	enum:__anon350	file:
EBML_STR	libavformat/matroskadec.c	/^    EBML_STR,$/;"	e	enum:__anon350	file:
EBML_TYPE_COUNT	libavformat/matroskadec.c	/^    EBML_TYPE_COUNT$/;"	e	enum:__anon350	file:
EBML_UINT	libavformat/matroskadec.c	/^    EBML_UINT,$/;"	e	enum:__anon350	file:
EBML_UTF8	libavformat/matroskadec.c	/^    EBML_UTF8,$/;"	e	enum:__anon350	file:
EBML_VERSION	libavformat/matroska.h	29;"	d
ECHO	common.mak	/^ECHO   = printf "$(1)\\t%s\\n" $(2)$/;"	m
ECONNREFUSED	libavformat/network.h	36;"	d
EDGE_BOTTOM	libavcodec/dsputil.h	511;"	d
EDGE_TOP	libavcodec/dsputil.h	510;"	d
EDGE_WIDTH	libavcodec/dsputil.h	509;"	d
EDIT_UNITS_PER_BODY	libavformat/mxfenc.c	49;"	d	file:
EIGHT_BIT_SAMPLES	libavcodec/jrevdct.c	70;"	d	file:
EIGHT_SHORT_SEQUENCE	libavcodec/aac.h	/^    EIGHT_SHORT_SEQUENCE,$/;"	e	enum:WindowSequence
EINPROGRESS	libavformat/network.h	37;"	d
ELF	libavcodec/arm/asm.S	/^ELF     .eabi_attribute 24, \\val$/;"	l
ELF	libavcodec/arm/asm.S	/^ELF     .eabi_attribute 25, \\val$/;"	l
ELF	libavcodec/arm/asm.S	/^ELF     .size   \\name, . - \\name$/;"	l
ELF	libavcodec/arm/asm.S	/^ELF     .type   \\name, %function$/;"	l
ELF	libavcodec/arm/fft_neon.S	/^ELF     .size fft_tab_neon, . - fft_tab_neon$/;"	l
ELIBS	libavutil/Makefile	/^$(SUBDIR)lzo-test$(EXESUF): ELIBS = -llzo2$/;"	m
EMMS	libswscale/x86/rgb2rgb_template.c	31;"	d	file:
EMMS	libswscale/x86/rgb2rgb_template.c	47;"	d	file:
EMMS	libswscale/x86/rgb2rgb_template.c	49;"	d	file:
EMMS	libswscale/x86/yuv2rgb_template.c	25;"	d	file:
EMULATED_EDGE	libavcodec/dsputil.h	205;"	d
EMULATE_3DNOWEXT	libavcodec/x86/fft_3dn.c	22;"	d	file:
EMU_EDGE_FUNC	libavcodec/x86/dsputil_yasm.asm	/^EMU_EDGE_FUNC     %1$/;"	l
ENCODE	libavcodec/pcm.c	73;"	d	file:
ENCODER_EXTRA_BITS	libavcodec/snow.c	400;"	d	file:
ENDYUV2RGBFUNC	libswscale/yuv2rgb.c	153;"	d	file:
ENDYUV2RGBLINE	libswscale/yuv2rgb.c	142;"	d	file:
END_NOT_FOUND	libavcodec/parser.h	55;"	d
END_OF_STREAM	libavcodec/libxavs.c	30;"	d	file:
END_OF_STREAM	libavcodec/mlp.h	68;"	d
ENERGYSIZE	libavcodec/shorten.c	48;"	d	file:
ENERGY_MEAN	libavcodec/amrwbdata.h	42;"	d
ENVELOPE_ADJUSTMENT_OFFSET	libavcodec/aacsbr.c	42;"	d	file:
EOB	libavcodec/cavsdata.h	102;"	d
EOB	libavcodec/cavsdata.h	477;"	d
EOF_BLOCK	libavcodec/bethsoftvideo.h	/^    EOF_BLOCK           = 0x14,$/;"	e	enum:BethsoftVidBlockType
EOI	libavcodec/mjpeg.h	/^    EOI   = 0xd9,       \/* end of image *\/$/;"	e	enum:__anon218
EPEL_FUNCS	libavcodec/ppc/vp8dsp_altivec.c	227;"	d	file:
EPEL_HV	libavcodec/ppc/vp8dsp_altivec.c	240;"	d	file:
EPROF	libavcodec/bfin/dsputil_bfin.h	104;"	d
EPROF	libavcodec/bfin/dsputil_bfin.h	76;"	d
EPROTONOSUPPORT	libavformat/network.h	34;"	d
ERROR	ffserver.c	4054;"	d	file:
ERROR	ffserver.c	4616;"	d	file:
ESCAPE_CODE	libavcodec/cavs.h	44;"	d
ESC_BT	libavcodec/aac.h	/^    ESC_BT         = 11,    \/\/\/< Spectral data are coded with an escape sequence.$/;"	e	enum:BandType
ESP_OFFSET	libswscale/swscale_internal.h	227;"	d
ES_NAME_PATTERN	libavformat/gxfenc.c	100;"	d	file:
ETIMEDOUT	libavformat/network.h	35;"	d
EVAL_MOTION	libavcodec/roqvideoenc.c	296;"	d	file:
EVENTID_AudioDescriptorSpanningEvent	libavformat/wtvdec.c	/^static const ff_asf_guid EVENTID_AudioDescriptorSpanningEvent =$/;"	v	file:
EVENTID_AudioTypeSpanningEvent	libavformat/wtvdec.c	/^static const ff_asf_guid EVENTID_AudioTypeSpanningEvent =$/;"	v	file:
EVENTID_CSDescriptorSpanningEvent	libavformat/wtvdec.c	/^static const ff_asf_guid EVENTID_CSDescriptorSpanningEvent =$/;"	v	file:
EVENTID_CtxADescriptorSpanningEvent	libavformat/wtvdec.c	/^static const ff_asf_guid EVENTID_CtxADescriptorSpanningEvent =$/;"	v	file:
EVENTID_DVBScramblingControlSpanningEvent	libavformat/wtvdec.c	/^static const ff_asf_guid EVENTID_DVBScramblingControlSpanningEvent =$/;"	v	file:
EVENTID_LanguageSpanningEvent	libavformat/wtvdec.c	/^static const ff_asf_guid EVENTID_LanguageSpanningEvent =$/;"	v	file:
EVENTID_StreamIDSpanningEvent	libavformat/wtvdec.c	/^static const ff_asf_guid EVENTID_StreamIDSpanningEvent =$/;"	v	file:
EVENTID_SubtitleSpanningEvent	libavformat/wtvdec.c	/^static const ff_asf_guid EVENTID_SubtitleSpanningEvent =$/;"	v	file:
EVENTID_TeletextSpanningEvent	libavformat/wtvdec.c	/^static const ff_asf_guid EVENTID_TeletextSpanningEvent =$/;"	v	file:
EXAMPLES	common.mak	/^EXAMPLES  := $(addprefix $(SUBDIR),$(addsuffix -example$(EXESUF),$(EXAMPLES)))$/;"	m
EXAMPLES	doc/examples/Makefile	/^EXAMPLES=encoding-example muxing-example$/;"	m
EXESUF	config.mak	/^EXESUF=$/;"	m
EXP	libavcodec/mjpeg.h	/^    EXP   = 0xdf,       \/* expand reference components *\/$/;"	e	enum:__anon218
EXPMAX	libavcodec/wmadec.c	43;"	d	file:
EXPVLCBITS	libavcodec/wmadec.c	42;"	d	file:
EXP_D15	libavcodec/ac3.h	50;"	d
EXP_D25	libavcodec/ac3.h	51;"	d
EXP_D45	libavcodec/ac3.h	52;"	d
EXP_DIFF_THRESHOLD	libavcodec/ac3enc.c	326;"	d	file:
EXP_NEW	libavcodec/ac3.h	48;"	d
EXP_REUSE	libavcodec/ac3.h	47;"	d
EXTENDED_PAR	libavcodec/mpeg4video.h	46;"	d
EXTENDED_SAR	libavcodec/h264.h	91;"	d
EXTENSION_ID_PS	libavcodec/aacsbr.c	/^    EXTENSION_ID_PS = 2,$/;"	e	enum:__anon118	file:
EXTERN_ASM	config.h	12;"	d
EXTERN_PREFIX	config.h	11;"	d
EXTMIXLEV_NUM_OPTIONS	libavcodec/ac3enc.c	63;"	d	file:
EXTRABYTES	libavcodec/mpegaudiodec.c	42;"	d	file:
EXTRACT	libpostproc/postprocess_altivec_template.c	577;"	d	file:
EXTRACT	libpostproc/postprocess_altivec_template.c	598;"	d	file:
EXTRADATA1_SIZE	libavcodec/rl2.c	38;"	d	file:
EXTRADATA1_SIZE	libavformat/rl2.c	39;"	d	file:
EXTRALIBS	config.mak	/^EXTRALIBS=$/;"	m
EXTRA_BITS	libavcodec/apedec.c	232;"	d	file:
EXTRA_VERSION	config.mak	/^EXTRA_VERSION=$/;"	m
EXT_DATA_ELEMENT	libavcodec/aac.h	/^    EXT_DATA_ELEMENT,$/;"	e	enum:ExtensionPayloadID
EXT_DYNAMIC_RANGE	libavcodec/aac.h	/^    EXT_DYNAMIC_RANGE = 0xb,$/;"	e	enum:ExtensionPayloadID
EXT_FILL	libavcodec/aac.h	/^    EXT_FILL,$/;"	e	enum:ExtensionPayloadID
EXT_FILL_DATA	libavcodec/aac.h	/^    EXT_FILL_DATA,$/;"	e	enum:ExtensionPayloadID
EXT_HEADER_LENGTH	libavformat/mmsh.c	38;"	d	file:
EXT_SBR_DATA	libavcodec/aac.h	/^    EXT_SBR_DATA      = 0xd,$/;"	e	enum:ExtensionPayloadID
EXT_SBR_DATA_CRC	libavcodec/aac.h	/^    EXT_SBR_DATA_CRC  = 0xe,$/;"	e	enum:ExtensionPayloadID
EXT_START_CODE	libavcodec/cavs.h	30;"	d
EXT_START_CODE	libavcodec/mpegvideo.h	76;"	d
EaDemuxContext	libavformat/electronicarts.c	/^typedef struct EaDemuxContext {$/;"	s	file:
EaDemuxContext	libavformat/electronicarts.c	/^} EaDemuxContext;$/;"	t	typeref:struct:EaDemuxContext	file:
Ebml	libavformat/matroskadec.c	/^} Ebml;$/;"	t	typeref:struct:__anon354	file:
EbmlBin	libavformat/matroskadec.c	/^} EbmlBin;$/;"	t	typeref:struct:__anon353	file:
EbmlList	libavformat/matroskadec.c	/^} EbmlList;$/;"	t	typeref:struct:__anon352	file:
EbmlSyntax	libavformat/matroskadec.c	/^typedef const struct EbmlSyntax {$/;"	s	file:
EbmlSyntax	libavformat/matroskadec.c	/^} EbmlSyntax;$/;"	t	typeref:struct:EbmlSyntax	file:
EbmlType	libavformat/matroskadec.c	/^} EbmlType;$/;"	t	typeref:enum:__anon350	file:
EightBpsContext	libavcodec/8bps.c	/^typedef struct EightBpsContext {$/;"	s	file:
EightBpsContext	libavcodec/8bps.c	/^} EightBpsContext;$/;"	t	typeref:struct:EightBpsContext	file:
EightSvxContext	libavcodec/8svx.c	/^typedef struct EightSvxContext {$/;"	s	file:
EightSvxContext	libavcodec/8svx.c	/^} EightSvxContext;$/;"	t	typeref:struct:EightSvxContext	file:
EncBlockInfo	libavcodec/dv.c	/^typedef struct EncBlockInfo {$/;"	s	file:
EncBlockInfo	libavcodec/dv.c	/^} EncBlockInfo;$/;"	t	typeref:struct:EncBlockInfo	file:
EncTypes	libavcodec/vmnc.c	/^enum EncTypes {$/;"	g	file:
Escape124Context	libavcodec/escape124.c	/^typedef struct Escape124Context {$/;"	s	file:
Escape124Context	libavcodec/escape124.c	/^} Escape124Context;$/;"	t	typeref:struct:Escape124Context	file:
EssenceContainerData	libavformat/mxf.h	/^    EssenceContainerData,$/;"	e	enum:MXFMetadataSetType
ExtensionPayloadID	libavcodec/aac.h	/^enum ExtensionPayloadID {$/;"	g
F	libavcodec/g726.c	/^    const uint8_t* F;         \/**< special table #2 *\/$/;"	m	struct:G726Tables	file:
F	tests/tiny_psnr.c	28;"	d	file:
F2	libpostproc/postprocess_altivec_template.c	745;"	d	file:
F2	libpostproc/postprocess_altivec_template.c	825;"	d	file:
FAAN_POSTSCALE	libavcodec/faandct.h	34;"	d
FAAN_SCALE	libavcodec/dct-test.c	80;"	d	file:
FAAN_SCALE	libavcodec/dct-test.c	82;"	d	file:
FASTDIV	libavutil/arm/intmath.h	/^static av_always_inline av_const int FASTDIV(int a, int b)$/;"	f
FASTDIV	libavutil/arm/intmath.h	33;"	d
FASTDIV	libavutil/arm/intmath.h	88;"	d
FASTDIV	libavutil/intmath.h	49;"	d
FASTDIV	libavutil/intmath.h	51;"	d
FASTDIV	libavutil/x86/intmath.h	24;"	d
FAST_BGR2YV12	libswscale/swscale_internal.h	34;"	d
FAST_L2_DIFF	libpostproc/postprocess_template.c	2090;"	d	file:
FATE	Makefile	/^FATE = $(FATE_ACODEC)                                                   \\$/;"	m
FATE_ACODEC	Makefile	/^FATE_ACODEC  = $(ACODEC_TESTS:%=fate-acodec-%)$/;"	m
FATE_ALS_SUITE	tests/fate/als.mak	/^define FATE_ALS_SUITE$/;"	m
FATE_FFT	tests/fate/fft.mak	/^FATE_FFT = fate-fft   fate-ifft   \\$/;"	m
FATE_FFT_FIXED	tests/fate/fft.mak	/^FATE_FFT_FIXED = fate-fft-fixed  fate-ifft-fixed  \\$/;"	m
FATE_H264	tests/fate/h264.mak	/^FATE_H264  := $(FATE_H264:%=fate-h264-conformance-%)                    \\$/;"	m
FATE_H264	tests/fate/h264.mak	/^FATE_H264 = aud_mw_e                                                    \\$/;"	m
FATE_LAVF	Makefile	/^FATE_LAVF    = $(LAVF_TESTS:%=fate-lavf-%)$/;"	m
FATE_LAVFI	Makefile	/^FATE_LAVFI   = $(LAVFI_TESTS:%=fate-lavfi-%)$/;"	m
FATE_SEEK	Makefile	/^FATE_SEEK    = $(SEEK_TESTS:seek_%=fate-seek-%)$/;"	m
FATE_UTILS	Makefile	/^FATE_UTILS = base64 tiny_psnr$/;"	m
FATE_VCODEC	Makefile	/^FATE_VCODEC  = $(FATE_VSYNTH1) $(FATE_VSYNTH2)$/;"	m
FATE_VP8_FULL	tests/fate/vp8.mak	/^define FATE_VP8_FULL$/;"	m
FATE_VP8_SUITE	tests/fate/vp8.mak	/^define FATE_VP8_SUITE$/;"	m
FATE_VSYNTH1	Makefile	/^FATE_VSYNTH1 = $(VCODEC_TESTS:%=fate-vsynth1-%)$/;"	m
FATE_VSYNTH2	Makefile	/^FATE_VSYNTH2 = $(VCODEC_TESTS:%=fate-vsynth2-%)$/;"	m
FBDevContext	libavdevice/fbdev.c	/^} FBDevContext;$/;"	t	typeref:struct:__anon314	file:
FCB_TYPE_AW_PULSES	libavcodec/wmavoice.c	/^    FCB_TYPE_AW_PULSES  = 2, \/\/\/< Pitch-adaptive window (AW) pulse signals,$/;"	e	enum:__anon156	file:
FCB_TYPE_EXC_PULSES	libavcodec/wmavoice.c	/^    FCB_TYPE_EXC_PULSES = 3, \/\/\/< Innovation (fixed) codebook pulse sets in$/;"	e	enum:__anon156	file:
FCB_TYPE_HARDCODED	libavcodec/wmavoice.c	/^    FCB_TYPE_HARDCODED  = 1, \/\/\/< hardcoded (fixed) codebook with per-block$/;"	e	enum:__anon156	file:
FCB_TYPE_SILENCE	libavcodec/wmavoice.c	/^    FCB_TYPE_SILENCE    = 0, \/\/\/< comfort noise during silence$/;"	e	enum:__anon156	file:
FDCT	libavcodec/dct-test.c	/^  enum { FDCT, IDCT } is_idct;$/;"	e	enum:algo::__anon91	file:
FDCTCOL	libavcodec/ppc/fdct_altivec.c	137;"	d	file:
FDCTROW	libavcodec/ppc/fdct_altivec.c	80;"	d	file:
FDCT_COL	libavcodec/x86/fdct_mmx.c	289;"	d	file:
FDCT_ROW_SSE2	libavcodec/x86/fdct_mmx.c	393;"	d	file:
FDCT_ROW_SSE2_H1	libavcodec/x86/fdct_mmx.c	379;"	d	file:
FDCT_ROW_SSE2_H2	libavcodec/x86/fdct_mmx.c	387;"	d	file:
FDSC_TAG	libavformat/segafilm.c	34;"	d	file:
FELEM	libavcodec/resample2.c	34;"	d	file:
FELEM	libavcodec/resample2.c	43;"	d	file:
FELEM	libavcodec/resample2.c	52;"	d	file:
FELEM2	libavcodec/resample2.c	35;"	d	file:
FELEM2	libavcodec/resample2.c	44;"	d	file:
FELEM2	libavcodec/resample2.c	53;"	d	file:
FELEML	libavcodec/resample2.c	36;"	d	file:
FELEML	libavcodec/resample2.c	45;"	d	file:
FELEML	libavcodec/resample2.c	54;"	d	file:
FELEM_MAX	libavcodec/resample2.c	37;"	d	file:
FELEM_MAX	libavcodec/resample2.c	46;"	d	file:
FELEM_MIN	libavcodec/resample2.c	38;"	d	file:
FELEM_MIN	libavcodec/resample2.c	47;"	d	file:
FETCH_NEXT_STREAM_BYTE	libavcodec/aasc.c	40;"	d	file:
FETCH_NEXT_STREAM_BYTE	libavcodec/msrledec.c	33;"	d	file:
FFABS	libavutil/common.h	52;"	d
FFALIGN	libavutil/common.h	62;"	d
FFCFLAGS	av.mk	/^FFCFLAGS  = -DHAVE_AV_CONFIG_H -Wno-sign-compare -Wno-switch -Wno-pointer-sign  $/;"	m
FFEXTRALIBS	common.mak	/^FFEXTRALIBS := $(addprefix -l,$(addsuffix $(BUILDSUF),$(FFLIBS))) $(EXTRALIBS)$/;"	m
FFFILES	av.mk	/^FFFILES := $(sort $(S_FILES)) $(sort $(C_FILES))  $/;"	m
FFIIRFilterCoeffs	libavcodec/iirfilter.c	/^typedef struct FFIIRFilterCoeffs{$/;"	s	file:
FFIIRFilterCoeffs	libavcodec/iirfilter.c	/^}FFIIRFilterCoeffs;$/;"	t	typeref:struct:FFIIRFilterCoeffs	file:
FFIIRFilterState	libavcodec/iirfilter.c	/^typedef struct FFIIRFilterState{$/;"	s	file:
FFIIRFilterState	libavcodec/iirfilter.c	/^}FFIIRFilterState;$/;"	t	typeref:struct:FFIIRFilterState	file:
FFLDFLAGS	common.mak	/^FFLDFLAGS   := $(addprefix -Llib,$(ALLFFLIBS)) $(LDFLAGS)$/;"	m
FFLIBS	Makefile	/^FFLIBS := avutil$/;"	m
FFLIBS	av.mk	/^FFLIBS := $(foreach,NAME,$(FFLIBS),lib$(NAME))  $/;"	m
FFLIBS	common.mak	/^FFLIBS    := $(FFLIBS-yes) $(FFLIBS)$/;"	m
FFLIBS	libavcodec/Makefile	/^FFLIBS = avutil$/;"	m
FFLIBS	libavdevice/Makefile	/^FFLIBS  = avformat avcodec avutil$/;"	m
FFLIBS	libavfilter/Makefile	/^FFLIBS = avutil$/;"	m
FFLIBS	libavformat/Makefile	/^FFLIBS = avcodec avutil$/;"	m
FFLIBS	libpostproc/Makefile	/^FFLIBS = avutil$/;"	m
FFLIBS	libswscale/Makefile	/^FFLIBS = avutil$/;"	m
FFLPCType	libavcodec/lpc.h	/^enum FFLPCType {$/;"	g
FFMAX	libavutil/common.h	55;"	d
FFMAX3	libavutil/common.h	56;"	d
FFMContext	libavformat/ffm.h	/^typedef struct FFMContext {$/;"	s
FFMContext	libavformat/ffm.h	/^} FFMContext;$/;"	t	typeref:struct:FFMContext
FFMIN	libavutil/common.h	57;"	d
FFMIN	tests/tiny_psnr.c	27;"	d	file:
FFMIN3	libavutil/common.h	58;"	d
FFMPEG_CMDUTILS_H	cmdutils.h	23;"	d
FFMPEG_CMDUTILS_H	ffmpeg/cmdutils.h	23;"	d
FFMPEG_CONFIGURATION	config.h	4;"	d
FFMPEG_CONFIGURATION	config.mak	/^FFMPEG_CONFIGURATION=--target-os=linux --arch=arm --enable-cross-compile --cc=\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/bin\/arm-linux-androideabi-gcc --cross-prefix=\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/bin\/arm-linux-androideabi- --nm=\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/bin\/arm-linux-androideabi-nm --extra-cflags='-fPIC -DANDROID' --enable-static --disable-shared --disable-asm --disable-yasm --prefix=\/home\/taoanran\/git\/anrdroid4.0\/ffmpeg_android_bin --extra-ldflags='-Wl,-T,\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/arm-linux-androideabi\/lib\/ldscripts\/armelf_linux_eabi.x -Wl,-rpath-link=\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/ndk\/android-ndk-r6\/platforms\/android-9\/arch-arm\/usr\/lib -L\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/ndk\/android-ndk-r6\/platforms\/android-9\/arch-arm\/usr\/lib -nostdlib \/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/lib\/gcc\/arm-linux-androideabi\/4.4.3\/crtbegin.o \/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/lib\/gcc\/arm-linux-androideabi\/4.4.3\/crtend.o -lc -lm -ldl'$/;"	m
FFMPEG_CONFIG_H	config.h	3;"	d
FFMPEG_CONFIG_MAK	config.mak	/^FFMPEG_CONFIG_MAK=1$/;"	m
FFMPEG_DATADIR	config.h	6;"	d
FFMPEG_DEINT_FILTER	libpostproc/postprocess_internal.h	64;"	d
FFMPEG_FFSERVER_H	ffserver.h	22;"	d
FFMPEG_LIBS	doc/examples/Makefile	/^FFMPEG_LIBS=libavdevice libavformat libavfilter libavcodec libswscale libavutil$/;"	m
FFMPEG_LICENSE	config.h	5;"	d
FFM_HEADER_SIZE	libavformat/ffm.h	30;"	d
FFM_PACKET_SIZE	libavformat/ffm.h	31;"	d
FFNAME	av.mk	/^FFNAME := lib$(NAME)  $/;"	m
FFPsyBand	libavcodec/psymodel.h	/^typedef struct FFPsyBand {$/;"	s
FFPsyBand	libavcodec/psymodel.h	/^} FFPsyBand;$/;"	t	typeref:struct:FFPsyBand
FFPsyContext	libavcodec/psymodel.h	/^typedef struct FFPsyContext {$/;"	s
FFPsyContext	libavcodec/psymodel.h	/^} FFPsyContext;$/;"	t	typeref:struct:FFPsyContext
FFPsyModel	libavcodec/psymodel.h	/^typedef struct FFPsyModel {$/;"	s
FFPsyModel	libavcodec/psymodel.h	/^} FFPsyModel;$/;"	t	typeref:struct:FFPsyModel
FFPsyPreprocessContext	libavcodec/psymodel.c	/^typedef struct FFPsyPreprocessContext{$/;"	s	file:
FFPsyPreprocessContext	libavcodec/psymodel.c	/^}FFPsyPreprocessContext;$/;"	t	typeref:struct:FFPsyPreprocessContext	file:
FFPsyWindowInfo	libavcodec/psymodel.h	/^typedef struct FFPsyWindowInfo {$/;"	s
FFPsyWindowInfo	libavcodec/psymodel.h	/^} FFPsyWindowInfo;$/;"	t	typeref:struct:FFPsyWindowInfo
FFRawVideoDemuxerContext	libavformat/rawdec.h	/^typedef struct FFRawVideoDemuxerContext {$/;"	s
FFRawVideoDemuxerContext	libavformat/rawdec.h	/^} FFRawVideoDemuxerContext;$/;"	t	typeref:struct:FFRawVideoDemuxerContext
FFSERVERLDFLAGS	config.mak	/^FFSERVERLDFLAGS=-Wl,-E$/;"	m
FFSERVER_REFFILE	Makefile	/^FFSERVER_REFFILE = $(SRC_PATH)\/tests\/ffserver.regression.ref$/;"	m
FFSIGN	libavutil/common.h	53;"	d
FFSWAP	libavutil/common.h	60;"	d
FFStream	ffserver.c	/^typedef struct FFStream {$/;"	s	file:
FFStream	ffserver.c	/^} FFStream;$/;"	t	typeref:struct:FFStream	file:
FFT48_3DN	libavcodec/x86/fft_mmx.asm	/^FFT48_3DN _3dn$/;"	l
FFT48_3DN	libavcodec/x86/fft_mmx.asm	/^FFT48_3DN _3dn2$/;"	l
FFTCoefficient	libavcodec/qdm2.c	/^} FFTCoefficient;$/;"	t	typeref:struct:__anon198	file:
FFTComplex	libavcodec/avfft.h	/^typedef struct FFTComplex {$/;"	s
FFTComplex	libavcodec/avfft.h	/^} FFTComplex;$/;"	t	typeref:struct:FFTComplex
FFTComplex	libavcodec/fft.h	/^typedef struct FFTComplex {$/;"	s
FFTComplex	libavcodec/fft.h	/^} FFTComplex;$/;"	t	typeref:struct:FFTComplex
FFTContext	libavcodec/avfft.h	/^typedef struct FFTContext FFTContext;$/;"	t	typeref:struct:FFTContext
FFTContext	libavcodec/fft.h	/^struct FFTContext {$/;"	s
FFTContext	libavcodec/fft.h	/^typedef struct FFTContext FFTContext;$/;"	t	typeref:struct:FFTContext
FFTDComplex	libavcodec/fft.h	/^typedef struct FFTDComplex {$/;"	s
FFTDComplex	libavcodec/fft.h	/^} FFTDComplex;$/;"	t	typeref:struct:FFTDComplex
FFTDouble	libavcodec/fft.h	/^typedef float FFTDouble;$/;"	t
FFTDouble	libavcodec/fft.h	/^typedef int     FFTDouble;$/;"	t
FFTSample	libavcodec/avfft.h	/^typedef float FFTSample;$/;"	t
FFTSample	libavcodec/fft.h	/^typedef int16_t FFTSample;$/;"	t
FFTTone	libavcodec/qdm2.c	/^} FFTTone;$/;"	t	typeref:struct:__anon197	file:
FFT_NAME	libavcodec/fft.h	37;"	d
FFT_NAME	libavcodec/fft.h	43;"	d
FFUDIV	libavutil/common.h	50;"	d
FFUMOD	libavutil/common.h	51;"	d
FFV1Context	libavcodec/ffv1.c	/^typedef struct FFV1Context{$/;"	s	file:
FFV1Context	libavcodec/ffv1.c	/^}FFV1Context;$/;"	t	typeref:struct:FFV1Context	file:
FF_AA_AUTO	libavcodec/avcodec.h	2150;"	d
FF_AA_FASTINT	libavcodec/avcodec.h	2151;"	d
FF_AA_FLOAT	libavcodec/avcodec.h	2153;"	d
FF_AA_INT	libavcodec/avcodec.h	2152;"	d
FF_ALLOCZ_OR_GOTO	libavutil/internal.h	169;"	d
FF_ALLOC_EVENT	ffplay.c	273;"	d	file:
FF_ALLOC_OR_GOTO	libavutil/internal.h	160;"	d
FF_ALPHA_SEMI_TRANSP	libavcodec/avcodec.h	3480;"	d
FF_ALPHA_TRANSP	libavcodec/avcodec.h	3479;"	d
FF_API_ALLOC_OUTPUT_CONTEXT	libavformat/version.h	72;"	d
FF_API_ANTIALIAS_ALGO	libavcodec/version.h	51;"	d
FF_API_AVCODEC_OPEN	libavcodec/version.h	72;"	d
FF_API_DUMP_FORMAT	libavformat/version.h	54;"	d
FF_API_FIND_INFO_TAG	libavformat/version.h	60;"	d
FF_API_FIND_OPT	libavutil/avutil.h	67;"	d
FF_API_FLAC_GLOBAL_OPTS	libavcodec/version.h	66;"	d
FF_API_FLAG_RTP_HINT	libavformat/version.h	78;"	d
FF_API_FORMAT_PARAMETERS	libavformat/version.h	75;"	d
FF_API_GET_BITS_PER_SAMPLE_FMT	libavutil/avutil.h	64;"	d
FF_API_GET_PIX_FMT_NAME	libavcodec/version.h	69;"	d
FF_API_GUESS_IMG2_CODEC	libavformat/version.h	66;"	d
FF_API_OLD_AUDIOCONVERT	libavcodec/version.h	48;"	d
FF_API_OLD_AVIO	libavformat/version.h	51;"	d
FF_API_OLD_EVAL_NAMES	libavutil/avutil.h	61;"	d
FF_API_OLD_FF_PICT_TYPES	libavcodec/version.h	63;"	d
FF_API_OLD_METADATA2	libavformat/version.h	45;"	d
FF_API_OLD_SAMPLE_FMT	libavcodec/version.h	45;"	d
FF_API_OPT_H	libavcodec/version.h	57;"	d
FF_API_PALETTE_CONTROL	libavcodec/version.h	42;"	d
FF_API_PARSE_DATE	libavformat/version.h	57;"	d
FF_API_PKT_DUMP	libavformat/version.h	63;"	d
FF_API_READ_SEEK	libavformat/version.h	48;"	d
FF_API_REQUEST_CHANNELS	libavcodec/version.h	54;"	d
FF_API_SDP_CREATE	libavformat/version.h	69;"	d
FF_API_SWS_CPU_CAPS	libswscale/swscale.h	54;"	d
FF_API_SWS_FORMAT_NAME	libswscale/swscale.h	57;"	d
FF_API_SWS_GETCONTEXT	libswscale/swscale.h	51;"	d
FF_API_THREAD_INIT	libavcodec/version.h	60;"	d
FF_API_V4L	libavdevice/avdevice.h	38;"	d
FF_ARG_GUID	libavformat/riff.h	61;"	d
FF_ARRAY_ELEMS	libavcodec/sinewin_tablegen.c	28;"	d	file:
FF_ARRAY_ELEMS	libavutil/common.h	61;"	d
FF_ASPECT_EXTENDED	libavcodec/avcodec.h	1241;"	d
FF_BI_TYPE	libavcodec/avcodec.h	1066;"	d
FF_BUFFER_HINTS_PRESERVE	libavcodec/avcodec.h	1071;"	d
FF_BUFFER_HINTS_READABLE	libavcodec/avcodec.h	1070;"	d
FF_BUFFER_HINTS_REUSABLE	libavcodec/avcodec.h	1072;"	d
FF_BUFFER_HINTS_VALID	libavcodec/avcodec.h	1069;"	d
FF_BUFFER_TYPE_COPY	libavcodec/avcodec.h	1056;"	d
FF_BUFFER_TYPE_INTERNAL	libavcodec/avcodec.h	1053;"	d
FF_BUFFER_TYPE_SHARED	libavcodec/avcodec.h	1055;"	d
FF_BUFFER_TYPE_USER	libavcodec/avcodec.h	1054;"	d
FF_BUG_AC_VLC	libavcodec/avcodec.h	1435;"	d
FF_BUG_AMV	libavcodec/avcodec.h	1434;"	d
FF_BUG_AUTODETECT	libavcodec/avcodec.h	1429;"	d
FF_BUG_DC_CLIP	libavcodec/avcodec.h	1442;"	d
FF_BUG_DIRECT_BLOCKSIZE	libavcodec/avcodec.h	1439;"	d
FF_BUG_EDGE	libavcodec/avcodec.h	1440;"	d
FF_BUG_HPEL_CHROMA	libavcodec/avcodec.h	1441;"	d
FF_BUG_MS	libavcodec/avcodec.h	1443;"	d
FF_BUG_NO_PADDING	libavcodec/avcodec.h	1433;"	d
FF_BUG_OLD_MSMPEG4	libavcodec/avcodec.h	1430;"	d
FF_BUG_QPEL_CHROMA	libavcodec/avcodec.h	1436;"	d
FF_BUG_QPEL_CHROMA2	libavcodec/avcodec.h	1438;"	d
FF_BUG_STD_QPEL	libavcodec/avcodec.h	1437;"	d
FF_BUG_TRUNCATED	libavcodec/avcodec.h	1444;"	d
FF_BUG_UMP4	libavcodec/avcodec.h	1432;"	d
FF_BUG_XVID_ILACE	libavcodec/avcodec.h	1431;"	d
FF_B_TYPE	libavcodec/avcodec.h	1062;"	d
FF_CMP_BIT	libavcodec/avcodec.h	1853;"	d
FF_CMP_CHROMA	libavcodec/avcodec.h	1863;"	d
FF_CMP_DCT	libavcodec/avcodec.h	1851;"	d
FF_CMP_DCT264	libavcodec/avcodec.h	1862;"	d
FF_CMP_DCTMAX	libavcodec/avcodec.h	1861;"	d
FF_CMP_NSSE	libavcodec/avcodec.h	1858;"	d
FF_CMP_PSNR	libavcodec/avcodec.h	1852;"	d
FF_CMP_RD	libavcodec/avcodec.h	1854;"	d
FF_CMP_SAD	libavcodec/avcodec.h	1848;"	d
FF_CMP_SATD	libavcodec/avcodec.h	1850;"	d
FF_CMP_SSE	libavcodec/avcodec.h	1849;"	d
FF_CMP_VSAD	libavcodec/avcodec.h	1856;"	d
FF_CMP_VSSE	libavcodec/avcodec.h	1857;"	d
FF_CMP_W53	libavcodec/avcodec.h	1859;"	d
FF_CMP_W97	libavcodec/avcodec.h	1860;"	d
FF_CMP_ZERO	libavcodec/avcodec.h	1855;"	d
FF_CODER_TYPE_AC	libavcodec/avcodec.h	1988;"	d
FF_CODER_TYPE_DEFLATE	libavcodec/avcodec.h	1991;"	d
FF_CODER_TYPE_RAW	libavcodec/avcodec.h	1989;"	d
FF_CODER_TYPE_RLE	libavcodec/avcodec.h	1990;"	d
FF_CODER_TYPE_VLC	libavcodec/avcodec.h	1987;"	d
FF_COLOR_GRAY	libavcodec/imgconvert.c	49;"	d	file:
FF_COLOR_RGB	libavcodec/imgconvert.c	48;"	d	file:
FF_COLOR_YUV	libavcodec/imgconvert.c	50;"	d	file:
FF_COLOR_YUV_JPEG	libavcodec/imgconvert.c	51;"	d	file:
FF_COMMON_FRAME	libavcodec/avcodec.h	750;"	d
FF_COMPLIANCE_EXPERIMENTAL	libavcodec/avcodec.h	1478;"	d
FF_COMPLIANCE_NORMAL	libavcodec/avcodec.h	1476;"	d
FF_COMPLIANCE_STRICT	libavcodec/avcodec.h	1475;"	d
FF_COMPLIANCE_UNOFFICIAL	libavcodec/avcodec.h	1477;"	d
FF_COMPLIANCE_VERY_STRICT	libavcodec/avcodec.h	1474;"	d
FF_COMPRESSION_DEFAULT	libavcodec/avcodec.h	2523;"	d
FF_DCT_ALTIVEC	libavcodec/avcodec.h	1648;"	d
FF_DCT_AUTO	libavcodec/avcodec.h	1643;"	d
FF_DCT_FAAN	libavcodec/avcodec.h	1649;"	d
FF_DCT_FASTINT	libavcodec/avcodec.h	1644;"	d
FF_DCT_INT	libavcodec/avcodec.h	1645;"	d
FF_DCT_MLIB	libavcodec/avcodec.h	1647;"	d
FF_DCT_MMX	libavcodec/avcodec.h	1646;"	d
FF_DEBUG_BITSTREAM	libavcodec/avcodec.h	1791;"	d
FF_DEBUG_BUFFERS	libavcodec/avcodec.h	1804;"	d
FF_DEBUG_BUGS	libavcodec/avcodec.h	1801;"	d
FF_DEBUG_DCT_COEFF	libavcodec/avcodec.h	1795;"	d
FF_DEBUG_ER	libavcodec/avcodec.h	1799;"	d
FF_DEBUG_MB_TYPE	libavcodec/avcodec.h	1792;"	d
FF_DEBUG_MMCO	libavcodec/avcodec.h	1800;"	d
FF_DEBUG_MV	libavcodec/avcodec.h	1794;"	d
FF_DEBUG_PICT_INFO	libavcodec/avcodec.h	1789;"	d
FF_DEBUG_PTS	libavcodec/avcodec.h	1798;"	d
FF_DEBUG_QP	libavcodec/avcodec.h	1793;"	d
FF_DEBUG_RC	libavcodec/avcodec.h	1790;"	d
FF_DEBUG_SKIP	libavcodec/avcodec.h	1796;"	d
FF_DEBUG_STARTCODE	libavcodec/avcodec.h	1797;"	d
FF_DEBUG_THREADS	libavcodec/avcodec.h	1805;"	d
FF_DEBUG_VIS_MB_TYPE	libavcodec/avcodec.h	1803;"	d
FF_DEBUG_VIS_MV_B_BACK	libavcodec/avcodec.h	1815;"	d
FF_DEBUG_VIS_MV_B_FOR	libavcodec/avcodec.h	1814;"	d
FF_DEBUG_VIS_MV_P_FOR	libavcodec/avcodec.h	1813;"	d
FF_DEBUG_VIS_QP	libavcodec/avcodec.h	1802;"	d
FF_DEFAULT_QUANT_BIAS	libavcodec/avcodec.h	1950;"	d
FF_DEF_RAWVIDEO_DEMUXER	libavformat/rawdec.h	52;"	d
FF_DEP_LIBS	Makefile	/^FF_DEP_LIBS  := $(DEP_LIBS)$/;"	m
FF_DPRINTF_START	libavfilter/avfilter.c	346;"	d	file:
FF_DTG_AFD_14_9	libavcodec/avcodec.h	1930;"	d
FF_DTG_AFD_16_9	libavcodec/avcodec.h	1929;"	d
FF_DTG_AFD_16_9_SP_14_9	libavcodec/avcodec.h	1932;"	d
FF_DTG_AFD_4_3	libavcodec/avcodec.h	1928;"	d
FF_DTG_AFD_4_3_SP_14_9	libavcodec/avcodec.h	1931;"	d
FF_DTG_AFD_SAME	libavcodec/avcodec.h	1927;"	d
FF_DTG_AFD_SP_4_3	libavcodec/avcodec.h	1933;"	d
FF_DWT53	libavcodec/j2k_dwt.h	/^    FF_DWT53$/;"	e	enum:DWTType
FF_DWT97	libavcodec/j2k_dwt.h	/^    FF_DWT97,$/;"	e	enum:DWTType
FF_DWT_MAX_DECLVLS	libavcodec/j2k_dwt.h	33;"	d
FF_EC_DEBLOCK	libavcodec/avcodec.h	1738;"	d
FF_EC_GUESS_MVS	libavcodec/avcodec.h	1737;"	d
FF_ER_AGGRESSIVE	libavcodec/avcodec.h	1496;"	d
FF_ER_CAREFUL	libavcodec/avcodec.h	1494;"	d
FF_ER_COMPLIANT	libavcodec/avcodec.h	1495;"	d
FF_ER_VERY_AGGRESSIVE	libavcodec/avcodec.h	1497;"	d
FF_EXTRALIBS	Makefile	/^FF_EXTRALIBS := $(FFEXTRALIBS)$/;"	m
FF_FDEBUG_TS	libavformat/avformat.h	829;"	d
FF_FFT_PERM_AVX	libavcodec/fft.h	88;"	d
FF_FFT_PERM_DEFAULT	libavcodec/fft.h	86;"	d
FF_FFT_PERM_SWAP_LSBS	libavcodec/fft.h	87;"	d
FF_FILTER_MODE_BANDPASS	libavcodec/iirfilter.h	/^    FF_FILTER_MODE_BANDPASS,$/;"	e	enum:IIRFilterMode
FF_FILTER_MODE_BANDSTOP	libavcodec/iirfilter.h	/^    FF_FILTER_MODE_BANDSTOP,$/;"	e	enum:IIRFilterMode
FF_FILTER_MODE_HIGHPASS	libavcodec/iirfilter.h	/^    FF_FILTER_MODE_HIGHPASS,$/;"	e	enum:IIRFilterMode
FF_FILTER_MODE_LOWPASS	libavcodec/iirfilter.h	/^    FF_FILTER_MODE_LOWPASS,$/;"	e	enum:IIRFilterMode
FF_FILTER_TYPE_BESSEL	libavcodec/iirfilter.h	/^    FF_FILTER_TYPE_BESSEL,$/;"	e	enum:IIRFilterType
FF_FILTER_TYPE_BIQUAD	libavcodec/iirfilter.h	/^    FF_FILTER_TYPE_BIQUAD,$/;"	e	enum:IIRFilterType
FF_FILTER_TYPE_BUTTERWORTH	libavcodec/iirfilter.h	/^    FF_FILTER_TYPE_BUTTERWORTH,$/;"	e	enum:IIRFilterType
FF_FILTER_TYPE_CHEBYSHEV	libavcodec/iirfilter.h	/^    FF_FILTER_TYPE_CHEBYSHEV,$/;"	e	enum:IIRFilterType
FF_FILTER_TYPE_ELLIPTIC	libavcodec/iirfilter.h	/^    FF_FILTER_TYPE_ELLIPTIC,$/;"	e	enum:IIRFilterType
FF_HUFFMAN_FLAG_HNODE_FIRST	libavcodec/huffman.h	35;"	d
FF_HUFFMAN_FLAG_ZERO_COUNT	libavcodec/huffman.h	36;"	d
FF_IDCT_ALTIVEC	libavcodec/avcodec.h	1700;"	d
FF_IDCT_ARM	libavcodec/avcodec.h	1699;"	d
FF_IDCT_AUTO	libavcodec/avcodec.h	1692;"	d
FF_IDCT_BINK	libavcodec/avcodec.h	1716;"	d
FF_IDCT_CAVS	libavcodec/avcodec.h	1707;"	d
FF_IDCT_EA	libavcodec/avcodec.h	1713;"	d
FF_IDCT_FAAN	libavcodec/avcodec.h	1712;"	d
FF_IDCT_H264	libavcodec/avcodec.h	1703;"	d
FF_IDCT_INT	libavcodec/avcodec.h	1693;"	d
FF_IDCT_IPP	libavcodec/avcodec.h	1705;"	d
FF_IDCT_LIBMPEG2MMX	libavcodec/avcodec.h	1696;"	d
FF_IDCT_MLIB	libavcodec/avcodec.h	1698;"	d
FF_IDCT_PS2	libavcodec/avcodec.h	1697;"	d
FF_IDCT_SH4	libavcodec/avcodec.h	1701;"	d
FF_IDCT_SIMPLE	libavcodec/avcodec.h	1694;"	d
FF_IDCT_SIMPLEALPHA	libavcodec/avcodec.h	1715;"	d
FF_IDCT_SIMPLEARM	libavcodec/avcodec.h	1702;"	d
FF_IDCT_SIMPLEARMV5TE	libavcodec/avcodec.h	1708;"	d
FF_IDCT_SIMPLEARMV6	libavcodec/avcodec.h	1709;"	d
FF_IDCT_SIMPLEMMX	libavcodec/avcodec.h	1695;"	d
FF_IDCT_SIMPLENEON	libavcodec/avcodec.h	1714;"	d
FF_IDCT_SIMPLEVIS	libavcodec/avcodec.h	1710;"	d
FF_IDCT_VP3	libavcodec/avcodec.h	1704;"	d
FF_IDCT_WMV2	libavcodec/avcodec.h	1711;"	d
FF_IDCT_XVIDMMX	libavcodec/avcodec.h	1706;"	d
FF_INPUT_BUFFER_PADDING_SIZE	libavcodec/avcodec.h	433;"	d
FF_I_TYPE	libavcodec/avcodec.h	1060;"	d
FF_KBD_WINDOW_MAX	libavcodec/kbdwin.h	25;"	d
FF_LAMBDA_MAX	libavutil/avutil.h	98;"	d
FF_LAMBDA_SCALE	libavutil/avutil.h	96;"	d
FF_LAMBDA_SHIFT	libavutil/avutil.h	95;"	d
FF_LDFLAGS	Makefile	/^FF_LDFLAGS   := $(FFLDFLAGS)$/;"	m
FF_LEVEL_UNKNOWN	libavcodec/avcodec.h	2289;"	d
FF_LIBMPEG2_IDCT_PERM	libavcodec/dsputil.h	497;"	d
FF_LOSS_ALPHA	libavcodec/avcodec.h	3430;"	d
FF_LOSS_CHROMA	libavcodec/avcodec.h	3432;"	d
FF_LOSS_COLORQUANT	libavcodec/avcodec.h	3431;"	d
FF_LOSS_COLORSPACE	libavcodec/avcodec.h	3429;"	d
FF_LOSS_DEPTH	libavcodec/avcodec.h	3428;"	d
FF_LOSS_RESOLUTION	libavcodec/avcodec.h	3427;"	d
FF_LPC_TYPE_CHOLESKY	libavcodec/lpc.h	/^    FF_LPC_TYPE_CHOLESKY    =  3, \/\/\/< Cholesky factorization$/;"	e	enum:FFLPCType
FF_LPC_TYPE_DEFAULT	libavcodec/lpc.h	/^    FF_LPC_TYPE_DEFAULT     = -1, \/\/\/< use the codec default LPC type$/;"	e	enum:FFLPCType
FF_LPC_TYPE_FIXED	libavcodec/lpc.h	/^    FF_LPC_TYPE_FIXED       =  1, \/\/\/< fixed LPC coefficients$/;"	e	enum:FFLPCType
FF_LPC_TYPE_LEVINSON	libavcodec/lpc.h	/^    FF_LPC_TYPE_LEVINSON    =  2, \/\/\/< Levinson-Durbin recursion$/;"	e	enum:FFLPCType
FF_LPC_TYPE_NB	libavcodec/lpc.h	/^    FF_LPC_TYPE_NB              , \/\/\/< Not part of ABI$/;"	e	enum:FFLPCType
FF_LPC_TYPE_NONE	libavcodec/lpc.h	/^    FF_LPC_TYPE_NONE        =  0, \/\/\/< do not use LPC prediction or use all zero coefficients$/;"	e	enum:FFLPCType
FF_LZW_GIF	libavcodec/lzw.h	/^    FF_LZW_GIF,$/;"	e	enum:FF_LZW_MODES
FF_LZW_MODES	libavcodec/lzw.h	/^enum FF_LZW_MODES{$/;"	g
FF_LZW_TIFF	libavcodec/lzw.h	/^    FF_LZW_TIFF$/;"	e	enum:FF_LZW_MODES
FF_MAX_B_FRAMES	libavcodec/avcodec.h	556;"	d
FF_MB_DECISION_BITS	libavcodec/avcodec.h	2038;"	d
FF_MB_DECISION_RD	libavcodec/avcodec.h	2039;"	d
FF_MB_DECISION_SIMPLE	libavcodec/avcodec.h	2037;"	d
FF_MDCT_PERM_INTERLEAVE	libavcodec/fft.h	91;"	d
FF_MDCT_PERM_NONE	libavcodec/fft.h	90;"	d
FF_MEDIASUBTYPE_BASE_GUID	libavformat/riff.h	80;"	d
FF_MERGE_MARKER	libavcodec/avpacket.c	200;"	d	file:
FF_MIN_BUFFER_SIZE	libavcodec/avcodec.h	439;"	d
FF_MOV_FLAG_RTP_HINT	libavformat/movenc.h	117;"	d
FF_NO_IDCT_PERM	libavcodec/dsputil.h	496;"	d
FF_OPT_TYPE_BINARY	libavutil/opt.h	/^    FF_OPT_TYPE_BINARY,  \/\/\/< offset must point to a pointer immediately followed by an int for the length$/;"	e	enum:AVOptionType
FF_OPT_TYPE_CONST	libavutil/opt.h	/^    FF_OPT_TYPE_CONST=128,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_DOUBLE	libavutil/opt.h	/^    FF_OPT_TYPE_DOUBLE,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_FLAGS	libavutil/opt.h	/^    FF_OPT_TYPE_FLAGS,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_FLOAT	libavutil/opt.h	/^    FF_OPT_TYPE_FLOAT,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_INT	libavutil/opt.h	/^    FF_OPT_TYPE_INT,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_INT64	libavutil/opt.h	/^    FF_OPT_TYPE_INT64,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_RATIONAL	libavutil/opt.h	/^    FF_OPT_TYPE_RATIONAL,$/;"	e	enum:AVOptionType
FF_OPT_TYPE_STRING	libavutil/opt.h	/^    FF_OPT_TYPE_STRING,$/;"	e	enum:AVOptionType
FF_PARTTRANS_IDCT_PERM	libavcodec/dsputil.h	500;"	d
FF_PIXEL_PACKED	libavcodec/imgconvert.c	54;"	d	file:
FF_PIXEL_PALETTE	libavcodec/imgconvert.c	55;"	d	file:
FF_PIXEL_PLANAR	libavcodec/imgconvert.c	53;"	d	file:
FF_PRED_LEFT	libavcodec/avcodec.h	1763;"	d
FF_PRED_MEDIAN	libavcodec/avcodec.h	1765;"	d
FF_PRED_PLANE	libavcodec/avcodec.h	1764;"	d
FF_PRI_GUID	libavformat/riff.h	59;"	d
FF_PROFILE_AAC_LOW	libavcodec/avcodec.h	2244;"	d
FF_PROFILE_AAC_LTP	libavcodec/avcodec.h	2246;"	d
FF_PROFILE_AAC_MAIN	libavcodec/avcodec.h	2243;"	d
FF_PROFILE_AAC_SSR	libavcodec/avcodec.h	2245;"	d
FF_PROFILE_DTS	libavcodec/avcodec.h	2248;"	d
FF_PROFILE_DTS_96_24	libavcodec/avcodec.h	2250;"	d
FF_PROFILE_DTS_ES	libavcodec/avcodec.h	2249;"	d
FF_PROFILE_DTS_HD_HRA	libavcodec/avcodec.h	2251;"	d
FF_PROFILE_DTS_HD_MA	libavcodec/avcodec.h	2252;"	d
FF_PROFILE_H264_BASELINE	libavcodec/avcodec.h	2264;"	d
FF_PROFILE_H264_CAVLC_444	libavcodec/avcodec.h	2276;"	d
FF_PROFILE_H264_CONSTRAINED	libavcodec/avcodec.h	2261;"	d
FF_PROFILE_H264_CONSTRAINED_BASELINE	libavcodec/avcodec.h	2265;"	d
FF_PROFILE_H264_EXTENDED	libavcodec/avcodec.h	2267;"	d
FF_PROFILE_H264_HIGH	libavcodec/avcodec.h	2268;"	d
FF_PROFILE_H264_HIGH_10	libavcodec/avcodec.h	2269;"	d
FF_PROFILE_H264_HIGH_10_INTRA	libavcodec/avcodec.h	2270;"	d
FF_PROFILE_H264_HIGH_422	libavcodec/avcodec.h	2271;"	d
FF_PROFILE_H264_HIGH_422_INTRA	libavcodec/avcodec.h	2272;"	d
FF_PROFILE_H264_HIGH_444	libavcodec/avcodec.h	2273;"	d
FF_PROFILE_H264_HIGH_444_INTRA	libavcodec/avcodec.h	2275;"	d
FF_PROFILE_H264_HIGH_444_PREDICTIVE	libavcodec/avcodec.h	2274;"	d
FF_PROFILE_H264_INTRA	libavcodec/avcodec.h	2262;"	d
FF_PROFILE_H264_MAIN	libavcodec/avcodec.h	2266;"	d
FF_PROFILE_MPEG2_422	libavcodec/avcodec.h	2254;"	d
FF_PROFILE_MPEG2_HIGH	libavcodec/avcodec.h	2255;"	d
FF_PROFILE_MPEG2_MAIN	libavcodec/avcodec.h	2258;"	d
FF_PROFILE_MPEG2_SIMPLE	libavcodec/avcodec.h	2259;"	d
FF_PROFILE_MPEG2_SNR_SCALABLE	libavcodec/avcodec.h	2257;"	d
FF_PROFILE_MPEG2_SS	libavcodec/avcodec.h	2256;"	d
FF_PROFILE_RESERVED	libavcodec/avcodec.h	2241;"	d
FF_PROFILE_UNKNOWN	libavcodec/avcodec.h	2240;"	d
FF_PROFILE_VC1_ADVANCED	libavcodec/avcodec.h	2281;"	d
FF_PROFILE_VC1_COMPLEX	libavcodec/avcodec.h	2280;"	d
FF_PROFILE_VC1_MAIN	libavcodec/avcodec.h	2279;"	d
FF_PROFILE_VC1_SIMPLE	libavcodec/avcodec.h	2278;"	d
FF_P_TYPE	libavcodec/avcodec.h	1061;"	d
FF_QP2LAMBDA	libavutil/avutil.h	97;"	d
FF_QSCALE_TYPE_H264	libavcodec/avcodec.h	1050;"	d
FF_QSCALE_TYPE_MPEG1	libavcodec/avcodec.h	1048;"	d
FF_QSCALE_TYPE_MPEG2	libavcodec/avcodec.h	1049;"	d
FF_QSCALE_TYPE_VP56	libavcodec/avcodec.h	1051;"	d
FF_QUALITY_SCALE	libavutil/avutil.h	100;"	d
FF_QUIT_EVENT	ffplay.c	275;"	d	file:
FF_RC_STRATEGY_XVID	libavcodec/avcodec.h	1356;"	d
FF_REFRESH_EVENT	ffplay.c	274;"	d	file:
FF_RTP_FLAG_MP4A_LATM	libavformat/rtpenc.h	66;"	d
FF_RTP_FLAG_OPTS	libavformat/rtpenc.h	68;"	d
FF_S3TC_DXT1	libavcodec/s3tc.h	27;"	d
FF_S3TC_DXT3	libavcodec/s3tc.h	28;"	d
FF_SIMPLE_IDCT_PERM	libavcodec/dsputil.h	498;"	d
FF_SI_TYPE	libavcodec/avcodec.h	1064;"	d
FF_SP_TYPE	libavcodec/avcodec.h	1065;"	d
FF_SSE2_IDCT_PERM	libavcodec/dsputil.h	501;"	d
FF_SYMVER	libavutil/internal.h	209;"	d
FF_SYMVER	libavutil/internal.h	213;"	d
FF_S_TYPE	libavcodec/avcodec.h	1063;"	d
FF_THREAD_FRAME	libavcodec/avcodec.h	2852;"	d
FF_THREAD_SLICE	libavcodec/avcodec.h	2853;"	d
FF_TRANSPOSE_IDCT_PERM	libavcodec/dsputil.h	499;"	d
FF_VDPAU_STATE_USED_FOR_REFERENCE	libavcodec/vdpau.h	56;"	d
FF_VDPAU_STATE_USED_FOR_RENDER	libavcodec/vdpau.h	50;"	d
FIELD_OR_MBAFF_PICTURE	libavcodec/h264.h	83;"	d
FIELD_PICTURE	libavcodec/h264.h	74;"	d
FIELD_PICTURE	libavcodec/h264.h	79;"	d
FIFO_PACKETS_NUM	libavdevice/jack_audio.c	36;"	d	file:
FIFO_SIZE	libavfilter/vf_select.c	112;"	d	file:
FILL_BLOCK	libavcodec/bink.c	/^    FILL_BLOCK,     \/\/\/< block is filled with single colour$/;"	e	enum:BlockTypes	file:
FILM_TAG	libavformat/segafilm.c	33;"	d	file:
FILTER	libavcodec/h264_loopfilter.c	301;"	d	file:
FILTER	libavcodec/h264_loopfilter.c	326;"	d	file:
FILTER	libavfilter/vf_yadif.c	66;"	d	file:
FILTER	libavfilter/x86/yadif_template.c	114;"	d	file:
FILTER	libavfilter/x86/yadif_template.c	263;"	d	file:
FILTER_4TAP	libavcodec/vp8dsp.c	330;"	d	file:
FILTER_6TAP	libavcodec/vp8dsp.c	326;"	d	file:
FILTER_BILINEAR	libavcodec/x86/vp8dsp.asm	/^FILTER_BILINEAR   sse2, 8, 7$/;"	l
FILTER_BILINEAR	libavcodec/x86/vp8dsp.asm	/^FILTER_BILINEAR mmxext, 4, 0$/;"	l
FILTER_BILINEAR_SSSE3	libavcodec/x86/vp8dsp.asm	/^FILTER_BILINEAR_SSSE3 4$/;"	l
FILTER_BILINEAR_SSSE3	libavcodec/x86/vp8dsp.asm	/^FILTER_BILINEAR_SSSE3 8$/;"	l
FILTER_BW_O4	libavcodec/iirfilter.c	222;"	d	file:
FILTER_BW_O4_1	libavcodec/iirfilter.c	210;"	d	file:
FILTER_DIRECT_FORM_II	libavcodec/iirfilter.c	235;"	d	file:
FILTER_H	libavcodec/ppc/vp8dsp_altivec.c	58;"	d	file:
FILTER_O2	libavcodec/iirfilter.c	257;"	d	file:
FILTER_SHIFT	libavcodec/resample2.c	32;"	d	file:
FILTER_SHIFT	libavcodec/resample2.c	41;"	d	file:
FILTER_SHIFT	libavcodec/resample2.c	50;"	d	file:
FILTER_SSSE3	libavcodec/x86/vp8dsp.asm	/^FILTER_SSSE3 4, 0, 0$/;"	l
FILTER_SSSE3	libavcodec/x86/vp8dsp.asm	/^FILTER_SSSE3 8, 8, 7$/;"	l
FILTER_V	libavcodec/ppc/vp8dsp_altivec.c	146;"	d	file:
FILTER_V	libavcodec/x86/vp8dsp.asm	/^FILTER_V mmxext, 4, 0$/;"	l
FILTER_V	libavcodec/x86/vp8dsp.asm	/^FILTER_V sse2,   8, 8$/;"	l
FILT_ORDER	libavcodec/iirfilter.c	314;"	d	file:
FILT_ORDER	libavcodec/psymodel.c	64;"	d	file:
FIND_MIN_MAX	libpostproc/postprocess_template.c	1064;"	d	file:
FIND_MIN_MAX	libpostproc/postprocess_template.c	1079;"	d	file:
FINF_TAG	libavformat/westwood.c	46;"	d	file:
FIR	libavcodec/mlp.h	70;"	d
FIRMUL	libavcodec/x86/mlpdsp.c	110;"	d	file:
FIRMULREG	libavcodec/x86/mlpdsp.c	62;"	d	file:
FIRMULREG	libavcodec/x86/mlpdsp.c	87;"	d	file:
FIRSTBLK_VLC_SIZE	libavcodec/rv34vlc.h	37;"	d
FIRST_AUDIO_BLOCK	libavcodec/bethsoftvideo.h	/^    FIRST_AUDIO_BLOCK   = 0x7c,$/;"	e	enum:BethsoftVidBlockType
FIRST_PAIR_BT	libavcodec/aac.h	/^    FIRST_PAIR_BT  = 5,     \/\/\/< This and later band types encode two values (rather than four) with one code word.$/;"	e	enum:BandType
FIRST_QTR	libavcodec/bgmc.c	35;"	d	file:
FIX	libavcodec/jrevdct.c	1156;"	d	file:
FIX	libavcodec/jrevdct.c	145;"	d	file:
FIX	libavcodec/mpegaudio.h	57;"	d
FIX	libavfilter/libmpcodecs/vf_fspp.c	702;"	d	file:
FIX	libavutil/colorspace.h	32;"	d
FIX	tests/rotozoom.c	58;"	d	file:
FIX	tests/videogen.c	30;"	d	file:
FIX15	libavcodec/fft-internal.h	24;"	d
FIX15	libavcodec/fft-internal.h	45;"	d
FIX64	libavfilter/libmpcodecs/vf_fspp.c	704;"	d	file:
FIXEDFMT	libavcodec/cos_tablegen.c	32;"	d	file:
FIXED_CB_SIZE	libavcodec/ra144.h	31;"	d
FIXFIX	libavcodec/aacsbr.c	/^    FIXFIX,$/;"	e	enum:__anon117	file:
FIXHR	libavcodec/dct32.c	27;"	d	file:
FIXHR	libavcodec/dct32.c	32;"	d	file:
FIXHR	libavcodec/mpegaudiodec.c	101;"	d	file:
FIXHR	libavcodec/mpegaudiodec.c	91;"	d	file:
FIXP	tests/rotozoom.c	27;"	d	file:
FIXR	libavcodec/mpegaudiodec.c	100;"	d	file:
FIXR	libavcodec/mpegaudiodec.c	90;"	d	file:
FIXR_OLD	libavcodec/mpegaudiodec.c	89;"	d	file:
FIXR_OLD	libavcodec/mpegaudiodec.c	99;"	d	file:
FIXVAR	libavcodec/aacsbr.c	/^    FIXVAR,$/;"	e	enum:__anon117	file:
FIX_0_211164243	libavcodec/jrevdct.c	183;"	d	file:
FIX_0_275899380	libavcodec/jrevdct.c	184;"	d	file:
FIX_0_298631336	libavcodec/arm/jrevdct_arm.S	/^#define FIX_0_298631336 2446$/;"	d
FIX_0_298631336	libavcodec/jfdctint.c	141;"	d	file:
FIX_0_298631336	libavcodec/jrevdct.c	185;"	d	file:
FIX_0_298631336_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_0_298631336_ID      0$/;"	d
FIX_0_382683433	libavcodec/jfdctfst.c	118;"	d	file:
FIX_0_382683433	libavfilter/libmpcodecs/vf_fspp.c	/^static const int16_t FIX_0_382683433=FIX(0.382683433, 14);$/;"	v	file:
FIX_0_390180644	libavcodec/jfdctint.c	142;"	d	file:
FIX_0_390180644	libavcodec/jrevdct.c	186;"	d	file:
FIX_0_509795579	libavcodec/jrevdct.c	187;"	d	file:
FIX_0_541196100	libavcodec/arm/jrevdct_arm.S	/^#define FIX_0_541196100 4433$/;"	d
FIX_0_541196100	libavcodec/jfdctfst.c	119;"	d	file:
FIX_0_541196100	libavcodec/jfdctfst.c	333;"	d	file:
FIX_0_541196100	libavcodec/jfdctint.c	143;"	d	file:
FIX_0_541196100	libavcodec/jrevdct.c	188;"	d	file:
FIX_0_541196100	libavfilter/libmpcodecs/vf_fspp.c	/^static const int16_t FIX_0_541196100=FIX(0.541196100, 14);$/;"	v	file:
FIX_0_541196100_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_0_541196100_ID      4$/;"	d
FIX_0_601344887	libavcodec/jrevdct.c	189;"	d	file:
FIX_0_707106781	libavcodec/jfdctfst.c	120;"	d	file:
FIX_0_707106781	libavfilter/libmpcodecs/vf_fspp.c	/^static const int16_t FIX_0_707106781=FIX(0.707106781, 14);$/;"	v	file:
FIX_0_765366865	libavcodec/arm/jrevdct_arm.S	/^#define FIX_0_765366865 6270$/;"	d
FIX_0_765366865	libavcodec/jfdctint.c	144;"	d	file:
FIX_0_765366865	libavcodec/jrevdct.c	190;"	d	file:
FIX_0_765366865_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_0_765366865_ID      8$/;"	d
FIX_0_785694958	libavcodec/jrevdct.c	191;"	d	file:
FIX_0_899976223	libavcodec/jfdctint.c	145;"	d	file:
FIX_0_899976223	libavcodec/jrevdct.c	192;"	d	file:
FIX_0xFFFF	libavcodec/arm/jrevdct_arm.S	/^#define FIX_0xFFFF 0xFFFF$/;"	d
FIX_0xFFFF_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_0xFFFF_ID          48$/;"	d
FIX_1_061594337	libavcodec/jrevdct.c	193;"	d	file:
FIX_1_082392200	libavcodec/4xm.c	150;"	d	file:
FIX_1_082392200	libavfilter/libmpcodecs/vf_fspp.c	/^static const int16_t FIX_1_082392200=FIX(1.082392200, 13);$/;"	v	file:
FIX_1_111140466	libavcodec/jrevdct.c	194;"	d	file:
FIX_1_175875602	libavcodec/arm/jrevdct_arm.S	/^#define FIX_1_175875602 9633$/;"	d
FIX_1_175875602	libavcodec/jfdctint.c	146;"	d	file:
FIX_1_175875602	libavcodec/jrevdct.c	195;"	d	file:
FIX_1_175875602_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_1_175875602_ID     12$/;"	d
FIX_1_306562965	libavcodec/jfdctfst.c	121;"	d	file:
FIX_1_306562965	libavcodec/jfdctfst.c	334;"	d	file:
FIX_1_306562965	libavcodec/jrevdct.c	196;"	d	file:
FIX_1_306562965	libavfilter/libmpcodecs/vf_fspp.c	/^static const int16_t FIX_1_306562965=FIX(1.306562965, 14);$/;"	v	file:
FIX_1_387039845	libavcodec/jrevdct.c	197;"	d	file:
FIX_1_414213562	libavcodec/4xm.c	151;"	d	file:
FIX_1_414213562	libavfilter/libmpcodecs/vf_fspp.c	/^static const int16_t FIX_1_414213562=FIX(1.414213562, 13);$/;"	v	file:
FIX_1_414213562_A	libavfilter/libmpcodecs/vf_fspp.c	/^static const int16_t FIX_1_414213562_A=FIX(1.414213562, 14);$/;"	v	file:
FIX_1_451774981	libavcodec/jrevdct.c	198;"	d	file:
FIX_1_501321110	libavcodec/arm/jrevdct_arm.S	/^#define FIX_1_501321110 12299$/;"	d
FIX_1_501321110	libavcodec/jfdctint.c	147;"	d	file:
FIX_1_501321110	libavcodec/jrevdct.c	199;"	d	file:
FIX_1_501321110_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_1_501321110_ID     16$/;"	d
FIX_1_662939225	libavcodec/jrevdct.c	200;"	d	file:
FIX_1_847759065	libavcodec/4xm.c	152;"	d	file:
FIX_1_847759065	libavcodec/jfdctint.c	148;"	d	file:
FIX_1_847759065	libavcodec/jrevdct.c	201;"	d	file:
FIX_1_847759065	libavfilter/libmpcodecs/vf_fspp.c	/^static const int16_t FIX_1_847759065=FIX(1.847759065, 13);$/;"	v	file:
FIX_1_961570560	libavcodec/jfdctint.c	149;"	d	file:
FIX_1_961570560	libavcodec/jrevdct.c	202;"	d	file:
FIX_2_053119869	libavcodec/arm/jrevdct_arm.S	/^#define FIX_2_053119869 16819$/;"	d
FIX_2_053119869	libavcodec/jfdctint.c	150;"	d	file:
FIX_2_053119869	libavcodec/jrevdct.c	203;"	d	file:
FIX_2_053119869_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_2_053119869_ID     20$/;"	d
FIX_2_172734803	libavcodec/jrevdct.c	204;"	d	file:
FIX_2_562915447	libavcodec/jfdctint.c	151;"	d	file:
FIX_2_562915447	libavcodec/jrevdct.c	205;"	d	file:
FIX_2_613125930	libavcodec/4xm.c	153;"	d	file:
FIX_2_613125930	libavfilter/libmpcodecs/vf_fspp.c	/^static const int16_t FIX_2_613125930=FIX(-2.613125930, 13); \/\/-$/;"	v	file:
FIX_3_072711026	libavcodec/arm/jrevdct_arm.S	/^#define FIX_3_072711026 25172$/;"	d
FIX_3_072711026	libavcodec/jfdctint.c	152;"	d	file:
FIX_3_072711026	libavcodec/jrevdct.c	206;"	d	file:
FIX_3_072711026_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_3_072711026_ID     24$/;"	d
FIX_M_0_390180644	libavcodec/arm/jrevdct_arm.S	/^#define FIX_M_0_390180644 -3196$/;"	d
FIX_M_0_390180644_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_M_0_390180644_ID   28$/;"	d
FIX_M_0_899976223	libavcodec/arm/jrevdct_arm.S	/^#define FIX_M_0_899976223 -7373$/;"	d
FIX_M_0_899976223_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_M_0_899976223_ID   32$/;"	d
FIX_M_1_847759065	libavcodec/arm/jrevdct_arm.S	/^#define FIX_M_1_847759065 -15137$/;"	d
FIX_M_1_847759065_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_M_1_847759065_ID   36$/;"	d
FIX_M_1_961570560	libavcodec/arm/jrevdct_arm.S	/^#define FIX_M_1_961570560 -16069$/;"	d
FIX_M_1_961570560_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_M_1_961570560_ID   40$/;"	d
FIX_M_2_562915447	libavcodec/arm/jrevdct_arm.S	/^#define FIX_M_2_562915447 -20995$/;"	d
FIX_M_2_562915447_ID	libavcodec/arm/jrevdct_arm.S	/^#define FIX_M_2_562915447_ID   44$/;"	d
FIX_NOISE_IDX	libavcodec/qdm2.c	65;"	d	file:
FLACCOMMONINFO	libavcodec/flac.h	62;"	d
FLACContext	libavcodec/flacdec.c	/^typedef struct FLACContext {$/;"	s	file:
FLACContext	libavcodec/flacdec.c	/^} FLACContext;$/;"	t	typeref:struct:FLACContext	file:
FLACExtradataFormat	libavcodec/flac.h	/^enum FLACExtradataFormat {$/;"	g
FLACFrameInfo	libavcodec/flac.h	/^typedef struct FLACFrameInfo {$/;"	s
FLACFrameInfo	libavcodec/flac.h	/^} FLACFrameInfo;$/;"	t	typeref:struct:FLACFrameInfo
FLACHeaderMarker	libavcodec/flac_parser.c	/^typedef struct FLACHeaderMarker {$/;"	s	file:
FLACHeaderMarker	libavcodec/flac_parser.c	/^} FLACHeaderMarker;$/;"	t	typeref:struct:FLACHeaderMarker	file:
FLACParseContext	libavcodec/flac_parser.c	/^typedef struct FLACParseContext {$/;"	s	file:
FLACParseContext	libavcodec/flac_parser.c	/^} FLACParseContext;$/;"	t	typeref:struct:FLACParseContext	file:
FLACSTREAMINFO	libavcodec/flac.h	71;"	d
FLACStreaminfo	libavcodec/flac.h	/^typedef struct FLACStreaminfo {$/;"	s
FLACStreaminfo	libavcodec/flac.h	/^} FLACStreaminfo;$/;"	t	typeref:struct:FLACStreaminfo
FLAC_AVG_FRAME_SIZE	libavcodec/flac_parser.c	46;"	d	file:
FLAC_CHMODE_INDEPENDENT	libavcodec/flac.h	/^    FLAC_CHMODE_INDEPENDENT =  0,$/;"	e	enum:__anon79
FLAC_CHMODE_LEFT_SIDE	libavcodec/flac.h	/^    FLAC_CHMODE_LEFT_SIDE   =  8,$/;"	e	enum:__anon79
FLAC_CHMODE_MID_SIDE	libavcodec/flac.h	/^    FLAC_CHMODE_MID_SIDE    = 10,$/;"	e	enum:__anon79
FLAC_CHMODE_RIGHT_SIDE	libavcodec/flac.h	/^    FLAC_CHMODE_RIGHT_SIDE  =  9,$/;"	e	enum:__anon79
FLAC_EXTRADATA_FORMAT_FULL_HEADER	libavcodec/flac.h	/^    FLAC_EXTRADATA_FORMAT_FULL_HEADER = 1$/;"	e	enum:FLACExtradataFormat
FLAC_EXTRADATA_FORMAT_STREAMINFO	libavcodec/flac.h	/^    FLAC_EXTRADATA_FORMAT_STREAMINFO  = 0,$/;"	e	enum:FLACExtradataFormat
FLAC_HEADER_BASE_SCORE	libavcodec/flac_parser.c	49;"	d	file:
FLAC_HEADER_CHANGED_PENALTY	libavcodec/flac_parser.c	50;"	d	file:
FLAC_HEADER_CRC_FAIL_PENALTY	libavcodec/flac_parser.c	51;"	d	file:
FLAC_HEADER_NOT_PENALIZED_YET	libavcodec/flac_parser.c	52;"	d	file:
FLAC_HEADER_NOT_SCORED_YET	libavcodec/flac_parser.c	53;"	d	file:
FLAC_MAX_BLOCKSIZE	libavcodec/flac.h	36;"	d
FLAC_MAX_CHANNELS	libavcodec/flac.h	34;"	d
FLAC_MAX_SEQUENTIAL_HEADERS	libavcodec/flac_parser.c	42;"	d	file:
FLAC_METADATA_TYPE_APPLICATION	libavcodec/flac.h	/^    FLAC_METADATA_TYPE_APPLICATION,$/;"	e	enum:__anon80
FLAC_METADATA_TYPE_CUESHEET	libavcodec/flac.h	/^    FLAC_METADATA_TYPE_CUESHEET,$/;"	e	enum:__anon80
FLAC_METADATA_TYPE_INVALID	libavcodec/flac.h	/^    FLAC_METADATA_TYPE_INVALID = 127$/;"	e	enum:__anon80
FLAC_METADATA_TYPE_PADDING	libavcodec/flac.h	/^    FLAC_METADATA_TYPE_PADDING,$/;"	e	enum:__anon80
FLAC_METADATA_TYPE_PICTURE	libavcodec/flac.h	/^    FLAC_METADATA_TYPE_PICTURE,$/;"	e	enum:__anon80
FLAC_METADATA_TYPE_SEEKTABLE	libavcodec/flac.h	/^    FLAC_METADATA_TYPE_SEEKTABLE,$/;"	e	enum:__anon80
FLAC_METADATA_TYPE_STREAMINFO	libavcodec/flac.h	/^    FLAC_METADATA_TYPE_STREAMINFO = 0,$/;"	e	enum:__anon80
FLAC_METADATA_TYPE_VORBIS_COMMENT	libavcodec/flac.h	/^    FLAC_METADATA_TYPE_VORBIS_COMMENT,$/;"	e	enum:__anon80
FLAC_MIN_BLOCKSIZE	libavcodec/flac.h	35;"	d
FLAC_MIN_FRAME_SIZE	libavcodec/flac.h	37;"	d
FLAC_MIN_HEADERS	libavcodec/flac_parser.c	44;"	d	file:
FLAC_STREAMINFO_SIZE	libavcodec/flac.h	33;"	d
FLAC_SUBFRAME_CONSTANT	libavcodec/flacenc.c	32;"	d	file:
FLAC_SUBFRAME_FIXED	libavcodec/flacenc.c	34;"	d	file:
FLAC_SUBFRAME_LPC	libavcodec/flacenc.c	35;"	d	file:
FLAC_SUBFRAME_VERBATIM	libavcodec/flacenc.c	33;"	d	file:
FLAGMASK_UNUSED	libavcodec/lcl.h	44;"	d
FLAGS	cmdutils.c	299;"	d	file:
FLAGS	ffmpeg/cmdutils.c	299;"	d	file:
FLAGS	libavcodec/flacenc.c	1353;"	d	file:
FLAG_CHECKSUM	libavformat/nut.h	/^    FLAG_CHECKSUM   =  64, \/\/\/<if set, the frame header contains a checksum$/;"	e	enum:__anon489
FLAG_CHROMA	libavcodec/motion_est.c	80;"	d	file:
FLAG_CODED	libavformat/nut.h	/^    FLAG_CODED      =4096, \/\/\/<if set, coded_flags are stored in the frame header$/;"	e	enum:__anon489
FLAG_CODED_PTS	libavformat/nut.h	/^    FLAG_CODED_PTS  =   8, \/\/\/<if set, coded_pts is in the frame header$/;"	e	enum:__anon489
FLAG_DIRECT	libavcodec/motion_est.c	81;"	d	file:
FLAG_DTS	libavformat/ffm.h	37;"	d
FLAG_EOR	libavformat/nut.h	/^    FLAG_EOR        =   2, \/\/\/<if set, stream has no relevance on presentation. (EOR)$/;"	e	enum:__anon489
FLAG_HEADER_IDX	libavformat/nut.h	/^    FLAG_HEADER_IDX =1024, \/\/\/<If set, header_idx is coded in the frame header.$/;"	e	enum:__anon489
FLAG_INTERFRAME	libavcodec/truemotion1.c	81;"	d	file:
FLAG_INTERPOLATED	libavcodec/truemotion1.c	82;"	d	file:
FLAG_INVALID	libavformat/nut.h	/^    FLAG_INVALID    =8192, \/\/\/<if set, frame_code is invalid$/;"	e	enum:__anon489
FLAG_KEY	libavformat/nut.h	/^    FLAG_KEY        =   1, \/\/\/<if set, frame is keyframe$/;"	e	enum:__anon489
FLAG_KEYFRAME	libavcodec/truemotion1.c	80;"	d	file:
FLAG_KEY_FRAME	libavformat/ffm.h	36;"	d
FLAG_MATCH_TIME	libavformat/nut.h	/^    FLAG_MATCH_TIME =2048, \/\/\/<If set, match_time_delta is coded in the frame header$/;"	e	enum:__anon489
FLAG_MOVETO	libavformat/swf.h	53;"	d
FLAG_MULTITHREAD	libavcodec/lcl.h	41;"	d
FLAG_NULLFRAME	libavcodec/lcl.h	42;"	d
FLAG_PNGFILTER	libavcodec/lcl.h	43;"	d
FLAG_QPEL	libavcodec/motion_est.c	79;"	d	file:
FLAG_QPEL	libavcodec/snow.c	2393;"	d	file:
FLAG_RESERVED	libavformat/nut.h	/^    FLAG_RESERVED   = 128, \/\/\/<if set, reserved_count is coded in the frame header$/;"	e	enum:__anon489
FLAG_SETFILL0	libavformat/swf.h	54;"	d
FLAG_SETFILL1	libavformat/swf.h	55;"	d
FLAG_SIZE_MSB	libavformat/nut.h	/^    FLAG_SIZE_MSB   =  32, \/\/\/<if set, data_size_msb is at frame header, otherwise data_size_msb is 0$/;"	e	enum:__anon489
FLAG_SPRITE	libavcodec/truemotion1.c	79;"	d	file:
FLAG_STREAM_ID	libavformat/nut.h	/^    FLAG_STREAM_ID  =  16, \/\/\/<if set, stream_id is coded in the frame header$/;"	e	enum:__anon489
FLASHSV2_DUMB	libavcodec/flashsv2enc.c	65;"	d	file:
FLC_DTA_TYPE_CODE	libavcodec/flicvideo.c	59;"	d	file:
FLC_FLX_TYPE_CODE	libavcodec/flicvideo.c	58;"	d	file:
FLC_MAGIC_CARPET_SYNTHETIC_TYPE_CODE	libavcodec/flicvideo.c	60;"	d	file:
FLIC_CHUNK_MAGIC_1	libavformat/flic.c	42;"	d	file:
FLIC_CHUNK_MAGIC_2	libavformat/flic.c	43;"	d	file:
FLIC_DEFAULT_SPEED	libavformat/flic.c	45;"	d	file:
FLIC_FILE_MAGIC_1	libavformat/flic.c	38;"	d	file:
FLIC_FILE_MAGIC_2	libavformat/flic.c	39;"	d	file:
FLIC_FILE_MAGIC_3	libavformat/flic.c	40;"	d	file:
FLIC_HEADER_SIZE	libavformat/flic.c	50;"	d	file:
FLIC_MC_SPEED	libavformat/flic.c	44;"	d	file:
FLIC_PREAMBLE_SIZE	libavformat/flic.c	51;"	d	file:
FLIC_TFTD_CHUNK_AUDIO	libavformat/flic.c	46;"	d	file:
FLIC_TFTD_SAMPLE_RATE	libavformat/flic.c	48;"	d	file:
FLI_256_COLOR	libavcodec/flicvideo.c	45;"	d	file:
FLI_BLACK	libavcodec/flicvideo.c	49;"	d	file:
FLI_BRUN	libavcodec/flicvideo.c	50;"	d	file:
FLI_COLOR	libavcodec/flicvideo.c	47;"	d	file:
FLI_COPY	libavcodec/flicvideo.c	51;"	d	file:
FLI_DELTA	libavcodec/flicvideo.c	46;"	d	file:
FLI_DTA_BRUN	libavcodec/flicvideo.c	53;"	d	file:
FLI_DTA_COPY	libavcodec/flicvideo.c	54;"	d	file:
FLI_DTA_LC	libavcodec/flicvideo.c	55;"	d	file:
FLI_LC	libavcodec/flicvideo.c	48;"	d	file:
FLI_MINI	libavcodec/flicvideo.c	52;"	d	file:
FLI_TYPE_CODE	libavcodec/flicvideo.c	57;"	d	file:
FLOAT	libavcodec/faandct.c	31;"	d	file:
FLOAT	libavcodec/faanidct.c	24;"	d	file:
FLOATFMT	libavcodec/cos_tablegen.c	31;"	d	file:
FLOAT_INTERLEAVE2	libavcodec/x86/fmtconvert.asm	/^FLOAT_INTERLEAVE2 mmx, 0$/;"	l
FLOAT_INTERLEAVE2	libavcodec/x86/fmtconvert.asm	/^FLOAT_INTERLEAVE2 sse, 5$/;"	l
FLOAT_INTERLEAVE6	libavcodec/x86/fmtconvert.asm	/^FLOAT_INTERLEAVE6 mmx, 0$/;"	l
FLOAT_INTERLEAVE6	libavcodec/x86/fmtconvert.asm	/^FLOAT_INTERLEAVE6 sse, 7$/;"	l
FLOAT_TO_INT16_INTERLEAVE	libavcodec/x86/fmtconvert_mmx.c	149;"	d	file:
FLOAT_TO_INT16_INTERLEAVE6	libavcodec/x86/fmtconvert.asm	/^FLOAT_TO_INT16_INTERLEAVE6 3dn2$/;"	l
FLOAT_TO_INT16_INTERLEAVE6	libavcodec/x86/fmtconvert.asm	/^FLOAT_TO_INT16_INTERLEAVE6 3dnow$/;"	l
FLOAT_TO_INT16_INTERLEAVE6	libavcodec/x86/fmtconvert.asm	/^FLOAT_TO_INT16_INTERLEAVE6 sse$/;"	l
FLOAT_n	libavcodec/ppc/util_altivec.h	58;"	d
FLOAT_p	libavcodec/ppc/util_altivec.h	59;"	d
FLT_OPTION_THRESHOLD	libavcodec/ac3enc.c	1729;"	d	file:
FLVContext	libavformat/flvdec.c	/^} FLVContext;$/;"	t	typeref:struct:__anon437	file:
FLVContext	libavformat/flvenc.c	/^typedef struct FLVContext {$/;"	s	file:
FLVContext	libavformat/flvenc.c	/^} FLVContext;$/;"	t	typeref:struct:FLVContext	file:
FLV_AUDIO_CHANNEL_MASK	libavformat/flv.h	35;"	d
FLV_AUDIO_CODECID_MASK	libavformat/flv.h	38;"	d
FLV_AUDIO_CODECID_OFFSET	libavformat/flv.h	30;"	d
FLV_AUDIO_SAMPLERATE_MASK	libavformat/flv.h	37;"	d
FLV_AUDIO_SAMPLERATE_OFFSET	libavformat/flv.h	29;"	d
FLV_AUDIO_SAMPLESIZE_MASK	libavformat/flv.h	36;"	d
FLV_AUDIO_SAMPLESSIZE_OFFSET	libavformat/flv.h	28;"	d
FLV_CODECID_AAC	libavformat/flv.h	/^    FLV_CODECID_AAC                  = 10<< FLV_AUDIO_CODECID_OFFSET,$/;"	e	enum:__anon417
FLV_CODECID_ADPCM	libavformat/flv.h	/^    FLV_CODECID_ADPCM                = 1 << FLV_AUDIO_CODECID_OFFSET,$/;"	e	enum:__anon417
FLV_CODECID_H263	libavformat/flv.h	/^    FLV_CODECID_H263    = 2,$/;"	e	enum:__anon418
FLV_CODECID_H264	libavformat/flv.h	/^    FLV_CODECID_H264    = 7,$/;"	e	enum:__anon418
FLV_CODECID_MP3	libavformat/flv.h	/^    FLV_CODECID_MP3                  = 2 << FLV_AUDIO_CODECID_OFFSET,$/;"	e	enum:__anon417
FLV_CODECID_NELLYMOSER	libavformat/flv.h	/^    FLV_CODECID_NELLYMOSER           = 6 << FLV_AUDIO_CODECID_OFFSET,$/;"	e	enum:__anon417
FLV_CODECID_NELLYMOSER_16KHZ_MONO	libavformat/flv.h	/^    FLV_CODECID_NELLYMOSER_16KHZ_MONO = 4 << FLV_AUDIO_CODECID_OFFSET,$/;"	e	enum:__anon417
FLV_CODECID_NELLYMOSER_8KHZ_MONO	libavformat/flv.h	/^    FLV_CODECID_NELLYMOSER_8KHZ_MONO = 5 << FLV_AUDIO_CODECID_OFFSET,$/;"	e	enum:__anon417
FLV_CODECID_PCM	libavformat/flv.h	/^    FLV_CODECID_PCM                  = 0,$/;"	e	enum:__anon417
FLV_CODECID_PCM_LE	libavformat/flv.h	/^    FLV_CODECID_PCM_LE               = 3 << FLV_AUDIO_CODECID_OFFSET,$/;"	e	enum:__anon417
FLV_CODECID_SCREEN	libavformat/flv.h	/^    FLV_CODECID_SCREEN  = 3,$/;"	e	enum:__anon418
FLV_CODECID_SCREEN2	libavformat/flv.h	/^    FLV_CODECID_SCREEN2 = 6,$/;"	e	enum:__anon418
FLV_CODECID_SPEEX	libavformat/flv.h	/^    FLV_CODECID_SPEEX                = 11<< FLV_AUDIO_CODECID_OFFSET,$/;"	e	enum:__anon417
FLV_CODECID_VP6	libavformat/flv.h	/^    FLV_CODECID_VP6     = 4,$/;"	e	enum:__anon418
FLV_CODECID_VP6A	libavformat/flv.h	/^    FLV_CODECID_VP6A    = 5,$/;"	e	enum:__anon418
FLV_FRAME_DISP_INTER	libavformat/flv.h	/^    FLV_FRAME_DISP_INTER = 3 << FLV_VIDEO_FRAMETYPE_OFFSET,$/;"	e	enum:__anon419
FLV_FRAME_INTER	libavformat/flv.h	/^    FLV_FRAME_INTER      = 2 << FLV_VIDEO_FRAMETYPE_OFFSET,$/;"	e	enum:__anon419
FLV_FRAME_KEY	libavformat/flv.h	/^    FLV_FRAME_KEY        = 1 << FLV_VIDEO_FRAMETYPE_OFFSET,$/;"	e	enum:__anon419
FLV_HEADER_FLAG_HASAUDIO	libavformat/flv.h	/^    FLV_HEADER_FLAG_HASAUDIO = 4,$/;"	e	enum:__anon412
FLV_HEADER_FLAG_HASVIDEO	libavformat/flv.h	/^    FLV_HEADER_FLAG_HASVIDEO = 1,$/;"	e	enum:__anon412
FLV_MONO	libavformat/flv.h	/^    FLV_MONO   = 0,$/;"	e	enum:__anon414
FLV_SAMPLERATE_11025HZ	libavformat/flv.h	/^    FLV_SAMPLERATE_11025HZ = 1 << FLV_AUDIO_SAMPLERATE_OFFSET,$/;"	e	enum:__anon416
FLV_SAMPLERATE_22050HZ	libavformat/flv.h	/^    FLV_SAMPLERATE_22050HZ = 2 << FLV_AUDIO_SAMPLERATE_OFFSET,$/;"	e	enum:__anon416
FLV_SAMPLERATE_44100HZ	libavformat/flv.h	/^    FLV_SAMPLERATE_44100HZ = 3 << FLV_AUDIO_SAMPLERATE_OFFSET,$/;"	e	enum:__anon416
FLV_SAMPLERATE_SPECIAL	libavformat/flv.h	/^    FLV_SAMPLERATE_SPECIAL = 0, \/**< signifies 5512Hz and 8000Hz in the case of NELLYMOSER *\/$/;"	e	enum:__anon416
FLV_SAMPLESSIZE_16BIT	libavformat/flv.h	/^    FLV_SAMPLESSIZE_16BIT = 1 << FLV_AUDIO_SAMPLESSIZE_OFFSET,$/;"	e	enum:__anon415
FLV_SAMPLESSIZE_8BIT	libavformat/flv.h	/^    FLV_SAMPLESSIZE_8BIT  = 0,$/;"	e	enum:__anon415
FLV_STEREO	libavformat/flv.h	/^    FLV_STEREO = 1,$/;"	e	enum:__anon414
FLV_TAG_TYPE_AUDIO	libavformat/flv.h	/^    FLV_TAG_TYPE_AUDIO = 0x08,$/;"	e	enum:__anon413
FLV_TAG_TYPE_META	libavformat/flv.h	/^    FLV_TAG_TYPE_META  = 0x12,$/;"	e	enum:__anon413
FLV_TAG_TYPE_VIDEO	libavformat/flv.h	/^    FLV_TAG_TYPE_VIDEO = 0x09,$/;"	e	enum:__anon413
FLV_VIDEO_CODECID_MASK	libavformat/flv.h	40;"	d
FLV_VIDEO_FRAMETYPE_MASK	libavformat/flv.h	41;"	d
FLV_VIDEO_FRAMETYPE_OFFSET	libavformat/flv.h	32;"	d
FMO	libavcodec/h264.h	62;"	d
FMT	libavcodec/fft-test.c	55;"	d	file:
FMT	libavcodec/fft-test.c	59;"	d	file:
FMT_H261	libavcodec/mpegvideo.h	/^    FMT_H261,$/;"	e	enum:OutputFormat
FMT_H263	libavcodec/mpegvideo.h	/^    FMT_H263,$/;"	e	enum:OutputFormat
FMT_H264	libavcodec/mpegvideo.h	/^    FMT_H264,$/;"	e	enum:OutputFormat
FMT_MJPEG	libavcodec/mpegvideo.h	/^    FMT_MJPEG,$/;"	e	enum:OutputFormat
FMT_MPEG1	libavcodec/mpegvideo.h	/^    FMT_MPEG1,$/;"	e	enum:OutputFormat
FNSIZE	libavcodec/shorten.c	60;"	d	file:
FN_BITSHIFT	libavcodec/shorten.c	67;"	d	file:
FN_BLOCKSIZE	libavcodec/shorten.c	66;"	d	file:
FN_DIFF0	libavcodec/shorten.c	61;"	d	file:
FN_DIFF1	libavcodec/shorten.c	62;"	d	file:
FN_DIFF2	libavcodec/shorten.c	63;"	d	file:
FN_DIFF3	libavcodec/shorten.c	64;"	d	file:
FN_QLPC	libavcodec/shorten.c	68;"	d	file:
FN_QUIT	libavcodec/shorten.c	65;"	d	file:
FN_VERBATIM	libavcodec/shorten.c	70;"	d	file:
FN_ZERO	libavcodec/shorten.c	69;"	d	file:
FONT_WIDTH	libavcodec/ansi.c	42;"	d	file:
FORCE_QUANT	libpostproc/postprocess_internal.h	68;"	d
FORMAT_FLOAT	libavcodec/tta.c	37;"	d	file:
FORMAT_INT	libavcodec/tta.c	36;"	d	file:
FORM_TAG	libavformat/rl2.c	41;"	d	file:
FORM_TAG	libavformat/wc3movie.c	34;"	d	file:
FORM_TAG	libavformat/westwood.c	43;"	d	file:
FOUROF	libavcodec/ppc/mpegvideo_altivec.c	70;"	d	file:
FOURXMV_TAG	libavformat/4xm.c	34;"	d	file:
FPS_TAG	libavcodec/fraps.c	40;"	d	file:
FRAC_BITS	libavcodec/lsp.c	27;"	d	file:
FRAC_BITS	libavcodec/mpegaudio.h	51;"	d
FRAC_BITS	libavcodec/mpegaudio_tablegen.h	41;"	d
FRAC_BITS	libavcodec/mpegaudioenc.c	30;"	d	file:
FRAC_BITS	libavcodec/snow.h	34;"	d
FRAC_BITS	libavformat/swfenc.c	135;"	d	file:
FRAC_BITS	tests/audiogen.c	44;"	d	file:
FRAC_BITS	tests/videogen.c	170;"	d	file:
FRAC_ONE	libavcodec/mpegaudio.h	55;"	d
FRAC_ONE	tests/audiogen.c	45;"	d	file:
FRAC_ONE	tests/videogen.c	171;"	d	file:
FRAGMENT_PIXELS	libavcodec/vp3.c	45;"	d	file:
FRAMESIZE	libavcodec/ra144.h	32;"	d
FRAMETYPE_INTER	libavcodec/indeo5.c	/^    FRAMETYPE_INTER       = 1,  \/\/\/< non-droppable P-frame$/;"	e	enum:__anon202	file:
FRAMETYPE_INTER_NOREF	libavcodec/indeo5.c	/^    FRAMETYPE_INTER_NOREF = 3,  \/\/\/< droppable P-frame$/;"	e	enum:__anon202	file:
FRAMETYPE_INTER_SCAL	libavcodec/indeo5.c	/^    FRAMETYPE_INTER_SCAL  = 2,  \/\/\/< droppable P-frame used in the scalability mode$/;"	e	enum:__anon202	file:
FRAMETYPE_INTRA	libavcodec/indeo5.c	/^    FRAMETYPE_INTRA       = 0,$/;"	e	enum:__anon202	file:
FRAMETYPE_NULL	libavcodec/indeo5.c	/^    FRAMETYPE_NULL        = 4   \/\/\/< empty frame with no data$/;"	e	enum:__anon202	file:
FRAME_ARITH_RGB24	libavcodec/lagarith.c	/^    FRAME_ARITH_RGB24   = 4,    \/*!< arithmetic coded RGB24 *\/$/;"	e	enum:LagarithFrameType	file:
FRAME_ARITH_RGBA	libavcodec/lagarith.c	/^    FRAME_ARITH_RGBA    = 8,    \/*!< arithmetic coded RGBA *\/$/;"	e	enum:LagarithFrameType	file:
FRAME_ARITH_YUY2	libavcodec/lagarith.c	/^    FRAME_ARITH_YUY2    = 3,    \/*!< arithmetic coded YUY2 *\/$/;"	e	enum:LagarithFrameType	file:
FRAME_ARITH_YV12	libavcodec/lagarith.c	/^    FRAME_ARITH_YV12    = 10,   \/*!< arithmetic coded YV12 *\/$/;"	e	enum:LagarithFrameType	file:
FRAME_HEADER_SIZE	libavformat/asfdec.c	80;"	d	file:
FRAME_HEADER_SIZE	libavformat/ffm.h	35;"	d
FRAME_MBAFF	libavcodec/h264.h	73;"	d
FRAME_MBAFF	libavcodec/h264.h	78;"	d
FRAME_OLD_ARITH_RGB	libavcodec/lagarith.c	/^    FRAME_OLD_ARITH_RGB = 7,    \/*!< obsolete arithmetic coded RGB (no longer encoded by upstream since version 1.1.0) *\/$/;"	e	enum:LagarithFrameType	file:
FRAME_RAW	libavcodec/lagarith.c	/^    FRAME_RAW           = 1,    \/*!< uncompressed *\/$/;"	e	enum:LagarithFrameType	file:
FRAME_REDUCED_RES	libavcodec/lagarith.c	/^    FRAME_REDUCED_RES   = 11,   \/*!< reduced resolution YV12 frame *\/$/;"	e	enum:LagarithFrameType	file:
FRAME_SKIPPED	libavcodec/mpegvideo.h	39;"	d
FRAME_SKIP_FACTOR	ffplay.c	72;"	d	file:
FRAME_SOLID_COLOR	libavcodec/lagarith.c	/^    FRAME_SOLID_COLOR   = 6,    \/*!< solid non-grayscale color frame *\/$/;"	e	enum:LagarithFrameType	file:
FRAME_SOLID_GRAY	libavcodec/lagarith.c	/^    FRAME_SOLID_GRAY    = 5,    \/*!< solid grayscale color frame *\/$/;"	e	enum:LagarithFrameType	file:
FRAME_SOLID_RGBA	libavcodec/lagarith.c	/^    FRAME_SOLID_RGBA    = 9,    \/*!< solid RGBA color frame *\/$/;"	e	enum:LagarithFrameType	file:
FRAME_TIME	libavcodec/tta.c	277;"	d	file:
FRAME_U_RGB24	libavcodec/lagarith.c	/^    FRAME_U_RGB24       = 2,    \/*!< unaligned RGB24 *\/$/;"	e	enum:LagarithFrameType	file:
FREEZE_INTERVAL	libavcodec/adpcm.c	169;"	d	file:
FREEZE_INTERVAL	libavcodec/g722.c	46;"	d	file:
FREE_ATOM	tools/qt-faststart.c	59;"	d	file:
FREQ_BITS	libavcodec/bgmc.c	32;"	d	file:
FTYP_ATOM	tools/qt-faststart.c	67;"	d	file:
FT_ERRMSG	libavfilter/vf_drawtext.c	146;"	d	file:
FT_ERRORDEF	libavfilter/vf_drawtext.c	136;"	d	file:
FT_ERROR_END_LIST	libavfilter/vf_drawtext.c	137;"	d	file:
FT_ERROR_START_LIST	libavfilter/vf_drawtext.c	135;"	d	file:
FT_LONG	libavcodec/twinvq.c	/^    FT_LONG,       \/\/\/< Long frame   (single sub-block + PPC)$/;"	e	enum:FrameType	file:
FT_MEDIUM	libavcodec/twinvq.c	/^    FT_MEDIUM,     \/\/\/< Medium frame (divided in m<n sub-blocks)$/;"	e	enum:FrameType	file:
FT_PPC	libavcodec/twinvq.c	/^    FT_PPC,        \/\/\/< Periodic Peak Component (part of the long frame)$/;"	e	enum:FrameType	file:
FT_SHORT	libavcodec/twinvq.c	/^    FT_SHORT = 0,  \/\/\/< Short frame  (divided in n   sub-blocks)$/;"	e	enum:FrameType	file:
FULLNAME	config.mak	/^FULLNAME=$(NAME)$(BUILDSUF)$/;"	m
FULLPEL_MODE	libavcodec/svq3.c	77;"	d	file:
FULL_ANALYZE	libavfilter/libmpcodecs/vf_phase.c	/^            ANALYZE, FULL_ANALYZE, AUTO, AUTO_ANALYZE };$/;"	e	enum:mode	file:
FULL_Y_RANGE	libpostproc/postprocess_internal.h	56;"	d
FUNC	libavcodec/dsputil.c	3129;"	d	file:
FUNC	libavcodec/dsputil.c	3131;"	d	file:
FUNC	libavcodec/h264dsp.c	46;"	d	file:
FUNC	libavcodec/h264dsp.c	47;"	d	file:
FUNC	libavcodec/h264pred.c	369;"	d	file:
FUNC	libavcodec/h264pred.c	371;"	d	file:
FUNC	libavcodec/high_bit_depth.h	40;"	d
FUNC	libavcodec/high_bit_depth.h	94;"	d
FUNC	libswscale/colorspace-test.c	34;"	d	file:
FUNCC	libavcodec/dsputil.c	3130;"	d	file:
FUNCC	libavcodec/dsputil.c	3132;"	d	file:
FUNCC	libavcodec/h264pred.c	370;"	d	file:
FUNCC	libavcodec/h264pred.c	372;"	d	file:
FUNCC	libavcodec/high_bit_depth.h	41;"	d
FUNCC	libavcodec/high_bit_depth.h	95;"	d
FUNCD	libavcodec/h264pred.c	373;"	d	file:
FUZZ	tests/fate/aac.mak	/^$(FATE_AAC): FUZZ = 2$/;"	m
FUZZ	tests/fate/mp3.mak	/^$(FATE_MP3): FUZZ = 0.07$/;"	m
FUZZ	tests/fate/vorbis.mak	/^fate-vorbis-18: FUZZ = 2$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrnb-10k2: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrnb-12k2: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrnb-4k75: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrnb-5k15: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrnb-5k9: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrnb-6k7: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrnb-7k4: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrnb-7k95: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrwb-12k65: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrwb-14k25: FUZZ = 2.6$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrwb-15k85: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrwb-18k25: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrwb-19k85: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrwb-23k05: FUZZ = 2$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrwb-23k85-2: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrwb-23k85: FUZZ = 2$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrwb-6k60: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-amrwb-8k85: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-binkaudio-dct: FUZZ = 2$/;"	m
FUZZ	tests/fate2.mak	/^fate-binkaudio-rdft: FUZZ = 2$/;"	m
FUZZ	tests/fate2.mak	/^fate-musepack7: FUZZ = 1$/;"	m
FUZZ	tests/fate2.mak	/^fate-qdm2: FUZZ = 2$/;"	m
FUZZ	tests/fate2.mak	/^fate-ra-288: FUZZ = 2$/;"	m
FUZZ	tests/fate2.mak	/^fate-wmavoice-11k: FUZZ = 3$/;"	m
FUZZ	tests/fate2.mak	/^fate-wmavoice-19k: FUZZ = 3$/;"	m
FUZZ	tests/fate2.mak	/^fate-wmavoice-7k: FUZZ = 3$/;"	m
FWD0	libavcodec/cavs.h	46;"	d
FWD1	libavcodec/cavs.h	47;"	d
F_COS_16_1	libavcodec/arm/fft_fixed_neon.S	/^#define F_COS_16_1  30274$/;"	d
F_COS_16_3	libavcodec/arm/fft_fixed_neon.S	/^#define F_COS_16_3  12540$/;"	d
F_DROP	libavfilter/libmpcodecs/vf_ivtc.c	/^    F_DROP,$/;"	e	enum:__anon36	file:
F_HAVE_AFFINITY	libavfilter/libmpcodecs/pullup.c	461;"	d	file:
F_HAVE_BREAKS	libavfilter/libmpcodecs/pullup.c	460;"	d	file:
F_HUFFMAN_ENV_1_5DB	libavcodec/aacsbr.c	/^    F_HUFFMAN_ENV_1_5DB,$/;"	e	enum:__anon116	file:
F_HUFFMAN_ENV_3_0DB	libavcodec/aacsbr.c	/^    F_HUFFMAN_ENV_3_0DB,$/;"	e	enum:__anon116	file:
F_HUFFMAN_ENV_BAL_1_5DB	libavcodec/aacsbr.c	/^    F_HUFFMAN_ENV_BAL_1_5DB,$/;"	e	enum:__anon116	file:
F_HUFFMAN_ENV_BAL_3_0DB	libavcodec/aacsbr.c	/^    F_HUFFMAN_ENV_BAL_3_0DB,$/;"	e	enum:__anon116	file:
F_INIT	libpostproc/postprocess_altivec_template.c	739;"	d	file:
F_MERGE	libavfilter/libmpcodecs/vf_ivtc.c	/^    F_MERGE,$/;"	e	enum:__anon36	file:
F_NEXT	libavfilter/libmpcodecs/vf_ivtc.c	/^    F_NEXT,$/;"	e	enum:__anon36	file:
F_SHOW	libavfilter/libmpcodecs/vf_ivtc.c	/^    F_SHOW$/;"	e	enum:__anon36	file:
F_SQRT1_2	libavcodec/arm/fft_fixed_neon.S	/^#define F_SQRT1_2   23170$/;"	d
F_tbl16	libavcodec/g726.c	/^static const uint8_t F_tbl16[] =$/;"	v	file:
F_tbl24	libavcodec/g726.c	/^static const uint8_t F_tbl24[] =$/;"	v	file:
F_tbl32	libavcodec/g726.c	/^static const uint8_t F_tbl32[] =$/;"	v	file:
F_tbl40	libavcodec/g726.c	/^static const uint8_t F_tbl40[] =$/;"	v	file:
FaacAudioContext	libavcodec/libfaac.c	/^typedef struct FaacAudioContext {$/;"	s	file:
FaacAudioContext	libavcodec/libfaac.c	/^} FaacAudioContext;$/;"	t	typeref:struct:FaacAudioContext	file:
Faac_encode_close	libavcodec/libfaac.c	/^static av_cold int Faac_encode_close(AVCodecContext *avctx)$/;"	f	file:
Faac_encode_frame	libavcodec/libfaac.c	/^static int Faac_encode_frame(AVCodecContext *avctx,$/;"	f	file:
Faac_encode_init	libavcodec/libfaac.c	/^static av_cold int Faac_encode_init(AVCodecContext *avctx)$/;"	f	file:
FadeContext	libavfilter/vf_fade.c	/^} FadeContext;$/;"	t	typeref:struct:__anon11	file:
FeedData	ffserver.c	/^typedef struct FeedData {$/;"	s	file:
FeedData	ffserver.c	/^} FeedData;$/;"	t	typeref:struct:FeedData	file:
FfmpegDiracDecoderParams	libavcodec/libdiracdec.c	/^typedef struct FfmpegDiracDecoderParams {$/;"	s	file:
FfmpegDiracDecoderParams	libavcodec/libdiracdec.c	/^} FfmpegDiracDecoderParams;$/;"	t	typeref:struct:FfmpegDiracDecoderParams	file:
FfmpegDiracEncoderParams	libavcodec/libdiracenc.c	/^typedef struct FfmpegDiracEncoderParams {$/;"	s	file:
FfmpegDiracEncoderParams	libavcodec/libdiracenc.c	/^} FfmpegDiracEncoderParams;$/;"	t	typeref:struct:FfmpegDiracEncoderParams	file:
FfmpegDiracSchroEncodedFrame	libavcodec/libdirac_libschro.h	/^typedef struct FfmpegDiracSchroEncodedFrame {$/;"	s
FfmpegDiracSchroEncodedFrame	libavcodec/libdirac_libschro.h	/^} FfmpegDiracSchroEncodedFrame;$/;"	t	typeref:struct:FfmpegDiracSchroEncodedFrame
FfmpegDiracSchroQueue	libavcodec/libdirac_libschro.h	/^typedef struct FfmpegDiracSchroQueue {$/;"	s
FfmpegDiracSchroQueue	libavcodec/libdirac_libschro.h	/^} FfmpegDiracSchroQueue;$/;"	t	typeref:struct:FfmpegDiracSchroQueue
FfmpegDiracSchroQueueElement	libavcodec/libdirac_libschro.h	/^typedef struct FfmpegDiracSchroQueueElement {$/;"	s
FfmpegDiracSchroQueueElement	libavcodec/libdirac_libschro.h	/^} FfmpegDiracSchroQueueElement;$/;"	t	typeref:struct:FfmpegDiracSchroQueueElement
FfmpegDiracSchroVideoFormatInfo	libavcodec/libdirac_libschro.h	/^} FfmpegDiracSchroVideoFormatInfo;$/;"	t	typeref:struct:__anon166
FfmpegFindNextSchroParseUnit	libavcodec/libschroedingerdec.c	/^static SchroBuffer* FfmpegFindNextSchroParseUnit(FfmpegSchroParseUnitContext *parse_ctx)$/;"	f	file:
FfmpegSchroDecoderParams	libavcodec/libschroedingerdec.c	/^typedef struct FfmpegSchroDecoderParams {$/;"	s	file:
FfmpegSchroDecoderParams	libavcodec/libschroedingerdec.c	/^} FfmpegSchroDecoderParams;$/;"	t	typeref:struct:FfmpegSchroDecoderParams	file:
FfmpegSchroEncoderParams	libavcodec/libschroedingerenc.c	/^typedef struct FfmpegSchroEncoderParams {$/;"	s	file:
FfmpegSchroEncoderParams	libavcodec/libschroedingerenc.c	/^} FfmpegSchroEncoderParams;$/;"	t	typeref:struct:FfmpegSchroEncoderParams	file:
FfmpegSchroParseContextInit	libavcodec/libschroedingerdec.c	/^static void FfmpegSchroParseContextInit(FfmpegSchroParseUnitContext *parse_ctx,$/;"	f	file:
FfmpegSchroParseUnitContext	libavcodec/libschroedingerdec.c	/^typedef struct FfmpegSchroParseUnitContext {$/;"	s	file:
FfmpegSchroParseUnitContext	libavcodec/libschroedingerdec.c	/^} FfmpegSchroParseUnitContext;$/;"	t	typeref:struct:FfmpegSchroParseUnitContext	file:
FieldOrderContext	libavfilter/vf_fieldorder.c	/^} FieldOrderContext;$/;"	t	typeref:struct:__anon53	file:
FifoContext	libavfilter/vf_fifo.c	/^} FifoContext;$/;"	t	typeref:struct:__anon4	file:
FileLogContext	libavutil/file.c	/^} FileLogContext;$/;"	t	typeref:struct:__anon303	file:
FilmDemuxContext	libavformat/segafilm.c	/^typedef struct FilmDemuxContext {$/;"	s	file:
FilmDemuxContext	libavformat/segafilm.c	/^} FilmDemuxContext;$/;"	t	typeref:struct:FilmDemuxContext	file:
FilmstripDemuxContext	libavformat/filmstripdec.c	/^} FilmstripDemuxContext;$/;"	t	typeref:struct:__anon338	file:
FilmstripMuxContext	libavformat/filmstripenc.c	/^} FilmstripMuxContext;$/;"	t	typeref:struct:__anon484	file:
FilterParam	libavfilter/libmpcodecs/vf_boxblur.c	/^typedef struct FilterParam{$/;"	s	file:
FilterParam	libavfilter/libmpcodecs/vf_boxblur.c	/^}FilterParam;$/;"	t	typeref:struct:FilterParam	file:
FilterParam	libavfilter/libmpcodecs/vf_il.c	/^typedef struct FilterParam{$/;"	s	file:
FilterParam	libavfilter/libmpcodecs/vf_il.c	/^}FilterParam;$/;"	t	typeref:struct:FilterParam	file:
FilterParam	libavfilter/libmpcodecs/vf_noise.c	/^typedef struct FilterParam{$/;"	s	file:
FilterParam	libavfilter/libmpcodecs/vf_noise.c	/^}FilterParam;$/;"	t	typeref:struct:FilterParam	file:
FilterParam	libavfilter/libmpcodecs/vf_sab.c	/^typedef struct FilterParam{$/;"	s	file:
FilterParam	libavfilter/libmpcodecs/vf_sab.c	/^}FilterParam;$/;"	t	typeref:struct:FilterParam	file:
FilterParam	libavfilter/libmpcodecs/vf_smartblur.c	/^typedef struct FilterParam{$/;"	s	file:
FilterParam	libavfilter/libmpcodecs/vf_smartblur.c	/^}FilterParam;$/;"	t	typeref:struct:FilterParam	file:
FilterParam	libavfilter/libmpcodecs/vf_unsharp.c	/^typedef struct FilterParam {$/;"	s	file:
FilterParam	libavfilter/libmpcodecs/vf_unsharp.c	/^} FilterParam;$/;"	t	typeref:struct:FilterParam	file:
FilterParam	libavfilter/vf_unsharp.c	/^typedef struct FilterParam {$/;"	s	file:
FilterParam	libavfilter/vf_unsharp.c	/^} FilterParam;$/;"	t	typeref:struct:FilterParam	file:
FilterParams	libavcodec/mlp.h	/^} FilterParams;$/;"	t	typeref:struct:__anon77
FilterPriv	ffplay.c	/^} FilterPriv;$/;"	t	typeref:struct:__anon2	file:
FlacEncodeContext	libavcodec/flacenc.c	/^typedef struct FlacEncodeContext {$/;"	s	file:
FlacEncodeContext	libavcodec/flacenc.c	/^} FlacEncodeContext;$/;"	t	typeref:struct:FlacEncodeContext	file:
FlacFrame	libavcodec/flacenc.c	/^typedef struct FlacFrame {$/;"	s	file:
FlacFrame	libavcodec/flacenc.c	/^} FlacFrame;$/;"	t	typeref:struct:FlacFrame	file:
FlacSubframe	libavcodec/flacenc.c	/^typedef struct FlacSubframe {$/;"	s	file:
FlacSubframe	libavcodec/flacenc.c	/^} FlacSubframe;$/;"	t	typeref:struct:FlacSubframe	file:
Flag	libavformat/nut.h	/^} Flag;$/;"	t	typeref:enum:__anon489
FlashSV2Context	libavcodec/flashsv2enc.c	/^typedef struct FlashSV2Context {$/;"	s	file:
FlashSV2Context	libavcodec/flashsv2enc.c	/^} FlashSV2Context;$/;"	t	typeref:struct:FlashSV2Context	file:
FlashSVContext	libavcodec/flashsv.c	/^typedef struct FlashSVContext {$/;"	s	file:
FlashSVContext	libavcodec/flashsv.c	/^} FlashSVContext;$/;"	t	typeref:struct:FlashSVContext	file:
FlashSVContext	libavcodec/flashsvenc.c	/^typedef struct FlashSVContext {$/;"	s	file:
FlashSVContext	libavcodec/flashsvenc.c	/^} FlashSVContext;$/;"	t	typeref:struct:FlashSVContext	file:
FlicDecodeContext	libavcodec/flicvideo.c	/^typedef struct FlicDecodeContext {$/;"	s	file:
FlicDecodeContext	libavcodec/flicvideo.c	/^} FlicDecodeContext;$/;"	t	typeref:struct:FlicDecodeContext	file:
FlicDemuxContext	libavformat/flic.c	/^typedef struct FlicDemuxContext {$/;"	s	file:
FlicDemuxContext	libavformat/flic.c	/^} FlicDemuxContext;$/;"	t	typeref:struct:FlicDemuxContext	file:
FlipContext	libavfilter/vf_hflip.c	/^} FlipContext;$/;"	t	typeref:struct:__anon43	file:
FlipContext	libavfilter/vf_vflip.c	/^} FlipContext;$/;"	t	typeref:struct:__anon44	file:
Float11	libavcodec/g726.c	/^typedef struct Float11 {$/;"	s	file:
Float11	libavcodec/g726.c	/^} Float11;$/;"	t	typeref:struct:Float11	file:
FmtConvertContext	libavcodec/fmtconvert.h	/^typedef struct FmtConvertContext {$/;"	s
FmtConvertContext	libavcodec/fmtconvert.h	/^} FmtConvertContext;$/;"	t	typeref:struct:FmtConvertContext
FormatContext	libavfilter/vf_format.c	/^} FormatContext;$/;"	t	typeref:struct:__anon37	file:
FourXContext	libavcodec/4xm.c	/^typedef struct FourXContext{$/;"	s	file:
FourXContext	libavcodec/4xm.c	/^} FourXContext;$/;"	t	typeref:struct:FourXContext	file:
FourxmDemuxContext	libavformat/4xm.c	/^typedef struct FourxmDemuxContext {$/;"	s	file:
FourxmDemuxContext	libavformat/4xm.c	/^} FourxmDemuxContext;$/;"	t	typeref:struct:FourxmDemuxContext	file:
Frame	libavfilter/libmpcodecs/vf_hqdn3d.c	/^        unsigned short *Frame[3];$/;"	m	struct:vf_priv_s	file:
Frame	libavfilter/vf_hqdn3d.c	/^    unsigned short *Frame[3];$/;"	m	struct:__anon8	file:
Frame	libavformat/mxfdec.c	/^    Frame,$/;"	e	enum:MXFWrappingScheme	file:
FrameCode	libavformat/nut.h	/^} FrameCode;$/;"	t	typeref:struct:__anon491
FrameListData	libavcodec/libvpxenc.c	/^struct FrameListData {$/;"	s	file:
FrameMode	libavcodec/twinvq.c	/^struct FrameMode {$/;"	s	file:
FrameThreadContext	libavcodec/pthread.c	/^typedef struct FrameThreadContext {$/;"	s	file:
FrameThreadContext	libavcodec/pthread.c	/^} FrameThreadContext;$/;"	t	typeref:struct:FrameThreadContext	file:
FrameType	libavcodec/twinvq.c	/^enum FrameType {$/;"	g	file:
FrapsContext	libavcodec/fraps.c	/^typedef struct FrapsContext{$/;"	s	file:
FrapsContext	libavcodec/fraps.c	/^} FrapsContext;$/;"	t	typeref:struct:FrapsContext	file:
FreeSchroFrame	libavcodec/libschroedinger.c	/^static void FreeSchroFrame(SchroFrame *frame, void *priv)$/;"	f	file:
Frei0rContext	libavfilter/vf_frei0r.c	/^typedef struct Frei0rContext {$/;"	s	file:
Frei0rContext	libavfilter/vf_frei0r.c	/^} Frei0rContext;$/;"	t	typeref:struct:Frei0rContext	file:
G	libavcodec/dsputil.c	2007;"	d	file:
G	libavcodec/dsputil.c	2012;"	d	file:
G	libavcodec/dsputil.c	2042;"	d	file:
G	libavcodec/huffyuv.c	41;"	d	file:
G	libavcodec/huffyuv.c	46;"	d	file:
G	libavfilter/vf_lut.c	77;"	d	file:
G722Band	libavcodec/g722.c	/^    struct G722Band {$/;"	s	struct:__anon140	file:
G722Context	libavcodec/g722.c	/^} G722Context;$/;"	t	typeref:struct:__anon140	file:
G726Context	libavcodec/g726.c	/^typedef struct G726Context {$/;"	s	file:
G726Context	libavcodec/g726.c	/^} G726Context;$/;"	t	typeref:struct:G726Context	file:
G726Tables	libavcodec/g726.c	/^typedef struct G726Tables {$/;"	s	file:
G726Tables	libavcodec/g726.c	/^} G726Tables;$/;"	t	typeref:struct:G726Tables	file:
G726Tables_pool	libavcodec/g726.c	/^static const G726Tables G726Tables_pool[] =$/;"	v	file:
G729Context	libavcodec/g729dec.c	/^}  G729Context;$/;"	t	typeref:struct:__anon272	file:
G729FormatDescription	libavcodec/g729dec.c	/^} G729FormatDescription;$/;"	t	typeref:struct:__anon271	file:
GAIN_BITS	libavcodec/twinvq.c	209;"	d	file:
GCE_DISPOSAL_BACKGROUND	libavcodec/gifdec.c	32;"	d	file:
GCE_DISPOSAL_INPLACE	libavcodec/gifdec.c	31;"	d	file:
GCE_DISPOSAL_NONE	libavcodec/gifdec.c	30;"	d	file:
GCE_DISPOSAL_RESTORE	libavcodec/gifdec.c	33;"	d	file:
GC_1ST_IDX_BITS_6K4	libavcodec/g729data.h	35;"	d
GC_1ST_IDX_BITS_8K	libavcodec/g729data.h	32;"	d
GC_2ND_IDX_BITS_6K4	libavcodec/g729data.h	36;"	d
GC_2ND_IDX_BITS_8K	libavcodec/g729data.h	33;"	d
GEN_HEADERS	libavcodec/Makefile	/^GEN_HEADERS := $(addprefix $(SUBDIR), $(GEN_HEADERS))$/;"	m
GEN_HEADERS	libavcodec/Makefile	/^GEN_HEADERS = cbrt_tables.h aacps_tables.h aac_tables.h dv_tables.h     \\$/;"	m
GET	libavformat/aviobuf.c	319;"	d	file:
GET	libavformat/aviobuf.c	334;"	d	file:
GETB	libavutil/lzo.c	51;"	d	file:
GETB	libavutil/lzo.c	53;"	d	file:
GETVAR	libavfilter/libmpcodecs/vf_detc.c	395;"	d	file:
GET_BITMAP_VAL	libavfilter/vf_drawtext.c	404;"	d	file:
GET_BITS_SAFE	libavcodec/binkaudio.c	156;"	d	file:
GET_BLOCK_COUNT	libavcodec/smc.c	60;"	d	file:
GET_CACHE	libavcodec/get_bits.h	167;"	d
GET_CACHE	libavcodec/get_bits.h	232;"	d
GET_DATA	libavcodec/bitstream.c	86;"	d	file:
GET_EFI_META	libavformat/tty.c	58;"	d	file:
GET_HUFF	libavcodec/bink.c	91;"	d	file:
GET_LIST_HEADER	libavformat/4xm.c	56;"	d	file:
GET_MED	libavcodec/wavpack.c	213;"	d	file:
GET_MODE_BUFFER_SIZE	libpostproc/postprocess.c	111;"	d	file:
GET_MQUANT	libavcodec/vc1dec.c	786;"	d	file:
GET_MVDATA	libavcodec/vc1dec.c	826;"	d	file:
GET_NEXT_INDEX	libavcodec/truemotion1.c	513;"	d	file:
GET_PTS_DIFF	libavcodec/rv34.c	575;"	d	file:
GET_RESULT	libavfilter/libmpcodecs/vf_2xsai.c	90;"	d	file:
GET_RL_VLC	libavcodec/get_bits.h	481;"	d
GET_S	libavcodec/snow.c	1575;"	d	file:
GET_SAUCE_META	libavformat/sauce.c	45;"	d	file:
GET_STR16	libavformat/aviobuf.c	/^GET_STR16(le, avio_rl16)$/;"	f
GET_STR16	libavformat/aviobuf.c	795;"	d	file:
GET_STR16	libavformat/aviobuf.c	817;"	d	file:
GET_TOK	libavcodec/truemotion2.c	/^static inline int GET_TOK(TM2Context *ctx,int type) {$/;"	f	file:
GET_UTF16	libavutil/common.h	261;"	d
GET_UTF8	libavutil/common.h	237;"	d
GET_V	libavformat/nutdec.c	168;"	d	file:
GET_VALIDATED_INDEX	libavcodec/vorbisdec.c	167;"	d	file:
GET_VLC	libavcodec/get_bits.h	450;"	d
GIFContext	libavcodec/gif.c	/^} GIFContext;$/;"	t	typeref:struct:__anon89	file:
GIFContext	libavformat/gif.c	/^} GIFContext;$/;"	t	typeref:struct:__anon385	file:
GIF_ADD_APP_HEADER	libavformat/gif.c	55;"	d	file:
GIF_CHUNKS	libavformat/gif.c	51;"	d	file:
GIT_LOG	Makefile	/^GIT_LOG     = $(SRC_PATH_BARE)\/.git\/logs\/HEAD$/;"	m
GLOBAL	libavcodec/jfdctfst.c	330;"	d	file:
GLOBAL	libavcodec/jfdctfst.c	77;"	d	file:
GLOBAL	libavcodec/jfdctint.c	71;"	d	file:
GLOBAL	libavcodec/jrevdct.c	75;"	d	file:
GLUE	libavcodec/arm/asm.S	/^#define GLUE(a, b) a ## b$/;"	d
GLUE	libavcodec/ppc/asm.S	/^#define GLUE(a, b) a ## b$/;"	d
GMC_SPRITE	libavcodec/mpeg4video.h	50;"	d
GOP_STARTCODE	libavcodec/mpeg4video.h	57;"	d
GOP_START_CODE	libavcodec/mpegvideo.h	72;"	d
GOP_START_CODE	libavformat/mpegvideodec.c	27;"	d	file:
GRAY_SHAPE	libavcodec/mpeg4video.h	35;"	d
GREEN	libavfilter/drawutils.c	/^enum { RED = 0, GREEN, BLUE, ALPHA };$/;"	e	enum:__anon42	file:
GREEN_DITHER	libswscale/swscale_internal.h	214;"	d
GSMContext	libavcodec/gsmdec_data.h	/^} GSMContext;$/;"	t	typeref:struct:__anon67
GSM_BLOCK_SIZE	libavcodec/gsmdec_data.h	28;"	d
GSM_BLOCK_SIZE	libavcodec/libgsm.c	34;"	d	file:
GSM_FRAME_SIZE	libavcodec/gsmdec_data.h	30;"	d
GSM_FRAME_SIZE	libavcodec/libgsm.c	36;"	d	file:
GSM_MS_BLOCK_SIZE	libavcodec/gsmdec_data.h	29;"	d
GSM_MS_BLOCK_SIZE	libavcodec/libgsm.c	35;"	d	file:
GSTR_TAG	libavformat/electronicarts.c	43;"	d	file:
GU	libswscale/rgb2rgb.c	103;"	d	file:
GU	libswscale/swscale.c	78;"	d	file:
GU	libswscale/swscale_unscaled.c	43;"	d	file:
GU	libswscale/x86/rgb2rgb.c	78;"	d	file:
GUIDoffset	libavdevice/dshow.h	/^struct GUIDoffset {$/;"	s
GV	libswscale/rgb2rgb.c	102;"	d	file:
GV	libswscale/swscale.c	77;"	d	file:
GV	libswscale/swscale_unscaled.c	42;"	d	file:
GV	libswscale/x86/rgb2rgb.c	77;"	d	file:
GXFContext	libavformat/gxfenc.c	/^typedef struct GXFContext {$/;"	s	file:
GXFContext	libavformat/gxfenc.c	/^} GXFContext;$/;"	t	typeref:struct:GXFContext	file:
GXFMatTag	libavformat/gxf.h	/^} GXFMatTag;$/;"	t	typeref:enum:__anon347
GXFPktType	libavformat/gxf.h	/^} GXFPktType;$/;"	t	typeref:enum:__anon346
GXFStreamContext	libavformat/gxfenc.c	/^typedef struct GXFStreamContext {$/;"	s	file:
GXFStreamContext	libavformat/gxfenc.c	/^} GXFStreamContext;$/;"	t	typeref:struct:GXFStreamContext	file:
GXFTrackTag	libavformat/gxf.h	/^} GXFTrackTag;$/;"	t	typeref:enum:__anon348
GXF_AUDIO_PACKET_SIZE	libavformat/gxfenc.c	27;"	d	file:
GXF_samples_per_frame	libavformat/gxfenc.c	/^static const int GXF_samples_per_frame[] = { 32768, 0 };$/;"	v	file:
GY	libswscale/rgb2rgb.c	101;"	d	file:
GY	libswscale/swscale.c	76;"	d	file:
GY	libswscale/swscale_unscaled.c	41;"	d	file:
GY	libswscale/x86/rgb2rgb.c	76;"	d	file:
GetBitContext	libavcodec/get_bits.h	/^typedef struct GetBitContext {$/;"	s
GetBitContext	libavcodec/get_bits.h	/^} GetBitContext;$/;"	t	typeref:struct:GetBitContext
GetDiracChromaFormat	libavcodec/libdiracenc.c	/^static dirac_chroma_t GetDiracChromaFormat(enum PixelFormat ff_pix_fmt)$/;"	f	file:
GetDiracVideoFormatPreset	libavcodec/libdiracenc.c	/^static VideoFormat GetDiracVideoFormatPreset(AVCodecContext *avccontext)$/;"	f	file:
GetFfmpegChromaFormat	libavcodec/libdiracdec.c	/^static enum PixelFormat GetFfmpegChromaFormat(dirac_chroma_t dirac_pix_fmt)$/;"	f	file:
GetFfmpegChromaFormat	libavcodec/libschroedingerdec.c	/^static enum PixelFormat GetFfmpegChromaFormat(SchroChromaFormat schro_pix_fmt)$/;"	f	file:
GifState	libavcodec/gifdec.c	/^typedef struct GifState {$/;"	s	file:
GifState	libavcodec/gifdec.c	/^} GifState;$/;"	t	typeref:struct:GifState	file:
GopherContext	libavformat/gopher.c	/^} GopherContext;$/;"	t	typeref:struct:__anon488	file:
GradFunContext	libavfilter/gradfun.h	/^} GradFunContext;$/;"	t	typeref:struct:__anon17
GranuleDef	libavcodec/mpegaudiodec.c	/^typedef struct GranuleDef {$/;"	s	file:
GranuleDef	libavcodec/mpegaudiodec.c	/^} GranuleDef;$/;"	t	typeref:struct:GranuleDef	file:
H	libswscale/swscale-test.c	336;"	d	file:
H	tests/rotozoom.c	235;"	d	file:
H11	libavcodec/aacps.h	/^    float  H11[2][PS_MAX_NUM_ENV+1][PS_MAX_NR_IIDICC];$/;"	m	struct:__anon257
H12	libavcodec/aacps.h	/^    float  H12[2][PS_MAX_NUM_ENV+1][PS_MAX_NR_IIDICC];$/;"	m	struct:__anon257
H21	libavcodec/aacps.h	/^    float  H21[2][PS_MAX_NUM_ENV+1][PS_MAX_NR_IIDICC];$/;"	m	struct:__anon257
H22	libavcodec/aacps.h	/^    float  H22[2][PS_MAX_NUM_ENV+1][PS_MAX_NR_IIDICC];$/;"	m	struct:__anon257
H261Context	libavcodec/h261.h	/^typedef struct H261Context{$/;"	s
H261Context	libavcodec/h261.h	/^}H261Context;$/;"	t	typeref:struct:H261Context
H261_CBP_VLC_BITS	libavcodec/h261dec.c	38;"	d	file:
H261_MBA_VLC_BITS	libavcodec/h261dec.c	35;"	d	file:
H261_MTYPE_VLC_BITS	libavcodec/h261dec.c	36;"	d	file:
H261_MV_VLC_BITS	libavcodec/h261dec.c	37;"	d	file:
H263_AIC	libavcodec/arm/asm-offsets.h	36;"	d
H263_LOOP_FILTER	libavcodec/x86/dsputil_mmx.c	618;"	d	file:
H263_MBTYPE_B_VLC_BITS	libavcodec/ituh263dec.c	50;"	d	file:
H264BSFContext	libavcodec/h264_mp4toannexb_bsf.c	/^typedef struct H264BSFContext {$/;"	s	file:
H264BSFContext	libavcodec/h264_mp4toannexb_bsf.c	/^} H264BSFContext;$/;"	t	typeref:struct:H264BSFContext	file:
H264Context	libavcodec/h264.h	/^typedef struct H264Context{$/;"	s
H264Context	libavcodec/h264.h	/^}H264Context;$/;"	t	typeref:struct:H264Context
H264DSPContext	libavcodec/h264dsp.h	/^typedef struct H264DSPContext{$/;"	s
H264DSPContext	libavcodec/h264dsp.h	/^}H264DSPContext;$/;"	t	typeref:struct:H264DSPContext
H264PredContext	libavcodec/h264pred.h	/^typedef struct H264PredContext{$/;"	s
H264PredContext	libavcodec/h264pred.h	/^}H264PredContext;$/;"	t	typeref:struct:H264PredContext
H264_BIWEIGHT	libavcodec/x86/h264dsp_mmx.c	305;"	d	file:
H264_BIWEIGHT_MMX	libavcodec/x86/h264dsp_mmx.c	310;"	d	file:
H264_BIWEIGHT_MMX_SSE	libavcodec/x86/h264dsp_mmx.c	314;"	d	file:
H264_CHROMA_MC	libavcodec/dsputil_template.c	/^H264_CHROMA_MC(put_       , op_put)$/;"	f
H264_CHROMA_MC	libavcodec/dsputil_template.c	771;"	d	file:
H264_CHROMA_MC	libavcodec/sh4/qpel.c	417;"	d	file:
H264_DSP	libavcodec/h264dsp.c	49;"	d	file:
H264_IDCT	libavcodec/dsputil.h	56;"	d
H264_LOWPASS	libavcodec/dsputil_template.c	889;"	d	file:
H264_LOWPASS	libavcodec/sh4/qpel.c	900;"	d	file:
H264_MC	libavcodec/dsputil_template.c	1192;"	d	file:
H264_MC	libavcodec/ppc/h264_altivec.c	73;"	d	file:
H264_MC	libavcodec/sh4/qpel.c	1144;"	d	file:
H264_MC	libavcodec/x86/h264_qpel_mmx.c	1033;"	d	file:
H264_MC_4816	libavcodec/x86/h264_qpel_mmx.c	1149;"	d	file:
H264_MC_816	libavcodec/x86/h264_qpel_mmx.c	1157;"	d	file:
H264_MC_C	libavcodec/x86/h264_qpel_mmx.c	1048;"	d	file:
H264_MC_H	libavcodec/x86/h264_qpel_mmx.c	1053;"	d	file:
H264_MC_HV	libavcodec/x86/h264_qpel_mmx.c	1083;"	d	file:
H264_MC_V	libavcodec/x86/h264_qpel_mmx.c	1066;"	d	file:
H264_PRED	libavcodec/h264pred.c	375;"	d	file:
H264_PRED16x16_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED16x16_PLANE mmx,   0, h264$/;"	l
H264_PRED16x16_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED16x16_PLANE mmx,   0, rv40$/;"	l
H264_PRED16x16_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED16x16_PLANE mmx,   0, svq3$/;"	l
H264_PRED16x16_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED16x16_PLANE mmx2,  0, h264$/;"	l
H264_PRED16x16_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED16x16_PLANE mmx2,  0, rv40$/;"	l
H264_PRED16x16_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED16x16_PLANE mmx2,  0, svq3$/;"	l
H264_PRED16x16_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED16x16_PLANE sse2,  8, h264$/;"	l
H264_PRED16x16_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED16x16_PLANE sse2,  8, rv40$/;"	l
H264_PRED16x16_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED16x16_PLANE sse2,  8, svq3$/;"	l
H264_PRED16x16_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED16x16_PLANE ssse3, 8, h264$/;"	l
H264_PRED16x16_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED16x16_PLANE ssse3, 8, rv40$/;"	l
H264_PRED16x16_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED16x16_PLANE ssse3, 8, svq3$/;"	l
H264_PRED8x8_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED8x8_PLANE mmx,   0$/;"	l
H264_PRED8x8_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED8x8_PLANE mmx2,  0$/;"	l
H264_PRED8x8_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED8x8_PLANE sse2,  8$/;"	l
H264_PRED8x8_PLANE	libavcodec/x86/h264_intrapred.asm	/^H264_PRED8x8_PLANE ssse3, 8$/;"	l
H264_QPEL_FUNCS	libavcodec/x86/dsputil_mmx.c	2652;"	d	file:
H264_RF_COUNT	libavcodec/vdpau.c	53;"	d	file:
H264_WEIGHT	libavcodec/h264dsp_template.c	104;"	d	file:
H264_WEIGHT	libavcodec/h264dsp_template.c	32;"	d	file:
H264_WEIGHT	libavcodec/ppc/h264_altivec.c	955;"	d	file:
H264_WEIGHT	libavcodec/x86/h264dsp_mmx.c	301;"	d	file:
HA	libavcodec/aacps_tablegen.h	/^static float HA[46][8][4];$/;"	v
HADAMARD8_DIFF_MMX	libavcodec/x86/dsputilenc_yasm.asm	/^HADAMARD8_DIFF_MMX mmx$/;"	l
HADAMARD8_DIFF_MMX	libavcodec/x86/dsputilenc_yasm.asm	/^HADAMARD8_DIFF_MMX mmx2$/;"	l
HADAMARD8_DIFF_SSE2	libavcodec/x86/dsputilenc_yasm.asm	/^HADAMARD8_DIFF_SSE2 sse2, 10$/;"	l
HADAMARD8_DIFF_SSE2	libavcodec/x86/dsputilenc_yasm.asm	/^HADAMARD8_DIFF_SSE2 ssse3, 9$/;"	l
HAD_COC	libavcodec/j2kdec.c	37;"	d	file:
HAD_QCC	libavcodec/j2kdec.c	38;"	d	file:
HALF	libavcodec/bgmc.c	36;"	d	file:
HALFPEL_MODE	libavcodec/svq3.c	78;"	d	file:
HARDCLIP_THRESHOLD	libavcodec/qdm2_tablegen.h	31;"	d
HASH	libavcodec/motion_est.c	1474;"	d	file:
HASH8	libavcodec/motion_est.c	1475;"	d	file:
HAS_ARG	cmdutils.h	119;"	d
HAS_ARG	ffmpeg/cmdutils.h	119;"	d
HAS_CBP	libavcodec/mpegvideo.h	117;"	d
HAS_DIFF_BLOCKS	libavcodec/flashsv2enc.c	59;"	d	file:
HAS_IFRAME_IMAGE	libavcodec/flashsv2enc.c	54;"	d	file:
HAS_PALLET_INFO	libavcodec/flashsv2enc.c	55;"	d	file:
HAVE_6REGS	libavutil/x86_cpu.h	72;"	d
HAVE_7REGS	libavutil/x86_cpu.h	71;"	d
HAVE_ALIGNED_STACK	config.h	57;"	d
HAVE_ALSA_ASOUNDLIB_H	config.h	58;"	d
HAVE_ALTIVEC	config.h	35;"	d
HAVE_ALTIVEC	libpostproc/postprocess.c	598;"	d	file:
HAVE_ALTIVEC	libpostproc/postprocess.c	599;"	d	file:
HAVE_ALTIVEC	libpostproc/postprocess.c	608;"	d	file:
HAVE_ALTIVEC	libpostproc/postprocess.c	609;"	d	file:
HAVE_ALTIVEC_H	config.h	59;"	d
HAVE_AMD3DNOW	config.h	36;"	d
HAVE_AMD3DNOW	libpostproc/postprocess.c	596;"	d	file:
HAVE_AMD3DNOW	libpostproc/postprocess.c	597;"	d	file:
HAVE_AMD3DNOW	libpostproc/postprocess.c	640;"	d	file:
HAVE_AMD3DNOW	libpostproc/postprocess.c	643;"	d	file:
HAVE_AMD3DNOWEXT	config.h	37;"	d
HAVE_ARMV5TE	config.h	38;"	d
HAVE_ARMV6	config.h	39;"	d
HAVE_ARMV6T2	config.h	40;"	d
HAVE_ARMVFP	config.h	41;"	d
HAVE_ARPA_INET_H	config.h	60;"	d
HAVE_ATTRIBUTE_MAY_ALIAS	config.h	61;"	d
HAVE_ATTRIBUTE_MAY_ALIAS	config.mak	/^HAVE_ATTRIBUTE_MAY_ALIAS=yes$/;"	m
HAVE_ATTRIBUTE_PACKED	config.h	62;"	d
HAVE_ATTRIBUTE_PACKED	config.mak	/^HAVE_ATTRIBUTE_PACKED=yes$/;"	m
HAVE_AVX	config.h	42;"	d
HAVE_AV_CONFIG_H	doc/examples/encoding-example.c	35;"	d	file:
HAVE_AV_CONFIG_H	libswscale/swscale-test.c	27;"	d	file:
HAVE_AV_CONFIG_H	tools/graph2dot.c	23;"	d	file:
HAVE_BIGENDIAN	config.h	53;"	d
HAVE_BSWAP	config.h	63;"	d
HAVE_CLOSESOCKET	config.h	64;"	d
HAVE_CMOV	config.h	65;"	d
HAVE_DCBZL	config.h	66;"	d
HAVE_DEV_BKTR_IOCTL_BT848_H	config.h	67;"	d
HAVE_DEV_BKTR_IOCTL_METEOR_H	config.h	68;"	d
HAVE_DEV_IC_BT8XX_H	config.h	69;"	d
HAVE_DEV_VIDEO_BKTR_IOCTL_BT848_H	config.h	71;"	d
HAVE_DEV_VIDEO_METEOR_IOCTL_METEOR_H	config.h	70;"	d
HAVE_DLFCN_H	config.h	72;"	d
HAVE_DLOPEN	config.h	73;"	d
HAVE_DLOPEN	config.mak	/^HAVE_DLOPEN=yes$/;"	m
HAVE_DOS_PATHS	config.h	74;"	d
HAVE_EBP_AVAILABLE	config.h	75;"	d
HAVE_EBX_AVAILABLE	config.h	76;"	d
HAVE_EXP2	config.h	77;"	d
HAVE_EXP2F	config.h	78;"	d
HAVE_FAST_64BIT	config.h	79;"	d
HAVE_FAST_CLZ	config.h	80;"	d
HAVE_FAST_CLZ	config.mak	/^HAVE_FAST_CLZ=yes$/;"	m
HAVE_FAST_CMOV	config.h	81;"	d
HAVE_FAST_UNALIGNED	config.h	54;"	d
HAVE_FCNTL	config.h	82;"	d
HAVE_FCNTL	config.mak	/^HAVE_FCNTL=yes$/;"	m
HAVE_FORK	config.h	83;"	d
HAVE_FORK	config.mak	/^HAVE_FORK=yes$/;"	m
HAVE_GETADDRINFO	config.h	84;"	d
HAVE_GETADDRINFO	config.mak	/^HAVE_GETADDRINFO=yes$/;"	m
HAVE_GETHRTIME	config.h	85;"	d
HAVE_GETPROCESSMEMORYINFO	config.h	86;"	d
HAVE_GETPROCESSTIMES	config.h	87;"	d
HAVE_GETRUSAGE	config.h	89;"	d
HAVE_GETRUSAGE	config.mak	/^HAVE_GETRUSAGE=yes$/;"	m
HAVE_GNU_AS	config.h	90;"	d
HAVE_IBM_ASM	config.h	92;"	d
HAVE_INET_ATON	config.h	93;"	d
HAVE_INET_ATON	config.mak	/^HAVE_INET_ATON=yes$/;"	m
HAVE_INLINE_ASM	config.h	94;"	d
HAVE_INLINE_ASM	config.mak	/^HAVE_INLINE_ASM=yes$/;"	m
HAVE_ISATTY	config.h	95;"	d
HAVE_ISATTY	config.mak	/^HAVE_ISATTY=yes$/;"	m
HAVE_IWMMXT	config.h	43;"	d
HAVE_KBHIT	config.h	96;"	d
HAVE_LDBRX	config.h	97;"	d
HAVE_LLRINT	config.h	98;"	d
HAVE_LLRINTF	config.h	99;"	d
HAVE_LOCALTIME_R	config.h	102;"	d
HAVE_LOCALTIME_R	config.mak	/^HAVE_LOCALTIME_R=yes$/;"	m
HAVE_LOCAL_ALIGNED_16	config.h	100;"	d
HAVE_LOCAL_ALIGNED_8	config.h	101;"	d
HAVE_LOG2	config.h	103;"	d
HAVE_LOG2F	config.h	104;"	d
HAVE_LOONGSON	config.h	105;"	d
HAVE_LRINT	config.h	107;"	d
HAVE_LRINT	config.mak	/^HAVE_LRINT=yes$/;"	m
HAVE_LRINTF	config.h	109;"	d
HAVE_LZO1X_999_COMPRESS	config.h	110;"	d
HAVE_MACHINE_IOCTL_BT848_H	config.h	111;"	d
HAVE_MACHINE_IOCTL_METEOR_H	config.h	112;"	d
HAVE_MALLOC_H	config.h	113;"	d
HAVE_MAPVIEWOFFILE	config.h	114;"	d
HAVE_MEMALIGN	config.h	115;"	d
HAVE_MEMALIGN	config.mak	/^HAVE_MEMALIGN=yes$/;"	m
HAVE_MKSTEMP	config.h	116;"	d
HAVE_MKSTEMP	config.mak	/^HAVE_MKSTEMP=yes$/;"	m
HAVE_MMAP	config.h	117;"	d
HAVE_MMAP	config.mak	/^HAVE_MMAP=yes$/;"	m
HAVE_MMI	config.h	44;"	d
HAVE_MMX	config.h	45;"	d
HAVE_MMX	libpostproc/postprocess.c	592;"	d	file:
HAVE_MMX	libpostproc/postprocess.c	593;"	d	file:
HAVE_MMX	libpostproc/postprocess.c	618;"	d	file:
HAVE_MMX	libpostproc/postprocess.c	619;"	d	file:
HAVE_MMX	libpostproc/postprocess.c	627;"	d	file:
HAVE_MMX	libpostproc/postprocess.c	629;"	d	file:
HAVE_MMX	libpostproc/postprocess.c	638;"	d	file:
HAVE_MMX	libpostproc/postprocess.c	641;"	d	file:
HAVE_MMX2	config.h	46;"	d
HAVE_MMX2	libavcodec/x86/mpegvideo_mmx.c	596;"	d	file:
HAVE_MMX2	libavcodec/x86/mpegvideo_mmx.c	598;"	d	file:
HAVE_MMX2	libavcodec/x86/mpegvideo_mmx.c	603;"	d	file:
HAVE_MMX2	libavcodec/x86/mpegvideo_mmx.c	604;"	d	file:
HAVE_MMX2	libpostproc/postprocess.c	594;"	d	file:
HAVE_MMX2	libpostproc/postprocess.c	595;"	d	file:
HAVE_MMX2	libpostproc/postprocess.c	628;"	d	file:
HAVE_MMX2	libpostproc/postprocess.c	630;"	d	file:
HAVE_MMX2	libpostproc/postprocess.c	639;"	d	file:
HAVE_MMX2	libpostproc/postprocess.c	642;"	d	file:
HAVE_NEON	config.h	47;"	d
HAVE_PLD	config.h	118;"	d
HAVE_PLD	config.mak	/^HAVE_PLD=yes$/;"	m
HAVE_POLL_H	config.h	130;"	d
HAVE_POSIX_MEMALIGN	config.h	119;"	d
HAVE_PPC4XX	config.h	48;"	d
HAVE_PTHREADS	config.h	55;"	d
HAVE_PTHREADS	config.mak	/^HAVE_PTHREADS=yes$/;"	m
HAVE_ROUND	config.h	121;"	d
HAVE_ROUNDF	config.h	123;"	d
HAVE_SDL	config.h	124;"	d
HAVE_SDL_VIDEO_SIZE	config.h	125;"	d
HAVE_SETMODE	config.h	126;"	d
HAVE_SETRLIMIT	config.h	132;"	d
HAVE_SETRLIMIT	config.mak	/^HAVE_SETRLIMIT=yes$/;"	m
HAVE_SNDIO_H	config.h	127;"	d
HAVE_SOCKLEN_T	config.h	128;"	d
HAVE_SOUNDCARD_H	config.h	129;"	d
HAVE_SSE	config.h	49;"	d
HAVE_SSE2	libavcodec/x86/mpegvideo_mmx.c	595;"	d	file:
HAVE_SSE2	libavcodec/x86/mpegvideo_mmx.c	597;"	d	file:
HAVE_SSE2	libavcodec/x86/mpegvideo_mmx.c	611;"	d	file:
HAVE_SSE2	libavcodec/x86/mpegvideo_mmx.c	612;"	d	file:
HAVE_SSSE3	config.h	50;"	d
HAVE_SSSE3	libavcodec/x86/mpegvideo_mmx.c	592;"	d	file:
HAVE_SSSE3	libavcodec/x86/mpegvideo_mmx.c	593;"	d	file:
HAVE_SSSE3	libavcodec/x86/mpegvideo_mmx.c	620;"	d	file:
HAVE_SSSE3	libavcodec/x86/mpegvideo_mmx.c	621;"	d	file:
HAVE_SSSE3_BAK	libavcodec/x86/mpegvideo_mmx.c	590;"	d	file:
HAVE_STRERROR_R	config.h	133;"	d
HAVE_STRERROR_R	config.mak	/^HAVE_STRERROR_R=yes$/;"	m
HAVE_STRTOK_R	config.h	134;"	d
HAVE_STRTOK_R	config.mak	/^HAVE_STRTOK_R=yes$/;"	m
HAVE_STRUCT_ADDRINFO	config.h	135;"	d
HAVE_STRUCT_IPV6_MREQ	config.h	136;"	d
HAVE_STRUCT_RUSAGE_RU_MAXRSS	config.h	91;"	d
HAVE_STRUCT_SOCKADDR_IN6	config.h	137;"	d
HAVE_STRUCT_SOCKADDR_SA_LEN	config.h	138;"	d
HAVE_STRUCT_SOCKADDR_STORAGE	config.h	139;"	d
HAVE_SYMVER	config.h	140;"	d
HAVE_SYMVER	config.mak	/^HAVE_SYMVER=yes$/;"	m
HAVE_SYMVER_ASM_LABEL	config.h	142;"	d
HAVE_SYMVER_GNU_ASM	config.h	141;"	d
HAVE_SYMVER_GNU_ASM	config.mak	/^HAVE_SYMVER_GNU_ASM=yes$/;"	m
HAVE_SYS_MMAN_H	config.h	143;"	d
HAVE_SYS_RESOURCE_H	config.h	144;"	d
HAVE_SYS_SELECT_H	config.h	145;"	d
HAVE_SYS_SOUNDCARD_H	config.h	146;"	d
HAVE_SYS_VIDEOIO_H	config.h	147;"	d
HAVE_TEN_OPERANDS	config.h	148;"	d
HAVE_TERMIOS_H	config.h	149;"	d
HAVE_THREADS	config.h	150;"	d
HAVE_THREADS	config.mak	/^HAVE_THREADS=yes$/;"	m
HAVE_TRUNC	config.h	152;"	d
HAVE_TRUNCF	config.h	154;"	d
HAVE_VFPV3	config.h	51;"	d
HAVE_VFP_ARGS	config.h	155;"	d
HAVE_VIRTUALALLOC	config.h	156;"	d
HAVE_VIS	config.h	52;"	d
HAVE_W32THREADS	config.h	56;"	d
HAVE_WINSOCK2_H	config.h	157;"	d
HAVE_XFORM_ASM	config.h	158;"	d
HAVE_XMM_CLOBBERS	config.h	159;"	d
HAVE_YASM	config.h	160;"	d
HB	libavcodec/aacps_tablegen.h	/^static float HB[46][8][4];$/;"	v
HB_FIR_SIZE	libavcodec/amrwbdata.h	35;"	d
HCONST	libavcodec/ac3tab.h	29;"	d
HCONST	libavcodec/ac3tab.h	31;"	d
HDMV_types	libavformat/mpegts.c	/^static const StreamType HDMV_types[] = {$/;"	v	file:
HDRSIZE	libavformat/nuv.c	190;"	d	file:
HEADERS	libavcodec/Makefile	/^HEADERS = avcodec.h avfft.h dxva2.h opt.h vaapi.h vdpau.h version.h xvmc.h$/;"	m
HEADERS	libavdevice/Makefile	/^HEADERS = avdevice.h$/;"	m
HEADERS	libavfilter/Makefile	/^HEADERS = avcodec.h avfilter.h avfiltergraph.h vsink_buffer.h vsrc_buffer.h$/;"	m
HEADERS	libavformat/Makefile	/^HEADERS = avformat.h avio.h version.h$/;"	m
HEADERS	libavutil/Makefile	/^HEADERS = adler32.h                                                     \\$/;"	m
HEADERS	libpostproc/Makefile	/^HEADERS = postprocess.h$/;"	m
HEADERS	libswscale/Makefile	/^HEADERS = swscale.h$/;"	m
HEADER_SIZE	libavcodec/dca.c	233;"	d	file:
HEADER_SIZE	libavcodec/dpxenc.c	106;"	d	file:
HEADER_SIZE	libavcodec/mpegaudiodec.c	110;"	d	file:
HEADER_SIZE	libavformat/msnwc_tcp.c	24;"	d	file:
HEAD_TAG	libavformat/4xm.c	36;"	d	file:
HEIGHT	libavcodec/c93.c	43;"	d	file:
HEIGHT	libavcodec/motion-test.c	40;"	d	file:
HEIGHT	libavfilter/libmpcodecs/vf_test.c	44;"	d	file:
HGAINMAX	libavcodec/wmadec.c	46;"	d	file:
HGAINVLCBITS	libavcodec/wmadec.c	45;"	d	file:
HIGH_BAND_MAX_SIZE	libavcodec/wma.h	39;"	d
HISTORY_SIZE	libavcodec/apedec.c	43;"	d	file:
HMAC_IPAD_VAL	libavformat/rtmpproto.c	354;"	d	file:
HMAC_OPAD_VAL	libavformat/rtmpproto.c	355;"	d	file:
HNODE	libavcodec/huffman.c	28;"	d	file:
HOR_DOWN_PRED	libavcodec/h264pred.h	44;"	d
HOR_PRED	libavcodec/h264pred.h	39;"	d
HOR_PRED8x8	libavcodec/h264pred.h	69;"	d
HOR_UP_PRED	libavcodec/h264pred.h	46;"	d
HOR_UP_PRED_RV40_NODOWN	libavcodec/h264pred.h	55;"	d
HOR_VP8_PRED	libavcodec/h264pred.h	63;"	d
HOSTCC	config.mak	/^HOSTCC=gcc$/;"	m
HOSTCFLAGS	config.mak	/^HOSTCFLAGS=-D_ISOC99_SOURCE -O3 -g -std=c99 -Wall$/;"	m
HOSTEXESUF	config.mak	/^HOSTEXESUF=$/;"	m
HOSTLDFLAGS	config.mak	/^HOSTLDFLAGS=$/;"	m
HOSTLIBS	config.mak	/^HOSTLIBS=-lm$/;"	m
HOSTOBJS	common.mak	/^HOSTOBJS  := $(addprefix $(SUBDIR),$(addsuffix .o,$(HOSTPROGS)))$/;"	m
HOSTPROGS	Makefile	/^HOSTPROGS  := $(TESTTOOLS:%=tests\/%)$/;"	m
HOSTPROGS	common.mak	/^HOSTPROGS := $(addprefix $(SUBDIR),$(addsuffix $(HOSTEXESUF),$(HOSTPROGS)))$/;"	m
HOSTPROGS	libavcodec/Makefile	/^HOSTPROGS = aac_tablegen aacps_tablegen cbrt_tablegen cos_tablegen      \\$/;"	m
HQDN3DContext	libavfilter/vf_hqdn3d.c	/^} HQDN3DContext;$/;"	t	typeref:struct:__anon8	file:
HSUM	libavcodec/x86/dsputilenc_mmx.c	1001;"	d	file:
HSUM	libavcodec/x86/dsputilenc_mmx.c	979;"	d	file:
HSUM	libavcodec/x86/dsputilenc_mmx.c	983;"	d	file:
HSUM	libavcodec/x86/dsputilenc_mmx.c	985;"	d	file:
HSUM	libavcodec/x86/dsputilenc_mmx.c	988;"	d	file:
HSUM	libavcodec/x86/dsputilenc_mmx.c	992;"	d	file:
HSUM_MMX	libavcodec/x86/dsputilenc_mmx.c	903;"	d	file:
HSUM_MMX2	libavcodec/x86/dsputilenc_mmx.c	912;"	d	file:
HSUM_SSE2	libavcodec/x86/dsputilenc_mmx.c	919;"	d	file:
HTAPS_MAX	libavcodec/snow.c	401;"	d	file:
HTMLPAGES	Makefile	/^HTMLPAGES   = $(PROGS-yes:%=doc\/%.html)$/;"	m
HTTPAuthState	libavformat/httpauth.h	/^} HTTPAuthState;$/;"	t	typeref:struct:__anon405
HTTPAuthType	libavformat/httpauth.h	/^typedef enum HTTPAuthType {$/;"	g
HTTPAuthType	libavformat/httpauth.h	/^} HTTPAuthType;$/;"	t	typeref:enum:HTTPAuthType
HTTPContext	ffserver.c	/^typedef struct HTTPContext {$/;"	s	file:
HTTPContext	ffserver.c	/^} HTTPContext;$/;"	t	typeref:struct:HTTPContext	file:
HTTPContext	libavformat/http.c	/^} HTTPContext;$/;"	t	typeref:struct:__anon462	file:
HTTPSTATE_READY	ffserver.c	/^    HTTPSTATE_READY,$/;"	e	enum:HTTPState	file:
HTTPSTATE_RECEIVE_DATA	ffserver.c	/^    HTTPSTATE_RECEIVE_DATA,$/;"	e	enum:HTTPState	file:
HTTPSTATE_SEND_DATA	ffserver.c	/^    HTTPSTATE_SEND_DATA,          \/* sending TCP or UDP data *\/$/;"	e	enum:HTTPState	file:
HTTPSTATE_SEND_DATA_HEADER	ffserver.c	/^    HTTPSTATE_SEND_DATA_HEADER,$/;"	e	enum:HTTPState	file:
HTTPSTATE_SEND_DATA_TRAILER	ffserver.c	/^    HTTPSTATE_SEND_DATA_TRAILER,$/;"	e	enum:HTTPState	file:
HTTPSTATE_SEND_HEADER	ffserver.c	/^    HTTPSTATE_SEND_HEADER,$/;"	e	enum:HTTPState	file:
HTTPSTATE_WAIT_FEED	ffserver.c	/^    HTTPSTATE_WAIT_FEED,          \/* wait for data from the feed *\/$/;"	e	enum:HTTPState	file:
HTTPSTATE_WAIT_REQUEST	ffserver.c	/^    HTTPSTATE_WAIT_REQUEST,$/;"	e	enum:HTTPState	file:
HTTPState	ffserver.c	/^enum HTTPState {$/;"	g	file:
HTTP_AUTH_BASIC	libavformat/httpauth.h	/^    HTTP_AUTH_BASIC,       \/**< HTTP 1.0 Basic auth from RFC 1945$/;"	e	enum:HTTPAuthType
HTTP_AUTH_DIGEST	libavformat/httpauth.h	/^    HTTP_AUTH_DIGEST,      \/**< HTTP 1.1 Digest auth from RFC 2617 *\/$/;"	e	enum:HTTPAuthType
HTTP_AUTH_NONE	libavformat/httpauth.h	/^    HTTP_AUTH_NONE = 0,    \/**< No authentication specified *\/$/;"	e	enum:HTTPAuthType
HTTP_REQUEST_TIMEOUT	ffserver.c	102;"	d	file:
HT_BKG	libavcodec/vmnc.c	/^    HT_BKG =  2, \/\/ background color is present$/;"	e	enum:HexTile_Flags	file:
HT_CLR	libavcodec/vmnc.c	/^    HT_CLR = 16  \/\/ each subrect has own color$/;"	e	enum:HexTile_Flags	file:
HT_FG	libavcodec/vmnc.c	/^    HT_FG  =  4, \/\/ foreground color is present$/;"	e	enum:HexTile_Flags	file:
HT_RAW	libavcodec/vmnc.c	/^    HT_RAW =  1, \/\/ tile is raw$/;"	e	enum:HexTile_Flags	file:
HT_SUB	libavcodec/vmnc.c	/^    HT_SUB =  8, \/\/ subrects are present$/;"	e	enum:HexTile_Flags	file:
HUFFMAN_TABLE_SIZE	libavcodec/idcinvideo.c	53;"	d	file:
HUFFMAN_TABLE_SIZE	libavformat/idcin.c	74;"	d	file:
HUFF_COEF0_MAXBITS	libavcodec/wmaprodata.h	167;"	d
HUFF_COEF0_SIZE	libavcodec/wmaprodata.h	166;"	d
HUFF_COEF1_MAXBITS	libavcodec/wmaprodata.h	254;"	d
HUFF_COEF1_SIZE	libavcodec/wmaprodata.h	253;"	d
HUFF_SCALE_MAXBITS	libavcodec/wmaprodata.h	50;"	d
HUFF_SCALE_RL_MAXBITS	libavcodec/wmaprodata.h	96;"	d
HUFF_SCALE_RL_SIZE	libavcodec/wmaprodata.h	95;"	d
HUFF_SCALE_SIZE	libavcodec/wmaprodata.h	49;"	d
HUFF_VEC1_MAXBITS	libavcodec/wmaprodata.h	506;"	d
HUFF_VEC1_SIZE	libavcodec/wmaprodata.h	505;"	d
HUFF_VEC2_MAXBITS	libavcodec/wmaprodata.h	461;"	d
HUFF_VEC2_SIZE	libavcodec/wmaprodata.h	460;"	d
HUFF_VEC4_MAXBITS	libavcodec/wmaprodata.h	420;"	d
HUFF_VEC4_SIZE	libavcodec/wmaprodata.h	419;"	d
HUF_TOKENS	libavcodec/idcinvideo.c	54;"	d	file:
HVBILIN	libavcodec/x86/vp8dsp-init.c	201;"	d	file:
HVTAP	libavcodec/x86/vp8dsp-init.c	162;"	d	file:
HVTAPMMX	libavcodec/x86/vp8dsp-init.c	176;"	d	file:
HVTAPSSE2	libavcodec/x86/vp8dsp-init.c	186;"	d	file:
HWND_MESSAGE	libavdevice/vfwcap.c	31;"	d	file:
HYuvContext	libavcodec/huffyuv.c	/^typedef struct HYuvContext{$/;"	s	file:
HYuvContext	libavcodec/huffyuv.c	/^}HYuvContext;$/;"	t	typeref:struct:HYuvContext	file:
H_A_DEBLOCK	libpostproc/postprocess_internal.h	53;"	d
H_DEBLOCK	libpostproc/postprocess_internal.h	34;"	d
H_X1_FILTER	libpostproc/postprocess_internal.h	52;"	d
HeapElem	libavcodec/huffyuv.c	/^} HeapElem;$/;"	t	typeref:struct:__anon201	file:
HexTile_Flags	libavcodec/vmnc.c	/^enum HexTile_Flags {$/;"	g	file:
HintSample	libavformat/movenc.h	/^typedef struct HintSample {$/;"	s
HintSample	libavformat/movenc.h	/^} HintSample;$/;"	t	typeref:struct:HintSample
HintSampleQueue	libavformat/movenc.h	/^} HintSampleQueue;$/;"	t	typeref:struct:__anon449
HuffCmp	libavcodec/huffman.h	/^typedef int (*HuffCmp)(const void *va, const void *vb);$/;"	t
HuffCode	libavcodec/motionpixels.c	/^typedef struct HuffCode {$/;"	s	file:
HuffCode	libavcodec/motionpixels.c	/^} HuffCode;$/;"	t	typeref:struct:HuffCode	file:
HuffContext	libavcodec/smacker.c	/^typedef struct HuffContext {$/;"	s	file:
HuffContext	libavcodec/smacker.c	/^} HuffContext;$/;"	t	typeref:struct:HuffContext	file:
HuffTable	libavcodec/mpegaudiodectab.h	/^typedef struct HuffTable {$/;"	s
HuffTable	libavcodec/mpegaudiodectab.h	/^} HuffTable;$/;"	t	typeref:struct:HuffTable
I0	libavcodec/bfin/fdct_bfin.S	/^        I0 = B0;                        \/\/ I0 points to Input Element (0, 0).$/;"	d
I0	libavcodec/bfin/idct_bfin.S	/^    I0 = B0;                \/\/ I0 points to Input Element (0, 0).$/;"	d
I0	libavcodec/bfin/idct_bfin.S	/^    I0 = B2;                \/\/ I0 points to Input Element (0, 0)$/;"	d
I0	libavcodec/bfin/pixels_bfin.S	/^        I0 = B0;$/;"	d
I0	libavcodec/bfin/pixels_bfin.S	/^        I0 = P1;$/;"	d
I0	libavcodec/bfin/pixels_bfin.S	/^        I0 = R0;$/;"	d
I0	libavcodec/bfin/pixels_bfin.S	/^        I0 = b0;$/;"	d
I0	libavcodec/bfin/pixels_bfin.S	/^    I0 = 0;$/;"	d
I0	libavcodec/bfin/pixels_bfin.S	/^    I0 = R0;         \/\/ block$/;"	d
I0	libavcodec/bfin/vp3_idct_bfin.S	/^    I0 = B0;                \/\/ I0 points to Input Element (0, 0).$/;"	d
I0	libavcodec/bfin/vp3_idct_bfin.S	/^    I0 = B2;                \/\/ I0 points to Input Element (0, 0)$/;"	d
I1	libavcodec/bfin/fdct_bfin.S	/^        I1 = B0;                        \/\/ Element 1 and 0 is read in R0.$/;"	d
I1	libavcodec/bfin/idct_bfin.S	/^    I1 = I2;                \/\/ I1 points to input Element (0, 6)$/;"	d
I1	libavcodec/bfin/idct_bfin.S	/^    I1 = I2;                \/\/ I1 points to input Element (0, 6).$/;"	d
I1	libavcodec/bfin/pixels_bfin.S	/^        I1 = B1;$/;"	d
I1	libavcodec/bfin/pixels_bfin.S	/^        I1 = R1;$/;"	d
I1	libavcodec/bfin/pixels_bfin.S	/^        I1 = b1;$/;"	d
I1	libavcodec/bfin/pixels_bfin.S	/^    I1 = R1;         \/\/ dest$/;"	d
I1	libavcodec/bfin/vp3_idct_bfin.S	/^    I1 = I2;                \/\/ I1 points to input Element (0, 6)$/;"	d
I1	libavcodec/bfin/vp3_idct_bfin.S	/^    I1 = I2;                \/\/ I1 points to input Element (0, 6).$/;"	d
I2	libavcodec/bfin/fdct_bfin.S	/^        I2 = I1;                        \/\/ Element 6 is read into R3.H.$/;"	d
I2	libavcodec/bfin/idct_bfin.S	/^    I2 = B0;                \/\/ I2 points to Input Element (0, 0).$/;"	d
I2	libavcodec/bfin/idct_bfin.S	/^    I2 = B2;                \/\/ I2 points to Input Element (0, 0)$/;"	d
I2	libavcodec/bfin/pixels_bfin.S	/^    I2 = R1;         \/\/ dest$/;"	d
I2	libavcodec/bfin/vp3_idct_bfin.S	/^    I2 = B0;                \/\/ I2 points to Input Element (0, 0).$/;"	d
I2	libavcodec/bfin/vp3_idct_bfin.S	/^    I2 = B2;                \/\/ I2 points to Input Element (0, 0)$/;"	d
I3	libavcodec/bfin/fdct_bfin.S	/^        I3 = B3;                        \/\/ I3 points to Coefficients.$/;"	d
I3	libavcodec/bfin/idct_bfin.S	/^    I3 = B3;                \/\/ I3 points to Coefficients$/;"	d
I3	libavcodec/bfin/pixels_bfin.S	/^        I3 = B3;$/;"	d
I3	libavcodec/bfin/pixels_bfin.S	/^        I3 = b3;$/;"	d
I3	libavcodec/bfin/pixels_bfin.S	/^    I3 = R0;         \/\/ block$/;"	d
I3	libavcodec/bfin/vp3_idct_bfin.S	/^    I3 = B3;                \/\/ I3 points to Coefficients$/;"	d
ID3v1_GENRE_MAX	libavformat/id3v1.h	29;"	d
ID3v1_TAG_SIZE	libavformat/id3v1.h	27;"	d
ID3v2Encoding	libavformat/id3v2.h	/^enum ID3v2Encoding {$/;"	g
ID3v2_DEFAULT_MAGIC	libavformat/id3v2.h	34;"	d
ID3v2_EA3_MAGIC	libavformat/oma.c	68;"	d	file:
ID3v2_ENCODING_ISO8859	libavformat/id3v2.h	/^    ID3v2_ENCODING_ISO8859  = 0,$/;"	e	enum:ID3v2Encoding
ID3v2_ENCODING_UTF16BE	libavformat/id3v2.h	/^    ID3v2_ENCODING_UTF16BE  = 2,$/;"	e	enum:ID3v2Encoding
ID3v2_ENCODING_UTF16BOM	libavformat/id3v2.h	/^    ID3v2_ENCODING_UTF16BOM = 1,$/;"	e	enum:ID3v2Encoding
ID3v2_ENCODING_UTF8	libavformat/id3v2.h	/^    ID3v2_ENCODING_UTF8     = 3,$/;"	e	enum:ID3v2Encoding
ID3v2_FLAG_COMPRESSION	libavformat/id3v2.h	39;"	d
ID3v2_FLAG_DATALEN	libavformat/id3v2.h	36;"	d
ID3v2_FLAG_ENCRYPTION	libavformat/id3v2.h	38;"	d
ID3v2_FLAG_UNSYNCH	libavformat/id3v2.h	37;"	d
ID3v2_HEADER_SIZE	libavformat/id3v2.h	29;"	d
IDCIN_FPS	libavformat/idcin.c	75;"	d	file:
IDCT	libavcodec/dct-test.c	/^  enum { FDCT, IDCT } is_idct;$/;"	e	enum:algo::__anon91	file:
IDCT	libavcodec/ppc/idct_altivec.c	84;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	1012;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	1013;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	1076;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	1077;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	1141;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	1142;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	1215;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	1216;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	709;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	710;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	797;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	798;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	871;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	872;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	937;"	d	file:
IDCT	libavcodec/x86/simple_idct_mmx.c	938;"	d	file:
IDCT4ROWS	libavcodec/sparc/simple_idct_vis.c	141;"	d	file:
IDCT8_1D_ALTIVEC	libavcodec/ppc/h264_altivec.c	356;"	d	file:
IDCT8_ADD	libavcodec/x86/h264_idct_10bit.asm	/^IDCT8_ADD avx$/;"	l
IDCT8_ADD	libavcodec/x86/h264_idct_10bit.asm	/^IDCT8_ADD sse2$/;"	l
IDCT8_ADD4	libavcodec/x86/h264_idct_10bit.asm	/^IDCT8_ADD4 avx$/;"	l
IDCT8_ADD4	libavcodec/x86/h264_idct_10bit.asm	/^IDCT8_ADD4 sse2$/;"	l
IDCT8_DC_ADD	libavcodec/x86/h264_idct_10bit.asm	/^IDCT8_DC_ADD avx$/;"	l
IDCT8_DC_ADD	libavcodec/x86/h264_idct_10bit.asm	/^IDCT8_DC_ADD sse2$/;"	l
IDCT_1D	libavcodec/ppc/vp3dsp_altivec.c	67;"	d	file:
IDCT_ADD16INTRA_10	libavcodec/x86/h264_idct_10bit.asm	/^IDCT_ADD16INTRA_10 avx$/;"	l
IDCT_ADD16INTRA_10	libavcodec/x86/h264_idct_10bit.asm	/^IDCT_ADD16INTRA_10 sse2$/;"	l
IDCT_ADD16_10	libavcodec/x86/h264_idct_10bit.asm	/^IDCT_ADD16_10 avx$/;"	l
IDCT_ADD16_10	libavcodec/x86/h264_idct_10bit.asm	/^IDCT_ADD16_10 sse2$/;"	l
IDCT_ADD8	libavcodec/x86/h264_idct_10bit.asm	/^IDCT_ADD8 avx$/;"	l
IDCT_ADD8	libavcodec/x86/h264_idct_10bit.asm	/^IDCT_ADD8 sse2$/;"	l
IDCT_ADD_10	libavcodec/x86/h264_idct_10bit.asm	/^IDCT_ADD_10 avx$/;"	l
IDCT_ADD_10	libavcodec/x86/h264_idct_10bit.asm	/^IDCT_ADD_10 sse2$/;"	l
IDCT_ADD_FUNC	libavcodec/x86/h264dsp_mmx.c	30;"	d	file:
IDCT_ADD_REP_FUNC	libavcodec/x86/h264dsp_mmx.c	49;"	d	file:
IDCT_ADD_REP_FUNC2	libavcodec/x86/h264dsp_mmx.c	73;"	d	file:
IDCT_COL	libavcodec/binkidct.c	60;"	d	file:
IDCT_COL	libavcodec/eaidct.c	60;"	d	file:
IDCT_DC_DEQUANT	libavcodec/x86/h264_idct.asm	/^IDCT_DC_DEQUANT mmx, 0$/;"	l
IDCT_DC_DEQUANT	libavcodec/x86/h264_idct.asm	/^IDCT_DC_DEQUANT sse2, 7$/;"	l
IDCT_HALF	libavcodec/ppc/idct_altivec.c	48;"	d	file:
IDCT_ROW	libavcodec/binkidct.c	63;"	d	file:
IDCT_ROW	libavcodec/eaidct.c	63;"	d	file:
IDCT_START	libavcodec/ppc/vp3dsp_altivec.c	31;"	d	file:
IDCT_TRANSFORM	libavcodec/binkidct.c	34;"	d	file:
IDCT_TRANSFORM	libavcodec/eaidct.c	35;"	d	file:
IDFT_C2R	libavcodec/avfft.h	/^    IDFT_C2R,$/;"	e	enum:RDFTransformType
IDFT_R2C	libavcodec/avfft.h	/^    IDFT_R2C,$/;"	e	enum:RDFTransformType
IDWTELEM	libavcodec/dwt.h	/^typedef short IDWTELEM;$/;"	t
IDX_HIGH_BAND	libavcodec/atrac1.c	54;"	d	file:
IDX_LOW_BAND	libavcodec/atrac1.c	52;"	d	file:
IDX_MID_BAND	libavcodec/atrac1.c	53;"	d	file:
ID_8SVX	libavformat/iff.c	36;"	d	file:
ID_ANNO	libavformat/iff.c	48;"	d	file:
ID_ANNO	libavformat/iff.c	57;"	d	file:
ID_ATAK	libavformat/iff.c	38;"	d	file:
ID_AUTH	libavformat/iff.c	49;"	d	file:
ID_BMHD	libavformat/iff.c	43;"	d	file:
ID_BODY	libavformat/iff.c	56;"	d	file:
ID_CAMG	libavformat/iff.c	44;"	d	file:
ID_CHAN	libavformat/iff.c	40;"	d	file:
ID_CHAPTER	libavformat/ffmeta.h	26;"	d
ID_CHRS	libavformat/iff.c	50;"	d	file:
ID_CMAP	libavformat/iff.c	45;"	d	file:
ID_COPYRIGHT	libavformat/iff.c	51;"	d	file:
ID_CSET	libavformat/iff.c	52;"	d	file:
ID_FORM	libavformat/iff.c	47;"	d	file:
ID_FVER	libavformat/iff.c	53;"	d	file:
ID_ILBM	libavformat/iff.c	42;"	d	file:
ID_LENGTH	libavformat/libnut.c	33;"	d	file:
ID_NAME	libavformat/iff.c	54;"	d	file:
ID_PBM	libavformat/iff.c	41;"	d	file:
ID_RLSE	libavformat/iff.c	39;"	d	file:
ID_STREAM	libavformat/ffmeta.h	27;"	d
ID_STRING	libavformat/ffmeta.h	25;"	d
ID_STRING	libavformat/libnut.c	32;"	d	file:
ID_STRING	libavformat/nut.h	38;"	d
ID_TEXT	libavformat/iff.c	55;"	d	file:
ID_VHDR	libavformat/iff.c	37;"	d	file:
IEC61937Context	libavformat/spdifenc.c	/^typedef struct IEC61937Context {$/;"	s	file:
IEC61937Context	libavformat/spdifenc.c	/^} IEC61937Context;$/;"	t	typeref:struct:IEC61937Context	file:
IEC61937DataType	libavformat/spdif.h	/^enum IEC61937DataType {$/;"	g
IEC61937_AC3	libavformat/spdif.h	/^    IEC61937_AC3                = 0x01,          \/\/\/< AC-3 data$/;"	e	enum:IEC61937DataType
IEC61937_ATRAC	libavformat/spdif.h	/^    IEC61937_ATRAC              = 0x0E,          \/\/\/< Atrac data$/;"	e	enum:IEC61937DataType
IEC61937_ATRAC3	libavformat/spdif.h	/^    IEC61937_ATRAC3             = 0x0F,          \/\/\/< Atrac 3 data$/;"	e	enum:IEC61937DataType
IEC61937_ATRACX	libavformat/spdif.h	/^    IEC61937_ATRACX             = 0x10,          \/\/\/< Atrac 3 plus data$/;"	e	enum:IEC61937DataType
IEC61937_DTS1	libavformat/spdif.h	/^    IEC61937_DTS1               = 0x0B,          \/\/\/< DTS type I   (512 samples)$/;"	e	enum:IEC61937DataType
IEC61937_DTS2	libavformat/spdif.h	/^    IEC61937_DTS2               = 0x0C,          \/\/\/< DTS type II  (1024 samples)$/;"	e	enum:IEC61937DataType
IEC61937_DTS3	libavformat/spdif.h	/^    IEC61937_DTS3               = 0x0D,          \/\/\/< DTS type III (2048 samples)$/;"	e	enum:IEC61937DataType
IEC61937_DTSHD	libavformat/spdif.h	/^    IEC61937_DTSHD              = 0x11,          \/\/\/< DTS HD data$/;"	e	enum:IEC61937DataType
IEC61937_EAC3	libavformat/spdif.h	/^    IEC61937_EAC3               = 0x15,          \/\/\/< E-AC-3 data$/;"	e	enum:IEC61937DataType
IEC61937_MPEG1_LAYER1	libavformat/spdif.h	/^    IEC61937_MPEG1_LAYER1       = 0x04,          \/\/\/< MPEG-1 layer 1$/;"	e	enum:IEC61937DataType
IEC61937_MPEG1_LAYER23	libavformat/spdif.h	/^    IEC61937_MPEG1_LAYER23      = 0x05,          \/\/\/< MPEG-1 layer 2 or 3 data or MPEG-2 without extension$/;"	e	enum:IEC61937DataType
IEC61937_MPEG2_AAC	libavformat/spdif.h	/^    IEC61937_MPEG2_AAC          = 0x07,          \/\/\/< MPEG-2 AAC ADTS$/;"	e	enum:IEC61937DataType
IEC61937_MPEG2_AAC_LSF_2048	libavformat/spdif.h	/^    IEC61937_MPEG2_AAC_LSF_2048 = 0x13,          \/\/\/< MPEG-2 AAC ADTS half-rate low sampling frequency$/;"	e	enum:IEC61937DataType
IEC61937_MPEG2_AAC_LSF_4096	libavformat/spdif.h	/^    IEC61937_MPEG2_AAC_LSF_4096 = 0x13 | 0x20,   \/\/\/< MPEG-2 AAC ADTS quarter-rate low sampling frequency$/;"	e	enum:IEC61937DataType
IEC61937_MPEG2_EXT	libavformat/spdif.h	/^    IEC61937_MPEG2_EXT          = 0x06,          \/\/\/< MPEG-2 data with extension$/;"	e	enum:IEC61937DataType
IEC61937_MPEG2_LAYER1_LSF	libavformat/spdif.h	/^    IEC61937_MPEG2_LAYER1_LSF   = 0x08,          \/\/\/< MPEG-2, layer-1 low sampling frequency$/;"	e	enum:IEC61937DataType
IEC61937_MPEG2_LAYER2_LSF	libavformat/spdif.h	/^    IEC61937_MPEG2_LAYER2_LSF   = 0x09,          \/\/\/< MPEG-2, layer-2 low sampling frequency$/;"	e	enum:IEC61937DataType
IEC61937_MPEG2_LAYER3_LSF	libavformat/spdif.h	/^    IEC61937_MPEG2_LAYER3_LSF   = 0x0A,          \/\/\/< MPEG-2, layer-3 low sampling frequency$/;"	e	enum:IEC61937DataType
IEC61937_TRUEHD	libavformat/spdif.h	/^    IEC61937_TRUEHD             = 0x16,          \/\/\/< TrueHD data$/;"	e	enum:IEC61937DataType
IEC61937_WMAPRO	libavformat/spdif.h	/^    IEC61937_WMAPRO             = 0x12,          \/\/\/< WMA 9 Professional data$/;"	e	enum:IEC61937DataType
IF0	libavcodec/x86/dsputil_mmx.c	1985;"	d	file:
IF0	libswscale/x86/yuv2rgb_template.c	156;"	d	file:
IF1	libavcodec/x86/dsputil_mmx.c	1984;"	d	file:
IF1	libswscale/x86/yuv2rgb_template.c	157;"	d	file:
IFF_EXTRA_VIDEO_SIZE	libavformat/iff.c	71;"	d	file:
IFLAGS	common.mak	/^IFLAGS   := -I. -I$(SRC_PATH)$/;"	m
IIR	libavcodec/mlp.h	71;"	d
IIRFilterMode	libavcodec/iirfilter.h	/^enum IIRFilterMode{$/;"	g
IIRFilterType	libavcodec/iirfilter.h	/^enum IIRFilterType{$/;"	g
IIRMUL	libavcodec/x86/mlpdsp.c	111;"	d	file:
II_BITRATE	libavcodec/msmpeg4.c	54;"	d	file:
IMCContext	libavcodec/imc.c	/^} IMCContext;$/;"	t	typeref:struct:__anon90	file:
IMC_BLOCK_SIZE	libavcodec/imc.c	48;"	d	file:
IMC_FRAME_ID	libavcodec/imc.c	49;"	d	file:
IMGFMT_411P	libavfilter/libmpcodecs/img_format.h	117;"	d
IMGFMT_420A	libavfilter/libmpcodecs/img_format.h	122;"	d
IMGFMT_420P16	libavfilter/libmpcodecs/img_format.h	133;"	d
IMGFMT_420P16	libavfilter/libmpcodecs/img_format.h	137;"	d
IMGFMT_420P16_BE	libavfilter/libmpcodecs/img_format.h	129;"	d
IMGFMT_420P16_LE	libavfilter/libmpcodecs/img_format.h	128;"	d
IMGFMT_422P	libavfilter/libmpcodecs/img_format.h	116;"	d
IMGFMT_422P16	libavfilter/libmpcodecs/img_format.h	132;"	d
IMGFMT_422P16	libavfilter/libmpcodecs/img_format.h	136;"	d
IMGFMT_422P16_BE	libavfilter/libmpcodecs/img_format.h	127;"	d
IMGFMT_422P16_LE	libavfilter/libmpcodecs/img_format.h	126;"	d
IMGFMT_440P	libavfilter/libmpcodecs/img_format.h	118;"	d
IMGFMT_444P	libavfilter/libmpcodecs/img_format.h	115;"	d
IMGFMT_444P16	libavfilter/libmpcodecs/img_format.h	131;"	d
IMGFMT_444P16	libavfilter/libmpcodecs/img_format.h	135;"	d
IMGFMT_444P16_BE	libavfilter/libmpcodecs/img_format.h	125;"	d
IMGFMT_444P16_LE	libavfilter/libmpcodecs/img_format.h	124;"	d
IMGFMT_ABGR	libavfilter/libmpcodecs/img_format.h	53;"	d
IMGFMT_ABGR	libavfilter/libmpcodecs/img_format.h	71;"	d
IMGFMT_ARGB	libavfilter/libmpcodecs/img_format.h	55;"	d
IMGFMT_ARGB	libavfilter/libmpcodecs/img_format.h	73;"	d
IMGFMT_BG4B	libavfilter/libmpcodecs/img_format.h	92;"	d
IMGFMT_BGR	libavfilter/libmpcodecs/img_format.h	41;"	d
IMGFMT_BGR1	libavfilter/libmpcodecs/img_format.h	42;"	d
IMGFMT_BGR12	libavfilter/libmpcodecs/img_format.h	46;"	d
IMGFMT_BGR12BE	libavfilter/libmpcodecs/img_format.h	64;"	d
IMGFMT_BGR12BE	libavfilter/libmpcodecs/img_format.h	82;"	d
IMGFMT_BGR12LE	libavfilter/libmpcodecs/img_format.h	65;"	d
IMGFMT_BGR12LE	libavfilter/libmpcodecs/img_format.h	83;"	d
IMGFMT_BGR15	libavfilter/libmpcodecs/img_format.h	47;"	d
IMGFMT_BGR15BE	libavfilter/libmpcodecs/img_format.h	66;"	d
IMGFMT_BGR15BE	libavfilter/libmpcodecs/img_format.h	84;"	d
IMGFMT_BGR15LE	libavfilter/libmpcodecs/img_format.h	67;"	d
IMGFMT_BGR15LE	libavfilter/libmpcodecs/img_format.h	85;"	d
IMGFMT_BGR16	libavfilter/libmpcodecs/img_format.h	48;"	d
IMGFMT_BGR16BE	libavfilter/libmpcodecs/img_format.h	68;"	d
IMGFMT_BGR16BE	libavfilter/libmpcodecs/img_format.h	86;"	d
IMGFMT_BGR16LE	libavfilter/libmpcodecs/img_format.h	69;"	d
IMGFMT_BGR16LE	libavfilter/libmpcodecs/img_format.h	87;"	d
IMGFMT_BGR24	libavfilter/libmpcodecs/img_format.h	49;"	d
IMGFMT_BGR32	libavfilter/libmpcodecs/img_format.h	50;"	d
IMGFMT_BGR4	libavfilter/libmpcodecs/img_format.h	43;"	d
IMGFMT_BGR4_CHAR	libavfilter/libmpcodecs/img_format.h	44;"	d
IMGFMT_BGR8	libavfilter/libmpcodecs/img_format.h	45;"	d
IMGFMT_BGRA	libavfilter/libmpcodecs/img_format.h	54;"	d
IMGFMT_BGRA	libavfilter/libmpcodecs/img_format.h	72;"	d
IMGFMT_BGR_DEPTH	libavfilter/libmpcodecs/img_format.h	98;"	d
IMGFMT_BGR_MASK	libavfilter/libmpcodecs/img_format.h	40;"	d
IMGFMT_CLJR	libavfilter/libmpcodecs/img_format.h	164;"	d
IMGFMT_CLPL	libavfilter/libmpcodecs/img_format.h	108;"	d
IMGFMT_HM12	libavfilter/libmpcodecs/img_format.h	119;"	d
IMGFMT_I420	libavfilter/libmpcodecs/img_format.h	106;"	d
IMGFMT_IF09	libavfilter/libmpcodecs/img_format.h	104;"	d
IMGFMT_IS_BGR	libavfilter/libmpcodecs/img_format.h	95;"	d
IMGFMT_IS_HWACCEL	libavfilter/libmpcodecs/img_format.h	196;"	d
IMGFMT_IS_RGB	libavfilter/libmpcodecs/img_format.h	94;"	d
IMGFMT_IS_VDPAU	libavfilter/libmpcodecs/img_format.h	188;"	d
IMGFMT_IS_XVMC	libavfilter/libmpcodecs/img_format.h	180;"	d
IMGFMT_IS_YUVP16	libavfilter/libmpcodecs/img_format.h	143;"	d
IMGFMT_IS_YUVP16_BE	libavfilter/libmpcodecs/img_format.h	141;"	d
IMGFMT_IS_YUVP16_LE	libavfilter/libmpcodecs/img_format.h	140;"	d
IMGFMT_IS_YUVP16_NE	libavfilter/libmpcodecs/img_format.h	142;"	d
IMGFMT_IUYV	libavfilter/libmpcodecs/img_format.h	147;"	d
IMGFMT_IY41	libavfilter/libmpcodecs/img_format.h	148;"	d
IMGFMT_IYU1	libavfilter/libmpcodecs/img_format.h	149;"	d
IMGFMT_IYU2	libavfilter/libmpcodecs/img_format.h	150;"	d
IMGFMT_IYUV	libavfilter/libmpcodecs/img_format.h	107;"	d
IMGFMT_MJPEG	libavfilter/libmpcodecs/img_format.h	170;"	d
IMGFMT_MPEGPES	libavfilter/libmpcodecs/img_format.h	169;"	d
IMGFMT_NV12	libavfilter/libmpcodecs/img_format.h	111;"	d
IMGFMT_NV21	libavfilter/libmpcodecs/img_format.h	112;"	d
IMGFMT_RG4B	libavfilter/libmpcodecs/img_format.h	91;"	d
IMGFMT_RGB	libavfilter/libmpcodecs/img_format.h	27;"	d
IMGFMT_RGB1	libavfilter/libmpcodecs/img_format.h	28;"	d
IMGFMT_RGB12	libavfilter/libmpcodecs/img_format.h	32;"	d
IMGFMT_RGB12BE	libavfilter/libmpcodecs/img_format.h	58;"	d
IMGFMT_RGB12BE	libavfilter/libmpcodecs/img_format.h	76;"	d
IMGFMT_RGB12LE	libavfilter/libmpcodecs/img_format.h	59;"	d
IMGFMT_RGB12LE	libavfilter/libmpcodecs/img_format.h	77;"	d
IMGFMT_RGB15	libavfilter/libmpcodecs/img_format.h	33;"	d
IMGFMT_RGB15BE	libavfilter/libmpcodecs/img_format.h	60;"	d
IMGFMT_RGB15BE	libavfilter/libmpcodecs/img_format.h	78;"	d
IMGFMT_RGB15LE	libavfilter/libmpcodecs/img_format.h	61;"	d
IMGFMT_RGB15LE	libavfilter/libmpcodecs/img_format.h	79;"	d
IMGFMT_RGB16	libavfilter/libmpcodecs/img_format.h	34;"	d
IMGFMT_RGB16BE	libavfilter/libmpcodecs/img_format.h	62;"	d
IMGFMT_RGB16BE	libavfilter/libmpcodecs/img_format.h	80;"	d
IMGFMT_RGB16LE	libavfilter/libmpcodecs/img_format.h	63;"	d
IMGFMT_RGB16LE	libavfilter/libmpcodecs/img_format.h	81;"	d
IMGFMT_RGB24	libavfilter/libmpcodecs/img_format.h	35;"	d
IMGFMT_RGB32	libavfilter/libmpcodecs/img_format.h	36;"	d
IMGFMT_RGB4	libavfilter/libmpcodecs/img_format.h	29;"	d
IMGFMT_RGB48BE	libavfilter/libmpcodecs/img_format.h	38;"	d
IMGFMT_RGB48LE	libavfilter/libmpcodecs/img_format.h	37;"	d
IMGFMT_RGB48NE	libavfilter/libmpcodecs/img_format.h	57;"	d
IMGFMT_RGB48NE	libavfilter/libmpcodecs/img_format.h	75;"	d
IMGFMT_RGB4_CHAR	libavfilter/libmpcodecs/img_format.h	30;"	d
IMGFMT_RGB8	libavfilter/libmpcodecs/img_format.h	31;"	d
IMGFMT_RGBA	libavfilter/libmpcodecs/img_format.h	56;"	d
IMGFMT_RGBA	libavfilter/libmpcodecs/img_format.h	74;"	d
IMGFMT_RGB_DEPTH	libavfilter/libmpcodecs/img_format.h	97;"	d
IMGFMT_RGB_MASK	libavfilter/libmpcodecs/img_format.h	26;"	d
IMGFMT_UYNV	libavfilter/libmpcodecs/img_format.h	152;"	d
IMGFMT_UYVP	libavfilter/libmpcodecs/img_format.h	166;"	d
IMGFMT_UYVY	libavfilter/libmpcodecs/img_format.h	151;"	d
IMGFMT_V422	libavfilter/libmpcodecs/img_format.h	162;"	d
IMGFMT_V655	libavfilter/libmpcodecs/img_format.h	163;"	d
IMGFMT_VDPAU	libavfilter/libmpcodecs/img_format.h	186;"	d
IMGFMT_VDPAU_H264	libavfilter/libmpcodecs/img_format.h	191;"	d
IMGFMT_VDPAU_MASK	libavfilter/libmpcodecs/img_format.h	187;"	d
IMGFMT_VDPAU_MPEG1	libavfilter/libmpcodecs/img_format.h	189;"	d
IMGFMT_VDPAU_MPEG2	libavfilter/libmpcodecs/img_format.h	190;"	d
IMGFMT_VDPAU_MPEG4	libavfilter/libmpcodecs/img_format.h	194;"	d
IMGFMT_VDPAU_VC1	libavfilter/libmpcodecs/img_format.h	193;"	d
IMGFMT_VDPAU_WMV3	libavfilter/libmpcodecs/img_format.h	192;"	d
IMGFMT_XVMC	libavfilter/libmpcodecs/img_format.h	178;"	d
IMGFMT_XVMC_IDCT_MPEG2	libavfilter/libmpcodecs/img_format.h	183;"	d
IMGFMT_XVMC_MASK	libavfilter/libmpcodecs/img_format.h	179;"	d
IMGFMT_XVMC_MOCO_MPEG2	libavfilter/libmpcodecs/img_format.h	182;"	d
IMGFMT_Y211	libavfilter/libmpcodecs/img_format.h	159;"	d
IMGFMT_Y41P	libavfilter/libmpcodecs/img_format.h	158;"	d
IMGFMT_Y41T	libavfilter/libmpcodecs/img_format.h	160;"	d
IMGFMT_Y422	libavfilter/libmpcodecs/img_format.h	154;"	d
IMGFMT_Y42T	libavfilter/libmpcodecs/img_format.h	161;"	d
IMGFMT_Y8	libavfilter/libmpcodecs/img_format.h	110;"	d
IMGFMT_Y800	libavfilter/libmpcodecs/img_format.h	109;"	d
IMGFMT_YUNV	libavfilter/libmpcodecs/img_format.h	156;"	d
IMGFMT_YUVP	libavfilter/libmpcodecs/img_format.h	165;"	d
IMGFMT_YUY2	libavfilter/libmpcodecs/img_format.h	155;"	d
IMGFMT_YV12	libavfilter/libmpcodecs/img_format.h	105;"	d
IMGFMT_YVU9	libavfilter/libmpcodecs/img_format.h	103;"	d
IMGFMT_YVYU	libavfilter/libmpcodecs/img_format.h	157;"	d
IMGFMT_ZRMJPEGIB	libavfilter/libmpcodecs/img_format.h	175;"	d
IMGFMT_ZRMJPEGIT	libavfilter/libmpcodecs/img_format.h	174;"	d
IMGFMT_ZRMJPEGNI	libavfilter/libmpcodecs/img_format.h	173;"	d
IMGFMT_cyuv	libavfilter/libmpcodecs/img_format.h	153;"	d
IMGTYPE_RGB24	libavcodec/lcl.h	30;"	d
IMGTYPE_YUV111	libavcodec/lcl.h	28;"	d
IMGTYPE_YUV211	libavcodec/lcl.h	32;"	d
IMGTYPE_YUV411	libavcodec/lcl.h	31;"	d
IMGTYPE_YUV420	libavcodec/lcl.h	33;"	d
IMGTYPE_YUV422	libavcodec/lcl.h	29;"	d
IMLT	libavcodec/atrac3.c	/^static void IMLT(ATRAC3Context *q, float *pInput, float *pOutput, int odd_band)$/;"	f	file:
IMODE_COLSKIP	libavcodec/vc1.c	/^    IMODE_COLSKIP$/;"	e	enum:Imode	file:
IMODE_COLSKIP	libavcodec/vc1dec.c	/^    IMODE_COLSKIP$/;"	e	enum:Imode	file:
IMODE_DIFF2	libavcodec/vc1.c	/^    IMODE_DIFF2,$/;"	e	enum:Imode	file:
IMODE_DIFF2	libavcodec/vc1dec.c	/^    IMODE_DIFF2,$/;"	e	enum:Imode	file:
IMODE_DIFF6	libavcodec/vc1.c	/^    IMODE_DIFF6,$/;"	e	enum:Imode	file:
IMODE_DIFF6	libavcodec/vc1dec.c	/^    IMODE_DIFF6,$/;"	e	enum:Imode	file:
IMODE_NORM2	libavcodec/vc1.c	/^    IMODE_NORM2,$/;"	e	enum:Imode	file:
IMODE_NORM2	libavcodec/vc1dec.c	/^    IMODE_NORM2,$/;"	e	enum:Imode	file:
IMODE_NORM6	libavcodec/vc1.c	/^    IMODE_NORM6,$/;"	e	enum:Imode	file:
IMODE_NORM6	libavcodec/vc1dec.c	/^    IMODE_NORM6,$/;"	e	enum:Imode	file:
IMODE_RAW	libavcodec/vc1.c	/^    IMODE_RAW,$/;"	e	enum:Imode	file:
IMODE_RAW	libavcodec/vc1dec.c	/^    IMODE_RAW,$/;"	e	enum:Imode	file:
IMODE_ROWSKIP	libavcodec/vc1.c	/^    IMODE_ROWSKIP,$/;"	e	enum:Imode	file:
IMODE_ROWSKIP	libavcodec/vc1dec.c	/^    IMODE_ROWSKIP,$/;"	e	enum:Imode	file:
IMbInfo	libavcodec/h264data.h	/^typedef struct IMbInfo{$/;"	s
IMbInfo	libavcodec/h264data.h	/^} IMbInfo;$/;"	t	typeref:struct:IMbInfo
IN6_IS_ADDR_MULTICAST	libavformat/network.h	191;"	d
INBUF_PADDED	libavutil/lzo.c	32;"	d	file:
INBUF_SIZE	doc/examples/encoding-example.c	41;"	d	file:
INCDIR	config.mak	/^INCDIR=$(DESTDIR)${prefix}\/include$/;"	m
INCINSTDIR	subdir.mak	/^INCINSTDIR := $(INCDIR)\/lib$(NAME)$/;"	m
INC_MED	libavcodec/wavpack.c	215;"	d	file:
INC_SCALING	libswscale/ppc/yuv2rgb_altivec.c	102;"	d	file:
INDENT	cmdutils.c	524;"	d	file:
INDENT	ffmpeg/cmdutils.c	524;"	d	file:
INDEX_STARTCODE	libavformat/nut.h	35;"	d
INDX_TAG	libavformat/wc3movie.c	41;"	d	file:
INET6_ADDRSTRLEN	libavformat/network.h	184;"	d
INFINITY	libavutil/mathematics.h	57;"	d
INFO_STARTCODE	libavformat/nut.h	36;"	d
INITIAL_BUFFER_SIZE	libavformat/applehttp.c	38;"	d	file:
INIT_2D_VLC_RL	libavcodec/mpeg12.c	74;"	d	file:
INIT_AVX	libavcodec/x86/h264_chromamc_10bit.asm	/^INIT_AVX$/;"	l
INIT_AVX	libavcodec/x86/h264_deblock.asm	/^INIT_AVX$/;"	l
INIT_AVX	libavcodec/x86/h264_deblock_10bit.asm	/^INIT_AVX$/;"	l
INIT_AVX	libavcodec/x86/h264_idct_10bit.asm	/^INIT_AVX$/;"	l
INIT_AVX	libavcodec/x86/h264_intrapred_10bit.asm	/^INIT_AVX$/;"	l
INIT_CLIP	libavcodec/high_bit_depth.h	30;"	d
INIT_CLIP	libavcodec/high_bit_depth.h	63;"	d
INIT_IDCT	libavcodec/sparc/simple_idct_vis.c	47;"	d	file:
INIT_MMX	libavcodec/x86/ac3dsp.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/dsputil_yasm.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/dsputilenc_yasm.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/fft_mmx.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/fmtconvert.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/h264_chromamc.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/h264_chromamc_10bit.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/h264_deblock.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/h264_deblock_10bit.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/h264_idct.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/h264_idct_10bit.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/h264_intrapred.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/h264_intrapred_10bit.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/h264_weight.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/vc1dsp_yasm.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/vp3dsp.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/vp56dsp.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/vp8dsp.asm	/^INIT_MMX$/;"	l
INIT_MMX	libavcodec/x86/x86inc.asm	/^INIT_MMX$/;"	l
INIT_VLC_LE	libavcodec/get_bits.h	432;"	d
INIT_VLC_RL	libavcodec/rl.h	59;"	d
INIT_VLC_STATIC	libavcodec/get_bits.h	436;"	d
INIT_VLC_USE_NEW_STATIC	libavcodec/get_bits.h	433;"	d
INIT_XMM	libavcodec/x86/ac3dsp.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/dct32_sse.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/dsputil_yasm.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/dsputilenc_yasm.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/fft_mmx.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/fmtconvert.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/h264_chromamc.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/h264_chromamc_10bit.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/h264_deblock.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/h264_deblock_10bit.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/h264_idct.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/h264_idct_10bit.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/h264_intrapred.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/h264_intrapred_10bit.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/h264_weight.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/vc1dsp_yasm.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/vp3dsp.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/vp56dsp.asm	/^INIT_XMM$/;"	l
INIT_XMM	libavcodec/x86/vp8dsp.asm	/^INIT_XMM$/;"	l
INIT_YMM	libavcodec/x86/dct32_sse.asm	/^INIT_YMM$/;"	l
INIT_YMM	libavcodec/x86/fft_mmx.asm	/^INIT_YMM$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER mmx,    h, 6,  8, 0$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER mmx,    h, 6, 16, 0$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER mmx,    v, 6,  8, 0$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER mmx,    v, 6, 16, 0$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER mmxext, h, 6,  8, 0$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER mmxext, h, 6, 16, 0$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER mmxext, v, 6,  8, 0$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER mmxext, v, 6, 16, 0$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER sse2,   h, 5, 16, 13$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER sse2,   h, 6,  8, 13$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER sse2,   h, 6, 16, 13$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER sse2,   v, 5, 16, 13$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER sse2,   v, 6,  8, 13$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER ssse3,  h, 5, 16, 13$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER ssse3,  h, 6,  8, 13$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER ssse3,  h, 6, 16, 13$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER ssse3,  v, 5, 16, 13$/;"	l
INNER_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^INNER_LOOPFILTER ssse3,  v, 6,  8, 13$/;"	l
INNER_TC_NBHD	libavfilter/libmpcodecs/vf_detc.c	61;"	d	file:
INPLACE_OFFSET	libavcodec/mpegvideo.h	67;"	d
INSTALL	config.mak	/^INSTALL=install$/;"	m
INT16_MAX	libavutil/internal.h	61;"	d
INT16_MIN	libavutil/internal.h	57;"	d
INT32_MAX	libavutil/internal.h	69;"	d
INT32_MIN	libavutil/internal.h	65;"	d
INT64_MAX	libavutil/internal.h	81;"	d
INT64_MIN	libavutil/internal.h	77;"	d
INTENSITY_BT	libavcodec/aac.h	/^    INTENSITY_BT   = 15,    \/\/\/< Scalefactor data are intensity stereo positions.$/;"	e	enum:BandType
INTENSITY_BT2	libavcodec/aac.h	/^    INTENSITY_BT2  = 14,    \/\/\/< Scalefactor data are intensity stereo positions.$/;"	e	enum:BandType
INTERLACED	libavcodec/a64multienc.c	35;"	d	file:
INTERLACE_TYPE_B	libavfilter/vf_select.c	143;"	d	file:
INTERLACE_TYPE_P	libavfilter/vf_select.c	141;"	d	file:
INTERLACE_TYPE_T	libavfilter/vf_select.c	142;"	d	file:
INTERLEAVE_OUTPUT	libavcodec/alsdec.c	1463;"	d	file:
INTERNAL_BUFFER_SIZE	libavcodec/utils.c	119;"	d	file:
INTERPOLATE	libavcodec/atrac3.c	544;"	d	file:
INTERPOLATE	libavfilter/libmpcodecs/vf_2xsai.c	92;"	d	file:
INTER_BLOCK	libavcodec/bink.c	/^    INTER_BLOCK,    \/\/\/< motion block with DCT applied to the difference$/;"	e	enum:BlockTypes	file:
INTER_INTRA_VLC_BITS	libavcodec/msmpeg4.h	34;"	d
INTER_MCBPC_VLC_BITS	libavcodec/h263.h	34;"	d
INTER_SCANTAB_RASTER_END	libavcodec/arm/asm-offsets.h	37;"	d
INTFLOAT	libavcodec/dct32.c	29;"	d	file:
INTFLOAT	libavcodec/dct32.c	34;"	d	file:
INTFLOAT	libavcodec/mpegaudio.h	60;"	d
INTFLOAT	libavcodec/mpegaudio.h	64;"	d
INTFLOAT	libavcodec/mpegaudio.h	68;"	d
INTRA_BLOCK	libavcodec/bink.c	/^    INTRA_BLOCK,    \/\/\/< intra DCT block$/;"	e	enum:BlockTypes	file:
INTRA_C_DC_128	libavcodec/cavs.h	/^  INTRA_C_DC_128,$/;"	e	enum:cavs_intra_chroma
INTRA_C_HORIZ	libavcodec/cavs.h	/^  INTRA_C_HORIZ,$/;"	e	enum:cavs_intra_chroma
INTRA_C_LP	libavcodec/cavs.h	/^  INTRA_C_LP,$/;"	e	enum:cavs_intra_chroma
INTRA_C_LP_LEFT	libavcodec/cavs.h	/^  INTRA_C_LP_LEFT,$/;"	e	enum:cavs_intra_chroma
INTRA_C_LP_TOP	libavcodec/cavs.h	/^  INTRA_C_LP_TOP,$/;"	e	enum:cavs_intra_chroma
INTRA_C_PLANE	libavcodec/cavs.h	/^  INTRA_C_PLANE,$/;"	e	enum:cavs_intra_chroma
INTRA_C_VERT	libavcodec/cavs.h	/^  INTRA_C_VERT,$/;"	e	enum:cavs_intra_chroma
INTRA_L_DC_128	libavcodec/cavs.h	/^  INTRA_L_DC_128$/;"	e	enum:cavs_intra_luma
INTRA_L_DOWN_LEFT	libavcodec/cavs.h	/^  INTRA_L_DOWN_LEFT,$/;"	e	enum:cavs_intra_luma
INTRA_L_DOWN_RIGHT	libavcodec/cavs.h	/^  INTRA_L_DOWN_RIGHT,$/;"	e	enum:cavs_intra_luma
INTRA_L_HORIZ	libavcodec/cavs.h	/^  INTRA_L_HORIZ,$/;"	e	enum:cavs_intra_luma
INTRA_L_LP	libavcodec/cavs.h	/^  INTRA_L_LP,$/;"	e	enum:cavs_intra_luma
INTRA_L_LP_LEFT	libavcodec/cavs.h	/^  INTRA_L_LP_LEFT,$/;"	e	enum:cavs_intra_luma
INTRA_L_LP_TOP	libavcodec/cavs.h	/^  INTRA_L_LP_TOP,$/;"	e	enum:cavs_intra_luma
INTRA_L_VERT	libavcodec/cavs.h	/^  INTRA_L_VERT,$/;"	e	enum:cavs_intra_luma
INTRA_MCBPC_VLC_BITS	libavcodec/h263.h	33;"	d
INT_BIT	libavutil/internal.h	89;"	d
INVALID_VLC	libavcodec/golomb.h	37;"	d
IN_MULTICAST	libavformat/network.h	188;"	d
IN_RANGE	libavcodec/h264.c	1143;"	d	file:
IOBUFFER_INIT_SIZE	ffserver.c	99;"	d	file:
IOBUF_SIZE	libavcodec/pngenc.c	34;"	d	file:
IOFFC	libavcodec/x86/mlpdsp.c	108;"	d	file:
IOFFS	libavcodec/x86/mlpdsp.c	107;"	d	file:
IO_BUFFER_SIZE	libavformat/aviobuf.c	31;"	d	file:
IPAddressACL	ffserver.c	/^typedef struct IPAddressACL {$/;"	s	file:
IPAddressACL	ffserver.c	/^} IPAddressACL;$/;"	t	typeref:struct:IPAddressACL	file:
IPAddressAction	ffserver.c	/^enum IPAddressAction {$/;"	g	file:
IPMVEContext	libavformat/ipmovie.c	/^typedef struct IPMVEContext {$/;"	s	file:
IPMVEContext	libavformat/ipmovie.c	/^} IPMVEContext;$/;"	t	typeref:struct:IPMVEContext	file:
IPV6_ADD_MEMBERSHIP	libavformat/udp.c	46;"	d	file:
IPV6_DROP_MEMBERSHIP	libavformat/udp.c	47;"	d	file:
IP_ALLOW	ffserver.c	/^    IP_ALLOW = 1,$/;"	e	enum:IPAddressAction	file:
IP_DENY	ffserver.c	/^    IP_DENY,$/;"	e	enum:IPAddressAction	file:
IP_shuffle	libavutil/des.c	/^static const uint8_t IP_shuffle[] = {$/;"	v	file:
IR2_CODES	libavcodec/indeo2data.h	27;"	d
IS	libavcodec/mpc.h	/^    int IS, MSS, gapless;$/;"	m	struct:__anon179
ISLEAP	libavformat/cutils.c	24;"	d	file:
ISNd_TAG	libavformat/electronicarts.c	40;"	d	file:
ISNe_TAG	libavformat/electronicarts.c	41;"	d	file:
ISNh_TAG	libavformat/electronicarts.c	38;"	d	file:
ISO_11172_END_CODE	libavformat/mpeg.h	33;"	d
ISO_types	libavformat/mpegts.c	/^static const StreamType ISO_types[] = {$/;"	v	file:
ISQRT2	libavcodec/mpegaudiodec.c	1190;"	d	file:
ISS_SIG	libavformat/iss.c	33;"	d	file:
ISS_SIG_LEN	libavformat/iss.c	34;"	d	file:
IS_16X16	libavcodec/mpegvideo.h	105;"	d
IS_16X8	libavcodec/mpegvideo.h	106;"	d
IS_3IV1	libavcodec/mpeg4video.h	117;"	d
IS_8X16	libavcodec/mpegvideo.h	107;"	d
IS_8X8	libavcodec/mpegvideo.h	108;"	d
IS_8x8DCT	libavcodec/h264.h	96;"	d
IS_ACPRED	libavcodec/mpegvideo.h	113;"	d
IS_CODEBOOK_UNSIGNED	libavcodec/aac.h	84;"	d
IS_DIR	libavcodec/mpegvideo.h	115;"	d
IS_DIRECT	libavcodec/mpegvideo.h	103;"	d
IS_FIL	libavcodec/h261.c	32;"	d	file:
IS_GMC	libavcodec/mpegvideo.h	104;"	d
IS_IDENTIFIER_CHAR	libavutil/eval.c	109;"	d	file:
IS_INTER	libavcodec/mpegvideo.h	99;"	d
IS_INTERLACED	libavcodec/h264.h	80;"	d
IS_INTERLACED	libavcodec/h264.h	81;"	d
IS_INTERLACED	libavcodec/mpegvideo.h	102;"	d
IS_INTRA	libavcodec/mpegvideo.h	98;"	d
IS_INTRA16x16	libavcodec/mpegvideo.h	96;"	d
IS_INTRA4x4	libavcodec/mpegvideo.h	95;"	d
IS_INTRA_PCM	libavcodec/mpegvideo.h	101;"	d
IS_KLV_KEY	libavformat/mxfdec.c	162;"	d	file:
IS_MARKER	libavcodec/dca_parser.c	36;"	d	file:
IS_MARKER	libavcodec/vc1.h	44;"	d
IS_PCM	libavcodec/mpegvideo.h	97;"	d
IS_QUANT	libavcodec/mpegvideo.h	114;"	d
IS_REF0	libavcodec/h264.h	95;"	d
IS_SEPARATE_DC	libavcodec/rv34.h	37;"	d
IS_SKIP	libavcodec/mpegvideo.h	100;"	d
IS_SUB_4X4	libavcodec/mpegvideo.h	112;"	d
IS_SUB_4X8	libavcodec/mpegvideo.h	111;"	d
IS_SUB_8X4	libavcodec/mpegvideo.h	110;"	d
IS_SUB_8X8	libavcodec/mpegvideo.h	109;"	d
IS_ZERO_MV	libavcodec/mpeg12decdata.h	36;"	d
ITER	libpostproc/postprocess_altivec_template.c	151;"	d	file:
ITER	libpostproc/postprocess_altivec_template.c	179;"	d	file:
ITER	libpostproc/postprocess_altivec_template.c	780;"	d	file:
ITER	libpostproc/postprocess_altivec_template.c	824;"	d	file:
ITOC	libavfilter/libmpcodecs/vf_filmdint.c	1137;"	d	file:
IVI5DecContext	libavcodec/indeo5.c	/^} IVI5DecContext;$/;"	t	typeref:struct:__anon203	file:
IVI5_IS_PROTECTED	libavcodec/indeo5.c	51;"	d	file:
IVI5_PIC_SIZE_ESC	libavcodec/indeo5.c	49;"	d	file:
IVIBandDesc	libavcodec/ivi_common.h	/^} IVIBandDesc;$/;"	t	typeref:struct:__anon107
IVIHuffDesc	libavcodec/ivi_common.h	/^} IVIHuffDesc;$/;"	t	typeref:struct:__anon101
IVIHuffTab	libavcodec/ivi_common.h	/^} IVIHuffTab;$/;"	t	typeref:struct:__anon102
IVIMbInfo	libavcodec/ivi_common.h	/^} IVIMbInfo;$/;"	t	typeref:struct:__anon105
IVIPicConfig	libavcodec/ivi_common.h	/^} IVIPicConfig;$/;"	t	typeref:struct:__anon109
IVIPlaneDesc	libavcodec/ivi_common.h	/^} IVIPlaneDesc;$/;"	t	typeref:struct:__anon108
IVITile	libavcodec/ivi_common.h	/^} IVITile;$/;"	t	typeref:struct:__anon106
IVI_BLK_HUFF	libavcodec/ivi_common.h	/^    IVI_BLK_HUFF  = 1       \/\/\/ Huffman table is used for coding blocks$/;"	e	enum:__anon103
IVI_INV_SLANT4	libavcodec/ivi_dsp.c	222;"	d	file:
IVI_INV_SLANT8	libavcodec/ivi_dsp.c	200;"	d	file:
IVI_IREFLECT	libavcodec/ivi_dsp.c	188;"	d	file:
IVI_MB_HUFF	libavcodec/ivi_common.h	/^    IVI_MB_HUFF   = 0,      \/\/\/ Huffman table is used for coding macroblocks$/;"	e	enum:__anon103
IVI_MBs_PER_TILE	libavcodec/ivi_common.h	208;"	d
IVI_MC_TEMPLATE	libavcodec/ivi_dsp.c	426;"	d	file:
IVI_NUM_TILES	libavcodec/ivi_common.h	205;"	d
IVI_SLANT_BFLY	libavcodec/ivi_dsp.c	182;"	d	file:
IVI_SLANT_PART4	libavcodec/ivi_dsp.c	194;"	d	file:
IVI_TOSIGNED	libavcodec/ivi_common.h	212;"	d
IVI_VLC_BITS	libavcodec/ivi_common.h	36;"	d
I_8X8	libavcodec/cavs.h	/^  I_8X8 = 0,$/;"	e	enum:cavs_mb
I_F_Q	libavcodec/qcelpdec.c	/^    I_F_Q = -1,    \/*!< insufficient frame quality *\/$/;"	e	enum:__anon224	file:
IdStrMap	libavformat/img2.c	/^} IdStrMap;$/;"	t	typeref:struct:__anon390	file:
IdcinContext	libavcodec/idcinvideo.c	/^typedef struct IdcinContext {$/;"	s	file:
IdcinContext	libavcodec/idcinvideo.c	/^} IdcinContext;$/;"	t	typeref:struct:IdcinContext	file:
IdcinDemuxContext	libavformat/idcin.c	/^typedef struct IdcinDemuxContext {$/;"	s	file:
IdcinDemuxContext	libavformat/idcin.c	/^} IdcinDemuxContext;$/;"	t	typeref:struct:IdcinDemuxContext	file:
IdctAdjustBeforeShift	libavcodec/vp3dsp.c	30;"	d	file:
Identification	libavformat/mxf.h	/^    Identification,$/;"	e	enum:MXFMetadataSetType
IffContext	libavcodec/iff.c	/^} IffContext;$/;"	t	typeref:struct:__anon114	file:
IffDemuxContext	libavformat/iff.c	/^} IffDemuxContext;$/;"	t	typeref:struct:__anon395	file:
ImgUtils	libavutil/imgutils.c	/^typedef struct ImgUtils {$/;"	s	file:
ImgUtils	libavutil/imgutils.c	/^} ImgUtils;$/;"	t	typeref:struct:ImgUtils	file:
Imode	libavcodec/vc1.c	/^enum Imode {$/;"	g	file:
Imode	libavcodec/vc1dec.c	/^enum Imode {$/;"	g	file:
Indeo3DecodeContext	libavcodec/indeo3.c	/^typedef struct Indeo3DecodeContext {$/;"	s	file:
Indeo3DecodeContext	libavcodec/indeo3.c	/^} Indeo3DecodeContext;$/;"	t	typeref:struct:Indeo3DecodeContext	file:
IndexTableSegment	libavformat/mxf.h	/^    IndexTableSegment,$/;"	e	enum:MXFMetadataSetType
IndividualChannelStream	libavcodec/aac.h	/^} IndividualChannelStream;$/;"	t	typeref:struct:__anon239
Init_2xSaI	libavfilter/libmpcodecs/vf_2xsai.c	/^static int Init_2xSaI(int d)$/;"	f	file:
InterleavePacket	libavformat/rtpdec_qcelp.c	/^} InterleavePacket;$/;"	t	typeref:struct:__anon386	file:
InternalBuffer	libavcodec/utils.c	/^typedef struct InternalBuffer{$/;"	s	file:
InternalBuffer	libavcodec/utils.c	/^}InternalBuffer;$/;"	t	typeref:struct:InternalBuffer	file:
IntraX8Context	libavcodec/intrax8.h	/^} IntraX8Context;$/;"	t	typeref:struct:__anon134
InvTransformPtr	libavcodec/ivi_common.h	/^typedef void (InvTransformPtr)(const int32_t *in, int16_t *out, uint32_t pitch, const uint8_t *flags);$/;"	t
IpvideoContext	libavcodec/interplayvideo.c	/^typedef struct IpvideoContext {$/;"	s	file:
IpvideoContext	libavcodec/interplayvideo.c	/^} IpvideoContext;$/;"	t	typeref:struct:IpvideoContext	file:
Ir2Context	libavcodec/indeo2.c	/^typedef struct Ir2Context{$/;"	s	file:
Ir2Context	libavcodec/indeo2.c	/^} Ir2Context;$/;"	t	typeref:struct:Ir2Context	file:
IsRGB	libavfilter/libmpcodecs/vf_kerndeint.c	/^static inline int IsRGB(mp_image_t *mpi)$/;"	f	file:
IsYUY2	libavfilter/libmpcodecs/vf_kerndeint.c	/^static inline int IsYUY2(mp_image_t *mpi)$/;"	f	file:
IssDemuxContext	libavformat/iss.c	/^} IssDemuxContext;$/;"	t	typeref:struct:__anon410	file:
J2K_CBLK_BYPASS	libavcodec/j2k.h	91;"	d
J2K_CBLK_PREDTERM	libavcodec/j2k.h	95;"	d
J2K_CBLK_RESET	libavcodec/j2k.h	92;"	d
J2K_CBLK_SEGSYM	libavcodec/j2k.h	96;"	d
J2K_CBLK_TERMALL	libavcodec/j2k.h	93;"	d
J2K_CBLK_VSC	libavcodec/j2k.h	94;"	d
J2K_COC	libavcodec/j2k.h	/^    J2K_COC,          \/\/\/< coding style component$/;"	e	enum:J2kMarkers
J2K_COD	libavcodec/j2k.h	/^    J2K_COD,          \/\/\/< coding style default$/;"	e	enum:J2kMarkers
J2K_COM	libavcodec/j2k.h	/^    J2K_COM,          \/\/\/< comment$/;"	e	enum:J2kMarkers
J2K_CRG	libavcodec/j2k.h	/^    J2K_CRG = 0xff63, \/\/\/< component registration$/;"	e	enum:J2kMarkers
J2K_CSTY_EPH	libavcodec/j2k.h	101;"	d
J2K_CSTY_PREC	libavcodec/j2k.h	99;"	d
J2K_CSTY_SOP	libavcodec/j2k.h	100;"	d
J2K_EOC	libavcodec/j2k.h	/^    J2K_EOC = 0xffd9, \/\/\/< end of codestream$/;"	e	enum:J2kMarkers
J2K_EPH	libavcodec/j2k.h	/^    J2K_EPH,          \/\/\/< end of packet header$/;"	e	enum:J2kMarkers
J2K_MAX_CBLKH	libavcodec/j2k.h	64;"	d
J2K_MAX_CBLKW	libavcodec/j2k.h	63;"	d
J2K_PLM	libavcodec/j2k.h	/^    J2K_PLM = 0xff57, \/\/\/< tile-part lengths$/;"	e	enum:J2kMarkers
J2K_PLT	libavcodec/j2k.h	/^    J2K_PLT,          \/\/\/< packet length, main header$/;"	e	enum:J2kMarkers
J2K_POC	libavcodec/j2k.h	/^    J2K_POC,          \/\/\/< progression order change$/;"	e	enum:J2kMarkers
J2K_PPM	libavcodec/j2k.h	/^    J2K_PPM,          \/\/\/< packet length, tile-part header$/;"	e	enum:J2kMarkers
J2K_PPT	libavcodec/j2k.h	/^    J2K_PPT,          \/\/\/< packed packet headers, main header$/;"	e	enum:J2kMarkers
J2K_QCC	libavcodec/j2k.h	/^    J2K_QCC,          \/\/\/< quantization component$/;"	e	enum:J2kMarkers
J2K_QCD	libavcodec/j2k.h	/^    J2K_QCD = 0xff5c, \/\/\/< quantization default$/;"	e	enum:J2kMarkers
J2K_QSTY_NONE	libavcodec/j2k.h	/^    J2K_QSTY_NONE, \/\/\/< no quantization$/;"	e	enum:J2kQuantsty
J2K_QSTY_SE	libavcodec/j2k.h	/^    J2K_QSTY_SE    \/\/\/< scalar expoounded$/;"	e	enum:J2kQuantsty
J2K_QSTY_SI	libavcodec/j2k.h	/^    J2K_QSTY_SI,   \/\/\/< scalar derived$/;"	e	enum:J2kQuantsty
J2K_RGN	libavcodec/j2k.h	/^    J2K_RGN,          \/\/\/< region of interest$/;"	e	enum:J2kMarkers
J2K_SIZ	libavcodec/j2k.h	/^    J2K_SIZ = 0xff51, \/\/\/< image and tile size$/;"	e	enum:J2kMarkers
J2K_SOC	libavcodec/j2k.h	/^    J2K_SOC = 0xff4f, \/\/\/< start of codestream$/;"	e	enum:J2kMarkers
J2K_SOD	libavcodec/j2k.h	/^    J2K_SOD,          \/\/\/< start of data$/;"	e	enum:J2kMarkers
J2K_SOP	libavcodec/j2k.h	/^    J2K_SOP,          \/\/\/< start of packet$/;"	e	enum:J2kMarkers
J2K_SOT	libavcodec/j2k.h	/^    J2K_SOT = 0xff90, \/\/\/< start of tile-part$/;"	e	enum:J2kMarkers
J2K_T1_REF	libavcodec/j2k.h	86;"	d
J2K_T1_SGN	libavcodec/j2k.h	88;"	d
J2K_T1_SGN_E	libavcodec/j2k.h	82;"	d
J2K_T1_SGN_N	libavcodec/j2k.h	79;"	d
J2K_T1_SGN_S	libavcodec/j2k.h	80;"	d
J2K_T1_SGN_W	libavcodec/j2k.h	81;"	d
J2K_T1_SIG	libavcodec/j2k.h	85;"	d
J2K_T1_SIG_E	libavcodec/j2k.h	69;"	d
J2K_T1_SIG_N	libavcodec/j2k.h	68;"	d
J2K_T1_SIG_NB	libavcodec/j2k.h	76;"	d
J2K_T1_SIG_NE	libavcodec/j2k.h	72;"	d
J2K_T1_SIG_NW	libavcodec/j2k.h	73;"	d
J2K_T1_SIG_S	libavcodec/j2k.h	71;"	d
J2K_T1_SIG_SE	libavcodec/j2k.h	74;"	d
J2K_T1_SIG_SW	libavcodec/j2k.h	75;"	d
J2K_T1_SIG_W	libavcodec/j2k.h	70;"	d
J2K_T1_VIS	libavcodec/j2k.h	84;"	d
J2K_TLM	libavcodec/j2k.h	/^    J2K_TLM = 0xff55, \/\/\/< packed packet headers, tile-part header$/;"	e	enum:J2kMarkers
J2kBand	libavcodec/j2k.h	/^} J2kBand; \/\/\/< subband$/;"	t	typeref:struct:__anon215
J2kCblk	libavcodec/j2k.h	/^} J2kCblk; \/\/\/< code block$/;"	t	typeref:struct:__anon213
J2kCodingStyle	libavcodec/j2k.h	/^} J2kCodingStyle;$/;"	t	typeref:struct:__anon210
J2kComponent	libavcodec/j2k.h	/^} J2kComponent;$/;"	t	typeref:struct:__anon217
J2kDecoderContext	libavcodec/j2kdec.c	/^} J2kDecoderContext;$/;"	t	typeref:struct:__anon98	file:
J2kEncoderContext	libavcodec/j2kenc.c	/^} J2kEncoderContext;$/;"	t	typeref:struct:__anon63	file:
J2kMarkers	libavcodec/j2k.h	/^enum J2kMarkers{$/;"	g
J2kPass	libavcodec/j2k.h	/^} J2kPass;$/;"	t	typeref:struct:__anon212
J2kPrec	libavcodec/j2k.h	/^} J2kPrec; \/\/\/< precinct$/;"	t	typeref:struct:__anon214
J2kQuantStyle	libavcodec/j2k.h	/^} J2kQuantStyle;$/;"	t	typeref:struct:__anon211
J2kQuantsty	libavcodec/j2k.h	/^enum J2kQuantsty{ \/\/\/< quantization style$/;"	g
J2kResLevel	libavcodec/j2k.h	/^} J2kResLevel; \/\/\/< resolution level$/;"	t	typeref:struct:__anon216
J2kT1Context	libavcodec/j2k.h	/^} J2kT1Context;$/;"	t	typeref:struct:__anon209
J2kTgtNode	libavcodec/j2k.h	/^typedef struct J2kTgtNode {$/;"	s
J2kTgtNode	libavcodec/j2k.h	/^} J2kTgtNode;$/;"	t	typeref:struct:J2kTgtNode
J2kTile	libavcodec/j2kdec.c	/^} J2kTile;$/;"	t	typeref:struct:__anon97	file:
J2kTile	libavcodec/j2kenc.c	/^} J2kTile;$/;"	t	typeref:struct:__anon62	file:
JLSState	libavcodec/jpegls.h	/^typedef struct JLSState{$/;"	s
JLSState	libavcodec/jpegls.h	/^}JLSState;$/;"	t	typeref:struct:JLSState
JNZ	libavcodec/x86/idct_sse2_xvid.c	154;"	d	file:
JOIN	libavcodec/arm/asm.S	/^#define JOIN(a, b) GLUE(a, b)$/;"	d
JOIN	libavcodec/ppc/asm.S	/^#define JOIN(a, b) GLUE(a, b)$/;"	d
JOINT_STEREO	libavcodec/atrac3.c	48;"	d	file:
JOINT_STEREO	libavcodec/cook.c	64;"	d	file:
JP2_CODESTREAM	libavcodec/j2kdec.c	35;"	d	file:
JP2_SIG_TYPE	libavcodec/j2kdec.c	33;"	d	file:
JP2_SIG_TYPE	libavcodec/libopenjpeg.c	33;"	d	file:
JP2_SIG_VALUE	libavcodec/j2kdec.c	34;"	d	file:
JP2_SIG_VALUE	libavcodec/libopenjpeg.c	34;"	d	file:
JPEG_MARKER	libavcodec/mjpeg.h	/^} JPEG_MARKER;$/;"	t	typeref:enum:__anon218
JPG	libavcodec/mjpeg.h	/^    JPG   = 0xc8,       \/* reserved for JPEG extension *\/$/;"	e	enum:__anon218
JPG0	libavcodec/mjpeg.h	/^    JPG0  = 0xf0,$/;"	e	enum:__anon218
JPG1	libavcodec/mjpeg.h	/^    JPG1  = 0xf1,$/;"	e	enum:__anon218
JPG10	libavcodec/mjpeg.h	/^    JPG10 = 0xfa,$/;"	e	enum:__anon218
JPG11	libavcodec/mjpeg.h	/^    JPG11 = 0xfb,$/;"	e	enum:__anon218
JPG12	libavcodec/mjpeg.h	/^    JPG12 = 0xfc,$/;"	e	enum:__anon218
JPG13	libavcodec/mjpeg.h	/^    JPG13 = 0xfd,$/;"	e	enum:__anon218
JPG2	libavcodec/mjpeg.h	/^    JPG2  = 0xf2,$/;"	e	enum:__anon218
JPG3	libavcodec/mjpeg.h	/^    JPG3  = 0xf3,$/;"	e	enum:__anon218
JPG4	libavcodec/mjpeg.h	/^    JPG4  = 0xf4,$/;"	e	enum:__anon218
JPG5	libavcodec/mjpeg.h	/^    JPG5  = 0xf5,$/;"	e	enum:__anon218
JPG6	libavcodec/mjpeg.h	/^    JPG6  = 0xf6,$/;"	e	enum:__anon218
JPG9	libavcodec/mjpeg.h	/^    JPG9  = 0xf9,$/;"	e	enum:__anon218
JUMPALIGN	libavcodec/x86/dsputil_mmx.c	85;"	d	file:
JUNK_ATOM	tools/qt-faststart.c	60;"	d	file:
JVDemuxContext	libavformat/jvdec.c	/^} JVDemuxContext;$/;"	t	typeref:struct:__anon426	file:
JVFrame	libavformat/jvdec.c	/^} JVFrame;$/;"	t	typeref:struct:__anon425	file:
JV_AUDIO	libavformat/jvdec.c	/^        JV_AUDIO = 0,$/;"	e	enum:__anon426::__anon427	file:
JV_PADDING	libavformat/jvdec.c	/^        JV_PADDING$/;"	e	enum:__anon426::__anon427	file:
JV_PREAMBLE_SIZE	libavformat/jvdec.c	31;"	d	file:
JV_VIDEO	libavformat/jvdec.c	/^        JV_VIDEO,$/;"	e	enum:__anon426::__anon427	file:
JZ	libavcodec/x86/idct_sse2_xvid.c	150;"	d	file:
JackData	libavdevice/jack_audio.c	/^} JackData;$/;"	t	typeref:struct:__anon315	file:
JpeglsContext	libavcodec/jpegls.h	/^typedef struct JpeglsContext{$/;"	s
JpeglsContext	libavcodec/jpegls.h	/^}JpeglsContext;$/;"	t	typeref:struct:JpeglsContext
JvContext	libavcodec/jvdec.c	/^typedef struct JvContext {$/;"	s	file:
JvContext	libavcodec/jvdec.c	/^} JvContext;$/;"	t	typeref:struct:JvContext	file:
K256	libavutil/sha.c	/^static const uint32_t K256[64] = {$/;"	v	file:
KAG_SIZE	libavformat/mxfenc.c	50;"	d	file:
KEYFRAMES_BYTEOFFSET_TAG	libavformat/flv.h	47;"	d
KEYFRAMES_TAG	libavformat/flv.h	45;"	d
KEYFRAMES_TIMESTAMP_TAG	libavformat/flv.h	46;"	d
KEY_AES_128	libavformat/applehttp.c	/^    KEY_AES_128,$/;"	e	enum:KeyType	file:
KEY_NONE	libavformat/applehttp.c	/^    KEY_NONE,$/;"	e	enum:KeyType	file:
KLVPacket	libavformat/mxf.h	/^} KLVPacket;$/;"	t	typeref:struct:__anon325
KMVC_KEYFRAME	libavcodec/kmvc.c	33;"	d	file:
KMVC_METHOD	libavcodec/kmvc.c	35;"	d	file:
KMVC_PALETTE	libavcodec/kmvc.c	34;"	d	file:
KeyType	libavformat/applehttp.c	/^enum KeyType {$/;"	g	file:
KgvContext	libavcodec/kgv1dec.c	/^} KgvContext;$/;"	t	typeref:struct:__anon115	file:
KmvcContext	libavcodec/kmvc.c	/^typedef struct KmvcContext {$/;"	s	file:
KmvcContext	libavcodec/kmvc.c	/^} KmvcContext;$/;"	t	typeref:struct:KmvcContext	file:
L	libavcodec/ppc/asm.S	/^#define L(s) JOIN(., s)$/;"	d
L	libavcodec/ppc/asm.S	/^#define L(s) s$/;"	d
L1CODE	libswscale/bfin/swscale_bfin.c	35;"	d	file:
L1CODE	libswscale/bfin/swscale_bfin.c	37;"	d	file:
L1CODE	libswscale/bfin/yuv2rgb_bfin.c	37;"	d	file:
L1CODE	libswscale/bfin/yuv2rgb_bfin.c	39;"	d	file:
L3	libavcodec/bfin/fdct_bfin.S	/^    L3 = 16;                        \/\/ L3 is set to 16 to make the coefficient$/;"	d
L3	libavcodec/bfin/idct_bfin.S	/^    L3 = 0;$/;"	d
L3	libavcodec/bfin/idct_bfin.S	/^    L3 = 20;                \/\/ L3 is used for making the coefficient array$/;"	d
L3	libavcodec/bfin/vp3_idct_bfin.S	/^    L3 = 0;$/;"	d
L3	libavcodec/bfin/vp3_idct_bfin.S	/^    L3 = 20;                \/\/ L3 is used for making the coefficient array$/;"	d
LABEL_MANGLE	libavutil/internal.h	97;"	d
LAMBDA_FRAC_BITS	libavcodec/dnxhdenc.c	43;"	d	file:
LAMBDA_SCALE	libavcodec/j2kenc.c	37;"	d	file:
LAST_SKIP_BITS	libavcodec/get_bits.h	154;"	d
LAST_SKIP_BITS	libavcodec/get_bits.h	225;"	d
LAST_SKIP_CACHE	libavcodec/get_bits.h	155;"	d
LAST_SKIP_CACHE	libavcodec/get_bits.h	226;"	d
LATMContext	libavcodec/aacdec.c	/^struct LATMContext {$/;"	s	file:
LATMParseContext	libavcodec/latm_parser.c	/^typedef struct LATMParseContext{$/;"	s	file:
LATMParseContext	libavcodec/latm_parser.c	/^} LATMParseContext;$/;"	t	typeref:struct:LATMParseContext	file:
LATM_HEADER	libavcodec/latm_parser.c	29;"	d	file:
LATM_MASK	libavcodec/latm_parser.c	30;"	d	file:
LATM_SIZE_MASK	libavcodec/latm_parser.c	31;"	d	file:
LATTICE_FACTOR	libavcodec/sonic.c	71;"	d	file:
LATTICE_SHIFT	libavcodec/sonic.c	69;"	d	file:
LAVFI_TESTS	config.mak	/^LAVFI_TESTS=crop crop_scale crop_scale_vflip crop_vflip null pixdesc_le pixfmts_copy_le pixfmts_crop_le pixfmts_hflip_le pixfmts_null_le pixfmts_pad_le pixfmts_scale_le pixfmts_vflip_le scale200 scale500 vflip vflip_crop vflip_vflip $/;"	m
LAVF_TESTS	config.mak	/^LAVF_TESTS=aiff alaw asf au avi bmp dv_fmt ffm flv_fmt gif gxf jpg mkv mmf mov mpg mulaw mxf mxf_d10 nut ogg pbmpipe pcx pgm pgmpipe pixfmt ppm ppmpipe rm sgi swf tga tiff ts voc voc_s16 wav yuv4mpeg $/;"	m
LD	config.mak	/^LD=\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/bin\/arm-linux-androideabi-gcc$/;"	m
LDFLAGS	config.mak	/^LDFLAGS= -Wl,-T,\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/arm-linux-androideabi\/lib\/ldscripts\/armelf_linux_eabi.x -Wl,-rpath-link=\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/ndk\/android-ndk-r6\/platforms\/android-9\/arch-arm\/usr\/lib -L\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/ndk\/android-ndk-r6\/platforms\/android-9\/arch-arm\/usr\/lib -nostdlib \/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/lib\/gcc\/arm-linux-androideabi\/4.4.3\/crtbegin.o \/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/lib\/gcc\/arm-linux-androideabi\/4.4.3\/crtend.o -lc -lm -ldl -Wl,--as-needed -Wl,--warn-common -Wl,-rpath-link,libpostproc -Wl,-rpath-link,libswscale -Wl,-rpath-link,libavfilter -Wl,-rpath-link,libavdevice -Wl,-rpath-link,libavformat -Wl,-rpath-link,libavcodec -Wl,-rpath-link,libavutil$/;"	m
LD_W0	libavcodec/ppc/fdct_altivec.c	66;"	d	file:
LD_W1	libavcodec/ppc/fdct_altivec.c	67;"	d	file:
LD_W2	libavcodec/ppc/fdct_altivec.c	68;"	d	file:
LD_W3	libavcodec/ppc/fdct_altivec.c	69;"	d	file:
LD_W4	libavcodec/ppc/fdct_altivec.c	70;"	d	file:
LD_W5	libavcodec/ppc/fdct_altivec.c	71;"	d	file:
LD_W6	libavcodec/ppc/fdct_altivec.c	72;"	d	file:
LD_W7	libavcodec/ppc/fdct_altivec.c	73;"	d	file:
LD_W8	libavcodec/ppc/fdct_altivec.c	74;"	d	file:
LD_W9	libavcodec/ppc/fdct_altivec.c	75;"	d	file:
LD_WA	libavcodec/ppc/fdct_altivec.c	76;"	d	file:
LD_WB	libavcodec/ppc/fdct_altivec.c	77;"	d	file:
LE$16E	libavcodec/bfin/pixels_bfin.S	/^LE$16E: DISALGNEXCPT                       || R2 = [I1++] || [I3++M2] = R5;$/;"	l
LE$16O	libavcodec/bfin/pixels_bfin.S	/^LE$16O: DISALGNEXCPT                       || R2 = [I1++] || [I3++M2] = R5;$/;"	l
LE$8E	libavcodec/bfin/pixels_bfin.S	/^LE$8E:  DISALGNEXCPT                       || R2 = [I1++]   || [I3++M2] = R5;$/;"	l
LE$8ET	libavcodec/bfin/pixels_bfin.S	/^LE$8ET: DISALGNEXCPT                       || R2 = [I1++]   || [I3++M2] = R5;$/;"	l
LE$8O	libavcodec/bfin/pixels_bfin.S	/^LE$8O:  DISALGNEXCPT                       || R2  =[I1++]   || [I3++M2] = R5;$/;"	l
LE$8OT	libavcodec/bfin/pixels_bfin.S	/^LE$8OT: DISALGNEXCPT                       || R2  =[I1++]   || [I3++M2] = R5;$/;"	l
LE$PS	libavcodec/bfin/pixels_bfin.S	/^LE$PS:  r6=r6+|+r4;$/;"	l
LEAPS_COUNT	libavformat/cutils.c	25;"	d	file:
LEFT	libavcodec/cdgraphics.c	170;"	d	file:
LEFT	libavcodec/huffyuv.c	/^    LEFT= 0,$/;"	e	enum:Predictor	file:
LEFT	libavformat/iff.c	59;"	d	file:
LEFT_DC_PRED	libavcodec/h264pred.h	49;"	d
LEFT_DC_PRED8x8	libavcodec/h264pred.h	74;"	d
LEFT_EXTEND	libavcodec/x86/dsputil_yasm.asm	/^LEFT_EXTEND       %1$/;"	l
LEFT_SIDE	libavcodec/sonic.c	43;"	d	file:
LEN	libavutil/adler32.c	57;"	d	file:
LEN	libavutil/pca.c	174;"	d	file:
LEN_PRETTY_GUID	libavformat/wtvdec.c	41;"	d	file:
LEToUV	libswscale/x86/swscale_template.c	/^static void RENAME(LEToUV)(uint8_t *dstU, uint8_t *dstV,$/;"	f	file:
LEToUV_c	libswscale/swscale_template.c	/^static inline void LEToUV_c(uint8_t *dstU, uint8_t *dstV, const uint8_t *src1,$/;"	f	file:
LEVEL_DECAY	libavcodec/wavpack.c	210;"	d	file:
LEVEL_FIX	libpostproc/postprocess_internal.h	36;"	d
LEVEL_MINUS_1POINT5DB	libavcodec/ac3.h	57;"	d
LEVEL_MINUS_3DB	libavcodec/ac3.h	58;"	d
LEVEL_MINUS_4POINT5DB	libavcodec/ac3.h	59;"	d
LEVEL_MINUS_6DB	libavcodec/ac3.h	60;"	d
LEVEL_MINUS_9DB	libavcodec/ac3.h	61;"	d
LEVEL_ONE	libavcodec/ac3.h	63;"	d
LEVEL_PLUS_1POINT5DB	libavcodec/ac3.h	56;"	d
LEVEL_PLUS_3DB	libavcodec/ac3.h	55;"	d
LEVEL_TAB_BITS	libavcodec/h264_cavlc.c	219;"	d	file:
LEVEL_ZERO	libavcodec/ac3.h	62;"	d
LE_CENTRIC_MUL	libavcodec/4xm.c	266;"	d	file:
LE_CENTRIC_MUL	libavcodec/4xm.c	275;"	d	file:
LFE_BITS	libavcodec/dcaenc.c	45;"	d	file:
LFE_INTERPOLATION	libavcodec/dcaenc.c	46;"	d	file:
LFE_MISSING	libavcodec/dcaenc.c	48;"	d	file:
LFE_PRESENT	libavcodec/dcaenc.c	47;"	d	file:
LFG_MAX	libavformat/timefilter.c	80;"	d	file:
LF_FUNC	libavcodec/x86/h264dsp_mmx.c	244;"	d	file:
LF_FUNCS	libavcodec/x86/h264dsp_mmx.c	251;"	d	file:
LF_IFUNC	libavcodec/x86/h264dsp_mmx.c	247;"	d	file:
LIBAVCODEC_BUILD	libavcodec/version.h	33;"	d
LIBAVCODEC_IDENT	libavcodec/version.h	35;"	d
LIBAVCODEC_VERSION	libavcodec/version.h	30;"	d
LIBAVCODEC_VERSION_INT	libavcodec/version.h	27;"	d
LIBAVCODEC_VERSION_MAJOR	libavcodec/version.h	23;"	d
LIBAVCODEC_VERSION_MICRO	libavcodec/version.h	25;"	d
LIBAVCODEC_VERSION_MINOR	libavcodec/version.h	24;"	d
LIBAVDEVICE_BUILD	libavdevice/avdevice.h	35;"	d
LIBAVDEVICE_VERSION	libavdevice/avdevice.h	32;"	d
LIBAVDEVICE_VERSION_INT	libavdevice/avdevice.h	29;"	d
LIBAVDEVICE_VERSION_MAJOR	libavdevice/avdevice.h	25;"	d
LIBAVDEVICE_VERSION_MICRO	libavdevice/avdevice.h	27;"	d
LIBAVDEVICE_VERSION_MINOR	libavdevice/avdevice.h	26;"	d
LIBAVFILTER_BUILD	libavfilter/avfilter.h	38;"	d
LIBAVFILTER_VERSION	libavfilter/avfilter.h	35;"	d
LIBAVFILTER_VERSION_INT	libavfilter/avfilter.h	32;"	d
LIBAVFILTER_VERSION_MAJOR	libavfilter/avfilter.h	28;"	d
LIBAVFILTER_VERSION_MICRO	libavfilter/avfilter.h	30;"	d
LIBAVFILTER_VERSION_MINOR	libavfilter/avfilter.h	29;"	d
LIBAVFORMAT_BUILD	libavformat/version.h	36;"	d
LIBAVFORMAT_IDENT	libavformat/version.h	38;"	d
LIBAVFORMAT_VERSION	libavformat/version.h	33;"	d
LIBAVFORMAT_VERSION_INT	libavformat/version.h	30;"	d
LIBAVFORMAT_VERSION_MAJOR	libavformat/version.h	26;"	d
LIBAVFORMAT_VERSION_MICRO	libavformat/version.h	28;"	d
LIBAVFORMAT_VERSION_MINOR	libavformat/version.h	27;"	d
LIBAVUTIL_BUILD	libavutil/avutil.h	52;"	d
LIBAVUTIL_IDENT	libavutil/avutil.h	54;"	d
LIBAVUTIL_VERSION	libavutil/avutil.h	49;"	d
LIBAVUTIL_VERSION_INT	libavutil/avutil.h	46;"	d
LIBAVUTIL_VERSION_MAJOR	libavutil/avutil.h	42;"	d
LIBAVUTIL_VERSION_MICRO	libavutil/avutil.h	44;"	d
LIBAVUTIL_VERSION_MINOR	libavutil/avutil.h	43;"	d
LIBDIR	config.mak	/^LIBDIR=$(DESTDIR)${prefix}\/lib$/;"	m
LIBMAJOR	subdir.mak	/^LIBMAJOR   := $(lib$(NAME)_VERSION_MAJOR)$/;"	m
LIBNAME	config.mak	/^LIBNAME=$(LIBPREF)$(FULLNAME)$(LIBSUF)$/;"	m
LIBPOSTPROC_BUILD	libpostproc/postprocess.h	42;"	d
LIBPOSTPROC_IDENT	libpostproc/postprocess.h	44;"	d
LIBPOSTPROC_VERSION	libpostproc/postprocess.h	39;"	d
LIBPOSTPROC_VERSION_INT	libpostproc/postprocess.h	36;"	d
LIBPOSTPROC_VERSION_MAJOR	libpostproc/postprocess.h	32;"	d
LIBPOSTPROC_VERSION_MICRO	libpostproc/postprocess.h	34;"	d
LIBPOSTPROC_VERSION_MINOR	libpostproc/postprocess.h	33;"	d
LIBPREF	config.mak	/^LIBPREF=lib$/;"	m
LIBSUF	config.mak	/^LIBSUF=.a$/;"	m
LIBSUFFIXES	common.mak	/^LIBSUFFIXES       = *.a *.lib *.so *.so.* *.dylib *.dll *.def *.dll.a *.exp$/;"	m
LIBSWSCALE_BUILD	libswscale/swscale.h	42;"	d
LIBSWSCALE_IDENT	libswscale/swscale.h	44;"	d
LIBSWSCALE_VERSION	libswscale/swscale.h	39;"	d
LIBSWSCALE_VERSION_INT	libswscale/swscale.h	36;"	d
LIBSWSCALE_VERSION_MAJOR	libswscale/swscale.h	32;"	d
LIBSWSCALE_VERSION_MICRO	libswscale/swscale.h	34;"	d
LIBSWSCALE_VERSION_MINOR	libswscale/swscale.h	33;"	d
LIBTARGET	config.mak	/^LIBTARGET=$/;"	m
LIBVERSION	subdir.mak	/^LIBVERSION := $(lib$(NAME)_VERSION)$/;"	m
LIB_INSTALL_EXTRA_CMD	config.mak	/^LIB_INSTALL_EXTRA_CMD=$$(RANLIB) "$(LIBDIR)\/$(LIBNAME)"$/;"	m
LICENSE_PREFIX	libavcodec/utils.c	1148;"	d	file:
LICENSE_PREFIX	libavdevice/avdevice.c	33;"	d	file:
LICENSE_PREFIX	libavfilter/avfilter.c	43;"	d	file:
LICENSE_PREFIX	libavformat/utils.c	66;"	d	file:
LICENSE_PREFIX	libavutil/utils.c	39;"	d	file:
LICENSE_PREFIX	libpostproc/postprocess.c	103;"	d	file:
LICENSE_PREFIX	libswscale/utils.c	62;"	d	file:
LIFT	libavcodec/dwt.c	111;"	d	file:
LIFT	libavcodec/dwt.c	143;"	d	file:
LIFTS	libavcodec/dwt.c	177;"	d	file:
LIFTS	libavcodec/dwt.c	210;"	d	file:
LINEAR_BLEND_DEINT_FILTER	libpostproc/postprocess_internal.h	60;"	d
LINEAR_IPOL_DEINT_FILTER	libpostproc/postprocess_internal.h	59;"	d
LIST_NOT_USED	libavcodec/h264.h	309;"	d
LIST_TAG	libavformat/4xm.c	35;"	d	file:
LLSModel	libavutil/lls.h	/^typedef struct LLSModel{$/;"	s
LLSModel	libavutil/lls.h	/^}LLSModel;$/;"	t	typeref:struct:LLSModel
LMLM4_B_FRAME	libavformat/lmlm4.c	30;"	d	file:
LMLM4_INVALID	libavformat/lmlm4.c	31;"	d	file:
LMLM4_I_FRAME	libavformat/lmlm4.c	28;"	d	file:
LMLM4_MAX_PACKET_SIZE	libavformat/lmlm4.c	34;"	d	file:
LMLM4_MPEG1L2	libavformat/lmlm4.c	32;"	d	file:
LMLM4_P_FRAME	libavformat/lmlm4.c	29;"	d	file:
LN_S	config.mak	/^LN_S=ln -sf$/;"	m
LOAD	libavcodec/sparc/simple_idct_vis.c	103;"	d	file:
LOAD	libavfilter/x86/yadif_template.c	258;"	d	file:
LOAD	libavfilter/x86/yadif_template.c	27;"	d	file:
LOAD	libavfilter/x86/yadif_template.c	40;"	d	file:
LOAD2	libavcodec/huffyuv.c	812;"	d	file:
LOAD3	libavcodec/huffyuv.c	890;"	d	file:
LOAD4	libavcodec/huffyuv.c	762;"	d	file:
LOAD4	libavcodec/ppc/mpegvideo_altivec.c	60;"	d	file:
LOAD4	libavcodec/x86/dsputil_mmx.h	69;"	d
LOADCHROMA	libswscale/yuv2rgb.c	62;"	d	file:
LOADSCALE	libavcodec/sparc/simple_idct_vis.c	58;"	d	file:
LOAD_ALPHA	libswscale/x86/yuv2rgb_template.c	341;"	d	file:
LOAD_COMMON	libavcodec/motion_est_template.c	28;"	d	file:
LOAD_COMMON2	libavcodec/motion_est_template.c	552;"	d	file:
LOAD_DOUBLE_LINE	libpostproc/postprocess_altivec_template.c	1026;"	d	file:
LOAD_DOUBLE_LINE	libpostproc/postprocess_altivec_template.c	1040;"	d	file:
LOAD_DOUBLE_LINE	libpostproc/postprocess_altivec_template.c	1131;"	d	file:
LOAD_DOUBLE_LINE	libpostproc/postprocess_altivec_template.c	1143;"	d	file:
LOAD_DOWN_LEFT_EDGE	libavcodec/h264pred_template.c	128;"	d	file:
LOAD_H_SUBPEL_FILTER	libavcodec/ppc/vp8dsp_altivec.c	53;"	d	file:
LOAD_LEFT_EDGE	libavcodec/h264pred_template.c	134;"	d	file:
LOAD_LINE	libpostproc/postprocess_altivec_template.c	107;"	d	file:
LOAD_LINE	libpostproc/postprocess_altivec_template.c	148;"	d	file:
LOAD_LINE	libpostproc/postprocess_altivec_template.c	249;"	d	file:
LOAD_LINE	libpostproc/postprocess_altivec_template.c	290;"	d	file:
LOAD_LINE	libpostproc/postprocess_altivec_template.c	426;"	d	file:
LOAD_LINE	libpostproc/postprocess_altivec_template.c	447;"	d	file:
LOAD_LINE	libpostproc/postprocess_altivec_template.c	548;"	d	file:
LOAD_LINE	libpostproc/postprocess_altivec_template.c	565;"	d	file:
LOAD_LINE	libpostproc/postprocess_altivec_template.c	845;"	d	file:
LOAD_LINE	libpostproc/postprocess_altivec_template.c	873;"	d	file:
LOAD_LINE_ALIGNED	libpostproc/postprocess_altivec_template.c	120;"	d	file:
LOAD_LINE_ALIGNED	libpostproc/postprocess_altivec_template.c	149;"	d	file:
LOAD_LINE_ALIGNED	libpostproc/postprocess_altivec_template.c	258;"	d	file:
LOAD_LINE_ALIGNED	libpostproc/postprocess_altivec_template.c	291;"	d	file:
LOAD_PIXELS	libavcodec/vp8dsp.c	145;"	d	file:
LOAD_ROUNDER_MMX	libavcodec/x86/vc1dsp_mmx.c	59;"	d	file:
LOAD_TOP_EDGE	libavcodec/h264pred_template.c	140;"	d	file:
LOAD_TOP_RIGHT_EDGE	libavcodec/h264pred_template.c	122;"	d	file:
LOAD_V_SUBPEL_FILTER	libavcodec/ppc/vp8dsp_altivec.c	137;"	d	file:
LOAD_ZERO	libavcodec/ppc/types_altivec.h	38;"	d
LOAS_SYNC_WORD	libavcodec/aacdec.c	2250;"	d	file:
LOCAL_ADDRESS	libavformat/mmst.c	40;"	d	file:
LOCAL_ALIGNED	libavcodec/dsputil.h	676;"	d
LOCAL_ALIGNED_16	libavcodec/dsputil.h	685;"	d
LOCAL_ALIGNED_16	libavcodec/dsputil.h	687;"	d
LOCAL_ALIGNED_8	libavcodec/dsputil.h	679;"	d
LOCAL_ALIGNED_8	libavcodec/dsputil.h	681;"	d
LOCAL_ALIGNED_A	libavcodec/dsputil.h	670;"	d
LOCAL_ALIGNED_D	libavcodec/dsputil.h	674;"	d
LOCAL_C_INCLUDES	Android.mk	/^LOCAL_C_INCLUDES := $(LOCAL_PATH) \\$/;"	m
LOCAL_C_INCLUDES	libavcodec/Android.mk	/^LOCAL_C_INCLUDES :=$(LOCAL_PATH) \\$/;"	m
LOCAL_C_INCLUDES	libavdevice/Android.mk	/^LOCAL_C_INCLUDES :=$(LOCAL_PATH) \\$/;"	m
LOCAL_C_INCLUDES	libavfilter/Android.mk	/^LOCAL_C_INCLUDES :=$(LOCAL_PATH) \\$/;"	m
LOCAL_C_INCLUDES	libavformat/Android.mk	/^LOCAL_C_INCLUDES :=$(LOCAL_PATH) \\$/;"	m
LOCAL_C_INCLUDES	libavutil/Android.mk	/^LOCAL_C_INCLUDES :=$(LOCAL_PATH) \\$/;"	m
LOCAL_C_INCLUDES	libpostproc/Android.mk	/^LOCAL_C_INCLUDES :=$(LOCAL_PATH) \\$/;"	m
LOCAL_C_INCLUDES	libswscale/Android.mk	/^LOCAL_C_INCLUDES :=$(LOCAL_PATH) \\$/;"	m
LOCAL_LDLIBS	libavcodec/Android.mk	/^LOCAL_LDLIBS := -lz$/;"	m
LOCAL_LDLIBS	libavdevice/Android.mk	/^LOCAL_LDLIBS := -lz$/;"	m
LOCAL_LDLIBS	libavfilter/Android.mk	/^LOCAL_LDLIBS := -lz$/;"	m
LOCAL_LDLIBS	libavformat/Android.mk	/^LOCAL_LDLIBS := -lz$/;"	m
LOCAL_LDLIBS	libavutil/Android.mk	/^LOCAL_LDLIBS := -lz$/;"	m
LOCAL_LDLIBS	libpostproc/Android.mk	/^LOCAL_LDLIBS := -lz$/;"	m
LOCAL_LDLIBS	libswscale/Android.mk	/^LOCAL_LDLIBS := -lz$/;"	m
LOCAL_MANGLE	libavutil/internal.h	101;"	d
LOCAL_MANGLE	libavutil/internal.h	103;"	d
LOCAL_MODULE	Android.mk	/^LOCAL_MODULE := ffmpeg $/;"	m
LOCAL_MODULE	libavcodec/Android.mk	/^LOCAL_MODULE := $(FFNAME)$/;"	m
LOCAL_MODULE	libavdevice/Android.mk	/^LOCAL_MODULE := $(FFNAME)$/;"	m
LOCAL_MODULE	libavfilter/Android.mk	/^LOCAL_MODULE := $(FFNAME)$/;"	m
LOCAL_MODULE	libavformat/Android.mk	/^LOCAL_MODULE := $(FFNAME)$/;"	m
LOCAL_MODULE	libavutil/Android.mk	/^LOCAL_MODULE := $(FFNAME)$/;"	m
LOCAL_MODULE	libpostproc/Android.mk	/^LOCAL_MODULE := $(FFNAME)$/;"	m
LOCAL_MODULE	libswscale/Android.mk	/^LOCAL_MODULE := $(FFNAME)$/;"	m
LOCAL_MODULE_TAGS	Android.mk	/^LOCAL_MODULE_TAGS = optional$/;"	m
LOCAL_PATH	Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	libavcodec/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	libavdevice/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	libavfilter/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	libavformat/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	libavutil/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	libpostproc/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PATH	libswscale/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_PORT	libavformat/mmst.c	41;"	d	file:
LOCAL_SRC_FILES	Android.mk	/^LOCAL_SRC_FILES := cmdutils.c \\$/;"	m
LOCAL_SRC_FILES	libavcodec/Android.mk	/^LOCAL_SRC_FILES := $(FFFILES)$/;"	m
LOCAL_SRC_FILES	libavdevice/Android.mk	/^LOCAL_SRC_FILES := $(FFFILES)$/;"	m
LOCAL_SRC_FILES	libavfilter/Android.mk	/^LOCAL_SRC_FILES := $(FFFILES)$/;"	m
LOCAL_SRC_FILES	libavformat/Android.mk	/^LOCAL_SRC_FILES := $(FFFILES)$/;"	m
LOCAL_SRC_FILES	libavutil/Android.mk	/^LOCAL_SRC_FILES := $(FFFILES)$/;"	m
LOCAL_SRC_FILES	libpostproc/Android.mk	/^LOCAL_SRC_FILES := $(FFFILES)$/;"	m
LOCAL_SRC_FILES	libswscale/Android.mk	/^LOCAL_SRC_FILES := $(FFFILES)$/;"	m
LOCAL_STATIC_LIBRARIES	Android.mk	/^LOCAL_STATIC_LIBRARIES := \\$/;"	m
LOCAL_STATIC_LIBRARIES	libavcodec/Android.mk	/^LOCAL_STATIC_LIBRARIES := $(FFLIBS)$/;"	m
LOCAL_STATIC_LIBRARIES	libavdevice/Android.mk	/^LOCAL_STATIC_LIBRARIES := $(FFLIBS)$/;"	m
LOCAL_STATIC_LIBRARIES	libavfilter/Android.mk	/^LOCAL_STATIC_LIBRARIES := $(FFLIBS)$/;"	m
LOCAL_STATIC_LIBRARIES	libavformat/Android.mk	/^LOCAL_STATIC_LIBRARIES := $(FFLIBS)$/;"	m
LOCAL_STATIC_LIBRARIES	libavutil/Android.mk	/^LOCAL_STATIC_LIBRARIES := $(FFLIBS)$/;"	m
LOCAL_STATIC_LIBRARIES	libpostproc/Android.mk	/^LOCAL_STATIC_LIBRARIES := $(FFLIBS)$/;"	m
LOCAL_STATIC_LIBRARIES	libswscale/Android.mk	/^LOCAL_STATIC_LIBRARIES := $(FFLIBS)$/;"	m
LOCOContext	libavcodec/loco.c	/^typedef struct LOCOContext{$/;"	s	file:
LOCOContext	libavcodec/loco.c	/^} LOCOContext;$/;"	t	typeref:struct:LOCOContext	file:
LOCO_CRGB	libavcodec/loco.c	/^enum LOCO_MODE {LOCO_UNKN=0, LOCO_CYUY2=-1, LOCO_CRGB=-2, LOCO_CRGBA=-3, LOCO_CYV12=-4,$/;"	e	enum:LOCO_MODE	file:
LOCO_CRGBA	libavcodec/loco.c	/^enum LOCO_MODE {LOCO_UNKN=0, LOCO_CYUY2=-1, LOCO_CRGB=-2, LOCO_CRGBA=-3, LOCO_CYV12=-4,$/;"	e	enum:LOCO_MODE	file:
LOCO_CYUY2	libavcodec/loco.c	/^enum LOCO_MODE {LOCO_UNKN=0, LOCO_CYUY2=-1, LOCO_CRGB=-2, LOCO_CRGBA=-3, LOCO_CYV12=-4,$/;"	e	enum:LOCO_MODE	file:
LOCO_CYV12	libavcodec/loco.c	/^enum LOCO_MODE {LOCO_UNKN=0, LOCO_CYUY2=-1, LOCO_CRGB=-2, LOCO_CRGBA=-3, LOCO_CYV12=-4,$/;"	e	enum:LOCO_MODE	file:
LOCO_MODE	libavcodec/loco.c	/^enum LOCO_MODE {LOCO_UNKN=0, LOCO_CYUY2=-1, LOCO_CRGB=-2, LOCO_CRGBA=-3, LOCO_CYV12=-4,$/;"	g	file:
LOCO_RGB	libavcodec/loco.c	/^ LOCO_YUY2=1, LOCO_UYVY=2, LOCO_RGB=3, LOCO_RGBA=4, LOCO_YV12=5};$/;"	e	enum:LOCO_MODE	file:
LOCO_RGBA	libavcodec/loco.c	/^ LOCO_YUY2=1, LOCO_UYVY=2, LOCO_RGB=3, LOCO_RGBA=4, LOCO_YV12=5};$/;"	e	enum:LOCO_MODE	file:
LOCO_UNKN	libavcodec/loco.c	/^enum LOCO_MODE {LOCO_UNKN=0, LOCO_CYUY2=-1, LOCO_CRGB=-2, LOCO_CRGBA=-3, LOCO_CYV12=-4,$/;"	e	enum:LOCO_MODE	file:
LOCO_UYVY	libavcodec/loco.c	/^ LOCO_YUY2=1, LOCO_UYVY=2, LOCO_RGB=3, LOCO_RGBA=4, LOCO_YV12=5};$/;"	e	enum:LOCO_MODE	file:
LOCO_YUY2	libavcodec/loco.c	/^ LOCO_YUY2=1, LOCO_UYVY=2, LOCO_RGB=3, LOCO_RGBA=4, LOCO_YV12=5};$/;"	e	enum:LOCO_MODE	file:
LOCO_YV12	libavcodec/loco.c	/^ LOCO_YUY2=1, LOCO_UYVY=2, LOCO_RGB=3, LOCO_RGBA=4, LOCO_YV12=5};$/;"	e	enum:LOCO_MODE	file:
LOG2	libavutil/rational.c	98;"	d	file:
LOG2_MB_SIZE	libavcodec/snow.c	398;"	d	file:
LOG2_OBMC_MAX	libavcodec/snow.h	37;"	d
LONG_START_SEQUENCE	libavcodec/aac.h	/^    LONG_START_SEQUENCE,$/;"	e	enum:WindowSequence
LONG_STOP_SEQUENCE	libavcodec/aac.h	/^    LONG_STOP_SEQUENCE,$/;"	e	enum:WindowSequence
LOOP_FILTER	libavcodec/vp8dsp.c	235;"	d	file:
LOOP_FILTER	libavcodec/x86/vc1dsp_mmx.c	685;"	d	file:
LOOP_NODES	libavcodec/adpcm.c	478;"	d	file:
LOOP_NODES	libavcodec/adpcm.c	493;"	d	file:
LOSSLESS_QLOG	libavcodec/snow.h	33;"	d
LOWPASS	libavcodec/cavs.c	256;"	d	file:
LOWPASS	libavcodec/cavs.c	299;"	d	file:
LOWPASS	libavfilter/libmpcodecs/vf_ivtc.c	249;"	d	file:
LOWPASS5_DEINT_FILTER	libpostproc/postprocess_internal.h	65;"	d
LP	libavcodec/sh4/dsputil_align.c	29;"	d	file:
LP2_CHECK	libavcodec/indeo3.c	189;"	d	file:
LPC	libavcodec/sh4/dsputil_align.c	30;"	d	file:
LPC1	libavcodec/flacenc.c	763;"	d	file:
LPCContext	libavcodec/lpc.h	/^typedef struct LPCContext {$/;"	s
LPCContext	libavcodec/lpc.h	/^} LPCContext;$/;"	t	typeref:struct:LPCContext
LPCM_ID	libavformat/mpeg.h	45;"	d
LPCQSIZE	libavcodec/shorten.c	47;"	d	file:
LPCQUANT	libavcodec/shorten.c	57;"	d	file:
LPC_ORDER	libavcodec/ra144.h	33;"	d
LPC_TYPE	libavcodec/lpc.h	107;"	d
LPC_TYPE	libavcodec/lpc.h	109;"	d
LPC_USE_DOUBLE	libavcodec/lpc.c	24;"	d	file:
LPF_TAG	libavformat/anm.c	46;"	d	file:
LP_FILTER_ORDER	libavcodec/amrnbdata.h	53;"	d
LP_FILTER_ORDER	libavcodec/sipr.h	38;"	d
LP_FILTER_ORDER_16k	libavcodec/sipr.h	31;"	d
LP_ORDER	libavcodec/amrwbdata.h	33;"	d
LP_ORDER_16k	libavcodec/amrwbdata.h	34;"	d
LS$16E	libavcodec/bfin/pixels_bfin.S	/^LS$16E: DISALGNEXCPT                       || R1 = [I0++] || R3  =[I1++];$/;"	l
LS$16O	libavcodec/bfin/pixels_bfin.S	/^LS$16O: DISALGNEXCPT                       || R1 = [I0++] || R3  =[I1++];$/;"	l
LS$8E	libavcodec/bfin/pixels_bfin.S	/^LS$8E:  DISALGNEXCPT                       || R1 = [I0++]   || R3  =[I1++];$/;"	l
LS$8ET	libavcodec/bfin/pixels_bfin.S	/^LS$8ET: DISALGNEXCPT                       || R1 = [I0++]   || R3 = [I1++];$/;"	l
LS$8O	libavcodec/bfin/pixels_bfin.S	/^LS$8O:  DISALGNEXCPT                       || R1 = [I0++]   || R3  =[I1++];$/;"	l
LS$8OT	libavcodec/bfin/pixels_bfin.S	/^LS$8OT: DISALGNEXCPT                       || R1 = [I0++]   || R3 = [I1++];$/;"	l
LS$PS	libavcodec/bfin/pixels_bfin.S	/^LS$PS:  DISALGNEXCPT                       || R1 = [I0++]   || R3 = [I1++];$/;"	l
LSE	libavcodec/mjpeg.h	/^    LSE   = 0xf8,       \/\/\/< JPEG-LS extension parameters$/;"	e	enum:__anon218
LSFQ_DIFF_MIN	libavcodec/g729dec.c	56;"	d	file:
LSFQ_DIFF_MIN	libavcodec/sipr.h	36;"	d
LSFQ_MAX	libavcodec/g729dec.c	50;"	d	file:
LSFQ_MIN	libavcodec/g729dec.c	44;"	d	file:
LSF_R_FAC	libavcodec/amrnbdec.c	76;"	d	file:
LSP_COEFS_MAX	libavcodec/twinvq.c	214;"	d	file:
LSP_POW_BITS	libavcodec/wma.h	50;"	d
LSP_SPLIT_MAX	libavcodec/twinvq.c	215;"	d	file:
LUMA_CBP_BLOCK_MASK	libavcodec/rv34.c	1102;"	d	file:
LUMA_DC_BLOCK_INDEX	libavcodec/h264.h	735;"	d
LUM_DERING	libpostproc/postprocess_internal.h	42;"	d
LUM_H_DEBLOCK	libpostproc/postprocess_internal.h	39;"	d
LUM_LEVEL_FIX	libpostproc/postprocess_internal.h	44;"	d
LUM_MMX_FILTER_OFFSET	libswscale/swscale_internal.h	224;"	d
LUM_V_DEBLOCK	libpostproc/postprocess_internal.h	38;"	d
LUT16	libavfilter/libmpcodecs/vf_eq2.c	40;"	d	file:
LUT32	libavcodec/iff.c	99;"	d	file:
LUT8	libavcodec/iff.c	74;"	d	file:
LUT8_PART	libavcodec/iff.c	56;"	d	file:
LUT_BITS	libavcodec/bgmc.c	39;"	d	file:
LUT_BUFF	libavcodec/bgmc.c	41;"	d	file:
LUT_SIZE	libavcodec/bgmc.c	40;"	d	file:
LV1_CHECK	libavcodec/indeo3.c	164;"	d	file:
LXFDemuxContext	libavformat/lxfdec.c	/^} LXFDemuxContext;$/;"	t	typeref:struct:__anon377	file:
LXF_HEADER_DATA_SIZE	libavformat/lxfdec.c	27;"	d	file:
LXF_IDENT	libavformat/lxfdec.c	28;"	d	file:
LXF_IDENT_LENGTH	libavformat/lxfdec.c	29;"	d	file:
LXF_MAX_AUDIO_PACKET	libavformat/lxfdec.c	31;"	d	file:
LXF_PACKET_HEADER_SIZE	libavformat/lxfdec.c	26;"	d	file:
LXF_SAMPLERATE	libavformat/lxfdec.c	30;"	d	file:
LZOContext	libavutil/lzo.c	/^typedef struct LZOContext {$/;"	s	file:
LZOContext	libavutil/lzo.c	/^} LZOContext;$/;"	t	typeref:struct:LZOContext	file:
LZWEncodeState	libavcodec/lzwenc.c	/^typedef struct LZWEncodeState {$/;"	s	file:
LZWEncodeState	libavcodec/lzwenc.c	/^}LZWEncodeState;$/;"	t	typeref:struct:LZWEncodeState	file:
LZWState	libavcodec/lzw.c	/^struct LZWState {$/;"	s	file:
LZWState	libavcodec/lzw.h	/^typedef void LZWState;$/;"	t
LZW_HASH_SHIFT	libavcodec/lzwenc.c	35;"	d	file:
LZW_HASH_SIZE	libavcodec/lzwenc.c	34;"	d	file:
LZW_MAXBITS	libavcodec/lzw.c	33;"	d	file:
LZW_MAXBITS	libavcodec/lzwenc.c	32;"	d	file:
LZW_PREFIX_EMPTY	libavcodec/lzwenc.c	37;"	d	file:
LZW_PREFIX_FREE	libavcodec/lzwenc.c	38;"	d	file:
LZW_SIZTABLE	libavcodec/lzw.c	34;"	d	file:
LZW_SIZTABLE	libavcodec/lzwenc.c	33;"	d	file:
L_INTERPOL	libavcodec/sipr.h	41;"	d
L_SUBFR_16k	libavcodec/sipr.h	32;"	d
LagarithContext	libavcodec/lagarith.c	/^typedef struct LagarithContext {$/;"	s	file:
LagarithContext	libavcodec/lagarith.c	/^} LagarithContext;$/;"	t	typeref:struct:LagarithContext	file:
LagarithFrameType	libavcodec/lagarith.c	/^enum LagarithFrameType {$/;"	g	file:
LangEntry	libavformat/avlanguage.c	/^typedef struct LangEntry {$/;"	s	file:
LangEntry	libavformat/avlanguage.c	/^} LangEntry;$/;"	t	typeref:struct:LangEntry	file:
LclDecContext	libavcodec/lcldec.c	/^typedef struct LclDecContext {$/;"	s	file:
LclDecContext	libavcodec/lcldec.c	/^} LclDecContext;$/;"	t	typeref:struct:LclDecContext	file:
LclEncContext	libavcodec/lclenc.c	/^typedef struct LclEncContext {$/;"	s	file:
LclEncContext	libavcodec/lclenc.c	/^} LclEncContext;$/;"	t	typeref:struct:LclEncContext	file:
LibOpenJPEGContext	libavcodec/libopenjpeg.c	/^} LibOpenJPEGContext;$/;"	t	typeref:struct:__anon285	file:
LibSpeexContext	libavcodec/libspeexdec.c	/^} LibSpeexContext;$/;"	t	typeref:struct:__anon228	file:
LibSpeexEncContext	libavcodec/libspeexenc.c	/^} LibSpeexEncContext;$/;"	t	typeref:struct:__anon135	file:
Line	libavfilter/libmpcodecs/vf_denoise3d.c	/^        unsigned char *Line;$/;"	m	struct:vf_priv_s	file:
Line	libavfilter/libmpcodecs/vf_hqdn3d.c	/^        unsigned int *Line;$/;"	m	struct:vf_priv_s	file:
Line	libavfilter/vf_hqdn3d.c	/^    unsigned int *Line;$/;"	m	struct:__anon8	file:
LongTermPrediction	libavcodec/aac.h	/^} LongTermPrediction;$/;"	t	typeref:struct:__anon238
LowPass	libavfilter/libmpcodecs/vf_denoise3d.c	66;"	d	file:
LowPassMul	libavfilter/libmpcodecs/vf_hqdn3d.c	/^static inline unsigned int LowPassMul(unsigned int PrevMul, unsigned int CurrMul, int* Coef){$/;"	f	file:
LowPassMul	libavfilter/vf_hqdn3d.c	/^static inline unsigned int LowPassMul(unsigned int PrevMul, unsigned int CurrMul, int *Coef)$/;"	f	file:
LutContext	libavfilter/vf_lut.c	/^} LutContext;$/;"	t	typeref:struct:__anon23	file:
M	Makefile	/^.version: M=@$/;"	m
M	common.mak	/^M      = @$(call ECHO,$(TAG),$@);$/;"	m
M	libavcodec/vp3dsp.c	39;"	d	file:
M0	libavcodec/bfin/fdct_bfin.S	/^    M0 = 12 (X);                    \/\/ All these initializations are used in the$/;"	d
M0	libavcodec/bfin/pixels_bfin.S	/^        M0 = P0;  \/\/ M0 = line_size-16;$/;"	d
M0	libavcodec/bfin/pixels_bfin.S	/^        M0 = R3;$/;"	d
M0	libavcodec/bfin/pixels_bfin.S	/^    M0 = R2;$/;"	d
M1	libavcodec/bfin/fdct_bfin.S	/^    M1 = 16 (X);                    \/\/ modification of address offsets.$/;"	d
M1	libavcodec/bfin/idct_bfin.S	/^    M1 = 16 (X);            \/\/ All these registers are initialized for$/;"	d
M1	libavcodec/bfin/pixels_bfin.S	/^        M1 = 1;$/;"	d
M1	libavcodec/bfin/pixels_bfin.S	/^        M1 = R0;$/;"	d
M1	libavcodec/bfin/pixels_bfin.S	/^    M1 = R2;$/;"	d
M1	libavcodec/bfin/vp3_idct_bfin.S	/^    M1 = 16 (X);            \/\/ All these registers are initialized for$/;"	d
M15	libavcodec/ppc/vp3dsp_altivec.c	/^static inline vec_s16 M15(vec_s16 a, vec_s16 C)$/;"	f	file:
M16	libavcodec/ppc/vp3dsp_altivec.c	/^static inline vec_s16 M16(vec_s16 a, vec_s16 C)$/;"	f	file:
M2	libavcodec/bfin/fdct_bfin.S	/^    M2 = 128 (X);$/;"	d
M3	libavcodec/bfin/idct_bfin.S	/^    M3 = 8(X);              \/\/ modifying address offsets.$/;"	d
M3	libavcodec/bfin/pixels_bfin.S	/^    M3 = 2;$/;"	d
M3	libavcodec/bfin/vp3_idct_bfin.S	/^    M3 = 8(X);              \/\/ modifying address offsets.$/;"	d
MAC16	libavcodec/arm/mathops.h	46;"	d
MAC16	libavcodec/avr32/mathops.h	/^static inline av_const int MAC16(int d, int a, int b)$/;"	f
MAC16	libavcodec/avr32/mathops.h	71;"	d
MAC16	libavcodec/mathops.h	74;"	d
MAC16	libavcodec/ppc/mathops.h	32;"	d
MAC64	libavcodec/avr32/mathops.h	/^static inline av_const int64_t MAC64(int64_t d, int a, int b)$/;"	f
MAC64	libavcodec/avr32/mathops.h	63;"	d
MAC64	libavcodec/mathops.h	65;"	d
MAC64	libavcodec/mips/mathops.h	/^static inline av_const int64_t MAC64(int64_t d, int a, int b)$/;"	f
MAC64	libavcodec/mips/mathops.h	40;"	d
MAC64	libavcodec/mips/mathops.h	63;"	d
MAC64	libavcodec/ppc/mathops.h	/^static inline av_const int64_t MAC64(int64_t d, int a, int b)$/;"	f
MAC64	libavcodec/ppc/mathops.h	62;"	d
MACEContext	libavcodec/mace.c	/^typedef struct MACEContext {$/;"	s	file:
MACEContext	libavcodec/mace.c	/^} MACEContext;$/;"	t	typeref:struct:MACEContext	file:
MACEtab1	libavcodec/mace.c	/^static const int16_t MACEtab1[] = {-13, 8, 76, 222, 222, 76, 8, -13};$/;"	v	file:
MACEtab2	libavcodec/mace.c	/^static const int16_t MACEtab2[][4] = {$/;"	v	file:
MACEtab3	libavcodec/mace.c	/^static const int16_t MACEtab3[] = {-18, 140, 140, -18};$/;"	v	file:
MACEtab4	libavcodec/mace.c	/^static const int16_t MACEtab4[][2] = {$/;"	v	file:
MACS	libavcodec/mpegaudiodsp_template.c	40;"	d	file:
MACS	libavcodec/mpegaudiodsp_template.c	58;"	d	file:
MACS	libavcodec/ppc/mpegaudiodec_altivec.c	27;"	d	file:
MACS	libavcodec/x86/mpegaudiodec_mmx.c	27;"	d	file:
MAC_COEF	libavcodec/ac3enc.h	52;"	d
MAC_COEF	libavcodec/ac3enc.h	58;"	d
MAC_FORMAT_FLAG_24_BIT	libavformat/ape.c	36;"	d	file:
MAC_FORMAT_FLAG_8_BIT	libavformat/ape.c	33;"	d	file:
MAC_FORMAT_FLAG_CRC	libavformat/ape.c	34;"	d	file:
MAC_FORMAT_FLAG_CREATE_WAV_HEADER	libavformat/ape.c	38;"	d	file:
MAC_FORMAT_FLAG_HAS_PEAK_LEVEL	libavformat/ape.c	35;"	d	file:
MAC_FORMAT_FLAG_HAS_SEEK_ELEMENTS	libavformat/ape.c	37;"	d	file:
MAC_SUBFRAME_SIZE	libavformat/ape.c	40;"	d	file:
MADe_TAG	libavcodec/eamad.c	42;"	d	file:
MADe_TAG	libavformat/electronicarts.c	51;"	d	file:
MADk_TAG	libavcodec/eamad.c	40;"	d	file:
MADk_TAG	libavformat/electronicarts.c	49;"	d	file:
MADm_TAG	libavcodec/eamad.c	41;"	d	file:
MADm_TAG	libavformat/electronicarts.c	50;"	d	file:
MAG	libavfilter/libmpcodecs/vf_ivtc.c	245;"	d	file:
MAGIC	libavformat/jvdec.c	50;"	d	file:
MAGIC_COOKIE	libavformat/rtpdec_h264.c	68;"	d	file:
MAGIC_WMVd	libavcodec/vmnc.c	/^    MAGIC_WMVd = 0x574D5664,$/;"	e	enum:EncTypes	file:
MAGIC_WMVe	libavcodec/vmnc.c	/^    MAGIC_WMVe,$/;"	e	enum:EncTypes	file:
MAGIC_WMVf	libavcodec/vmnc.c	/^    MAGIC_WMVf,$/;"	e	enum:EncTypes	file:
MAGIC_WMVg	libavcodec/vmnc.c	/^    MAGIC_WMVg,$/;"	e	enum:EncTypes	file:
MAGIC_WMVh	libavcodec/vmnc.c	/^    MAGIC_WMVh,$/;"	e	enum:EncTypes	file:
MAGIC_WMVi	libavcodec/vmnc.c	/^    MAGIC_WMVi,$/;"	e	enum:EncTypes	file:
MAGIC_WMVj	libavcodec/vmnc.c	/^    MAGIC_WMVj$/;"	e	enum:EncTypes	file:
MAIN	libavfilter/vf_overlay.c	57;"	d	file:
MAIN_STARTCODE	libavformat/nut.h	32;"	d
MAIN_VO_TYPE	libavcodec/mpeg4video.h	39;"	d
MAKE_FORMAT_LIST	libavfilter/formats.c	76;"	d	file:
MAKE_OP	libavcodec/alpha/dsputil_alpha.c	212;"	d	file:
MAKE_SFMT_PAIR	ffmpeg.c	884;"	d	file:
MAKE_SFMT_PAIR	ffmpeg/ffmpeg.c	884;"	d	file:
MANDIR	config.mak	/^MANDIR=$(DESTDIR)${prefix}\/share\/man$/;"	m
MANGLE	libavutil/internal.h	106;"	d
MANPAGES	Makefile	/^MANPAGES    = $(PROGS-yes:%=doc\/%.1)$/;"	m
MAP_ANONYMOUS	libswscale/utils.c	32;"	d	file:
MAP_F2F	libavcodec/h264.h	1167;"	d
MAP_F2F	libavcodec/h264.h	1174;"	d
MAP_F2F	libavcodec/h264.h	1176;"	d
MAP_F2F	libavcodec/h264.h	1183;"	d
MAP_MVS	libavcodec/h264.h	1155;"	d
MARGIN	libavcodec/vp8.c	1618;"	d	file:
MASK_7f	libavcodec/sparc/dsputil_vis.c	104;"	d	file:
MASK_ABS	libavutil/internal.h	115;"	d
MASK_ABS	libavutil/internal.h	123;"	d
MASK_BOTTOM	libavcodec/rv40.c	428;"	d	file:
MASK_CUR	libavcodec/rv40.c	426;"	d	file:
MASK_C_LAST_ROW	libavcodec/rv40.c	435;"	d	file:
MASK_C_LEFT_COL	libavcodec/rv40.c	436;"	d	file:
MASK_C_RIGHT_COL	libavcodec/rv40.c	437;"	d	file:
MASK_C_TOP_ROW	libavcodec/rv40.c	434;"	d	file:
MASK_HAS_MASK	libavcodec/iff.c	/^    MASK_HAS_MASK,$/;"	e	enum:__anon113	file:
MASK_HAS_TRANSPARENT_COLOR	libavcodec/iff.c	/^    MASK_HAS_TRANSPARENT_COLOR,$/;"	e	enum:__anon113	file:
MASK_LASSO	libavcodec/iff.c	/^    MASK_LASSO$/;"	e	enum:__anon113	file:
MASK_MSHW	libavcodec/arm/simple_idct_arm.S	/^#define MASK_MSHW 0xFFFF0000$/;"	d
MASK_NONE	libavcodec/iff.c	/^    MASK_NONE,$/;"	e	enum:__anon113	file:
MASK_RIGHT	libavcodec/rv40.c	427;"	d	file:
MASK_TOP	libavcodec/rv40.c	429;"	d	file:
MASK_Y_LAST_ROW	libavcodec/rv40.c	431;"	d	file:
MASK_Y_LEFT_COL	libavcodec/rv40.c	432;"	d	file:
MASK_Y_RIGHT_COL	libavcodec/rv40.c	433;"	d	file:
MASK_Y_TOP_ROW	libavcodec/rv40.c	430;"	d	file:
MASK_fe	libavcodec/sparc/dsputil_vis.c	92;"	d	file:
MATROSKA_ID_ATTACHEDFILE	libavformat/matroska.h	185;"	d
MATROSKA_ID_ATTACHMENTS	libavformat/matroska.h	60;"	d
MATROSKA_ID_AUDIOBITDEPTH	libavformat/matroska.h	127;"	d
MATROSKA_ID_AUDIOCHANNELS	libavformat/matroska.h	128;"	d
MATROSKA_ID_AUDIOOUTSAMPLINGFREQ	libavformat/matroska.h	125;"	d
MATROSKA_ID_AUDIOSAMPLINGFREQ	libavformat/matroska.h	124;"	d
MATROSKA_ID_BLOCK	libavformat/matroska.h	180;"	d
MATROSKA_ID_BLOCKDURATION	libavformat/matroska.h	181;"	d
MATROSKA_ID_BLOCKGROUP	libavformat/matroska.h	176;"	d
MATROSKA_ID_BLOCKREFERENCE	libavformat/matroska.h	182;"	d
MATROSKA_ID_CHAPLANG	libavformat/matroska.h	199;"	d
MATROSKA_ID_CHAPSTRING	libavformat/matroska.h	198;"	d
MATROSKA_ID_CHAPTERATOM	libavformat/matroska.h	194;"	d
MATROSKA_ID_CHAPTERDISPLAY	libavformat/matroska.h	197;"	d
MATROSKA_ID_CHAPTERFLAGENABLED	libavformat/matroska.h	206;"	d
MATROSKA_ID_CHAPTERFLAGHIDDEN	libavformat/matroska.h	205;"	d
MATROSKA_ID_CHAPTERPHYSEQUIV	libavformat/matroska.h	207;"	d
MATROSKA_ID_CHAPTERS	libavformat/matroska.h	62;"	d
MATROSKA_ID_CHAPTERTIMEEND	libavformat/matroska.h	196;"	d
MATROSKA_ID_CHAPTERTIMESTART	libavformat/matroska.h	195;"	d
MATROSKA_ID_CHAPTERUID	libavformat/matroska.h	204;"	d
MATROSKA_ID_CLUSTER	libavformat/matroska.h	61;"	d
MATROSKA_ID_CLUSTERPOSITION	libavformat/matroska.h	174;"	d
MATROSKA_ID_CLUSTERPREVSIZE	libavformat/matroska.h	175;"	d
MATROSKA_ID_CLUSTERTIMECODE	libavformat/matroska.h	173;"	d
MATROSKA_ID_CODECDECODEALL	libavformat/matroska.h	92;"	d
MATROSKA_ID_CODECDOWNLOADURL	libavformat/matroska.h	91;"	d
MATROSKA_ID_CODECID	libavformat/matroska.h	87;"	d
MATROSKA_ID_CODECINFOURL	libavformat/matroska.h	90;"	d
MATROSKA_ID_CODECNAME	libavformat/matroska.h	89;"	d
MATROSKA_ID_CODECPRIVATE	libavformat/matroska.h	88;"	d
MATROSKA_ID_CUEBLOCKNUMBER	libavformat/matroska.h	148;"	d
MATROSKA_ID_CUECLUSTERPOSITION	libavformat/matroska.h	147;"	d
MATROSKA_ID_CUES	libavformat/matroska.h	57;"	d
MATROSKA_ID_CUETIME	libavformat/matroska.h	142;"	d
MATROSKA_ID_CUETRACK	libavformat/matroska.h	146;"	d
MATROSKA_ID_CUETRACKPOSITION	libavformat/matroska.h	143;"	d
MATROSKA_ID_DATEUTC	libavformat/matroska.h	70;"	d
MATROSKA_ID_DURATION	libavformat/matroska.h	66;"	d
MATROSKA_ID_EDITIONENTRY	libavformat/matroska.h	193;"	d
MATROSKA_ID_EDITIONFLAGDEFAULT	libavformat/matroska.h	202;"	d
MATROSKA_ID_EDITIONFLAGHIDDEN	libavformat/matroska.h	201;"	d
MATROSKA_ID_EDITIONFLAGORDERED	libavformat/matroska.h	203;"	d
MATROSKA_ID_EDITIONUID	libavformat/matroska.h	200;"	d
MATROSKA_ID_ENCODINGCOMPALGO	libavformat/matroska.h	135;"	d
MATROSKA_ID_ENCODINGCOMPRESSION	libavformat/matroska.h	134;"	d
MATROSKA_ID_ENCODINGCOMPSETTINGS	libavformat/matroska.h	136;"	d
MATROSKA_ID_ENCODINGORDER	libavformat/matroska.h	131;"	d
MATROSKA_ID_ENCODINGSCOPE	libavformat/matroska.h	132;"	d
MATROSKA_ID_ENCODINGTYPE	libavformat/matroska.h	133;"	d
MATROSKA_ID_FILEDATA	libavformat/matroska.h	189;"	d
MATROSKA_ID_FILEDESC	libavformat/matroska.h	186;"	d
MATROSKA_ID_FILEMIMETYPE	libavformat/matroska.h	188;"	d
MATROSKA_ID_FILENAME	libavformat/matroska.h	187;"	d
MATROSKA_ID_FILEUID	libavformat/matroska.h	190;"	d
MATROSKA_ID_INFO	libavformat/matroska.h	55;"	d
MATROSKA_ID_MUXINGAPP	libavformat/matroska.h	69;"	d
MATROSKA_ID_POINTENTRY	libavformat/matroska.h	139;"	d
MATROSKA_ID_SEEKENTRY	libavformat/matroska.h	166;"	d
MATROSKA_ID_SEEKHEAD	libavformat/matroska.h	59;"	d
MATROSKA_ID_SEEKID	libavformat/matroska.h	169;"	d
MATROSKA_ID_SEEKPOSITION	libavformat/matroska.h	170;"	d
MATROSKA_ID_SEGMENT	libavformat/matroska.h	52;"	d
MATROSKA_ID_SEGMENTUID	libavformat/matroska.h	71;"	d
MATROSKA_ID_SIMPLEBLOCK	libavformat/matroska.h	177;"	d
MATROSKA_ID_SIMPLETAG	libavformat/matroska.h	152;"	d
MATROSKA_ID_TAG	libavformat/matroska.h	151;"	d
MATROSKA_ID_TAGDEFAULT	libavformat/matroska.h	156;"	d
MATROSKA_ID_TAGDEFAULT_BUG	libavformat/matroska.h	157;"	d
MATROSKA_ID_TAGLANG	libavformat/matroska.h	155;"	d
MATROSKA_ID_TAGNAME	libavformat/matroska.h	153;"	d
MATROSKA_ID_TAGS	libavformat/matroska.h	58;"	d
MATROSKA_ID_TAGSTRING	libavformat/matroska.h	154;"	d
MATROSKA_ID_TAGTARGETS	libavformat/matroska.h	158;"	d
MATROSKA_ID_TAGTARGETS_ATTACHUID	libavformat/matroska.h	163;"	d
MATROSKA_ID_TAGTARGETS_CHAPTERUID	libavformat/matroska.h	162;"	d
MATROSKA_ID_TAGTARGETS_TRACKUID	libavformat/matroska.h	161;"	d
MATROSKA_ID_TAGTARGETS_TYPE	libavformat/matroska.h	159;"	d
MATROSKA_ID_TAGTARGETS_TYPEVALUE	libavformat/matroska.h	160;"	d
MATROSKA_ID_TIMECODESCALE	libavformat/matroska.h	65;"	d
MATROSKA_ID_TITLE	libavformat/matroska.h	67;"	d
MATROSKA_ID_TRACKAUDIO	libavformat/matroska.h	81;"	d
MATROSKA_ID_TRACKCOMBINEPLANES	libavformat/matroska.h	83;"	d
MATROSKA_ID_TRACKCONTENTENCODING	libavformat/matroska.h	103;"	d
MATROSKA_ID_TRACKCONTENTENCODINGS	libavformat/matroska.h	102;"	d
MATROSKA_ID_TRACKDEFAULTDURATION	libavformat/matroska.h	101;"	d
MATROSKA_ID_TRACKENTRY	libavformat/matroska.h	74;"	d
MATROSKA_ID_TRACKFLAGDEFAULT	libavformat/matroska.h	96;"	d
MATROSKA_ID_TRACKFLAGENABLED	libavformat/matroska.h	95;"	d
MATROSKA_ID_TRACKFLAGFORCED	libavformat/matroska.h	97;"	d
MATROSKA_ID_TRACKFLAGLACING	libavformat/matroska.h	98;"	d
MATROSKA_ID_TRACKLANGUAGE	libavformat/matroska.h	94;"	d
MATROSKA_ID_TRACKMAXBLKADDID	libavformat/matroska.h	105;"	d
MATROSKA_ID_TRACKMAXCACHE	libavformat/matroska.h	100;"	d
MATROSKA_ID_TRACKMINCACHE	libavformat/matroska.h	99;"	d
MATROSKA_ID_TRACKNAME	libavformat/matroska.h	93;"	d
MATROSKA_ID_TRACKNUMBER	libavformat/matroska.h	77;"	d
MATROSKA_ID_TRACKOPERATION	libavformat/matroska.h	82;"	d
MATROSKA_ID_TRACKPLANE	libavformat/matroska.h	84;"	d
MATROSKA_ID_TRACKPLANETYPE	libavformat/matroska.h	86;"	d
MATROSKA_ID_TRACKPLANEUID	libavformat/matroska.h	85;"	d
MATROSKA_ID_TRACKS	libavformat/matroska.h	56;"	d
MATROSKA_ID_TRACKTIMECODESCALE	libavformat/matroska.h	104;"	d
MATROSKA_ID_TRACKTYPE	libavformat/matroska.h	79;"	d
MATROSKA_ID_TRACKUID	libavformat/matroska.h	78;"	d
MATROSKA_ID_TRACKVIDEO	libavformat/matroska.h	80;"	d
MATROSKA_ID_VIDEOASPECTRATIO	libavformat/matroska.h	120;"	d
MATROSKA_ID_VIDEOCOLORSPACE	libavformat/matroska.h	121;"	d
MATROSKA_ID_VIDEODISPLAYHEIGHT	libavformat/matroska.h	110;"	d
MATROSKA_ID_VIDEODISPLAYUNIT	libavformat/matroska.h	117;"	d
MATROSKA_ID_VIDEODISPLAYWIDTH	libavformat/matroska.h	109;"	d
MATROSKA_ID_VIDEOFLAGINTERLACED	libavformat/matroska.h	118;"	d
MATROSKA_ID_VIDEOFRAMERATE	libavformat/matroska.h	108;"	d
MATROSKA_ID_VIDEOPIXELCROPB	libavformat/matroska.h	113;"	d
MATROSKA_ID_VIDEOPIXELCROPL	libavformat/matroska.h	115;"	d
MATROSKA_ID_VIDEOPIXELCROPR	libavformat/matroska.h	116;"	d
MATROSKA_ID_VIDEOPIXELCROPT	libavformat/matroska.h	114;"	d
MATROSKA_ID_VIDEOPIXELHEIGHT	libavformat/matroska.h	112;"	d
MATROSKA_ID_VIDEOPIXELWIDTH	libavformat/matroska.h	111;"	d
MATROSKA_ID_VIDEOSTEREOMODE	libavformat/matroska.h	119;"	d
MATROSKA_ID_WRITINGAPP	libavformat/matroska.h	68;"	d
MATROSKA_TRACK_ENCODING_COMP_BZLIB	libavformat/matroska.h	/^  MATROSKA_TRACK_ENCODING_COMP_BZLIB       = 1,$/;"	e	enum:__anon407
MATROSKA_TRACK_ENCODING_COMP_HEADERSTRIP	libavformat/matroska.h	/^  MATROSKA_TRACK_ENCODING_COMP_HEADERSTRIP = 3,$/;"	e	enum:__anon407
MATROSKA_TRACK_ENCODING_COMP_LZO	libavformat/matroska.h	/^  MATROSKA_TRACK_ENCODING_COMP_LZO         = 2,$/;"	e	enum:__anon407
MATROSKA_TRACK_ENCODING_COMP_ZLIB	libavformat/matroska.h	/^  MATROSKA_TRACK_ENCODING_COMP_ZLIB        = 0,$/;"	e	enum:__anon407
MATROSKA_TRACK_TYPE_AUDIO	libavformat/matroska.h	/^  MATROSKA_TRACK_TYPE_AUDIO    = 0x2,$/;"	e	enum:__anon406
MATROSKA_TRACK_TYPE_COMPLEX	libavformat/matroska.h	/^  MATROSKA_TRACK_TYPE_COMPLEX  = 0x3,$/;"	e	enum:__anon406
MATROSKA_TRACK_TYPE_CONTROL	libavformat/matroska.h	/^  MATROSKA_TRACK_TYPE_CONTROL  = 0x20,$/;"	e	enum:__anon406
MATROSKA_TRACK_TYPE_LOGO	libavformat/matroska.h	/^  MATROSKA_TRACK_TYPE_LOGO     = 0x10,$/;"	e	enum:__anon406
MATROSKA_TRACK_TYPE_NONE	libavformat/matroska.h	/^  MATROSKA_TRACK_TYPE_NONE     = 0x0,$/;"	e	enum:__anon406
MATROSKA_TRACK_TYPE_SUBTITLE	libavformat/matroska.h	/^  MATROSKA_TRACK_TYPE_SUBTITLE = 0x11,$/;"	e	enum:__anon406
MATROSKA_TRACK_TYPE_VIDEO	libavformat/matroska.h	/^  MATROSKA_TRACK_TYPE_VIDEO    = 0x1,$/;"	e	enum:__anon406
MATROSKA_VIDEO_STEREOMODE_TYPE_ANAGLYPH_CYAN_RED	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_ANAGLYPH_CYAN_RED  = 10,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_ANAGLYPH_GREEN_MAG	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_ANAGLYPH_GREEN_MAG = 12,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_BOTH_EYES_BLOCK_LR	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_BOTH_EYES_BLOCK_LR = 13,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_BOTH_EYES_BLOCK_RL	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_BOTH_EYES_BLOCK_RL = 14,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_BOTTOM_TOP	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_BOTTOM_TOP         = 2,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_CHECKERBOARD_LR	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_CHECKERBOARD_LR    = 5,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_CHECKERBOARD_RL	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_CHECKERBOARD_RL    = 4,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_COL_INTERLEAVED_LR	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_COL_INTERLEAVED_LR = 9,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_COL_INTERLEAVED_RL	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_COL_INTERLEAVED_RL = 8,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_LEFT_RIGHT	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_LEFT_RIGHT         = 1,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_MONO	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_MONO               = 0,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_RIGHT_LEFT	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_RIGHT_LEFT         = 11,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_ROW_INTERLEAVED_LR	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_ROW_INTERLEAVED_LR = 7,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_ROW_INTERLEAVED_RL	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_ROW_INTERLEAVED_RL = 6,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREOMODE_TYPE_TOP_BOTTOM	libavformat/matroska.h	/^  MATROSKA_VIDEO_STEREOMODE_TYPE_TOP_BOTTOM         = 3,$/;"	e	enum:__anon408
MATROSKA_VIDEO_STEREO_MODE_COUNT	libavformat/matroska.h	261;"	d
MATROSKA_VIDEO_STEREO_PLANE_COUNT	libavformat/matroska.h	262;"	d
MAT_FIRST_FIELD	libavformat/gxf.h	/^    MAT_FIRST_FIELD = 0x41,$/;"	e	enum:__anon347
MAT_FRAME_SIZE	libavformat/spdifenc.c	388;"	d	file:
MAT_LAST_FIELD	libavformat/gxf.h	/^    MAT_LAST_FIELD  = 0x42,$/;"	e	enum:__anon347
MAT_MARK_IN	libavformat/gxf.h	/^    MAT_MARK_IN     = 0x43,$/;"	e	enum:__anon347
MAT_MARK_OUT	libavformat/gxf.h	/^    MAT_MARK_OUT    = 0x44,$/;"	e	enum:__anon347
MAT_MIDDLE_CODE_OFFSET	libavformat/spdifenc.c	390;"	d	file:
MAT_NAME	libavformat/gxf.h	/^    MAT_NAME        = 0x40,$/;"	e	enum:__anon347
MAT_SIZE	libavformat/gxf.h	/^    MAT_SIZE        = 0x45,$/;"	e	enum:__anon347
MAX	libavfilter/libmpcodecs/vf_delogo.c	44;"	d	file:
MAX	libavfilter/libmpcodecs/vf_filmdint.c	105;"	d	file:
MAX	libavfilter/libmpcodecs/vf_mcdeint.c	72;"	d	file:
MAX	libavfilter/libmpcodecs/vf_pullup.c	35;"	d	file:
MAX	libavfilter/libmpcodecs/vf_pullup.c	36;"	d	file:
MAX	libavfilter/libmpcodecs/vf_test.c	39;"	d	file:
MAXIMUM_LONG_BIT_RUN	libavcodec/vp3.c	64;"	d	file:
MAXORDER	libavcodec/iirfilter.c	48;"	d	file:
MAXROWSIZE	libavfilter/libmpcodecs/vf_dint.c	43;"	d	file:
MAXSZ	libavutil/lzo.c	249;"	d	file:
MAXUP	libavfilter/libmpcodecs/vf_ivtc.c	281;"	d	file:
MAX_ABS	libavcodec/x86/dsputil_mmx_qns_template.c	25;"	d	file:
MAX_AC_VLC_BITS	libavcodec/intrax8huf.h	916;"	d
MAX_AUDIO_PACKET_SIZE	ffmpeg.c	800;"	d	file:
MAX_AUDIO_PACKET_SIZE	ffmpeg/ffmpeg.c	800;"	d	file:
MAX_BACKWARD_FILTER_LEN	libavcodec/ra288.c	31;"	d	file:
MAX_BACKWARD_FILTER_NONREC	libavcodec/ra288.c	32;"	d	file:
MAX_BACKWARD_FILTER_ORDER	libavcodec/ra288.c	30;"	d	file:
MAX_BANDS	libavcodec/wmaprodec.c	101;"	d	file:
MAX_BLOCKS	libavcodec/wmavoice.c	43;"	d	file:
MAX_BLOCKSIZE	libavcodec/mlp.h	56;"	d
MAX_BLOCKSIZE	libavcodec/shorten.c	35;"	d	file:
MAX_BLOCKSIZE_POW2	libavcodec/mlp.h	58;"	d
MAX_BUFFERS	libavcodec/pthread.c	58;"	d	file:
MAX_BUFFER_BLOCKS	libavformat/crypto.c	29;"	d	file:
MAX_BYTESPERSAMPLE	libavcodec/apedec.c	37;"	d	file:
MAX_CBS_2x2	libavcodec/roqvideoenc.c	72;"	d	file:
MAX_CBS_4x4	libavcodec/roqvideoenc.c	70;"	d	file:
MAX_CHANNELS	libavcodec/aac.h	42;"	d
MAX_CHANNELS	libavcodec/alac.c	62;"	d	file:
MAX_CHANNELS	libavcodec/alacenc.c	30;"	d	file:
MAX_CHANNELS	libavcodec/apedec.c	36;"	d	file:
MAX_CHANNELS	libavcodec/binkaudio.c	42;"	d	file:
MAX_CHANNELS	libavcodec/dcaenc.c	35;"	d	file:
MAX_CHANNELS	libavcodec/mlp.h	36;"	d
MAX_CHANNELS	libavcodec/pcm.c	32;"	d	file:
MAX_CHANNELS	libavcodec/resample.c	32;"	d	file:
MAX_CHANNELS	libavcodec/shorten.c	34;"	d	file:
MAX_CHANNELS	libavcodec/sonic.c	40;"	d	file:
MAX_CHANNELS	libavcodec/vorbisenc.c	129;"	d	file:
MAX_CHANNELS	libavcodec/wma.h	46;"	d
MAX_CHANNELS	tests/audiogen.c	27;"	d	file:
MAX_CODEBOOK_DIM	libavcodec/vorbisenc.c	130;"	d	file:
MAX_CODEBOOK_SIZE	libavcodec/vqavideo.c	83;"	d	file:
MAX_CODEBOOK_VECTORS	libavcodec/vqavideo.c	80;"	d	file:
MAX_CODED_SUPERFRAME_SIZE	libavcodec/wma.h	44;"	d
MAX_COMPONENTS	libavcodec/mjpegdec.h	36;"	d
MAX_CONTEXT_INPUTS	libavcodec/ffv1.c	41;"	d	file:
MAX_CUEPOINT_SIZE	libavformat/matroskaenc.c	104;"	d	file:
MAX_CUETRACKPOS_SIZE	libavformat/matroskaenc.c	101;"	d	file:
MAX_DATA_SIZE	libavutil/base64.c	106;"	d	file:
MAX_DC_VLC_BITS	libavcodec/intrax8huf.h	226;"	d
MAX_DECOMPOSITIONS	libavcodec/dwt.h	54;"	d
MAX_DELAYED_PIC_COUNT	libavcodec/h264.h	54;"	d
MAX_DISTANCE	libavformat/nut.h	40;"	d
MAX_DPCM	libavcodec/roqaudioenc.c	32;"	d	file:
MAX_ELEM_ID	libavcodec/aac.h	43;"	d
MAX_ENCODED_SIZE	libavutil/base64.c	107;"	d	file:
MAX_EXP	libavutil/softfloat.h	28;"	d
MAX_EXTRADATA_SIZE	libavformat/sdp.c	38;"	d	file:
MAX_FCODE	libavcodec/mpegvideo.h	54;"	d
MAX_FILES	ffmpeg.c	115;"	d	file:
MAX_FILES	ffmpeg/ffmpeg.c	115;"	d	file:
MAX_FILTER_SIZE	libswscale/swscale_internal.h	36;"	d
MAX_FIR_ORDER	libavcodec/mlp.h	64;"	d
MAX_FIXED_ORDER	libavcodec/flacenc.c	37;"	d	file:
MAX_FLOOR_CLASS_DIM	libavcodec/vorbisenc.c	132;"	d	file:
MAX_FLOOR_VALUES	libavcodec/vorbisenc.c	134;"	d	file:
MAX_FRAMES	libavcodec/wmavoice.c	47;"	d	file:
MAX_FRAMESIZE	libavcodec/wmaprodec.c	102;"	d	file:
MAX_FRAMESIZE	libavcodec/wmavoice.c	48;"	d	file:
MAX_FRAME_HEADER	libavformat/yuv4mpeg.c	194;"	d	file:
MAX_FRAME_HEADER_SIZE	libavcodec/flac_parser.c	56;"	d	file:
MAX_FRAME_SIZE	libavcodec/8svx.c	54;"	d	file:
MAX_HUFF_CODES	libavcodec/motionpixels.c	26;"	d	file:
MAX_IIR_ORDER	libavcodec/mlp.h	65;"	d
MAX_LEVEL	libavcodec/rl.h	35;"	d
MAX_LINESIZE	libavformat/assdec.c	25;"	d	file:
MAX_LINESIZE	libavformat/microdvddec.c	26;"	d	file:
MAX_LPC_ORDER	libavcodec/lpc.h	36;"	d
MAX_LPC_PRECISION	libavcodec/flacenc.c	40;"	d	file:
MAX_LPC_SHIFT	libavcodec/flacenc.c	41;"	d	file:
MAX_LP_HALF_ORDER	libavcodec/lsp.h	94;"	d
MAX_LP_ORDER	libavcodec/lsp.h	95;"	d
MAX_LSPS	libavcodec/wmavoice.c	44;"	d	file:
MAX_LSPS_ALIGN16	libavcodec/wmavoice.c	45;"	d	file:
MAX_LTP_LONG_SFB	libavcodec/aac.h	46;"	d
MAX_MALLOC_SIZE	libavutil/mem.c	68;"	d	file:
MAX_MATRICES	libavcodec/mlp.h	43;"	d
MAX_MATRICES_MLP	libavcodec/mlp.h	41;"	d
MAX_MATRICES_TRUEHD	libavcodec/mlp.h	42;"	d
MAX_MATRIX_CHANNEL_MLP	libavcodec/mlp.h	30;"	d
MAX_MATRIX_CHANNEL_TRUEHD	libavcodec/mlp.h	31;"	d
MAX_MATRIX_SIZE	libavfilter/libmpcodecs/vf_unsharp.c	44;"	d	file:
MAX_MBPAIR_SIZE	libavcodec/h264.h	56;"	d
MAX_MB_BYTES	libavcodec/mpegvideo.h	65;"	d
MAX_MMCO_COUNT	libavcodec/h264.h	52;"	d
MAX_MV	libavcodec/mpegvideo.h	55;"	d
MAX_NB_ARGS	libavcodec/ansi.c	68;"	d	file:
MAX_NEG_CROP	libavcodec/dsputil.h	84;"	d
MAX_NEG_CROP	libavcodec/motionpixels_tablegen.c	25;"	d	file:
MAX_NOISE	libavfilter/libmpcodecs/vf_noise.c	41;"	d	file:
MAX_ODML_DEPTH	libavformat/avidec.c	74;"	d	file:
MAX_ORDER	libavcodec/tta.c	39;"	d	file:
MAX_OR_VLC_BITS	libavcodec/intrax8huf.h	56;"	d
MAX_PACKET_READAHEAD	libavformat/mpegts.c	1590;"	d	file:
MAX_PAGES	libavformat/anm.c	40;"	d	file:
MAX_PAGE_SIZE	libavformat/oggdec.c	37;"	d	file:
MAX_PAGE_SIZE	libavformat/oggenc.c	33;"	d	file:
MAX_PARTITIONS	libavcodec/flacenc.c	39;"	d	file:
MAX_PARTITION_ORDER	libavcodec/flacenc.c	38;"	d	file:
MAX_PAYLOAD_SIZE	libavformat/mpegenc.c	27;"	d	file:
MAX_PCE_SIZE	libavcodec/mpeg4audio.h	101;"	d
MAX_PES_HEADER_SIZE	libavformat/mpegts.c	153;"	d	file:
MAX_PES_PAYLOAD	libavformat/mpegts.c	42;"	d	file:
MAX_PICTURE_COUNT	libavcodec/mpegvideo.h	59;"	d
MAX_PIDS_PER_PROGRAM	libavformat/mpegts.c	82;"	d	file:
MAX_PLANES	libavcodec/ffv1.c	37;"	d	file:
MAX_PLANES	libavcodec/snow.h	30;"	d
MAX_PPS_COUNT	libavcodec/h264.h	50;"	d
MAX_PREDICTORS	libavcodec/aac.h	126;"	d
MAX_PROBE_PACKETS	libavformat/avformat.h	601;"	d
MAX_PSET_SIZE	libavformat/sdp.c	153;"	d	file:
MAX_QUANT_TABLES	libavcodec/ffv1.c	40;"	d	file:
MAX_QUEUE_SIZE	ffplay.c	59;"	d	file:
MAX_RATEFACTOR	libavcodec/mlp.h	51;"	d
MAX_READ_SIZE	libavformat/apc.c	73;"	d	file:
MAX_REDIRECTS	libavformat/http.c	39;"	d	file:
MAX_REF_FRAMES	libavcodec/snow.h	35;"	d
MAX_REGISTERED_AVFILTERS_NB	libavfilter/avfilter.c	627;"	d	file:
MAX_REORDER_DELAY	libavformat/avformat.h	569;"	d
MAX_RES	libavfilter/libmpcodecs/vf_noise.c	43;"	d	file:
MAX_RESYNC_SIZE	libavformat/mpegts.c	40;"	d	file:
MAX_RICE_PARAM	libavcodec/flacenc.c	42;"	d	file:
MAX_RLE_BULK	libavcodec/qtrleenc.c	30;"	d	file:
MAX_RLE_REPEAT	libavcodec/qtrleenc.c	32;"	d	file:
MAX_RLE_SKIP	libavcodec/qtrleenc.c	34;"	d	file:
MAX_RUN	libavcodec/rl.h	34;"	d
MAX_SAB_SIZE	libavcodec/motion_est_template.c	824;"	d	file:
MAX_SAMPLERATE	libavcodec/mlp.h	53;"	d
MAX_SECTION_SIZE	libavformat/mpegts.h	33;"	d
MAX_SEEKENTRY_SIZE	libavformat/matroskaenc.c	97;"	d	file:
MAX_SFRAMESIZE	libavcodec/wmavoice.c	50;"	d	file:
MAX_SHIFT	libavfilter/libmpcodecs/vf_noise.c	42;"	d	file:
MAX_SIGNAL_HISTORY	libavcodec/wmavoice.c	49;"	d	file:
MAX_SIZE	libavfilter/vf_unsharp.c	45;"	d	file:
MAX_SIZE	libavformat/aiffdec.c	292;"	d	file:
MAX_SIZE	libavformat/mmf.c	260;"	d	file:
MAX_SIZE	libavformat/sol.c	125;"	d	file:
MAX_SIZE	libavformat/wav.c	435;"	d	file:
MAX_SLICES	libavcodec/dxva2_mpeg2.c	25;"	d	file:
MAX_SLICES	libavcodec/ffv1.c	228;"	d	file:
MAX_SLICES	libavcodec/h264.h	68;"	d
MAX_SPS_COUNT	libavcodec/h264.h	49;"	d
MAX_STD_TIMEBASES	libavformat/avformat.h	630;"	d
MAX_STREAMS	ffmpeg.c	116;"	d	file:
MAX_STREAMS	ffmpeg/ffmpeg.c	116;"	d	file:
MAX_STREAMS	ffserver.c	97;"	d	file:
MAX_STRIPS	libavcodec/cinepak.c	45;"	d	file:
MAX_SUBFRAMES	libavcodec/wmaprodec.c	100;"	d	file:
MAX_SUBFRAME_COUNT	libavcodec/sipr.c	41;"	d	file:
MAX_SUBPACKETS	libavcodec/cook.c	68;"	d	file:
MAX_SUBSTREAMS	libavcodec/mlp.h	48;"	d
MAX_SYNC_SIZE	libavformat/mpeg.c	32;"	d	file:
MAX_TABLE_DEPTH	libavcodec/intrax8.c	31;"	d	file:
MAX_TERMS	libavcodec/wavpack.c	78;"	d	file:
MAX_THREADS	libavcodec/mpegvideo.h	57;"	d
MAX_TIMEOUTS	libavformat/rtsp.c	54;"	d	file:
MAX_TOKEN_SIZE	libavformat/iss.c	35;"	d	file:
MAX_URL_SIZE	libavformat/internal.h	27;"	d
MAX_VARS	libavutil/lls.h	26;"	d
MAX_VECTORS	libavcodec/vqavideo.c	82;"	d	file:
MAX_VLC_SIZE	libavcodec/rv34vlc.h	40;"	d
MAX_YUV4_HEADER	libavformat/yuv4mpeg.c	193;"	d	file:
MA_NP	libavcodec/g729data.h	27;"	d
MBAC_BITRATE	libavcodec/msmpeg4.c	55;"	d	file:
MBA_STARTCODE	libavcodec/h261dec.c	41;"	d	file:
MBA_STUFFING	libavcodec/h261dec.c	40;"	d	file:
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER mmx,    h, 6,  8, 0$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER mmx,    h, 6, 16, 0$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER mmx,    v, 6,  8, 0$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER mmx,    v, 6, 16, 0$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER mmxext, h, 6,  8, 0$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER mmxext, h, 6, 16, 0$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER mmxext, v, 6,  8, 0$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER mmxext, v, 6, 16, 0$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER sse2,   h, 5, 16, 15$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER sse2,   h, 6,  8, 15$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER sse2,   h, 6, 16, 15$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER sse2,   v, 5, 16, 15$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER sse2,   v, 6,  8, 15$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER sse4,   h, 5, 16, 15$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER sse4,   h, 6,  8, 15$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER sse4,   h, 6, 16, 15$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER ssse3,  h, 5, 16, 15$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER ssse3,  h, 6,  8, 15$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER ssse3,  h, 6, 16, 15$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER ssse3,  v, 5, 16, 15$/;"	l
MBEDGE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^MBEDGE_LOOPFILTER ssse3,  v, 6,  8, 15$/;"	l
MBINCR_VLC_BITS	libavcodec/mpeg12.c	48;"	d	file:
MB_BTYPE_VLC_BITS	libavcodec/mpeg12.c	51;"	d	file:
MB_FIELD	libavcodec/h264.h	72;"	d
MB_FIELD	libavcodec/h264.h	77;"	d
MB_INTRA_VLC_BITS	libavcodec/msmpeg4.h	36;"	d
MB_INTRA_VLC_BITS	libavcodec/vc1dec.c	45;"	d	file:
MB_MBAFF	libavcodec/h264.h	71;"	d
MB_MBAFF	libavcodec/h264.h	76;"	d
MB_NON_INTRA_VLC_BITS	libavcodec/msmpeg4.h	35;"	d
MB_PAT_VLC_BITS	libavcodec/mpeg12.c	49;"	d	file:
MB_PTYPE_VLC_BITS	libavcodec/mpeg12.c	50;"	d	file:
MB_SIZE	libavcodec/snow.c	399;"	d	file:
MB_TYPE_16x16	libavcodec/avcodec.h	701;"	d
MB_TYPE_16x16_OR_INTRA	libavcodec/h264_direct.c	180;"	d	file:
MB_TYPE_16x8	libavcodec/avcodec.h	702;"	d
MB_TYPE_8x16	libavcodec/avcodec.h	703;"	d
MB_TYPE_8x8	libavcodec/avcodec.h	704;"	d
MB_TYPE_8x8DCT	libavcodec/h264.h	94;"	d
MB_TYPE_ACPRED	libavcodec/avcodec.h	707;"	d
MB_TYPE_B_VLC_BITS	libavcodec/mpeg4videodec.c	34;"	d	file:
MB_TYPE_CBP	libavcodec/avcodec.h	718;"	d
MB_TYPE_DIRECT2	libavcodec/avcodec.h	706;"	d
MB_TYPE_GMC	libavcodec/avcodec.h	708;"	d
MB_TYPE_H261_FIL	libavcodec/h261.h	49;"	d
MB_TYPE_INTERLACED	libavcodec/avcodec.h	705;"	d
MB_TYPE_INTRA	libavcodec/mpegvideo.h	94;"	d
MB_TYPE_INTRA16x16	libavcodec/avcodec.h	699;"	d
MB_TYPE_INTRA4x4	libavcodec/avcodec.h	698;"	d
MB_TYPE_INTRA_PCM	libavcodec/avcodec.h	700;"	d
MB_TYPE_L0	libavcodec/avcodec.h	714;"	d
MB_TYPE_L0L1	libavcodec/avcodec.h	716;"	d
MB_TYPE_L1	libavcodec/avcodec.h	715;"	d
MB_TYPE_P0L0	libavcodec/avcodec.h	710;"	d
MB_TYPE_P0L1	libavcodec/avcodec.h	712;"	d
MB_TYPE_P1L0	libavcodec/avcodec.h	711;"	d
MB_TYPE_P1L1	libavcodec/avcodec.h	713;"	d
MB_TYPE_QUANT	libavcodec/avcodec.h	717;"	d
MB_TYPE_REF0	libavcodec/h264.h	93;"	d
MB_TYPE_SEPARATE_DC	libavcodec/rv34.h	36;"	d
MB_TYPE_SKIP	libavcodec/avcodec.h	709;"	d
MB_TYPE_ZERO_MV	libavcodec/mpeg12decdata.h	35;"	d
MC_COOK	libavcodec/cook.c	65;"	d	file:
MC_avg_no_round_o_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_o_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_no_round_o_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_o_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_no_round_x_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_x_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_no_round_x_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_x_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_no_round_xy_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_xy_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_no_round_xy_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_xy_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_no_round_y_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_y_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_no_round_y_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_no_round_y_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_o_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_o_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_o_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_o_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_x_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_x_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_x_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_x_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_xy_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_xy_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_xy_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_xy_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_y_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_y_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_avg_y_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_avg_y_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_no_round_o_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_o_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_no_round_o_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_o_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_no_round_x_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_x_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_no_round_x_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_x_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_no_round_xy_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_xy_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_no_round_xy_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_xy_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_no_round_y_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_y_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_no_round_y_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_no_round_y_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_o_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_o_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_o_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_o_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_x_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_x_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_x_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_x_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_xy_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_xy_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_xy_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_xy_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_y_16_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_y_16_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MC_put_y_8_vis	libavcodec/sparc/dsputil_vis.c	/^static void MC_put_y_8_vis (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
MDAT_ATOM	tools/qt-faststart.c	61;"	d	file:
MDECContext	libavcodec/mdec.c	/^typedef struct MDECContext{$/;"	s	file:
MDECContext	libavcodec/mdec.c	/^} MDECContext;$/;"	t	typeref:struct:MDECContext	file:
MEDIAN	libavcodec/huffyuv.c	/^    MEDIAN,$/;"	e	enum:Predictor	file:
MEDIAN_DEINT_FILTER	libpostproc/postprocess_internal.h	63;"	d
MEM	libswscale/bfin/internal_bfin.S	/^#define MEM mL1$/;"	d
MEQ	libavfilter/libmpcodecs/vf_filmdint.c	384;"	d	file:
MERGE	libavcodec/mpegvideo_enc.c	2668;"	d	file:
MERGE1	libavcodec/sh4/dsputil_align.c	42;"	d	file:
MERGE2	libavcodec/sh4/dsputil_align.c	43;"	d	file:
MERGE_S16	libavcodec/ppc/fdct_altivec.c	219;"	d	file:
MERGE_S16	libavcodec/ppc/fdct_altivec.c	260;"	d	file:
METADATA_CHECK_INDEX	ffmpeg.c	2468;"	d	file:
METADATA_CHECK_INDEX	ffmpeg/ffmpeg.c	2468;"	d	file:
METRICS	libavfilter/libmpcodecs/vf_filmdint.c	817;"	d	file:
ME_CACHE_SIZE	libavcodec/snow.c	489;"	d	file:
ME_EPZS	libavcodec/avcodec.h	/^    ME_EPZS,        \/\/\/< enhanced predictive zonal search$/;"	e	enum:Motion_Est_ID
ME_FULL	libavcodec/avcodec.h	/^    ME_FULL,$/;"	e	enum:Motion_Est_ID
ME_HEX	libavcodec/avcodec.h	/^    ME_HEX,         \/\/\/< hexagon based search$/;"	e	enum:Motion_Est_ID
ME_ITER	libavcodec/avcodec.h	/^    ME_ITER,        \/\/\/< iterative search$/;"	e	enum:Motion_Est_ID
ME_LOG	libavcodec/avcodec.h	/^    ME_LOG,$/;"	e	enum:Motion_Est_ID
ME_MAP_MV_BITS	libavcodec/mpegvideo.h	63;"	d
ME_MAP_SHIFT	libavcodec/mpegvideo.h	62;"	d
ME_MAP_SIZE	libavcodec/mpegvideo.h	61;"	d
ME_PHODS	libavcodec/avcodec.h	/^    ME_PHODS,$/;"	e	enum:Motion_Est_ID
ME_TESA	libavcodec/avcodec.h	/^    ME_TESA,        \/\/\/< transformed exhaustive search algorithm$/;"	e	enum:Motion_Est_ID
ME_UMH	libavcodec/avcodec.h	/^    ME_UMH,         \/\/\/< uneven multi-hexagon search$/;"	e	enum:Motion_Est_ID
ME_X1	libavcodec/avcodec.h	/^    ME_X1,          \/\/\/< reserved for experiments$/;"	e	enum:Motion_Est_ID
ME_ZERO	libavcodec/avcodec.h	/^    ME_ZERO = 1,    \/\/\/< no search, that is use 0,0 vector whenever one is needed$/;"	e	enum:Motion_Est_ID
MID	libavcodec/mpegvideo_common.h	443;"	d
MID_SIDE	libavcodec/sonic.c	42;"	d	file:
MID_STATE	libavcodec/snow.h	28;"	d
MIME	libavformat/sapdec.c	131;"	d	file:
MIMIC_HEADER_SIZE	libavcodec/mimic.c	32;"	d	file:
MIN	libavfilter/libmpcodecs/vf_delogo.c	43;"	d	file:
MIN	libavfilter/libmpcodecs/vf_filmdint.c	102;"	d	file:
MIN	libavfilter/libmpcodecs/vf_mcdeint.c	71;"	d	file:
MIN	libavfilter/libmpcodecs/vf_test.c	40;"	d	file:
MIN_AUDIOQ_SIZE	ffplay.c	60;"	d	file:
MIN_CACHE_BITS	libavcodec/get_bits.h	126;"	d
MIN_CACHE_BITS	libavcodec/get_bits.h	179;"	d
MIN_DEQUANT_VAL	libavcodec/vp3.c	127;"	d	file:
MIN_ENERGY	libavcodec/amrnbdec.c	81;"	d	file:
MIN_ENERGY	libavcodec/amrwbdata.h	41;"	d
MIN_EXP	libavutil/softfloat.h	27;"	d
MIN_FRAMES	ffplay.c	61;"	d	file:
MIN_ISF_SPACING	libavcodec/amrwbdata.h	39;"	d
MIN_LPC_ORDER	libavcodec/lpc.h	35;"	d
MIN_LSF_SPACING	libavcodec/amrnbdec.c	77;"	d	file:
MIN_MATRIX_SIZE	libavfilter/libmpcodecs/vf_unsharp.c	43;"	d	file:
MIN_SIZE	libavfilter/vf_unsharp.c	44;"	d	file:
MISC_types	libavformat/mpegts.c	/^static const StreamType MISC_types[] = {$/;"	v	file:
MISSING_ERR	libavcodec/alsdec.c	421;"	d	file:
MIX5	libavcodec/x86/dsputil_mmx.c	1987;"	d	file:
MIX_FRONT3	libavcodec/dca.c	964;"	d	file:
MIX_MISC	libavcodec/x86/dsputil_mmx.c	2022;"	d	file:
MIX_REAR1	libavcodec/dca.c	956;"	d	file:
MIX_REAR2	libavcodec/dca.c	960;"	d	file:
MJpegContext	libavcodec/mjpegenc.h	/^typedef struct MJpegContext {$/;"	s
MJpegContext	libavcodec/mjpegenc.h	/^} MJpegContext;$/;"	t	typeref:struct:MJpegContext
MJpegDecodeContext	libavcodec/mjpegdec.h	/^typedef struct MJpegDecodeContext {$/;"	s
MJpegDecodeContext	libavcodec/mjpegdec.h	/^} MJpegDecodeContext;$/;"	t	typeref:struct:MJpegDecodeContext
MKBETAG	libavutil/common.h	224;"	d
MKMPCTAG	libavformat/mpc8.c	28;"	d	file:
MKRGB555	libavcodec/msvideo1enc.c	61;"	d	file:
MKTAG	libavutil/common.h	223;"	d
MKTAG16	libavformat/rtpdec_qt.c	124;"	d	file:
MLPDecodeContext	libavcodec/mlpdec.c	/^typedef struct MLPDecodeContext {$/;"	s	file:
MLPDecodeContext	libavcodec/mlpdec.c	/^} MLPDecodeContext;$/;"	t	typeref:struct:MLPDecodeContext	file:
MLPHeaderInfo	libavcodec/mlp_parser.h	/^typedef struct MLPHeaderInfo$/;"	s
MLPHeaderInfo	libavcodec/mlp_parser.h	/^} MLPHeaderInfo;$/;"	t	typeref:struct:MLPHeaderInfo
MLPMUL	libavcodec/x86/mlpdsp.c	55;"	d	file:
MLPMUL	libavcodec/x86/mlpdsp.c	80;"	d	file:
MLPParseContext	libavcodec/mlp_parser.c	/^typedef struct MLPParseContext$/;"	s	file:
MLPParseContext	libavcodec/mlp_parser.c	/^} MLPParseContext;$/;"	t	typeref:struct:MLPParseContext	file:
MLS16	libavcodec/avr32/mathops.h	72;"	d
MLS16	libavcodec/mathops.h	83;"	d
MLS64	libavcodec/arm/mathops.h	41;"	d
MLS64	libavcodec/avr32/mathops.h	64;"	d
MLS64	libavcodec/mathops.h	69;"	d
MLS64	libavcodec/mips/mathops.h	/^static inline av_const int64_t MLS64(int64_t d, int a, int b)$/;"	f
MLS64	libavcodec/mips/mathops.h	50;"	d
MLS64	libavcodec/mips/mathops.h	74;"	d
MLS64	libavcodec/ppc/mathops.h	/^static inline av_const int64_t MLS64(int64_t d, int a, int b)$/;"	f
MLS64	libavcodec/ppc/mathops.h	76;"	d
MLSS	libavcodec/mpegaudiodsp_template.c	42;"	d	file:
MLSS	libavcodec/mpegaudiodsp_template.c	59;"	d	file:
MLSS	libavcodec/ppc/mpegaudiodec_altivec.c	28;"	d	file:
MLSS	libavcodec/x86/mpegaudiodec_mmx.c	28;"	d	file:
MM	libavcodec/x86/mpegvideo_mmx_template.c	24;"	d	file:
MM	libavcodec/x86/mpegvideo_mmx_template.c	34;"	d	file:
MM	libavcodec/x86/mpegvideo_mmx_template.c	49;"	d	file:
MM	libavfilter/x86/yadif_template.c	22;"	d	file:
MM	libavfilter/x86/yadif_template.c	251;"	d	file:
MM	libavfilter/x86/yadif_template.c	35;"	d	file:
MMABS	libavcodec/x86/dsputilenc_mmx.c	980;"	d	file:
MMABS	libavcodec/x86/dsputilenc_mmx.c	982;"	d	file:
MMABS	libavcodec/x86/dsputilenc_mmx.c	986;"	d	file:
MMABS	libavcodec/x86/dsputilenc_mmx.c	994;"	d	file:
MMABS	libavcodec/x86/dsputilenc_mmx.c	997;"	d	file:
MMABS	libavcodec/x86/dsputilenc_mmx.c	999;"	d	file:
MMABS_MMX	libavcodec/x86/dsputilenc_mmx.c	882;"	d	file:
MMABS_MMX2	libavcodec/x86/dsputilenc_mmx.c	888;"	d	file:
MMABS_SSSE3	libavcodec/x86/dsputilenc_mmx.c	893;"	d	file:
MMABS_SUM	libavcodec/x86/dsputilenc_mmx.c	896;"	d	file:
MMCO	libavcodec/h264.h	/^typedef struct MMCO{$/;"	s
MMCO	libavcodec/h264.h	/^} MMCO;$/;"	t	typeref:struct:MMCO
MMCOOpcode	libavcodec/h264.h	/^typedef enum MMCOOpcode{$/;"	g
MMCOOpcode	libavcodec/h264.h	/^} MMCOOpcode;$/;"	t	typeref:enum:MMCOOpcode
MMCO_END	libavcodec/h264.h	/^    MMCO_END=0,$/;"	e	enum:MMCOOpcode
MMCO_LONG	libavcodec/h264.h	/^    MMCO_LONG,$/;"	e	enum:MMCOOpcode
MMCO_LONG2UNUSED	libavcodec/h264.h	/^    MMCO_LONG2UNUSED,$/;"	e	enum:MMCOOpcode
MMCO_RESET	libavcodec/h264.h	/^    MMCO_RESET,$/;"	e	enum:MMCOOpcode
MMCO_SET_MAX_LONG	libavcodec/h264.h	/^    MMCO_SET_MAX_LONG,$/;"	e	enum:MMCOOpcode
MMCO_SHORT2LONG	libavcodec/h264.h	/^    MMCO_SHORT2LONG,$/;"	e	enum:MMCOOpcode
MMCO_SHORT2UNUSED	libavcodec/h264.h	/^    MMCO_SHORT2UNUSED,$/;"	e	enum:MMCOOpcode
MMFContext	libavformat/mmf.c	/^} MMFContext;$/;"	t	typeref:struct:__anon319	file:
MMREG_WIDTH	libavcodec/x86/mpegvideo_mmx_template.c	23;"	d	file:
MMREG_WIDTH	libavcodec/x86/mpegvideo_mmx_template.c	33;"	d	file:
MMREG_WIDTH	libavcodec/x86/mpegvideo_mmx_template.c	48;"	d	file:
MMSCSPacketType	libavformat/mmst.c	/^} MMSCSPacketType;$/;"	t	typeref:enum:__anon339	file:
MMSContext	libavformat/mms.h	/^} MMSContext;$/;"	t	typeref:struct:__anon455
MMSHContext	libavformat/mmsh.c	/^} MMSHContext;$/;"	t	typeref:struct:__anon497	file:
MMSSCPacketType	libavformat/mmst.c	/^} MMSSCPacketType;$/;"	t	typeref:enum:__anon340	file:
MMSStream	libavformat/mms.h	/^}MMSStream;$/;"	t	typeref:struct:__anon454
MMSTContext	libavformat/mmst.c	/^} MMSTContext;$/;"	t	typeref:struct:__anon341	file:
MMS_MAX_STREAMS	libavformat/mms.c	27;"	d	file:
MMX-OBJS-yes	av.mk	/^MMX-OBJS-yes :=  $/;"	m
MMX_PERM	libavcodec/dct-test.c	/^  enum formattag { NO_PERM,MMX_PERM, MMX_SIMPLE_PERM, SCALE_PERM, SSE2_PERM, PARTTRANS_PERM } format;$/;"	e	enum:algo::formattag	file:
MMX_SIMPLE_PERM	libavcodec/dct-test.c	/^  enum formattag { NO_PERM,MMX_PERM, MMX_SIMPLE_PERM, SCALE_PERM, SSE2_PERM, PARTTRANS_PERM } format;$/;"	e	enum:algo::formattag	file:
MM_HEADER_LEN_AV	libavformat/mm.c	50;"	d	file:
MM_HEADER_LEN_V	libavformat/mm.c	49;"	d	file:
MM_PALETTE_COUNT	libavformat/mm.c	52;"	d	file:
MM_PALETTE_SIZE	libavformat/mm.c	53;"	d	file:
MM_PREAMBLE_SIZE	libavcodec/mmvideo.c	37;"	d	file:
MM_PREAMBLE_SIZE	libavformat/mm.c	37;"	d	file:
MM_TYPE_AUDIO	libavformat/mm.c	46;"	d	file:
MM_TYPE_HEADER	libavformat/mm.c	39;"	d	file:
MM_TYPE_INTER	libavcodec/mmvideo.c	39;"	d	file:
MM_TYPE_INTER	libavformat/mm.c	40;"	d	file:
MM_TYPE_INTER_HH	libavcodec/mmvideo.c	42;"	d	file:
MM_TYPE_INTER_HH	libavformat/mm.c	43;"	d	file:
MM_TYPE_INTER_HHV	libavcodec/mmvideo.c	44;"	d	file:
MM_TYPE_INTER_HHV	libavformat/mm.c	45;"	d	file:
MM_TYPE_INTRA	libavcodec/mmvideo.c	40;"	d	file:
MM_TYPE_INTRA	libavformat/mm.c	41;"	d	file:
MM_TYPE_INTRA_HH	libavcodec/mmvideo.c	41;"	d	file:
MM_TYPE_INTRA_HH	libavformat/mm.c	42;"	d	file:
MM_TYPE_INTRA_HHV	libavcodec/mmvideo.c	43;"	d	file:
MM_TYPE_INTRA_HHV	libavformat/mm.c	44;"	d	file:
MM_TYPE_PALETTE	libavcodec/mmvideo.c	45;"	d	file:
MM_TYPE_PALETTE	libavformat/mm.c	47;"	d	file:
MODE2_PATTERNS_NUM	libavcodec/rv40data.h	40;"	d
MODEL_ELEMENTS	libavcodec/apedec.c	303;"	d	file:
MODE_10k2	libavcodec/amrnbdata.h	/^    MODE_10k2,                            \/\/\/< 10.2 kbit\/s$/;"	e	enum:Mode
MODE_12k2	libavcodec/amrnbdata.h	/^    MODE_12k2,                            \/\/\/< 12.2 kbit\/s$/;"	e	enum:Mode
MODE_12k65	libavcodec/amrwbdata.h	/^    MODE_12k65,                            \/\/\/< 12.65 kbit\/s$/;"	e	enum:Mode
MODE_14k25	libavcodec/amrwbdata.h	/^    MODE_14k25,                            \/\/\/< 14.25 kbit\/s$/;"	e	enum:Mode
MODE_15k85	libavcodec/amrwbdata.h	/^    MODE_15k85,                            \/\/\/< 15.85 kbit\/s$/;"	e	enum:Mode
MODE_16k	libavcodec/sipr.h	/^    MODE_16k,$/;"	e	enum:__anon234
MODE_18k25	libavcodec/amrwbdata.h	/^    MODE_18k25,                            \/\/\/< 18.25 kbit\/s$/;"	e	enum:Mode
MODE_19k85	libavcodec/amrwbdata.h	/^    MODE_19k85,                            \/\/\/< 19.85 kbit\/s$/;"	e	enum:Mode
MODE_23k05	libavcodec/amrwbdata.h	/^    MODE_23k05,                            \/\/\/< 23.05 kbit\/s$/;"	e	enum:Mode
MODE_23k85	libavcodec/amrwbdata.h	/^    MODE_23k85,                            \/\/\/< 23.85 kbit\/s$/;"	e	enum:Mode
MODE_2COL	libavcodec/msvideo1enc.c	/^    MODE_2COL,$/;"	e	enum:MSV1Mode	file:
MODE_3G2	libavformat/movenc.h	39;"	d
MODE_3GP	libavformat/movenc.h	36;"	d
MODE_4k75	libavcodec/amrnbdata.h	/^    MODE_4k75 = 0,                        \/\/\/< 4.75 kbit\/s$/;"	e	enum:Mode
MODE_5k0	libavcodec/sipr.h	/^    MODE_5k0,$/;"	e	enum:__anon234
MODE_5k15	libavcodec/amrnbdata.h	/^    MODE_5k15,                            \/\/\/< 5.15 kbit\/s$/;"	e	enum:Mode
MODE_5k9	libavcodec/amrnbdata.h	/^    MODE_5k9,                             \/\/\/< 5.90 kbit\/s$/;"	e	enum:Mode
MODE_6k5	libavcodec/sipr.h	/^    MODE_6k5,$/;"	e	enum:__anon234
MODE_6k60	libavcodec/amrwbdata.h	/^    MODE_6k60 = 0,                         \/\/\/< 6.60 kbit\/s$/;"	e	enum:Mode
MODE_6k7	libavcodec/amrnbdata.h	/^    MODE_6k7,                             \/\/\/< 6.70 kbit\/s$/;"	e	enum:Mode
MODE_7k4	libavcodec/amrnbdata.h	/^    MODE_7k4,                             \/\/\/< 7.40 kbit\/s$/;"	e	enum:Mode
MODE_7k95	libavcodec/amrnbdata.h	/^    MODE_7k95,                            \/\/\/< 7.95 kbit\/s$/;"	e	enum:Mode
MODE_8COL	libavcodec/msvideo1enc.c	/^    MODE_8COL,$/;"	e	enum:MSV1Mode	file:
MODE_8k5	libavcodec/sipr.h	/^    MODE_8k5,$/;"	e	enum:__anon234
MODE_8k85	libavcodec/amrwbdata.h	/^    MODE_8k85,                             \/\/\/< 8.85 kbit\/s$/;"	e	enum:Mode
MODE_COPY	libavcodec/vp3.c	77;"	d	file:
MODE_COUNT	libavcodec/sipr.h	/^    MODE_COUNT$/;"	e	enum:__anon234
MODE_DTX	libavcodec/amrnbdata.h	/^    MODE_DTX,                             \/\/\/< silent frame$/;"	e	enum:Mode
MODE_EXT_I_STEREO	libavcodec/mpegaudiodata.h	33;"	d
MODE_EXT_MS_STEREO	libavcodec/mpegaudiodata.h	32;"	d
MODE_FILL	libavcodec/msvideo1enc.c	/^    MODE_FILL,$/;"	e	enum:MSV1Mode	file:
MODE_GOLDEN_MV	libavcodec/vp3.c	72;"	d	file:
MODE_I4x4	libavcodec/vp8.h	53;"	d
MODE_INTER_FOURMV	libavcodec/vp3.c	73;"	d	file:
MODE_INTER_LAST_MV	libavcodec/vp3.c	69;"	d	file:
MODE_INTER_NO_MV	libavcodec/vp3.c	66;"	d	file:
MODE_INTER_PLUS_MV	libavcodec/vp3.c	68;"	d	file:
MODE_INTER_PRIOR_LAST	libavcodec/vp3.c	70;"	d	file:
MODE_INTRA	libavcodec/vp3.c	67;"	d	file:
MODE_IPOD	libavformat/movenc.h	40;"	d
MODE_MATROSKAv2	libavformat/matroskaenc.c	73;"	d	file:
MODE_MOV	libavformat/movenc.h	35;"	d
MODE_MP4	libavformat/movenc.h	34;"	d
MODE_PSP	libavformat/movenc.h	37;"	d
MODE_SID	libavcodec/amrwbdata.h	/^    MODE_SID,                              \/\/\/< comfort noise frame$/;"	e	enum:Mode
MODE_SKIP	libavcodec/msvideo1enc.c	/^    MODE_SKIP = 0,$/;"	e	enum:MSV1Mode	file:
MODE_USING_GOLDEN	libavcodec/vp3.c	71;"	d	file:
MODE_WEBM	libavformat/matroskaenc.c	74;"	d	file:
MONO	libavcodec/cook.c	62;"	d	file:
MOOV_ATOM	tools/qt-faststart.c	62;"	d	file:
MOTION_BLOCK	libavcodec/bink.c	/^    MOTION_BLOCK,   \/\/\/< block is copied from previous frame with some offset$/;"	e	enum:BlockTypes	file:
MOTION_MARKER	libavcodec/mpeg4video.h	52;"	d
MOV	libavfilter/x86/yadif_template.c	23;"	d	file:
MOV	libavfilter/x86/yadif_template.c	252;"	d	file:
MOV	libavfilter/x86/yadif_template.c	36;"	d	file:
MOVAtom	libavformat/isom.h	/^} MOVAtom;$/;"	t	typeref:struct:__anon467
MOVContext	libavformat/isom.h	/^typedef struct MOVContext {$/;"	s
MOVContext	libavformat/isom.h	/^} MOVContext;$/;"	t	typeref:struct:MOVContext
MOVDref	libavformat/isom.h	/^} MOVDref;$/;"	t	typeref:struct:__anon466
MOVE_TAG	libavformat/wc3movie.c	35;"	d	file:
MOVFragment	libavformat/isom.h	/^} MOVFragment;$/;"	t	typeref:struct:__anon468
MOVI_TAG	libavformat/4xm.c	38;"	d	file:
MOVIentry	libavformat/movenc.h	/^typedef struct MOVIentry {$/;"	s
MOVIentry	libavformat/movenc.h	/^} MOVIentry;$/;"	t	typeref:struct:MOVIentry
MOVIndex	libavformat/movenc.h	/^typedef struct MOVIndex {$/;"	s
MOVMuxContext	libavformat/movenc.h	/^typedef struct MOVMuxContext {$/;"	s
MOVMuxContext	libavformat/movenc.h	/^} MOVMuxContext;$/;"	t	typeref:struct:MOVMuxContext
MOVNTQ	libswscale/x86/rgb2rgb_template.c	30;"	d	file:
MOVNTQ	libswscale/x86/rgb2rgb_template.c	53;"	d	file:
MOVNTQ	libswscale/x86/rgb2rgb_template.c	56;"	d	file:
MOVNTQ	libswscale/x86/swscale_template.c	22;"	d	file:
MOVNTQ	libswscale/x86/swscale_template.c	36;"	d	file:
MOVNTQ	libswscale/x86/yuv2rgb_template.c	24;"	d	file:
MOVNTQ	libswscale/x86/yuv2rgb_template.c	29;"	d	file:
MOVNTQ	libswscale/x86/yuv2rgb_template.c	32;"	d	file:
MOVParseTableEntry	libavformat/mov.c	/^typedef struct MOVParseTableEntry {$/;"	s	file:
MOVParseTableEntry	libavformat/mov.c	/^} MOVParseTableEntry;$/;"	t	typeref:struct:MOVParseTableEntry	file:
MOVQ	libavcodec/x86/mpegvideo_mmx_template.c	25;"	d	file:
MOVQ	libavcodec/x86/mpegvideo_mmx_template.c	35;"	d	file:
MOVQ	libavcodec/x86/mpegvideo_mmx_template.c	50;"	d	file:
MOVQ	libavfilter/x86/yadif_template.c	24;"	d	file:
MOVQ	libavfilter/x86/yadif_template.c	253;"	d	file:
MOVQ	libavfilter/x86/yadif_template.c	37;"	d	file:
MOVQU	libavfilter/x86/yadif_template.c	254;"	d	file:
MOVQU	libavfilter/x86/yadif_template.c	25;"	d	file:
MOVQU	libavfilter/x86/yadif_template.c	38;"	d	file:
MOVQ_BFE	libavcodec/x86/dsputil_mmx.c	88;"	d	file:
MOVQ_BONE	libavcodec/x86/dsputil_mmx.c	94;"	d	file:
MOVQ_BONE	libavcodec/x86/dsputil_mmx.c	99;"	d	file:
MOVQ_WONE	libavcodec/x86/dsputil_mmx.h	182;"	d
MOVQ_WTWO	libavcodec/x86/dsputil_mmx.c	105;"	d	file:
MOVQ_WTWO	libavcodec/x86/dsputil_mmx.c	95;"	d	file:
MOVQ_ZERO	libavcodec/x86/dsputil_mmx.c	86;"	d	file:
MOVStreamContext	libavformat/isom.h	/^typedef struct MOVStreamContext {$/;"	s
MOVStreamContext	libavformat/isom.h	/^} MOVStreamContext;$/;"	t	typeref:struct:MOVStreamContext
MOVStsc	libavformat/isom.h	/^} MOVStsc;$/;"	t	typeref:struct:__anon465
MOVStts	libavformat/isom.h	/^} MOVStts;$/;"	t	typeref:struct:__anon464
MOVTrack	libavformat/movenc.h	/^} MOVTrack;$/;"	t	typeref:struct:MOVIndex
MOVTrackExt	libavformat/isom.h	/^} MOVTrackExt;$/;"	t	typeref:struct:__anon469
MOV_32_ONLY	libavcodec/x86/idct_sse2_xvid.c	121;"	d	file:
MOV_32_ONLY	libavcodec/x86/idct_sse2_xvid.c	141;"	d	file:
MOV_INDEX_CLUSTER_SIZE	libavformat/movenc.h	29;"	d
MOV_PARTIAL_SYNC_SAMPLE	libavformat/movenc.h	50;"	d
MOV_SYNC_SAMPLE	libavformat/movenc.h	49;"	d
MOV_TIMESCALE	libavformat/movenc.h	30;"	d
MOV_TRACK_CTTS	libavformat/movenc.h	77;"	d
MOV_TRACK_STPS	libavformat/movenc.h	78;"	d
MP3Context	libavformat/mp3enc.c	/^typedef struct MP3Context {$/;"	s	file:
MP3Context	libavformat/mp3enc.c	/^} MP3Context;$/;"	t	typeref:struct:MP3Context	file:
MP3On4DecodeContext	libavcodec/mpegaudiodec.c	/^typedef struct MP3On4DecodeContext {$/;"	s	file:
MP3On4DecodeContext	libavcodec/mpegaudiodec.c	/^} MP3On4DecodeContext;$/;"	t	typeref:struct:MP3On4DecodeContext	file:
MP3_MASK	libavcodec/mpegaudiodecheader.h	32;"	d
MP3_PACKET_SIZE	libavformat/mp3dec.c	163;"	d	file:
MP3lame_encode_close	libavcodec/libmp3lame.c	/^static av_cold int MP3lame_encode_close(AVCodecContext *avctx)$/;"	f	file:
MP3lame_encode_frame	libavcodec/libmp3lame.c	/^static int MP3lame_encode_frame(AVCodecContext *avctx,$/;"	f	file:
MP3lame_encode_init	libavcodec/libmp3lame.c	/^static av_cold int MP3lame_encode_init(AVCodecContext *avctx)$/;"	f	file:
MP4DecConfigDescrTag	libavformat/isom.h	152;"	d
MP4DecSpecificDescrTag	libavformat/isom.h	153;"	d
MP4ESDescrTag	libavformat/isom.h	151;"	d
MP4IODescrTag	libavformat/isom.h	150;"	d
MPADSPContext	libavcodec/mpegaudiodsp.h	/^typedef struct MPADSPContext {$/;"	s
MPADSPContext	libavcodec/mpegaudiodsp.h	/^} MPADSPContext;$/;"	t	typeref:struct:MPADSPContext
MPADecodeContext	libavcodec/mpegaudiodec.c	/^typedef struct MPADecodeContext {$/;"	s	file:
MPADecodeContext	libavcodec/mpegaudiodec.c	/^} MPADecodeContext;$/;"	t	typeref:struct:MPADecodeContext	file:
MPADecodeHeader	libavcodec/mpegaudiodecheader.h	/^typedef struct MPADecodeHeader {$/;"	s
MPADecodeHeader	libavcodec/mpegaudiodecheader.h	/^} MPADecodeHeader;$/;"	t	typeref:struct:MPADecodeHeader
MPA_DECODE_HEADER	libavcodec/mpegaudiodecheader.h	34;"	d
MPA_DUAL	libavcodec/mpegaudio.h	47;"	d
MPA_FRAME_SIZE	libavcodec/mpegaudio.h	36;"	d
MPA_HEADER_SIZE	libavcodec/mpegaudio_parser.c	34;"	d	file:
MPA_INT	libavcodec/mpegaudio.h	/^typedef float MPA_INT;$/;"	t
MPA_INT	libavcodec/mpegaudio.h	/^typedef int16_t MPA_INT;$/;"	t
MPA_INT	libavcodec/mpegaudio.h	/^typedef int32_t MPA_INT;$/;"	t
MPA_JSTEREO	libavcodec/mpegaudio.h	46;"	d
MPA_MAX_CHANNELS	libavcodec/mpegaudio.h	41;"	d
MPA_MAX_CODED_FRAME_SIZE	libavcodec/mpegaudio.h	39;"	d
MPA_MONO	libavcodec/mpegaudio.h	48;"	d
MPA_STEREO	libavcodec/mpegaudio.h	45;"	d
MPA_encode_close	libavcodec/mpegaudioenc.c	/^static av_cold int MPA_encode_close(AVCodecContext *avctx)$/;"	f	file:
MPA_encode_frame	libavcodec/mpegaudioenc.c	/^static int MPA_encode_frame(AVCodecContext *avctx,$/;"	f	file:
MPA_encode_init	libavcodec/mpegaudioenc.c	/^static av_cold int MPA_encode_init(AVCodecContext *avctx)$/;"	f	file:
MPC7_DSCF_BITS	libavcodec/mpc7data.h	40;"	d
MPC7_DSCF_SIZE	libavcodec/mpc7data.h	39;"	d
MPC7_HDR_BITS	libavcodec/mpc7data.h	47;"	d
MPC7_HDR_SIZE	libavcodec/mpc7data.h	46;"	d
MPC7_QUANT_VLC_TABLES	libavcodec/mpc7data.h	53;"	d
MPC7_SCFI_BITS	libavcodec/mpc7data.h	34;"	d
MPC7_SCFI_SIZE	libavcodec/mpc7data.h	33;"	d
MPC8_BANDS_BITS	libavcodec/mpc8huff.h	28;"	d
MPC8_BANDS_SIZE	libavcodec/mpc8huff.h	27;"	d
MPC8_DSCF0_BITS	libavcodec/mpc8huff.h	70;"	d
MPC8_DSCF0_SIZE	libavcodec/mpc8huff.h	69;"	d
MPC8_DSCF1_BITS	libavcodec/mpc8huff.h	95;"	d
MPC8_DSCF1_SIZE	libavcodec/mpc8huff.h	94;"	d
MPC8_Q1_BITS	libavcodec/mpc8huff.h	149;"	d
MPC8_Q1_SIZE	libavcodec/mpc8huff.h	148;"	d
MPC8_Q2_BITS	libavcodec/mpc8huff.h	235;"	d
MPC8_Q2_SIZE	libavcodec/mpc8huff.h	234;"	d
MPC8_Q3_BITS	libavcodec/mpc8huff.h	315;"	d
MPC8_Q3_OFFSET	libavcodec/mpc8huff.h	316;"	d
MPC8_Q3_SIZE	libavcodec/mpc8huff.h	314;"	d
MPC8_Q4_BITS	libavcodec/mpc8huff.h	347;"	d
MPC8_Q4_OFFSET	libavcodec/mpc8huff.h	348;"	d
MPC8_Q4_SIZE	libavcodec/mpc8huff.h	346;"	d
MPC8_Q5_BITS	libavcodec/mpc8huff.h	391;"	d
MPC8_Q5_OFFSET	libavcodec/mpc8huff.h	392;"	d
MPC8_Q5_SIZE	libavcodec/mpc8huff.h	390;"	d
MPC8_Q6_BITS	libavcodec/mpc8huff.h	416;"	d
MPC8_Q6_OFFSET	libavcodec/mpc8huff.h	417;"	d
MPC8_Q6_SIZE	libavcodec/mpc8huff.h	415;"	d
MPC8_Q7_BITS	libavcodec/mpc8huff.h	449;"	d
MPC8_Q7_OFFSET	libavcodec/mpc8huff.h	450;"	d
MPC8_Q7_SIZE	libavcodec/mpc8huff.h	448;"	d
MPC8_Q8_BITS	libavcodec/mpc8huff.h	498;"	d
MPC8_Q8_OFFSET	libavcodec/mpc8huff.h	499;"	d
MPC8_Q8_SIZE	libavcodec/mpc8huff.h	497;"	d
MPC8_Q9UP_BITS	libavcodec/mpc8huff.h	163;"	d
MPC8_Q9UP_SIZE	libavcodec/mpc8huff.h	162;"	d
MPC8_RES_BITS	libavcodec/mpc8huff.h	121;"	d
MPC8_RES_SIZE	libavcodec/mpc8huff.h	120;"	d
MPC8_SCFI0_BITS	libavcodec/mpc8huff.h	46;"	d
MPC8_SCFI0_SIZE	libavcodec/mpc8huff.h	45;"	d
MPC8_SCFI1_BITS	libavcodec/mpc8huff.h	56;"	d
MPC8_SCFI1_SIZE	libavcodec/mpc8huff.h	55;"	d
MPCContext	libavcodec/mpc.h	/^} MPCContext;$/;"	t	typeref:struct:__anon179
MPCContext	libavformat/mpc.c	/^} MPCContext;$/;"	t	typeref:struct:__anon376	file:
MPCContext	libavformat/mpc8.c	/^} MPCContext;$/;"	t	typeref:struct:__anon398	file:
MPCFrame	libavformat/mpc.c	/^}MPCFrame;$/;"	t	typeref:struct:__anon375	file:
MPCPacketTags	libavformat/mpc8.c	/^enum MPCPacketTags{$/;"	g	file:
MPC_FRAMESIZE	libavformat/mpc.c	28;"	d	file:
MPC_FRAME_SIZE	libavcodec/mpc.h	41;"	d
MPC_FRAME_SIZE	libavcodec/mpc7.c	40;"	d	file:
MPCh_TAG	libavformat/electronicarts.c	52;"	d	file:
MPContext	libavfilter/vf_mp.c	/^} MPContext;$/;"	t	typeref:struct:__anon47	file:
MPEG4AudioConfig	libavcodec/mpeg4audio.h	/^} MPEG4AudioConfig;$/;"	t	typeref:struct:__anon208
MPEGTS_HEADER	libavformat/mpegts.c	/^    MPEGTS_HEADER = 0,$/;"	e	enum:MpegTSState	file:
MPEGTS_PAYLOAD	libavformat/mpegts.c	/^    MPEGTS_PAYLOAD,$/;"	e	enum:MpegTSState	file:
MPEGTS_PES	libavformat/mpegts.c	/^    MPEGTS_PES,$/;"	e	enum:MpegTSFilterType	file:
MPEGTS_PESHEADER	libavformat/mpegts.c	/^    MPEGTS_PESHEADER,$/;"	e	enum:MpegTSState	file:
MPEGTS_PESHEADER_FILL	libavformat/mpegts.c	/^    MPEGTS_PESHEADER_FILL,$/;"	e	enum:MpegTSState	file:
MPEGTS_SECTION	libavformat/mpegts.c	/^    MPEGTS_SECTION,$/;"	e	enum:MpegTSFilterType	file:
MPEGTS_SKIP	libavformat/mpegts.c	/^    MPEGTS_SKIP,$/;"	e	enum:MpegTSState	file:
MPEG_BUF_SIZE	libavcodec/mpegvideo.h	49;"	d
MPLAYER_CPUDETECT_H	libavfilter/libmpcodecs/cpudetect.h	20;"	d
MPLAYER_FASTMEMCPY_H	libavfilter/libmpcodecs/libvo/fastmemcpy.h	20;"	d
MPLAYER_HELP_MP_H	libavfilter/libmpcodecs/help_mp.h	5;"	d
MPLAYER_IMG_FORMAT_H	libavfilter/libmpcodecs/img_format.h	20;"	d
MPLAYER_MPBSWAP_H	libavfilter/libmpcodecs/mpbswap.h	20;"	d
MPLAYER_MPC_INFO_H	libavfilter/libmpcodecs/mpc_info.h	20;"	d
MPLAYER_MP_IMAGE_H	libavfilter/libmpcodecs/mp_image.h	20;"	d
MPLAYER_MP_MSG_H	libavfilter/libmpcodecs/mp_msg.h	20;"	d
MPLAYER_PULLUP_H	libavfilter/libmpcodecs/pullup.h	20;"	d
MPLAYER_VD_FFMPEG_H	libavfilter/libmpcodecs/vd_ffmpeg.h	20;"	d
MPLAYER_VFCAP_H	libavfilter/libmpcodecs/vfcap.h	21;"	d
MPLAYER_VF_H	libavfilter/libmpcodecs/vf.h	20;"	d
MPLAYER_VF_SCALE_H	libavfilter/libmpcodecs/vf_scale.h	20;"	d
MPLAYER_VIDEO_OUT_H	libavfilter/libmpcodecs/libvo/video_out.h	24;"	d
MPV_common_defaults	libavcodec/mpegvideo.c	/^void MPV_common_defaults(MpegEncContext *s){$/;"	f
MPV_common_end	libavcodec/mpegvideo.c	/^void MPV_common_end(MpegEncContext *s)$/;"	f
MPV_common_init	libavcodec/mpegvideo.c	/^av_cold int MPV_common_init(MpegEncContext *s)$/;"	f
MPV_common_init_altivec	libavcodec/ppc/mpegvideo_altivec.c	/^void MPV_common_init_altivec(MpegEncContext *s)$/;"	f
MPV_common_init_arm	libavcodec/arm/mpegvideo_arm.c	/^void MPV_common_init_arm(MpegEncContext *s)$/;"	f
MPV_common_init_armv5te	libavcodec/arm/mpegvideo_armv5te.c	/^void MPV_common_init_armv5te(MpegEncContext *s)$/;"	f
MPV_common_init_axp	libavcodec/alpha/mpegvideo_alpha.c	/^void MPV_common_init_axp(MpegEncContext *s)$/;"	f
MPV_common_init_bfin	libavcodec/bfin/mpegvideo_bfin.c	/^void MPV_common_init_bfin (MpegEncContext *s)$/;"	f
MPV_common_init_iwmmxt	libavcodec/arm/mpegvideo_iwmmxt.c	/^void MPV_common_init_iwmmxt(MpegEncContext *s)$/;"	f
MPV_common_init_mlib	libavcodec/mlib/dsputil_mlib.c	/^void MPV_common_init_mlib(MpegEncContext *s)$/;"	f
MPV_common_init_mmi	libavcodec/ps2/mpegvideo_mmi.c	/^void MPV_common_init_mmi(MpegEncContext *s)$/;"	f
MPV_common_init_mmx	libavcodec/x86/mpegvideo_mmx.c	/^void MPV_common_init_mmx(MpegEncContext *s)$/;"	f
MPV_decode_defaults	libavcodec/mpegvideo.c	/^void MPV_decode_defaults(MpegEncContext *s){$/;"	f
MPV_decode_mb	libavcodec/mpegvideo.c	/^void MPV_decode_mb(MpegEncContext *s, DCTELEM block[12][64]){$/;"	f
MPV_decode_mb_internal	libavcodec/mpegvideo.c	/^void MPV_decode_mb_internal(MpegEncContext *s, DCTELEM block[12][64],$/;"	f	file:
MPV_encode_defaults	libavcodec/mpegvideo_enc.c	/^static void MPV_encode_defaults(MpegEncContext *s){$/;"	f	file:
MPV_encode_end	libavcodec/mpegvideo_enc.c	/^av_cold int MPV_encode_end(AVCodecContext *avctx)$/;"	f
MPV_encode_init	libavcodec/mpegvideo_enc.c	/^av_cold int MPV_encode_init(AVCodecContext *avctx)$/;"	f
MPV_encode_picture	libavcodec/mpegvideo_enc.c	/^int MPV_encode_picture(AVCodecContext *avctx,$/;"	f
MPV_frame_end	libavcodec/mpegvideo.c	/^void MPV_frame_end(MpegEncContext *s)$/;"	f
MPV_frame_start	libavcodec/mpegvideo.c	/^int MPV_frame_start(MpegEncContext *s, AVCodecContext *avctx)$/;"	f
MPV_lowest_referenced_row	libavcodec/mpegvideo.c	/^int MPV_lowest_referenced_row(MpegEncContext *s, int dir)$/;"	f
MPV_motion	libavcodec/mpegvideo_common.h	/^static inline void MPV_motion(MpegEncContext *s,$/;"	f
MPV_motion_internal	libavcodec/mpegvideo_common.h	/^static av_always_inline void MPV_motion_internal(MpegEncContext *s,$/;"	f
MPV_motion_lowres	libavcodec/mpegvideo.c	/^static inline void MPV_motion_lowres(MpegEncContext *s,$/;"	f	file:
MPV_report_decode_progress	libavcodec/mpegvideo.c	/^void MPV_report_decode_progress(MpegEncContext *s)$/;"	f
MP_IMGFIELD_BOTTOM	libavfilter/libmpcodecs/mp_image.h	113;"	d
MP_IMGFIELD_INTERLACED	libavfilter/libmpcodecs/mp_image.h	114;"	d
MP_IMGFIELD_ORDERED	libavfilter/libmpcodecs/mp_image.h	109;"	d
MP_IMGFIELD_REPEAT_FIRST	libavfilter/libmpcodecs/mp_image.h	111;"	d
MP_IMGFIELD_TOP	libavfilter/libmpcodecs/mp_image.h	112;"	d
MP_IMGFIELD_TOP_FIRST	libavfilter/libmpcodecs/mp_image.h	110;"	d
MP_IMGFLAGMASK_COLORS	libavfilter/libmpcodecs/mp_image.h	75;"	d
MP_IMGFLAGMASK_RESTRICTIONS	libavfilter/libmpcodecs/mp_image.h	63;"	d
MP_IMGFLAG_ACCEPT_ALIGNED_STRIDE	libavfilter/libmpcodecs/mp_image.h	50;"	d
MP_IMGFLAG_ACCEPT_STRIDE	libavfilter/libmpcodecs/mp_image.h	54;"	d
MP_IMGFLAG_ACCEPT_WIDTH	libavfilter/libmpcodecs/mp_image.h	56;"	d
MP_IMGFLAG_ALLOCATED	libavfilter/libmpcodecs/mp_image.h	84;"	d
MP_IMGFLAG_COMMON_PLANE	libavfilter/libmpcodecs/mp_image.h	61;"	d
MP_IMGFLAG_COMMON_STRIDE	libavfilter/libmpcodecs/mp_image.h	59;"	d
MP_IMGFLAG_DIRECT	libavfilter/libmpcodecs/mp_image.h	82;"	d
MP_IMGFLAG_DRAW_CALLBACK	libavfilter/libmpcodecs/mp_image.h	80;"	d
MP_IMGFLAG_PLANAR	libavfilter/libmpcodecs/mp_image.h	67;"	d
MP_IMGFLAG_PREFER_ALIGNED_STRIDE	libavfilter/libmpcodecs/mp_image.h	52;"	d
MP_IMGFLAG_PRESERVE	libavfilter/libmpcodecs/mp_image.h	44;"	d
MP_IMGFLAG_READABLE	libavfilter/libmpcodecs/mp_image.h	46;"	d
MP_IMGFLAG_RGB_PALETTE	libavfilter/libmpcodecs/mp_image.h	73;"	d
MP_IMGFLAG_SWAPPED	libavfilter/libmpcodecs/mp_image.h	71;"	d
MP_IMGFLAG_TYPE_DISPLAYED	libavfilter/libmpcodecs/mp_image.h	87;"	d
MP_IMGFLAG_YUV	libavfilter/libmpcodecs/mp_image.h	69;"	d
MP_IMGTYPE_EXPORT	libavfilter/libmpcodecs/mp_image.h	91;"	d
MP_IMGTYPE_INCOMPLETE	libavfilter/libmpcodecs/mp_image.h	105;"	d
MP_IMGTYPE_IP	libavfilter/libmpcodecs/mp_image.h	97;"	d
MP_IMGTYPE_IPB	libavfilter/libmpcodecs/mp_image.h	99;"	d
MP_IMGTYPE_NUMBERED	libavfilter/libmpcodecs/mp_image.h	101;"	d
MP_IMGTYPE_STATIC	libavfilter/libmpcodecs/mp_image.h	93;"	d
MP_IMGTYPE_TEMP	libavfilter/libmpcodecs/mp_image.h	95;"	d
MP_MAX_PLANES	libavfilter/libmpcodecs/mp_image.h	107;"	d
MP_NOPTS_VALUE	libavfilter/libmpcodecs/vf.h	118;"	d
MQC_CX_RL	libavcodec/mqc.h	34;"	d
MQC_CX_UNI	libavcodec/mqc.h	33;"	d
MSB_MASK	libavcodec/mlpdec.c	759;"	d	file:
MSG	common.mak	/^MSG    = $@$/;"	m
MSGL_DBG2	libavfilter/libmpcodecs/mp_msg.h	39;"	d
MSGL_DBG3	libavfilter/libmpcodecs/mp_msg.h	40;"	d
MSGL_DBG4	libavfilter/libmpcodecs/mp_msg.h	41;"	d
MSGL_DBG5	libavfilter/libmpcodecs/mp_msg.h	42;"	d
MSGL_ERR	libavfilter/libmpcodecs/mp_msg.h	33;"	d
MSGL_FATAL	libavfilter/libmpcodecs/mp_msg.h	32;"	d
MSGL_FIXME	libavfilter/libmpcodecs/mp_msg.h	44;"	d
MSGL_HINT	libavfilter/libmpcodecs/mp_msg.h	35;"	d
MSGL_INFO	libavfilter/libmpcodecs/mp_msg.h	36;"	d
MSGL_STATUS	libavfilter/libmpcodecs/mp_msg.h	37;"	d
MSGL_V	libavfilter/libmpcodecs/mp_msg.h	38;"	d
MSGL_WARN	libavfilter/libmpcodecs/mp_msg.h	34;"	d
MSGTR_ABOUT_Codecs_libs_contributions	libavfilter/libmpcodecs/help_mp.h	792;"	d
MSGTR_ABOUT_Contributors	libavfilter/libmpcodecs/help_mp.h	791;"	d
MSGTR_ABOUT_Skins	libavfilter/libmpcodecs/help_mp.h	794;"	d
MSGTR_ABOUT_Translations	libavfilter/libmpcodecs/help_mp.h	793;"	d
MSGTR_ABOUT_UHU	libavfilter/libmpcodecs/help_mp.h	790;"	d
MSGTR_ACMiniterror	libavfilter/libmpcodecs/help_mp.h	1602;"	d
MSGTR_ACodecFramecopy	libavfilter/libmpcodecs/help_mp.h	295;"	d
MSGTR_ADecoderInitFailed	libavfilter/libmpcodecs/help_mp.h	1629;"	d
MSGTR_ADecoderPreinitFailed	libavfilter/libmpcodecs/help_mp.h	1630;"	d
MSGTR_AF_FORMAT_UnknownFormat	libavfilter/libmpcodecs/help_mp.h	1334;"	d
MSGTR_AF_LADSPA_AvailableLabels	libavfilter/libmpcodecs/help_mp.h	1318;"	d
MSGTR_AF_LADSPA_ErrControlAbove	libavfilter/libmpcodecs/help_mp.h	1331;"	d
MSGTR_AF_LADSPA_ErrControlBelow	libavfilter/libmpcodecs/help_mp.h	1330;"	d
MSGTR_AF_LADSPA_ErrFailedToLoad	libavfilter/libmpcodecs/help_mp.h	1323;"	d
MSGTR_AF_LADSPA_ErrInOutDiff	libavfilter/libmpcodecs/help_mp.h	1322;"	d
MSGTR_AF_LADSPA_ErrLabelNotFound	libavfilter/libmpcodecs/help_mp.h	1325;"	d
MSGTR_AF_LADSPA_ErrMultiChannel	libavfilter/libmpcodecs/help_mp.h	1320;"	d
MSGTR_AF_LADSPA_ErrNoDescriptor	libavfilter/libmpcodecs/help_mp.h	1324;"	d
MSGTR_AF_LADSPA_ErrNoLabel	libavfilter/libmpcodecs/help_mp.h	1328;"	d
MSGTR_AF_LADSPA_ErrNoLibFile	libavfilter/libmpcodecs/help_mp.h	1327;"	d
MSGTR_AF_LADSPA_ErrNoOutputs	libavfilter/libmpcodecs/help_mp.h	1321;"	d
MSGTR_AF_LADSPA_ErrNoSuboptions	libavfilter/libmpcodecs/help_mp.h	1326;"	d
MSGTR_AF_LADSPA_ErrNotEnoughControls	libavfilter/libmpcodecs/help_mp.h	1329;"	d
MSGTR_AF_LADSPA_WarnNoInputs	libavfilter/libmpcodecs/help_mp.h	1319;"	d
MSGTR_AF_ValueOutOfRange	libavfilter/libmpcodecs/help_mp.h	1315;"	d
MSGTR_AO_ALSA5_CantSetChan	libavfilter/libmpcodecs/help_mp.h	1241;"	d
MSGTR_AO_ALSA5_CantSetParms	libavfilter/libmpcodecs/help_mp.h	1240;"	d
MSGTR_AO_ALSA5_ChanPrepareError	libavfilter/libmpcodecs/help_mp.h	1242;"	d
MSGTR_AO_ALSA5_DrainError	libavfilter/libmpcodecs/help_mp.h	1243;"	d
MSGTR_AO_ALSA5_FlushError	libavfilter/libmpcodecs/help_mp.h	1244;"	d
MSGTR_AO_ALSA5_InitInfo	libavfilter/libmpcodecs/help_mp.h	1233;"	d
MSGTR_AO_ALSA5_InvalidFormatReq	libavfilter/libmpcodecs/help_mp.h	1235;"	d
MSGTR_AO_ALSA5_OutPutError	libavfilter/libmpcodecs/help_mp.h	1255;"	d
MSGTR_AO_ALSA5_PauseDrainError	libavfilter/libmpcodecs/help_mp.h	1249;"	d
MSGTR_AO_ALSA5_PauseFlushError	libavfilter/libmpcodecs/help_mp.h	1250;"	d
MSGTR_AO_ALSA5_PcmChanInfoError	libavfilter/libmpcodecs/help_mp.h	1239;"	d
MSGTR_AO_ALSA5_PcmCloseError	libavfilter/libmpcodecs/help_mp.h	1245;"	d
MSGTR_AO_ALSA5_PcmInfoError	libavfilter/libmpcodecs/help_mp.h	1237;"	d
MSGTR_AO_ALSA5_PlayBackError	libavfilter/libmpcodecs/help_mp.h	1236;"	d
MSGTR_AO_ALSA5_PlaybackPrepareError	libavfilter/libmpcodecs/help_mp.h	1253;"	d
MSGTR_AO_ALSA5_ResetChanPrepareError	libavfilter/libmpcodecs/help_mp.h	1248;"	d
MSGTR_AO_ALSA5_ResetDrainError	libavfilter/libmpcodecs/help_mp.h	1246;"	d
MSGTR_AO_ALSA5_ResetFlushError	libavfilter/libmpcodecs/help_mp.h	1247;"	d
MSGTR_AO_ALSA5_ResumePrepareError	libavfilter/libmpcodecs/help_mp.h	1251;"	d
MSGTR_AO_ALSA5_SoundCardNotFound	libavfilter/libmpcodecs/help_mp.h	1234;"	d
MSGTR_AO_ALSA5_SoundcardsFound	libavfilter/libmpcodecs/help_mp.h	1238;"	d
MSGTR_AO_ALSA5_Underrun	libavfilter/libmpcodecs/help_mp.h	1252;"	d
MSGTR_AO_ALSA5_WriteErrorAfterReset	libavfilter/libmpcodecs/help_mp.h	1254;"	d
MSGTR_AO_ALSA9_1x_Removed	libavfilter/libmpcodecs/help_mp.h	1159;"	d
MSGTR_AO_ALSA_CannotGetPcmStatus	libavfilter/libmpcodecs/help_mp.h	1306;"	d
MSGTR_AO_ALSA_ChannelsNotSupported	libavfilter/libmpcodecs/help_mp.h	1274;"	d
MSGTR_AO_ALSA_CommandlineHelp	libavfilter/libmpcodecs/help_mp.h	1266;"	d
MSGTR_AO_ALSA_DeviceConfigurationError	libavfilter/libmpcodecs/help_mp.h	1302;"	d
MSGTR_AO_ALSA_ErrorSetBlockMode	libavfilter/libmpcodecs/help_mp.h	1277;"	d
MSGTR_AO_ALSA_ErrorSettingLeftChannel	libavfilter/libmpcodecs/help_mp.h	1264;"	d
MSGTR_AO_ALSA_ErrorSettingRightChannel	libavfilter/libmpcodecs/help_mp.h	1265;"	d
MSGTR_AO_ALSA_FormatNotSupportedByHardware	libavfilter/libmpcodecs/help_mp.h	1280;"	d
MSGTR_AO_ALSA_InvalidMixerIndexDefaultingToZero	libavfilter/libmpcodecs/help_mp.h	1258;"	d
MSGTR_AO_ALSA_MixerAttachError	libavfilter/libmpcodecs/help_mp.h	1260;"	d
MSGTR_AO_ALSA_MixerLoadError	libavfilter/libmpcodecs/help_mp.h	1262;"	d
MSGTR_AO_ALSA_MixerOpenError	libavfilter/libmpcodecs/help_mp.h	1259;"	d
MSGTR_AO_ALSA_MixerRegisterError	libavfilter/libmpcodecs/help_mp.h	1261;"	d
MSGTR_AO_ALSA_NoHandlerDefined	libavfilter/libmpcodecs/help_mp.h	1297;"	d
MSGTR_AO_ALSA_OpenInNonblockModeFailed	libavfilter/libmpcodecs/help_mp.h	1275;"	d
MSGTR_AO_ALSA_PcmCloseError	libavfilter/libmpcodecs/help_mp.h	1296;"	d
MSGTR_AO_ALSA_PcmDropError	libavfilter/libmpcodecs/help_mp.h	1300;"	d
MSGTR_AO_ALSA_PcmInSuspendModeTryingResume	libavfilter/libmpcodecs/help_mp.h	1303;"	d
MSGTR_AO_ALSA_PcmPauseError	libavfilter/libmpcodecs/help_mp.h	1299;"	d
MSGTR_AO_ALSA_PcmPrepareError	libavfilter/libmpcodecs/help_mp.h	1298;"	d
MSGTR_AO_ALSA_PcmResumeError	libavfilter/libmpcodecs/help_mp.h	1301;"	d
MSGTR_AO_ALSA_PlaybackOpenError	libavfilter/libmpcodecs/help_mp.h	1276;"	d
MSGTR_AO_ALSA_TryingToResetSoundcard	libavfilter/libmpcodecs/help_mp.h	1305;"	d
MSGTR_AO_ALSA_UnableToDisableResampling	libavfilter/libmpcodecs/help_mp.h	1283;"	d
MSGTR_AO_ALSA_UnableToFindSimpleControl	libavfilter/libmpcodecs/help_mp.h	1263;"	d
MSGTR_AO_ALSA_UnableToGetBoundary	libavfilter/libmpcodecs/help_mp.h	1292;"	d
MSGTR_AO_ALSA_UnableToGetBufferSize	libavfilter/libmpcodecs/help_mp.h	1289;"	d
MSGTR_AO_ALSA_UnableToGetInitialParameters	libavfilter/libmpcodecs/help_mp.h	1278;"	d
MSGTR_AO_ALSA_UnableToGetPeriodSize	libavfilter/libmpcodecs/help_mp.h	1286;"	d
MSGTR_AO_ALSA_UnableToGetSwParameters	libavfilter/libmpcodecs/help_mp.h	1290;"	d
MSGTR_AO_ALSA_UnableToSetAccessType	libavfilter/libmpcodecs/help_mp.h	1279;"	d
MSGTR_AO_ALSA_UnableToSetBufferTimeNear	libavfilter/libmpcodecs/help_mp.h	1285;"	d
MSGTR_AO_ALSA_UnableToSetChannels	libavfilter/libmpcodecs/help_mp.h	1282;"	d
MSGTR_AO_ALSA_UnableToSetFormat	libavfilter/libmpcodecs/help_mp.h	1281;"	d
MSGTR_AO_ALSA_UnableToSetHwParameters	libavfilter/libmpcodecs/help_mp.h	1288;"	d
MSGTR_AO_ALSA_UnableToSetPeriods	libavfilter/libmpcodecs/help_mp.h	1287;"	d
MSGTR_AO_ALSA_UnableToSetSamplerate2	libavfilter/libmpcodecs/help_mp.h	1284;"	d
MSGTR_AO_ALSA_UnableToSetSilenceSize	libavfilter/libmpcodecs/help_mp.h	1295;"	d
MSGTR_AO_ALSA_UnableToSetStartThreshold	libavfilter/libmpcodecs/help_mp.h	1293;"	d
MSGTR_AO_ALSA_UnableToSetStopThreshold	libavfilter/libmpcodecs/help_mp.h	1294;"	d
MSGTR_AO_ALSA_UnableToSetSwParameters	libavfilter/libmpcodecs/help_mp.h	1291;"	d
MSGTR_AO_ALSA_WriteError	libavfilter/libmpcodecs/help_mp.h	1304;"	d
MSGTR_AO_ARTS_BufferSize	libavfilter/libmpcodecs/help_mp.h	1182;"	d
MSGTR_AO_ARTS_CantInit	libavfilter/libmpcodecs/help_mp.h	1178;"	d
MSGTR_AO_ARTS_CantOpenStream	libavfilter/libmpcodecs/help_mp.h	1180;"	d
MSGTR_AO_ARTS_ServerConnect	libavfilter/libmpcodecs/help_mp.h	1179;"	d
MSGTR_AO_ARTS_StreamOpen	libavfilter/libmpcodecs/help_mp.h	1181;"	d
MSGTR_AO_DXR2_SetVolFailed	libavfilter/libmpcodecs/help_mp.h	1185;"	d
MSGTR_AO_DXR2_UnsupSamplerate	libavfilter/libmpcodecs/help_mp.h	1186;"	d
MSGTR_AO_ESD_CantOpenPBStream	libavfilter/libmpcodecs/help_mp.h	1191;"	d
MSGTR_AO_ESD_CantOpenSound	libavfilter/libmpcodecs/help_mp.h	1189;"	d
MSGTR_AO_ESD_LatencyInfo	libavfilter/libmpcodecs/help_mp.h	1190;"	d
MSGTR_AO_FailedInit	libavfilter/libmpcodecs/help_mp.h	1162;"	d
MSGTR_AO_MPEGPES_CantSetMixer	libavfilter/libmpcodecs/help_mp.h	1194;"	d
MSGTR_AO_MPEGPES_UnsupSamplerate	libavfilter/libmpcodecs/help_mp.h	1195;"	d
MSGTR_AO_NoSuchDriver	libavfilter/libmpcodecs/help_mp.h	1161;"	d
MSGTR_AO_OSS_CantMakeFd	libavfilter/libmpcodecs/help_mp.h	1169;"	d
MSGTR_AO_OSS_CantOpenDev	libavfilter/libmpcodecs/help_mp.h	1168;"	d
MSGTR_AO_OSS_CantOpenMixer	libavfilter/libmpcodecs/help_mp.h	1166;"	d
MSGTR_AO_OSS_CantReopen	libavfilter/libmpcodecs/help_mp.h	1174;"	d
MSGTR_AO_OSS_CantSet	libavfilter/libmpcodecs/help_mp.h	1170;"	d
MSGTR_AO_OSS_CantSetChans	libavfilter/libmpcodecs/help_mp.h	1171;"	d
MSGTR_AO_OSS_CantUseGetospace	libavfilter/libmpcodecs/help_mp.h	1172;"	d
MSGTR_AO_OSS_CantUseSelect	libavfilter/libmpcodecs/help_mp.h	1173;"	d
MSGTR_AO_OSS_ChanNotFound	libavfilter/libmpcodecs/help_mp.h	1167;"	d
MSGTR_AO_OSS_UnknownUnsupportedFormat	libavfilter/libmpcodecs/help_mp.h	1175;"	d
MSGTR_AO_PCM_CantOpenOutputFile	libavfilter/libmpcodecs/help_mp.h	1200;"	d
MSGTR_AO_PCM_FileInfo	libavfilter/libmpcodecs/help_mp.h	1198;"	d
MSGTR_AO_PCM_HintInfo	libavfilter/libmpcodecs/help_mp.h	1199;"	d
MSGTR_AO_PLUGIN_InvalidPlugin	libavfilter/libmpcodecs/help_mp.h	1309;"	d
MSGTR_AO_SDL_CantInit	libavfilter/libmpcodecs/help_mp.h	1206;"	d
MSGTR_AO_SDL_CantOpenAudio	libavfilter/libmpcodecs/help_mp.h	1207;"	d
MSGTR_AO_SDL_DriverInfo	libavfilter/libmpcodecs/help_mp.h	1204;"	d
MSGTR_AO_SDL_INFO	libavfilter/libmpcodecs/help_mp.h	1203;"	d
MSGTR_AO_SDL_UnsupportedAudioFmt	libavfilter/libmpcodecs/help_mp.h	1205;"	d
MSGTR_AO_SGI_CantGetParms	libavfilter/libmpcodecs/help_mp.h	1215;"	d
MSGTR_AO_SGI_CantSetAlRate	libavfilter/libmpcodecs/help_mp.h	1214;"	d
MSGTR_AO_SGI_CantSetParms_Samplerate	libavfilter/libmpcodecs/help_mp.h	1213;"	d
MSGTR_AO_SGI_INFO	libavfilter/libmpcodecs/help_mp.h	1210;"	d
MSGTR_AO_SGI_InitConfigError	libavfilter/libmpcodecs/help_mp.h	1217;"	d
MSGTR_AO_SGI_InitInfo	libavfilter/libmpcodecs/help_mp.h	1211;"	d
MSGTR_AO_SGI_InitOpenAudioFailed	libavfilter/libmpcodecs/help_mp.h	1218;"	d
MSGTR_AO_SGI_InvalidDevice	libavfilter/libmpcodecs/help_mp.h	1212;"	d
MSGTR_AO_SGI_PauseInfo	libavfilter/libmpcodecs/help_mp.h	1221;"	d
MSGTR_AO_SGI_Reset	libavfilter/libmpcodecs/help_mp.h	1220;"	d
MSGTR_AO_SGI_ResumeInfo	libavfilter/libmpcodecs/help_mp.h	1222;"	d
MSGTR_AO_SGI_SampleRateInfo	libavfilter/libmpcodecs/help_mp.h	1216;"	d
MSGTR_AO_SGI_Uninit	libavfilter/libmpcodecs/help_mp.h	1219;"	d
MSGTR_AO_SUN_CantOpenAudioDev	libavfilter/libmpcodecs/help_mp.h	1227;"	d
MSGTR_AO_SUN_CantReopenReset	libavfilter/libmpcodecs/help_mp.h	1230;"	d
MSGTR_AO_SUN_CantUseSelect	libavfilter/libmpcodecs/help_mp.h	1229;"	d
MSGTR_AO_SUN_RtscSetinfoFailed	libavfilter/libmpcodecs/help_mp.h	1225;"	d
MSGTR_AO_SUN_RtscWriteFailed	libavfilter/libmpcodecs/help_mp.h	1226;"	d
MSGTR_AO_SUN_UnsupSampleRate	libavfilter/libmpcodecs/help_mp.h	1228;"	d
MSGTR_AO_TryingEveryKnown	libavfilter/libmpcodecs/help_mp.h	1163;"	d
MSGTR_AO_TryingPreferredAudioDriver	libavfilter/libmpcodecs/help_mp.h	1160;"	d
MSGTR_ASFSearchingForAudioStream	libavfilter/libmpcodecs/help_mp.h	1443;"	d
MSGTR_AVDelayStatus	libavfilter/libmpcodecs/help_mp.h	249;"	d
MSGTR_About	libavfilter/libmpcodecs/help_mp.h	544;"	d
MSGTR_Add	libavfilter/libmpcodecs/help_mp.h	568;"	d
MSGTR_AddedSubtitleFile	libavfilter/libmpcodecs/help_mp.h	156;"	d
MSGTR_AddingVideoFilter	libavfilter/libmpcodecs/help_mp.h	812;"	d
MSGTR_AllocatingBytesForInputBuffer	libavfilter/libmpcodecs/help_mp.h	1631;"	d
MSGTR_AllocatingBytesForOutputBuffer	libavfilter/libmpcodecs/help_mp.h	1632;"	d
MSGTR_AudioCodecFamilyNotAvailableStr	libavfilter/libmpcodecs/help_mp.h	1620;"	d
MSGTR_AudioCopyFileMismatch	libavfilter/libmpcodecs/help_mp.h	282;"	d
MSGTR_AudioFileSelect	libavfilter/libmpcodecs/help_mp.h	548;"	d
MSGTR_AudioFilterChainPreinitError	libavfilter/libmpcodecs/help_mp.h	171;"	d
MSGTR_AudioID	libavfilter/libmpcodecs/help_mp.h	1460;"	d
MSGTR_AudioPreferences	libavfilter/libmpcodecs/help_mp.h	558;"	d
MSGTR_AudioStreamRedefined	libavfilter/libmpcodecs/help_mp.h	1401;"	d
MSGTR_AudioStreamResult	libavfilter/libmpcodecs/help_mp.h	291;"	d
MSGTR_AudioVideoCodecTotals	libavfilter/libmpcodecs/help_mp.h	502;"	d
MSGTR_AvailableAudioCodecs	libavfilter/libmpcodecs/help_mp.h	119;"	d
MSGTR_AvailableAudioFm	libavfilter/libmpcodecs/help_mp.h	121;"	d
MSGTR_AvailableAudioOutputDrivers	libavfilter/libmpcodecs/help_mp.h	118;"	d
MSGTR_AvailableFsType	libavfilter/libmpcodecs/help_mp.h	123;"	d
MSGTR_AvailableProfiles	libavfilter/libmpcodecs/help_mp.h	529;"	d
MSGTR_AvailableVideoCodecs	libavfilter/libmpcodecs/help_mp.h	120;"	d
MSGTR_AvailableVideoFm	libavfilter/libmpcodecs/help_mp.h	122;"	d
MSGTR_AvailableVideoOutputDrivers	libavfilter/libmpcodecs/help_mp.h	117;"	d
MSGTR_BadMpegSequHdr	libavfilter/libmpcodecs/help_mp.h	1608;"	d
MSGTR_BadMpegSequHdrEx	libavfilter/libmpcodecs/help_mp.h	1609;"	d
MSGTR_Balance	libavfilter/libmpcodecs/help_mp.h	244;"	d
MSGTR_BlurayNoDevice	libavfilter/libmpcodecs/help_mp.h	1980;"	d
MSGTR_BlurayNoTitles	libavfilter/libmpcodecs/help_mp.h	1981;"	d
MSGTR_BlurayOK	libavfilter/libmpcodecs/help_mp.h	1982;"	d
MSGTR_BorderStatus	libavfilter/libmpcodecs/help_mp.h	252;"	d
MSGTR_Bottom	libavfilter/libmpcodecs/help_mp.h	229;"	d
MSGTR_Brightness	libavfilter/libmpcodecs/help_mp.h	240;"	d
MSGTR_Browse	libavfilter/libmpcodecs/help_mp.h	573;"	d
MSGTR_BuildingAudioFilterChain	libavfilter/libmpcodecs/help_mp.h	1625;"	d
MSGTR_BuiltinCodecsConf	libavfilter/libmpcodecs/help_mp.h	73;"	d
MSGTR_CBRAudioByterate	libavfilter/libmpcodecs/help_mp.h	306;"	d
MSGTR_CBRPCMAudioSelected	libavfilter/libmpcodecs/help_mp.h	296;"	d
MSGTR_CacheFill	libavfilter/libmpcodecs/help_mp.h	1455;"	d
MSGTR_Cancel	libavfilter/libmpcodecs/help_mp.h	567;"	d
MSGTR_CannotAllocateBytes	libavfilter/libmpcodecs/help_mp.h	298;"	d
MSGTR_CannotFindColorspace	libavfilter/libmpcodecs/help_mp.h	1678;"	d
MSGTR_CannotInitAO	libavfilter/libmpcodecs/help_mp.h	85;"	d
MSGTR_CannotInitVO	libavfilter/libmpcodecs/help_mp.h	84;"	d
MSGTR_CannotInitializeMuxer	libavfilter/libmpcodecs/help_mp.h	1420;"	d
MSGTR_CannotMakePipe	libavfilter/libmpcodecs/help_mp.h	507;"	d
MSGTR_CannotOpenAudioStream	libavfilter/libmpcodecs/help_mp.h	1444;"	d
MSGTR_CannotOpenDemuxer	libavfilter/libmpcodecs/help_mp.h	268;"	d
MSGTR_CannotOpenFile_Device	libavfilter/libmpcodecs/help_mp.h	267;"	d
MSGTR_CannotOpenOutputFile	libavfilter/libmpcodecs/help_mp.h	271;"	d
MSGTR_CannotOpenSubtitlesStream	libavfilter/libmpcodecs/help_mp.h	1445;"	d
MSGTR_CannotReadMpegSequHdr	libavfilter/libmpcodecs/help_mp.h	1606;"	d
MSGTR_CannotReadMpegSequHdrEx	libavfilter/libmpcodecs/help_mp.h	1607;"	d
MSGTR_CannotReadVideoProperties	libavfilter/libmpcodecs/help_mp.h	125;"	d
MSGTR_CantAllocAudioBuf	libavfilter/libmpcodecs/help_mp.h	1612;"	d
MSGTR_CantAllocateComment	libavfilter/libmpcodecs/help_mp.h	491;"	d
MSGTR_CantCloseCodec	libavfilter/libmpcodecs/help_mp.h	1599;"	d
MSGTR_CantCopyAudioFormat	libavfilter/libmpcodecs/help_mp.h	427;"	d
MSGTR_CantFindAudioCodec	libavfilter/libmpcodecs/help_mp.h	81;"	d
MSGTR_CantFindVideoCodec	libavfilter/libmpcodecs/help_mp.h	83;"	d
MSGTR_CantGetMemoryForLine	libavfilter/libmpcodecs/help_mp.h	495;"	d
MSGTR_CantLoadFont	libavfilter/libmpcodecs/help_mp.h	74;"	d
MSGTR_CantLoadSub	libavfilter/libmpcodecs/help_mp.h	75;"	d
MSGTR_CantOpenBluray	libavfilter/libmpcodecs/help_mp.h	1907;"	d
MSGTR_CantOpenCodec	libavfilter/libmpcodecs/help_mp.h	1598;"	d
MSGTR_CantOpenDVD	libavfilter/libmpcodecs/help_mp.h	1908;"	d
MSGTR_CantOpenDumpfile	libavfilter/libmpcodecs/help_mp.h	77;"	d
MSGTR_CantOpenFileError	libavfilter/libmpcodecs/help_mp.h	494;"	d
MSGTR_CantOpenLibmenuFilterWithThisRootMenu	libavfilter/libmpcodecs/help_mp.h	170;"	d
MSGTR_CantReallocCodecsp	libavfilter/libmpcodecs/help_mp.h	496;"	d
MSGTR_CantSeekFile	libavfilter/libmpcodecs/help_mp.h	1434;"	d
MSGTR_CantSeekRawAVI	libavfilter/libmpcodecs/help_mp.h	1433;"	d
MSGTR_CantStrdupDLL	libavfilter/libmpcodecs/help_mp.h	501;"	d
MSGTR_CantStrdupDriver	libavfilter/libmpcodecs/help_mp.h	500;"	d
MSGTR_CantStrdupInfo	libavfilter/libmpcodecs/help_mp.h	499;"	d
MSGTR_CantStrdupName	libavfilter/libmpcodecs/help_mp.h	498;"	d
MSGTR_CdDevNotfound	libavfilter/libmpcodecs/help_mp.h	1896;"	d
MSGTR_Center	libavfilter/libmpcodecs/help_mp.h	230;"	d
MSGTR_Chapter	libavfilter/libmpcodecs/help_mp.h	562;"	d
MSGTR_Clear	libavfilter/libmpcodecs/help_mp.h	570;"	d
MSGTR_ClipInfo	libavfilter/libmpcodecs/help_mp.h	1450;"	d
MSGTR_CodecDefinitionIncorrect	libavfilter/libmpcodecs/help_mp.h	503;"	d
MSGTR_CodecDidNotSet	libavfilter/libmpcodecs/help_mp.h	1641;"	d
MSGTR_CodecLacksDriver	libavfilter/libmpcodecs/help_mp.h	488;"	d
MSGTR_CodecLacksFourcc	libavfilter/libmpcodecs/help_mp.h	487;"	d
MSGTR_CodecNameNotUnique	libavfilter/libmpcodecs/help_mp.h	497;"	d
MSGTR_CodecNeedsDLL	libavfilter/libmpcodecs/help_mp.h	489;"	d
MSGTR_CodecNeedsOutfmt	libavfilter/libmpcodecs/help_mp.h	490;"	d
MSGTR_CommandLine	libavfilter/libmpcodecs/help_mp.h	159;"	d
MSGTR_CompiledWithCPUExtensions	libavfilter/libmpcodecs/help_mp.h	116;"	d
MSGTR_CompiledWithRuntimeDetection	libavfilter/libmpcodecs/help_mp.h	115;"	d
MSGTR_Config	libavfilter/libmpcodecs/help_mp.h	571;"	d
MSGTR_ConfigDriver	libavfilter/libmpcodecs/help_mp.h	572;"	d
MSGTR_ConfigFileError	libavfilter/libmpcodecs/help_mp.h	414;"	d
MSGTR_ConfigFileReadError	libavfilter/libmpcodecs/help_mp.h	806;"	d
MSGTR_ConfigureEqualizer	libavfilter/libmpcodecs/help_mp.h	553;"	d
MSGTR_ConnToServer	libavfilter/libmpcodecs/help_mp.h	1900;"	d
MSGTR_Contrast	libavfilter/libmpcodecs/help_mp.h	241;"	d
MSGTR_CoreDumped	libavfilter/libmpcodecs/help_mp.h	78;"	d
MSGTR_CouldNotFindColorspace	libavfilter/libmpcodecs/help_mp.h	1642;"	d
MSGTR_CouldNotFindVideoFilter	libavfilter/libmpcodecs/help_mp.h	1675;"	d
MSGTR_CouldNotFindXScreenSaver	libavfilter/libmpcodecs/help_mp.h	1144;"	d
MSGTR_CouldNotOpenVideoFilter	libavfilter/libmpcodecs/help_mp.h	1676;"	d
MSGTR_CouldntAllocateLavcContext	libavfilter/libmpcodecs/help_mp.h	425;"	d
MSGTR_CouldntDetFNo	libavfilter/libmpcodecs/help_mp.h	1432;"	d
MSGTR_CouldntOpenCodec	libavfilter/libmpcodecs/help_mp.h	426;"	d
MSGTR_CreatingCfgFile	libavfilter/libmpcodecs/help_mp.h	72;"	d
MSGTR_DMOInitOK	libavfilter/libmpcodecs/help_mp.h	1649;"	d
MSGTR_DShowInitOK	libavfilter/libmpcodecs/help_mp.h	1648;"	d
MSGTR_DVDaudioChannel	libavfilter/libmpcodecs/help_mp.h	1971;"	d
MSGTR_DVDaudioStreamInfo	libavfilter/libmpcodecs/help_mp.h	1972;"	d
MSGTR_DVDinvalidAngle	libavfilter/libmpcodecs/help_mp.h	1966;"	d
MSGTR_DVDinvalidChapter	libavfilter/libmpcodecs/help_mp.h	1962;"	d
MSGTR_DVDinvalidChapterRange	libavfilter/libmpcodecs/help_mp.h	1963;"	d
MSGTR_DVDinvalidLastChapter	libavfilter/libmpcodecs/help_mp.h	1964;"	d
MSGTR_DVDinvalidTitle	libavfilter/libmpcodecs/help_mp.h	1960;"	d
MSGTR_DVDlimitFail	libavfilter/libmpcodecs/help_mp.h	1956;"	d
MSGTR_DVDlimitOk	libavfilter/libmpcodecs/help_mp.h	1957;"	d
MSGTR_DVDlimitSpeed	libavfilter/libmpcodecs/help_mp.h	1955;"	d
MSGTR_DVDnoIFO	libavfilter/libmpcodecs/help_mp.h	1967;"	d
MSGTR_DVDnoMatchingAudio	libavfilter/libmpcodecs/help_mp.h	1970;"	d
MSGTR_DVDnoMatchingSubtitle	libavfilter/libmpcodecs/help_mp.h	1974;"	d
MSGTR_DVDnoVMG	libavfilter/libmpcodecs/help_mp.h	1968;"	d
MSGTR_DVDnoVOBs	libavfilter/libmpcodecs/help_mp.h	1969;"	d
MSGTR_DVDnumAngles	libavfilter/libmpcodecs/help_mp.h	1965;"	d
MSGTR_DVDnumAudioChannels	libavfilter/libmpcodecs/help_mp.h	1973;"	d
MSGTR_DVDnumChapters	libavfilter/libmpcodecs/help_mp.h	1961;"	d
MSGTR_DVDnumSubtitles	libavfilter/libmpcodecs/help_mp.h	1977;"	d
MSGTR_DVDnumTitles	libavfilter/libmpcodecs/help_mp.h	1959;"	d
MSGTR_DVDrestoreSpeed	libavfilter/libmpcodecs/help_mp.h	1954;"	d
MSGTR_DVDspeedCantOpen	libavfilter/libmpcodecs/help_mp.h	1953;"	d
MSGTR_DVDsubtitleChannel	libavfilter/libmpcodecs/help_mp.h	1975;"	d
MSGTR_DVDsubtitleLanguage	libavfilter/libmpcodecs/help_mp.h	1976;"	d
MSGTR_DeletingSubtitles	libavfilter/libmpcodecs/help_mp.h	810;"	d
MSGTR_DemuxerDoesntSupportNosound	libavfilter/libmpcodecs/help_mp.h	419;"	d
MSGTR_DemuxerInfoChanged	libavfilter/libmpcodecs/help_mp.h	1449;"	d
MSGTR_DetectedAudiofile	libavfilter/libmpcodecs/help_mp.h	1413;"	d
MSGTR_DetectedTV	libavfilter/libmpcodecs/help_mp.h	1441;"	d
MSGTR_Detected_XXX_FileFormat	libavfilter/libmpcodecs/help_mp.h	1412;"	d
MSGTR_Disabled	libavfilter/libmpcodecs/help_mp.h	226;"	d
MSGTR_DoesntContainSelectedStream	libavfilter/libmpcodecs/help_mp.h	1425;"	d
MSGTR_DownloadCodecPackage	libavfilter/libmpcodecs/help_mp.h	1647;"	d
MSGTR_DumpSelectedStreamMissing	libavfilter/libmpcodecs/help_mp.h	76;"	d
MSGTR_DumpstreamFdUnavailable	libavfilter/libmpcodecs/help_mp.h	169;"	d
MSGTR_DuplicateFID	libavfilter/libmpcodecs/help_mp.h	484;"	d
MSGTR_DuplicateFourcc	libavfilter/libmpcodecs/help_mp.h	479;"	d
MSGTR_DuplicateFrames	libavfilter/libmpcodecs/help_mp.h	278;"	d
MSGTR_DvdnavEvent	libavfilter/libmpcodecs/help_mp.h	176;"	d
MSGTR_DvdnavHighlightEventBroken	libavfilter/libmpcodecs/help_mp.h	175;"	d
MSGTR_DvdnavHighlightHide	libavfilter/libmpcodecs/help_mp.h	177;"	d
MSGTR_DvdnavNavAudioStreamChange	libavfilter/libmpcodecs/help_mp.h	183;"	d
MSGTR_DvdnavNavCellChange	libavfilter/libmpcodecs/help_mp.h	185;"	d
MSGTR_DvdnavNavNOP	libavfilter/libmpcodecs/help_mp.h	180;"	d
MSGTR_DvdnavNavSeekDone	libavfilter/libmpcodecs/help_mp.h	187;"	d
MSGTR_DvdnavNavSpuClutChange	libavfilter/libmpcodecs/help_mp.h	186;"	d
MSGTR_DvdnavNavSpuStreamChange	libavfilter/libmpcodecs/help_mp.h	182;"	d
MSGTR_DvdnavNavSpuStreamChangeVerbose	libavfilter/libmpcodecs/help_mp.h	181;"	d
MSGTR_DvdnavNavStop	libavfilter/libmpcodecs/help_mp.h	179;"	d
MSGTR_DvdnavNavVTSChange	libavfilter/libmpcodecs/help_mp.h	184;"	d
MSGTR_DvdnavNullEvent	libavfilter/libmpcodecs/help_mp.h	174;"	d
MSGTR_DvdnavStillFrame	libavfilter/libmpcodecs/help_mp.h	178;"	d
MSGTR_EQU_All	libavfilter/libmpcodecs/help_mp.h	668;"	d
MSGTR_EQU_Audio	libavfilter/libmpcodecs/help_mp.h	655;"	d
MSGTR_EQU_Back_Left	libavfilter/libmpcodecs/help_mp.h	664;"	d
MSGTR_EQU_Back_Right	libavfilter/libmpcodecs/help_mp.h	665;"	d
MSGTR_EQU_Bass	libavfilter/libmpcodecs/help_mp.h	667;"	d
MSGTR_EQU_Brightness	libavfilter/libmpcodecs/help_mp.h	659;"	d
MSGTR_EQU_Center	libavfilter/libmpcodecs/help_mp.h	666;"	d
MSGTR_EQU_Channel1	libavfilter/libmpcodecs/help_mp.h	669;"	d
MSGTR_EQU_Channel2	libavfilter/libmpcodecs/help_mp.h	670;"	d
MSGTR_EQU_Channel3	libavfilter/libmpcodecs/help_mp.h	671;"	d
MSGTR_EQU_Channel4	libavfilter/libmpcodecs/help_mp.h	672;"	d
MSGTR_EQU_Channel5	libavfilter/libmpcodecs/help_mp.h	673;"	d
MSGTR_EQU_Channel6	libavfilter/libmpcodecs/help_mp.h	674;"	d
MSGTR_EQU_Contrast	libavfilter/libmpcodecs/help_mp.h	658;"	d
MSGTR_EQU_Front_Left	libavfilter/libmpcodecs/help_mp.h	662;"	d
MSGTR_EQU_Front_Right	libavfilter/libmpcodecs/help_mp.h	663;"	d
MSGTR_EQU_Hue	libavfilter/libmpcodecs/help_mp.h	660;"	d
MSGTR_EQU_Saturation	libavfilter/libmpcodecs/help_mp.h	661;"	d
MSGTR_EQU_Video	libavfilter/libmpcodecs/help_mp.h	657;"	d
MSGTR_EdlBadLineBadStop	libavfilter/libmpcodecs/help_mp.h	204;"	d
MSGTR_EdlBadLineOverlap	libavfilter/libmpcodecs/help_mp.h	202;"	d
MSGTR_EdlBadlyFormattedLine	libavfilter/libmpcodecs/help_mp.h	201;"	d
MSGTR_EdlCantOpenForRead	libavfilter/libmpcodecs/help_mp.h	198;"	d
MSGTR_EdlCantOpenForWrite	libavfilter/libmpcodecs/help_mp.h	197;"	d
MSGTR_EdlNOValidLine	libavfilter/libmpcodecs/help_mp.h	200;"	d
MSGTR_EdlNOsh_video	libavfilter/libmpcodecs/help_mp.h	199;"	d
MSGTR_EdlOutOfMem	libavfilter/libmpcodecs/help_mp.h	193;"	d
MSGTR_EdlOutOfMemFile	libavfilter/libmpcodecs/help_mp.h	194;"	d
MSGTR_EdlQueueEmpty	libavfilter/libmpcodecs/help_mp.h	196;"	d
MSGTR_EdlRecordsNo	libavfilter/libmpcodecs/help_mp.h	195;"	d
MSGTR_EdlSkipStartEndCurrent	libavfilter/libmpcodecs/help_mp.h	292;"	d
MSGTR_EdloutBadStop	libavfilter/libmpcodecs/help_mp.h	205;"	d
MSGTR_EdloutEndSkip	libavfilter/libmpcodecs/help_mp.h	207;"	d
MSGTR_EdloutStartSkip	libavfilter/libmpcodecs/help_mp.h	206;"	d
MSGTR_Enabled	libavfilter/libmpcodecs/help_mp.h	224;"	d
MSGTR_EnabledEdl	libavfilter/libmpcodecs/help_mp.h	225;"	d
MSGTR_EncoderOpenFailed	libavfilter/libmpcodecs/help_mp.h	272;"	d
MSGTR_EnterTelecineMode	libavfilter/libmpcodecs/help_mp.h	1453;"	d
MSGTR_Equalizer	libavfilter/libmpcodecs/help_mp.h	552;"	d
MSGTR_ErrTrackSelect	libavfilter/libmpcodecs/help_mp.h	1897;"	d
MSGTR_ErrorInitializingVODevice	libavfilter/libmpcodecs/help_mp.h	127;"	d
MSGTR_ErrorOpeningOGGDemuxer	libavfilter/libmpcodecs/help_mp.h	1442;"	d
MSGTR_ErrorOpeningOutputFile	libavfilter/libmpcodecs/help_mp.h	158;"	d
MSGTR_ErrorParsingCommandLine	libavfilter/libmpcodecs/help_mp.h	415;"	d
MSGTR_ErrorParsingOptionOnCommandLine	libavfilter/libmpcodecs/help_mp.h	513;"	d
MSGTR_ErrorWritingFile	libavfilter/libmpcodecs/help_mp.h	286;"	d
MSGTR_EwmhFullscreenStateFailed	libavfilter/libmpcodecs/help_mp.h	1143;"	d
MSGTR_Exit_SIGCRASH	libavfilter/libmpcodecs/help_mp.h	147;"	d
MSGTR_Exit_SIGILL	libavfilter/libmpcodecs/help_mp.h	138;"	d
MSGTR_Exit_SIGILL_RTCpuSel	libavfilter/libmpcodecs/help_mp.h	134;"	d
MSGTR_Exit_SIGSEGV_SIGFPE	libavfilter/libmpcodecs/help_mp.h	143;"	d
MSGTR_Exit_eof	libavfilter/libmpcodecs/help_mp.h	67;"	d
MSGTR_Exit_error	libavfilter/libmpcodecs/help_mp.h	68;"	d
MSGTR_Exit_quit	libavfilter/libmpcodecs/help_mp.h	66;"	d
MSGTR_Exiting	libavfilter/libmpcodecs/help_mp.h	64;"	d
MSGTR_ExitingHow	libavfilter/libmpcodecs/help_mp.h	65;"	d
MSGTR_FPSforced	libavfilter/libmpcodecs/help_mp.h	114;"	d
MSGTR_FPSnotspecified	libavfilter/libmpcodecs/help_mp.h	79;"	d
MSGTR_FailedToOpen	libavfilter/libmpcodecs/help_mp.h	1457;"	d
MSGTR_FileNotFound	libavfilter/libmpcodecs/help_mp.h	1901;"	d
MSGTR_FileSelect	libavfilter/libmpcodecs/help_mp.h	545;"	d
MSGTR_FilefmtFourccSizeFpsFtime	libavfilter/libmpcodecs/help_mp.h	1419;"	d
MSGTR_FiltersHaveNotBeenConfiguredEmptyFile	libavfilter/libmpcodecs/help_mp.h	288;"	d
MSGTR_FlushingVideoFrames	libavfilter/libmpcodecs/help_mp.h	287;"	d
MSGTR_FontSelect	libavfilter/libmpcodecs/help_mp.h	549;"	d
MSGTR_ForcedAudioCodec	libavfilter/libmpcodecs/help_mp.h	129;"	d
MSGTR_ForcedVideoCodec	libavfilter/libmpcodecs/help_mp.h	128;"	d
MSGTR_ForcingInputFPS	libavfilter/libmpcodecs/help_mp.h	417;"	d
MSGTR_ForcingOutputAudiofmtTag	libavfilter/libmpcodecs/help_mp.h	277;"	d
MSGTR_ForcingOutputFourcc	libavfilter/libmpcodecs/help_mp.h	276;"	d
MSGTR_FormatNotRecognized	libavfilter/libmpcodecs/help_mp.h	1416;"	d
MSGTR_FoundAudioStream	libavfilter/libmpcodecs/help_mp.h	1439;"	d
MSGTR_FoundVideoStream	libavfilter/libmpcodecs/help_mp.h	1440;"	d
MSGTR_FrameCopyFileMismatch	libavfilter/libmpcodecs/help_mp.h	281;"	d
MSGTR_FramedroppingStatus	libavfilter/libmpcodecs/help_mp.h	253;"	d
MSGTR_Gamma	libavfilter/libmpcodecs/help_mp.h	239;"	d
MSGTR_GetTokenMaxNotLessThanMAX_NR_TOKEN	libavfilter/libmpcodecs/help_mp.h	492;"	d
MSGTR_Getch2InitializedTwice	libavfilter/libmpcodecs/help_mp.h	168;"	d
MSGTR_GetpathProblem	libavfilter/libmpcodecs/help_mp.h	71;"	d
MSGTR_GuiNeedsX	libavfilter/libmpcodecs/help_mp.h	111;"	d
MSGTR_HardFrameDrop	libavfilter/libmpcodecs/help_mp.h	227;"	d
MSGTR_Hue	libavfilter/libmpcodecs/help_mp.h	243;"	d
MSGTR_IDFGCVD	libavfilter/libmpcodecs/help_mp.h	578;"	d
MSGTR_INPUT_APPLE_IR_CantOpen	libavfilter/libmpcodecs/help_mp.h	1350;"	d
MSGTR_INPUT_APPLE_IR_Detect	libavfilter/libmpcodecs/help_mp.h	1349;"	d
MSGTR_INPUT_APPLE_IR_Init	libavfilter/libmpcodecs/help_mp.h	1348;"	d
MSGTR_INPUT_INPUT_Err2FewArgs	libavfilter/libmpcodecs/help_mp.h	1359;"	d
MSGTR_INPUT_INPUT_Err2ManyKeyDowns	libavfilter/libmpcodecs/help_mp.h	1366;"	d
MSGTR_INPUT_INPUT_ErrArgMustBeFloat	libavfilter/libmpcodecs/help_mp.h	1356;"	d
MSGTR_INPUT_INPUT_ErrArgMustBeInt	libavfilter/libmpcodecs/help_mp.h	1355;"	d
MSGTR_INPUT_INPUT_ErrBuffer2SmallForCmd	libavfilter/libmpcodecs/help_mp.h	1373;"	d
MSGTR_INPUT_INPUT_ErrBuffer2SmallForKeyName	libavfilter/libmpcodecs/help_mp.h	1371;"	d
MSGTR_INPUT_INPUT_ErrCantInitAppleRemote	libavfilter/libmpcodecs/help_mp.h	1378;"	d
MSGTR_INPUT_INPUT_ErrCantInitJoystick	libavfilter/libmpcodecs/help_mp.h	1375;"	d
MSGTR_INPUT_INPUT_ErrCantOpenFile	libavfilter/libmpcodecs/help_mp.h	1377;"	d
MSGTR_INPUT_INPUT_ErrCantRegister2ManyCmdFds	libavfilter/libmpcodecs/help_mp.h	1353;"	d
MSGTR_INPUT_INPUT_ErrCantRegister2ManyKeyFds	libavfilter/libmpcodecs/help_mp.h	1354;"	d
MSGTR_INPUT_INPUT_ErrCantStatFile	libavfilter/libmpcodecs/help_mp.h	1376;"	d
MSGTR_INPUT_INPUT_ErrCmdBufferFullDroppingContent	libavfilter/libmpcodecs/help_mp.h	1361;"	d
MSGTR_INPUT_INPUT_ErrDeadKeyOnFd	libavfilter/libmpcodecs/help_mp.h	1365;"	d
MSGTR_INPUT_INPUT_ErrInvalidCommandForKey	libavfilter/libmpcodecs/help_mp.h	1362;"	d
MSGTR_INPUT_INPUT_ErrNoCmdForKey	libavfilter/libmpcodecs/help_mp.h	1372;"	d
MSGTR_INPUT_INPUT_ErrOnCmdFd	libavfilter/libmpcodecs/help_mp.h	1367;"	d
MSGTR_INPUT_INPUT_ErrOnKeyInFd	libavfilter/libmpcodecs/help_mp.h	1364;"	d
MSGTR_INPUT_INPUT_ErrReadingCmdFd	libavfilter/libmpcodecs/help_mp.h	1360;"	d
MSGTR_INPUT_INPUT_ErrReadingInputConfig	libavfilter/libmpcodecs/help_mp.h	1368;"	d
MSGTR_INPUT_INPUT_ErrSelect	libavfilter/libmpcodecs/help_mp.h	1363;"	d
MSGTR_INPUT_INPUT_ErrUnfinishedBinding	libavfilter/libmpcodecs/help_mp.h	1370;"	d
MSGTR_INPUT_INPUT_ErrUnknownArg	libavfilter/libmpcodecs/help_mp.h	1358;"	d
MSGTR_INPUT_INPUT_ErrUnknownKey	libavfilter/libmpcodecs/help_mp.h	1369;"	d
MSGTR_INPUT_INPUT_ErrUnterminatedArg	libavfilter/libmpcodecs/help_mp.h	1357;"	d
MSGTR_INPUT_INPUT_ErrWhyHere	libavfilter/libmpcodecs/help_mp.h	1374;"	d
MSGTR_INPUT_JOYSTICK_CantOpen	libavfilter/libmpcodecs/help_mp.h	1341;"	d
MSGTR_INPUT_JOYSTICK_ErrReading	libavfilter/libmpcodecs/help_mp.h	1342;"	d
MSGTR_INPUT_JOYSTICK_LoosingBytes	libavfilter/libmpcodecs/help_mp.h	1343;"	d
MSGTR_INPUT_JOYSTICK_Opening	libavfilter/libmpcodecs/help_mp.h	1340;"	d
MSGTR_INPUT_JOYSTICK_WarnLostSync	libavfilter/libmpcodecs/help_mp.h	1344;"	d
MSGTR_INPUT_JOYSTICK_WarnUnknownEvent	libavfilter/libmpcodecs/help_mp.h	1345;"	d
MSGTR_IgnoringVideoStream	libavfilter/libmpcodecs/help_mp.h	1391;"	d
MSGTR_IncreaseRTCMaxUserFreq	libavfilter/libmpcodecs/help_mp.h	162;"	d
MSGTR_IncreasingAudioDensity	libavfilter/libmpcodecs/help_mp.h	304;"	d
MSGTR_InsertingAfVolume	libavfilter/libmpcodecs/help_mp.h	1147;"	d
MSGTR_IntBySignal	libavfilter/libmpcodecs/help_mp.h	69;"	d
MSGTR_InvalidAudioStreamNosound	libavfilter/libmpcodecs/help_mp.h	1409;"	d
MSGTR_InvalidAudioStreamUsingDefault	libavfilter/libmpcodecs/help_mp.h	1410;"	d
MSGTR_InvalidBitrateForLamePreset	libavfilter/libmpcodecs/help_mp.h	308;"	d
MSGTR_InvalidCfgfileOption	libavfilter/libmpcodecs/help_mp.h	520;"	d
MSGTR_InvalidCmdlineOption	libavfilter/libmpcodecs/help_mp.h	521;"	d
MSGTR_InvalidCodecName	libavfilter/libmpcodecs/help_mp.h	486;"	d
MSGTR_InvalidIP	libavfilter/libmpcodecs/help_mp.h	190;"	d
MSGTR_InvalidLamePresetOptions	libavfilter/libmpcodecs/help_mp.h	313;"	d
MSGTR_InvalidMPEGES	libavfilter/libmpcodecs/help_mp.h	1415;"	d
MSGTR_InvalidPlayEntry	libavfilter/libmpcodecs/help_mp.h	514;"	d
MSGTR_InvalidSuboption	libavfilter/libmpcodecs/help_mp.h	522;"	d
MSGTR_LIBASS_AddedSubtitleFileFname	libavfilter/libmpcodecs/help_mp.h	1728;"	d
MSGTR_LIBASS_AddedSubtitleFileMemory	libavfilter/libmpcodecs/help_mp.h	1727;"	d
MSGTR_LIBASS_BadCommand	libavfilter/libmpcodecs/help_mp.h	1758;"	d
MSGTR_LIBASS_BadEncodedDataSize	libavfilter/libmpcodecs/help_mp.h	1718;"	d
MSGTR_LIBASS_BadTimestamp	libavfilter/libmpcodecs/help_mp.h	1717;"	d
MSGTR_LIBASS_BetaVersionsOfFontconfigAreNotSupported	libavfilter/libmpcodecs/help_mp.h	1743;"	d
MSGTR_LIBASS_EmptyEvent	libavfilter/libmpcodecs/help_mp.h	1763;"	d
MSGTR_LIBASS_ErrorLoadingGlyph	libavfilter/libmpcodecs/help_mp.h	1759;"	d
MSGTR_LIBASS_ErrorOpeningFont	libavfilter/libmpcodecs/help_mp.h	1734;"	d
MSGTR_LIBASS_ErrorOpeningIconvDescriptor	libavfilter/libmpcodecs/help_mp.h	1721;"	d
MSGTR_LIBASS_ErrorOpeningMemoryFont	libavfilter/libmpcodecs/help_mp.h	1770;"	d
MSGTR_LIBASS_ErrorRecodingFile	libavfilter/libmpcodecs/help_mp.h	1722;"	d
MSGTR_LIBASS_EventFormatHeaderMissing	libavfilter/libmpcodecs/help_mp.h	1720;"	d
MSGTR_LIBASS_EventHeightHasChanged	libavfilter/libmpcodecs/help_mp.h	1765;"	d
MSGTR_LIBASS_FT_Glyph_Stroke_Error	libavfilter/libmpcodecs/help_mp.h	1760;"	d
MSGTR_LIBASS_FT_Glyph_To_BitmapError	libavfilter/libmpcodecs/help_mp.h	1711;"	d
MSGTR_LIBASS_FT_Init_FreeTypeFailed	libavfilter/libmpcodecs/help_mp.h	1755;"	d
MSGTR_LIBASS_FailedToCreateDirectory	libavfilter/libmpcodecs/help_mp.h	1729;"	d
MSGTR_LIBASS_FcConfigAppFontAddDirFailed	libavfilter/libmpcodecs/help_mp.h	1747;"	d
MSGTR_LIBASS_FcDirSave	libavfilter/libmpcodecs/help_mp.h	1746;"	d
MSGTR_LIBASS_FcDirScanFailed	libavfilter/libmpcodecs/help_mp.h	1745;"	d
MSGTR_LIBASS_FcInitLoadConfigAndFontsFailed	libavfilter/libmpcodecs/help_mp.h	1741;"	d
MSGTR_LIBASS_FcStrSetAddFailed	libavfilter/libmpcodecs/help_mp.h	1744;"	d
MSGTR_LIBASS_FontLineTooLong	libavfilter/libmpcodecs/help_mp.h	1719;"	d
MSGTR_LIBASS_FontconfigDisabledDefaultFontWillBeUsed	libavfilter/libmpcodecs/help_mp.h	1748;"	d
MSGTR_LIBASS_FopenFailed	libavfilter/libmpcodecs/help_mp.h	1723;"	d
MSGTR_LIBASS_FseekFailed	libavfilter/libmpcodecs/help_mp.h	1724;"	d
MSGTR_LIBASS_FunctionCallFailed	libavfilter/libmpcodecs/help_mp.h	1749;"	d
MSGTR_LIBASS_GlyphBBoxTooLarge	libavfilter/libmpcodecs/help_mp.h	1713;"	d
MSGTR_LIBASS_GlyphNotFound	libavfilter/libmpcodecs/help_mp.h	1769;"	d
MSGTR_LIBASS_GlyphNotFoundReselectingFont	libavfilter/libmpcodecs/help_mp.h	1768;"	d
MSGTR_LIBASS_Init	libavfilter/libmpcodecs/help_mp.h	1756;"	d
MSGTR_LIBASS_InitFailed	libavfilter/libmpcodecs/help_mp.h	1757;"	d
MSGTR_LIBASS_MAX_GLYPHS_Reached	libavfilter/libmpcodecs/help_mp.h	1764;"	d
MSGTR_LIBASS_NeitherPlayResXNorPlayResYDefined	libavfilter/libmpcodecs/help_mp.h	1752;"	d
MSGTR_LIBASS_NoCharmapAutodetected	libavfilter/libmpcodecs/help_mp.h	1772;"	d
MSGTR_LIBASS_NoCharmaps	libavfilter/libmpcodecs/help_mp.h	1771;"	d
MSGTR_LIBASS_NoStyleFound	libavfilter/libmpcodecs/help_mp.h	1762;"	d
MSGTR_LIBASS_NoStyleNamedXFoundUsingY	libavfilter/libmpcodecs/help_mp.h	1716;"	d
MSGTR_LIBASS_NotADirectory	libavfilter/libmpcodecs/help_mp.h	1730;"	d
MSGTR_LIBASS_PlayResXUndefinedSettingX	libavfilter/libmpcodecs/help_mp.h	1754;"	d
MSGTR_LIBASS_PlayResYUndefinedSettingY	libavfilter/libmpcodecs/help_mp.h	1753;"	d
MSGTR_LIBASS_ReadFailed	libavfilter/libmpcodecs/help_mp.h	1726;"	d
MSGTR_LIBASS_RefusingToLoadSubtitlesLargerThan100M	libavfilter/libmpcodecs/help_mp.h	1725;"	d
MSGTR_LIBASS_SelectedFontFamilyIsNotTheRequestedOne	libavfilter/libmpcodecs/help_mp.h	1737;"	d
MSGTR_LIBASS_TooManyFonts	libavfilter/libmpcodecs/help_mp.h	1733;"	d
MSGTR_LIBASS_UnknownEffectType_InternalError	libavfilter/libmpcodecs/help_mp.h	1761;"	d
MSGTR_LIBASS_UnsupportedPixelMode	libavfilter/libmpcodecs/help_mp.h	1712;"	d
MSGTR_LIBASS_UpdatingFontCache	libavfilter/libmpcodecs/help_mp.h	1742;"	d
MSGTR_LIBASS_UsingArialFontFamily	libavfilter/libmpcodecs/help_mp.h	1740;"	d
MSGTR_LIBASS_UsingDefaultFont	libavfilter/libmpcodecs/help_mp.h	1739;"	d
MSGTR_LIBASS_UsingDefaultFontFamily	libavfilter/libmpcodecs/help_mp.h	1738;"	d
MSGTR_LIBMENU_AChildIsAlreadyRunning	libavfilter/libmpcodecs/help_mp.h	1563;"	d
MSGTR_LIBMENU_BadAttrib	libavfilter/libmpcodecs/help_mp.h	1545;"	d
MSGTR_LIBMENU_CantOpenConfigFile	libavfilter/libmpcodecs/help_mp.h	1547;"	d
MSGTR_LIBMENU_CantOpenDirectory	libavfilter/libmpcodecs/help_mp.h	1572;"	d
MSGTR_LIBMENU_CantfindTheTargetItem	libavfilter/libmpcodecs/help_mp.h	1581;"	d
MSGTR_LIBMENU_ConfigFileIsEmpty	libavfilter/libmpcodecs/help_mp.h	1549;"	d
MSGTR_LIBMENU_ConfigFileIsTooBig	libavfilter/libmpcodecs/help_mp.h	1548;"	d
MSGTR_LIBMENU_ConsoleRun	libavfilter/libmpcodecs/help_mp.h	1562;"	d
MSGTR_LIBMENU_FailedToBuildCommand	libavfilter/libmpcodecs/help_mp.h	1582;"	d
MSGTR_LIBMENU_FailedToOpenMenu	libavfilter/libmpcodecs/help_mp.h	1592;"	d
MSGTR_LIBMENU_ForkFailed	libavfilter/libmpcodecs/help_mp.h	1564;"	d
MSGTR_LIBMENU_InvalidProperty	libavfilter/libmpcodecs/help_mp.h	1576;"	d
MSGTR_LIBMENU_ListMenuEntryDefinitionsNeedAName	libavfilter/libmpcodecs/help_mp.h	1555;"	d
MSGTR_LIBMENU_ListMenuNeedsAnArgument	libavfilter/libmpcodecs/help_mp.h	1556;"	d
MSGTR_LIBMENU_MallocError	libavfilter/libmpcodecs/help_mp.h	1570;"	d
MSGTR_LIBMENU_MenuDefinitionsNeedANameAttrib	libavfilter/libmpcodecs/help_mp.h	1544;"	d
MSGTR_LIBMENU_MenuInitFailed	libavfilter/libmpcodecs/help_mp.h	1551;"	d
MSGTR_LIBMENU_MenuNotFound	libavfilter/libmpcodecs/help_mp.h	1550;"	d
MSGTR_LIBMENU_MenuTxtCantOpen	libavfilter/libmpcodecs/help_mp.h	1586;"	d
MSGTR_LIBMENU_MenuTxtNeedATxtFileName	libavfilter/libmpcodecs/help_mp.h	1585;"	d
MSGTR_LIBMENU_NoEntryFoundInTheMenuDefinition	libavfilter/libmpcodecs/help_mp.h	1540;"	d
MSGTR_LIBMENU_OpendirError	libavfilter/libmpcodecs/help_mp.h	1568;"	d
MSGTR_LIBMENU_ParsedLines	libavfilter/libmpcodecs/help_mp.h	1588;"	d
MSGTR_LIBMENU_PrefMenuEntryDefinitionsNeed	libavfilter/libmpcodecs/help_mp.h	1577;"	d
MSGTR_LIBMENU_PrefMenuNeedsAnArgument	libavfilter/libmpcodecs/help_mp.h	1578;"	d
MSGTR_LIBMENU_ReadErrorOnChildFD	libavfilter/libmpcodecs/help_mp.h	1561;"	d
MSGTR_LIBMENU_ReaddirError	libavfilter/libmpcodecs/help_mp.h	1571;"	d
MSGTR_LIBMENU_ReallocError	libavfilter/libmpcodecs/help_mp.h	1569;"	d
MSGTR_LIBMENU_SelectError	libavfilter/libmpcodecs/help_mp.h	1560;"	d
MSGTR_LIBMENU_SubmenuDefinitionNeedAMenuAttribut	libavfilter/libmpcodecs/help_mp.h	1575;"	d
MSGTR_LIBMENU_SyntaxErrorAtLine	libavfilter/libmpcodecs/help_mp.h	1543;"	d
MSGTR_LIBMENU_UnknownMenuCommand	libavfilter/libmpcodecs/help_mp.h	1591;"	d
MSGTR_LIBMENU_UnknownMenuType	libavfilter/libmpcodecs/help_mp.h	1546;"	d
MSGTR_LIBMENU_UnsupportedOutformat	libavfilter/libmpcodecs/help_mp.h	1552;"	d
MSGTR_LIBMENU_WaitPidError	libavfilter/libmpcodecs/help_mp.h	1559;"	d
MSGTR_LIBMENU_WarningTooLongLineSplitting	libavfilter/libmpcodecs/help_mp.h	1587;"	d
MSGTR_LIBMENU_WriteError	libavfilter/libmpcodecs/help_mp.h	1565;"	d
MSGTR_LIBVO_3DFX_CouldntMapMemoryArea	libavfilter/libmpcodecs/help_mp.h	886;"	d
MSGTR_LIBVO_3DFX_DisplayInitialized	libavfilter/libmpcodecs/help_mp.h	887;"	d
MSGTR_LIBVO_3DFX_Error	libavfilter/libmpcodecs/help_mp.h	885;"	d
MSGTR_LIBVO_3DFX_Only16BppSupported	libavfilter/libmpcodecs/help_mp.h	882;"	d
MSGTR_LIBVO_3DFX_UnableToOpenDevice	libavfilter/libmpcodecs/help_mp.h	884;"	d
MSGTR_LIBVO_3DFX_UnknownSubdevice	libavfilter/libmpcodecs/help_mp.h	888;"	d
MSGTR_LIBVO_3DFX_VisualIdIs	libavfilter/libmpcodecs/help_mp.h	883;"	d
MSGTR_LIBVO_ASPECT_NoNewSizeFoundThatFitsIntoRes	libavfilter/libmpcodecs/help_mp.h	853;"	d
MSGTR_LIBVO_ASPECT_NoSuitableNewResFound	libavfilter/libmpcodecs/help_mp.h	852;"	d
MSGTR_LIBVO_DXR3_AutoAdjustToMovieFrameRatePALNTSC	libavfilter/libmpcodecs/help_mp.h	921;"	d
MSGTR_LIBVO_DXR3_AutoAdjustToMovieFrameRatePALPAL60	libavfilter/libmpcodecs/help_mp.h	920;"	d
MSGTR_LIBVO_DXR3_AutoSelectedTVNormByFrameRate	libavfilter/libmpcodecs/help_mp.h	904;"	d
MSGTR_LIBVO_DXR3_EnablingPrebuffering	libavfilter/libmpcodecs/help_mp.h	915;"	d
MSGTR_LIBVO_DXR3_ErrorOpeningForWritingAsWell	libavfilter/libmpcodecs/help_mp.h	926;"	d
MSGTR_LIBVO_DXR3_ErrorOpeningForWritingAsWellMV	libavfilter/libmpcodecs/help_mp.h	927;"	d
MSGTR_LIBVO_DXR3_ErrorOpeningForWritingAsWellSP	libavfilter/libmpcodecs/help_mp.h	930;"	d
MSGTR_LIBVO_DXR3_ErrorOpeningForWritingTrying	libavfilter/libmpcodecs/help_mp.h	924;"	d
MSGTR_LIBVO_DXR3_ErrorOpeningForWritingTryingMV	libavfilter/libmpcodecs/help_mp.h	925;"	d
MSGTR_LIBVO_DXR3_ErrorOpeningForWritingTryingSP	libavfilter/libmpcodecs/help_mp.h	929;"	d
MSGTR_LIBVO_DXR3_ErrorYouNeedToCompileMplayerWithX11	libavfilter/libmpcodecs/help_mp.h	918;"	d
MSGTR_LIBVO_DXR3_FailedEnablingOverlay	libavfilter/libmpcodecs/help_mp.h	935;"	d
MSGTR_LIBVO_DXR3_FailedGettingOverlayXOffsetValues	libavfilter/libmpcodecs/help_mp.h	939;"	d
MSGTR_LIBVO_DXR3_FailedGettingOverlayXScaleCorrection	libavfilter/libmpcodecs/help_mp.h	940;"	d
MSGTR_LIBVO_DXR3_FailedGettingOverlayYOffsetValues	libavfilter/libmpcodecs/help_mp.h	938;"	d
MSGTR_LIBVO_DXR3_FailedResizingOverlayWindow	libavfilter/libmpcodecs/help_mp.h	936;"	d
MSGTR_LIBVO_DXR3_FailedRestoringTVNorm	libavfilter/libmpcodecs/help_mp.h	914;"	d
MSGTR_LIBVO_DXR3_FailedSetSignalMix	libavfilter/libmpcodecs/help_mp.h	944;"	d
MSGTR_LIBVO_DXR3_FailedSettingOverlayAttribute	libavfilter/libmpcodecs/help_mp.h	933;"	d
MSGTR_LIBVO_DXR3_FailedSettingOverlayBcs	libavfilter/libmpcodecs/help_mp.h	937;"	d
MSGTR_LIBVO_DXR3_FailedSettingOverlayScreen	libavfilter/libmpcodecs/help_mp.h	934;"	d
MSGTR_LIBVO_DXR3_Opened	libavfilter/libmpcodecs/help_mp.h	928;"	d
MSGTR_LIBVO_DXR3_OutOfMemory	libavfilter/libmpcodecs/help_mp.h	910;"	d
MSGTR_LIBVO_DXR3_SettingAspectRatioTo169	libavfilter/libmpcodecs/help_mp.h	909;"	d
MSGTR_LIBVO_DXR3_SettingAspectRatioTo43	libavfilter/libmpcodecs/help_mp.h	908;"	d
MSGTR_LIBVO_DXR3_SettingUpForNTSC	libavfilter/libmpcodecs/help_mp.h	906;"	d
MSGTR_LIBVO_DXR3_SettingUpForPALSECAM	libavfilter/libmpcodecs/help_mp.h	907;"	d
MSGTR_LIBVO_DXR3_UnableToAllocateExactKeycolor	libavfilter/libmpcodecs/help_mp.h	912;"	d
MSGTR_LIBVO_DXR3_UnableToAllocateKeycolor	libavfilter/libmpcodecs/help_mp.h	911;"	d
MSGTR_LIBVO_DXR3_UnableToGetTVNorm	libavfilter/libmpcodecs/help_mp.h	903;"	d
MSGTR_LIBVO_DXR3_UnableToInitX11	libavfilter/libmpcodecs/help_mp.h	932;"	d
MSGTR_LIBVO_DXR3_UnableToLoadNewSPUPalette	libavfilter/libmpcodecs/help_mp.h	900;"	d
MSGTR_LIBVO_DXR3_UnableToOpenDisplayDuringHackSetup	libavfilter/libmpcodecs/help_mp.h	931;"	d
MSGTR_LIBVO_DXR3_UnableToSetPlaymode	libavfilter/libmpcodecs/help_mp.h	901;"	d
MSGTR_LIBVO_DXR3_UnableToSetSubpictureMode	libavfilter/libmpcodecs/help_mp.h	902;"	d
MSGTR_LIBVO_DXR3_UnableToSetTVNorm	libavfilter/libmpcodecs/help_mp.h	905;"	d
MSGTR_LIBVO_DXR3_Uninitializing	libavfilter/libmpcodecs/help_mp.h	913;"	d
MSGTR_LIBVO_DXR3_UseCurrentNorm	libavfilter/libmpcodecs/help_mp.h	922;"	d
MSGTR_LIBVO_DXR3_UseUnknownNormSuppliedCurrentNorm	libavfilter/libmpcodecs/help_mp.h	923;"	d
MSGTR_LIBVO_DXR3_UsingNewSyncEngine	libavfilter/libmpcodecs/help_mp.h	916;"	d
MSGTR_LIBVO_DXR3_UsingOverlay	libavfilter/libmpcodecs/help_mp.h	917;"	d
MSGTR_LIBVO_DXR3_WillSetTVNormTo	libavfilter/libmpcodecs/help_mp.h	919;"	d
MSGTR_LIBVO_DXR3_XCorrection	libavfilter/libmpcodecs/help_mp.h	943;"	d
MSGTR_LIBVO_DXR3_XOffset	libavfilter/libmpcodecs/help_mp.h	942;"	d
MSGTR_LIBVO_DXR3_YOffset	libavfilter/libmpcodecs/help_mp.h	941;"	d
MSGTR_LIBVO_FONT_LOAD_FT_CannotGenerateTables	libavfilter/libmpcodecs/help_mp.h	862;"	d
MSGTR_LIBVO_FONT_LOAD_FT_CannotPrepareOSDFont	libavfilter/libmpcodecs/help_mp.h	861;"	d
MSGTR_LIBVO_FONT_LOAD_FT_CannotPrepareSubtitleFont	libavfilter/libmpcodecs/help_mp.h	860;"	d
MSGTR_LIBVO_FONT_LOAD_FT_DoneFreeTypeFailed	libavfilter/libmpcodecs/help_mp.h	863;"	d
MSGTR_LIBVO_FONT_LOAD_FT_FontconfigNoMatch	libavfilter/libmpcodecs/help_mp.h	864;"	d
MSGTR_LIBVO_FONT_LOAD_FT_NewFaceFailed	libavfilter/libmpcodecs/help_mp.h	856;"	d
MSGTR_LIBVO_FONT_LOAD_FT_NewMemoryFaceFailed	libavfilter/libmpcodecs/help_mp.h	857;"	d
MSGTR_LIBVO_FONT_LOAD_FT_SubFaceFailed	libavfilter/libmpcodecs/help_mp.h	858;"	d
MSGTR_LIBVO_FONT_LOAD_FT_SubFontCharsetFailed	libavfilter/libmpcodecs/help_mp.h	859;"	d
MSGTR_LIBVO_MGA_AspectResized	libavfilter/libmpcodecs/help_mp.h	953;"	d
MSGTR_LIBVO_MGA_CouldNotGetLumaValuesFromTheKernelModule	libavfilter/libmpcodecs/help_mp.h	958;"	d
MSGTR_LIBVO_MGA_CouldNotSetLumaValuesFromTheKernelModule	libavfilter/libmpcodecs/help_mp.h	959;"	d
MSGTR_LIBVO_MGA_CouldntOpen	libavfilter/libmpcodecs/help_mp.h	963;"	d
MSGTR_LIBVO_MGA_ErrorInConfigIoctl	libavfilter/libmpcodecs/help_mp.h	957;"	d
MSGTR_LIBVO_MGA_IncompatibleDriverVersion	libavfilter/libmpcodecs/help_mp.h	962;"	d
MSGTR_LIBVO_MGA_InvalidOutputFormat	libavfilter/libmpcodecs/help_mp.h	961;"	d
MSGTR_LIBVO_MGA_ResolutionTooHigh	libavfilter/libmpcodecs/help_mp.h	964;"	d
MSGTR_LIBVO_MGA_ScreenWidthHeightUnknown	libavfilter/libmpcodecs/help_mp.h	960;"	d
MSGTR_LIBVO_MGA_Uninit	libavfilter/libmpcodecs/help_mp.h	954;"	d
MSGTR_LIBVO_MGA_mgavidVersionMismatch	libavfilter/libmpcodecs/help_mp.h	965;"	d
MSGTR_LIBVO_NULL_UnknownSubdevice	libavfilter/libmpcodecs/help_mp.h	968;"	d
MSGTR_LIBVO_PNG_ErrorInCreatePng	libavfilter/libmpcodecs/help_mp.h	975;"	d
MSGTR_LIBVO_PNG_ErrorOpeningForWriting	libavfilter/libmpcodecs/help_mp.h	974;"	d
MSGTR_LIBVO_PNG_Warning1	libavfilter/libmpcodecs/help_mp.h	971;"	d
MSGTR_LIBVO_PNG_Warning2	libavfilter/libmpcodecs/help_mp.h	972;"	d
MSGTR_LIBVO_PNG_Warning3	libavfilter/libmpcodecs/help_mp.h	973;"	d
MSGTR_LIBVO_SDL_BlitFailed	libavfilter/libmpcodecs/help_mp.h	996;"	d
MSGTR_LIBVO_SDL_CouldntCreateARGBSurface	libavfilter/libmpcodecs/help_mp.h	993;"	d
MSGTR_LIBVO_SDL_CouldntCreateAYUVOverlay	libavfilter/libmpcodecs/help_mp.h	992;"	d
MSGTR_LIBVO_SDL_CouldntGetAnyAcceptableSDLModeForOutput	libavfilter/libmpcodecs/help_mp.h	985;"	d
MSGTR_LIBVO_SDL_FailedToSetVideoMode	libavfilter/libmpcodecs/help_mp.h	991;"	d
MSGTR_LIBVO_SDL_InfoPleaseUseVmOrZoom	libavfilter/libmpcodecs/help_mp.h	990;"	d
MSGTR_LIBVO_SDL_InitializationFailed	libavfilter/libmpcodecs/help_mp.h	997;"	d
MSGTR_LIBVO_SDL_MappingI420ToIYUV	libavfilter/libmpcodecs/help_mp.h	988;"	d
MSGTR_LIBVO_SDL_SetVideoModeFailed	libavfilter/libmpcodecs/help_mp.h	986;"	d
MSGTR_LIBVO_SDL_SetVideoModeFailedFull	libavfilter/libmpcodecs/help_mp.h	987;"	d
MSGTR_LIBVO_SDL_UnsupportedImageFormat	libavfilter/libmpcodecs/help_mp.h	989;"	d
MSGTR_LIBVO_SDL_UnsupportedImageFormatInDrawslice	libavfilter/libmpcodecs/help_mp.h	995;"	d
MSGTR_LIBVO_SDL_UsingDepthColorspaceConversion	libavfilter/libmpcodecs/help_mp.h	994;"	d
MSGTR_LIBVO_SDL_UsingDriver	libavfilter/libmpcodecs/help_mp.h	998;"	d
MSGTR_LIBVO_SUB_VIDIX_CantConfigurePlayback	libavfilter/libmpcodecs/help_mp.h	1137;"	d
MSGTR_LIBVO_SUB_VIDIX_CantStartPlayback	libavfilter/libmpcodecs/help_mp.h	1127;"	d
MSGTR_LIBVO_SUB_VIDIX_CantStopPlayback	libavfilter/libmpcodecs/help_mp.h	1128;"	d
MSGTR_LIBVO_SUB_VIDIX_CouldntFindWorkingVidixDriver	libavfilter/libmpcodecs/help_mp.h	1139;"	d
MSGTR_LIBVO_SUB_VIDIX_CouldntGetCapability	libavfilter/libmpcodecs/help_mp.h	1140;"	d
MSGTR_LIBVO_SUB_VIDIX_DriverCantDownscaleImage	libavfilter/libmpcodecs/help_mp.h	1136;"	d
MSGTR_LIBVO_SUB_VIDIX_DriverCantUpscaleImage	libavfilter/libmpcodecs/help_mp.h	1135;"	d
MSGTR_LIBVO_SUB_VIDIX_DummyVidixdrawframeWasCalled	libavfilter/libmpcodecs/help_mp.h	1131;"	d
MSGTR_LIBVO_SUB_VIDIX_DummyVidixdrawsliceWasCalled	libavfilter/libmpcodecs/help_mp.h	1130;"	d
MSGTR_LIBVO_SUB_VIDIX_InterleavedUvForYuv410pNotSupported	libavfilter/libmpcodecs/help_mp.h	1129;"	d
MSGTR_LIBVO_SUB_VIDIX_UnsupportedFourccForThisVidixDriver	libavfilter/libmpcodecs/help_mp.h	1132;"	d
MSGTR_LIBVO_SUB_VIDIX_VideoServerHasUnsupportedColorDepth	libavfilter/libmpcodecs/help_mp.h	1134;"	d
MSGTR_LIBVO_SUB_VIDIX_VideoServerHasUnsupportedResolution	libavfilter/libmpcodecs/help_mp.h	1133;"	d
MSGTR_LIBVO_SUB_VIDIX_YouHaveWrongVersionOfVidixLibrary	libavfilter/libmpcodecs/help_mp.h	1138;"	d
MSGTR_LIBVO_SVGA_CenteringImageStartAt	libavfilter/libmpcodecs/help_mp.h	1009;"	d
MSGTR_LIBVO_SVGA_ForcedVidmodeNotAvailable	libavfilter/libmpcodecs/help_mp.h	1001;"	d
MSGTR_LIBVO_SVGA_ForcedVidmodeTooSmall	libavfilter/libmpcodecs/help_mp.h	1002;"	d
MSGTR_LIBVO_SVGA_IfItWorksForYouIWouldLikeToKnow	libavfilter/libmpcodecs/help_mp.h	1007;"	d
MSGTR_LIBVO_SVGA_UsingVidix	libavfilter/libmpcodecs/help_mp.h	1010;"	d
MSGTR_LIBVO_SVGA_VgasetmodeFailed	libavfilter/libmpcodecs/help_mp.h	1004;"	d
MSGTR_LIBVO_SVGA_VideoModeHas	libavfilter/libmpcodecs/help_mp.h	1008;"	d
MSGTR_LIBVO_SVGA_VideoModeHasHardwareAcceleration	libavfilter/libmpcodecs/help_mp.h	1006;"	d
MSGTR_LIBVO_SVGA_VideoModeIsLinearAndMemcpyCouldBeUsed	libavfilter/libmpcodecs/help_mp.h	1005;"	d
MSGTR_LIBVO_SVGA_Vidmode	libavfilter/libmpcodecs/help_mp.h	1003;"	d
MSGTR_LIBVO_TDFXFB_BppOutputIsNotSupported	libavfilter/libmpcodecs/help_mp.h	1041;"	d
MSGTR_LIBVO_TDFXFB_CantOpen	libavfilter/libmpcodecs/help_mp.h	1035;"	d
MSGTR_LIBVO_TDFXFB_CouldntMapMemoryAreas	libavfilter/libmpcodecs/help_mp.h	1040;"	d
MSGTR_LIBVO_TDFXFB_NotEnoughVideoMemoryToPlay	libavfilter/libmpcodecs/help_mp.h	1043;"	d
MSGTR_LIBVO_TDFXFB_OutputIsNotSupported	libavfilter/libmpcodecs/help_mp.h	1039;"	d
MSGTR_LIBVO_TDFXFB_ProblemWithFbitgetFscreenInfo	libavfilter/libmpcodecs/help_mp.h	1036;"	d
MSGTR_LIBVO_TDFXFB_ProblemWithFbitgetVscreenInfo	libavfilter/libmpcodecs/help_mp.h	1037;"	d
MSGTR_LIBVO_TDFXFB_ScreenIs	libavfilter/libmpcodecs/help_mp.h	1044;"	d
MSGTR_LIBVO_TDFXFB_SomethingIsWrongWithControl	libavfilter/libmpcodecs/help_mp.h	1042;"	d
MSGTR_LIBVO_TDFXFB_ThisDriverOnlySupports	libavfilter/libmpcodecs/help_mp.h	1038;"	d
MSGTR_LIBVO_TDFXVID_AGPMoveFailedToClearTheScreen	libavfilter/libmpcodecs/help_mp.h	1014;"	d
MSGTR_LIBVO_TDFXVID_AgpMoveFailed	libavfilter/libmpcodecs/help_mp.h	1027;"	d
MSGTR_LIBVO_TDFXVID_AgpMoveFailedOnUPlane	libavfilter/libmpcodecs/help_mp.h	1030;"	d
MSGTR_LIBVO_TDFXVID_AgpMoveFailedOnVPlane	libavfilter/libmpcodecs/help_mp.h	1031;"	d
MSGTR_LIBVO_TDFXVID_AgpMoveFailedOnYPlane	libavfilter/libmpcodecs/help_mp.h	1029;"	d
MSGTR_LIBVO_TDFXVID_BlitFailed	libavfilter/libmpcodecs/help_mp.h	1015;"	d
MSGTR_LIBVO_TDFXVID_CantGetCurrentCfg	libavfilter/libmpcodecs/help_mp.h	1024;"	d
MSGTR_LIBVO_TDFXVID_CantOpen	libavfilter/libmpcodecs/help_mp.h	1023;"	d
MSGTR_LIBVO_TDFXVID_GetImageTodo	libavfilter/libmpcodecs/help_mp.h	1026;"	d
MSGTR_LIBVO_TDFXVID_MemmapFailed	libavfilter/libmpcodecs/help_mp.h	1025;"	d
MSGTR_LIBVO_TDFXVID_Move	libavfilter/libmpcodecs/help_mp.h	1013;"	d
MSGTR_LIBVO_TDFXVID_NonNativeOverlayFormatNeedConversion	libavfilter/libmpcodecs/help_mp.h	1016;"	d
MSGTR_LIBVO_TDFXVID_OverlayOffFailed	libavfilter/libmpcodecs/help_mp.h	1022;"	d
MSGTR_LIBVO_TDFXVID_OverlayOnFailed	libavfilter/libmpcodecs/help_mp.h	1019;"	d
MSGTR_LIBVO_TDFXVID_OverlayReady	libavfilter/libmpcodecs/help_mp.h	1020;"	d
MSGTR_LIBVO_TDFXVID_OverlaySetupFailed	libavfilter/libmpcodecs/help_mp.h	1018;"	d
MSGTR_LIBVO_TDFXVID_SetYuvFailed	libavfilter/libmpcodecs/help_mp.h	1028;"	d
MSGTR_LIBVO_TDFXVID_TextureBlitReady	libavfilter/libmpcodecs/help_mp.h	1021;"	d
MSGTR_LIBVO_TDFXVID_UnknownFormat	libavfilter/libmpcodecs/help_mp.h	1032;"	d
MSGTR_LIBVO_TDFXVID_UnsupportedInputFormat	libavfilter/libmpcodecs/help_mp.h	1017;"	d
MSGTR_LIBVO_TGA_UnknownSubdevice	libavfilter/libmpcodecs/help_mp.h	1047;"	d
MSGTR_LIBVO_VESA_BelowWillBePrintedOemInfo	libavfilter/libmpcodecs/help_mp.h	1061;"	d
MSGTR_LIBVO_VESA_CantAllocateTemporaryBuffer	libavfilter/libmpcodecs/help_mp.h	1079;"	d
MSGTR_LIBVO_VESA_CantFindModeFor	libavfilter/libmpcodecs/help_mp.h	1086;"	d
MSGTR_LIBVO_VESA_CantFindNeitherDga	libavfilter/libmpcodecs/help_mp.h	1075;"	d
MSGTR_LIBVO_VESA_CantFindValidWindowAddress	libavfilter/libmpcodecs/help_mp.h	1077;"	d
MSGTR_LIBVO_VESA_CantInitializeSwscaler	libavfilter/libmpcodecs/help_mp.h	1071;"	d
MSGTR_LIBVO_VESA_CantInitializeVidixDriver	libavfilter/libmpcodecs/help_mp.h	1084;"	d
MSGTR_LIBVO_VESA_CantInitialozeLinuxVideoOverlay	libavfilter/libmpcodecs/help_mp.h	1082;"	d
MSGTR_LIBVO_VESA_CantUseDga	libavfilter/libmpcodecs/help_mp.h	1072;"	d
MSGTR_LIBVO_VESA_CantUseDoubleBuffering	libavfilter/libmpcodecs/help_mp.h	1074;"	d
MSGTR_LIBVO_VESA_Capabilites	libavfilter/libmpcodecs/help_mp.h	1060;"	d
MSGTR_LIBVO_VESA_CouldntOpen	libavfilter/libmpcodecs/help_mp.h	1091;"	d
MSGTR_LIBVO_VESA_DetectedInternalFatalError	libavfilter/libmpcodecs/help_mp.h	1055;"	d
MSGTR_LIBVO_VESA_FatalErrorOccurred	libavfilter/libmpcodecs/help_mp.h	1050;"	d
MSGTR_LIBVO_VESA_FoundVesaVbeBiosVersion	libavfilter/libmpcodecs/help_mp.h	1058;"	d
MSGTR_LIBVO_VESA_Hint	libavfilter/libmpcodecs/help_mp.h	1068;"	d
MSGTR_LIBVO_VESA_IncompatibleDriverVersion	libavfilter/libmpcodecs/help_mp.h	1093;"	d
MSGTR_LIBVO_VESA_InitializationComplete	libavfilter/libmpcodecs/help_mp.h	1087;"	d
MSGTR_LIBVO_VESA_InvalidOutputFormat	libavfilter/libmpcodecs/help_mp.h	1092;"	d
MSGTR_LIBVO_VESA_OemInfo	libavfilter/libmpcodecs/help_mp.h	1063;"	d
MSGTR_LIBVO_VESA_OemProductName	libavfilter/libmpcodecs/help_mp.h	1066;"	d
MSGTR_LIBVO_VESA_OemProductRev	libavfilter/libmpcodecs/help_mp.h	1067;"	d
MSGTR_LIBVO_VESA_OemRevision	libavfilter/libmpcodecs/help_mp.h	1064;"	d
MSGTR_LIBVO_VESA_OemVendor	libavfilter/libmpcodecs/help_mp.h	1065;"	d
MSGTR_LIBVO_VESA_OhYouReallyHavePictureOnTv	libavfilter/libmpcodecs/help_mp.h	1081;"	d
MSGTR_LIBVO_VESA_PossibleReasonNoVbe2BiosFound	libavfilter/libmpcodecs/help_mp.h	1057;"	d
MSGTR_LIBVO_VESA_SorryUnsupportedMode	libavfilter/libmpcodecs/help_mp.h	1080;"	d
MSGTR_LIBVO_VESA_SwitchFlipIsNotSupported	libavfilter/libmpcodecs/help_mp.h	1056;"	d
MSGTR_LIBVO_VESA_ThisBranchIsNoLongerSupported	libavfilter/libmpcodecs/help_mp.h	1090;"	d
MSGTR_LIBVO_VESA_UnableToFitTheMode	libavfilter/libmpcodecs/help_mp.h	1054;"	d
MSGTR_LIBVO_VESA_UnknownSubdevice	libavfilter/libmpcodecs/help_mp.h	1051;"	d
MSGTR_LIBVO_VESA_UsingBankSwitchingMode	libavfilter/libmpcodecs/help_mp.h	1078;"	d
MSGTR_LIBVO_VESA_UsingDga	libavfilter/libmpcodecs/help_mp.h	1073;"	d
MSGTR_LIBVO_VESA_UsingVesaMode	libavfilter/libmpcodecs/help_mp.h	1070;"	d
MSGTR_LIBVO_VESA_UsingVideoOverlay	libavfilter/libmpcodecs/help_mp.h	1083;"	d
MSGTR_LIBVO_VESA_UsingVidix	libavfilter/libmpcodecs/help_mp.h	1085;"	d
MSGTR_LIBVO_VESA_VideoMemory	libavfilter/libmpcodecs/help_mp.h	1059;"	d
MSGTR_LIBVO_VESA_YouHaveToSpecifyTheCapabilitiesOfTheMonitor	libavfilter/libmpcodecs/help_mp.h	1053;"	d
MSGTR_LIBVO_VESA_YouHaveTooLittleVideoMemory	libavfilter/libmpcodecs/help_mp.h	1052;"	d
MSGTR_LIBVO_VESA_YouShouldSee5OemRelatedLines	libavfilter/libmpcodecs/help_mp.h	1062;"	d
MSGTR_LIBVO_VESA_YouveForcedDga	libavfilter/libmpcodecs/help_mp.h	1076;"	d
MSGTR_LIBVO_X11_DrawFrameCalled	libavfilter/libmpcodecs/help_mp.h	1096;"	d
MSGTR_LIBVO_XV_CouldNotFindFreePort	libavfilter/libmpcodecs/help_mp.h	1105;"	d
MSGTR_LIBVO_XV_CouldNotGrabPort	libavfilter/libmpcodecs/help_mp.h	1104;"	d
MSGTR_LIBVO_XV_DrawFrameCalled	libavfilter/libmpcodecs/help_mp.h	1099;"	d
MSGTR_LIBVO_XV_InvalidPortParameter	libavfilter/libmpcodecs/help_mp.h	1103;"	d
MSGTR_LIBVO_XV_NoXvideoSupport	libavfilter/libmpcodecs/help_mp.h	1108;"	d
MSGTR_LIBVO_XV_SharedMemoryNotSupported	libavfilter/libmpcodecs/help_mp.h	1100;"	d
MSGTR_LIBVO_XV_XvNotSupportedByX11	libavfilter/libmpcodecs/help_mp.h	1101;"	d
MSGTR_LIBVO_XV_XvQueryAdaptorsFailed	libavfilter/libmpcodecs/help_mp.h	1102;"	d
MSGTR_LIRCcfgerr	libavfilter/libmpcodecs/help_mp.h	1383;"	d
MSGTR_LIRCopenfailed	libavfilter/libmpcodecs/help_mp.h	1382;"	d
MSGTR_LOADER_DYLD_Warning	libavfilter/libmpcodecs/help_mp.h	538;"	d
MSGTR_LameCantInit	libavfilter/libmpcodecs/help_mp.h	410;"	d
MSGTR_LamePresetEquals	libavfilter/libmpcodecs/help_mp.h	302;"	d
MSGTR_LamePresetsLongInfo	libavfilter/libmpcodecs/help_mp.h	333;"	d
MSGTR_LameVersion	libavfilter/libmpcodecs/help_mp.h	307;"	d
MSGTR_LavcAudioCodecNotFound	libavfilter/libmpcodecs/help_mp.h	424;"	d
MSGTR_LeaveTelecineMode	libavfilter/libmpcodecs/help_mp.h	1452;"	d
MSGTR_LimitingAudioPreload	libavfilter/libmpcodecs/help_mp.h	303;"	d
MSGTR_LinuxRTCInitErrorIrqpSet	libavfilter/libmpcodecs/help_mp.h	161;"	d
MSGTR_LinuxRTCInitErrorPieOn	libavfilter/libmpcodecs/help_mp.h	163;"	d
MSGTR_LinuxRTCReadError	libavfilter/libmpcodecs/help_mp.h	172;"	d
MSGTR_LoadingConfig	libavfilter/libmpcodecs/help_mp.h	153;"	d
MSGTR_LoadingExtensionProfile	libavfilter/libmpcodecs/help_mp.h	155;"	d
MSGTR_LoadingProtocolProfile	libavfilter/libmpcodecs/help_mp.h	154;"	d
MSGTR_LoadingSubtitles	libavfilter/libmpcodecs/help_mp.h	811;"	d
MSGTR_LoopStatus	libavfilter/libmpcodecs/help_mp.h	247;"	d
MSGTR_MENU_AboutMPlayer	libavfilter/libmpcodecs/help_mp.h	610;"	d
MSGTR_MENU_AspectRatio	libavfilter/libmpcodecs/help_mp.h	647;"	d
MSGTR_MENU_AudioLanguages	libavfilter/libmpcodecs/help_mp.h	639;"	d
MSGTR_MENU_AudioTrack	libavfilter/libmpcodecs/help_mp.h	648;"	d
MSGTR_MENU_Chapter	libavfilter/libmpcodecs/help_mp.h	638;"	d
MSGTR_MENU_Chapters	libavfilter/libmpcodecs/help_mp.h	637;"	d
MSGTR_MENU_DVD	libavfilter/libmpcodecs/help_mp.h	630;"	d
MSGTR_MENU_DoubleSize	libavfilter/libmpcodecs/help_mp.h	628;"	d
MSGTR_MENU_DropSubtitle	libavfilter/libmpcodecs/help_mp.h	617;"	d
MSGTR_MENU_Exit	libavfilter/libmpcodecs/help_mp.h	644;"	d
MSGTR_MENU_FullScreen	libavfilter/libmpcodecs/help_mp.h	629;"	d
MSGTR_MENU_HalfSize	libavfilter/libmpcodecs/help_mp.h	626;"	d
MSGTR_MENU_LoadExternAudioFile	libavfilter/libmpcodecs/help_mp.h	618;"	d
MSGTR_MENU_LoadSubtitle	libavfilter/libmpcodecs/help_mp.h	616;"	d
MSGTR_MENU_Mute	libavfilter/libmpcodecs/help_mp.h	645;"	d
MSGTR_MENU_NextStream	libavfilter/libmpcodecs/help_mp.h	623;"	d
MSGTR_MENU_None	libavfilter/libmpcodecs/help_mp.h	636;"	d
MSGTR_MENU_NormalSize	libavfilter/libmpcodecs/help_mp.h	627;"	d
MSGTR_MENU_Open	libavfilter/libmpcodecs/help_mp.h	611;"	d
MSGTR_MENU_Original	libavfilter/libmpcodecs/help_mp.h	646;"	d
MSGTR_MENU_Pause	libavfilter/libmpcodecs/help_mp.h	621;"	d
MSGTR_MENU_Play	libavfilter/libmpcodecs/help_mp.h	620;"	d
MSGTR_MENU_PlayDVD	libavfilter/libmpcodecs/help_mp.h	614;"	d
MSGTR_MENU_PlayDisc	libavfilter/libmpcodecs/help_mp.h	632;"	d
MSGTR_MENU_PlayFile	libavfilter/libmpcodecs/help_mp.h	612;"	d
MSGTR_MENU_PlayList	libavfilter/libmpcodecs/help_mp.h	641;"	d
MSGTR_MENU_PlayURL	libavfilter/libmpcodecs/help_mp.h	615;"	d
MSGTR_MENU_PlayVCD	libavfilter/libmpcodecs/help_mp.h	613;"	d
MSGTR_MENU_Playing	libavfilter/libmpcodecs/help_mp.h	619;"	d
MSGTR_MENU_Preferences	libavfilter/libmpcodecs/help_mp.h	643;"	d
MSGTR_MENU_PrevStream	libavfilter/libmpcodecs/help_mp.h	624;"	d
MSGTR_MENU_ShowDVDMenu	libavfilter/libmpcodecs/help_mp.h	633;"	d
MSGTR_MENU_Size	libavfilter/libmpcodecs/help_mp.h	625;"	d
MSGTR_MENU_SkinBrowser	libavfilter/libmpcodecs/help_mp.h	642;"	d
MSGTR_MENU_Stop	libavfilter/libmpcodecs/help_mp.h	622;"	d
MSGTR_MENU_SubtitleLanguages	libavfilter/libmpcodecs/help_mp.h	640;"	d
MSGTR_MENU_Subtitles	libavfilter/libmpcodecs/help_mp.h	651;"	d
MSGTR_MENU_Title	libavfilter/libmpcodecs/help_mp.h	635;"	d
MSGTR_MENU_Titles	libavfilter/libmpcodecs/help_mp.h	634;"	d
MSGTR_MENU_Track	libavfilter/libmpcodecs/help_mp.h	649;"	d
MSGTR_MENU_VCD	libavfilter/libmpcodecs/help_mp.h	631;"	d
MSGTR_MENU_VideoTrack	libavfilter/libmpcodecs/help_mp.h	650;"	d
MSGTR_MEncoderMP3LameHelp	libavfilter/libmpcodecs/help_mp.h	430;"	d
MSGTR_MOVcomprhdr	libavfilter/libmpcodecs/help_mp.h	1436;"	d
MSGTR_MOVtooManyTrk	libavfilter/libmpcodecs/help_mp.h	1438;"	d
MSGTR_MOVvariableFourCC	libavfilter/libmpcodecs/help_mp.h	1437;"	d
MSGTR_MP3AudioSelected	libavfilter/libmpcodecs/help_mp.h	297;"	d
MSGTR_MP3WaveFormatSizeNot30	libavfilter/libmpcodecs/help_mp.h	422;"	d
MSGTR_MPCODECS_ArithmeticMeanOfQP	libavfilter/libmpcodecs/help_mp.h	1656;"	d
MSGTR_MPCODECS_AudioFramesizeDiffers	libavfilter/libmpcodecs/help_mp.h	1638;"	d
MSGTR_MPCODECS_CompressorFlags	libavfilter/libmpcodecs/help_mp.h	1695;"	d
MSGTR_MPCODECS_CompressorSubtype	libavfilter/libmpcodecs/help_mp.h	1694;"	d
MSGTR_MPCODECS_CompressorType	libavfilter/libmpcodecs/help_mp.h	1693;"	d
MSGTR_MPCODECS_CouldntAllocateImageForCinepakCodec	libavfilter/libmpcodecs/help_mp.h	1652;"	d
MSGTR_MPCODECS_CouldntAllocateImageForCodec	libavfilter/libmpcodecs/help_mp.h	1658;"	d
MSGTR_MPCODECS_CropArea	libavfilter/libmpcodecs/help_mp.h	1684;"	d
MSGTR_MPCODECS_CropBadPositionWidthHeight	libavfilter/libmpcodecs/help_mp.h	1681;"	d
MSGTR_MPCODECS_DRIFailure	libavfilter/libmpcodecs/help_mp.h	1657;"	d
MSGTR_MPCODECS_ErrorParsingArgument	libavfilter/libmpcodecs/help_mp.h	1690;"	d
MSGTR_MPCODECS_Flags	libavfilter/libmpcodecs/help_mp.h	1696;"	d
MSGTR_MPCODECS_FullDRNotPossible	libavfilter/libmpcodecs/help_mp.h	1700;"	d
MSGTR_MPCODECS_FunWhydowegetNULL	libavfilter/libmpcodecs/help_mp.h	1702;"	d
MSGTR_MPCODECS_HighQualityEncodingSelected	libavfilter/libmpcodecs/help_mp.h	1667;"	d
MSGTR_MPCODECS_McGetBufferShouldWorkOnlyWithXVMC	libavfilter/libmpcodecs/help_mp.h	1661;"	d
MSGTR_MPCODECS_NoVfwCodecSpecified	libavfilter/libmpcodecs/help_mp.h	1672;"	d
MSGTR_MPCODECS_OnlyBuffersAllocatedByVoXvmcAllowed	libavfilter/libmpcodecs/help_mp.h	1664;"	d
MSGTR_MPCODECS_OutputWithFourccNotSupported	libavfilter/libmpcodecs/help_mp.h	1671;"	d
MSGTR_MPCODECS_Quality	libavfilter/libmpcodecs/help_mp.h	1697;"	d
MSGTR_MPCODECS_TryingPixfmt	libavfilter/libmpcodecs/help_mp.h	1660;"	d
MSGTR_MPCODECS_UnexpectedInitVoError	libavfilter/libmpcodecs/help_mp.h	1662;"	d
MSGTR_MPCODECS_UnknownFormatName	libavfilter/libmpcodecs/help_mp.h	1687;"	d
MSGTR_MPCODECS_UnrecoverableErrorRenderBuffersNotTaken	libavfilter/libmpcodecs/help_mp.h	1663;"	d
MSGTR_MPCODECS_UsingConstantQscale	libavfilter/libmpcodecs/help_mp.h	1668;"	d
MSGTR_MPCODECS_WarnNextFilterDoesntSupport	libavfilter/libmpcodecs/help_mp.h	1705;"	d
MSGTR_MPCODECS_WarnNextFilterDoesntSupportSlices	libavfilter/libmpcodecs/help_mp.h	1701;"	d
MSGTR_MPCODECS_XVMCAcceleratedCodec	libavfilter/libmpcodecs/help_mp.h	1655;"	d
MSGTR_MPCODECS_XVMCAcceleratedMPEG2	libavfilter/libmpcodecs/help_mp.h	1659;"	d
MSGTR_MPDEMUX_AIALSA1X_CannotSetBufferTime	libavfilter/libmpcodecs/help_mp.h	1779;"	d
MSGTR_MPDEMUX_AIALSA1X_CannotSetPeriodTime	libavfilter/libmpcodecs/help_mp.h	1780;"	d
MSGTR_MPDEMUX_AIALSA1X_CannotSetSamplerate	libavfilter/libmpcodecs/help_mp.h	1778;"	d
MSGTR_MPDEMUX_AIALSA_AlsaReadWriteError	libavfilter/libmpcodecs/help_mp.h	1795;"	d
MSGTR_MPDEMUX_AIALSA_AlsaStatus	libavfilter/libmpcodecs/help_mp.h	1793;"	d
MSGTR_MPDEMUX_AIALSA_AlsaStatusError	libavfilter/libmpcodecs/help_mp.h	1791;"	d
MSGTR_MPDEMUX_AIALSA_AlsaXRUN	libavfilter/libmpcodecs/help_mp.h	1792;"	d
MSGTR_MPDEMUX_AIALSA_AlsaXRUNPrepareError	libavfilter/libmpcodecs/help_mp.h	1794;"	d
MSGTR_MPDEMUX_AIALSA_CannotInstallHWParams	libavfilter/libmpcodecs/help_mp.h	1787;"	d
MSGTR_MPDEMUX_AIALSA_CannotInstallSWParams	libavfilter/libmpcodecs/help_mp.h	1789;"	d
MSGTR_MPDEMUX_AIALSA_ErrorOpeningAudio	libavfilter/libmpcodecs/help_mp.h	1790;"	d
MSGTR_MPDEMUX_AIALSA_PcmBrokenConfig	libavfilter/libmpcodecs/help_mp.h	1783;"	d
MSGTR_MPDEMUX_AIALSA_PeriodEqualsBufferSize	libavfilter/libmpcodecs/help_mp.h	1788;"	d
MSGTR_MPDEMUX_AIALSA_UnavailableAccessType	libavfilter/libmpcodecs/help_mp.h	1784;"	d
MSGTR_MPDEMUX_AIALSA_UnavailableChanCount	libavfilter/libmpcodecs/help_mp.h	1786;"	d
MSGTR_MPDEMUX_AIALSA_UnavailableSampleFmt	libavfilter/libmpcodecs/help_mp.h	1785;"	d
MSGTR_MPDEMUX_AIOSS_AudioBlockSize2Low	libavfilter/libmpcodecs/help_mp.h	1807;"	d
MSGTR_MPDEMUX_AIOSS_AudioBlockSizeZero	libavfilter/libmpcodecs/help_mp.h	1806;"	d
MSGTR_MPDEMUX_AIOSS_Unable2GetBlockSize	libavfilter/libmpcodecs/help_mp.h	1805;"	d
MSGTR_MPDEMUX_AIOSS_Unable2Open	libavfilter/libmpcodecs/help_mp.h	1800;"	d
MSGTR_MPDEMUX_AIOSS_Unable2SetAudioFmt	libavfilter/libmpcodecs/help_mp.h	1802;"	d
MSGTR_MPDEMUX_AIOSS_Unable2SetChanCount	libavfilter/libmpcodecs/help_mp.h	1798;"	d
MSGTR_MPDEMUX_AIOSS_Unable2SetSamplerate	libavfilter/libmpcodecs/help_mp.h	1803;"	d
MSGTR_MPDEMUX_AIOSS_Unable2SetStereo	libavfilter/libmpcodecs/help_mp.h	1799;"	d
MSGTR_MPDEMUX_AIOSS_Unable2SetTrigger	libavfilter/libmpcodecs/help_mp.h	1804;"	d
MSGTR_MPDEMUX_AIOSS_UnsupportedFmt	libavfilter/libmpcodecs/help_mp.h	1801;"	d
MSGTR_MPDEMUX_ASFHDR_AudioVideoHeaderNotFound	libavfilter/libmpcodecs/help_mp.h	1469;"	d
MSGTR_MPDEMUX_ASFHDR_DRMLicenseURL	libavfilter/libmpcodecs/help_mp.h	1471;"	d
MSGTR_MPDEMUX_ASFHDR_DRMProtected	libavfilter/libmpcodecs/help_mp.h	1472;"	d
MSGTR_MPDEMUX_ASFHDR_DVRWantsLibavformat	libavfilter/libmpcodecs/help_mp.h	1467;"	d
MSGTR_MPDEMUX_ASFHDR_EOFWhileReadingHeader	libavfilter/libmpcodecs/help_mp.h	1466;"	d
MSGTR_MPDEMUX_ASFHDR_HeaderMallocFailed	libavfilter/libmpcodecs/help_mp.h	1465;"	d
MSGTR_MPDEMUX_ASFHDR_HeaderSizeOver1MB	libavfilter/libmpcodecs/help_mp.h	1464;"	d
MSGTR_MPDEMUX_ASFHDR_InvalidLengthInASFHeader	libavfilter/libmpcodecs/help_mp.h	1470;"	d
MSGTR_MPDEMUX_ASFHDR_NoDataChunkAfterHeader	libavfilter/libmpcodecs/help_mp.h	1468;"	d
MSGTR_MPDEMUX_ASF_ASFHTTPParseWarnCuttedPragma	libavfilter/libmpcodecs/help_mp.h	1853;"	d
MSGTR_MPDEMUX_ASF_ASFRedirector	libavfilter/libmpcodecs/help_mp.h	1848;"	d
MSGTR_MPDEMUX_ASF_Bandwidth2SmallCannotPlay	libavfilter/libmpcodecs/help_mp.h	1841;"	d
MSGTR_MPDEMUX_ASF_Bandwidth2SmallDeselectedAudio	libavfilter/libmpcodecs/help_mp.h	1842;"	d
MSGTR_MPDEMUX_ASF_Bandwidth2SmallDeselectedVideo	libavfilter/libmpcodecs/help_mp.h	1843;"	d
MSGTR_MPDEMUX_ASF_BufferMallocFailed	libavfilter/libmpcodecs/help_mp.h	1837;"	d
MSGTR_MPDEMUX_ASF_ErrChunk2Small	libavfilter/libmpcodecs/help_mp.h	1839;"	d
MSGTR_MPDEMUX_ASF_ErrChunkBiggerThanPacket	libavfilter/libmpcodecs/help_mp.h	1846;"	d
MSGTR_MPDEMUX_ASF_ErrReadingChunk	libavfilter/libmpcodecs/help_mp.h	1847;"	d
MSGTR_MPDEMUX_ASF_ErrReadingChunkHeader	libavfilter/libmpcodecs/help_mp.h	1845;"	d
MSGTR_MPDEMUX_ASF_ErrReadingNetworkStream	libavfilter/libmpcodecs/help_mp.h	1838;"	d
MSGTR_MPDEMUX_ASF_ErrSubChunkNumberInvalid	libavfilter/libmpcodecs/help_mp.h	1840;"	d
MSGTR_MPDEMUX_ASF_ErrorParsingChunkHeader	libavfilter/libmpcodecs/help_mp.h	1835;"	d
MSGTR_MPDEMUX_ASF_Failed2ParseHTTPResponse	libavfilter/libmpcodecs/help_mp.h	1851;"	d
MSGTR_MPDEMUX_ASF_HeaderParseFailed	libavfilter/libmpcodecs/help_mp.h	1855;"	d
MSGTR_MPDEMUX_ASF_InfoStreamASFURL	libavfilter/libmpcodecs/help_mp.h	1858;"	d
MSGTR_MPDEMUX_ASF_InvalidLenInHeader	libavfilter/libmpcodecs/help_mp.h	1844;"	d
MSGTR_MPDEMUX_ASF_InvalidProxyURL	libavfilter/libmpcodecs/help_mp.h	1849;"	d
MSGTR_MPDEMUX_ASF_NoHeaderAtFirstChunk	libavfilter/libmpcodecs/help_mp.h	1836;"	d
MSGTR_MPDEMUX_ASF_NoStreamFound	libavfilter/libmpcodecs/help_mp.h	1856;"	d
MSGTR_MPDEMUX_ASF_ServerReturn	libavfilter/libmpcodecs/help_mp.h	1852;"	d
MSGTR_MPDEMUX_ASF_SizeConfirmMismatch	libavfilter/libmpcodecs/help_mp.h	1833;"	d
MSGTR_MPDEMUX_ASF_SocketWriteError	libavfilter/libmpcodecs/help_mp.h	1854;"	d
MSGTR_MPDEMUX_ASF_StreamChunkSize2Small	libavfilter/libmpcodecs/help_mp.h	1832;"	d
MSGTR_MPDEMUX_ASF_StreamingFailed	libavfilter/libmpcodecs/help_mp.h	1859;"	d
MSGTR_MPDEMUX_ASF_UnknownASFStreamType	libavfilter/libmpcodecs/help_mp.h	1850;"	d
MSGTR_MPDEMUX_ASF_UnknownASFStreamingType	libavfilter/libmpcodecs/help_mp.h	1857;"	d
MSGTR_MPDEMUX_ASF_WarnDropHeader	libavfilter/libmpcodecs/help_mp.h	1834;"	d
MSGTR_MPDEMUX_AUDIOIN_ErrFatalCannotRecover	libavfilter/libmpcodecs/help_mp.h	1864;"	d
MSGTR_MPDEMUX_AUDIOIN_ErrReadingAudio	libavfilter/libmpcodecs/help_mp.h	1862;"	d
MSGTR_MPDEMUX_AUDIOIN_NotEnoughSamples	libavfilter/libmpcodecs/help_mp.h	1865;"	d
MSGTR_MPDEMUX_AUDIOIN_XRUNSomeFramesMayBeLeftOut	libavfilter/libmpcodecs/help_mp.h	1863;"	d
MSGTR_MPDEMUX_AUDIO_UnknownFormat	libavfilter/libmpcodecs/help_mp.h	1500;"	d
MSGTR_MPDEMUX_AVIHDR_AdditionalRIFFHdr	libavfilter/libmpcodecs/help_mp.h	1484;"	d
MSGTR_MPDEMUX_AVIHDR_BrokenChunk	libavfilter/libmpcodecs/help_mp.h	1486;"	d
MSGTR_MPDEMUX_AVIHDR_BrokenODMLfile	libavfilter/libmpcodecs/help_mp.h	1488;"	d
MSGTR_MPDEMUX_AVIHDR_BuildingODMLidx	libavfilter/libmpcodecs/help_mp.h	1487;"	d
MSGTR_MPDEMUX_AVIHDR_CantReadIdxFile	libavfilter/libmpcodecs/help_mp.h	1489;"	d
MSGTR_MPDEMUX_AVIHDR_EmptyList	libavfilter/libmpcodecs/help_mp.h	1475;"	d
MSGTR_MPDEMUX_AVIHDR_Failed2WriteIdxFile	libavfilter/libmpcodecs/help_mp.h	1496;"	d
MSGTR_MPDEMUX_AVIHDR_FailedMallocForIdxFile	libavfilter/libmpcodecs/help_mp.h	1491;"	d
MSGTR_MPDEMUX_AVIHDR_FoundAVIV2Header	libavfilter/libmpcodecs/help_mp.h	1482;"	d
MSGTR_MPDEMUX_AVIHDR_FoundBitmapInfoHeader	libavfilter/libmpcodecs/help_mp.h	1477;"	d
MSGTR_MPDEMUX_AVIHDR_FoundMovieAt	libavfilter/libmpcodecs/help_mp.h	1476;"	d
MSGTR_MPDEMUX_AVIHDR_FoundWaveFmt	libavfilter/libmpcodecs/help_mp.h	1481;"	d
MSGTR_MPDEMUX_AVIHDR_GeneratingIdx	libavfilter/libmpcodecs/help_mp.h	1494;"	d
MSGTR_MPDEMUX_AVIHDR_IdxFileLoaded	libavfilter/libmpcodecs/help_mp.h	1493;"	d
MSGTR_MPDEMUX_AVIHDR_IdxFileSaved	libavfilter/libmpcodecs/help_mp.h	1497;"	d
MSGTR_MPDEMUX_AVIHDR_IdxGeneratedForHowManyChunks	libavfilter/libmpcodecs/help_mp.h	1495;"	d
MSGTR_MPDEMUX_AVIHDR_NotValidMPidxFile	libavfilter/libmpcodecs/help_mp.h	1490;"	d
MSGTR_MPDEMUX_AVIHDR_PrematureEOF	libavfilter/libmpcodecs/help_mp.h	1492;"	d
MSGTR_MPDEMUX_AVIHDR_ReadingIndexBlockChunksForFrames	libavfilter/libmpcodecs/help_mp.h	1483;"	d
MSGTR_MPDEMUX_AVIHDR_RegeneratingKeyfTableForDIVX3	libavfilter/libmpcodecs/help_mp.h	1479;"	d
MSGTR_MPDEMUX_AVIHDR_RegeneratingKeyfTableForMPEG4	libavfilter/libmpcodecs/help_mp.h	1480;"	d
MSGTR_MPDEMUX_AVIHDR_RegeneratingKeyfTableForMPG4V1	libavfilter/libmpcodecs/help_mp.h	1478;"	d
MSGTR_MPDEMUX_AVIHDR_WarnNotExtendedAVIHdr	libavfilter/libmpcodecs/help_mp.h	1485;"	d
MSGTR_MPDEMUX_CACHE2_NonCacheableStream	libavfilter/libmpcodecs/help_mp.h	1868;"	d
MSGTR_MPDEMUX_CACHE2_ReadFileposDiffers	libavfilter/libmpcodecs/help_mp.h	1869;"	d
MSGTR_MPDEMUX_CDDA_AudioCDFoundWithNTracks	libavfilter/libmpcodecs/help_mp.h	1913;"	d
MSGTR_MPDEMUX_CDDA_CantOpenCDDADevice	libavfilter/libmpcodecs/help_mp.h	1911;"	d
MSGTR_MPDEMUX_CDDA_CantOpenDisc	libavfilter/libmpcodecs/help_mp.h	1912;"	d
MSGTR_MPDEMUX_CDDB_AlbumNotFound	libavfilter/libmpcodecs/help_mp.h	1932;"	d
MSGTR_MPDEMUX_CDDB_FailedToCreateDirectory	libavfilter/libmpcodecs/help_mp.h	1925;"	d
MSGTR_MPDEMUX_CDDB_FailedToGetProtocolLevel	libavfilter/libmpcodecs/help_mp.h	1935;"	d
MSGTR_MPDEMUX_CDDB_FailedToOpenDevice	libavfilter/libmpcodecs/help_mp.h	1917;"	d
MSGTR_MPDEMUX_CDDB_FailedToReadHTTPResponse	libavfilter/libmpcodecs/help_mp.h	1920;"	d
MSGTR_MPDEMUX_CDDB_FailedToReadTOC	libavfilter/libmpcodecs/help_mp.h	1916;"	d
MSGTR_MPDEMUX_CDDB_FailedToSendHTTPRequest	libavfilter/libmpcodecs/help_mp.h	1919;"	d
MSGTR_MPDEMUX_CDDB_HTTPErrorNOTFOUND	libavfilter/libmpcodecs/help_mp.h	1921;"	d
MSGTR_MPDEMUX_CDDB_HTTPErrorUnknown	libavfilter/libmpcodecs/help_mp.h	1922;"	d
MSGTR_MPDEMUX_CDDB_InvalidXMCDDatabaseReturned	libavfilter/libmpcodecs/help_mp.h	1927;"	d
MSGTR_MPDEMUX_CDDB_NoCDInDrive	libavfilter/libmpcodecs/help_mp.h	1936;"	d
MSGTR_MPDEMUX_CDDB_NoCacheFound	libavfilter/libmpcodecs/help_mp.h	1923;"	d
MSGTR_MPDEMUX_CDDB_NoSitesInfoAvailable	libavfilter/libmpcodecs/help_mp.h	1934;"	d
MSGTR_MPDEMUX_CDDB_NotAValidURL	libavfilter/libmpcodecs/help_mp.h	1918;"	d
MSGTR_MPDEMUX_CDDB_NotAllXMCDFileHasBeenRead	libavfilter/libmpcodecs/help_mp.h	1924;"	d
MSGTR_MPDEMUX_CDDB_NotAllXMCDFileHasBeenWritten	libavfilter/libmpcodecs/help_mp.h	1926;"	d
MSGTR_MPDEMUX_CDDB_ParseOKFoundAlbumTitle	libavfilter/libmpcodecs/help_mp.h	1931;"	d
MSGTR_MPDEMUX_CDDB_ServerReturnsCommandSyntaxErr	libavfilter/libmpcodecs/help_mp.h	1933;"	d
MSGTR_MPDEMUX_CDDB_UnableToFindEOL	libavfilter/libmpcodecs/help_mp.h	1930;"	d
MSGTR_MPDEMUX_CDDB_UnexpectedFIXME	libavfilter/libmpcodecs/help_mp.h	1928;"	d
MSGTR_MPDEMUX_CDDB_UnhandledCode	libavfilter/libmpcodecs/help_mp.h	1929;"	d
MSGTR_MPDEMUX_CUEREAD_BinFilenameTested	libavfilter/libmpcodecs/help_mp.h	1940;"	d
MSGTR_MPDEMUX_CUEREAD_CannotFindBinFile	libavfilter/libmpcodecs/help_mp.h	1941;"	d
MSGTR_MPDEMUX_CUEREAD_CannotOpenCueFile	libavfilter/libmpcodecs/help_mp.h	1944;"	d
MSGTR_MPDEMUX_CUEREAD_CannotReadNBytesOfPayload	libavfilter/libmpcodecs/help_mp.h	1949;"	d
MSGTR_MPDEMUX_CUEREAD_CueStreamInfo_FilenameTrackTracksavail	libavfilter/libmpcodecs/help_mp.h	1950;"	d
MSGTR_MPDEMUX_CUEREAD_ErrGettingBinFileSize	libavfilter/libmpcodecs/help_mp.h	1946;"	d
MSGTR_MPDEMUX_CUEREAD_ErrReadingFromCueFile	libavfilter/libmpcodecs/help_mp.h	1945;"	d
MSGTR_MPDEMUX_CUEREAD_InfoTrackFormat	libavfilter/libmpcodecs/help_mp.h	1947;"	d
MSGTR_MPDEMUX_CUEREAD_UnexpectedBinFileEOF	libavfilter/libmpcodecs/help_mp.h	1948;"	d
MSGTR_MPDEMUX_CUEREAD_UnexpectedCuefileLine	libavfilter/libmpcodecs/help_mp.h	1939;"	d
MSGTR_MPDEMUX_CUEREAD_UnknownModeForBinfile	libavfilter/libmpcodecs/help_mp.h	1943;"	d
MSGTR_MPDEMUX_CUEREAD_UsingBinFile	libavfilter/libmpcodecs/help_mp.h	1942;"	d
MSGTR_MPDEMUX_DEMUXERS_FillBufferError	libavfilter/libmpcodecs/help_mp.h	1503;"	d
MSGTR_MPDEMUX_MKV_FlacTrackDoesNotContainValidHeaders	libavfilter/libmpcodecs/help_mp.h	1517;"	d
MSGTR_MPDEMUX_MKV_LzoDecompressionFailed	libavfilter/libmpcodecs/help_mp.h	1509;"	d
MSGTR_MPDEMUX_MKV_LzoInitializationFailed	libavfilter/libmpcodecs/help_mp.h	1508;"	d
MSGTR_MPDEMUX_MKV_NoAudioTrackFound	libavfilter/libmpcodecs/help_mp.h	1522;"	d
MSGTR_MPDEMUX_MKV_NoBlockDurationForSubtitleTrackFound	libavfilter/libmpcodecs/help_mp.h	1524;"	d
MSGTR_MPDEMUX_MKV_NoVideoTrackFound	libavfilter/libmpcodecs/help_mp.h	1521;"	d
MSGTR_MPDEMUX_MKV_SubtitleTypeNotSupported	libavfilter/libmpcodecs/help_mp.h	1519;"	d
MSGTR_MPDEMUX_MKV_TooManySublines	libavfilter/libmpcodecs/help_mp.h	1525;"	d
MSGTR_MPDEMUX_MKV_TooManySublinesSkippingAfterFirst	libavfilter/libmpcodecs/help_mp.h	1526;"	d
MSGTR_MPDEMUX_MKV_TrackEncrypted	libavfilter/libmpcodecs/help_mp.h	1510;"	d
MSGTR_MPDEMUX_MKV_TrackID	libavfilter/libmpcodecs/help_mp.h	1515;"	d
MSGTR_MPDEMUX_MKV_TrackIDName	libavfilter/libmpcodecs/help_mp.h	1514;"	d
MSGTR_MPDEMUX_MKV_UnknownAudioCodec	libavfilter/libmpcodecs/help_mp.h	1518;"	d
MSGTR_MPDEMUX_MKV_UnknownCodecID	libavfilter/libmpcodecs/help_mp.h	1516;"	d
MSGTR_MPDEMUX_MKV_UnknownCompression	libavfilter/libmpcodecs/help_mp.h	1512;"	d
MSGTR_MPDEMUX_MKV_UnknownContentEncoding	libavfilter/libmpcodecs/help_mp.h	1511;"	d
MSGTR_MPDEMUX_MKV_WillDisplaySubtitleTrack	libavfilter/libmpcodecs/help_mp.h	1523;"	d
MSGTR_MPDEMUX_MKV_WillPlayVideoTrack	libavfilter/libmpcodecs/help_mp.h	1520;"	d
MSGTR_MPDEMUX_MKV_ZlibCompressionUnsupported	libavfilter/libmpcodecs/help_mp.h	1513;"	d
MSGTR_MPDEMUX_MKV_ZlibDecompressionFailed	libavfilter/libmpcodecs/help_mp.h	1507;"	d
MSGTR_MPDEMUX_MKV_ZlibInitializationFailed	libavfilter/libmpcodecs/help_mp.h	1506;"	d
MSGTR_MPDEMUX_MMST_2ManyStreamID	libavfilter/libmpcodecs/help_mp.h	1822;"	d
MSGTR_MPDEMUX_MMST_CmdDataReadFailed	libavfilter/libmpcodecs/help_mp.h	1817;"	d
MSGTR_MPDEMUX_MMST_Connected	libavfilter/libmpcodecs/help_mp.h	1829;"	d
MSGTR_MPDEMUX_MMST_DataObject	libavfilter/libmpcodecs/help_mp.h	1819;"	d
MSGTR_MPDEMUX_MMST_EOFAlert	libavfilter/libmpcodecs/help_mp.h	1811;"	d
MSGTR_MPDEMUX_MMST_FileObjectPacketLen	libavfilter/libmpcodecs/help_mp.h	1820;"	d
MSGTR_MPDEMUX_MMST_GetMediaPacketErr	libavfilter/libmpcodecs/help_mp.h	1828;"	d
MSGTR_MPDEMUX_MMST_HeaderDataReadFailed	libavfilter/libmpcodecs/help_mp.h	1814;"	d
MSGTR_MPDEMUX_MMST_HeaderObject	libavfilter/libmpcodecs/help_mp.h	1818;"	d
MSGTR_MPDEMUX_MMST_InvalidHeaderSize	libavfilter/libmpcodecs/help_mp.h	1813;"	d
MSGTR_MPDEMUX_MMST_InvalidRTSPPacketSize	libavfilter/libmpcodecs/help_mp.h	1816;"	d
MSGTR_MPDEMUX_MMST_MediaDataReadFailed	libavfilter/libmpcodecs/help_mp.h	1824;"	d
MSGTR_MPDEMUX_MMST_MissingSignature	libavfilter/libmpcodecs/help_mp.h	1825;"	d
MSGTR_MPDEMUX_MMST_PatentedTechnologyJoke	libavfilter/libmpcodecs/help_mp.h	1826;"	d
MSGTR_MPDEMUX_MMST_PreHeaderReadFailed	libavfilter/libmpcodecs/help_mp.h	1812;"	d
MSGTR_MPDEMUX_MMST_StreamObjectStreamID	libavfilter/libmpcodecs/help_mp.h	1821;"	d
MSGTR_MPDEMUX_MMST_UnknownCmd	libavfilter/libmpcodecs/help_mp.h	1827;"	d
MSGTR_MPDEMUX_MMST_UnknownObject	libavfilter/libmpcodecs/help_mp.h	1823;"	d
MSGTR_MPDEMUX_MMST_WriteError	libavfilter/libmpcodecs/help_mp.h	1810;"	d
MSGTR_MPDEMUX_MMST_packet_lenReadFailed	libavfilter/libmpcodecs/help_mp.h	1815;"	d
MSGTR_MPDEMUX_NUV_NoVideoBlocksInFile	libavfilter/libmpcodecs/help_mp.h	1529;"	d
MSGTR_MPDEMUX_NW_AuthFailed	libavfilter/libmpcodecs/help_mp.h	1886;"	d
MSGTR_MPDEMUX_NW_AuthRequired	libavfilter/libmpcodecs/help_mp.h	1890;"	d
MSGTR_MPDEMUX_NW_AuthRequiredFor	libavfilter/libmpcodecs/help_mp.h	1889;"	d
MSGTR_MPDEMUX_NW_CacheSizeSetTo	libavfilter/libmpcodecs/help_mp.h	1893;"	d
MSGTR_MPDEMUX_NW_CantConnect2Server	libavfilter/libmpcodecs/help_mp.h	1876;"	d
MSGTR_MPDEMUX_NW_CantResolv	libavfilter/libmpcodecs/help_mp.h	1874;"	d
MSGTR_MPDEMUX_NW_CantResolvTryingWithoutProxy	libavfilter/libmpcodecs/help_mp.h	1882;"	d
MSGTR_MPDEMUX_NW_ConnTimeout	libavfilter/libmpcodecs/help_mp.h	1878;"	d
MSGTR_MPDEMUX_NW_ConnectError	libavfilter/libmpcodecs/help_mp.h	1880;"	d
MSGTR_MPDEMUX_NW_ConnectingToServer	libavfilter/libmpcodecs/help_mp.h	1875;"	d
MSGTR_MPDEMUX_NW_ErrSendingHTTPRequest	libavfilter/libmpcodecs/help_mp.h	1883;"	d
MSGTR_MPDEMUX_NW_ErrServerReturned	libavfilter/libmpcodecs/help_mp.h	1892;"	d
MSGTR_MPDEMUX_NW_GetSockOptFailed	libavfilter/libmpcodecs/help_mp.h	1879;"	d
MSGTR_MPDEMUX_NW_InvalidProxySettingTryingWithout	libavfilter/libmpcodecs/help_mp.h	1881;"	d
MSGTR_MPDEMUX_NW_NoPasswdProvidedTryingBlank	libavfilter/libmpcodecs/help_mp.h	1891;"	d
MSGTR_MPDEMUX_NW_Read0CouldBeEOF	libavfilter/libmpcodecs/help_mp.h	1885;"	d
MSGTR_MPDEMUX_NW_ReadFailed	libavfilter/libmpcodecs/help_mp.h	1884;"	d
MSGTR_MPDEMUX_NW_ResolvingHostForAF	libavfilter/libmpcodecs/help_mp.h	1873;"	d
MSGTR_MPDEMUX_NW_SelectFailed	libavfilter/libmpcodecs/help_mp.h	1877;"	d
MSGTR_MPDEMUX_NW_UnknownAF	libavfilter/libmpcodecs/help_mp.h	1872;"	d
MSGTR_MPDEMUX_URL_StringAlreadyEscaped	libavfilter/libmpcodecs/help_mp.h	2127;"	d
MSGTR_MPDEMUX_XMMS_ClosingPlugin	libavfilter/libmpcodecs/help_mp.h	1533;"	d
MSGTR_MPDEMUX_XMMS_FoundPlugin	libavfilter/libmpcodecs/help_mp.h	1532;"	d
MSGTR_MPDEMUX_XMMS_WaitForStart	libavfilter/libmpcodecs/help_mp.h	1534;"	d
MSGTR_MPEndposNoSizeBased	libavfilter/libmpcodecs/help_mp.h	208;"	d
MSGTR_MSGBOX_LABEL_Error	libavfilter/libmpcodecs/help_mp.h	798;"	d
MSGTR_MSGBOX_LABEL_FatalError	libavfilter/libmpcodecs/help_mp.h	797;"	d
MSGTR_MSGBOX_LABEL_Warning	libavfilter/libmpcodecs/help_mp.h	799;"	d
MSGTR_MasterQuit	libavfilter/libmpcodecs/help_mp.h	189;"	d
MSGTR_MaybeNI	libavfilter/libmpcodecs/help_mp.h	1405;"	d
MSGTR_MemAllocFailed	libavfilter/libmpcodecs/help_mp.h	420;"	d
MSGTR_MencoderWrongFormatAVI	libavfilter/libmpcodecs/help_mp.h	273;"	d
MSGTR_MencoderWrongFormatMPG	libavfilter/libmpcodecs/help_mp.h	274;"	d
MSGTR_MenuCall	libavfilter/libmpcodecs/help_mp.h	188;"	d
MSGTR_MenuInitFailed	libavfilter/libmpcodecs/help_mp.h	167;"	d
MSGTR_MenuInitialized	libavfilter/libmpcodecs/help_mp.h	166;"	d
MSGTR_MissingAudioStream	libavfilter/libmpcodecs/help_mp.h	1422;"	d
MSGTR_MissingDLLcodec	libavfilter/libmpcodecs/help_mp.h	1601;"	d
MSGTR_MissingFilename	libavfilter/libmpcodecs/help_mp.h	266;"	d
MSGTR_MissingLAVCcodec	libavfilter/libmpcodecs/help_mp.h	1603;"	d
MSGTR_MissingOptionParameter	libavfilter/libmpcodecs/help_mp.h	524;"	d
MSGTR_MissingOutputFilename	libavfilter/libmpcodecs/help_mp.h	275;"	d
MSGTR_MissingSuboptionParameter	libavfilter/libmpcodecs/help_mp.h	523;"	d
MSGTR_MissingVideoStream	libavfilter/libmpcodecs/help_mp.h	1421;"	d
MSGTR_MissingVideoStreamBug	libavfilter/libmpcodecs/help_mp.h	1423;"	d
MSGTR_MovieAspectIsSet	libavfilter/libmpcodecs/help_mp.h	1643;"	d
MSGTR_MovieAspectUndefined	libavfilter/libmpcodecs/help_mp.h	1644;"	d
MSGTR_MpegNoSequHdr	libavfilter/libmpcodecs/help_mp.h	1605;"	d
MSGTR_MuteStatus	libavfilter/libmpcodecs/help_mp.h	248;"	d
MSGTR_MuxbufMallocErr	libavfilter/libmpcodecs/help_mp.h	1394;"	d
MSGTR_MuxbufReallocErr	libavfilter/libmpcodecs/help_mp.h	1395;"	d
MSGTR_MuxbufSending	libavfilter/libmpcodecs/help_mp.h	1396;"	d
MSGTR_NEEDLAVC	libavfilter/libmpcodecs/help_mp.h	579;"	d
MSGTR_NEMDB	libavfilter/libmpcodecs/help_mp.h	576;"	d
MSGTR_NEMFMR	libavfilter/libmpcodecs/help_mp.h	577;"	d
MSGTR_NI_Detected	libavfilter/libmpcodecs/help_mp.h	1428;"	d
MSGTR_NI_Forced	libavfilter/libmpcodecs/help_mp.h	1427;"	d
MSGTR_NI_Message	libavfilter/libmpcodecs/help_mp.h	1429;"	d
MSGTR_Network	libavfilter/libmpcodecs/help_mp.h	555;"	d
MSGTR_NoAudioEncoderSelected	libavfilter/libmpcodecs/help_mp.h	269;"	d
MSGTR_NoAudioFileMismatch	libavfilter/libmpcodecs/help_mp.h	283;"	d
MSGTR_NoBalance	libavfilter/libmpcodecs/help_mp.h	1149;"	d
MSGTR_NoBindFound	libavfilter/libmpcodecs/help_mp.h	1456;"	d
MSGTR_NoChapter	libavfilter/libmpcodecs/help_mp.h	561;"	d
MSGTR_NoDVDSupport	libavfilter/libmpcodecs/help_mp.h	1958;"	d
MSGTR_NoFileGiven	libavfilter/libmpcodecs/help_mp.h	516;"	d
MSGTR_NoFileGivenOnCommandLine	libavfilter/libmpcodecs/help_mp.h	510;"	d
MSGTR_NoFileLoaded	libavfilter/libmpcodecs/help_mp.h	563;"	d
MSGTR_NoGui	libavfilter/libmpcodecs/help_mp.h	110;"	d
MSGTR_NoHomeDir	libavfilter/libmpcodecs/help_mp.h	70;"	d
MSGTR_NoIdleAndGui	libavfilter/libmpcodecs/help_mp.h	165;"	d
MSGTR_NoLavcAudioCodecName	libavfilter/libmpcodecs/help_mp.h	423;"	d
MSGTR_NoMatchingFilter	libavfilter/libmpcodecs/help_mp.h	421;"	d
MSGTR_NoMediaOpened	libavfilter/libmpcodecs/help_mp.h	559;"	d
MSGTR_NoProfileDefined	libavfilter/libmpcodecs/help_mp.h	528;"	d
MSGTR_NoSound	libavfilter/libmpcodecs/help_mp.h	113;"	d
MSGTR_NoSpeedWithFrameCopy	libavfilter/libmpcodecs/help_mp.h	284;"	d
MSGTR_NoStreamFound	libavfilter/libmpcodecs/help_mp.h	126;"	d
MSGTR_NoVideoEncoderSelected	libavfilter/libmpcodecs/help_mp.h	270;"	d
MSGTR_NoVolume	libavfilter/libmpcodecs/help_mp.h	1148;"	d
MSGTR_NotAFile	libavfilter/libmpcodecs/help_mp.h	816;"	d
MSGTR_NotAnMEncoderOption	libavfilter/libmpcodecs/help_mp.h	515;"	d
MSGTR_NotEnoughMemoryC1To32	libavfilter/libmpcodecs/help_mp.h	803;"	d
MSGTR_NotEnoughMemoryC32To1	libavfilter/libmpcodecs/help_mp.h	802;"	d
MSGTR_NotInitializeVOPorVO	libavfilter/libmpcodecs/help_mp.h	131;"	d
MSGTR_NotSystemStream	libavfilter/libmpcodecs/help_mp.h	1414;"	d
MSGTR_ON2AviFormat	libavfilter/libmpcodecs/help_mp.h	1411;"	d
MSGTR_OSDAngle	libavfilter/libmpcodecs/help_mp.h	220;"	d
MSGTR_OSDAudio	libavfilter/libmpcodecs/help_mp.h	213;"	d
MSGTR_OSDChannel	libavfilter/libmpcodecs/help_mp.h	215;"	d
MSGTR_OSDChapter	libavfilter/libmpcodecs/help_mp.h	219;"	d
MSGTR_OSDDeinterlace	libavfilter/libmpcodecs/help_mp.h	221;"	d
MSGTR_OSDSpeed	libavfilter/libmpcodecs/help_mp.h	217;"	d
MSGTR_OSDSubDelay	libavfilter/libmpcodecs/help_mp.h	216;"	d
MSGTR_OSDVideo	libavfilter/libmpcodecs/help_mp.h	214;"	d
MSGTR_OSDdisabled	libavfilter/libmpcodecs/help_mp.h	212;"	d
MSGTR_OSDenabled	libavfilter/libmpcodecs/help_mp.h	211;"	d
MSGTR_OSDosd	libavfilter/libmpcodecs/help_mp.h	218;"	d
MSGTR_Ok	libavfilter/libmpcodecs/help_mp.h	566;"	d
MSGTR_OnTopStatus	libavfilter/libmpcodecs/help_mp.h	250;"	d
MSGTR_OpenedStream	libavfilter/libmpcodecs/help_mp.h	293;"	d
MSGTR_OpeningAudioDecoder	libavfilter/libmpcodecs/help_mp.h	1623;"	d
MSGTR_OpeningAudioDemuxerFailed	libavfilter/libmpcodecs/help_mp.h	1446;"	d
MSGTR_OpeningSubtitlesDemuxerFailed	libavfilter/libmpcodecs/help_mp.h	1447;"	d
MSGTR_OpeningVideoDecoder	libavfilter/libmpcodecs/help_mp.h	1621;"	d
MSGTR_OpeningVideoFilter	libavfilter/libmpcodecs/help_mp.h	1677;"	d
MSGTR_OptionListHeader	libavfilter/libmpcodecs/help_mp.h	525;"	d
MSGTR_OtherSelect	libavfilter/libmpcodecs/help_mp.h	547;"	d
MSGTR_OutdatedCodecsConf	libavfilter/libmpcodecs/help_mp.h	504;"	d
MSGTR_PLAYLIST_DirectoryTree	libavfilter/libmpcodecs/help_mp.h	680;"	d
MSGTR_PLAYLIST_Files	libavfilter/libmpcodecs/help_mp.h	679;"	d
MSGTR_PLAYLIST_Path	libavfilter/libmpcodecs/help_mp.h	677;"	d
MSGTR_PLAYLIST_Selected	libavfilter/libmpcodecs/help_mp.h	678;"	d
MSGTR_PREFERENCES_ArtsBroken	libavfilter/libmpcodecs/help_mp.h	786;"	d
MSGTR_PREFERENCES_Audio	libavfilter/libmpcodecs/help_mp.h	683;"	d
MSGTR_PREFERENCES_AudioCodecFamily	libavfilter/libmpcodecs/help_mp.h	728;"	d
MSGTR_PREFERENCES_AudioDelay	libavfilter/libmpcodecs/help_mp.h	698;"	d
MSGTR_PREFERENCES_Audio_Device	libavfilter/libmpcodecs/help_mp.h	736;"	d
MSGTR_PREFERENCES_Audio_Mixer	libavfilter/libmpcodecs/help_mp.h	737;"	d
MSGTR_PREFERENCES_Audio_MixerChannel	libavfilter/libmpcodecs/help_mp.h	738;"	d
MSGTR_PREFERENCES_AutoQuality	libavfilter/libmpcodecs/help_mp.h	724;"	d
MSGTR_PREFERENCES_AutoSync	libavfilter/libmpcodecs/help_mp.h	780;"	d
MSGTR_PREFERENCES_AutoSyncValue	libavfilter/libmpcodecs/help_mp.h	781;"	d
MSGTR_PREFERENCES_AvailableDrivers	libavfilter/libmpcodecs/help_mp.h	691;"	d
MSGTR_PREFERENCES_CDROMDevice	libavfilter/libmpcodecs/help_mp.h	782;"	d
MSGTR_PREFERENCES_Cache	libavfilter/libmpcodecs/help_mp.h	774;"	d
MSGTR_PREFERENCES_CacheSize	libavfilter/libmpcodecs/help_mp.h	775;"	d
MSGTR_PREFERENCES_Codecs	libavfilter/libmpcodecs/help_mp.h	686;"	d
MSGTR_PREFERENCES_Coefficient	libavfilter/libmpcodecs/help_mp.h	697;"	d
MSGTR_PREFERENCES_DVDDevice	libavfilter/libmpcodecs/help_mp.h	783;"	d
MSGTR_PREFERENCES_DXR3_LAVC	libavfilter/libmpcodecs/help_mp.h	741;"	d
MSGTR_PREFERENCES_DXR3_VENC	libavfilter/libmpcodecs/help_mp.h	740;"	d
MSGTR_PREFERENCES_DirectRender	libavfilter/libmpcodecs/help_mp.h	700;"	d
MSGTR_PREFERENCES_DoNotPlaySound	libavfilter/libmpcodecs/help_mp.h	692;"	d
MSGTR_PREFERENCES_DoubleBuffer	libavfilter/libmpcodecs/help_mp.h	699;"	d
MSGTR_PREFERENCES_DriverDefault	libavfilter/libmpcodecs/help_mp.h	690;"	d
MSGTR_PREFERENCES_EnableEqualizer	libavfilter/libmpcodecs/help_mp.h	694;"	d
MSGTR_PREFERENCES_ExtraStereo	libavfilter/libmpcodecs/help_mp.h	696;"	d
MSGTR_PREFERENCES_FPS	libavfilter/libmpcodecs/help_mp.h	784;"	d
MSGTR_PREFERENCES_FRAME_Cache	libavfilter/libmpcodecs/help_mp.h	734;"	d
MSGTR_PREFERENCES_FRAME_CodecDemuxer	libavfilter/libmpcodecs/help_mp.h	733;"	d
MSGTR_PREFERENCES_FRAME_Font	libavfilter/libmpcodecs/help_mp.h	731;"	d
MSGTR_PREFERENCES_FRAME_Misc	libavfilter/libmpcodecs/help_mp.h	735;"	d
MSGTR_PREFERENCES_FRAME_OSD_Level	libavfilter/libmpcodecs/help_mp.h	729;"	d
MSGTR_PREFERENCES_FRAME_PostProcess	libavfilter/libmpcodecs/help_mp.h	732;"	d
MSGTR_PREFERENCES_FRAME_Subtitle	libavfilter/libmpcodecs/help_mp.h	730;"	d
MSGTR_PREFERENCES_Flip	libavfilter/libmpcodecs/help_mp.h	703;"	d
MSGTR_PREFERENCES_Font	libavfilter/libmpcodecs/help_mp.h	721;"	d
MSGTR_PREFERENCES_FontBlur	libavfilter/libmpcodecs/help_mp.h	770;"	d
MSGTR_PREFERENCES_FontEncoding	libavfilter/libmpcodecs/help_mp.h	769;"	d
MSGTR_PREFERENCES_FontEncoding1	libavfilter/libmpcodecs/help_mp.h	742;"	d
MSGTR_PREFERENCES_FontEncoding10	libavfilter/libmpcodecs/help_mp.h	751;"	d
MSGTR_PREFERENCES_FontEncoding11	libavfilter/libmpcodecs/help_mp.h	752;"	d
MSGTR_PREFERENCES_FontEncoding12	libavfilter/libmpcodecs/help_mp.h	753;"	d
MSGTR_PREFERENCES_FontEncoding13	libavfilter/libmpcodecs/help_mp.h	754;"	d
MSGTR_PREFERENCES_FontEncoding14	libavfilter/libmpcodecs/help_mp.h	755;"	d
MSGTR_PREFERENCES_FontEncoding15	libavfilter/libmpcodecs/help_mp.h	756;"	d
MSGTR_PREFERENCES_FontEncoding16	libavfilter/libmpcodecs/help_mp.h	757;"	d
MSGTR_PREFERENCES_FontEncoding17	libavfilter/libmpcodecs/help_mp.h	758;"	d
MSGTR_PREFERENCES_FontEncoding18	libavfilter/libmpcodecs/help_mp.h	759;"	d
MSGTR_PREFERENCES_FontEncoding19	libavfilter/libmpcodecs/help_mp.h	760;"	d
MSGTR_PREFERENCES_FontEncoding2	libavfilter/libmpcodecs/help_mp.h	743;"	d
MSGTR_PREFERENCES_FontEncoding20	libavfilter/libmpcodecs/help_mp.h	761;"	d
MSGTR_PREFERENCES_FontEncoding21	libavfilter/libmpcodecs/help_mp.h	762;"	d
MSGTR_PREFERENCES_FontEncoding22	libavfilter/libmpcodecs/help_mp.h	763;"	d
MSGTR_PREFERENCES_FontEncoding23	libavfilter/libmpcodecs/help_mp.h	764;"	d
MSGTR_PREFERENCES_FontEncoding3	libavfilter/libmpcodecs/help_mp.h	744;"	d
MSGTR_PREFERENCES_FontEncoding4	libavfilter/libmpcodecs/help_mp.h	745;"	d
MSGTR_PREFERENCES_FontEncoding5	libavfilter/libmpcodecs/help_mp.h	746;"	d
MSGTR_PREFERENCES_FontEncoding6	libavfilter/libmpcodecs/help_mp.h	747;"	d
MSGTR_PREFERENCES_FontEncoding7	libavfilter/libmpcodecs/help_mp.h	748;"	d
MSGTR_PREFERENCES_FontEncoding8	libavfilter/libmpcodecs/help_mp.h	749;"	d
MSGTR_PREFERENCES_FontEncoding9	libavfilter/libmpcodecs/help_mp.h	750;"	d
MSGTR_PREFERENCES_FontFactor	libavfilter/libmpcodecs/help_mp.h	722;"	d
MSGTR_PREFERENCES_FontNoAutoScale	libavfilter/libmpcodecs/help_mp.h	765;"	d
MSGTR_PREFERENCES_FontOSDScale	libavfilter/libmpcodecs/help_mp.h	773;"	d
MSGTR_PREFERENCES_FontOutLine	libavfilter/libmpcodecs/help_mp.h	771;"	d
MSGTR_PREFERENCES_FontPropDiagonal	libavfilter/libmpcodecs/help_mp.h	768;"	d
MSGTR_PREFERENCES_FontPropHeight	libavfilter/libmpcodecs/help_mp.h	767;"	d
MSGTR_PREFERENCES_FontPropWidth	libavfilter/libmpcodecs/help_mp.h	766;"	d
MSGTR_PREFERENCES_FontTextScale	libavfilter/libmpcodecs/help_mp.h	772;"	d
MSGTR_PREFERENCES_FrameDrop	libavfilter/libmpcodecs/help_mp.h	701;"	d
MSGTR_PREFERENCES_HFrameDrop	libavfilter/libmpcodecs/help_mp.h	702;"	d
MSGTR_PREFERENCES_IDX	libavfilter/libmpcodecs/help_mp.h	726;"	d
MSGTR_PREFERENCES_LoadFullscreen	libavfilter/libmpcodecs/help_mp.h	776;"	d
MSGTR_PREFERENCES_Message	libavfilter/libmpcodecs/help_mp.h	739;"	d
MSGTR_PREFERENCES_Misc	libavfilter/libmpcodecs/help_mp.h	688;"	d
MSGTR_PREFERENCES_NI	libavfilter/libmpcodecs/help_mp.h	725;"	d
MSGTR_PREFERENCES_None	libavfilter/libmpcodecs/help_mp.h	689;"	d
MSGTR_PREFERENCES_NormalizeSound	libavfilter/libmpcodecs/help_mp.h	693;"	d
MSGTR_PREFERENCES_OSDProgress	libavfilter/libmpcodecs/help_mp.h	706;"	d
MSGTR_PREFERENCES_OSDTimer	libavfilter/libmpcodecs/help_mp.h	705;"	d
MSGTR_PREFERENCES_OSDTimerPercentageTotalTime	libavfilter/libmpcodecs/help_mp.h	707;"	d
MSGTR_PREFERENCES_Panscan	libavfilter/libmpcodecs/help_mp.h	704;"	d
MSGTR_PREFERENCES_PlayBar	libavfilter/libmpcodecs/help_mp.h	779;"	d
MSGTR_PREFERENCES_PostProcess	libavfilter/libmpcodecs/help_mp.h	723;"	d
MSGTR_PREFERENCES_SUB_ASS_BOTTOM_MARGIN	libavfilter/libmpcodecs/help_mp.h	720;"	d
MSGTR_PREFERENCES_SUB_ASS_TOP_MARGIN	libavfilter/libmpcodecs/help_mp.h	719;"	d
MSGTR_PREFERENCES_SUB_ASS_USE_MARGINS	libavfilter/libmpcodecs/help_mp.h	718;"	d
MSGTR_PREFERENCES_SUB_AutoLoad	libavfilter/libmpcodecs/help_mp.h	712;"	d
MSGTR_PREFERENCES_SUB_Delay	libavfilter/libmpcodecs/help_mp.h	709;"	d
MSGTR_PREFERENCES_SUB_FPS	libavfilter/libmpcodecs/help_mp.h	710;"	d
MSGTR_PREFERENCES_SUB_MPSUB	libavfilter/libmpcodecs/help_mp.h	714;"	d
MSGTR_PREFERENCES_SUB_Overlap	libavfilter/libmpcodecs/help_mp.h	716;"	d
MSGTR_PREFERENCES_SUB_POS	libavfilter/libmpcodecs/help_mp.h	711;"	d
MSGTR_PREFERENCES_SUB_SRT	libavfilter/libmpcodecs/help_mp.h	715;"	d
MSGTR_PREFERENCES_SUB_USE_ASS	libavfilter/libmpcodecs/help_mp.h	717;"	d
MSGTR_PREFERENCES_SUB_Unicode	libavfilter/libmpcodecs/help_mp.h	713;"	d
MSGTR_PREFERENCES_SaveWinPos	libavfilter/libmpcodecs/help_mp.h	777;"	d
MSGTR_PREFERENCES_ShowVideoWindow	libavfilter/libmpcodecs/help_mp.h	785;"	d
MSGTR_PREFERENCES_SoftwareMixer	libavfilter/libmpcodecs/help_mp.h	695;"	d
MSGTR_PREFERENCES_Subtitle	libavfilter/libmpcodecs/help_mp.h	708;"	d
MSGTR_PREFERENCES_SubtitleOSD	libavfilter/libmpcodecs/help_mp.h	685;"	d
MSGTR_PREFERENCES_Video	libavfilter/libmpcodecs/help_mp.h	684;"	d
MSGTR_PREFERENCES_VideoCodecFamily	libavfilter/libmpcodecs/help_mp.h	727;"	d
MSGTR_PREFERENCES_XSCREENSAVER	libavfilter/libmpcodecs/help_mp.h	778;"	d
MSGTR_Panscan	libavfilter/libmpcodecs/help_mp.h	238;"	d
MSGTR_ParseError	libavfilter/libmpcodecs/help_mp.h	481;"	d
MSGTR_ParseErrorFIDAliasNotNumber	libavfilter/libmpcodecs/help_mp.h	483;"	d
MSGTR_ParseErrorFIDNotNumber	libavfilter/libmpcodecs/help_mp.h	482;"	d
MSGTR_Paused	libavfilter/libmpcodecs/help_mp.h	132;"	d
MSGTR_PlayList	libavfilter/libmpcodecs/help_mp.h	551;"	d
MSGTR_Playing	libavfilter/libmpcodecs/help_mp.h	112;"	d
MSGTR_PlaylistLoadUnable	libavfilter/libmpcodecs/help_mp.h	133;"	d
MSGTR_Preferences	libavfilter/libmpcodecs/help_mp.h	557;"	d
MSGTR_Profile	libavfilter/libmpcodecs/help_mp.h	531;"	d
MSGTR_ProfileInclusionTooDeep	libavfilter/libmpcodecs/help_mp.h	527;"	d
MSGTR_PropertyListHeader	libavfilter/libmpcodecs/help_mp.h	534;"	d
MSGTR_RADIO_AllocateBufferFailed	libavfilter/libmpcodecs/help_mp.h	2007;"	d
MSGTR_RADIO_AudioBuffer	libavfilter/libmpcodecs/help_mp.h	2006;"	d
MSGTR_RADIO_AudioInInitFailed	libavfilter/libmpcodecs/help_mp.h	2016;"	d
MSGTR_RADIO_AudioInSetupFailed	libavfilter/libmpcodecs/help_mp.h	2018;"	d
MSGTR_RADIO_AudioInitFailed	libavfilter/libmpcodecs/help_mp.h	2005;"	d
MSGTR_RADIO_AvailableDrivers	libavfilter/libmpcodecs/help_mp.h	2026;"	d
MSGTR_RADIO_BufferEmpty	libavfilter/libmpcodecs/help_mp.h	2004;"	d
MSGTR_RADIO_BufferString	libavfilter/libmpcodecs/help_mp.h	2017;"	d
MSGTR_RADIO_CaptureStarting	libavfilter/libmpcodecs/help_mp.h	2019;"	d
MSGTR_RADIO_ChangeChannelNoChannelList	libavfilter/libmpcodecs/help_mp.h	2010;"	d
MSGTR_RADIO_ChannelNamesDetected	libavfilter/libmpcodecs/help_mp.h	1985;"	d
MSGTR_RADIO_ClearBufferFailed	libavfilter/libmpcodecs/help_mp.h	2020;"	d
MSGTR_RADIO_CurrentFreq	libavfilter/libmpcodecs/help_mp.h	2008;"	d
MSGTR_RADIO_DoneParsingChannels	libavfilter/libmpcodecs/help_mp.h	1992;"	d
MSGTR_RADIO_DriverBSDBT848	libavfilter/libmpcodecs/help_mp.h	2025;"	d
MSGTR_RADIO_DriverUnknownStr	libavfilter/libmpcodecs/help_mp.h	2022;"	d
MSGTR_RADIO_DriverV4L	libavfilter/libmpcodecs/help_mp.h	2024;"	d
MSGTR_RADIO_DriverV4L2	libavfilter/libmpcodecs/help_mp.h	2023;"	d
MSGTR_RADIO_DroppingFrame	libavfilter/libmpcodecs/help_mp.h	2003;"	d
MSGTR_RADIO_FreqParameterDetected	libavfilter/libmpcodecs/help_mp.h	1991;"	d
MSGTR_RADIO_FreqRange	libavfilter/libmpcodecs/help_mp.h	1986;"	d
MSGTR_RADIO_GetFreqFailed	libavfilter/libmpcodecs/help_mp.h	1998;"	d
MSGTR_RADIO_GetTunerFailed	libavfilter/libmpcodecs/help_mp.h	1993;"	d
MSGTR_RADIO_GetVolumeFailed	libavfilter/libmpcodecs/help_mp.h	2001;"	d
MSGTR_RADIO_InitFracFailed	libavfilter/libmpcodecs/help_mp.h	2013;"	d
MSGTR_RADIO_NotRadioDevice	libavfilter/libmpcodecs/help_mp.h	1994;"	d
MSGTR_RADIO_QueryControlFailed	libavfilter/libmpcodecs/help_mp.h	2000;"	d
MSGTR_RADIO_RadioDevice	libavfilter/libmpcodecs/help_mp.h	2012;"	d
MSGTR_RADIO_SelectedChannel	libavfilter/libmpcodecs/help_mp.h	2009;"	d
MSGTR_RADIO_SetFreqFailed	libavfilter/libmpcodecs/help_mp.h	1997;"	d
MSGTR_RADIO_SetMuteFailed	libavfilter/libmpcodecs/help_mp.h	1999;"	d
MSGTR_RADIO_SetVolumeFailed	libavfilter/libmpcodecs/help_mp.h	2002;"	d
MSGTR_RADIO_StreamEnableCacheFailed	libavfilter/libmpcodecs/help_mp.h	2021;"	d
MSGTR_RADIO_TunerCapLowNo	libavfilter/libmpcodecs/help_mp.h	1996;"	d
MSGTR_RADIO_TunerCapLowYes	libavfilter/libmpcodecs/help_mp.h	1995;"	d
MSGTR_RADIO_UnableOpenDevice	libavfilter/libmpcodecs/help_mp.h	2011;"	d
MSGTR_RADIO_UsingFreq	libavfilter/libmpcodecs/help_mp.h	2015;"	d
MSGTR_RADIO_WrongChannelName	libavfilter/libmpcodecs/help_mp.h	1990;"	d
MSGTR_RADIO_WrongChannelNumberFloat	libavfilter/libmpcodecs/help_mp.h	1988;"	d
MSGTR_RADIO_WrongChannelNumberInt	libavfilter/libmpcodecs/help_mp.h	1989;"	d
MSGTR_RADIO_WrongFreq	libavfilter/libmpcodecs/help_mp.h	2014;"	d
MSGTR_RADIO_WrongFreqForChannel	libavfilter/libmpcodecs/help_mp.h	1987;"	d
MSGTR_RTCDeviceNotOpenable	libavfilter/libmpcodecs/help_mp.h	160;"	d
MSGTR_RawMuxerOnlyOneStream	libavfilter/libmpcodecs/help_mp.h	1390;"	d
MSGTR_RawvideoDoesNotSupportAudio	libavfilter/libmpcodecs/help_mp.h	418;"	d
MSGTR_ReadSTDIN	libavfilter/libmpcodecs/help_mp.h	1898;"	d
MSGTR_ReadingFile	libavfilter/libmpcodecs/help_mp.h	493;"	d
MSGTR_RecommendedVideoBitrate	libavfilter/libmpcodecs/help_mp.h	289;"	d
MSGTR_Remove	libavfilter/libmpcodecs/help_mp.h	569;"	d
MSGTR_RemovedSubtitleFile	libavfilter/libmpcodecs/help_mp.h	157;"	d
MSGTR_RemovingVideoFilter	libavfilter/libmpcodecs/help_mp.h	813;"	d
MSGTR_ResolutionDoesntMatch	libavfilter/libmpcodecs/help_mp.h	280;"	d
MSGTR_RootwinStatus	libavfilter/libmpcodecs/help_mp.h	251;"	d
MSGTR_SKIN_BITMAP_16bit	libavfilter/libmpcodecs/help_mp.h	589;"	d
MSGTR_SKIN_BITMAP_BMPReadError	libavfilter/libmpcodecs/help_mp.h	591;"	d
MSGTR_SKIN_BITMAP_ConversionError	libavfilter/libmpcodecs/help_mp.h	596;"	d
MSGTR_SKIN_BITMAP_FileNotFound	libavfilter/libmpcodecs/help_mp.h	590;"	d
MSGTR_SKIN_BITMAP_PNGReadError	libavfilter/libmpcodecs/help_mp.h	593;"	d
MSGTR_SKIN_BITMAP_RLENotSupported	libavfilter/libmpcodecs/help_mp.h	594;"	d
MSGTR_SKIN_BITMAP_TGAReadError	libavfilter/libmpcodecs/help_mp.h	592;"	d
MSGTR_SKIN_BITMAP_UnknownFileType	libavfilter/libmpcodecs/help_mp.h	595;"	d
MSGTR_SKIN_BITMAP_UnknownMessage	libavfilter/libmpcodecs/help_mp.h	597;"	d
MSGTR_SKIN_ERRORMESSAGE	libavfilter/libmpcodecs/help_mp.h	583;"	d
MSGTR_SKIN_FONT_FontFileNotFound	libavfilter/libmpcodecs/help_mp.h	600;"	d
MSGTR_SKIN_FONT_FontImageNotFound	libavfilter/libmpcodecs/help_mp.h	601;"	d
MSGTR_SKIN_FONT_NonExistentFontID	libavfilter/libmpcodecs/help_mp.h	602;"	d
MSGTR_SKIN_FONT_NotEnoughtMemory	libavfilter/libmpcodecs/help_mp.h	598;"	d
MSGTR_SKIN_FONT_TooManyFontsDeclared	libavfilter/libmpcodecs/help_mp.h	599;"	d
MSGTR_SKIN_LABEL	libavfilter/libmpcodecs/help_mp.h	607;"	d
MSGTR_SKIN_SKINCFG_SelectedSkinNotFound	libavfilter/libmpcodecs/help_mp.h	605;"	d
MSGTR_SKIN_SKINCFG_SkinCfgReadError	libavfilter/libmpcodecs/help_mp.h	606;"	d
MSGTR_SKIN_SKINCFG_SkinNotFound	libavfilter/libmpcodecs/help_mp.h	604;"	d
MSGTR_SKIN_SkinFileNotFound	libavfilter/libmpcodecs/help_mp.h	587;"	d
MSGTR_SKIN_SkinFileNotReadable	libavfilter/libmpcodecs/help_mp.h	588;"	d
MSGTR_SKIN_UnknownParameter	libavfilter/libmpcodecs/help_mp.h	603;"	d
MSGTR_SKIN_WARNING1	libavfilter/libmpcodecs/help_mp.h	584;"	d
MSGTR_SKIN_WARNING2	libavfilter/libmpcodecs/help_mp.h	585;"	d
MSGTR_SKIN_WARNING3	libavfilter/libmpcodecs/help_mp.h	586;"	d
MSGTR_SMBFileNotFound	libavfilter/libmpcodecs/help_mp.h	1904;"	d
MSGTR_SMBInitError	libavfilter/libmpcodecs/help_mp.h	1903;"	d
MSGTR_SMBNotCompiled	libavfilter/libmpcodecs/help_mp.h	1905;"	d
MSGTR_SUBTITLES_SubRip_UnknownFontColor	libavfilter/libmpcodecs/help_mp.h	2130;"	d
MSGTR_SamplesWanted	libavfilter/libmpcodecs/help_mp.h	1635;"	d
MSGTR_Saturation	libavfilter/libmpcodecs/help_mp.h	242;"	d
MSGTR_SaveSlotTooOld	libavfilter/libmpcodecs/help_mp.h	519;"	d
MSGTR_SelectedAudioCodec	libavfilter/libmpcodecs/help_mp.h	1624;"	d
MSGTR_SelectedVideoCodec	libavfilter/libmpcodecs/help_mp.h	1622;"	d
MSGTR_SelectedVideoMode	libavfilter/libmpcodecs/help_mp.h	1145;"	d
MSGTR_SettingAudioDelay	libavfilter/libmpcodecs/help_mp.h	299;"	d
MSGTR_SettingAudioInputGain	libavfilter/libmpcodecs/help_mp.h	301;"	d
MSGTR_SettingProcessPriority	libavfilter/libmpcodecs/help_mp.h	1418;"	d
MSGTR_SettingUpLIRC	libavfilter/libmpcodecs/help_mp.h	1381;"	d
MSGTR_SettingVideoDelay	libavfilter/libmpcodecs/help_mp.h	300;"	d
MSGTR_ShMemAllocFail	libavfilter/libmpcodecs/help_mp.h	1611;"	d
MSGTR_SkinBrowser	libavfilter/libmpcodecs/help_mp.h	554;"	d
MSGTR_SkipFrame	libavfilter/libmpcodecs/help_mp.h	279;"	d
MSGTR_SoftsleepUnderflow	libavfilter/libmpcodecs/help_mp.h	173;"	d
MSGTR_StartPlaying	libavfilter/libmpcodecs/help_mp.h	86;"	d
MSGTR_SubAlignStatus	libavfilter/libmpcodecs/help_mp.h	258;"	d
MSGTR_SubDelayStatus	libavfilter/libmpcodecs/help_mp.h	259;"	d
MSGTR_SubForcedOnlyStatus	libavfilter/libmpcodecs/help_mp.h	262;"	d
MSGTR_SubPosStatus	libavfilter/libmpcodecs/help_mp.h	257;"	d
MSGTR_SubScale	libavfilter/libmpcodecs/help_mp.h	260;"	d
MSGTR_SubSelectStatus	libavfilter/libmpcodecs/help_mp.h	255;"	d
MSGTR_SubSourceDemux	libavfilter/libmpcodecs/help_mp.h	234;"	d
MSGTR_SubSourceFile	libavfilter/libmpcodecs/help_mp.h	232;"	d
MSGTR_SubSourceStatus	libavfilter/libmpcodecs/help_mp.h	256;"	d
MSGTR_SubSourceVobsub	libavfilter/libmpcodecs/help_mp.h	233;"	d
MSGTR_SubVisibleStatus	libavfilter/libmpcodecs/help_mp.h	261;"	d
MSGTR_SubtitleID	libavfilter/libmpcodecs/help_mp.h	1461;"	d
MSGTR_SubtitleSelect	libavfilter/libmpcodecs/help_mp.h	546;"	d
MSGTR_SwitchToNi	libavfilter/libmpcodecs/help_mp.h	1408;"	d
MSGTR_SystemTooSlow	libavfilter/libmpcodecs/help_mp.h	88;"	d
MSGTR_TVI_DS_AvailableAudioInputs	libavfilter/libmpcodecs/help_mp.h	2094;"	d
MSGTR_TVI_DS_AvailableVideoInputs	libavfilter/libmpcodecs/help_mp.h	2093;"	d
MSGTR_TVI_DS_ChangingWidthHeightNotSupported	libavfilter/libmpcodecs/help_mp.h	2106;"	d
MSGTR_TVI_DS_DeviceName	libavfilter/libmpcodecs/help_mp.h	2089;"	d
MSGTR_TVI_DS_DeviceNotFound	libavfilter/libmpcodecs/help_mp.h	2086;"	d
MSGTR_TVI_DS_DirectGetFreqFailed	libavfilter/libmpcodecs/help_mp.h	2090;"	d
MSGTR_TVI_DS_DirectSetFreqFailed	libavfilter/libmpcodecs/help_mp.h	2091;"	d
MSGTR_TVI_DS_ErrorParsingAudioFormatStruct	libavfilter/libmpcodecs/help_mp.h	2109;"	d
MSGTR_TVI_DS_ErrorParsingVideoFormatStruct	libavfilter/libmpcodecs/help_mp.h	2110;"	d
MSGTR_TVI_DS_FreqTableLoaded	libavfilter/libmpcodecs/help_mp.h	2108;"	d
MSGTR_TVI_DS_GetActualMediatypeFailed	libavfilter/libmpcodecs/help_mp.h	2124;"	d
MSGTR_TVI_DS_GraphInitFailure	libavfilter/libmpcodecs/help_mp.h	2121;"	d
MSGTR_TVI_DS_InputSelected	libavfilter/libmpcodecs/help_mp.h	2096;"	d
MSGTR_TVI_DS_NoAudioCaptureDevice	libavfilter/libmpcodecs/help_mp.h	2123;"	d
MSGTR_TVI_DS_NoVideoCaptureDevice	libavfilter/libmpcodecs/help_mp.h	2122;"	d
MSGTR_TVI_DS_SamplerateNotsupported	libavfilter/libmpcodecs/help_mp.h	2103;"	d
MSGTR_TVI_DS_SelectingInputNotSupported	libavfilter/libmpcodecs/help_mp.h	2107;"	d
MSGTR_TVI_DS_SupportedNorms	libavfilter/libmpcodecs/help_mp.h	2092;"	d
MSGTR_TVI_DS_UnableBuildAudioSubGraph	libavfilter/libmpcodecs/help_mp.h	2119;"	d
MSGTR_TVI_DS_UnableBuildVBISubGraph	libavfilter/libmpcodecs/help_mp.h	2120;"	d
MSGTR_TVI_DS_UnableBuildVideoSubGraph	libavfilter/libmpcodecs/help_mp.h	2118;"	d
MSGTR_TVI_DS_UnableConnectInputAudioDecoder	libavfilter/libmpcodecs/help_mp.h	2081;"	d
MSGTR_TVI_DS_UnableConnectInputVideoDecoder	libavfilter/libmpcodecs/help_mp.h	2080;"	d
MSGTR_TVI_DS_UnableExtractFreqTable	libavfilter/libmpcodecs/help_mp.h	2097;"	d
MSGTR_TVI_DS_UnableFindNearestChannel	libavfilter/libmpcodecs/help_mp.h	2115;"	d
MSGTR_TVI_DS_UnableGetDeviceName	libavfilter/libmpcodecs/help_mp.h	2087;"	d
MSGTR_TVI_DS_UnableGetMediaControlInterface	libavfilter/libmpcodecs/help_mp.h	2084;"	d
MSGTR_TVI_DS_UnableGetsupportedAudioFormats	libavfilter/libmpcodecs/help_mp.h	2114;"	d
MSGTR_TVI_DS_UnableGetsupportedVideoFormats	libavfilter/libmpcodecs/help_mp.h	2113;"	d
MSGTR_TVI_DS_UnableSelectAudioFormat	libavfilter/libmpcodecs/help_mp.h	2083;"	d
MSGTR_TVI_DS_UnableSelectVideoFormat	libavfilter/libmpcodecs/help_mp.h	2082;"	d
MSGTR_TVI_DS_UnableSetAudioMode	libavfilter/libmpcodecs/help_mp.h	2111;"	d
MSGTR_TVI_DS_UnableStartGraph	libavfilter/libmpcodecs/help_mp.h	2085;"	d
MSGTR_TVI_DS_UnableTerminateVPPin	libavfilter/libmpcodecs/help_mp.h	2117;"	d
MSGTR_TVI_DS_UnableToSetChannel	libavfilter/libmpcodecs/help_mp.h	2116;"	d
MSGTR_TVI_DS_UnsupportedMediaType	libavfilter/libmpcodecs/help_mp.h	2112;"	d
MSGTR_TVI_DS_UsingDevice	libavfilter/libmpcodecs/help_mp.h	2088;"	d
MSGTR_TVI_DS_VideoAdjustigNotSupported	libavfilter/libmpcodecs/help_mp.h	2104;"	d
MSGTR_TVI_DS_WrongADeviceIndex	libavfilter/libmpcodecs/help_mp.h	2101;"	d
MSGTR_TVI_DS_WrongADeviceParam	libavfilter/libmpcodecs/help_mp.h	2100;"	d
MSGTR_TVI_DS_WrongDeviceIndex	libavfilter/libmpcodecs/help_mp.h	2099;"	d
MSGTR_TVI_DS_WrongDeviceParam	libavfilter/libmpcodecs/help_mp.h	2098;"	d
MSGTR_TVInputNotSeekable	libavfilter/libmpcodecs/help_mp.h	1448;"	d
MSGTR_TV_AudioFormat	libavfilter/libmpcodecs/help_mp.h	2055;"	d
MSGTR_TV_AvailableDrivers	libavfilter/libmpcodecs/help_mp.h	2056;"	d
MSGTR_TV_BogusNormParameter	libavfilter/libmpcodecs/help_mp.h	2029;"	d
MSGTR_TV_Bt848ErrorConfiguringDsp	libavfilter/libmpcodecs/help_mp.h	2068;"	d
MSGTR_TV_Bt848ErrorOpeningBktrDev	libavfilter/libmpcodecs/help_mp.h	2065;"	d
MSGTR_TV_Bt848ErrorOpeningDspDev	libavfilter/libmpcodecs/help_mp.h	2067;"	d
MSGTR_TV_Bt848ErrorOpeningTunerDev	libavfilter/libmpcodecs/help_mp.h	2066;"	d
MSGTR_TV_Bt848ErrorReadingAudio	libavfilter/libmpcodecs/help_mp.h	2069;"	d
MSGTR_TV_Bt848ErrorSettingHeight	libavfilter/libmpcodecs/help_mp.h	2073;"	d
MSGTR_TV_Bt848ErrorSettingWidth	libavfilter/libmpcodecs/help_mp.h	2072;"	d
MSGTR_TV_Bt848FrameBufAllocFailed	libavfilter/libmpcodecs/help_mp.h	2071;"	d
MSGTR_TV_Bt848InvalidAudioRate	libavfilter/libmpcodecs/help_mp.h	2064;"	d
MSGTR_TV_Bt848IoctlFailed	libavfilter/libmpcodecs/help_mp.h	2063;"	d
MSGTR_TV_Bt848MmapFailed	libavfilter/libmpcodecs/help_mp.h	2070;"	d
MSGTR_TV_Bt848UnableToStopCapture	libavfilter/libmpcodecs/help_mp.h	2074;"	d
MSGTR_TV_CannotSetNorm	libavfilter/libmpcodecs/help_mp.h	2040;"	d
MSGTR_TV_ChannelFreqParamConflict	libavfilter/libmpcodecs/help_mp.h	2047;"	d
MSGTR_TV_ChannelNamesDetected	libavfilter/libmpcodecs/help_mp.h	2048;"	d
MSGTR_TV_CurrentFrequency	libavfilter/libmpcodecs/help_mp.h	2061;"	d
MSGTR_TV_DriverAutoDetectionFailed	libavfilter/libmpcodecs/help_mp.h	2059;"	d
MSGTR_TV_DriverInfo	libavfilter/libmpcodecs/help_mp.h	2057;"	d
MSGTR_TV_MJP_WidthHeight	libavfilter/libmpcodecs/help_mp.h	2041;"	d
MSGTR_TV_NoFreqForChannel	libavfilter/libmpcodecs/help_mp.h	2049;"	d
MSGTR_TV_NoSuchDriver	libavfilter/libmpcodecs/help_mp.h	2058;"	d
MSGTR_TV_NoTeletext	libavfilter/libmpcodecs/help_mp.h	2062;"	d
MSGTR_TV_NoTuner	libavfilter/libmpcodecs/help_mp.h	2044;"	d
MSGTR_TV_NoVideoInputPresent	libavfilter/libmpcodecs/help_mp.h	2030;"	d
MSGTR_TV_RequestedChannel	libavfilter/libmpcodecs/help_mp.h	2053;"	d
MSGTR_TV_ScannerNotAvailableWithoutTuner	libavfilter/libmpcodecs/help_mp.h	2077;"	d
MSGTR_TV_SelectedChanlist	libavfilter/libmpcodecs/help_mp.h	2046;"	d
MSGTR_TV_SelectedChannel2	libavfilter/libmpcodecs/help_mp.h	2051;"	d
MSGTR_TV_SelectedChannel3	libavfilter/libmpcodecs/help_mp.h	2050;"	d
MSGTR_TV_SelectedFrequency	libavfilter/libmpcodecs/help_mp.h	2052;"	d
MSGTR_TV_SelectedNorm	libavfilter/libmpcodecs/help_mp.h	2039;"	d
MSGTR_TV_SelectedNormId	libavfilter/libmpcodecs/help_mp.h	2038;"	d
MSGTR_TV_TTSelectedLanguage	libavfilter/libmpcodecs/help_mp.h	2076;"	d
MSGTR_TV_TTSupportedLanguages	libavfilter/libmpcodecs/help_mp.h	2075;"	d
MSGTR_TV_UnableFindChanlist	libavfilter/libmpcodecs/help_mp.h	2045;"	d
MSGTR_TV_UnableToSetHeight	libavfilter/libmpcodecs/help_mp.h	2043;"	d
MSGTR_TV_UnableToSetWidth	libavfilter/libmpcodecs/help_mp.h	2042;"	d
MSGTR_TV_UnknownColorOption	libavfilter/libmpcodecs/help_mp.h	2060;"	d
MSGTR_TV_UnknownImageFormat	libavfilter/libmpcodecs/help_mp.h	2031;"	d
MSGTR_TV_UnsupportedAudioType	libavfilter/libmpcodecs/help_mp.h	2054;"	d
MSGTR_TheLoopOptionMustBeAnInteger	libavfilter/libmpcodecs/help_mp.h	511;"	d
MSGTR_TooManyAudioInBuffer	libavfilter/libmpcodecs/help_mp.h	1403;"	d
MSGTR_TooManyFourccs	libavfilter/libmpcodecs/help_mp.h	480;"	d
MSGTR_TooManyOut	libavfilter/libmpcodecs/help_mp.h	485;"	d
MSGTR_TooManyStreams	libavfilter/libmpcodecs/help_mp.h	1389;"	d
MSGTR_TooManyVideoInBuffer	libavfilter/libmpcodecs/help_mp.h	1404;"	d
MSGTR_Top	libavfilter/libmpcodecs/help_mp.h	231;"	d
MSGTR_TotalOptions	libavfilter/libmpcodecs/help_mp.h	526;"	d
MSGTR_TotalProperties	libavfilter/libmpcodecs/help_mp.h	535;"	d
MSGTR_TryForceAudioFmtStr	libavfilter/libmpcodecs/help_mp.h	80;"	d
MSGTR_TryForceVideoFmtStr	libavfilter/libmpcodecs/help_mp.h	82;"	d
MSGTR_UNKNOWNWINDOWTYPE	libavfilter/libmpcodecs/help_mp.h	580;"	d
MSGTR_UnableOpenURL	libavfilter/libmpcodecs/help_mp.h	1899;"	d
MSGTR_UnableToSaveOption	libavfilter/libmpcodecs/help_mp.h	807;"	d
MSGTR_UninitAudioStr	libavfilter/libmpcodecs/help_mp.h	1627;"	d
MSGTR_UninitVideoStr	libavfilter/libmpcodecs/help_mp.h	1626;"	d
MSGTR_Unknown	libavfilter/libmpcodecs/help_mp.h	228;"	d
MSGTR_UnknownAudio	libavfilter/libmpcodecs/help_mp.h	1614;"	d
MSGTR_UnknownOptionOnCommandLine	libavfilter/libmpcodecs/help_mp.h	512;"	d
MSGTR_UnknownProfile	libavfilter/libmpcodecs/help_mp.h	530;"	d
MSGTR_UnknownStreamType	libavfilter/libmpcodecs/help_mp.h	1392;"	d
MSGTR_UsingCodecPP	libavfilter/libmpcodecs/help_mp.h	1617;"	d
MSGTR_UsingExternalPP	libavfilter/libmpcodecs/help_mp.h	1616;"	d
MSGTR_UsingNINI	libavfilter/libmpcodecs/help_mp.h	1431;"	d
MSGTR_UsingPass3ControlFile	libavfilter/libmpcodecs/help_mp.h	265;"	d
MSGTR_UsingRTCTiming	libavfilter/libmpcodecs/help_mp.h	124;"	d
MSGTR_UsingTimingType	libavfilter/libmpcodecs/help_mp.h	164;"	d
MSGTR_VCDTrack	libavfilter/libmpcodecs/help_mp.h	560;"	d
MSGTR_VCodecFramecopy	libavfilter/libmpcodecs/help_mp.h	294;"	d
MSGTR_VDecoderInitFailed	libavfilter/libmpcodecs/help_mp.h	1628;"	d
MSGTR_VO_AA_AdditionalOptions	libavfilter/libmpcodecs/help_mp.h	892;"	d
MSGTR_VO_AA_HelpHeader	libavfilter/libmpcodecs/help_mp.h	891;"	d
MSGTR_VO_CantCreateDirectory	libavfilter/libmpcodecs/help_mp.h	844;"	d
MSGTR_VO_CantCreateFile	libavfilter/libmpcodecs/help_mp.h	845;"	d
MSGTR_VO_DirExistsAndIsWritable	libavfilter/libmpcodecs/help_mp.h	843;"	d
MSGTR_VO_DirExistsButNotWritable	libavfilter/libmpcodecs/help_mp.h	842;"	d
MSGTR_VO_DirectoryCreateSuccess	libavfilter/libmpcodecs/help_mp.h	846;"	d
MSGTR_VO_ExistsButNoDirectory	libavfilter/libmpcodecs/help_mp.h	841;"	d
MSGTR_VO_GenericError	libavfilter/libmpcodecs/help_mp.h	839;"	d
MSGTR_VO_JPEG_BaselineJPEG	libavfilter/libmpcodecs/help_mp.h	949;"	d
MSGTR_VO_JPEG_NoBaselineJPEG	libavfilter/libmpcodecs/help_mp.h	950;"	d
MSGTR_VO_JPEG_NoProgressiveJPEG	libavfilter/libmpcodecs/help_mp.h	948;"	d
MSGTR_VO_JPEG_ProgressiveJPEG	libavfilter/libmpcodecs/help_mp.h	947;"	d
MSGTR_VO_MD5_HasBeenReplaced	libavfilter/libmpcodecs/help_mp.h	1153;"	d
MSGTR_VO_NoValueSpecified	libavfilter/libmpcodecs/help_mp.h	848;"	d
MSGTR_VO_PGM_HasBeenReplaced	libavfilter/libmpcodecs/help_mp.h	1152;"	d
MSGTR_VO_PNM_ASCIIMode	libavfilter/libmpcodecs/help_mp.h	978;"	d
MSGTR_VO_PNM_PGMType	libavfilter/libmpcodecs/help_mp.h	981;"	d
MSGTR_VO_PNM_PGMYUVType	libavfilter/libmpcodecs/help_mp.h	982;"	d
MSGTR_VO_PNM_PPMType	libavfilter/libmpcodecs/help_mp.h	980;"	d
MSGTR_VO_PNM_RawMode	libavfilter/libmpcodecs/help_mp.h	979;"	d
MSGTR_VO_SUB_Balance	libavfilter/libmpcodecs/help_mp.h	879;"	d
MSGTR_VO_SUB_Brightness	libavfilter/libmpcodecs/help_mp.h	877;"	d
MSGTR_VO_SUB_Clock	libavfilter/libmpcodecs/help_mp.h	873;"	d
MSGTR_VO_SUB_Contrast	libavfilter/libmpcodecs/help_mp.h	874;"	d
MSGTR_VO_SUB_Forward	libavfilter/libmpcodecs/help_mp.h	872;"	d
MSGTR_VO_SUB_Hue	libavfilter/libmpcodecs/help_mp.h	878;"	d
MSGTR_VO_SUB_Pause	libavfilter/libmpcodecs/help_mp.h	869;"	d
MSGTR_VO_SUB_Play	libavfilter/libmpcodecs/help_mp.h	868;"	d
MSGTR_VO_SUB_Rewind	libavfilter/libmpcodecs/help_mp.h	871;"	d
MSGTR_VO_SUB_Saturation	libavfilter/libmpcodecs/help_mp.h	875;"	d
MSGTR_VO_SUB_Seekbar	libavfilter/libmpcodecs/help_mp.h	867;"	d
MSGTR_VO_SUB_Stop	libavfilter/libmpcodecs/help_mp.h	870;"	d
MSGTR_VO_SUB_Volume	libavfilter/libmpcodecs/help_mp.h	876;"	d
MSGTR_VO_UnableToAccess	libavfilter/libmpcodecs/help_mp.h	840;"	d
MSGTR_VO_UnknownSuboptions	libavfilter/libmpcodecs/help_mp.h	849;"	d
MSGTR_VO_ValueOutOfRange	libavfilter/libmpcodecs/help_mp.h	847;"	d
MSGTR_VO_XV_ImagedimTooHigh	libavfilter/libmpcodecs/help_mp.h	1113;"	d
MSGTR_VO_YUV4MPEG_InterlacedBFFMode	libavfilter/libmpcodecs/help_mp.h	1123;"	d
MSGTR_VO_YUV4MPEG_InterlacedHeightDivisibleBy4	libavfilter/libmpcodecs/help_mp.h	1116;"	d
MSGTR_VO_YUV4MPEG_InterlacedLineBufAllocFail	libavfilter/libmpcodecs/help_mp.h	1117;"	d
MSGTR_VO_YUV4MPEG_InterlacedTFFMode	libavfilter/libmpcodecs/help_mp.h	1122;"	d
MSGTR_VO_YUV4MPEG_OutFileOpenError	libavfilter/libmpcodecs/help_mp.h	1119;"	d
MSGTR_VO_YUV4MPEG_OutFileWriteError	libavfilter/libmpcodecs/help_mp.h	1120;"	d
MSGTR_VO_YUV4MPEG_ProgressiveMode	libavfilter/libmpcodecs/help_mp.h	1124;"	d
MSGTR_VO_YUV4MPEG_UnknownSubDev	libavfilter/libmpcodecs/help_mp.h	1121;"	d
MSGTR_VO_YUV4MPEG_WidthDivisibleBy2	libavfilter/libmpcodecs/help_mp.h	1118;"	d
MSGTR_VOincompCodec	libavfilter/libmpcodecs/help_mp.h	836;"	d
MSGTR_VSyncStatus	libavfilter/libmpcodecs/help_mp.h	254;"	d
MSGTR_VideoAttributeNotSupportedByVO_VD	libavfilter/libmpcodecs/help_mp.h	1618;"	d
MSGTR_VideoCodecFamilyNotAvailableStr	libavfilter/libmpcodecs/help_mp.h	1619;"	d
MSGTR_VideoID	libavfilter/libmpcodecs/help_mp.h	1459;"	d
MSGTR_VideoStreamRedefined	libavfilter/libmpcodecs/help_mp.h	1402;"	d
MSGTR_VideoStreamRequired	libavfilter/libmpcodecs/help_mp.h	416;"	d
MSGTR_VideoStreamResult	libavfilter/libmpcodecs/help_mp.h	290;"	d
MSGTR_Video_NoVideo	libavfilter/libmpcodecs/help_mp.h	130;"	d
MSGTR_Volume	libavfilter/libmpcodecs/help_mp.h	237;"	d
MSGTR_WS_ColorDepthTooLow	libavfilter/libmpcodecs/help_mp.h	823;"	d
MSGTR_WS_CouldNotOpenDisplay	libavfilter/libmpcodecs/help_mp.h	819;"	d
MSGTR_WS_DDNothing	libavfilter/libmpcodecs/help_mp.h	832;"	d
MSGTR_WS_DpmsNotEnabled	libavfilter/libmpcodecs/help_mp.h	828;"	d
MSGTR_WS_DpmsUnavailable	libavfilter/libmpcodecs/help_mp.h	827;"	d
MSGTR_WS_NoXshape	libavfilter/libmpcodecs/help_mp.h	822;"	d
MSGTR_WS_NoXshm	libavfilter/libmpcodecs/help_mp.h	821;"	d
MSGTR_WS_NotAFile	libavfilter/libmpcodecs/help_mp.h	831;"	d
MSGTR_WS_NotEnoughMemoryDrawBuffer	libavfilter/libmpcodecs/help_mp.h	826;"	d
MSGTR_WS_RemoteDisplay	libavfilter/libmpcodecs/help_mp.h	820;"	d
MSGTR_WS_ShmError	libavfilter/libmpcodecs/help_mp.h	825;"	d
MSGTR_WS_TooManyOpenWindows	libavfilter/libmpcodecs/help_mp.h	824;"	d
MSGTR_WarningLenIsntDivisible	libavfilter/libmpcodecs/help_mp.h	1393;"	d
MSGTR_WorkAroundBlockAlignHeaderBug	libavfilter/libmpcodecs/help_mp.h	1407;"	d
MSGTR_WritingHeader	libavfilter/libmpcodecs/help_mp.h	1397;"	d
MSGTR_WritingTrailer	libavfilter/libmpcodecs/help_mp.h	1398;"	d
MSGTR_ZeroingAudioPreloadAndMaxPtsCorrection	libavfilter/libmpcodecs/help_mp.h	305;"	d
MSGT_AFILTER	libavfilter/libmpcodecs/mp_msg.h	109;"	d
MSGT_AO	libavfilter/libmpcodecs/mp_msg.h	54;"	d
MSGT_ASS	libavfilter/libmpcodecs/mp_msg.h	121;"	d
MSGT_AUTOQ	libavfilter/libmpcodecs/mp_msg.h	62;"	d
MSGT_AVSYNC	libavfilter/libmpcodecs/mp_msg.h	61;"	d
MSGT_CACHE	libavfilter/libmpcodecs/mp_msg.h	78;"	d
MSGT_CFGPARSER	libavfilter/libmpcodecs/mp_msg.h	64;"	d
MSGT_CODECCFG	libavfilter/libmpcodecs/mp_msg.h	102;"	d
MSGT_CPLAYER	libavfilter/libmpcodecs/mp_msg.h	50;"	d
MSGT_CPUDETECT	libavfilter/libmpcodecs/mp_msg.h	100;"	d
MSGT_DECAUDIO	libavfilter/libmpcodecs/mp_msg.h	66;"	d
MSGT_DECVIDEO	libavfilter/libmpcodecs/mp_msg.h	67;"	d
MSGT_DEMUX	libavfilter/libmpcodecs/mp_msg.h	58;"	d
MSGT_DEMUXER	libavfilter/libmpcodecs/mp_msg.h	56;"	d
MSGT_DS	libavfilter/libmpcodecs/mp_msg.h	57;"	d
MSGT_DVD	libavfilter/libmpcodecs/mp_msg.h	72;"	d
MSGT_FIXME	libavfilter/libmpcodecs/mp_msg.h	45;"	d
MSGT_GLOBAL	libavfilter/libmpcodecs/mp_msg.h	49;"	d
MSGT_GPLAYER	libavfilter/libmpcodecs/mp_msg.h	51;"	d
MSGT_HEADER	libavfilter/libmpcodecs/mp_msg.h	59;"	d
MSGT_IDENTIFY	libavfilter/libmpcodecs/mp_msg.h	117;"	d
MSGT_INPUT	libavfilter/libmpcodecs/mp_msg.h	92;"	d
MSGT_LIRC	libavfilter/libmpcodecs/mp_msg.h	75;"	d
MSGT_LOADER	libavfilter/libmpcodecs/mp_msg.h	123;"	d
MSGT_MAX	libavfilter/libmpcodecs/mp_msg.h	129;"	d
MSGT_MENCODER	libavfilter/libmpcodecs/mp_msg.h	80;"	d
MSGT_MUXER	libavfilter/libmpcodecs/mp_msg.h	113;"	d
MSGT_NETST	libavfilter/libmpcodecs/mp_msg.h	111;"	d
MSGT_NETWORK	libavfilter/libmpcodecs/mp_msg.h	98;"	d
MSGT_OPEN	libavfilter/libmpcodecs/mp_msg.h	71;"	d
MSGT_OSD	libavfilter/libmpcodecs/mp_msg.h	96;"	d
MSGT_OSDEP	libavfilter/libmpcodecs/mp_msg.h	86;"	d
MSGT_OSD_MENU	libavfilter/libmpcodecs/mp_msg.h	115;"	d
MSGT_PARSEES	libavfilter/libmpcodecs/mp_msg.h	74;"	d
MSGT_PLAYTREE	libavfilter/libmpcodecs/mp_msg.h	90;"	d
MSGT_RADIO	libavfilter/libmpcodecs/mp_msg.h	119;"	d
MSGT_SEEK	libavfilter/libmpcodecs/mp_msg.h	69;"	d
MSGT_SPUDEC	libavfilter/libmpcodecs/mp_msg.h	88;"	d
MSGT_STATUSLINE	libavfilter/libmpcodecs/mp_msg.h	125;"	d
MSGT_STREAM	libavfilter/libmpcodecs/mp_msg.h	77;"	d
MSGT_SUBREADER	libavfilter/libmpcodecs/mp_msg.h	107;"	d
MSGT_SWS	libavfilter/libmpcodecs/mp_msg.h	104;"	d
MSGT_TELETEXT	libavfilter/libmpcodecs/mp_msg.h	127;"	d
MSGT_TV	libavfilter/libmpcodecs/mp_msg.h	84;"	d
MSGT_VFILTER	libavfilter/libmpcodecs/mp_msg.h	94;"	d
MSGT_VO	libavfilter/libmpcodecs/mp_msg.h	53;"	d
MSGT_VOBSUB	libavfilter/libmpcodecs/mp_msg.h	106;"	d
MSGT_WIN32	libavfilter/libmpcodecs/mp_msg.h	70;"	d
MSGT_XACODEC	libavfilter/libmpcodecs/mp_msg.h	82;"	d
MSPEL_FILTER13_8B	libavcodec/x86/vc1dsp_mmx.c	361;"	d	file:
MSPEL_FILTER13_CORE	libavcodec/x86/vc1dsp_mmx.c	227;"	d	file:
MSPEL_FILTER13_HOR_16B	libavcodec/x86/vc1dsp_mmx.c	323;"	d	file:
MSPEL_FILTER13_VER_16B	libavcodec/x86/vc1dsp_mmx.c	267;"	d	file:
MSS	libavcodec/mpc.h	/^    int IS, MSS, gapless;$/;"	m	struct:__anon179
MSV1Mode	libavcodec/msvideo1enc.c	/^enum MSV1Mode{$/;"	g	file:
MTVDemuxContext	libavformat/mtv.c	/^typedef struct MTVDemuxContext {$/;"	s	file:
MTVDemuxContext	libavformat/mtv.c	/^} MTVDemuxContext;$/;"	t	typeref:struct:MTVDemuxContext	file:
MTV_ASUBCHUNK_DATA_SIZE	libavformat/mtv.c	31;"	d	file:
MTV_AUDIO_PADDING_SIZE	libavformat/mtv.c	33;"	d	file:
MTV_HEADER_SIZE	libavformat/mtv.c	32;"	d	file:
MT_16X8	libavcodec/mpeg12.c	204;"	d	file:
MT_DMV	libavcodec/mpeg12.c	205;"	d	file:
MT_FIELD	libavcodec/mpeg12.c	202;"	d	file:
MT_FRAME	libavcodec/mpeg12.c	203;"	d	file:
MUL	libavcodec/mpegaudioenc.c	37;"	d	file:
MUL16	libavcodec/arm/mathops.h	/^static inline av_const int MUL16(int ra, int rb)$/;"	f
MUL16	libavcodec/arm/mathops.h	50;"	d
MUL16	libavcodec/avr32/mathops.h	/^static inline av_const int MUL16(int a, int b)$/;"	f
MUL16	libavcodec/avr32/mathops.h	74;"	d
MUL16	libavcodec/bfin/mathops.h	38;"	d
MUL16	libavcodec/fft-test.c	44;"	d	file:
MUL16	libavcodec/mathops.h	79;"	d
MUL16	libavcodec/ppc/mathops.h	36;"	d
MUL64	libavcodec/avr32/mathops.h	/^static inline av_const int64_t MUL64(int a, int b)$/;"	f
MUL64	libavcodec/avr32/mathops.h	50;"	d
MUL64	libavcodec/mathops.h	45;"	d
MUL64	libavcodec/x86/mathops.h	/^static av_always_inline av_const int64_t MUL64(int a, int b)$/;"	f
MUL64	libavcodec/x86/mathops.h	55;"	d
MULAW_MU	libavcodec/twinvq.c	208;"	d	file:
MULH	libavcodec/arm/mathops.h	/^static inline av_const int MULH(int a, int b)$/;"	f
MULH	libavcodec/arm/mathops.h	32;"	d
MULH	libavcodec/avr32/mathops.h	/^static inline av_const int MULH(int a, int b)$/;"	f
MULH	libavcodec/avr32/mathops.h	42;"	d
MULH	libavcodec/bfin/mathops.h	27;"	d
MULH	libavcodec/mathops.h	/^static av_always_inline int MULH(int a, int b){$/;"	f
MULH	libavcodec/ppc/mathops.h	/^static inline av_const int MULH(int a, int b){$/;"	f
MULH	libavcodec/ppc/mathops.h	42;"	d
MULH	libavcodec/x86/mathops.h	/^static av_always_inline av_const int MULH(int a, int b)$/;"	f
MULH	libavcodec/x86/mathops.h	43;"	d
MULH3	libavcodec/dct32.c	28;"	d	file:
MULH3	libavcodec/dct32.c	33;"	d	file:
MULH3	libavcodec/mpegaudiodec.c	102;"	d	file:
MULH3	libavcodec/mpegaudiodec.c	92;"	d	file:
MULL	libavcodec/avr32/mathops.h	/^static inline av_const int MULL(int a, int b, unsigned shift)$/;"	f
MULL	libavcodec/avr32/mathops.h	31;"	d
MULL	libavcodec/mathops.h	49;"	d
MULL	libavcodec/x86/mathops.h	/^static av_always_inline av_const int MULL(int a, int b, unsigned shift)$/;"	f
MULL	libavcodec/x86/mathops.h	30;"	d
MULLx	libavcodec/mpegaudiodec.c	103;"	d	file:
MULLx	libavcodec/mpegaudiodec.c	93;"	d	file:
MULS	libavcodec/mpegaudiodsp_template.c	41;"	d	file:
MULS	libavcodec/mpegaudiodsp_template.c	57;"	d	file:
MULT	libavcodec/ppc/mpegaudiodec_altivec.c	55;"	d	file:
MULT	libavcodec/x86/mpegaudiodec_mmx.c	53;"	d	file:
MULT	libavcodec/x86/mpegaudiodec_mmx.c	83;"	d	file:
MULTIPLY	libavcodec/4xm.c	155;"	d	file:
MULTIPLY	libavcodec/jfdctfst.c	145;"	d	file:
MULTIPLY	libavcodec/jfdctint.c	177;"	d	file:
MULTIPLY	libavcodec/jrevdct.c	167;"	d	file:
MULTIPLY	libavcodec/jrevdct.c	170;"	d	file:
MULTIPLY	libavcodec/jrevdct.c	175;"	d	file:
MULTIPLY16C16	libavcodec/jfdctint.c	73;"	d	file:
MULTIPLY16H	libavfilter/libmpcodecs/vf_fspp.c	706;"	d	file:
MULTI_PAYLOAD_CONSTANT	libavformat/asfenc.c	185;"	d	file:
MUL_20091	libavcodec/vp8dsp.c	74;"	d	file:
MUL_35468	libavcodec/vp8dsp.c	75;"	d	file:
MUNGE_8BIT	libavcodec/eaidct.c	62;"	d	file:
MUNGE_NONE	libavcodec/binkidct.c	59;"	d	file:
MUNGE_NONE	libavcodec/eaidct.c	59;"	d	file:
MUNGE_ROW	libavcodec/binkidct.c	62;"	d	file:
MV0F_TAG	libavformat/electronicarts.c	58;"	d	file:
MV0K_TAG	libavformat/electronicarts.c	57;"	d	file:
MVI_AUDIO_STREAM_INDEX	libavformat/mvi.c	26;"	d	file:
MVI_FRAC_BITS	libavformat/mvi.c	24;"	d	file:
MVI_VIDEO_STREAM_INDEX	libavformat/mvi.c	27;"	d	file:
MVIf_TAG	libavformat/electronicarts.c	60;"	d	file:
MVIh_TAG	libavcodec/eacmv.c	150;"	d	file:
MVIh_TAG	libavformat/electronicarts.c	59;"	d	file:
MVModes	libavcodec/vc1.h	/^enum MVModes {$/;"	g
MVTable	libavcodec/msmpeg4data.h	/^typedef struct MVTable {$/;"	s
MVTable	libavcodec/msmpeg4data.h	/^} MVTable;$/;"	t	typeref:struct:MVTable
MV_BWD_A1	libavcodec/cavs.h	/^  MV_BWD_A1,$/;"	e	enum:cavs_mv_loc
MV_BWD_A3	libavcodec/cavs.h	/^  MV_BWD_A3 = MV_BWD_OFFS+8,$/;"	e	enum:cavs_mv_loc
MV_BWD_B2	libavcodec/cavs.h	/^  MV_BWD_B2,$/;"	e	enum:cavs_mv_loc
MV_BWD_B3	libavcodec/cavs.h	/^  MV_BWD_B3,$/;"	e	enum:cavs_mv_loc
MV_BWD_C2	libavcodec/cavs.h	/^  MV_BWD_C2,$/;"	e	enum:cavs_mv_loc
MV_BWD_D3	libavcodec/cavs.h	/^  MV_BWD_D3 = MV_BWD_OFFS,$/;"	e	enum:cavs_mv_loc
MV_BWD_OFFS	libavcodec/cavs.h	55;"	d
MV_BWD_X0	libavcodec/cavs.h	/^  MV_BWD_X0,$/;"	e	enum:cavs_mv_loc
MV_BWD_X1	libavcodec/cavs.h	/^  MV_BWD_X1,$/;"	e	enum:cavs_mv_loc
MV_BWD_X2	libavcodec/cavs.h	/^  MV_BWD_X2,$/;"	e	enum:cavs_mv_loc
MV_BWD_X3	libavcodec/cavs.h	/^  MV_BWD_X3$/;"	e	enum:cavs_mv_loc
MV_CHANGED	libavcodec/error_resilience.c	363;"	d	file:
MV_DIRECT	libavcodec/mpegvideo.h	372;"	d
MV_DIR_BACKWARD	libavcodec/mpegvideo.h	371;"	d
MV_DIR_FORWARD	libavcodec/mpegvideo.h	370;"	d
MV_EDGE_CHECK	libavcodec/vp8.c	498;"	d	file:
MV_END	libavcodec/mpegvideo.h	487;"	d
MV_ERROR	libavcodec/mpegvideo.h	484;"	d
MV_FROZEN	libavcodec/error_resilience.c	362;"	d	file:
MV_FWD_A1	libavcodec/cavs.h	/^  MV_FWD_A1,$/;"	e	enum:cavs_mv_loc
MV_FWD_A3	libavcodec/cavs.h	/^  MV_FWD_A3 = 8,$/;"	e	enum:cavs_mv_loc
MV_FWD_B2	libavcodec/cavs.h	/^  MV_FWD_B2,$/;"	e	enum:cavs_mv_loc
MV_FWD_B3	libavcodec/cavs.h	/^  MV_FWD_B3,$/;"	e	enum:cavs_mv_loc
MV_FWD_C2	libavcodec/cavs.h	/^  MV_FWD_C2,$/;"	e	enum:cavs_mv_loc
MV_FWD_D3	libavcodec/cavs.h	/^  MV_FWD_D3 = 0,$/;"	e	enum:cavs_mv_loc
MV_FWD_X0	libavcodec/cavs.h	/^  MV_FWD_X0,$/;"	e	enum:cavs_mv_loc
MV_FWD_X1	libavcodec/cavs.h	/^  MV_FWD_X1,$/;"	e	enum:cavs_mv_loc
MV_FWD_X2	libavcodec/cavs.h	/^  MV_FWD_X2,$/;"	e	enum:cavs_mv_loc
MV_FWD_X3	libavcodec/cavs.h	/^  MV_FWD_X3,$/;"	e	enum:cavs_mv_loc
MV_PMODE_1MV	libavcodec/vc1.h	/^    MV_PMODE_1MV,$/;"	e	enum:MVModes
MV_PMODE_1MV_HPEL	libavcodec/vc1.h	/^    MV_PMODE_1MV_HPEL,$/;"	e	enum:MVModes
MV_PMODE_1MV_HPEL_BILIN	libavcodec/vc1.h	/^    MV_PMODE_1MV_HPEL_BILIN,$/;"	e	enum:MVModes
MV_PMODE_INTENSITY_COMP	libavcodec/vc1.h	/^    MV_PMODE_INTENSITY_COMP$/;"	e	enum:MVModes
MV_PMODE_MIXED_MV	libavcodec/vc1.h	/^    MV_PMODE_MIXED_MV,$/;"	e	enum:MVModes
MV_PRED_BSKIP	libavcodec/cavs.h	/^  MV_PRED_BSKIP$/;"	e	enum:cavs_mv_pred
MV_PRED_LEFT	libavcodec/cavs.h	/^  MV_PRED_LEFT,$/;"	e	enum:cavs_mv_pred
MV_PRED_MEDIAN	libavcodec/cavs.h	/^  MV_PRED_MEDIAN,$/;"	e	enum:cavs_mv_pred
MV_PRED_PSKIP	libavcodec/cavs.h	/^  MV_PRED_PSKIP,$/;"	e	enum:cavs_mv_pred
MV_PRED_TOP	libavcodec/cavs.h	/^  MV_PRED_TOP,$/;"	e	enum:cavs_mv_pred
MV_PRED_TOPRIGHT	libavcodec/cavs.h	/^  MV_PRED_TOPRIGHT,$/;"	e	enum:cavs_mv_pred
MV_STRIDE	libavcodec/cavs.h	56;"	d
MV_TYPE_16X16	libavcodec/mpegvideo.h	374;"	d
MV_TYPE_16X8	libavcodec/mpegvideo.h	376;"	d
MV_TYPE_8X8	libavcodec/mpegvideo.h	375;"	d
MV_TYPE_DMV	libavcodec/mpegvideo.h	378;"	d
MV_TYPE_FIELD	libavcodec/mpegvideo.h	377;"	d
MV_UNCHANGED	libavcodec/error_resilience.c	364;"	d	file:
MV_VLC_BITS	libavcodec/ituh263dec.c	49;"	d	file:
MV_VLC_BITS	libavcodec/mpeg12.c	47;"	d	file:
MV_VLC_BITS	libavcodec/msmpeg4.c	50;"	d	file:
MVhd_TAG	libavformat/electronicarts.c	56;"	d	file:
MXFCodecUL	libavformat/mxf.h	/^} MXFCodecUL;$/;"	t	typeref:struct:__anon326
MXFContainerEssenceEntry	libavformat/mxfenc.c	/^} MXFContainerEssenceEntry;$/;"	t	typeref:struct:__anon459	file:
MXFContext	libavformat/mxfdec.c	/^} MXFContext;$/;"	t	typeref:struct:__anon447	file:
MXFContext	libavformat/mxfenc.c	/^typedef struct MXFContext {$/;"	s	file:
MXFContext	libavformat/mxfenc.c	/^} MXFContext;$/;"	t	typeref:struct:MXFContext	file:
MXFCryptoContext	libavformat/mxfdec.c	/^} MXFCryptoContext;$/;"	t	typeref:struct:__anon439	file:
MXFDescriptor	libavformat/mxfdec.c	/^} MXFDescriptor;$/;"	t	typeref:struct:__anon443	file:
MXFIndexEntry	libavformat/mxfenc.c	/^} MXFIndexEntry;$/;"	t	typeref:struct:__anon457	file:
MXFIndexTableSegment	libavformat/mxfdec.c	/^} MXFIndexTableSegment;$/;"	t	typeref:struct:__anon444	file:
MXFLocalTagPair	libavformat/mxfenc.c	/^} MXFLocalTagPair;$/;"	t	typeref:struct:__anon456	file:
MXFMetadataReadFunc	libavformat/mxfdec.c	/^typedef int MXFMetadataReadFunc(void *arg, AVIOContext *pb, int tag, int size, UID uid);$/;"	t	file:
MXFMetadataReadTableEntry	libavformat/mxfdec.c	/^} MXFMetadataReadTableEntry;$/;"	t	typeref:struct:__anon448	file:
MXFMetadataSet	libavformat/mxfdec.c	/^} MXFMetadataSet;$/;"	t	typeref:struct:__anon446	file:
MXFMetadataSetType	libavformat/mxf.h	/^enum MXFMetadataSetType {$/;"	g
MXFPackage	libavformat/mxfdec.c	/^} MXFPackage;$/;"	t	typeref:struct:__anon445	file:
MXFSequence	libavformat/mxfdec.c	/^} MXFSequence;$/;"	t	typeref:struct:__anon441	file:
MXFStreamContext	libavformat/mxfenc.c	/^} MXFStreamContext;$/;"	t	typeref:struct:__anon458	file:
MXFStructuralComponent	libavformat/mxfdec.c	/^} MXFStructuralComponent;$/;"	t	typeref:struct:__anon440	file:
MXFTrack	libavformat/mxfdec.c	/^} MXFTrack;$/;"	t	typeref:struct:__anon442	file:
MXFWrappingScheme	libavformat/mxfdec.c	/^enum MXFWrappingScheme {$/;"	g	file:
MXGContext	libavformat/mxg.c	/^typedef struct MXGContext {$/;"	s	file:
MXGContext	libavformat/mxg.c	/^} MXGContext;$/;"	t	typeref:struct:MXGContext	file:
MXpegDecodeContext	libavcodec/mxpegdec.c	/^typedef struct MXpegDecodeContext {$/;"	s	file:
MXpegDecodeContext	libavcodec/mxpegdec.c	/^} MXpegDecodeContext;$/;"	t	typeref:struct:MXpegDecodeContext	file:
MY_PI	tests/rotozoom.c	28;"	d	file:
M_E	libavcodec/ratecontrol.c	39;"	d	file:
M_E	libavutil/mathematics.h	30;"	d
M_LN10	libavutil/mathematics.h	36;"	d
M_LN2	libavutil/mathematics.h	33;"	d
M_LOG2_10	libavutil/mathematics.h	39;"	d
M_PHI	libavutil/mathematics.h	42;"	d
M_PI	libavcodec/cos_tablegen.c	28;"	d	file:
M_PI	libavcodec/sinewin_tablegen.c	30;"	d	file:
M_PI	libavutil/mathematics.h	45;"	d
M_SQRT1_2	libavcodec/arm/fft_neon.S	/^#define M_SQRT1_2 0.70710678118654752440$/;"	d
M_SQRT1_2	libavcodec/ppc/fft_altivec_s.S	/^#define M_SQRT1_2      0.70710678118654752440  \/* 1\/sqrt(2) *\/$/;"	d
M_SQRT1_2	libavutil/mathematics.h	48;"	d
M_SQRT2	libavutil/mathematics.h	51;"	d
MacroBlock	libavcodec/escape124.c	/^typedef union MacroBlock {$/;"	u	file:
MacroBlock	libavcodec/escape124.c	/^} MacroBlock;$/;"	t	typeref:union:MacroBlock	file:
MadContext	libavcodec/eamad.c	/^typedef struct MadContext {$/;"	s	file:
MadContext	libavcodec/eamad.c	/^} MadContext;$/;"	t	typeref:struct:MadContext	file:
Maj	libavutil/sha.c	155;"	d	file:
MaterialPackage	libavformat/mxf.h	/^    MaterialPackage,$/;"	e	enum:MXFMetadataSetType
MatroskaAttachement	libavformat/matroskadec.c	/^} MatroskaAttachement;$/;"	t	typeref:struct:__anon362	file:
MatroskaBlock	libavformat/matroskadec.c	/^} MatroskaBlock;$/;"	t	typeref:struct:__anon372	file:
MatroskaChapter	libavformat/matroskadec.c	/^} MatroskaChapter;$/;"	t	typeref:struct:__anon363	file:
MatroskaCluster	libavformat/matroskadec.c	/^} MatroskaCluster;$/;"	t	typeref:struct:__anon373	file:
MatroskaDemuxContext	libavformat/matroskadec.c	/^} MatroskaDemuxContext;$/;"	t	typeref:struct:__anon371	file:
MatroskaIndex	libavformat/matroskadec.c	/^} MatroskaIndex;$/;"	t	typeref:struct:__anon365	file:
MatroskaIndexPos	libavformat/matroskadec.c	/^} MatroskaIndexPos;$/;"	t	typeref:struct:__anon364	file:
MatroskaLevel	libavformat/matroskadec.c	/^} MatroskaLevel;$/;"	t	typeref:struct:__anon370	file:
MatroskaMuxContext	libavformat/matroskaenc.c	/^typedef struct MatroskaMuxContext {$/;"	s	file:
MatroskaMuxContext	libavformat/matroskaenc.c	/^} MatroskaMuxContext;$/;"	t	typeref:struct:MatroskaMuxContext	file:
MatroskaSeekhead	libavformat/matroskadec.c	/^} MatroskaSeekhead;$/;"	t	typeref:struct:__anon369	file:
MatroskaTag	libavformat/matroskadec.c	/^} MatroskaTag;$/;"	t	typeref:struct:__anon366	file:
MatroskaTagTarget	libavformat/matroskadec.c	/^} MatroskaTagTarget;$/;"	t	typeref:struct:__anon367	file:
MatroskaTags	libavformat/matroskadec.c	/^} MatroskaTags;$/;"	t	typeref:struct:__anon368	file:
MatroskaTrack	libavformat/matroskadec.c	/^} MatroskaTrack;$/;"	t	typeref:struct:__anon361	file:
MatroskaTrackAudio	libavformat/matroskadec.c	/^} MatroskaTrackAudio;$/;"	t	typeref:struct:__anon358	file:
MatroskaTrackCompression	libavformat/matroskadec.c	/^} MatroskaTrackCompression;$/;"	t	typeref:struct:__anon355	file:
MatroskaTrackEncoding	libavformat/matroskadec.c	/^} MatroskaTrackEncoding;$/;"	t	typeref:struct:__anon356	file:
MatroskaTrackEncodingCompAlgo	libavformat/matroska.h	/^} MatroskaTrackEncodingCompAlgo;$/;"	t	typeref:enum:__anon407
MatroskaTrackOperation	libavformat/matroskadec.c	/^} MatroskaTrackOperation;$/;"	t	typeref:struct:__anon360	file:
MatroskaTrackPlane	libavformat/matroskadec.c	/^} MatroskaTrackPlane;$/;"	t	typeref:struct:__anon359	file:
MatroskaTrackType	libavformat/matroska.h	/^} MatroskaTrackType;$/;"	t	typeref:enum:__anon406
MatroskaTrackVideo	libavformat/matroskadec.c	/^} MatroskaTrackVideo;$/;"	t	typeref:struct:__anon357	file:
MatroskaVideoStereoModeType	libavformat/matroska.h	/^} MatroskaVideoStereoModeType;$/;"	t	typeref:enum:__anon408
MaxisXADemuxContext	libavformat/xa.c	/^typedef struct MaxisXADemuxContext {$/;"	s	file:
MaxisXADemuxContext	libavformat/xa.c	/^} MaxisXADemuxContext;$/;"	t	typeref:struct:MaxisXADemuxContext	file:
MicroDVDContext	libavformat/microdvddec.c	/^} MicroDVDContext;$/;"	t	typeref:struct:__anon378	file:
MimicContext	libavcodec/mimic.c	/^} MimicContext;$/;"	t	typeref:struct:__anon282	file:
Minima	libavcodec/motion_est.c	/^typedef struct Minima{$/;"	s	file:
Minima	libavcodec/motion_est.c	/^}Minima;$/;"	t	typeref:struct:Minima	file:
MmContext	libavcodec/mmvideo.c	/^typedef struct MmContext {$/;"	s	file:
MmContext	libavcodec/mmvideo.c	/^} MmContext;$/;"	t	typeref:struct:MmContext	file:
MmDemuxContext	libavformat/mm.c	/^} MmDemuxContext;$/;"	t	typeref:struct:__anon421	file:
ModPred	libavcodec/indeo3.c	/^    uint8_t *ModPred;$/;"	m	struct:Indeo3DecodeContext	file:
Mode	libavcodec/amrnbdata.h	/^enum Mode {$/;"	g
Mode	libavcodec/amrwbdata.h	/^enum Mode {$/;"	g
ModeAlphabet	libavcodec/vp3.c	/^static const int ModeAlphabet[6][CODING_MODE_COUNT] =$/;"	v	file:
ModeTab	libavcodec/twinvq.c	/^} ModeTab;$/;"	t	typeref:struct:__anon66	file:
MotionEstContext	libavcodec/mpegvideo.h	/^typedef struct MotionEstContext{$/;"	s
MotionEstContext	libavcodec/mpegvideo.h	/^}MotionEstContext;$/;"	t	typeref:struct:MotionEstContext
MotionPixelsContext	libavcodec/motionpixels.c	/^typedef struct MotionPixelsContext {$/;"	s	file:
MotionPixelsContext	libavcodec/motionpixels.c	/^} MotionPixelsContext;$/;"	t	typeref:struct:MotionPixelsContext	file:
Motion_Est_ID	libavcodec/avcodec.h	/^enum Motion_Est_ID {$/;"	g
MovChannelLayout	libavformat/isom.c	/^typedef struct MovChannelLayout {$/;"	s	file:
MovChannelLayout	libavformat/isom.c	/^} MovChannelLayout;$/;"	t	typeref:struct:MovChannelLayout	file:
MovieContext	libavfilter/vsrc_movie.c	/^} MovieContext;$/;"	t	typeref:struct:__anon38	file:
Mp3AudioContext	libavcodec/libmp3lame.c	/^typedef struct Mp3AudioContext {$/;"	s	file:
Mp3AudioContext	libavcodec/libmp3lame.c	/^} Mp3AudioContext;$/;"	t	typeref:struct:Mp3AudioContext	file:
Mpeg1Context	libavcodec/mpeg12.c	/^typedef struct Mpeg1Context {$/;"	s	file:
Mpeg1Context	libavcodec/mpeg12.c	/^} Mpeg1Context;$/;"	t	typeref:struct:Mpeg1Context	file:
MpegAudioContext	libavcodec/mpegaudioenc.c	/^typedef struct MpegAudioContext {$/;"	s	file:
MpegAudioContext	libavcodec/mpegaudioenc.c	/^} MpegAudioContext;$/;"	t	typeref:struct:MpegAudioContext	file:
MpegAudioParseContext	libavcodec/mpegaudio_parser.c	/^typedef struct MpegAudioParseContext {$/;"	s	file:
MpegAudioParseContext	libavcodec/mpegaudio_parser.c	/^} MpegAudioParseContext;$/;"	t	typeref:struct:MpegAudioParseContext	file:
MpegDemuxContext	libavformat/mpeg.c	/^typedef struct MpegDemuxContext {$/;"	s	file:
MpegDemuxContext	libavformat/mpeg.c	/^} MpegDemuxContext;$/;"	t	typeref:struct:MpegDemuxContext	file:
MpegEncContext	libavcodec/mpegvideo.h	/^typedef struct MpegEncContext {$/;"	s
MpegEncContext	libavcodec/mpegvideo.h	/^} MpegEncContext;$/;"	t	typeref:struct:MpegEncContext
MpegMuxContext	libavformat/mpegenc.c	/^} MpegMuxContext;$/;"	t	typeref:struct:__anon429	file:
MpegTSContext	libavformat/mpegts.c	/^struct MpegTSContext {$/;"	s	file:
MpegTSContext	libavformat/mpegts.h	/^typedef struct MpegTSContext MpegTSContext;$/;"	t	typeref:struct:MpegTSContext
MpegTSFilter	libavformat/mpegts.c	/^struct MpegTSFilter {$/;"	s	file:
MpegTSFilter	libavformat/mpegts.c	/^typedef struct MpegTSFilter MpegTSFilter;$/;"	t	typeref:struct:MpegTSFilter	file:
MpegTSFilterType	libavformat/mpegts.c	/^enum MpegTSFilterType {$/;"	g	file:
MpegTSPESFilter	libavformat/mpegts.c	/^typedef struct MpegTSPESFilter {$/;"	s	file:
MpegTSPESFilter	libavformat/mpegts.c	/^} MpegTSPESFilter;$/;"	t	typeref:struct:MpegTSPESFilter	file:
MpegTSSection	libavformat/mpegtsenc.c	/^typedef struct MpegTSSection {$/;"	s	file:
MpegTSSection	libavformat/mpegtsenc.c	/^} MpegTSSection;$/;"	t	typeref:struct:MpegTSSection	file:
MpegTSSectionFilter	libavformat/mpegts.c	/^typedef struct MpegTSSectionFilter {$/;"	s	file:
MpegTSSectionFilter	libavformat/mpegts.c	/^} MpegTSSectionFilter;$/;"	t	typeref:struct:MpegTSSectionFilter	file:
MpegTSService	libavformat/mpegtsenc.c	/^typedef struct MpegTSService {$/;"	s	file:
MpegTSService	libavformat/mpegtsenc.c	/^} MpegTSService;$/;"	t	typeref:struct:MpegTSService	file:
MpegTSState	libavformat/mpegts.c	/^enum MpegTSState {$/;"	g	file:
MpegTSWrite	libavformat/mpegtsenc.c	/^typedef struct MpegTSWrite {$/;"	s	file:
MpegTSWrite	libavformat/mpegtsenc.c	/^} MpegTSWrite;$/;"	t	typeref:struct:MpegTSWrite	file:
MpegTSWriteStream	libavformat/mpegtsenc.c	/^typedef struct MpegTSWriteStream {$/;"	s	file:
MpegTSWriteStream	libavformat/mpegtsenc.c	/^} MpegTSWriteStream;$/;"	t	typeref:struct:MpegTSWriteStream	file:
MqcCxState	libavcodec/mqc.c	/^} MqcCxState;$/;"	t	typeref:struct:__anon71	file:
MqcState	libavcodec/mqc.h	/^} MqcState;$/;"	t	typeref:struct:__anon253
MsrleContext	libavcodec/msrle.c	/^typedef struct MsrleContext {$/;"	s	file:
MsrleContext	libavcodec/msrle.c	/^} MsrleContext;$/;"	t	typeref:struct:MsrleContext	file:
Msvideo1Context	libavcodec/msvideo1.c	/^typedef struct Msvideo1Context {$/;"	s	file:
Msvideo1Context	libavcodec/msvideo1.c	/^} Msvideo1Context;$/;"	t	typeref:struct:Msvideo1Context	file:
Msvideo1EncContext	libavcodec/msvideo1enc.c	/^typedef struct Msvideo1EncContext {$/;"	s	file:
Msvideo1EncContext	libavcodec/msvideo1enc.c	/^} Msvideo1EncContext;$/;"	t	typeref:struct:Msvideo1EncContext	file:
MultipleDescriptor	libavformat/mxf.h	/^    MultipleDescriptor,$/;"	e	enum:MXFMetadataSetType
MviDemuxContext	libavformat/mvi.c	/^typedef struct MviDemuxContext {$/;"	s	file:
MviDemuxContext	libavformat/mvi.c	/^} MviDemuxContext;$/;"	t	typeref:struct:MviDemuxContext	file:
N	libavcodec/jpegls.h	/^    int A[367], B[367], C[365], N[367];$/;"	m	struct:JLSState
N	libavfilter/libmpcodecs/vf_pp7.c	200;"	d	file:
N0	libavfilter/libmpcodecs/vf_pp7.c	194;"	d	file:
N1	libavfilter/libmpcodecs/vf_pp7.c	195;"	d	file:
N2	libavfilter/libmpcodecs/vf_pp7.c	196;"	d	file:
NAL_AUD	libavcodec/h264.h	/^    NAL_AUD,$/;"	e	enum:__anon68
NAL_AUXILIARY_SLICE	libavcodec/h264.h	/^    NAL_AUXILIARY_SLICE=19$/;"	e	enum:__anon68
NAL_DPA	libavcodec/h264.h	/^    NAL_DPA,$/;"	e	enum:__anon68
NAL_DPB	libavcodec/h264.h	/^    NAL_DPB,$/;"	e	enum:__anon68
NAL_DPC	libavcodec/h264.h	/^    NAL_DPC,$/;"	e	enum:__anon68
NAL_END_SEQUENCE	libavcodec/h264.h	/^    NAL_END_SEQUENCE,$/;"	e	enum:__anon68
NAL_END_STREAM	libavcodec/h264.h	/^    NAL_END_STREAM,$/;"	e	enum:__anon68
NAL_FILLER_DATA	libavcodec/h264.h	/^    NAL_FILLER_DATA,$/;"	e	enum:__anon68
NAL_IDR_SLICE	libavcodec/h264.h	/^    NAL_IDR_SLICE,$/;"	e	enum:__anon68
NAL_PPS	libavcodec/h264.h	/^    NAL_PPS,$/;"	e	enum:__anon68
NAL_SEI	libavcodec/h264.h	/^    NAL_SEI,$/;"	e	enum:__anon68
NAL_SLICE	libavcodec/h264.h	/^    NAL_SLICE=1,$/;"	e	enum:__anon68
NAL_SPS	libavcodec/h264.h	/^    NAL_SPS,$/;"	e	enum:__anon68
NAL_SPS_EXT	libavcodec/h264.h	/^    NAL_SPS_EXT,$/;"	e	enum:__anon68
NAME	libavcodec/Makefile	/^NAME = avcodec$/;"	m
NAME	libavdevice/Makefile	/^NAME    = avdevice$/;"	m
NAME	libavfilter/Makefile	/^NAME = avfilter$/;"	m
NAME	libavformat/Makefile	/^NAME = avformat$/;"	m
NAME	libavutil/Makefile	/^NAME = avutil$/;"	m
NAME	libpostproc/Makefile	/^NAME = postproc$/;"	m
NAME	libswscale/Makefile	/^NAME = swscale$/;"	m
NAN	libavutil/mathematics.h	54;"	d
NBIT_VO_TYPE	libavcodec/mpeg4video.h	40;"	d
NBLOCKS	libavcodec/ra144.h	28;"	d
NBUCKETS	libavcodec/dnxhdenc.c	663;"	d	file:
NB_DV_VLC	libavcodec/dv_vlc_data.h	32;"	d
NB_ITS	libavcodec/dct-test.c	155;"	d	file:
NB_ITS	libavcodec/motion-test.c	74;"	d	file:
NB_ITS_SPEED	libavcodec/dct-test.c	156;"	d	file:
NB_LSP_COEFS	libavcodec/wma.h	41;"	d
NB_OBJS	tests/videogen.c	190;"	d	file:
NB_PASSES	libavcodec/png.h	53;"	d
NB_PID_MAX	libavformat/mpegts.h	32;"	d
NB_RL_TABLES	libavcodec/msmpeg4data.h	59;"	d
NC_VIDEO_FLAG	libavformat/ncdec.c	26;"	d	file:
NDEBUG	libavcodec/dcaenc.c	33;"	d	file:
NDEBUG	libavcodec/dvdsubenc.c	24;"	d	file:
NDEBUG	libavcodec/flacdec.c	47;"	d	file:
NDEBUG	libavcodec/libdiracdec.c	34;"	d	file:
NDEBUG	libavcodec/libdiracenc.c	34;"	d	file:
NDEBUG	libavcodec/libschroedingerdec.c	35;"	d	file:
NDEBUG	libavcodec/libschroedingerenc.c	30;"	d	file:
NDEBUG	libavcodec/libvorbis.c	35;"	d	file:
NDEBUG	libavcodec/libxvid_rc.c	30;"	d	file:
NDEBUG	libavcodec/motion_est.c	39;"	d	file:
NDEBUG	libavcodec/mpegvideo_xvmc.c	29;"	d	file:
NDEBUG	libavcodec/qcelpdec.c	44;"	d	file:
NDEBUG	libavcodec/qdm2.c	48;"	d	file:
NDEBUG	libavcodec/ratecontrol.c	35;"	d	file:
NDEBUG	libavcodec/snow.c	33;"	d	file:
NDEBUG	libavcodec/svq1dec.c	43;"	d	file:
NDEBUG	libavcodec/svq1enc.c	39;"	d	file:
NDEBUG	libavcodec/vc1.c	38;"	d	file:
NDEBUG	libavcodec/vc1dec.c	42;"	d	file:
NDEBUG	libavcodec/vdpau.c	29;"	d	file:
NDEBUG	libavcodec/vorbisdec.c	41;"	d	file:
NDEBUG	libavcodec/vorbisenc.c	37;"	d	file:
NDEBUG	libavcodec/wma.c	27;"	d	file:
NDEBUG	libavcodec/wmadec.c	39;"	d	file:
NDEBUG	libavcodec/wmaenc.c	25;"	d	file:
NDEBUG	libavfilter/vf_yadif.c	26;"	d	file:
NDEBUG	libavformat/asfdec.c	76;"	d	file:
NDEBUG	libavformat/asfenc.c	27;"	d	file:
NDEBUG	libavformat/avidec.c	32;"	d	file:
NDEBUG	libavformat/flvenc.c	30;"	d	file:
NDEBUG	libavformat/mov.c	64;"	d	file:
NDEBUG	libavformat/movenc.c	39;"	d	file:
NDEBUG	libavformat/mpeg.c	26;"	d	file:
NDEBUG	libavformat/mpegenc.c	29;"	d	file:
NDEBUG	libavformat/nutdec.c	31;"	d	file:
NDEBUG	libavformat/swf.h	64;"	d
NDEBUG	libavformat/utils.c	46;"	d	file:
NDEBUG	libavutil/integer.c	160;"	d	file:
NDEBUG	libavutil/internal.h	30;"	d
NEG_SSR32	libavcodec/mathops.h	140;"	d
NEG_SSR32	libavcodec/x86/mathops.h	/^static inline  int32_t NEG_SSR32( int32_t a, int8_t s){$/;"	f
NEG_SSR32	libavcodec/x86/mathops.h	103;"	d
NEG_USR32	libavcodec/mathops.h	144;"	d
NEG_USR32	libavcodec/x86/mathops.h	/^static inline uint32_t NEG_USR32(uint32_t a, int8_t s){$/;"	f
NEG_USR32	libavcodec/x86/mathops.h	112;"	d
NELLY_BANDS	libavcodec/nellymoser.h	39;"	d
NELLY_BASE_OFF	libavcodec/nellymoser.h	46;"	d
NELLY_BASE_SHIFT	libavcodec/nellymoser.h	47;"	d
NELLY_BIT_CAP	libavcodec/nellymoser.h	45;"	d
NELLY_BLOCK_LEN	libavcodec/nellymoser.h	40;"	d
NELLY_BUF_LEN	libavcodec/nellymoser.h	43;"	d
NELLY_DETAIL_BITS	libavcodec/nellymoser.h	42;"	d
NELLY_FILL_LEN	libavcodec/nellymoser.h	44;"	d
NELLY_HEADER_BITS	libavcodec/nellymoser.h	41;"	d
NELLY_SAMPLES	libavcodec/nellymoser.h	48;"	d
NEXT	libpostproc/postprocess_template.c	2634;"	d	file:
NI_DGRAM	libavformat/network.h	166;"	d
NI_NAMERQD	libavformat/network.h	158;"	d
NI_NOFQDN	libavformat/network.h	150;"	d
NI_NUMERICHOST	libavformat/network.h	154;"	d
NI_NUMERICSERV	libavformat/network.h	162;"	d
NMSEDEC_BITS	libavcodec/j2kenc.c	34;"	d	file:
NMSEDEC_FRACBITS	libavcodec/j2kenc.c	35;"	d	file:
NOISE_BT	libavcodec/aac.h	/^    NOISE_BT       = 13,    \/\/\/< Spectral data are scaled white noise not coded in the bitstream.$/;"	e	enum:BandType
NOISE_FLOOR_OFFSET	libavcodec/aacsbr.c	43;"	d	file:
NOISE_TAB_SIZE	libavcodec/wma.h	48;"	d
NOISE_W	tests/videogen.c	168;"	d	file:
NOISE_X	tests/videogen.c	166;"	d	file:
NOISE_Y	tests/videogen.c	167;"	d	file:
NOP	libavcodec/ppc/vp3dsp_altivec.c	106;"	d	file:
NOREDZONE_FLAGS	config.mak	/^NOREDZONE_FLAGS=$/;"	m
NORMALIZE_MMX	libavcodec/x86/vc1dsp_mmx.c	37;"	d	file:
NOT_AVAIL	libavcodec/cavs.h	40;"	d
NOVFP	libavcodec/arm/dcadsp_neon.S	/^NOVFP   vldr            s0,  [sp, #16]          @ scale$/;"	l
NOVFP	libavcodec/arm/dsputil_neon.S	/^NOVFP   ldr             r2,  [sp]$/;"	l
NOVFP	libavcodec/arm/dsputil_neon.S	/^NOVFP   ldr             r3,  [sp]$/;"	l
NOVFP	libavcodec/arm/dsputil_neon.S	/^NOVFP   len .req r3$/;"	l
NOVFP	libavcodec/arm/dsputil_neon.S	/^NOVFP   vdup.32         d16, r3$/;"	l
NOVFP	libavcodec/arm/dsputil_neon.S	/^NOVFP   vdup.32         q0,  r2$/;"	l
NOVFP	libavcodec/arm/dsputil_neon.S	/^NOVFP   vdup.32         q1,  r3$/;"	l
NOVFP	libavcodec/arm/dsputil_neon.S	/^NOVFP   vdup.32         q10, r3$/;"	l
NOVFP	libavcodec/arm/dsputil_neon.S	/^NOVFP   vdup.32         q8,  r2$/;"	l
NOVFP	libavcodec/arm/dsputil_neon.S	/^NOVFP   vmov.32         r0,  d0[0]$/;"	l
NOVFP	libavcodec/arm/fmtconvert_neon.S	/^NOVFP   len     .req    r3$/;"	l
NOVFP	libavcodec/arm/fmtconvert_neon.S	/^NOVFP   vdup.32         q0,  r2$/;"	l
NOVFP	libavcodec/arm/synth_filter_neon.S	/^NOVFP   vldr            s0,  [sp, #12*4]        @ scale$/;"	l
NO_DATA	libavcodec/amrnbdata.h	/^    NO_DATA = 15                          \/\/\/< no transmission$/;"	e	enum:Mode
NO_DATA	libavcodec/amrwbdata.h	/^    NO_DATA                                \/\/\/< no transmission$/;"	e	enum:Mode
NO_PERM	libavcodec/dct-test.c	/^  enum formattag { NO_PERM,MMX_PERM, MMX_SIMPLE_PERM, SCALE_PERM, SSE2_PERM, PARTTRANS_PERM } format;$/;"	e	enum:algo::formattag	file:
NR_ALLPASS_BANDS	libavcodec/aacps.c	/^static const int   NR_ALLPASS_BANDS[]  = { 30, 50 };$/;"	v	file:
NR_ALLPASS_BANDS20	libavcodec/aacps_tablegen.h	34;"	d
NR_ALLPASS_BANDS34	libavcodec/aacps_tablegen.h	35;"	d
NR_BANDS	libavcodec/aacps.c	/^static const int   NR_BANDS[]          = { 71, 91 };$/;"	v	file:
NR_PAR_BANDS	libavcodec/aacps.c	/^static const int   NR_PAR_BANDS[]      = { 20, 34 };$/;"	v	file:
NSEGS	libavcodec/pcm_tablegen.h	33;"	d
NSKIPSIZE	libavcodec/shorten.c	55;"	d	file:
NSVContext	libavformat/nsvdec.c	/^} NSVContext;$/;"	t	typeref:struct:__anon345	file:
NSVStatus	libavformat/nsvdec.c	/^enum NSVStatus {$/;"	g	file:
NSVStream	libavformat/nsvdec.c	/^typedef struct NSVStream {$/;"	s	file:
NSVStream	libavformat/nsvdec.c	/^} NSVStream;$/;"	t	typeref:struct:NSVStream	file:
NSV_FOUND_BEEF	libavformat/nsvdec.c	/^    NSV_FOUND_BEEF,$/;"	e	enum:NSVStatus	file:
NSV_FOUND_NSVF	libavformat/nsvdec.c	/^    NSV_FOUND_NSVF,$/;"	e	enum:NSVStatus	file:
NSV_FOUND_NSVS	libavformat/nsvdec.c	/^    NSV_FOUND_NSVS,$/;"	e	enum:NSVStatus	file:
NSV_GOT_AUDIO	libavformat/nsvdec.c	/^    NSV_GOT_AUDIO,$/;"	e	enum:NSVStatus	file:
NSV_GOT_VIDEO	libavformat/nsvdec.c	/^    NSV_GOT_VIDEO,$/;"	e	enum:NSVStatus	file:
NSV_HAS_READ_NSVF	libavformat/nsvdec.c	/^    NSV_HAS_READ_NSVF,$/;"	e	enum:NSVStatus	file:
NSV_HAS_READ_NSVS	libavformat/nsvdec.c	/^    NSV_HAS_READ_NSVS,$/;"	e	enum:NSVStatus	file:
NSV_MAX_RESYNC	libavformat/nsvdec.c	33;"	d	file:
NSV_MAX_RESYNC_TRIES	libavformat/nsvdec.c	34;"	d	file:
NSV_ST_AUDIO	libavformat/nsvdec.c	139;"	d	file:
NSV_ST_SUBT	libavformat/nsvdec.c	140;"	d	file:
NSV_ST_VIDEO	libavformat/nsvdec.c	138;"	d	file:
NSV_UNSYNC	libavformat/nsvdec.c	/^    NSV_UNSYNC,$/;"	e	enum:NSVStatus	file:
NSVf_end	libavformat/nsvdec.c	/^    int  NSVf_end;$/;"	m	struct:__anon345	file:
NTP_OFFSET	libavformat/internal.h	80;"	d
NTP_OFFSET_US	libavformat/internal.h	81;"	d
NTSC	libavdevice/bktr.c	66;"	d	file:
NTSCJ	libavdevice/bktr.c	71;"	d	file:
NTSCM	libavdevice/bktr.c	67;"	d	file:
NTSC_HEIGHT	libavdevice/bktr.c	76;"	d	file:
NTSC_samples_per_frame	libavformat/mxfenc.c	/^static const int NTSC_samples_per_frame[] = { 1602, 1601, 1602, 1601, 1602, 0 };$/;"	v	file:
NULL_IF_CONFIG_SMALL	libavutil/internal.h	186;"	d
NULL_IF_CONFIG_SMALL	libavutil/internal.h	188;"	d
NUM_BTYPE_VLCS	libavcodec/rv40vlc2.h	675;"	d
NUM_DCT_TOKENS	libavcodec/vp8.h	/^    NUM_DCT_TOKENS$/;"	e	enum:dct_token
NUM_FILTERS	libavcodec/mlp.h	61;"	d
NUM_FLOOR_PARTITIONS	libavcodec/vorbisenc.c	133;"	d	file:
NUM_INTER_TABLES	libavcodec/rv34vlc.h	33;"	d
NUM_INTRA_TABLES	libavcodec/rv34vlc.h	32;"	d
NUM_NUMBERED_MPI	libavfilter/libmpcodecs/vf.h	41;"	d
NUM_PTYPE_VLCS	libavcodec/rv40vlc2.h	639;"	d
NUM_RESIDUE_PARTITIONS	libavcodec/vorbisenc.c	138;"	d	file:
NUM_STORED	libavfilter/libmpcodecs/vf_filmdint.c	36;"	d	file:
NUTContext	libavformat/libnut.c	/^} NUTContext;$/;"	t	typeref:struct:__anon424	file:
NUTContext	libavformat/nut.h	/^} NUTContext;$/;"	t	typeref:struct:__anon494
NUT_MAX_STREAMS	libavformat/nutdec.c	34;"	d	file:
NUVContext	libavformat/nuv.c	/^} NUVContext;$/;"	t	typeref:struct:__anon387	file:
NUV_AUDIO	libavformat/nuv.c	/^    NUV_AUDIO = 'A',$/;"	e	enum:__anon388	file:
NUV_EXTRADATA	libavformat/nuv.c	/^    NUV_EXTRADATA = 'D',$/;"	e	enum:__anon388	file:
NUV_MYTHEXT	libavformat/nuv.c	/^    NUV_MYTHEXT = 'X'$/;"	e	enum:__anon388	file:
NUV_SEEKP	libavformat/nuv.c	/^    NUV_SEEKP = 'R',$/;"	e	enum:__anon388	file:
NUV_VIDEO	libavformat/nuv.c	/^    NUV_VIDEO = 'V',$/;"	e	enum:__anon388	file:
NWRAP	libavcodec/shorten.c	54;"	d	file:
N_MODES	libavcodec/amrnbdata.h	/^    N_MODES,                              \/\/\/< number of modes$/;"	e	enum:Mode
NellyMoserDecodeContext	libavcodec/nellymoserdec.c	/^typedef struct NellyMoserDecodeContext {$/;"	s	file:
NellyMoserDecodeContext	libavcodec/nellymoserdec.c	/^} NellyMoserDecodeContext;$/;"	t	typeref:struct:NellyMoserDecodeContext	file:
NellyMoserEncodeContext	libavcodec/nellymoserenc.c	/^typedef struct NellyMoserEncodeContext {$/;"	s	file:
NellyMoserEncodeContext	libavcodec/nellymoserenc.c	/^} NellyMoserEncodeContext;$/;"	t	typeref:struct:NellyMoserEncodeContext	file:
Node	libavcodec/huffman.h	/^} Node;$/;"	t	typeref:struct:__anon149
NullContext	libavfilter/vsrc_nullsrc.c	/^} NullContext;$/;"	t	typeref:struct:__anon9	file:
NuvContext	libavcodec/nuv.c	/^} NuvContext;$/;"	t	typeref:struct:__anon100	file:
OA	libavcodec/sh4/idct_sh4.c	167;"	d	file:
OBJS	Makefile	/^OBJS        = $(PROGS-yes:%=%.o) cmdutils.o$/;"	m
OBJS	av.mk	/^OBJS :=  $/;"	m
OBJS	common.mak	/^OBJS      := $(addprefix $(SUBDIR),$(sort $(OBJS)))$/;"	m
OBJS	doc/examples/Makefile	/^OBJS=$(addsuffix .o,$(EXAMPLES))$/;"	m
OBJS	libavcodec/Makefile	/^OBJS = allcodecs.o                                                      \\$/;"	m
OBJS	libavdevice/Makefile	/^OBJS    = alldevices.o avdevice.o$/;"	m
OBJS	libavfilter/Makefile	/^OBJS = allfilters.o                                                     \\$/;"	m
OBJS	libavformat/Makefile	/^OBJS = allformats.o         \\$/;"	m
OBJS	libavutil/Makefile	/^OBJS = adler32.o                                                        \\$/;"	m
OBJS	libpostproc/Makefile	/^OBJS = postprocess.o$/;"	m
OBJS	libswscale/Makefile	/^OBJS = options.o rgb2rgb.o swscale.o utils.o yuv2rgb.o \\$/;"	m
OBJS-yes	av.mk	/^OBJS-yes :=  $/;"	m
OBMC_FILTER	libavcodec/mpegvideo_common.h	393;"	d
OBMC_FILTER4	libavcodec/mpegvideo_common.h	395;"	d
OBMC_MAX	libavcodec/snow.h	38;"	d
OCStatus	libavcodec/aac.h	/^enum OCStatus {$/;"	g
OCVContext	libavfilter/vf_libopencv.c	/^} OCVContext;$/;"	t	typeref:struct:__anon13	file:
OCVFilterEntry	libavfilter/vf_libopencv.c	/^} OCVFilterEntry;$/;"	t	typeref:struct:__anon16	file:
OC_GLOBAL_HDR	libavcodec/aac.h	/^    OC_GLOBAL_HDR,  \/\/< Output configuration set in a global header but not yet locked$/;"	e	enum:OCStatus
OC_LOCKED	libavcodec/aac.h	/^    OC_LOCKED,      \/\/< Output configuration locked in place$/;"	e	enum:OCStatus
OC_NONE	libavcodec/aac.h	/^    OC_NONE,        \/\/< Output unconfigured$/;"	e	enum:OCStatus
OC_TRIAL_FRAME	libavcodec/aac.h	/^    OC_TRIAL_FRAME, \/\/< Output configuration under trial specified by a frame header$/;"	e	enum:OCStatus
OC_TRIAL_PCE	libavcodec/aac.h	/^    OC_TRIAL_PCE,   \/\/< Output configuration under trial specified by an inband PCE$/;"	e	enum:OCStatus
OFFSET	libavcodec/ac3enc.h	43;"	d
OFFSET	libavcodec/ac3enc_combined.c	14;"	d	file:
OFFSET	libavcodec/libx264.c	430;"	d	file:
OFFSET	libavcodec/options.c	59;"	d	file:
OFFSET	libavdevice/bktr.c	344;"	d	file:
OFFSET	libavdevice/fbdev.c	251;"	d	file:
OFFSET	libavdevice/libdc1394.c	84;"	d	file:
OFFSET	libavdevice/sdl.c	203;"	d	file:
OFFSET	libavdevice/v4l2.c	709;"	d	file:
OFFSET	libavdevice/vfwcap.c	464;"	d	file:
OFFSET	libavdevice/x11grab.c	465;"	d	file:
OFFSET	libavfilter/vf_drawtext.c	86;"	d	file:
OFFSET	libavfilter/vf_lut.c	81;"	d	file:
OFFSET	libavfilter/vsrc_movie.c	58;"	d	file:
OFFSET	libavformat/crypto.c	47;"	d	file:
OFFSET	libavformat/http.c	55;"	d	file:
OFFSET	libavformat/img2.c	463;"	d	file:
OFFSET	libavformat/options.c	63;"	d	file:
OFFSET	libavformat/rawdec.c	207;"	d	file:
OFFSET	libavformat/rawdec.c	215;"	d	file:
OFFSET	libavformat/tty.c	154;"	d	file:
OFFSET	libavutil/opt.c	599;"	d	file:
OFFSET	libswscale/options.c	32;"	d	file:
OGGContext	libavformat/oggenc.c	/^} OGGContext;$/;"	t	typeref:struct:__anon381	file:
OGGPage	libavformat/oggenc.c	/^} OGGPage;$/;"	t	typeref:struct:__anon379	file:
OGGPageList	libavformat/oggenc.c	/^typedef struct OGGPageList {$/;"	s	file:
OGGPageList	libavformat/oggenc.c	/^} OGGPageList;$/;"	t	typeref:struct:OGGPageList	file:
OGGStreamContext	libavformat/oggenc.c	/^} OGGStreamContext;$/;"	t	typeref:struct:__anon380	file:
OGGVORBIS_FRAME_SIZE	libavcodec/libvorbis.c	38;"	d	file:
OGG_FLAC_METADATA_TYPE_STREAMINFO	libavformat/oggparseflac.c	27;"	d	file:
OGG_FLAG_BOS	libavformat/oggdec.h	98;"	d
OGG_FLAG_CONT	libavformat/oggdec.h	97;"	d
OGG_FLAG_EOS	libavformat/oggdec.h	99;"	d
OMA_CODECID_ATRAC3	libavformat/oma.c	/^    OMA_CODECID_ATRAC3  = 0,$/;"	e	enum:__anon473	file:
OMA_CODECID_ATRAC3P	libavformat/oma.c	/^    OMA_CODECID_ATRAC3P = 1,$/;"	e	enum:__anon473	file:
OMA_CODECID_LPCM	libavformat/oma.c	/^    OMA_CODECID_LPCM    = 4,$/;"	e	enum:__anon473	file:
OMA_CODECID_MP3	libavformat/oma.c	/^    OMA_CODECID_MP3     = 3,$/;"	e	enum:__anon473	file:
OMA_CODECID_WMA	libavformat/oma.c	/^    OMA_CODECID_WMA     = 5,$/;"	e	enum:__anon473	file:
ONE	libavcodec/jrevdct.c	134;"	d	file:
ONEITERBUTTERFLY	libavcodec/ppc/dsputil_altivec.c	1029;"	d	file:
ONEITERBUTTERFLY	libavcodec/ppc/dsputil_altivec.c	1135;"	d	file:
ONEITERBUTTERFLY	libavcodec/ppc/dsputil_altivec.c	1201;"	d	file:
ONEITERBUTTERFLY	libavcodec/ppc/dsputil_altivec.c	993;"	d	file:
ONE_BITS	libavutil/softfloat.h	29;"	d
ONE_HALF	libavutil/colorspace.h	31;"	d
ONE_HALF	tests/rotozoom.c	57;"	d	file:
ONE_HALF	tests/videogen.c	29;"	d	file:
ONLY_IF_THREADS_ENABLED	libavutil/internal.h	225;"	d
ONLY_IF_THREADS_ENABLED	libavutil/internal.h	227;"	d
ONLY_LONG_SEQUENCE	libavcodec/aac.h	/^    ONLY_LONG_SEQUENCE,$/;"	e	enum:WindowSequence
OP	libavcodec/alpha/dsputil_alpha.c	149;"	d	file:
OP	libavcodec/anm.c	140;"	d	file:
OP	libavcodec/arm/dsputil_iwmmxt.c	42;"	d	file:
OP	libavcodec/arm/dsputil_iwmmxt.c	87;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	275;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	292;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	293;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	310;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	69;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	81;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	82;"	d	file:
OP	libavcodec/sh4/dsputil_align.c	94;"	d	file:
OP	libpostproc/postprocess_altivec_template.c	911;"	d	file:
OP	libpostproc/postprocess_altivec_template.c	921;"	d	file:
OP	libpostproc/postprocess_altivec_template.c	923;"	d	file:
OP	libpostproc/postprocess_altivec_template.c	933;"	d	file:
OP	libpostproc/postprocess_altivec_template.c	941;"	d	file:
OP	libpostproc/postprocess_altivec_template.c	957;"	d	file:
OP	libpostproc/postprocess_altivec_template.c	962;"	d	file:
OP	libpostproc/postprocess_altivec_template.c	978;"	d	file:
OPCODE_AUDIO_FRAME	libavformat/ipmovie.c	61;"	d	file:
OPCODE_CREATE_GRADIENT	libavformat/ipmovie.c	64;"	d	file:
OPCODE_CREATE_TIMER	libavformat/ipmovie.c	55;"	d	file:
OPCODE_END_OF_CHUNK	libavformat/ipmovie.c	54;"	d	file:
OPCODE_END_OF_STREAM	libavformat/ipmovie.c	53;"	d	file:
OPCODE_INIT_AUDIO_BUFFERS	libavformat/ipmovie.c	56;"	d	file:
OPCODE_INIT_VIDEO_BUFFERS	libavformat/ipmovie.c	58;"	d	file:
OPCODE_INIT_VIDEO_MODE	libavformat/ipmovie.c	63;"	d	file:
OPCODE_PREAMBLE_SIZE	libavformat/ipmovie.c	39;"	d	file:
OPCODE_SEND_BUFFER	libavformat/ipmovie.c	60;"	d	file:
OPCODE_SET_DECODING_MAP	libavformat/ipmovie.c	68;"	d	file:
OPCODE_SET_PALETTE	libavformat/ipmovie.c	65;"	d	file:
OPCODE_SET_PALETTE_COMPRESSED	libavformat/ipmovie.c	66;"	d	file:
OPCODE_SILENCE_FRAME	libavformat/ipmovie.c	62;"	d	file:
OPCODE_START_STOP_AUDIO	libavformat/ipmovie.c	57;"	d	file:
OPCODE_UNKNOWN_06	libavformat/ipmovie.c	59;"	d	file:
OPCODE_UNKNOWN_0E	libavformat/ipmovie.c	67;"	d	file:
OPCODE_UNKNOWN_10	libavformat/ipmovie.c	69;"	d	file:
OPCODE_UNKNOWN_12	libavformat/ipmovie.c	71;"	d	file:
OPCODE_UNKNOWN_13	libavformat/ipmovie.c	72;"	d	file:
OPCODE_UNKNOWN_14	libavformat/ipmovie.c	73;"	d	file:
OPCODE_UNKNOWN_15	libavformat/ipmovie.c	74;"	d	file:
OPCODE_VIDEO_DATA	libavformat/ipmovie.c	70;"	d	file:
OPEN_READER	libavcodec/get_bits.h	128;"	d
OPEN_READER	libavcodec/get_bits.h	181;"	d
OPJ_STATIC	libavcodec/libopenjpeg.c	30;"	d	file:
OPSIZE	libavutil/x86_cpu.h	28;"	d
OPSIZE	libavutil/x86_cpu.h	49;"	d
OPTIONS_ARRAY_SIZE	libpostproc/postprocess.c	112;"	d	file:
OPT_AUDIO	cmdutils.h	124;"	d
OPT_AUDIO	ffmpeg/cmdutils.h	124;"	d
OPT_BOOL	cmdutils.h	120;"	d
OPT_BOOL	ffmpeg/cmdutils.h	120;"	d
OPT_DATA	cmdutils.h	131;"	d
OPT_DATA	ffmpeg/cmdutils.h	131;"	d
OPT_EXIT	cmdutils.h	130;"	d
OPT_EXIT	ffmpeg/cmdutils.h	130;"	d
OPT_EXPERT	cmdutils.h	121;"	d
OPT_EXPERT	ffmpeg/cmdutils.h	121;"	d
OPT_FLOAT	cmdutils.h	127;"	d
OPT_FLOAT	ffmpeg/cmdutils.h	127;"	d
OPT_GRAB	cmdutils.h	125;"	d
OPT_GRAB	ffmpeg/cmdutils.h	125;"	d
OPT_INT	cmdutils.h	126;"	d
OPT_INT	ffmpeg/cmdutils.h	126;"	d
OPT_INT64	cmdutils.h	129;"	d
OPT_INT64	ffmpeg/cmdutils.h	129;"	d
OPT_SIZE	libavcodec/nellymoserenc.c	49;"	d	file:
OPT_STR	libavcodec/libx264.c	213;"	d	file:
OPT_STRING	cmdutils.h	122;"	d
OPT_STRING	ffmpeg/cmdutils.h	122;"	d
OPT_SUBTITLE	cmdutils.h	128;"	d
OPT_SUBTITLE	ffmpeg/cmdutils.h	128;"	d
OPT_VIDEO	cmdutils.h	123;"	d
OPT_VIDEO	ffmpeg/cmdutils.h	123;"	d
OP_ADD	libavcodec/ivi_dsp.c	462;"	d	file:
OP_AVG	libavcodec/pngdec.c	209;"	d	file:
OP_AVG	libavcodec/x86/dsputil_mmx.c	167;"	d	file:
OP_AVG	libavcodec/x86/dsputil_mmx.c	189;"	d	file:
OP_AVG	libavcodec/x86/dsputil_mmx.c	196;"	d	file:
OP_AVG	libavcodec/x86/dsputil_mmx.c	202;"	d	file:
OP_AVG	libavcodec/x86/dsputil_mmx.c	211;"	d	file:
OP_AVG	libavcodec/x86/dsputil_mmx.c	217;"	d	file:
OP_AVG	libavcodec/x86/vc1dsp_mmx.c	34;"	d	file:
OP_C	libavcodec/sh4/dsputil_align.c	96;"	d	file:
OP_C0	libavcodec/sh4/dsputil_align.c	118;"	d	file:
OP_C4	libavcodec/sh4/dsputil_align.c	53;"	d	file:
OP_C40	libavcodec/sh4/dsputil_align.c	61;"	d	file:
OP_PUT	libavcodec/ivi_dsp.c	461;"	d	file:
OP_PUT	libavcodec/x86/vc1dsp_mmx.c	33;"	d	file:
OP_SUB	libavcodec/pngdec.c	197;"	d	file:
OP_U8_ALTIVEC	libavcodec/ppc/h264_altivec.c	33;"	d	file:
OP_U8_ALTIVEC	libavcodec/ppc/h264_altivec.c	43;"	d	file:
OP_U8_ALTIVEC	libavcodec/ppc/h264_altivec.c	53;"	d	file:
OP_U8_ALTIVEC	libavcodec/ppc/h264_altivec.c	63;"	d	file:
OP_U8_ALTIVEC	libavcodec/ppc/vc1dsp_altivec.c	327;"	d	file:
OP_U8_ALTIVEC	libavcodec/ppc/vc1dsp_altivec.c	330;"	d	file:
OP_U8_ALTIVEC	libavcodec/ppc/vc1dsp_altivec.c	333;"	d	file:
OP_U8_ALTIVEC	libavcodec/ppc/vc1dsp_altivec.c	336;"	d	file:
OP_X	libavcodec/sh4/dsputil_align.c	132;"	d	file:
OP_X0	libavcodec/sh4/dsputil_align.c	219;"	d	file:
OP_X2	libavcodec/alpha/dsputil_alpha.c	156;"	d	file:
OP_XY	libavcodec/sh4/dsputil_align.c	221;"	d	file:
OP_XY0	libavcodec/sh4/dsputil_align.c	220;"	d	file:
OP_XY2	libavcodec/alpha/dsputil_alpha.c	181;"	d	file:
OP_Y	libavcodec/sh4/dsputil_align.c	181;"	d	file:
OP_Y0	libavcodec/sh4/dsputil_align.c	154;"	d	file:
OP_Y2	libavcodec/alpha/dsputil_alpha.c	167;"	d	file:
ORDER_METHOD_2LEVEL	libavcodec/lpc.h	29;"	d
ORDER_METHOD_4LEVEL	libavcodec/lpc.h	30;"	d
ORDER_METHOD_8LEVEL	libavcodec/lpc.h	31;"	d
ORDER_METHOD_EST	libavcodec/lpc.h	28;"	d
ORDER_METHOD_LOG	libavcodec/lpc.h	33;"	d
ORDER_METHOD_SEARCH	libavcodec/lpc.h	32;"	d
OR_VLC_BITS	libavcodec/intrax8.c	35;"	d	file:
OR_VLC_MTD	libavcodec/intrax8.c	39;"	d	file:
OTHERBLK_VLC_SIZE	libavcodec/rv34vlc.h	38;"	d
OUTBUF_PADDED	libavutil/lzo.c	30;"	d	file:
OUTER_TC_NBHD	libavfilter/libmpcodecs/vf_detc.c	54;"	d	file:
OUTPUT_PIXEL_PAIR	libavcodec/truemotion1.c	591;"	d	file:
OUTPUT_PROC_TIMEOUT	libavcodec/crystalhd.c	93;"	d	file:
OUT_BUFFER_SIZE	libavcodec/shorten.c	37;"	d	file:
OUT_FMT	libavcodec/mpegaudiodec.c	105;"	d	file:
OUT_FMT	libavcodec/mpegaudiodec.c	95;"	d	file:
OUT_INT	libavcodec/mpegaudio.h	/^typedef float OUT_INT;$/;"	t
OUT_INT	libavcodec/mpegaudio.h	/^typedef int16_t OUT_INT;$/;"	t
OUT_SHIFT	libavcodec/mpegaudiodsp_template.c	47;"	d	file:
OVERLAY	libavfilter/vf_overlay.c	58;"	d	file:
OVERREAD_SIZE	libavformat/mxg.c	30;"	d	file:
OY	libswscale/swscale_internal.h	/^    vector signed short   OY;$/;"	m	struct:SwsContext
OggVorbisContext	libavcodec/libvorbis.c	/^typedef struct OggVorbisContext {$/;"	s	file:
OggVorbisContext	libavcodec/libvorbis.c	/^} OggVorbisContext ;$/;"	t	typeref:struct:OggVorbisContext	file:
OldSources	libavcodec/bink.c	/^enum OldSources {$/;"	g	file:
OpaqueList	libavcodec/crystalhd.c	/^typedef struct OpaqueList {$/;"	s	file:
OpaqueList	libavcodec/crystalhd.c	/^} OpaqueList;$/;"	t	typeref:struct:OpaqueList	file:
OptionDef	cmdutils.h	/^} OptionDef;$/;"	t	typeref:struct:__anon290
OptionDef	ffmpeg/cmdutils.h	/^} OptionDef;$/;"	t	typeref:struct:__anon288
OutputFormat	libavcodec/mpegvideo.h	/^enum OutputFormat {$/;"	g
OverlayContext	libavfilter/vf_overlay.c	/^} OverlayContext;$/;"	t	typeref:struct:__anon7	file:
P0	libavcodec/bfin/fdct_bfin.S	/^        P0 = B2;                        \/\/ P0 points to temporary array Element$/;"	d
P0	libavcodec/bfin/fdct_bfin.S	/^    P0 = 2(X);$/;"	d
P0	libavcodec/bfin/idct_bfin.S	/^    P0 = B0;                \/\/ P0 points to array Element (0, 0) for writing$/;"	d
P0	libavcodec/bfin/idct_bfin.S	/^    P0 = B2;                \/\/ P0 points to array Element (0, 0) of temp$/;"	d
P0	libavcodec/bfin/pixels_bfin.S	/^        P0 = R1;  \/\/ line_size$/;"	d
P0	libavcodec/bfin/pixels_bfin.S	/^    P0 = 8;$/;"	d
P0	libavcodec/bfin/vp3_idct_bfin.S	/^    P0 = B0;                \/\/ P0 points to array Element (0, 0) for writing$/;"	d
P0	libavcodec/bfin/vp3_idct_bfin.S	/^    P0 = B2;                \/\/ P0 points to array Element (0, 0) of temp$/;"	d
P0	libavcodec/cavsdsp.c	108;"	d	file:
P0	libavcodec/cavsdsp.c	37;"	d	file:
P1	libavcodec/bfin/fdct_bfin.S	/^        P1 = B2;                        \/\/ P1 points to temporary array.$/;"	d
P1	libavcodec/bfin/idct_bfin.S	/^    P1 = B0;$/;"	d
P1	libavcodec/bfin/idct_bfin.S	/^    P1 = B2;$/;"	d
P1	libavcodec/bfin/idct_bfin.S	/^    P1 = P1 + P2;           \/\/ P1 points to element (7, 0) of temp buffer.$/;"	d
P1	libavcodec/bfin/idct_bfin.S	/^    P1 = P1 + P2;$/;"	d
P1	libavcodec/bfin/pixels_bfin.S	/^        P1 = R0;  \/\/ pix$/;"	d
P1	libavcodec/bfin/vp3_idct_bfin.S	/^    P1 = B0;$/;"	d
P1	libavcodec/bfin/vp3_idct_bfin.S	/^    P1 = B2;$/;"	d
P1	libavcodec/bfin/vp3_idct_bfin.S	/^    P1 = P1 + P2;           \/\/ P1 points to element (7, 0) of temp buffer.$/;"	d
P1	libavcodec/bfin/vp3_idct_bfin.S	/^    P1 = P1 + P2;$/;"	d
P1	libavcodec/cavsdsp.c	109;"	d	file:
P1	libavcodec/cavsdsp.c	36;"	d	file:
P2	libavcodec/bfin/fdct_bfin.S	/^    P2 = 16;$/;"	d
P2	libavcodec/bfin/idct_bfin.S	/^    P2 = -94(X);$/;"	d
P2	libavcodec/bfin/idct_bfin.S	/^    P2 = 112 (X);$/;"	d
P2	libavcodec/bfin/idct_bfin.S	/^    P2 = 8 (X);$/;"	d
P2	libavcodec/bfin/pixels_bfin.S	/^        P2 = [sp+16]; \/\/height$/;"	d
P2	libavcodec/bfin/pixels_bfin.S	/^        P2 = [sp+24]; \/\/ height$/;"	d
P2	libavcodec/bfin/vp3_idct_bfin.S	/^    P2 = -94(X);$/;"	d
P2	libavcodec/bfin/vp3_idct_bfin.S	/^    P2 = 112 (X);$/;"	d
P2	libavcodec/bfin/vp3_idct_bfin.S	/^    P2 = 8 (X);$/;"	d
P2	libavcodec/cavsdsp.c	110;"	d	file:
P2	libavcodec/cavsdsp.c	35;"	d	file:
P3	libavcodec/bfin/fdct_bfin.S	/^    P3 = 32 (X);$/;"	d
P3	libavcodec/bfin/idct_bfin.S	/^    P3 = 32 (X);$/;"	d
P3	libavcodec/bfin/vp3_idct_bfin.S	/^    P3 = 32 (X);$/;"	d
P4	libavcodec/bfin/fdct_bfin.S	/^    P4 = -110 (X);$/;"	d
P4	libavcodec/bfin/idct_bfin.S	/^    P4 = -32 (X);$/;"	d
P4	libavcodec/bfin/vp3_idct_bfin.S	/^    P4 = -32 (X);$/;"	d
P5	libavcodec/bfin/fdct_bfin.S	/^    P5 = -62 (X);$/;"	d
P5	libavcodec/bfin/idct_bfin.S	/^    P5 = 98 (X);$/;"	d
P5	libavcodec/bfin/pixels_bfin.S	/^        P5 = 16;  \/\/ loop ctr.$/;"	d
P5	libavcodec/bfin/vp3_idct_bfin.S	/^    P5 = 98 (X);$/;"	d
PABS	libavfilter/x86/yadif_template.c	259;"	d	file:
PABS	libavfilter/x86/yadif_template.c	49;"	d	file:
PABS	libavfilter/x86/yadif_template.c	52;"	d	file:
PACKET_HEADER_MIN_SIZE	libavformat/asfenc.c	146;"	d	file:
PACKET_ID	libavformat/ffm.h	32;"	d
PACKET_SIZE	libavformat/asf.h	29;"	d
PACKET_START_CODE_MASK	libavformat/mpeg.h	31;"	d
PACKET_START_CODE_PREFIX	libavformat/mpeg.h	32;"	d
PACK_2S16	libavcodec/mathops.h	176;"	d
PACK_2S8	libavcodec/mathops.h	170;"	d
PACK_2U16	libavcodec/mathops.h	155;"	d
PACK_2U16	libavcodec/mathops.h	165;"	d
PACK_2U8	libavcodec/mathops.h	149;"	d
PACK_2U8	libavcodec/mathops.h	159;"	d
PACK_4S8	libavcodec/mathops.h	173;"	d
PACK_4U8	libavcodec/mathops.h	152;"	d
PACK_4U8	libavcodec/mathops.h	162;"	d
PACK_AND_STORE	libpostproc/postprocess_altivec_template.c	1020;"	d	file:
PACK_AND_STORE	libpostproc/postprocess_altivec_template.c	357;"	d	file:
PACK_AND_STORE	libpostproc/postprocess_altivec_template.c	404;"	d	file:
PACK_AND_STORE	libpostproc/postprocess_altivec_template.c	986;"	d	file:
PACK_AND_STORE_ALIGNED	libpostproc/postprocess_altivec_template.c	375;"	d	file:
PACK_AND_STORE_ALIGNED	libpostproc/postprocess_altivec_template.c	405;"	d	file:
PACK_RGB32	libswscale/x86/rgb2rgb_template.c	1037;"	d	file:
PACK_START_CODE	libavformat/mpeg.h	28;"	d
PACK_START_CODE	libavformat/mpegvideodec.c	30;"	d	file:
PADDING	libavcodec/xsubenc.c	34;"	d	file:
PADDING_COLOR	libavcodec/xsubenc.c	35;"	d	file:
PADDING_STREAM	libavformat/mpeg.h	38;"	d
PAETH	libavcodec/x86/png_mmx.c	/^PAETH(mmx2, ABS3_MMX2)$/;"	f
PAETH	libavcodec/x86/png_mmx.c	55;"	d	file:
PAL	libavdevice/bktr.c	64;"	d	file:
PALBDGHI	libavdevice/bktr.c	65;"	d	file:
PALETTES_MAX	libavcodec/xan.c	50;"	d	file:
PALETTE_BLOCK	libavcodec/bethsoftvideo.h	/^    PALETTE_BLOCK       = 0x02,$/;"	e	enum:BethsoftVidBlockType
PALETTE_COUNT	libavcodec/idcinvideo.c	55;"	d	file:
PALETTE_COUNT	libavcodec/interplayvideo.c	47;"	d	file:
PALETTE_COUNT	libavcodec/msvideo1.c	37;"	d	file:
PALETTE_COUNT	libavcodec/vmdav.c	50;"	d	file:
PALETTE_COUNT	libavcodec/vqavideo.c	74;"	d	file:
PALETTE_COUNT	libavcodec/xan.c	48;"	d	file:
PALETTE_COUNT	libavformat/ipmovie.c	76;"	d	file:
PALETTE_SEGMENT	libavcodec/pgssubdec.c	/^    PALETTE_SEGMENT      = 0x14,$/;"	e	enum:SegmentType	file:
PALETTE_SIZE	libavcodec/xan.c	49;"	d	file:
PALETTE_SIZE	libavformat/wc3movie.c	60;"	d	file:
PALM	libavdevice/bktr.c	70;"	d	file:
PALN	libavdevice/bktr.c	69;"	d	file:
PALT_TAG	libavcodec/xan.c	46;"	d	file:
PALT_TAG	libavformat/wc3movie.c	40;"	d	file:
PAL_HEIGHT	libavdevice/bktr.c	74;"	d	file:
PAL_samples_per_frame	libavformat/mxfenc.c	/^static const int PAL_samples_per_frame[]  = { 1920, 0 };$/;"	v	file:
PARAM1_DEFAULT	libavfilter/libmpcodecs/vf_denoise3d.c	32;"	d	file:
PARAM1_DEFAULT	libavfilter/libmpcodecs/vf_hqdn3d.c	32;"	d	file:
PARAM1_DEFAULT	libavfilter/vf_hqdn3d.c	193;"	d	file:
PARAM2_DEFAULT	libavfilter/libmpcodecs/vf_denoise3d.c	33;"	d	file:
PARAM2_DEFAULT	libavfilter/libmpcodecs/vf_hqdn3d.c	33;"	d	file:
PARAM2_DEFAULT	libavfilter/vf_hqdn3d.c	194;"	d	file:
PARAM3_DEFAULT	libavfilter/libmpcodecs/vf_denoise3d.c	34;"	d	file:
PARAM3_DEFAULT	libavfilter/libmpcodecs/vf_hqdn3d.c	34;"	d	file:
PARAM3_DEFAULT	libavfilter/vf_hqdn3d.c	195;"	d	file:
PARAM_BLOCKSIZE	libavcodec/mlpdec.c	78;"	d	file:
PARAM_COLOR	libavcodec/srtdec.c	/^    PARAM_COLOR,$/;"	e	enum:__anon204	file:
PARAM_FACE	libavcodec/srtdec.c	/^    PARAM_FACE,$/;"	e	enum:__anon204	file:
PARAM_FIR	libavcodec/mlpdec.c	82;"	d	file:
PARAM_HUFFOFFSET	libavcodec/mlpdec.c	84;"	d	file:
PARAM_IIR	libavcodec/mlpdec.c	83;"	d	file:
PARAM_MATRIX	libavcodec/mlpdec.c	79;"	d	file:
PARAM_NUMBER	libavcodec/srtdec.c	/^    PARAM_NUMBER$/;"	e	enum:__anon204	file:
PARAM_OUTSHIFT	libavcodec/mlpdec.c	80;"	d	file:
PARAM_PRESENCE	libavcodec/mlpdec.c	85;"	d	file:
PARAM_QUANTSTEP	libavcodec/mlpdec.c	81;"	d	file:
PARAM_SIZE	libavcodec/srtdec.c	/^    PARAM_SIZE,$/;"	e	enum:__anon204	file:
PARAM_UNKNOWN	libavcodec/srtdec.c	/^    PARAM_UNKNOWN = -1,$/;"	e	enum:__anon204	file:
PARSER_FLAG_COMPLETE_FRAMES	libavcodec/avcodec.h	3996;"	d
PARSER_FLAG_FETCHED_OFFSET	libavcodec/avcodec.h	3999;"	d
PARSER_FLAG_ONCE	libavcodec/avcodec.h	3997;"	d
PARSE_BUF_SIZE	libavcodec/dvbsub_parser.c	27;"	d	file:
PARTTRANS_PERM	libavcodec/dct-test.c	/^  enum formattag { NO_PERM,MMX_PERM, MMX_SIMPLE_PERM, SCALE_PERM, SSE2_PERM, PARTTRANS_PERM } format;$/;"	e	enum:algo::formattag	file:
PART_NOT_AVAILABLE	libavcodec/h264.h	310;"	d
PASS	libavcodec/fft.c	245;"	d	file:
PASS1_BITS	libavcodec/jfdctint.c	127;"	d	file:
PASS1_BITS	libavcodec/jrevdct.c	129;"	d	file:
PATTERN_BLOCK	libavcodec/bink.c	/^    PATTERN_BLOCK,  \/\/\/< block is filled with two colours following custom pattern$/;"	e	enum:BlockTypes	file:
PAT_PID	libavformat/mpegts.h	36;"	d
PAT_RETRANS_TIME	libavformat/mpegtsenc.c	195;"	d	file:
PAT_TID	libavformat/mpegts.h	40;"	d
PAVGB	libavcodec/x86/dsputil_mmx.c	166;"	d	file:
PAVGB	libavcodec/x86/dsputil_mmx.c	174;"	d	file:
PAVGB	libavcodec/x86/dsputil_mmx.c	181;"	d	file:
PAVGB	libavcodec/x86/dsputil_mmx.c	188;"	d	file:
PAVGB	libavcodec/x86/dsputil_mmx.c	195;"	d	file:
PAVGB	libavcodec/x86/dsputil_mmx.c	201;"	d	file:
PAVGB	libavcodec/x86/dsputil_mmx.c	210;"	d	file:
PAVGB	libavcodec/x86/dsputil_mmx.c	216;"	d	file:
PAVGB	libavcodec/x86/h264_qpel_mmx.c	1173;"	d	file:
PAVGB	libavcodec/x86/h264_qpel_mmx.c	1176;"	d	file:
PAVGB	libavcodec/x86/h264_qpel_mmx.c	1177;"	d	file:
PAVGB	libavcodec/x86/h264_qpel_mmx.c	1192;"	d	file:
PAVGB	libavfilter/libmpcodecs/vf_filmdint.c	137;"	d	file:
PAVGB	libavfilter/libmpcodecs/vf_filmdint.c	468;"	d	file:
PAVGB	libavfilter/libmpcodecs/vf_filmdint.c	474;"	d	file:
PAVGB	libpostproc/postprocess_template.c	31;"	d	file:
PAVGB	libpostproc/postprocess_template.c	40;"	d	file:
PAVGB	libswscale/x86/rgb2rgb_template.c	33;"	d	file:
PAVGB	libswscale/x86/rgb2rgb_template.c	37;"	d	file:
PAVGB	libswscale/x86/rgb2rgb_template.c	40;"	d	file:
PAVGBP	libavcodec/x86/dsputil_mmx.c	165;"	d	file:
PAVGBP	libavcodec/x86/dsputil_mmx.c	173;"	d	file:
PAVGBP	libavcodec/x86/dsputil_mmx.c	180;"	d	file:
PAVGBP	libavcodec/x86/dsputil_mmx.c	187;"	d	file:
PAVGBP_MMX	libavcodec/x86/dsputil_mmx.c	147;"	d	file:
PAVGBP_MMX_NO_RND	libavcodec/x86/dsputil_mmx.c	133;"	d	file:
PAVGB_MMX	libavcodec/x86/dsputil_mmx.c	124;"	d	file:
PAVGB_MMX_NO_RND	libavcodec/x86/dsputil_mmx.c	116;"	d	file:
PAYLOAD_HEADER_SIZE_MULTIPLE_PAYLOADS	libavformat/asfenc.c	170;"	d	file:
PAYLOAD_HEADER_SIZE_SINGLE_PAYLOAD	libavformat/asfenc.c	162;"	d	file:
PBTYPE_ESCAPE	libavcodec/rv40vlc2.h	635;"	d
PC1_shuffle	libavutil/des.c	/^static const uint8_t PC1_shuffle[] = {$/;"	v	file:
PC2_shuffle	libavutil/des.c	/^static const uint8_t PC2_shuffle[] = {$/;"	v	file:
PCA	libavutil/pca.c	/^typedef struct PCA{$/;"	s	file:
PCA	libavutil/pca.c	/^}PCA;$/;"	t	typeref:struct:PCA	file:
PCMDEF	libavformat/pcmdec.c	49;"	d	file:
PCMDEF	libavformat/pcmenc.c	25;"	d	file:
PCMDecode	libavcodec/pcm.c	/^typedef struct PCMDecode {$/;"	s	file:
PCMDecode	libavcodec/pcm.c	/^} PCMDecode;$/;"	t	typeref:struct:PCMDecode	file:
PCM_CODEC	libavcodec/pcm.c	506;"	d	file:
PCM_DECODER	libavcodec/pcm.c	491;"	d	file:
PCM_DECODER	libavcodec/pcm.c	503;"	d	file:
PCM_ENCODER	libavcodec/pcm.c	475;"	d	file:
PCM_ENCODER	libavcodec/pcm.c	487;"	d	file:
PCM_SAMPLES	libavcodec/dcaenc.c	44;"	d	file:
PCR_RETRANS_TIME	libavformat/mpegtsenc.c	196;"	d	file:
PCR_TIME_BASE	libavformat/mpegtsenc.c	32;"	d	file:
PCXContext	libavcodec/pcx.c	/^typedef struct PCXContext {$/;"	s	file:
PCXContext	libavcodec/pcx.c	/^} PCXContext;$/;"	t	typeref:struct:PCXContext	file:
PCXContext	libavcodec/pcxenc.c	/^typedef struct PCXContext {$/;"	s	file:
PCXContext	libavcodec/pcxenc.c	/^} PCXContext;$/;"	t	typeref:struct:PCXContext	file:
PC__TAG	libavformat/wc3movie.c	36;"	d	file:
PDIFFUB	libavfilter/libmpcodecs/vf_filmdint.c	108;"	d	file:
PDIFFUBT	libavfilter/libmpcodecs/vf_filmdint.c	113;"	d	file:
PESCallback	libavformat/mpegts.c	/^typedef int PESCallback(MpegTSFilter *f, const uint8_t *buf, int len, int is_start, int64_t pos);$/;"	t	file:
PESContext	libavformat/mpegts.c	/^typedef struct PESContext {$/;"	s	file:
PESContext	libavformat/mpegts.c	/^} PESContext;$/;"	t	typeref:struct:PESContext	file:
PES_HEADER_SIZE	libavformat/mpegts.c	152;"	d	file:
PES_START_SIZE	libavformat/mpegts.c	151;"	d	file:
PGAIN_MU	libavcodec/twinvq.c	213;"	d	file:
PGSSubContext	libavcodec/pgssubdec.c	/^typedef struct PGSSubContext {$/;"	s	file:
PGSSubContext	libavcodec/pgssubdec.c	/^} PGSSubContext;$/;"	t	typeref:struct:PGSSubContext	file:
PGSSubPicture	libavcodec/pgssubdec.c	/^typedef struct PGSSubPicture {$/;"	s	file:
PGSSubPicture	libavcodec/pgssubdec.c	/^} PGSSubPicture;$/;"	t	typeref:struct:PGSSubPicture	file:
PGSSubPresentation	libavcodec/pgssubdec.c	/^typedef struct PGSSubPresentation {$/;"	s	file:
PGSSubPresentation	libavcodec/pgssubdec.c	/^} PGSSubPresentation;$/;"	t	typeref:struct:PGSSubPresentation	file:
PHADDD	libavcodec/x86/dsputilenc_mmx.c	1035;"	d	file:
PHADDD	libavcodec/x86/dsputilenc_mmx.c	1077;"	d	file:
PHADDD	libavcodec/x86/dsputilenc_mmx.c	1081;"	d	file:
PHADDD	libavcodec/x86/dsputilenc_mmx.c	1094;"	d	file:
PICTURE_SEGMENT	libavcodec/pgssubdec.c	/^    PICTURE_SEGMENT      = 0x15,$/;"	e	enum:SegmentType	file:
PICTURE_START_CODE	libavcodec/mpegvideo.h	73;"	d
PICTURE_START_CODE	libavformat/mpegvideodec.c	28;"	d	file:
PICT_ATOM	tools/qt-faststart.c	66;"	d	file:
PICT_BOTTOM_FIELD	libavcodec/mpegvideo.h	621;"	d
PICT_FRAME	libavcodec/mpegvideo.h	622;"	d
PICT_TOP_FIELD	libavcodec/mpegvideo.h	620;"	d
PIC_I_START_CODE	libavcodec/cavs.h	33;"	d
PIC_PB_START_CODE	libavcodec/cavs.h	34;"	d
PIND_TAG	libavformat/westwood.c	58;"	d	file:
PINF_TAG	libavformat/westwood.c	56;"	d	file:
PINH_TAG	libavformat/westwood.c	57;"	d	file:
PITCH_DELAY_MAX	libavcodec/acelp_pitch_delay.h	30;"	d
PITCH_DELAY_MIN	libavcodec/acelp_pitch_delay.h	29;"	d
PITCH_LAG_MIN_MODE_12k2	libavcodec/amrnbdec.c	78;"	d	file:
PITCH_MAX	libavcodec/sipr.h	34;"	d
PITCH_MIN	libavcodec/sipr.h	33;"	d
PIXEL_SPLAT_X4	libavcodec/high_bit_depth.h	43;"	d
PIXEL_SPLAT_X4	libavcodec/high_bit_depth.h	72;"	d
PIXOP	libavcodec/alpha/dsputil_alpha.c	232;"	d	file:
PIXOP2	libavcodec/dsputil_template.c	377;"	d	file:
PIXOP2	libavcodec/sh4/qpel.c	24;"	d	file:
PIX_FMT_ABGR	libavutil/pixfmt.h	/^    PIX_FMT_ABGR,      \/\/\/< packed ABGR 8:8:8:8, 32bpp, ABGRABGR...$/;"	e	enum:PixelFormat
PIX_FMT_ARGB	libavutil/pixfmt.h	/^    PIX_FMT_ARGB,      \/\/\/< packed ARGB 8:8:8:8, 32bpp, ARGBARGB...$/;"	e	enum:PixelFormat
PIX_FMT_BE	libavutil/pixdesc.h	86;"	d
PIX_FMT_BGR24	libavutil/pixfmt.h	/^    PIX_FMT_BGR24,     \/\/\/< packed RGB 8:8:8, 24bpp, BGRBGR...$/;"	e	enum:PixelFormat
PIX_FMT_BGR32	libavutil/pixfmt.h	166;"	d
PIX_FMT_BGR32_1	libavutil/pixfmt.h	167;"	d
PIX_FMT_BGR4	libavutil/pixfmt.h	/^    PIX_FMT_BGR4,      \/\/\/< packed RGB 1:2:1 bitstream,  4bpp, (msb)1B 2G 1R(lsb), a byte contains two pixels, the first pixel in the byte is the one composed by the 4 msb bits$/;"	e	enum:PixelFormat
PIX_FMT_BGR444	libavutil/pixfmt.h	177;"	d
PIX_FMT_BGR444BE	libavutil/pixfmt.h	/^    PIX_FMT_BGR444BE,  \/\/\/< packed BGR 4:4:4, 16bpp, (msb)4A 4B 4G 4R(lsb), big-endian, most significant bits to 1$/;"	e	enum:PixelFormat
PIX_FMT_BGR444LE	libavutil/pixfmt.h	/^    PIX_FMT_BGR444LE,  \/\/\/< packed BGR 4:4:4, 16bpp, (msb)4A 4B 4G 4R(lsb), little-endian, most significant bits to 1$/;"	e	enum:PixelFormat
PIX_FMT_BGR48	libavutil/pixfmt.h	174;"	d
PIX_FMT_BGR48BE	libavutil/pixfmt.h	/^    PIX_FMT_BGR48BE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16B, 16G, 16R, the 2-byte value for each R\/G\/B component is stored as big-endian$/;"	e	enum:PixelFormat
PIX_FMT_BGR48LE	libavutil/pixfmt.h	/^    PIX_FMT_BGR48LE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16B, 16G, 16R, the 2-byte value for each R\/G\/B component is stored as little-endian$/;"	e	enum:PixelFormat
PIX_FMT_BGR4_BYTE	libavutil/pixfmt.h	/^    PIX_FMT_BGR4_BYTE, \/\/\/< packed RGB 1:2:1,  8bpp, (msb)1B 2G 1R(lsb)$/;"	e	enum:PixelFormat
PIX_FMT_BGR555	libavutil/pixfmt.h	176;"	d
PIX_FMT_BGR555BE	libavutil/pixfmt.h	/^    PIX_FMT_BGR555BE,  \/\/\/< packed BGR 5:5:5, 16bpp, (msb)1A 5B 5G 5R(lsb), big-endian, most significant bit to 1$/;"	e	enum:PixelFormat
PIX_FMT_BGR555LE	libavutil/pixfmt.h	/^    PIX_FMT_BGR555LE,  \/\/\/< packed BGR 5:5:5, 16bpp, (msb)1A 5B 5G 5R(lsb), little-endian, most significant bit to 1$/;"	e	enum:PixelFormat
PIX_FMT_BGR565	libavutil/pixfmt.h	175;"	d
PIX_FMT_BGR565BE	libavutil/pixfmt.h	/^    PIX_FMT_BGR565BE,  \/\/\/< packed BGR 5:6:5, 16bpp, (msb)   5B 6G 5R(lsb), big-endian$/;"	e	enum:PixelFormat
PIX_FMT_BGR565LE	libavutil/pixfmt.h	/^    PIX_FMT_BGR565LE,  \/\/\/< packed BGR 5:6:5, 16bpp, (msb)   5B 6G 5R(lsb), little-endian$/;"	e	enum:PixelFormat
PIX_FMT_BGR8	libavutil/pixfmt.h	/^    PIX_FMT_BGR8,      \/\/\/< packed RGB 3:3:2,  8bpp, (msb)2B 3G 3R(lsb)$/;"	e	enum:PixelFormat
PIX_FMT_BGRA	libavutil/pixfmt.h	/^    PIX_FMT_BGRA,      \/\/\/< packed BGRA 8:8:8:8, 32bpp, BGRABGRA...$/;"	e	enum:PixelFormat
PIX_FMT_BITSTREAM	libavutil/pixdesc.h	88;"	d
PIX_FMT_DXVA2_VLD	libavutil/pixfmt.h	/^    PIX_FMT_DXVA2_VLD,    \/\/\/< HW decoding through DXVA2, Picture.data[3] contains a LPDIRECT3DSURFACE9 pointer$/;"	e	enum:PixelFormat
PIX_FMT_GRAY16	libavutil/pixfmt.h	169;"	d
PIX_FMT_GRAY16BE	libavutil/pixfmt.h	/^    PIX_FMT_GRAY16BE,  \/\/\/<        Y        , 16bpp, big-endian$/;"	e	enum:PixelFormat
PIX_FMT_GRAY16LE	libavutil/pixfmt.h	/^    PIX_FMT_GRAY16LE,  \/\/\/<        Y        , 16bpp, little-endian$/;"	e	enum:PixelFormat
PIX_FMT_GRAY8	libavutil/pixfmt.h	/^    PIX_FMT_GRAY8,     \/\/\/<        Y        ,  8bpp$/;"	e	enum:PixelFormat
PIX_FMT_GRAY8A	libavutil/pixfmt.h	/^    PIX_FMT_GRAY8A,    \/\/\/< 8bit gray, 8bit alpha$/;"	e	enum:PixelFormat
PIX_FMT_HWACCEL	libavutil/pixdesc.h	89;"	d
PIX_FMT_MONOBLACK	libavutil/pixfmt.h	/^    PIX_FMT_MONOBLACK, \/\/\/<        Y        ,  1bpp, 0 is black, 1 is white, in each byte pixels are ordered from the msb to the lsb$/;"	e	enum:PixelFormat
PIX_FMT_MONOWHITE	libavutil/pixfmt.h	/^    PIX_FMT_MONOWHITE, \/\/\/<        Y        ,  1bpp, 0 is white, 1 is black, in each byte pixels are ordered from the msb to the lsb$/;"	e	enum:PixelFormat
PIX_FMT_NAME_MAXSIZE	libavfilter/vf_format.c	37;"	d	file:
PIX_FMT_NB	libavutil/pixfmt.h	/^    PIX_FMT_NB,        \/\/\/< number of pixel formats, DO NOT USE THIS if you want to link with shared libav* because the number of formats might differ between versions$/;"	e	enum:PixelFormat
PIX_FMT_NE	libavutil/pixfmt.h	159;"	d
PIX_FMT_NE	libavutil/pixfmt.h	161;"	d
PIX_FMT_NONE	libavutil/pixfmt.h	/^    PIX_FMT_NONE= -1,$/;"	e	enum:PixelFormat
PIX_FMT_NV12	libavutil/pixfmt.h	/^    PIX_FMT_NV12,      \/\/\/< planar YUV 4:2:0, 12bpp, 1 plane for Y and 1 plane for the UV components, which are interleaved (first byte U and the following byte V)$/;"	e	enum:PixelFormat
PIX_FMT_NV21	libavutil/pixfmt.h	/^    PIX_FMT_NV21,      \/\/\/< as above, but U and V bytes are swapped$/;"	e	enum:PixelFormat
PIX_FMT_PAL	libavutil/pixdesc.h	87;"	d
PIX_FMT_PAL8	libavutil/pixfmt.h	/^    PIX_FMT_PAL8,      \/\/\/< 8 bit with PIX_FMT_RGB32 palette$/;"	e	enum:PixelFormat
PIX_FMT_RGB24	libavutil/pixfmt.h	/^    PIX_FMT_RGB24,     \/\/\/< packed RGB 8:8:8, 24bpp, RGBRGB...$/;"	e	enum:PixelFormat
PIX_FMT_RGB32	libavutil/pixfmt.h	164;"	d
PIX_FMT_RGB32_1	libavutil/pixfmt.h	165;"	d
PIX_FMT_RGB4	libavutil/pixfmt.h	/^    PIX_FMT_RGB4,      \/\/\/< packed RGB 1:2:1 bitstream,  4bpp, (msb)1R 2G 1B(lsb), a byte contains two pixels, the first pixel in the byte is the one composed by the 4 msb bits$/;"	e	enum:PixelFormat
PIX_FMT_RGB444	libavutil/pixfmt.h	173;"	d
PIX_FMT_RGB444BE	libavutil/pixfmt.h	/^    PIX_FMT_RGB444BE,  \/\/\/< packed RGB 4:4:4, 16bpp, (msb)4A 4R 4G 4B(lsb), big-endian, most significant bits to 0$/;"	e	enum:PixelFormat
PIX_FMT_RGB444LE	libavutil/pixfmt.h	/^    PIX_FMT_RGB444LE,  \/\/\/< packed RGB 4:4:4, 16bpp, (msb)4A 4R 4G 4B(lsb), little-endian, most significant bits to 0$/;"	e	enum:PixelFormat
PIX_FMT_RGB48	libavutil/pixfmt.h	170;"	d
PIX_FMT_RGB48BE	libavutil/pixfmt.h	/^    PIX_FMT_RGB48BE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16R, 16G, 16B, the 2-byte value for each R\/G\/B component is stored as big-endian$/;"	e	enum:PixelFormat
PIX_FMT_RGB48LE	libavutil/pixfmt.h	/^    PIX_FMT_RGB48LE,   \/\/\/< packed RGB 16:16:16, 48bpp, 16R, 16G, 16B, the 2-byte value for each R\/G\/B component is stored as little-endian$/;"	e	enum:PixelFormat
PIX_FMT_RGB4_BYTE	libavutil/pixfmt.h	/^    PIX_FMT_RGB4_BYTE, \/\/\/< packed RGB 1:2:1,  8bpp, (msb)1R 2G 1B(lsb)$/;"	e	enum:PixelFormat
PIX_FMT_RGB555	libavutil/pixfmt.h	172;"	d
PIX_FMT_RGB555BE	libavutil/pixfmt.h	/^    PIX_FMT_RGB555BE,  \/\/\/< packed RGB 5:5:5, 16bpp, (msb)1A 5R 5G 5B(lsb), big-endian, most significant bit to 0$/;"	e	enum:PixelFormat
PIX_FMT_RGB555LE	libavutil/pixfmt.h	/^    PIX_FMT_RGB555LE,  \/\/\/< packed RGB 5:5:5, 16bpp, (msb)1A 5R 5G 5B(lsb), little-endian, most significant bit to 0$/;"	e	enum:PixelFormat
PIX_FMT_RGB565	libavutil/pixfmt.h	171;"	d
PIX_FMT_RGB565BE	libavutil/pixfmt.h	/^    PIX_FMT_RGB565BE,  \/\/\/< packed RGB 5:6:5, 16bpp, (msb)   5R 6G 5B(lsb), big-endian$/;"	e	enum:PixelFormat
PIX_FMT_RGB565LE	libavutil/pixfmt.h	/^    PIX_FMT_RGB565LE,  \/\/\/< packed RGB 5:6:5, 16bpp, (msb)   5R 6G 5B(lsb), little-endian$/;"	e	enum:PixelFormat
PIX_FMT_RGB8	libavutil/pixfmt.h	/^    PIX_FMT_RGB8,      \/\/\/< packed RGB 3:3:2,  8bpp, (msb)2R 3G 3B(lsb)$/;"	e	enum:PixelFormat
PIX_FMT_RGBA	libavutil/pixfmt.h	/^    PIX_FMT_RGBA,      \/\/\/< packed RGBA 8:8:8:8, 32bpp, RGBARGBA...$/;"	e	enum:PixelFormat
PIX_FMT_UYVY422	libavutil/pixfmt.h	/^    PIX_FMT_UYVY422,   \/\/\/< packed YUV 4:2:2, 16bpp, Cb Y0 Cr Y1$/;"	e	enum:PixelFormat
PIX_FMT_UYYVYY411	libavutil/pixfmt.h	/^    PIX_FMT_UYYVYY411, \/\/\/< packed YUV 4:1:1, 12bpp, Cb Y0 Y1 Cr Y2 Y3$/;"	e	enum:PixelFormat
PIX_FMT_VAAPI_IDCT	libavutil/pixfmt.h	/^    PIX_FMT_VAAPI_IDCT, \/\/\/< HW acceleration through VA API at IDCT entry-point, Picture.data[3] contains a vaapi_render_state struct which contains fields extracted from headers$/;"	e	enum:PixelFormat
PIX_FMT_VAAPI_MOCO	libavutil/pixfmt.h	/^    PIX_FMT_VAAPI_MOCO, \/\/\/< HW acceleration through VA API at motion compensation entry-point, Picture.data[3] contains a vaapi_render_state struct which contains macroblocks as well as various fields extracted from headers$/;"	e	enum:PixelFormat
PIX_FMT_VAAPI_VLD	libavutil/pixfmt.h	/^    PIX_FMT_VAAPI_VLD,  \/\/\/< HW decoding through VA API, Picture.data[3] contains a vaapi_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:PixelFormat
PIX_FMT_VDPAU_H264	libavutil/pixfmt.h	/^    PIX_FMT_VDPAU_H264,\/\/\/< H.264 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:PixelFormat
PIX_FMT_VDPAU_MPEG1	libavutil/pixfmt.h	/^    PIX_FMT_VDPAU_MPEG1,\/\/\/< MPEG-1 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:PixelFormat
PIX_FMT_VDPAU_MPEG2	libavutil/pixfmt.h	/^    PIX_FMT_VDPAU_MPEG2,\/\/\/< MPEG-2 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:PixelFormat
PIX_FMT_VDPAU_MPEG4	libavutil/pixfmt.h	/^    PIX_FMT_VDPAU_MPEG4,  \/\/\/< MPEG4 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:PixelFormat
PIX_FMT_VDPAU_VC1	libavutil/pixfmt.h	/^    PIX_FMT_VDPAU_VC1, \/\/\/< VC-1 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:PixelFormat
PIX_FMT_VDPAU_WMV3	libavutil/pixfmt.h	/^    PIX_FMT_VDPAU_WMV3,\/\/\/< WMV3 HW decoding with VDPAU, data[0] contains a vdpau_render_state struct which contains the bitstream of the slices as well as various fields extracted from headers$/;"	e	enum:PixelFormat
PIX_FMT_XVMC_MPEG2_IDCT	libavutil/pixfmt.h	/^    PIX_FMT_XVMC_MPEG2_IDCT,$/;"	e	enum:PixelFormat
PIX_FMT_XVMC_MPEG2_MC	libavutil/pixfmt.h	/^    PIX_FMT_XVMC_MPEG2_MC,\/\/\/< XVideo Motion Acceleration via common packet passing$/;"	e	enum:PixelFormat
PIX_FMT_Y400A	libavutil/pixfmt.h	156;"	d
PIX_FMT_YUV410P	libavutil/pixfmt.h	/^    PIX_FMT_YUV410P,   \/\/\/< planar YUV 4:1:0,  9bpp, (1 Cr & Cb sample per 4x4 Y samples)$/;"	e	enum:PixelFormat
PIX_FMT_YUV411P	libavutil/pixfmt.h	/^    PIX_FMT_YUV411P,   \/\/\/< planar YUV 4:1:1, 12bpp, (1 Cr & Cb sample per 4x1 Y samples)$/;"	e	enum:PixelFormat
PIX_FMT_YUV420P	libavutil/pixfmt.h	/^    PIX_FMT_YUV420P,   \/\/\/< planar YUV 4:2:0, 12bpp, (1 Cr & Cb sample per 2x2 Y samples)$/;"	e	enum:PixelFormat
PIX_FMT_YUV420P10	libavutil/pixfmt.h	181;"	d
PIX_FMT_YUV420P10BE	libavutil/pixfmt.h	/^    PIX_FMT_YUV420P10BE,\/\/\/< planar YUV 4:2:0, 15bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV420P10LE	libavutil/pixfmt.h	/^    PIX_FMT_YUV420P10LE,\/\/\/< planar YUV 4:2:0, 15bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV420P16	libavutil/pixfmt.h	184;"	d
PIX_FMT_YUV420P16BE	libavutil/pixfmt.h	/^    PIX_FMT_YUV420P16BE,  \/\/\/< planar YUV 4:2:0, 24bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV420P16LE	libavutil/pixfmt.h	/^    PIX_FMT_YUV420P16LE,  \/\/\/< planar YUV 4:2:0, 24bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV420P9	libavutil/pixfmt.h	179;"	d
PIX_FMT_YUV420P9BE	libavutil/pixfmt.h	/^    PIX_FMT_YUV420P9BE, \/\/\/< planar YUV 4:2:0, 13.5bpp, (1 Cr & Cb sample per 2x2 Y samples), big-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV420P9LE	libavutil/pixfmt.h	/^    PIX_FMT_YUV420P9LE, \/\/\/< planar YUV 4:2:0, 13.5bpp, (1 Cr & Cb sample per 2x2 Y samples), little-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV422P	libavutil/pixfmt.h	/^    PIX_FMT_YUV422P,   \/\/\/< planar YUV 4:2:2, 16bpp, (1 Cr & Cb sample per 2x1 Y samples)$/;"	e	enum:PixelFormat
PIX_FMT_YUV422P10	libavutil/pixfmt.h	182;"	d
PIX_FMT_YUV422P10BE	libavutil/pixfmt.h	/^    PIX_FMT_YUV422P10BE,\/\/\/< planar YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV422P10LE	libavutil/pixfmt.h	/^    PIX_FMT_YUV422P10LE,\/\/\/< planar YUV 4:2:2, 20bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV422P16	libavutil/pixfmt.h	185;"	d
PIX_FMT_YUV422P16BE	libavutil/pixfmt.h	/^    PIX_FMT_YUV422P16BE,  \/\/\/< planar YUV 4:2:2, 32bpp, (1 Cr & Cb sample per 2x1 Y samples), big-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV422P16LE	libavutil/pixfmt.h	/^    PIX_FMT_YUV422P16LE,  \/\/\/< planar YUV 4:2:2, 32bpp, (1 Cr & Cb sample per 2x1 Y samples), little-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV440P	libavutil/pixfmt.h	/^    PIX_FMT_YUV440P,   \/\/\/< planar YUV 4:4:0 (1 Cr & Cb sample per 1x2 Y samples)$/;"	e	enum:PixelFormat
PIX_FMT_YUV444P	libavutil/pixfmt.h	/^    PIX_FMT_YUV444P,   \/\/\/< planar YUV 4:4:4, 24bpp, (1 Cr & Cb sample per 1x1 Y samples)$/;"	e	enum:PixelFormat
PIX_FMT_YUV444P10	libavutil/pixfmt.h	183;"	d
PIX_FMT_YUV444P10BE	libavutil/pixfmt.h	/^    PIX_FMT_YUV444P10BE,\/\/\/< planar YUV 4:4:4, 30bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV444P10LE	libavutil/pixfmt.h	/^    PIX_FMT_YUV444P10LE,\/\/\/< planar YUV 4:4:4, 30bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV444P16	libavutil/pixfmt.h	186;"	d
PIX_FMT_YUV444P16BE	libavutil/pixfmt.h	/^    PIX_FMT_YUV444P16BE,  \/\/\/< planar YUV 4:4:4, 48bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV444P16LE	libavutil/pixfmt.h	/^    PIX_FMT_YUV444P16LE,  \/\/\/< planar YUV 4:4:4, 48bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV444P9	libavutil/pixfmt.h	180;"	d
PIX_FMT_YUV444P9BE	libavutil/pixfmt.h	/^    PIX_FMT_YUV444P9BE, \/\/\/< planar YUV 4:4:4, 27bpp, (1 Cr & Cb sample per 1x1 Y samples), little-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUV444P9LE	libavutil/pixfmt.h	/^    PIX_FMT_YUV444P9LE, \/\/\/< planar YUV 4:4:4, 27bpp, (1 Cr & Cb sample per 1x1 Y samples), big-endian$/;"	e	enum:PixelFormat
PIX_FMT_YUVA420P	libavutil/pixfmt.h	/^    PIX_FMT_YUVA420P,  \/\/\/< planar YUV 4:2:0, 20bpp, (1 Cr & Cb sample per 2x2 Y & A samples)$/;"	e	enum:PixelFormat
PIX_FMT_YUVJ420P	libavutil/pixfmt.h	/^    PIX_FMT_YUVJ420P,  \/\/\/< planar YUV 4:2:0, 12bpp, full scale (JPEG), deprecated in favor of PIX_FMT_YUV420P and setting color_range$/;"	e	enum:PixelFormat
PIX_FMT_YUVJ422P	libavutil/pixfmt.h	/^    PIX_FMT_YUVJ422P,  \/\/\/< planar YUV 4:2:2, 16bpp, full scale (JPEG), deprecated in favor of PIX_FMT_YUV422P and setting color_range$/;"	e	enum:PixelFormat
PIX_FMT_YUVJ440P	libavutil/pixfmt.h	/^    PIX_FMT_YUVJ440P,  \/\/\/< planar YUV 4:4:0 full scale (JPEG), deprecated in favor of PIX_FMT_YUV440P and setting color_range$/;"	e	enum:PixelFormat
PIX_FMT_YUVJ444P	libavutil/pixfmt.h	/^    PIX_FMT_YUVJ444P,  \/\/\/< planar YUV 4:4:4, 24bpp, full scale (JPEG), deprecated in favor of PIX_FMT_YUV444P and setting color_range$/;"	e	enum:PixelFormat
PIX_FMT_YUYV422	libavutil/pixfmt.h	/^    PIX_FMT_YUYV422,   \/\/\/< packed YUV 4:2:2, 16bpp, Y0 Cb Y1 Cr$/;"	e	enum:PixelFormat
PIX_SAD	libavcodec/x86/motion_est_mmx.c	/^PIX_SAD(mmx)$/;"	f
PIX_SAD	libavcodec/x86/motion_est_mmx.c	323;"	d	file:
PKTFILESUFF	tools/pktdumper.c	29;"	d	file:
PKTSIZE	libavformat/nuv.c	49;"	d	file:
PKT_EOS	libavformat/gxf.h	/^    PKT_EOS         = 0xfb,$/;"	e	enum:__anon346
PKT_FLT	libavformat/gxf.h	/^    PKT_FLT         = 0xfc,$/;"	e	enum:__anon346
PKT_MAP	libavformat/gxf.h	/^    PKT_MAP         = 0xbc,$/;"	e	enum:__anon346
PKT_MEDIA	libavformat/gxf.h	/^    PKT_MEDIA       = 0xbf,$/;"	e	enum:__anon346
PKT_UMF	libavformat/gxf.h	/^    PKT_UMF         = 0xfd,$/;"	e	enum:__anon346
PL	libavcodec/h264pred_template.c	621;"	d	file:
PL	libavcodec/h264pred_template.c	895;"	d	file:
PL	libavcodec/vp3.c	1084;"	d	file:
PLANAR_U	libavfilter/libmpcodecs/vf_kerndeint.c	74;"	d	file:
PLANAR_V	libavfilter/libmpcodecs/vf_kerndeint.c	75;"	d	file:
PLANAR_Y	libavfilter/libmpcodecs/vf_kerndeint.c	73;"	d	file:
PLANE	libavcodec/huffyuv.c	/^    PLANE,$/;"	e	enum:Predictor	file:
PLANE_PRED8x8	libavcodec/h264pred.h	71;"	d
PLAYER_KEY_OPEN_PART_LEN	libavformat/rtmpproto.c	75;"	d	file:
PMAX	libavcodec/x86/mpegvideo_mmx_template.c	28;"	d	file:
PMAX	libavcodec/x86/mpegvideo_mmx_template.c	40;"	d	file:
PMAX	libavcodec/x86/mpegvideo_mmx_template.c	54;"	d	file:
PMAX	libavcodec/x86/mpegvideo_mmx_template.c	66;"	d	file:
PMAXUB	libavfilter/libmpcodecs/vf_filmdint.c	132;"	d	file:
PMAXUB	libavfilter/libmpcodecs/vf_filmdint.c	466;"	d	file:
PMAXUB	libavfilter/libmpcodecs/vf_filmdint.c	472;"	d	file:
PMAXUB	libpostproc/postprocess_template.c	33;"	d	file:
PMAXUB	libpostproc/postprocess_template.c	52;"	d	file:
PMAXUB	libpostproc/postprocess_template.c	54;"	d	file:
PMAXUW	libavfilter/libmpcodecs/vf_filmdint.c	133;"	d	file:
PMAXW	libavcodec/x86/mpegvideo_mmx_template.c	27;"	d	file:
PMAXW	libavcodec/x86/mpegvideo_mmx_template.c	39;"	d	file:
PMAXW	libavcodec/x86/mpegvideo_mmx_template.c	53;"	d	file:
PMAXW	libavcodec/x86/mpegvideo_mmx_template.c	63;"	d	file:
PMINUB	libpostproc/postprocess_template.c	32;"	d	file:
PMINUB	libpostproc/postprocess_template.c	43;"	d	file:
PMINUB	libpostproc/postprocess_template.c	45;"	d	file:
PMINUBT	libavfilter/libmpcodecs/vf_filmdint.c	134;"	d	file:
PMINUBT	libavfilter/libmpcodecs/vf_filmdint.c	467;"	d	file:
PMINUBT	libavfilter/libmpcodecs/vf_filmdint.c	473;"	d	file:
PMPContext	libavformat/pmpdec.c	/^} PMPContext;$/;"	t	typeref:struct:__anon331	file:
PMT_TID	libavformat/mpegts.h	41;"	d
PMULHRW	libavcodec/x86/dsputilenc_mmx.c	1044;"	d	file:
PMULHRW	libavcodec/x86/dsputilenc_mmx.c	1060;"	d	file:
PMULHRW	libavcodec/x86/dsputilenc_mmx.c	1065;"	d	file:
PMULHRW	libavcodec/x86/dsputilenc_mmx.c	1074;"	d	file:
PMULHRW	libavcodec/x86/dsputilenc_mmx.c	1084;"	d	file:
PMULHRW	libavcodec/x86/dsputilenc_mmx.c	1093;"	d	file:
PMbInfo	libavcodec/h264data.h	/^typedef struct PMbInfo{$/;"	s
PMbInfo	libavcodec/h264data.h	/^} PMbInfo;$/;"	t	typeref:struct:PMbInfo
PNGDecContext	libavcodec/png.h	/^typedef struct PNGDecContext {$/;"	s
PNGDecContext	libavcodec/png.h	/^} PNGDecContext;$/;"	t	typeref:struct:PNGDecContext
PNGEncContext	libavcodec/pngenc.c	/^typedef struct PNGEncContext {$/;"	s	file:
PNGEncContext	libavcodec/pngenc.c	/^} PNGEncContext;$/;"	t	typeref:struct:PNGEncContext	file:
PNG_ALLIMAGE	libavcodec/png.h	50;"	d
PNG_COLOR_MASK_ALPHA	libavcodec/png.h	32;"	d
PNG_COLOR_MASK_COLOR	libavcodec/png.h	31;"	d
PNG_COLOR_MASK_PALETTE	libavcodec/png.h	30;"	d
PNG_COLOR_TYPE_GRAY	libavcodec/png.h	34;"	d
PNG_COLOR_TYPE_GRAY_ALPHA	libavcodec/png.h	38;"	d
PNG_COLOR_TYPE_PALETTE	libavcodec/png.h	35;"	d
PNG_COLOR_TYPE_RGB	libavcodec/png.h	36;"	d
PNG_COLOR_TYPE_RGB_ALPHA	libavcodec/png.h	37;"	d
PNG_FILTER_TYPE_LOCO	libavcodec/png.h	40;"	d
PNG_FILTER_VALUE_AVG	libavcodec/png.h	44;"	d
PNG_FILTER_VALUE_MIXED	libavcodec/png.h	46;"	d
PNG_FILTER_VALUE_NONE	libavcodec/png.h	41;"	d
PNG_FILTER_VALUE_PAETH	libavcodec/png.h	45;"	d
PNG_FILTER_VALUE_SUB	libavcodec/png.h	42;"	d
PNG_FILTER_VALUE_UP	libavcodec/png.h	43;"	d
PNG_IDAT	libavcodec/png.h	49;"	d
PNG_IHDR	libavcodec/png.h	48;"	d
PNG_PLTE	libavcodec/png.h	51;"	d
PNMContext	libavcodec/pnm.h	/^typedef struct PNMContext {$/;"	s
PNMContext	libavcodec/pnm.h	/^} PNMContext;$/;"	t	typeref:struct:PNMContext
PNOT_ATOM	tools/qt-faststart.c	63;"	d	file:
PODPAGES	Makefile	/^PODPAGES    = $(PROGS-yes:%=doc\/%.pod)$/;"	m
POLLERR	libavformat/os_support.h	82;"	d
POLLHUP	libavformat/os_support.h	83;"	d
POLLIN	libavformat/os_support.h	73;"	d
POLLNVAL	libavformat/os_support.h	84;"	d
POLLOUT	libavformat/os_support.h	74;"	d
POLLPRI	libavformat/os_support.h	79;"	d
POLLRDBAND	libavformat/os_support.h	77;"	d
POLLRDNORM	libavformat/os_support.h	75;"	d
POLLWRBAND	libavformat/os_support.h	78;"	d
POLLWRNORM	libavformat/os_support.h	76;"	d
POLL_TIMEOUT_MS	libavformat/rtsp.c	52;"	d	file:
POOL_SIZE	libavfilter/internal.h	30;"	d
POSTPROC_POSTPROCESS_H	libpostproc/postprocess.h	22;"	d
POSTPROC_POSTPROCESS_INTERNAL_H	libpostproc/postprocess_internal.h	27;"	d
POS_BOTTOM	libavcodec/rv40.c	/^    POS_BOTTOM,$/;"	e	enum:RV40BlockPos	file:
POS_CUR	libavcodec/rv40.c	/^    POS_CUR,$/;"	e	enum:RV40BlockPos	file:
POS_LEFT	libavcodec/rv40.c	/^    POS_LEFT,$/;"	e	enum:RV40BlockPos	file:
POS_TOP	libavcodec/rv40.c	/^    POS_TOP,$/;"	e	enum:RV40BlockPos	file:
POW_SF2_ZERO	libavcodec/aac.h	133;"	d
POW_TABLE_OFFSET	libavcodec/nellymoserenc.c	48;"	d	file:
POW_TABLE_SIZE	libavcodec/nellymoserenc.c	47;"	d	file:
PPC_SHAPE_CB_SIZE	libavcodec/twinvq.c	205;"	d	file:
PPC_SHAPE_LEN_MAX	libavcodec/twinvq.c	206;"	d	file:
PPC_YUV2RGB_ALTIVEC_H	libswscale/ppc/yuv2rgb_altivec.h	25;"	d
PPContext	libpostproc/postprocess_internal.h	/^typedef struct PPContext{$/;"	s
PPContext	libpostproc/postprocess_internal.h	/^} PPContext;$/;"	t	typeref:struct:PPContext
PPFilter	libpostproc/postprocess_internal.h	/^struct PPFilter{$/;"	s
PPMode	libpostproc/postprocess_internal.h	/^typedef struct PPMode{$/;"	s
PPMode	libpostproc/postprocess_internal.h	/^} PPMode;$/;"	t	typeref:struct:PPMode
PPR	libavfilter/libmpcodecs/vf_filmdint.c	97;"	d	file:
PPS	libavcodec/h264.h	/^typedef struct PPS{$/;"	s
PPS	libavcodec/h264.h	/^}PPS;$/;"	t	typeref:struct:PPS
PPZ	libavfilter/libmpcodecs/vf_filmdint.c	96;"	d	file:
PP_CPU_CAPS_3DNOW	libpostproc/postprocess.h	98;"	d
PP_CPU_CAPS_ALTIVEC	libpostproc/postprocess.h	99;"	d
PP_CPU_CAPS_MMX	libpostproc/postprocess.h	96;"	d
PP_CPU_CAPS_MMX2	libpostproc/postprocess.h	97;"	d
PP_FORMAT	libpostproc/postprocess.h	101;"	d
PP_FORMAT_411	libpostproc/postprocess.h	104;"	d
PP_FORMAT_420	libpostproc/postprocess.h	102;"	d
PP_FORMAT_422	libpostproc/postprocess.h	103;"	d
PP_FORMAT_444	libpostproc/postprocess.h	105;"	d
PP_PICT_TYPE_QP2	libpostproc/postprocess.h	107;"	d
PP_QUALITY_MAX	libpostproc/postprocess.h	61;"	d
PRED	libavcodec/tta.c	397;"	d	file:
PRED16x16_DC	libavcodec/x86/h264_intrapred.asm	/^PRED16x16_DC   sse2$/;"	l
PRED16x16_DC	libavcodec/x86/h264_intrapred.asm	/^PRED16x16_DC  ssse3$/;"	l
PRED16x16_DC	libavcodec/x86/h264_intrapred.asm	/^PRED16x16_DC mmxext$/;"	l
PRED16x16_H	libavcodec/x86/h264_intrapred.asm	/^PRED16x16_H mmx$/;"	l
PRED16x16_H	libavcodec/x86/h264_intrapred.asm	/^PRED16x16_H mmxext$/;"	l
PRED16x16_H	libavcodec/x86/h264_intrapred.asm	/^PRED16x16_H ssse3$/;"	l
PRED16x16_TM_MMX	libavcodec/x86/h264_intrapred.asm	/^PRED16x16_TM_MMX mmx$/;"	l
PRED16x16_TM_MMX	libavcodec/x86/h264_intrapred.asm	/^PRED16x16_TM_MMX mmxext$/;"	l
PRED16x16_X	libavcodec/h264pred_template.c	382;"	d	file:
PRED4x4	libavcodec/x86/h264_intrapred_init.c	24;"	d	file:
PRED4x4_DL	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_DL avx$/;"	l
PRED4x4_DL	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_DL sse2$/;"	l
PRED4x4_DR	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_DR avx$/;"	l
PRED4x4_DR	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_DR sse2$/;"	l
PRED4x4_DR	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_DR ssse3$/;"	l
PRED4x4_HD	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_HD avx$/;"	l
PRED4x4_HD	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_HD sse2$/;"	l
PRED4x4_HD	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_HD ssse3$/;"	l
PRED4x4_TM_MMX	libavcodec/x86/h264_intrapred.asm	/^PRED4x4_TM_MMX mmx$/;"	l
PRED4x4_TM_MMX	libavcodec/x86/h264_intrapred.asm	/^PRED4x4_TM_MMX mmxext$/;"	l
PRED4x4_VL	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_VL avx$/;"	l
PRED4x4_VL	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_VL sse2$/;"	l
PRED4x4_VR	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_VR avx$/;"	l
PRED4x4_VR	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_VR sse2$/;"	l
PRED4x4_VR	libavcodec/x86/h264_intrapred_10bit.asm	/^PRED4x4_VR ssse3$/;"	l
PRED8x8	libavcodec/x86/h264_intrapred_init.c	43;"	d	file:
PRED8x8L_DC	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_DC mmxext$/;"	l
PRED8x8L_DC	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_DC ssse3$/;"	l
PRED8x8L_DOWN_LEFT	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_DOWN_LEFT sse2$/;"	l
PRED8x8L_DOWN_LEFT	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_DOWN_LEFT ssse3$/;"	l
PRED8x8L_DOWN_RIGHT	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_DOWN_RIGHT sse2$/;"	l
PRED8x8L_DOWN_RIGHT	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_DOWN_RIGHT ssse3$/;"	l
PRED8x8L_HORIZONTAL	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_HORIZONTAL mmxext$/;"	l
PRED8x8L_HORIZONTAL	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_HORIZONTAL ssse3$/;"	l
PRED8x8L_HORIZONTAL_DOWN	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_HORIZONTAL_DOWN sse2$/;"	l
PRED8x8L_HORIZONTAL_DOWN	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_HORIZONTAL_DOWN ssse3$/;"	l
PRED8x8L_HORIZONTAL_UP	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_HORIZONTAL_UP mmxext$/;"	l
PRED8x8L_HORIZONTAL_UP	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_HORIZONTAL_UP ssse3$/;"	l
PRED8x8L_TOP_DC	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_TOP_DC mmxext$/;"	l
PRED8x8L_TOP_DC	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_TOP_DC ssse3$/;"	l
PRED8x8L_VERTICAL	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_VERTICAL mmxext$/;"	l
PRED8x8L_VERTICAL	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_VERTICAL ssse3$/;"	l
PRED8x8L_VERTICAL_LEFT	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_VERTICAL_LEFT sse2$/;"	l
PRED8x8L_VERTICAL_LEFT	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_VERTICAL_LEFT ssse3$/;"	l
PRED8x8L_VERTICAL_RIGHT	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_VERTICAL_RIGHT sse2$/;"	l
PRED8x8L_VERTICAL_RIGHT	libavcodec/x86/h264_intrapred.asm	/^PRED8x8L_VERTICAL_RIGHT ssse3$/;"	l
PRED8x8_H	libavcodec/x86/h264_intrapred.asm	/^PRED8x8_H mmx$/;"	l
PRED8x8_H	libavcodec/x86/h264_intrapred.asm	/^PRED8x8_H mmxext$/;"	l
PRED8x8_H	libavcodec/x86/h264_intrapred.asm	/^PRED8x8_H ssse3$/;"	l
PRED8x8_TM_MMX	libavcodec/x86/h264_intrapred.asm	/^PRED8x8_TM_MMX mmx$/;"	l
PRED8x8_TM_MMX	libavcodec/x86/h264_intrapred.asm	/^PRED8x8_TM_MMX mmxext$/;"	l
PRED8x8_X	libavcodec/h264pred_template.c	468;"	d	file:
PREDICT	libavcodec/mjpeg.h	128;"	d
PREDICTOR_ORDER	libavcodec/apedec.c	44;"	d	file:
PREDICTOR_SIZE	libavcodec/apedec.c	46;"	d	file:
PREDICT_16x16_DC	libavcodec/h264pred_template.c	327;"	d	file:
PREDICT_8x8_DC	libavcodec/h264pred_template.c	650;"	d	file:
PREDICT_8x8_DC	libavcodec/h264pred_template.c	892;"	d	file:
PREDICT_8x8_LOAD_LEFT	libavcodec/h264pred_template.c	623;"	d	file:
PREDICT_8x8_LOAD_LEFT	libavcodec/h264pred_template.c	888;"	d	file:
PREDICT_8x8_LOAD_TOP	libavcodec/h264pred_template.c	631;"	d	file:
PREDICT_8x8_LOAD_TOP	libavcodec/h264pred_template.c	889;"	d	file:
PREDICT_8x8_LOAD_TOPLEFT	libavcodec/h264pred_template.c	647;"	d	file:
PREDICT_8x8_LOAD_TOPLEFT	libavcodec/h264pred_template.c	890;"	d	file:
PREDICT_8x8_LOAD_TOPRIGHT	libavcodec/h264pred_template.c	640;"	d	file:
PREDICT_8x8_LOAD_TOPRIGHT	libavcodec/h264pred_template.c	891;"	d	file:
PREDICT_MODE	libavcodec/svq3.c	80;"	d	file:
PRED_FACTOR	libavcodec/amrwbdata.h	40;"	d
PRED_FAC_MODE_12k2	libavcodec/amrnbdec.c	74;"	d	file:
PREEMPH_FAC	libavcodec/amrwbdata.h	43;"	d
PREFETCH	libavcodec/x86/dsputil_mmx.c	1790;"	d	file:
PREFETCH	libavcodec/x86/dsputil_mmx.c	1800;"	d	file:
PREFETCH	libswscale/x86/rgb2rgb_template.c	29;"	d	file:
PREFETCH	libswscale/x86/rgb2rgb_template.c	36;"	d	file:
PREFETCH	libswscale/x86/rgb2rgb_template.c	39;"	d	file:
PREFETCH	libswscale/x86/rgb2rgb_template.c	42;"	d	file:
PREFETCH	libswscale/x86/swscale_template.c	23;"	d	file:
PREFETCH	libswscale/x86/swscale_template.c	26;"	d	file:
PREFETCH	libswscale/x86/swscale_template.c	28;"	d	file:
PREFIX_h264_chroma_mc8_altivec	libavcodec/ppc/h264_altivec.c	34;"	d	file:
PREFIX_h264_chroma_mc8_altivec	libavcodec/ppc/h264_altivec.c	44;"	d	file:
PREFIX_h264_chroma_mc8_altivec	libavcodec/ppc/h264_altivec.c	54;"	d	file:
PREFIX_h264_chroma_mc8_altivec	libavcodec/ppc/h264_altivec.c	64;"	d	file:
PREFIX_h264_chroma_mc8_altivec	libavcodec/ppc/h264_template_altivec.c	/^static void PREFIX_h264_chroma_mc8_altivec(uint8_t * dst, uint8_t * src,$/;"	f	file:
PREFIX_h264_chroma_mc8_num	libavcodec/ppc/h264_altivec.c	35;"	d	file:
PREFIX_h264_chroma_mc8_num	libavcodec/ppc/h264_altivec.c	45;"	d	file:
PREFIX_h264_chroma_mc8_num	libavcodec/ppc/h264_altivec.c	55;"	d	file:
PREFIX_h264_chroma_mc8_num	libavcodec/ppc/h264_altivec.c	65;"	d	file:
PREFIX_h264_qpel16_h_lowpass_altivec	libavcodec/ppc/h264_altivec.c	36;"	d	file:
PREFIX_h264_qpel16_h_lowpass_altivec	libavcodec/ppc/h264_altivec.c	46;"	d	file:
PREFIX_h264_qpel16_h_lowpass_altivec	libavcodec/ppc/h264_altivec.c	56;"	d	file:
PREFIX_h264_qpel16_h_lowpass_altivec	libavcodec/ppc/h264_altivec.c	66;"	d	file:
PREFIX_h264_qpel16_h_lowpass_altivec	libavcodec/ppc/h264_template_altivec.c	/^static void PREFIX_h264_qpel16_h_lowpass_altivec(uint8_t * dst, uint8_t * src, int dstStride, int srcStride) {$/;"	f	file:
PREFIX_h264_qpel16_h_lowpass_num	libavcodec/ppc/h264_altivec.c	37;"	d	file:
PREFIX_h264_qpel16_h_lowpass_num	libavcodec/ppc/h264_altivec.c	47;"	d	file:
PREFIX_h264_qpel16_h_lowpass_num	libavcodec/ppc/h264_altivec.c	57;"	d	file:
PREFIX_h264_qpel16_h_lowpass_num	libavcodec/ppc/h264_altivec.c	67;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_altivec	libavcodec/ppc/h264_altivec.c	40;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_altivec	libavcodec/ppc/h264_altivec.c	50;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_altivec	libavcodec/ppc/h264_altivec.c	60;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_altivec	libavcodec/ppc/h264_altivec.c	70;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_altivec	libavcodec/ppc/h264_template_altivec.c	/^static void PREFIX_h264_qpel16_hv_lowpass_altivec(uint8_t * dst, int16_t * tmp, uint8_t * src, int dstStride, int tmpStride, int srcStride) {$/;"	f	file:
PREFIX_h264_qpel16_hv_lowpass_num	libavcodec/ppc/h264_altivec.c	41;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_num	libavcodec/ppc/h264_altivec.c	51;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_num	libavcodec/ppc/h264_altivec.c	61;"	d	file:
PREFIX_h264_qpel16_hv_lowpass_num	libavcodec/ppc/h264_altivec.c	71;"	d	file:
PREFIX_h264_qpel16_v_lowpass_altivec	libavcodec/ppc/h264_altivec.c	38;"	d	file:
PREFIX_h264_qpel16_v_lowpass_altivec	libavcodec/ppc/h264_altivec.c	48;"	d	file:
PREFIX_h264_qpel16_v_lowpass_altivec	libavcodec/ppc/h264_altivec.c	58;"	d	file:
PREFIX_h264_qpel16_v_lowpass_altivec	libavcodec/ppc/h264_altivec.c	68;"	d	file:
PREFIX_h264_qpel16_v_lowpass_altivec	libavcodec/ppc/h264_template_altivec.c	/^static void PREFIX_h264_qpel16_v_lowpass_altivec(uint8_t * dst, uint8_t * src, int dstStride, int srcStride) {$/;"	f	file:
PREFIX_h264_qpel16_v_lowpass_num	libavcodec/ppc/h264_altivec.c	39;"	d	file:
PREFIX_h264_qpel16_v_lowpass_num	libavcodec/ppc/h264_altivec.c	49;"	d	file:
PREFIX_h264_qpel16_v_lowpass_num	libavcodec/ppc/h264_altivec.c	59;"	d	file:
PREFIX_h264_qpel16_v_lowpass_num	libavcodec/ppc/h264_altivec.c	69;"	d	file:
PREFIX_no_rnd_vc1_chroma_mc8_altivec	libavcodec/ppc/h264_template_altivec.c	/^static void PREFIX_no_rnd_vc1_chroma_mc8_altivec(uint8_t * dst, uint8_t * src, int stride, int h, int x, int y) {$/;"	f	file:
PREFIX_no_rnd_vc1_chroma_mc8_altivec	libavcodec/ppc/vc1dsp_altivec.c	328;"	d	file:
PREFIX_no_rnd_vc1_chroma_mc8_altivec	libavcodec/ppc/vc1dsp_altivec.c	331;"	d	file:
PREFIX_no_rnd_vc1_chroma_mc8_altivec	libavcodec/ppc/vc1dsp_altivec.c	334;"	d	file:
PREFIX_no_rnd_vc1_chroma_mc8_altivec	libavcodec/ppc/vc1dsp_altivec.c	337;"	d	file:
PREROLL_TIME	libavformat/asfenc.c	224;"	d	file:
PRESENTATION_SEGMENT	libavcodec/pgssubdec.c	/^    PRESENTATION_SEGMENT = 0x16,$/;"	e	enum:SegmentType	file:
PREV	libavcodec/adx.h	/^} PREV;$/;"	t	typeref:struct:__anon158
PREV	libpostproc/postprocess_template.c	2643;"	d	file:
PREV_PICT_TYPES_BUFFER_SIZE	libavcodec/mpegvideo.h	313;"	d
PREV_SAMPLES_BUF_SIZE	libavcodec/g722.c	44;"	d	file:
PRINT	libavcodec/cook.c	1011;"	d	file:
PRINT	libavcodec/wmaprodec.c	238;"	d	file:
PRINT	libavformat/utils.c	3612;"	d	file:
PRINT	libavformat/utils.c	3634;"	d	file:
PRINT	libavformat/utils.c	3650;"	d	file:
PRINT	libavformat/utils.c	3668;"	d	file:
PRINT_HEX	libavcodec/wmaprodec.c	239;"	d	file:
PRINT_IF_GUID	libavformat/asfdec.c	131;"	d	file:
PRINT_IF_GUID	libavformat/asfdec.c	94;"	d	file:
PRINT_KEY	libavformat/mxf.h	66;"	d
PRINT_LIB_INFO	cmdutils.c	528;"	d	file:
PRINT_LIB_INFO	ffmpeg/cmdutils.c	528;"	d	file:
PRIVATE_STREAM_1	libavformat/mpeg.h	37;"	d
PRIVATE_STREAM_2	libavformat/mpeg.h	39;"	d
PRIVSIZE	libavformat/md5enc.c	25;"	d	file:
PRIV_SIZE	libavformat/md5proto.c	30;"	d	file:
PRI_PRETTY_GUID	libavformat/wtvdec.c	37;"	d	file:
PROBE_BUF_MAX	libavformat/utils.c	502;"	d	file:
PROBE_BUF_MIN	libavformat/utils.c	501;"	d	file:
PROBE_MAX_FPS	libavformat/tmv.c	49;"	d	file:
PROBE_MIN_AUDIO_SIZE	libavformat/tmv.c	50;"	d	file:
PROBE_MIN_SAMPLE_RATE	libavformat/tmv.c	48;"	d	file:
PROF	libavcodec/bfin/dsputil_bfin.h	103;"	d
PROF	libavcodec/bfin/dsputil_bfin.h	75;"	d
PROFILE_ADVANCED	libavcodec/vc1.h	/^    PROFILE_ADVANCED$/;"	e	enum:Profile
PROFILE_COMPLEX	libavcodec/vc1.h	/^    PROFILE_COMPLEX, \/\/\/< TODO: WMV9 specific$/;"	e	enum:Profile
PROFILE_MAIN	libavcodec/vc1.h	/^    PROFILE_MAIN,$/;"	e	enum:Profile
PROFILE_SIMPLE	libavcodec/vc1.h	/^    PROFILE_SIMPLE,$/;"	e	enum:Profile
PROFILE_THE_BEAST	libswscale/ppc/yuv2rgb_altivec.c	101;"	d	file:
PROGRAM_STREAM_MAP	libavformat/mpeg.h	36;"	d
PROGRESSIVE	libavfilter/libmpcodecs/vf_phase.c	/^enum mode { PROGRESSIVE, TOP_FIRST, BOTTOM_FIRST,$/;"	e	enum:mode	file:
PROGS	Makefile	/^PROGS      := $(PROGS-yes:%=%$(EXESUF))$/;"	m
PROGS_G	Makefile	/^PROGS_G     = $(PROGS-yes:%=%_g$(EXESUF))$/;"	m
PS	libavcodec/ppc/asm.S	/^#define PS   4$/;"	d
PS	libavcodec/ppc/asm.S	/^#define PS   8$/;"	d
PSADBW	libavfilter/libmpcodecs/vf_filmdint.c	130;"	d	file:
PSADBW	libavfilter/libmpcodecs/vf_filmdint.c	465;"	d	file:
PSADBW	libavfilter/libmpcodecs/vf_filmdint.c	471;"	d	file:
PSContext	libavcodec/aacps.h	/^} PSContext;$/;"	t	typeref:struct:__anon257
PSHUF	libavfilter/x86/yadif_template.c	255;"	d	file:
PSHUF	libavfilter/x86/yadif_template.c	32;"	d	file:
PSHUF	libavfilter/x86/yadif_template.c	45;"	d	file:
PSRL1	libavfilter/x86/yadif_template.c	256;"	d	file:
PSRL1	libavfilter/x86/yadif_template.c	30;"	d	file:
PSRL1	libavfilter/x86/yadif_template.c	43;"	d	file:
PSRL2	libavfilter/x86/yadif_template.c	257;"	d	file:
PSRL2	libavfilter/x86/yadif_template.c	31;"	d	file:
PSRL2	libavfilter/x86/yadif_template.c	44;"	d	file:
PSUMBW	libavfilter/libmpcodecs/vf_filmdint.c	118;"	d	file:
PSUMBW	libavfilter/libmpcodecs/vf_filmdint.c	464;"	d	file:
PSUMBW	libavfilter/libmpcodecs/vf_filmdint.c	470;"	d	file:
PSWAPD	libavcodec/x86/fft_3dn2.c	29;"	d	file:
PSWAPD	libavcodec/x86/fft_3dn2.c	39;"	d	file:
PSY_3GPP_AH_ACTIVE	libavcodec/aacpsy.c	/^    PSY_3GPP_AH_ACTIVE$/;"	e	enum:__anon254	file:
PSY_3GPP_AH_INACTIVE	libavcodec/aacpsy.c	/^    PSY_3GPP_AH_INACTIVE,$/;"	e	enum:__anon254	file:
PSY_3GPP_AH_NONE	libavcodec/aacpsy.c	/^    PSY_3GPP_AH_NONE,$/;"	e	enum:__anon254	file:
PSY_3GPP_AH_THR_LONG	libavcodec/aacpsy.c	77;"	d	file:
PSY_3GPP_AH_THR_SHORT	libavcodec/aacpsy.c	78;"	d	file:
PSY_3GPP_BITS_TO_PE	libavcodec/aacpsy.c	86;"	d	file:
PSY_3GPP_C1	libavcodec/aacpsy.c	57;"	d	file:
PSY_3GPP_C2	libavcodec/aacpsy.c	58;"	d	file:
PSY_3GPP_C3	libavcodec/aacpsy.c	59;"	d	file:
PSY_3GPP_CLIP_HI_L	libavcodec/aacpsy.c	74;"	d	file:
PSY_3GPP_CLIP_HI_S	libavcodec/aacpsy.c	75;"	d	file:
PSY_3GPP_CLIP_LO_L	libavcodec/aacpsy.c	72;"	d	file:
PSY_3GPP_CLIP_LO_S	libavcodec/aacpsy.c	73;"	d	file:
PSY_3GPP_EN_SPREAD_HI_L1	libavcodec/aacpsy.c	44;"	d	file:
PSY_3GPP_EN_SPREAD_HI_L2	libavcodec/aacpsy.c	46;"	d	file:
PSY_3GPP_EN_SPREAD_HI_S	libavcodec/aacpsy.c	48;"	d	file:
PSY_3GPP_EN_SPREAD_LOW_L	libavcodec/aacpsy.c	50;"	d	file:
PSY_3GPP_EN_SPREAD_LOW_S	libavcodec/aacpsy.c	52;"	d	file:
PSY_3GPP_RPELEV	libavcodec/aacpsy.c	55;"	d	file:
PSY_3GPP_RPEMIN	libavcodec/aacpsy.c	54;"	d	file:
PSY_3GPP_SAVE_ADD_L	libavcodec/aacpsy.c	66;"	d	file:
PSY_3GPP_SAVE_ADD_S	libavcodec/aacpsy.c	67;"	d	file:
PSY_3GPP_SAVE_SLOPE_L	libavcodec/aacpsy.c	64;"	d	file:
PSY_3GPP_SAVE_SLOPE_S	libavcodec/aacpsy.c	65;"	d	file:
PSY_3GPP_SPEND_ADD_L	libavcodec/aacpsy.c	70;"	d	file:
PSY_3GPP_SPEND_ADD_S	libavcodec/aacpsy.c	71;"	d	file:
PSY_3GPP_SPEND_SLOPE_L	libavcodec/aacpsy.c	68;"	d	file:
PSY_3GPP_SPEND_SLOPE_S	libavcodec/aacpsy.c	69;"	d	file:
PSY_3GPP_THR_SPREAD_HI	libavcodec/aacpsy.c	41;"	d	file:
PSY_3GPP_THR_SPREAD_LOW	libavcodec/aacpsy.c	42;"	d	file:
PSY_LAME_FIR_LEN	libavcodec/aacpsy.c	89;"	d	file:
PSY_LAME_NUM_SUBBLOCKS	libavcodec/aacpsy.c	93;"	d	file:
PSY_MAX_BANDS	libavcodec/psymodel.h	28;"	d
PSY_MAX_CHANS	libavcodec/psymodel.h	30;"	d
PSY_SNR_1DB	libavcodec/aacpsy.c	61;"	d	file:
PSY_SNR_25DB	libavcodec/aacpsy.c	62;"	d	file:
PS_AP_LINKS	libavcodec/aacps.h	37;"	d
PS_AP_LINKS	libavcodec/aacps_tablegen.h	36;"	d
PS_BASELINE	libavcodec/aacps.c	31;"	d	file:
PS_INIT_VLC_STATIC	libavcodec/aacps.c	997;"	d	file:
PS_MAX_AP_BANDS	libavcodec/aacps.h	34;"	d
PS_MAX_AP_DELAY	libavcodec/aacps.h	38;"	d
PS_MAX_DELAY	libavcodec/aacps.h	36;"	d
PS_MAX_NR_IIDICC	libavcodec/aacps.h	31;"	d
PS_MAX_NR_IPDOPD	libavcodec/aacps.h	32;"	d
PS_MAX_NUM_ENV	libavcodec/aacps.h	30;"	d
PS_MAX_SSB	libavcodec/aacps.h	33;"	d
PS_QMF_TIME_SLOTS	libavcodec/aacps.h	35;"	d
PS_VLC_ROW	libavcodec/aacps.c	1003;"	d	file:
PT	libavcodec/h264pred_template.c	629;"	d	file:
PT	libavcodec/h264pred_template.c	894;"	d	file:
PT00_TAG	libavformat/electronicarts.c	42;"	d	file:
PTR	libavcodec/h264pred_template.c	638;"	d	file:
PTR	libavcodec/h264pred_template.c	893;"	d	file:
PTR	libavcodec/ppc/asm.S	/^#define PTR  .int$/;"	d
PTR	libavcodec/ppc/asm.S	/^#define PTR  .quad$/;"	d
PTR_SIZE	libavutil/x86_cpu.h	35;"	d
PTR_SIZE	libavutil/x86_cpu.h	56;"	d
PTXContext	libavcodec/ptx.c	/^typedef struct PTXContext {$/;"	s	file:
PTXContext	libavcodec/ptx.c	/^} PTXContext;$/;"	t	typeref:struct:PTXContext	file:
PTYPE_VLC_BITS	libavcodec/rv40vlc2.h	641;"	d
PTYPE_VLC_SIZE	libavcodec/rv40vlc2.h	640;"	d
PU	libavcodec/vp3.c	1082;"	d	file:
PUL	libavcodec/vp3.c	1081;"	d	file:
PULLUP_CPU_3DNOW	libavfilter/libmpcodecs/pullup.h	24;"	d
PULLUP_CPU_3DNOWEXT	libavfilter/libmpcodecs/pullup.h	25;"	d
PULLUP_CPU_MMX	libavfilter/libmpcodecs/pullup.h	22;"	d
PULLUP_CPU_MMX2	libavfilter/libmpcodecs/pullup.h	23;"	d
PULLUP_CPU_SSE	libavfilter/libmpcodecs/pullup.h	26;"	d
PULLUP_CPU_SSE2	libavfilter/libmpcodecs/pullup.h	27;"	d
PULLUP_FMT_RGB32	libavfilter/libmpcodecs/pullup.h	32;"	d
PULLUP_FMT_UYVY	libavfilter/libmpcodecs/pullup.h	31;"	d
PULLUP_FMT_Y	libavfilter/libmpcodecs/pullup.h	29;"	d
PULLUP_FMT_YUY2	libavfilter/libmpcodecs/pullup.h	30;"	d
PUR	libavcodec/vp3.c	1083;"	d	file:
PUT	libavcodec/ppc/vp3dsp_altivec.c	141;"	d	file:
PUT	libavcodec/ps2/idct_mmi.c	255;"	d	file:
PUT	libavformat/aviobuf.c	336;"	d	file:
PUT	libavformat/aviobuf.c	350;"	d	file:
PUTAVG_PIXELS	libavcodec/dsputil.h	90;"	d
PUTBGR24	libswscale/yuv2rgb.c	81;"	d	file:
PUTBGR48	libswscale/yuv2rgb.c	103;"	d	file:
PUTBITS2	libavcodec/dvbsub.c	30;"	d	file:
PUTBITS4	libavcodec/dvbsub.c	117;"	d	file:
PUTNIBBLE	libavcodec/dvdsubenc.c	28;"	d	file:
PUTPIXELSCLAMPED	libavcodec/sparc/simple_idct_vis.c	326;"	d	file:
PUTRGB	libswscale/yuv2rgb.c	69;"	d	file:
PUTRGB1	libswscale/yuv2rgb.c	484;"	d	file:
PUTRGB12	libswscale/yuv2rgb.c	373;"	d	file:
PUTRGB24	libswscale/yuv2rgb.c	75;"	d	file:
PUTRGB48	libswscale/yuv2rgb.c	93;"	d	file:
PUTRGB4D	libswscale/yuv2rgb.c	428;"	d	file:
PUTRGB4DB	libswscale/yuv2rgb.c	456;"	d	file:
PUTRGB8	libswscale/yuv2rgb.c	400;"	d	file:
PUTRGBA	libswscale/yuv2rgb.c	87;"	d	file:
PUT_COEFF	libavcodec/rtjpeg.c	26;"	d	file:
PUT_EVEN	libavcodec/x86/idct_sse2_xvid.c	119;"	d	file:
PUT_EVEN	libavcodec/x86/idct_sse2_xvid.c	137;"	d	file:
PUT_ODD	libavcodec/x86/idct_sse2_xvid.c	106;"	d	file:
PUT_OP	libavcodec/x86/cavsdsp_mmx.c	418;"	d	file:
PUT_OP	libavcodec/x86/dsputil_mmx.c	1505;"	d	file:
PUT_OP_U8_ALTIVEC	libavcodec/ppc/h264_altivec.c	30;"	d	file:
PUT_OP_U8_ALTIVEC	libavcodec/ppc/vc1dsp_altivec.c	324;"	d	file:
PUT_PIXELS	libavcodec/vp8dsp.c	314;"	d	file:
PUT_UTF16	libavutil/common.h	323;"	d
PUT_UTF8	libavutil/common.h	289;"	d
PUT_VC1_MSPEL	libavcodec/vc1dsp.c	640;"	d	file:
PU_1ST_OF_2	libavfilter/libmpcodecs/vf_filmdint.c	/^    PU_1ST_OF_2,$/;"	e	enum:pu_field_type_t	file:
PU_1ST_OF_3	libavfilter/libmpcodecs/vf_filmdint.c	/^    PU_1ST_OF_3,$/;"	e	enum:pu_field_type_t	file:
PU_2ND_OF_2	libavfilter/libmpcodecs/vf_filmdint.c	/^    PU_2ND_OF_2,$/;"	e	enum:pu_field_type_t	file:
PU_2ND_OF_3	libavfilter/libmpcodecs/vf_filmdint.c	/^    PU_2ND_OF_3,$/;"	e	enum:pu_field_type_t	file:
PU_3RD_OF_3	libavfilter/libmpcodecs/vf_filmdint.c	/^    PU_3RD_OF_3,$/;"	e	enum:pu_field_type_t	file:
PU_INTERLACED	libavfilter/libmpcodecs/vf_filmdint.c	/^    PU_INTERLACED$/;"	e	enum:pu_field_type_t	file:
PVAContext	libavformat/pva.c	/^} PVAContext;$/;"	t	typeref:struct:__anon461	file:
PVA_AUDIO_PAYLOAD	libavformat/pva.c	27;"	d	file:
PVA_MAGIC	libavformat/pva.c	28;"	d	file:
PVA_MAX_PAYLOAD_LENGTH	libavformat/pva.c	25;"	d	file:
PVA_VIDEO_PAYLOAD	libavformat/pva.c	26;"	d	file:
P_16X16	libavcodec/cavs.h	/^  P_16X16,$/;"	e	enum:cavs_mb
P_16X8	libavcodec/cavs.h	/^  P_16X8,$/;"	e	enum:cavs_mb
P_8X16	libavcodec/cavs.h	/^  P_8X16,$/;"	e	enum:cavs_mb
P_8X8	libavcodec/cavs.h	/^  P_8X8,$/;"	e	enum:cavs_mb
P_LEFT	libavcodec/motion_est.c	44;"	d	file:
P_LEFT	libavcodec/snow.c	2388;"	d	file:
P_MEDIAN	libavcodec/motion_est.c	47;"	d	file:
P_MEDIAN	libavcodec/snow.c	2391;"	d	file:
P_MV1	libavcodec/motion_est.c	48;"	d	file:
P_MV1	libavcodec/snow.c	2392;"	d	file:
P_SKIP	libavcodec/cavs.h	/^  P_SKIP,$/;"	e	enum:cavs_mb
P_TOP	libavcodec/motion_est.c	45;"	d	file:
P_TOP	libavcodec/snow.c	2389;"	d	file:
P_TOPRIGHT	libavcodec/motion_est.c	46;"	d	file:
P_TOPRIGHT	libavcodec/snow.c	2390;"	d	file:
P_shuffle	libavutil/des.c	/^static const uint8_t P_shuffle[] = {$/;"	v	file:
PacketDesc	libavformat/mpegenc.c	/^typedef struct PacketDesc {$/;"	s	file:
PacketDesc	libavformat/mpegenc.c	/^} PacketDesc;$/;"	t	typeref:struct:PacketDesc	file:
PacketQueue	ffplay.c	/^typedef struct PacketQueue {$/;"	s	file:
PacketQueue	ffplay.c	/^} PacketQueue;$/;"	t	typeref:struct:PacketQueue	file:
PadContext	libavfilter/vf_pad.c	/^} PadContext;$/;"	t	typeref:struct:__anon52	file:
Page	libavformat/anm.c	/^} Page;$/;"	t	typeref:struct:__anon434	file:
Palette	libavcodec/flashsv2enc.c	/^typedef struct Palette {$/;"	s	file:
Palette	libavcodec/flashsv2enc.c	/^} Palette;$/;"	t	typeref:struct:Palette	file:
ParseContext	libavcodec/parser.h	/^typedef struct ParseContext{$/;"	s
ParseContext	libavcodec/parser.h	/^} ParseContext;$/;"	t	typeref:struct:ParseContext
ParseContext1	libavcodec/parser.h	/^typedef struct ParseContext1{$/;"	s
ParseContext1	libavcodec/parser.h	/^} ParseContext1;$/;"	t	typeref:struct:ParseContext1
Parser	libavutil/eval.c	/^typedef struct Parser {$/;"	s	file:
Parser	libavutil/eval.c	/^} Parser;$/;"	t	typeref:struct:Parser	file:
PayloadContext	libavformat/rdt.c	/^struct PayloadContext {$/;"	s	file:
PayloadContext	libavformat/rtpdec.h	/^typedef struct PayloadContext PayloadContext;$/;"	t	typeref:struct:PayloadContext
PayloadContext	libavformat/rtpdec_amr.c	/^struct PayloadContext {$/;"	s	file:
PayloadContext	libavformat/rtpdec_asf.c	/^struct PayloadContext {$/;"	s	file:
PayloadContext	libavformat/rtpdec_h264.c	/^struct PayloadContext {$/;"	s	file:
PayloadContext	libavformat/rtpdec_latm.c	/^struct PayloadContext {$/;"	s	file:
PayloadContext	libavformat/rtpdec_mpeg4.c	/^struct PayloadContext$/;"	s	file:
PayloadContext	libavformat/rtpdec_qcelp.c	/^struct PayloadContext {$/;"	s	file:
PayloadContext	libavformat/rtpdec_qdm2.c	/^struct PayloadContext {$/;"	s	file:
PayloadContext	libavformat/rtpdec_qt.c	/^struct PayloadContext {$/;"	s	file:
PayloadContext	libavformat/rtpdec_svq3.c	/^struct PayloadContext {$/;"	s	file:
PayloadContext	libavformat/rtpdec_vp8.c	/^struct PayloadContext {$/;"	s	file:
PayloadContext	libavformat/rtpdec_xiph.c	/^struct PayloadContext {$/;"	s	file:
PerThreadContext	libavcodec/pthread.c	/^typedef struct PerThreadContext {$/;"	s	file:
PerThreadContext	libavcodec/pthread.c	/^} PerThreadContext;$/;"	t	typeref:struct:PerThreadContext	file:
PicContext	libavcodec/pictordec.c	/^typedef struct PicContext {$/;"	s	file:
PicContext	libavcodec/pictordec.c	/^} PicContext;$/;"	t	typeref:struct:PicContext	file:
Picture	libavcodec/mpegvideo.h	/^typedef struct Picture{$/;"	s
Picture	libavcodec/mpegvideo.h	/^} Picture;$/;"	t	typeref:struct:Picture
PixFmtInfo	libavcodec/imgconvert.c	/^typedef struct PixFmtInfo {$/;"	s	file:
PixFmtInfo	libavcodec/imgconvert.c	/^} PixFmtInfo;$/;"	t	typeref:struct:PixFmtInfo	file:
PixdescTestContext	libavfilter/vf_pixdesctest.c	/^} PixdescTestContext;$/;"	t	typeref:struct:__anon3	file:
PixelFormat	libavutil/pixfmt.h	/^enum PixelFormat {$/;"	g
PixelFormatTag	libavcodec/raw.h	/^typedef struct PixelFormatTag {$/;"	s
PixelFormatTag	libavcodec/raw.h	/^} PixelFormatTag;$/;"	t	typeref:struct:PixelFormatTag
PixelsPerMask	libavfilter/libmpcodecs/vf_2xsai.c	/^static int PixelsPerMask = 2;$/;"	v	file:
Plane	libavcodec/snow.c	/^typedef struct Plane{$/;"	s	file:
Plane	libavcodec/snow.c	/^}Plane;$/;"	t	typeref:struct:Plane	file:
PlaneContext	libavcodec/ffv1.c	/^typedef struct PlaneContext{$/;"	s	file:
PlaneContext	libavcodec/ffv1.c	/^} PlaneContext;$/;"	t	typeref:struct:PlaneContext	file:
PrecalcCoefs	libavfilter/libmpcodecs/vf_denoise3d.c	/^static void PrecalcCoefs(int *Ct, double Dist25)$/;"	f	file:
PrecalcCoefs	libavfilter/libmpcodecs/vf_hqdn3d.c	/^static void PrecalcCoefs(int *Ct, double Dist25)$/;"	f	file:
PrecalcCoefs	libavfilter/vf_hqdn3d.c	/^static void PrecalcCoefs(int *Ct, double Dist25)$/;"	f	file:
Predictor	libavcodec/huffyuv.c	/^typedef enum Predictor{$/;"	g	file:
Predictor	libavcodec/huffyuv.c	/^} Predictor;$/;"	t	typeref:enum:Predictor	file:
Predictor	libavcodec/ratecontrol.h	/^typedef struct Predictor{$/;"	s
Predictor	libavcodec/ratecontrol.h	/^} Predictor;$/;"	t	typeref:struct:Predictor
PredictorState	libavcodec/aac.h	/^} PredictorState;$/;"	t	typeref:struct:__anon237
Preface	libavformat/mxf.h	/^    Preface,$/;"	e	enum:MXFMetadataSetType
Profile	libavcodec/vc1.h	/^enum Profile {$/;"	g
Program	libavformat/mpegts.c	/^struct Program {$/;"	s	file:
PsyLamePreset	libavcodec/aacpsy.c	/^} PsyLamePreset;$/;"	t	typeref:struct:__anon256	file:
Pulse	libavcodec/aac.h	/^} Pulse;$/;"	t	typeref:struct:__anon242
PutBitContext	libavcodec/put_bits.h	/^typedef struct PutBitContext {$/;"	s
PutBitContext	libavcodec/put_bits.h	/^} PutBitContext;$/;"	t	typeref:struct:PutBitContext
Q	common.mak	/^Q      = @$/;"	m
Q	libavcodec/mpc.h	/^    int Q[2];$/;"	m	struct:__anon178
Q	libavcodec/mpc.h	/^    int Q[2][MPC_FRAME_SIZE];$/;"	m	struct:__anon179
Q0	libavcodec/cavsdsp.c	111;"	d	file:
Q0	libavcodec/cavsdsp.c	38;"	d	file:
Q1	libavcodec/cavsdsp.c	112;"	d	file:
Q1	libavcodec/cavsdsp.c	39;"	d	file:
Q2	libavcodec/cavsdsp.c	113;"	d	file:
Q2	libavcodec/cavsdsp.c	40;"	d	file:
Q2_STEP	libavcodec/snow.c	1801;"	d	file:
QBIAS_SHIFT	libavcodec/snow.c	482;"	d	file:
QCELPBitmap	libavcodec/qcelpdata.h	/^} QCELPBitmap;$/;"	t	typeref:struct:__anon85
QCELPContext	libavcodec/qcelpdec.c	/^} QCELPContext;$/;"	t	typeref:struct:__anon225	file:
QCELPFrame	libavcodec/qcelpdata.h	/^} QCELPFrame;$/;"	t	typeref:struct:__anon84
QCELP_BANDWIDTH_EXPANSION_COEFF	libavcodec/qcelpdata.h	550;"	d
QCELP_LSP_OCTAVE_PREDICTOR	libavcodec/qcelpdata.h	541;"	d
QCELP_LSP_SPREAD_FACTOR	libavcodec/qcelpdata.h	533;"	d
QCELP_OF	libavcodec/qcelpdata.h	82;"	d
QCELP_RATE_FULL_CODEBOOK_RATIO	libavcodec/qcelpdata.h	477;"	d
QCELP_RATE_HALF_CODEBOOK_RATIO	libavcodec/qcelpdata.h	502;"	d
QCELP_SCALE	libavcodec/qcelpdata.h	425;"	d
QCELP_SQRT1887	libavcodec/qcelpdata.h	511;"	d
QCPContext	libavformat/qcp.c	/^} QCPContext;$/;"	t	typeref:struct:__anon479	file:
QCP_MAX_MODE	libavformat/qcp.c	36;"	d	file:
QDM2Complex	libavcodec/qdm2.c	/^} QDM2Complex;$/;"	t	typeref:struct:__anon196	file:
QDM2Context	libavcodec/qdm2.c	/^} QDM2Context;$/;"	t	typeref:struct:__anon200	file:
QDM2FFT	libavcodec/qdm2.c	/^} QDM2FFT;$/;"	t	typeref:struct:__anon199	file:
QDM2SubPNode	libavcodec/qdm2.c	/^typedef struct QDM2SubPNode {$/;"	s	file:
QDM2SubPNode	libavcodec/qdm2.c	/^} QDM2SubPNode;$/;"	t	typeref:struct:QDM2SubPNode	file:
QDM2SubPacket	libavcodec/qdm2.c	/^} QDM2SubPacket;$/;"	t	typeref:struct:__anon195	file:
QDM2_LIST_ADD	libavcodec/qdm2.c	52;"	d	file:
QDM2_MAX_FRAME_SIZE	libavcodec/qdm2.c	79;"	d	file:
QDM2_SB_USED	libavcodec/qdm2.c	63;"	d	file:
QEXPSHIFT	libavcodec/snow.c	503;"	d	file:
QMAT_SHIFT	libavcodec/mpegvideo.h	52;"	d
QMAT_SHIFT_MMX	libavcodec/mpegvideo.h	51;"	d
QP	libavcodec/h264_ps.c	60;"	d	file:
QP	libpostproc/postprocess_internal.h	/^    int QP;$/;"	m	struct:PPContext
QPEL	libavcodec/sh4/dsputil_align.c	326;"	d	file:
QPEL_2TAP	libavcodec/x86/dsputil_mmx.c	1537;"	d	file:
QPEL_2TAP_L3	libavcodec/x86/dsputil_mmx.c	1532;"	d	file:
QPEL_2TAP_L3	libavcodec/x86/dsputil_mmx_avg_template.c	930;"	d	file:
QPEL_2TAP_L3	libavcodec/x86/dsputil_mmx_avg_template.c	977;"	d	file:
QPEL_2TAP_XY	libavcodec/x86/dsputil_mmx.c	1528;"	d	file:
QPEL_BASE	libavcodec/x86/dsputil_mmx.c	879;"	d	file:
QPEL_CAVS	libavcodec/x86/cavsdsp_mmx.c	308;"	d	file:
QPEL_CAVSV1	libavcodec/x86/cavsdsp_mmx.c	187;"	d	file:
QPEL_CAVSV2	libavcodec/x86/cavsdsp_mmx.c	212;"	d	file:
QPEL_CAVSV3	libavcodec/x86/cavsdsp_mmx.c	228;"	d	file:
QPEL_CAVSVNUM	libavcodec/x86/cavsdsp_mmx.c	253;"	d	file:
QPEL_H264	libavcodec/x86/h264_qpel_mmx.c	65;"	d	file:
QPEL_H264HV	libavcodec/x86/h264_qpel_mmx.c	60;"	d	file:
QPEL_H264HV_MM	libavcodec/x86/h264_qpel_mmx.c	44;"	d	file:
QPEL_H264HV_XMM	libavcodec/x86/h264_qpel_mmx.c	62;"	d	file:
QPEL_H264V	libavcodec/x86/h264_qpel_mmx.c	59;"	d	file:
QPEL_H264V_MM	libavcodec/x86/h264_qpel_mmx.c	26;"	d	file:
QPEL_H264V_XMM	libavcodec/x86/h264_qpel_mmx.c	61;"	d	file:
QPEL_H264_H16_XMM	libavcodec/x86/h264_qpel_mmx.c	605;"	d	file:
QPEL_H264_H16_XMM	libavcodec/x86/h264_qpel_mmx.c	675;"	d	file:
QPEL_H264_HV2_XMM	libavcodec/x86/h264_qpel_mmx.c	891;"	d	file:
QPEL_H264_HV_XMM	libavcodec/x86/h264_qpel_mmx.c	990;"	d	file:
QPEL_H264_H_XMM	libavcodec/x86/h264_qpel_mmx.c	687;"	d	file:
QPEL_H264_V_XMM	libavcodec/x86/h264_qpel_mmx.c	784;"	d	file:
QPEL_MC	libavcodec/dsputil.c	843;"	d	file:
QPEL_MC	libavcodec/sh4/qpel.c	508;"	d	file:
QPEL_OP	libavcodec/x86/dsputil_mmx.c	1142;"	d	file:
QPEL_V_LOW	libavcodec/x86/dsputil_mmx.c	858;"	d	file:
QP_MAX_NUM	libavcodec/h264.h	104;"	d
QP_STORE_T	libpostproc/postprocess.h	63;"	d
QROOT	libavcodec/snow.h	32;"	d
QSCALE_NONE	ffmpeg.c	177;"	d	file:
QSCALE_NONE	ffmpeg/ffmpeg.c	177;"	d	file:
QSHIFT	libavcodec/snow.h	31;"	d
QT_8S_2_16S	libavcodec/mace.c	149;"	d	file:
QT_ATOM	tools/qt-faststart.c	57;"	d	file:
QUALITY_THRESHOLD	libavcodec/svq1enc.c	113;"	d	file:
QUANTIZE2	libavcodec/snow.c	1798;"	d	file:
QUANTIZER_BITS	libavcodec/dcaenc.c	41;"	d	file:
QUANTIZE_AND_ENCODE_BAND_COST_FUNC	libavcodec/aaccoder.c	209;"	d	file:
QUANT_BIAS_SHIFT	libavcodec/mpegvideo.h	429;"	d
QUANT_FRAME_EXPLICIT	libavcodec/vc1.h	/^    QUANT_FRAME_EXPLICIT,    \/\/\/< Explicitly specified at frame level$/;"	e	enum:QuantMode
QUANT_FRAME_IMPLICIT	libavcodec/vc1.h	/^    QUANT_FRAME_IMPLICIT,    \/\/\/< Implicitly specified at frame level$/;"	e	enum:QuantMode
QUANT_MASK	libavcodec/pcm_tablegen.h	32;"	d
QUANT_NON_UNIFORM	libavcodec/vc1.h	/^    QUANT_NON_UNIFORM,       \/\/\/< Non-uniform quant used for all frames$/;"	e	enum:QuantMode
QUANT_UNIFORM	libavcodec/vc1.h	/^    QUANT_UNIFORM            \/\/\/< Uniform quant used for all frames$/;"	e	enum:QuantMode
QUEUE_MASK	libavcodec/vmdav.c	73;"	d	file:
QUEUE_SIZE	libavcodec/vmdav.c	72;"	d	file:
Q_INTERPOLATE	libavfilter/libmpcodecs/vf_2xsai.c	94;"	d	file:
Q_fract_allpass	libavcodec/aacps_tablegen.h	/^static float Q_fract_allpass[2][50][3][2];$/;"	v
QdrawContext	libavcodec/qdrw.c	/^typedef struct QdrawContext{$/;"	s	file:
QdrawContext	libavcodec/qdrw.c	/^} QdrawContext;$/;"	t	typeref:struct:QdrawContext	file:
QpegContext	libavcodec/qpeg.c	/^typedef struct QpegContext{$/;"	s	file:
QpegContext	libavcodec/qpeg.c	/^} QpegContext;$/;"	t	typeref:struct:QpegContext	file:
QtrleContext	libavcodec/qtrle.c	/^typedef struct QtrleContext {$/;"	s	file:
QtrleContext	libavcodec/qtrle.c	/^} QtrleContext;$/;"	t	typeref:struct:QtrleContext	file:
QtrleEncContext	libavcodec/qtrleenc.c	/^typedef struct QtrleEncContext {$/;"	s	file:
QtrleEncContext	libavcodec/qtrleenc.c	/^} QtrleEncContext;$/;"	t	typeref:struct:QtrleEncContext	file:
QuantMode	libavcodec/vc1.h	/^enum QuantMode {$/;"	g
R	libavcodec/dsputil.c	2008;"	d	file:
R	libavcodec/dsputil.c	2013;"	d	file:
R	libavcodec/dsputil.c	2043;"	d	file:
R	libavcodec/huffyuv.c	42;"	d	file:
R	libavcodec/huffyuv.c	47;"	d	file:
R	libavcodec/jpegls.h	110;"	d
R	libavfilter/vf_lut.c	76;"	d	file:
R0	libavcodec/bfin/fdct_bfin.S	/^        R0 = R0 +|+ R1, R1 = R0 -|- R1;$/;"	d
R0	libavcodec/bfin/fdct_bfin.S	/^        R0 = R0 +|+ R3, R3 = R0 -|- R3 || R1.L = W[I0++] || NOP;$/;"	d
R0	libavcodec/bfin/pixels_bfin.S	/^        R0 = R0 - R3;$/;"	d
R0	libavcodec/bfin/pixels_bfin.S	/^        R0 = R2 + R3 (S);$/;"	d
R0	libavcodec/bfin/pixels_bfin.S	/^        R0 = R2 + R3 ;$/;"	d
R0	libavcodec/bfin/pixels_bfin.S	/^        R0 = [sp+20]; \/\/ rwidth$/;"	d
R0	libavcodec/bfin/pixels_bfin.S	/^    R0 = [I0++];$/;"	d
R0	libavcodec/bfin/pixels_bfin.S	/^    R0 = [I3++]  || R2 = [I1];$/;"	d
R0	libavutil/sha.c	48;"	d	file:
R1	libavcodec/bfin/fdct_bfin.S	/^        R1 = R1 +|+ R2, R2 = R1 -|- R2 (CO) || NOP      ||  R7 = [I3++];$/;"	d
R1	libavcodec/bfin/pixels_bfin.S	/^    R1 = [I0++];$/;"	d
R1	libavcodec/simple_idct.c	516;"	d	file:
R1	libavutil/sha.c	49;"	d	file:
R2	libavcodec/bfin/pixels_bfin.S	/^        R2 = A0, R3 = A1;$/;"	d
R2	libavcodec/bfin/pixels_bfin.S	/^       R2 = MAX(R0, R4) (V)      || [I1++] = R6;$/;"	d
R2	libavcodec/bfin/pixels_bfin.S	/^       R2 = MIN(R2, R5) (V);$/;"	d
R2	libavcodec/bfin/pixels_bfin.S	/^       R2 = R2 << 8                      || R0.H = W[I3--]  || R3 = [I1++];$/;"	d
R2	libavcodec/bfin/pixels_bfin.S	/^       R2 = R2 << 8                      || R0.H = W[I3--];$/;"	d
R2	libavcodec/bfin/pixels_bfin.S	/^    R2 = MAX(R0, R4) (V);$/;"	d
R2	libavcodec/bfin/pixels_bfin.S	/^    R2 = R2 << 8                      || R0.H = W[I3--]  || R3 = [I1++];$/;"	d
R2	libavcodec/simple_idct.c	517;"	d	file:
R2	libavutil/sha.c	50;"	d	file:
R3	libavcodec/bfin/pixels_bfin.S	/^        R3 = 16;$/;"	d
R3	libavcodec/bfin/pixels_bfin.S	/^        R3 = 8;$/;"	d
R3	libavcodec/bfin/pixels_bfin.S	/^        R3 = R2 - R3;$/;"	d
R3	libavcodec/bfin/pixels_bfin.S	/^       R3 = MAX(R1, R4) (V);$/;"	d
R3	libavcodec/bfin/pixels_bfin.S	/^       R3 = MIN(R3, R5) (V)      || R0 = [I0++];$/;"	d
R3	libavcodec/bfin/pixels_bfin.S	/^       R3 = R3 >> 8                      || R1.L = W[I3]    || I3 += 4;$/;"	d
R3	libavcodec/bfin/pixels_bfin.S	/^    R3 = R3 >> 8                      || R1.L = W[I3]    || I3 += 4;$/;"	d
R3	libavcodec/simple_idct.c	518;"	d	file:
R3	libavutil/sha.c	51;"	d	file:
R3DContext	libavformat/r3d.c	/^} R3DContext;$/;"	t	typeref:struct:__anon486	file:
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = BYTEOP2P (R3:2,R1:0) (RNDH)   || R0 = [I0++M0] || R2  =[I1++M0];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = BYTEOP2P (R3:2,R1:0) (RNDH)   || R0 = [I0++M0]|| R2  = [I1++M0];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = BYTEOP2P (R3:2,R1:0) (RNDH)   || R0 = [I0++] || R2  =[I1++];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = BYTEOP2P (R3:2,R1:0) (RNDL)   || R0 = [I0++M0] || R2  =[I1++M0];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = BYTEOP2P (R3:2,R1:0) (RNDL)   || R0 = [I0++M0]|| R2  = [I1++M0];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = BYTEOP2P (R3:2,R1:0) (RNDL)   || R0 = [I0++] || R2  =[I1++];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = BYTEOP2P (R3:2,R1:0) (TH)     || R0 = [I0++M0] || R2 = [I1++M0];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = BYTEOP2P (R3:2,R1:0) (TH)     || R0 = [I0++M0]|| R2  = [I1++M0];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = BYTEOP2P (R3:2,R1:0) (TH)     || R0 = [I0++] || R2  =[I1++];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = BYTEOP2P (R3:2,R1:0) (TL)     || R0 = [I0++M0] || R2 = [I1++M0];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = BYTEOP2P (R3:2,R1:0) (TL)     || R0 = [I0++M0]|| R2  = [I1++M0];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = BYTEOP2P (R3:2,R1:0) (TL)     || R0 = [I0++] || R2  =[I1++];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = R4 +|+ R6                                      || R7 = [I3--];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = R4 +|+ R6                                    || R7 = [I3--];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^        R4 = R4 +|+ R6                       || R7 = [I3--];$/;"	d
R4	libavcodec/bfin/pixels_bfin.S	/^    R4 = 0;$/;"	d
R4	libavutil/sha.c	52;"	d	file:
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = BYTEOP2P (R3:2,R1:0) (RNDH,R) || R0 = [I0++]   || R6  =[I3++];$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = BYTEOP2P (R3:2,R1:0) (RNDH,R) || R0 = [I0++] || R6 = [I3++];$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = BYTEOP2P (R3:2,R1:0) (RNDH,R) || R1 = [I0++] || R6  =[I3++];$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = BYTEOP2P (R3:2,R1:0) (RNDL,R) || R0 = [I0++]   || [I3++] = R4 ;$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = BYTEOP2P (R3:2,R1:0) (RNDL,R) || R0 = [I0++] || [I3++] = R4 ;$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = BYTEOP2P (R3:2,R1:0) (RNDL,R) || R1 = [I0++] || [I3++] = R4 ;$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = BYTEOP2P (R3:2,R1:0) (TH,R)   || R0 = [I0++]   || R6 = [I3++];$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = BYTEOP2P (R3:2,R1:0) (TH,R)   || R0 = [I0++] || R6 = [I3++];$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = BYTEOP2P (R3:2,R1:0) (TH,R)   || R1 = [I0++] || R6  =[I3++];$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = BYTEOP2P (R3:2,R1:0) (TL,R)   || R0 = [I0++]   || [I3++] = R4 ;$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = BYTEOP2P (R3:2,R1:0) (TL,R)   || R0 = [I0++] || [I3++] = R4 ;$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = BYTEOP2P (R3:2,R1:0) (TL,R)   || R1 = [I0++] || [I3++] = R4 ;$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = R5 +|+ R7                                      || [I3++] = R4;$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = R5 +|+ R7                                    || [I3++] = R4;$/;"	d
R5	libavcodec/bfin/pixels_bfin.S	/^        R5 = R5 +|+ R7                       || [I3++] = R4;$/;"	d
R6	libavcodec/bfin/pixels_bfin.S	/^         R6 = BYTEOP1P(R1:0,R3:2)    || R0 = [I0++M0] || R2  =[I1++M0];$/;"	d
R6	libavcodec/bfin/pixels_bfin.S	/^         R6 = BYTEOP1P(R1:0,R3:2)    || R0 = [I0++]   || R2  =[I1++];$/;"	d
R6	libavcodec/bfin/pixels_bfin.S	/^        R6 = BYTEOP1P(R1:0,R3:2)    || R0 = [I0++M0]|| R2  =[I1++M0];$/;"	d
R6	libavcodec/bfin/pixels_bfin.S	/^        R6 = BYTEOP1P(R1:0,R3:2)(T)    || R0 = [I0++M0] || R2  =[I1++M0];$/;"	d
R6	libavcodec/bfin/pixels_bfin.S	/^        R6 = BYTEOP1P(R1:0,R3:2)(T)    || R0 = [I0++]   || R2  =[I1++];$/;"	d
R6	libavcodec/bfin/pixels_bfin.S	/^        R6 = BYTEOP1P(R1:0,R3:2)(T)  || R0 = [I0++M0]|| R2  =[I1++M0];$/;"	d
R6	libavcodec/bfin/pixels_bfin.S	/^       R6 = BYTEOP3P(R1:0, R3:2) (LO)    || I3+=M3          || [I2++]=R6;$/;"	d
R6	libavcodec/bfin/pixels_bfin.S	/^       R6 = BYTEPACK (R2,R3)     || R1 = [I0++];$/;"	d
R6	libavcodec/bfin/pixels_bfin.S	/^       R6 = R6 + R7 (S)                  || R1.H = W[I3++];$/;"	d
R6	libavcodec/bfin/pixels_bfin.S	/^       R6 = R6 + R7 (S)                  || R1.H = W[I3];$/;"	d
R6	libavcodec/bfin/pixels_bfin.S	/^    R6 = BYTEOP3P(R1:0, R3:2) (LO)    || R1.H = W[I3++]  || R2 = [I1];$/;"	d
R7	libavcodec/bfin/fdct_bfin.S	/^        R7 = [P1++P2] || R2 = [I2++];   \/\/ P1 points to temporary array$/;"	d
R7	libavcodec/bfin/idct_bfin.S	/^    R7 = 0x8000(Z);$/;"	d
R7	libavcodec/bfin/idct_bfin.S	/^    R7 = [I3++] || [TMP2]=R7;            \/\/ Coefficient C4 is read into R7.H and R7.L.$/;"	d
R7	libavcodec/bfin/idct_bfin.S	/^    R7 = [I3++];            \/\/ R7.H = C4 and R7.L = C4$/;"	d
R7	libavcodec/bfin/pixels_bfin.S	/^         R7 = BYTEOP1P(R1:0,R3:2)(R) || R0 = [I0++]   || [I3++] = R7 ;$/;"	d
R7	libavcodec/bfin/pixels_bfin.S	/^         R7 = BYTEOP1P(R1:0,R3:2)(R) || R1 = [I0++]   || R3  =[I1++];$/;"	d
R7	libavcodec/bfin/pixels_bfin.S	/^        R7 = BYTEOP1P(R1:0,R3:2)(R) || R0 = [I0++]  || [I3++] = R6 ;$/;"	d
R7	libavcodec/bfin/pixels_bfin.S	/^        R7 = BYTEOP1P(R1:0,R3:2)(T,R) || R0 = [I0++]   || [I3++] = R7 ;$/;"	d
R7	libavcodec/bfin/pixels_bfin.S	/^        R7 = BYTEOP1P(R1:0,R3:2)(T,R) || R0 = [I0++]  || [I3++] = R6 ;$/;"	d
R7	libavcodec/bfin/pixels_bfin.S	/^        R7 = BYTEOP1P(R1:0,R3:2)(T,R) || R1 = [I0++]   || R3  =[I1++];$/;"	d
R7	libavcodec/bfin/pixels_bfin.S	/^       R7 = BYTEOP3P(R1:0, R3:2) (HI, R) || R0 = [I3++]     || R2 = [I1];$/;"	d
R7	libavcodec/bfin/vp3_idct_bfin.S	/^    R7 = 0x8000(Z);$/;"	d
R7	libavcodec/bfin/vp3_idct_bfin.S	/^    R7 = [I3++] || [TMP2]=R7;            \/\/ Coefficient C4 is read into R7.H and R7.L.$/;"	d
R7	libavcodec/bfin/vp3_idct_bfin.S	/^    R7 = [I3++];            \/\/ R7.H = C4 and R7.L = C4$/;"	d
RA144Context	libavcodec/ra144.h	/^} RA144Context;$/;"	t	typeref:struct:__anon167
RA288Context	libavcodec/ra288.c	/^} RA288Context;$/;"	t	typeref:struct:__anon132	file:
RADIX_PASSES	libavcodec/dnxhdenc.c	662;"	d	file:
RAND_N	libavfilter/libmpcodecs/vf_noise.c	78;"	d	file:
RAND_TAG	libavformat/filmstripdec.c	30;"	d	file:
RAND_TAG	libavformat/filmstripenc.c	30;"	d	file:
RANGE	libavcodec/fft-test.c	53;"	d	file:
RANGE	libavcodec/fft-test.c	57;"	d	file:
RANLIB	config.mak	/^RANLIB=\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/bin\/arm-linux-androideabi-ranlib$/;"	m
RATE_FULL	libavcodec/qcelpdec.c	/^    RATE_FULL$/;"	e	enum:__anon224	file:
RATE_HALF	libavcodec/qcelpdec.c	/^    RATE_HALF,$/;"	e	enum:__anon224	file:
RATE_OCTAVE	libavcodec/qcelpdec.c	/^    RATE_OCTAVE,$/;"	e	enum:__anon224	file:
RATE_QUARTER	libavcodec/qcelpdec.c	/^    RATE_QUARTER,$/;"	e	enum:__anon224	file:
RATE_VARIATION	libavcodec/sonic.c	75;"	d	file:
RAW_BLOCK	libavcodec/bink.c	/^    RAW_BLOCK,      \/\/\/< uncoded 8x8 block$/;"	e	enum:BlockTypes	file:
RAW_CD_SECTOR_DATA_SIZE	libavformat/psxstr.c	39;"	d	file:
RAW_CD_SECTOR_SIZE	libavformat/psxstr.c	38;"	d	file:
RAW_PACKET_BUFFER_SIZE	libavformat/avformat.h	848;"	d
RAW_PACKET_SIZE	libavformat/rawdec.c	119;"	d	file:
RAW_PACKET_SIZE	libavformat/rmdec.c	539;"	d	file:
RAW_SAMPLES	libavformat/pcmdec.c	26;"	d	file:
RA_FLAG_FRAMES	libavcodec/alsdec.c	/^    RA_FLAG_FRAMES,$/;"	e	enum:RA_Flag	file:
RA_FLAG_HEADER	libavcodec/alsdec.c	/^    RA_FLAG_HEADER$/;"	e	enum:RA_Flag	file:
RA_FLAG_NONE	libavcodec/alsdec.c	/^    RA_FLAG_NONE,$/;"	e	enum:RA_Flag	file:
RA_Flag	libavcodec/alsdec.c	/^enum RA_Flag {$/;"	g	file:
RCCMPEntry	libavcodec/dnxhdenc.h	/^} RCCMPEntry;$/;"	t	typeref:struct:__anon162
RCEntry	libavcodec/dnxhdenc.h	/^} RCEntry;$/;"	t	typeref:struct:__anon163
RCVContext	libavformat/vc1testenc.c	/^typedef struct RCVContext {$/;"	s	file:
RCVContext	libavformat/vc1testenc.c	/^} RCVContext;$/;"	t	typeref:struct:RCVContext	file:
RC_VARIANCE	libavcodec/dnxhdenc.c	25;"	d	file:
RDFTContext	libavcodec/avfft.h	/^typedef struct RDFTContext RDFTContext;$/;"	t	typeref:struct:RDFTContext
RDFTContext	libavcodec/rdft.h	/^struct RDFTContext {$/;"	s
RDFTransformType	libavcodec/avfft.h	/^enum RDFTransformType {$/;"	g
RDTDemuxContext	libavformat/rdt.c	/^struct RDTDemuxContext {$/;"	s	file:
RDTDemuxContext	libavformat/rdt.h	/^typedef struct RDTDemuxContext RDTDemuxContext;$/;"	t	typeref:struct:RDTDemuxContext
RDT_HANDLER	libavformat/rdt.c	548;"	d	file:
READ_2PIX	libavcodec/huffyuv.c	705;"	d	file:
READ_DATA	libavformat/ffm.h	/^    READ_DATA,$/;"	e	enum:__anon402
READ_FLIP_SIGN	libavcodec/mpegaudiodec.c	991;"	d	file:
READ_FLIP_SIGN	libavcodec/mpegaudiodec.c	995;"	d	file:
READ_HEADER	libavformat/ffm.h	/^    READ_HEADER,$/;"	e	enum:__anon402
READ_OFFSET	libavcodec/dvdsubdec.c	169;"	d	file:
READ_ONE	libavformat/gxf.c	369;"	d	file:
READ_PACKET_TIMEOUT_S	libavformat/rtsp.c	53;"	d	file:
READ_PAR_DATA	libavcodec/aacps.c	84;"	d	file:
READ_PIXELS	libavcodec/v210dec.c	69;"	d	file:
REAL_DEINT_CUBIC	libpostproc/postprocess_template.c	1464;"	d	file:
REAL_DEINT_FF	libpostproc/postprocess_template.c	1527;"	d	file:
REAL_DEINT_L5	libpostproc/postprocess_template.c	1607;"	d	file:
REAL_DERING_CORE	libpostproc/postprocess_template.c	1194;"	d	file:
REAL_FIND_MIN_MAX	libpostproc/postprocess_template.c	1063;"	d	file:
REAL_FIND_MIN_MAX	libpostproc/postprocess_template.c	1066;"	d	file:
REAL_MOVNTQ	libswscale/x86/swscale_template.c	21;"	d	file:
REAL_MOVNTQ	libswscale/x86/swscale_template.c	32;"	d	file:
REAL_MOVNTQ	libswscale/x86/swscale_template.c	34;"	d	file:
REAL_PAVGB	libpostproc/postprocess_template.c	30;"	d	file:
REAL_PAVGB	libpostproc/postprocess_template.c	36;"	d	file:
REAL_PAVGB	libpostproc/postprocess_template.c	38;"	d	file:
REAL_SCALED_CPY	libpostproc/postprocess_template.c	3012;"	d	file:
REAL_SCALED_CPY	libpostproc/postprocess_template.c	3030;"	d	file:
REAL_SIMPLE_CPY	libpostproc/postprocess_template.c	3110;"	d	file:
REAL_WRITEBGR32	libswscale/x86/swscale_template.c	449;"	d	file:
REAL_WRITERGB15	libswscale/x86/swscale_template.c	611;"	d	file:
REAL_WRITERGB16	libswscale/x86/swscale_template.c	535;"	d	file:
REAL_WRITEYUY2	libswscale/x86/swscale_template.c	845;"	d	file:
REAL_YSCALEYUV2PACKED	libswscale/x86/swscale_template.c	1124;"	d	file:
REAL_YSCALEYUV2PACKED1	libswscale/x86/swscale_template.c	1509;"	d	file:
REAL_YSCALEYUV2PACKED1b	libswscale/x86/swscale_template.c	1526;"	d	file:
REAL_YSCALEYUV2RGB1	libswscale/x86/swscale_template.c	1185;"	d	file:
REAL_YSCALEYUV2RGB1_ALPHA	libswscale/x86/swscale_template.c	1292;"	d	file:
REAL_YSCALEYUV2RGB1b	libswscale/x86/swscale_template.c	1237;"	d	file:
REAL_YSCALEYUV2RGB_COEFF	libswscale/x86/swscale_template.c	945;"	d	file:
REAL_YSCALEYUV2RGB_UV	libswscale/x86/swscale_template.c	904;"	d	file:
REAL_YSCALEYUV2RGB_YA	libswscale/x86/swscale_template.c	931;"	d	file:
REBASE	libavcodec/vp8.c	1752;"	d	file:
REBASE_PICTURE	libavcodec/mpegvideo.h	686;"	d
RECON_SHIFT	libavcodec/dsputil.h	506;"	d
RECT_SHAPE	libavcodec/mpeg4video.h	32;"	d
RECVBUF_SIZE	libavformat/rtsp.c	56;"	d	file:
RED	libavfilter/drawutils.c	/^enum { RED = 0, GREEN, BLUE, ALPHA };$/;"	e	enum:__anon42	file:
REDIR_ASF	ffserver.c	/^    REDIR_ASF,$/;"	e	enum:RedirType	file:
REDIR_ASX	ffserver.c	/^    REDIR_ASX,$/;"	e	enum:RedirType	file:
REDIR_NONE	ffserver.c	/^    REDIR_NONE,$/;"	e	enum:RedirType	file:
REDIR_RAM	ffserver.c	/^    REDIR_RAM,$/;"	e	enum:RedirType	file:
REDIR_RTSP	ffserver.c	/^    REDIR_RTSP,$/;"	e	enum:RedirType	file:
REDIR_SDP	ffserver.c	/^    REDIR_SDP,$/;"	e	enum:RedirType	file:
RED_DITHER	libswscale/swscale_internal.h	213;"	d
REF	tests/fate/aac.mak	/^fate-aac-al04_44: REF = $(SAMPLES)\/aac\/al04_44.s16$/;"	m
REF	tests/fate/aac.mak	/^fate-aac-al07_96: REF = $(SAMPLES)\/aac\/al07_96.s16$/;"	m
REF	tests/fate/aac.mak	/^fate-aac-al_sbr_hq_cm_48_2: REF = $(SAMPLES)\/aac\/al_sbr_hq_cm_48_2.s16$/;"	m
REF	tests/fate/aac.mak	/^fate-aac-al_sbr_ps_06_ur: REF = $(SAMPLES)\/aac\/al_sbr_ps_06_ur.s16$/;"	m
REF	tests/fate/aac.mak	/^fate-aac-am00_88: REF = $(SAMPLES)\/aac\/am00_88.s16$/;"	m
REF	tests/fate/aac.mak	/^fate-aac-ap05_48: REF = $(SAMPLES)\/aac\/ap05_48.s16$/;"	m
REF	tests/fate/aac.mak	/^fate-aac-latm_000000001180bc60: REF = $(SAMPLES)\/aac\/latm_000000001180bc60.s16$/;"	m
REF	tests/fate/fft.mak	/^$(FATE_FFT): REF = \/dev\/null$/;"	m
REF	tests/fate/fft.mak	/^$(FATE_FFT_FIXED): REF = \/dev\/null$/;"	m
REF	tests/fate/mp3.mak	/^fate-mp3-float-conf-compl: REF = $(SAMPLES)\/mp3-conformance\/compl.pcm$/;"	m
REF	tests/fate/mp3.mak	/^fate-mp3-float-conf-he_32khz: REF = $(SAMPLES)\/mp3-conformance\/he_32khz.pcm$/;"	m
REF	tests/fate/mp3.mak	/^fate-mp3-float-conf-he_44khz: REF = $(SAMPLES)\/mp3-conformance\/he_44khz.pcm$/;"	m
REF	tests/fate/mp3.mak	/^fate-mp3-float-conf-he_48khz: REF = $(SAMPLES)\/mp3-conformance\/he_48khz.pcm$/;"	m
REF	tests/fate/mp3.mak	/^fate-mp3-float-conf-hecommon: REF = $(SAMPLES)\/mp3-conformance\/hecommon.pcm$/;"	m
REF	tests/fate/mp3.mak	/^fate-mp3-float-conf-si: REF = $(SAMPLES)\/mp3-conformance\/si.pcm$/;"	m
REF	tests/fate/mp3.mak	/^fate-mp3-float-conf-si_block: REF = $(SAMPLES)\/mp3-conformance\/si_block.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-10: REF = $(SAMPLES)\/vorbis\/lsp-test4_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-11: REF = $(SAMPLES)\/vorbis\/lsp-test_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-12: REF = $(SAMPLES)\/vorbis\/mono_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-13: REF = $(SAMPLES)\/vorbis\/moog_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-14: REF = $(SAMPLES)\/vorbis\/rc1-test_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-15: REF = $(SAMPLES)\/vorbis\/rc2-test2_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-16: REF = $(SAMPLES)\/vorbis\/rc2-test_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-17: REF = $(SAMPLES)\/vorbis\/rc3-test_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-18: REF = $(SAMPLES)\/vorbis\/sleepzor_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-19: REF = $(SAMPLES)\/vorbis\/test-short2_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-1: REF = $(SAMPLES)\/vorbis\/1.0.1-test_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-2: REF = $(SAMPLES)\/vorbis\/1.0-test_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-3: REF = $(SAMPLES)\/vorbis\/beta3-test_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-4: REF = $(SAMPLES)\/vorbis\/beta4-test_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-5: REF = $(SAMPLES)\/vorbis\/chain-test1_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-6: REF = $(SAMPLES)\/vorbis\/chain-test2_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-7: REF = $(SAMPLES)\/vorbis\/highrate-test_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-8: REF = $(SAMPLES)\/vorbis\/lsp-test2_small.pcm$/;"	m
REF	tests/fate/vorbis.mak	/^fate-vorbis-9: REF = $(SAMPLES)\/vorbis\/lsp-test3_small.pcm$/;"	m
REF	tests/fate2.mak	/^fate-ac3-2.0: REF = $(SAMPLES)\/ac3\/monsters_inc_2.0_192_small.pcm$/;"	m
REF	tests/fate2.mak	/^fate-ac3-5.1: REF = $(SAMPLES)\/ac3\/monsters_inc_5.1_448_small.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrnb-10k2: REF = $(SAMPLES)\/amrnb\/10.2k.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrnb-12k2: REF = $(SAMPLES)\/amrnb\/12.2k.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrnb-4k75: REF = $(SAMPLES)\/amrnb\/4.75k.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrnb-5k15: REF = $(SAMPLES)\/amrnb\/5.15k.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrnb-5k9: REF = $(SAMPLES)\/amrnb\/5.9k.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrnb-6k7: REF = $(SAMPLES)\/amrnb\/6.7k.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrnb-7k4: REF = $(SAMPLES)\/amrnb\/7.4k.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrnb-7k95: REF = $(SAMPLES)\/amrnb\/7.95k.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrwb-12k65: REF = $(SAMPLES)\/amrwb\/seed-12k65.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrwb-14k25: REF = $(SAMPLES)\/amrwb\/seed-14k25.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrwb-15k85: REF = $(SAMPLES)\/amrwb\/seed-15k85.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrwb-18k25: REF = $(SAMPLES)\/amrwb\/seed-18k25.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrwb-19k85: REF = $(SAMPLES)\/amrwb\/seed-19k85.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrwb-23k05: REF = $(SAMPLES)\/amrwb\/seed-23k05.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrwb-23k85-2: REF = $(SAMPLES)\/amrwb\/deus-23k85.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrwb-23k85: REF = $(SAMPLES)\/amrwb\/seed-23k85.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrwb-6k60: REF = $(SAMPLES)\/amrwb\/seed-6k60.pcm$/;"	m
REF	tests/fate2.mak	/^fate-amrwb-8k85: REF = $(SAMPLES)\/amrwb\/seed-8k85.pcm$/;"	m
REF	tests/fate2.mak	/^fate-atrac1: REF = $(SAMPLES)\/atrac1\/test_tones_small.pcm$/;"	m
REF	tests/fate2.mak	/^fate-atrac3-1: REF = $(SAMPLES)\/atrac3\/mc_sich_at3_066_small.pcm$/;"	m
REF	tests/fate2.mak	/^fate-atrac3-2: REF = $(SAMPLES)\/atrac3\/mc_sich_at3_105_small.pcm$/;"	m
REF	tests/fate2.mak	/^fate-atrac3-3: REF = $(SAMPLES)\/atrac3\/mc_sich_at3_132_small.pcm$/;"	m
REF	tests/fate2.mak	/^fate-binkaudio-dct: REF = $(SAMPLES)\/bink\/binkaudio_dct.pcm$/;"	m
REF	tests/fate2.mak	/^fate-binkaudio-rdft: REF = $(SAMPLES)\/bink\/binkaudio_rdft.pcm$/;"	m
REF	tests/fate2.mak	/^fate-dts: REF = $(SAMPLES)\/dts\/dts.pcm$/;"	m
REF	tests/fate2.mak	/^fate-eac3-1: REF = $(SAMPLES)\/eac3\/csi_miami_5.1_256_spx_small.pcm$/;"	m
REF	tests/fate2.mak	/^fate-eac3-2: REF = $(SAMPLES)\/eac3\/csi_miami_stereo_128_spx_small.pcm$/;"	m
REF	tests/fate2.mak	/^fate-eac3-3: REF = $(SAMPLES)\/eac3\/matrix2_commentary1_stereo_192_small.pcm$/;"	m
REF	tests/fate2.mak	/^fate-eac3-4: REF = $(SAMPLES)\/eac3\/serenity_english_5.1_1536_small.pcm$/;"	m
REF	tests/fate2.mak	/^fate-imc: REF = $(SAMPLES)\/imc\/imc.pcm$/;"	m
REF	tests/fate2.mak	/^fate-musepack7: REF = $(SAMPLES)\/musepack\/inside-mp7.pcm$/;"	m
REF	tests/fate2.mak	/^fate-nellymoser: REF = $(SAMPLES)\/nellymoser\/nellymoser.pcm$/;"	m
REF	tests/fate2.mak	/^fate-qcelp: REF = $(SAMPLES)\/qcp\/0036580847.pcm$/;"	m
REF	tests/fate2.mak	/^fate-qdm2: REF = $(SAMPLES)\/qt-surge-suite\/surge-2-16-B-QDM2.pcm$/;"	m
REF	tests/fate2.mak	/^fate-ra-288: REF = $(SAMPLES)\/real\/ra_288.pcm$/;"	m
REF	tests/fate2.mak	/^fate-ra-cook: REF = $(SAMPLES)\/real\/ra_cook.pcm$/;"	m
REF	tests/fate2.mak	/^fate-sipr-16k: REF = $(SAMPLES)\/sipr\/sipr_16k.pcm$/;"	m
REF	tests/fate2.mak	/^fate-sipr-5k0: REF = $(SAMPLES)\/sipr\/sipr_5k0.pcm$/;"	m
REF	tests/fate2.mak	/^fate-sipr-6k5: REF = $(SAMPLES)\/sipr\/sipr_6k5.pcm$/;"	m
REF	tests/fate2.mak	/^fate-sipr-8k5: REF = $(SAMPLES)\/sipr\/sipr_8k5.pcm$/;"	m
REF	tests/fate2.mak	/^fate-truespeech: REF = $(SAMPLES)\/truespeech\/a6.pcm$/;"	m
REF	tests/fate2.mak	/^fate-twinvq: REF = $(SAMPLES)\/vqf\/achterba.pcm$/;"	m
REF	tests/fate2.mak	/^fate-wmapro-2ch: REF = $(SAMPLES)\/wmapro\/Beethovens_9th-1_small.pcm$/;"	m
REF	tests/fate2.mak	/^fate-wmapro-5.1: REF = $(SAMPLES)\/wmapro\/latin_192_mulitchannel_cut.pcm$/;"	m
REF	tests/fate2.mak	/^fate-wmavoice-11k: REF = $(SAMPLES)\/wmavoice\/streaming_CBR-11K.pcm$/;"	m
REF	tests/fate2.mak	/^fate-wmavoice-19k: REF = $(SAMPLES)\/wmavoice\/streaming_CBR-19K.pcm$/;"	m
REF	tests/fate2.mak	/^fate-wmavoice-7k: REF = $(SAMPLES)\/wmavoice\/streaming_CBR-7K.pcm$/;"	m
REFINE_BIT	libavcodec/mjpegdec.c	543;"	d	file:
REFINE_BIT	libavcodec/mjpegdec.c	629;"	d	file:
REFS	Makefile	/^REFS = $(AREF) $(VREF)$/;"	m
REF_0	libavcodec/sparc/dsputil_vis.c	68;"	d	file:
REF_0_1	libavcodec/sparc/dsputil_vis.c	69;"	d	file:
REF_2	libavcodec/sparc/dsputil_vis.c	70;"	d	file:
REF_2_1	libavcodec/sparc/dsputil_vis.c	71;"	d	file:
REF_4	libavcodec/sparc/dsputil_vis.c	72;"	d	file:
REF_4_1	libavcodec/sparc/dsputil_vis.c	73;"	d	file:
REF_6	libavcodec/sparc/dsputil_vis.c	74;"	d	file:
REF_6_1	libavcodec/sparc/dsputil_vis.c	75;"	d	file:
REF_DIR	libavcodec/cavs.h	42;"	d
REF_INTRA	libavcodec/cavs.h	41;"	d
REF_S0	libavcodec/sparc/dsputil_vis.c	76;"	d	file:
REF_S0_1	libavcodec/sparc/dsputil_vis.c	77;"	d	file:
REF_S2	libavcodec/sparc/dsputil_vis.c	78;"	d	file:
REF_S2_1	libavcodec/sparc/dsputil_vis.c	79;"	d	file:
REF_S4	libavcodec/sparc/dsputil_vis.c	80;"	d	file:
REF_S4_1	libavcodec/sparc/dsputil_vis.c	81;"	d	file:
REF_S6	libavcodec/sparc/dsputil_vis.c	82;"	d	file:
REF_S6_1	libavcodec/sparc/dsputil_vis.c	83;"	d	file:
REF_SCALE	libavcodec/fft-test.c	54;"	d	file:
REF_SCALE	libavcodec/fft-test.c	58;"	d	file:
REG0	libavcodec/x86/idct_sse2_xvid.c	111;"	d	file:
REG0	libavcodec/x86/idct_sse2_xvid.c	129;"	d	file:
REG2	libavcodec/x86/idct_sse2_xvid.c	113;"	d	file:
REG2	libavcodec/x86/idct_sse2_xvid.c	131;"	d	file:
REG4	libavcodec/x86/idct_sse2_xvid.c	115;"	d	file:
REG4	libavcodec/x86/idct_sse2_xvid.c	133;"	d	file:
REG6	libavcodec/x86/idct_sse2_xvid.c	117;"	d	file:
REG6	libavcodec/x86/idct_sse2_xvid.c	135;"	d	file:
REGBP	libavutil/x86_cpu.h	40;"	d
REGBP	libavutil/x86_cpu.h	61;"	d
REGD_types	libavformat/mpegts.c	/^static const StreamType REGD_types[] = {$/;"	v	file:
REGISTER_BSF	libavcodec/allcodecs.c	44;"	d	file:
REGISTER_DECODER	libavcodec/allcodecs.c	36;"	d	file:
REGISTER_DEMUXER	libavformat/allformats.c	30;"	d	file:
REGISTER_ENCDEC	libavcodec/allcodecs.c	39;"	d	file:
REGISTER_ENCODER	libavcodec/allcodecs.c	33;"	d	file:
REGISTER_FILTER	libavfilter/allfilters.c	25;"	d	file:
REGISTER_HWACCEL	libavcodec/allcodecs.c	29;"	d	file:
REGISTER_INDEV	libavdevice/alldevices.c	27;"	d	file:
REGISTER_INOUTDEV	libavdevice/alldevices.c	30;"	d	file:
REGISTER_MUXDEMUX	libavformat/allformats.c	34;"	d	file:
REGISTER_MUXER	libavformat/allformats.c	26;"	d	file:
REGISTER_OUTDEV	libavdevice/alldevices.c	24;"	d	file:
REGISTER_PARSER	libavcodec/allcodecs.c	41;"	d	file:
REGISTER_PROTOCOL	libavformat/allformats.c	36;"	d	file:
REGSP	libavutil/x86_cpu.h	45;"	d
REGSP	libavutil/x86_cpu.h	66;"	d
REG_ALPHA	libswscale/x86/yuv2rgb_template.c	39;"	d	file:
REG_BLUE	libswscale/x86/yuv2rgb_template.c	36;"	d	file:
REG_BP	libavutil/x86_cpu.h	39;"	d
REG_BP	libavutil/x86_cpu.h	60;"	d
REG_D	libavutil/x86_cpu.h	33;"	d
REG_D	libavutil/x86_cpu.h	54;"	d
REG_GREEN	libswscale/x86/yuv2rgb_template.c	38;"	d	file:
REG_RED	libswscale/x86/yuv2rgb_template.c	37;"	d	file:
REG_S	libavutil/x86_cpu.h	34;"	d
REG_S	libavutil/x86_cpu.h	55;"	d
REG_SP	libavutil/x86_cpu.h	38;"	d
REG_SP	libavutil/x86_cpu.h	59;"	d
REG_a	libavutil/x86_cpu.h	29;"	d
REG_a	libavutil/x86_cpu.h	50;"	d
REG_b	libavutil/x86_cpu.h	30;"	d
REG_b	libavutil/x86_cpu.h	51;"	d
REG_c	libavutil/x86_cpu.h	31;"	d
REG_c	libavutil/x86_cpu.h	52;"	d
REG_d	libavutil/x86_cpu.h	32;"	d
REG_d	libavutil/x86_cpu.h	53;"	d
REGa	libavutil/x86_cpu.h	41;"	d
REGa	libavutil/x86_cpu.h	62;"	d
REGb	libavutil/x86_cpu.h	42;"	d
REGb	libavutil/x86_cpu.h	63;"	d
REGc	libavutil/x86_cpu.h	43;"	d
REGc	libavutil/x86_cpu.h	64;"	d
REGd	libavutil/x86_cpu.h	44;"	d
REGd	libavutil/x86_cpu.h	65;"	d
RELOC	libavcodec/bfin/config_bfin.h	58;"	d
RELOC	libavcodec/bfin/config_bfin.h	60;"	d
REMOVE_LOGO_LOAD_PGM_ERROR_MESSAGE	libavfilter/libmpcodecs/vf_remove_logo.c	513;"	d	file:
RENAME	libavcodec/mpegaudiodec.c	104;"	d	file:
RENAME	libavcodec/mpegaudiodec.c	94;"	d	file:
RENAME	libavcodec/mpegaudiodsp_template.c	31;"	d	file:
RENAME	libavcodec/mpegaudiodsp_template.c	46;"	d	file:
RENAME	libavcodec/x86/mpegvideo_mmx.c	599;"	d	file:
RENAME	libavcodec/x86/mpegvideo_mmx.c	605;"	d	file:
RENAME	libavcodec/x86/mpegvideo_mmx.c	607;"	d	file:
RENAME	libavcodec/x86/mpegvideo_mmx.c	613;"	d	file:
RENAME	libavcodec/x86/mpegvideo_mmx.c	615;"	d	file:
RENAME	libavcodec/x86/mpegvideo_mmx.c	622;"	d	file:
RENAME	libavcodec/x86/mpegvideo_mmx.c	624;"	d	file:
RENAME	libavfilter/x86/yadif.c	32;"	d	file:
RENAME	libavfilter/x86/yadif.c	33;"	d	file:
RENAME	libavfilter/x86/yadif.c	39;"	d	file:
RENAME	libavfilter/x86/yadif.c	40;"	d	file:
RENAME	libavfilter/x86/yadif.c	46;"	d	file:
RENAME	libavfilter/x86/yadif.c	47;"	d	file:
RENAME	libpostproc/postprocess.c	602;"	d	file:
RENAME	libpostproc/postprocess.c	607;"	d	file:
RENAME	libpostproc/postprocess.c	610;"	d	file:
RENAME	libpostproc/postprocess.c	617;"	d	file:
RENAME	libpostproc/postprocess.c	620;"	d	file:
RENAME	libpostproc/postprocess.c	626;"	d	file:
RENAME	libpostproc/postprocess.c	631;"	d	file:
RENAME	libpostproc/postprocess.c	637;"	d	file:
RENAME	libpostproc/postprocess.c	644;"	d	file:
RENAME	libswscale/x86/rgb2rgb.c	102;"	d	file:
RENAME	libswscale/x86/rgb2rgb.c	105;"	d	file:
RENAME	libswscale/x86/rgb2rgb.c	109;"	d	file:
RENAME	libswscale/x86/rgb2rgb.c	116;"	d	file:
RENAME	libswscale/x86/rgb2rgb.c	90;"	d	file:
RENAME	libswscale/x86/rgb2rgb.c	91;"	d	file:
RENAME	libswscale/x86/rgb2rgb.c	95;"	d	file:
RENAME	libswscale/x86/rgb2rgb.c	98;"	d	file:
RENAME	libswscale/x86/swscale_mmx.c	86;"	d	file:
RENAME	libswscale/x86/swscale_mmx.c	88;"	d	file:
RENAME	libswscale/x86/swscale_mmx.c	94;"	d	file:
RENAME	libswscale/x86/swscale_mmx.c	97;"	d	file:
RENAME	libswscale/x86/yuv2rgb_mmx.c	51;"	d	file:
RENAME	libswscale/x86/yuv2rgb_mmx.c	54;"	d	file:
RENAME	libswscale/x86/yuv2rgb_mmx.c	60;"	d	file:
RENAME	libswscale/x86/yuv2rgb_mmx.c	63;"	d	file:
RENAMEl	libavcodec/x86/mpegvideo_mmx.c	600;"	d	file:
RENAMEl	libavcodec/x86/mpegvideo_mmx.c	606;"	d	file:
RENAMEl	libavcodec/x86/mpegvideo_mmx.c	608;"	d	file:
RENAMEl	libavcodec/x86/mpegvideo_mmx.c	614;"	d	file:
RENAMEl	libavcodec/x86/mpegvideo_mmx.c	616;"	d	file:
RENAMEl	libavcodec/x86/mpegvideo_mmx.c	623;"	d	file:
RENAMEl	libavcodec/x86/mpegvideo_mmx.c	625;"	d	file:
REORDER_DUMMY	libavdevice/alsa-audio-common.c	128;"	d	file:
REORDER_OUT_50	libavdevice/alsa-audio-common.c	63;"	d	file:
REORDER_OUT_51	libavdevice/alsa-audio-common.c	80;"	d	file:
REORDER_OUT_71	libavdevice/alsa-audio-common.c	98;"	d	file:
REPT4	libavcodec/ppc/vp8dsp_altivec.c	29;"	d	file:
REQUANT_CORE	libavfilter/libmpcodecs/vf_spp.c	159;"	d	file:
REQUANT_CORE	libavfilter/libmpcodecs/vf_spp.c	227;"	d	file:
REQUANT_CORE	libavfilter/libmpcodecs/vf_spp.c	228;"	d	file:
RESET	Makefile	/^define RESET$/;"	m
RESIDUE_BLOCK	libavcodec/bink.c	/^    RESIDUE_BLOCK,  \/\/\/< motion block with some difference added$/;"	e	enum:BlockTypes	file:
RESIDUE_PART_SIZE	libavcodec/vorbisenc.c	137;"	d	file:
RESIDUE_SIZE	libavcodec/vorbisenc.c	136;"	d	file:
RESTORE_SIGN	libavcodec/x86/mpegvideo_mmx_template.c	30;"	d	file:
RESTORE_SIGN	libavcodec/x86/mpegvideo_mmx_template.c	81;"	d	file:
RESTORE_SIGN	libavcodec/x86/mpegvideo_mmx_template.c	89;"	d	file:
RESULT	libavcodec/x86/mlpdsp.c	101;"	d	file:
RESULT	libavcodec/x86/mlpdsp.c	75;"	d	file:
RESULT32	libavcodec/x86/mlpdsp.c	102;"	d	file:
RESULT32	libavcodec/x86/mlpdsp.c	76;"	d	file:
RET	libswscale/utils.c	66;"	d	file:
RET_COPY_AGAIN	libavcodec/crystalhd.c	/^    RET_COPY_AGAIN      = 1,$/;"	e	enum:__anon267	file:
RET_COPY_NEXT_FIELD	libavcodec/crystalhd.c	/^    RET_COPY_NEXT_FIELD = 3,$/;"	e	enum:__anon267	file:
RET_ERROR	libavcodec/crystalhd.c	/^    RET_ERROR           = -1,$/;"	e	enum:__anon267	file:
RET_OK	libavcodec/crystalhd.c	/^    RET_OK              = 0,$/;"	e	enum:__anon267	file:
RET_SKIP_NEXT_COPY	libavcodec/crystalhd.c	/^    RET_SKIP_NEXT_COPY  = 2,$/;"	e	enum:__anon267	file:
RGB2YUV_SHIFT	libswscale/rgb2rgb.c	97;"	d	file:
RGB2YUV_SHIFT	libswscale/swscale.c	72;"	d	file:
RGB2YUV_SHIFT	libswscale/swscale_unscaled.c	37;"	d	file:
RGB2YUV_SHIFT	libswscale/x86/rgb2rgb.c	72;"	d	file:
RGBA	libavcodec/dvbsubdec.c	153;"	d	file:
RGBA	libavcodec/pgssubdec.c	33;"	d	file:
RGBA_IN	ffplay.c	405;"	d	file:
RGB_FORMATS	libavfilter/vf_lut.c	148;"	d	file:
RGB_PACK16	libswscale/x86/yuv2rgb_template.c	159;"	d	file:
RGB_PACK24	libswscale/x86/yuv2rgb_template.c	240;"	d	file:
RGB_PACK24_B	libswscale/x86/yuv2rgb_template.c	261;"	d	file:
RGB_PACK24_B	libswscale/x86/yuv2rgb_template.c	262;"	d	file:
RGB_PACK24_B	libswscale/x86/yuv2rgb_template.c	284;"	d	file:
RGB_PACK24_B	libswscale/x86/yuv2rgb_template.c	285;"	d	file:
RGB_PACK32	libswscale/x86/yuv2rgb_template.c	344;"	d	file:
RGB_PACK_INTERLEAVE	libswscale/x86/yuv2rgb_template.c	118;"	d	file:
RGB_TO_U	libavutil/colorspace.h	91;"	d
RGB_TO_U_CCIR	libavutil/colorspace.h	103;"	d
RGB_TO_V	libavutil/colorspace.h	95;"	d
RGB_TO_V_CCIR	libavutil/colorspace.h	107;"	d
RGB_TO_Y	libavutil/colorspace.h	87;"	d
RGB_TO_Y_CCIR	libavutil/colorspace.h	99;"	d
RICEContext	libavcodec/loco.c	/^typedef struct RICEContext{$/;"	s	file:
RICEContext	libavcodec/loco.c	/^}RICEContext;$/;"	t	typeref:struct:RICEContext	file:
RIFF_HEADER_SIZE	libavformat/psxstr.c	42;"	d	file:
RIFF_TAG	libavformat/4xm.c	33;"	d	file:
RIFF_TAG	libavformat/psxstr.c	35;"	d	file:
RIGHT	libavcodec/cdgraphics.c	171;"	d	file:
RIGHT	libavformat/iff.c	60;"	d	file:
RIGHT_EXTEND	libavcodec/x86/dsputil_yasm.asm	/^RIGHT_EXTEND      %1$/;"	l
RIGHT_SHIFT	libavcodec/jfdctfst.c	78;"	d	file:
RIGHT_SHIFT	libavcodec/jfdctint.c	72;"	d	file:
RIGHT_SHIFT	libavcodec/jrevdct.c	77;"	d	file:
RIGHT_SIDE	libavcodec/sonic.c	44;"	d	file:
RLE_V2_CHECK	libavcodec/indeo3.c	198;"	d	file:
RLE_V3_CHECK	libavcodec/indeo3.c	176;"	d	file:
RLTable	libavcodec/rl.h	/^typedef struct RLTable {$/;"	s
RLTable	libavcodec/rl.h	/^} RLTable;$/;"	t	typeref:struct:RLTable
RLV2_TAG	libavformat/rl2.c	42;"	d	file:
RLV3_TAG	libavformat/rl2.c	43;"	d	file:
RL_VLC_ELEM	libavcodec/get_bits.h	/^typedef struct RL_VLC_ELEM {$/;"	s
RL_VLC_ELEM	libavcodec/get_bits.h	/^} RL_VLC_ELEM;$/;"	t	typeref:struct:RL_VLC_ELEM
RMDemuxContext	libavformat/rmdec.c	/^} RMDemuxContext;$/;"	t	typeref:struct:__anon436	file:
RMMuxContext	libavformat/rmenc.c	/^} RMMuxContext;$/;"	t	typeref:struct:__anon383	file:
RMStream	libavformat/rm.h	/^typedef struct RMStream RMStream;$/;"	t	typeref:struct:RMStream
RMStream	libavformat/rmdec.c	/^struct RMStream {$/;"	s	file:
RND_FRW_ROW	libavcodec/x86/fdct_mmx.c	51;"	d	file:
RND_FRW_ROW	libavcodec/x86/idct_mmx_xvid.c	60;"	d	file:
RND_INV_COL	libavcodec/x86/idct_mmx_xvid.c	54;"	d	file:
RND_INV_CORR	libavcodec/x86/idct_mmx_xvid.c	55;"	d	file:
RND_INV_ROW	libavcodec/x86/idct_mmx_xvid.c	53;"	d	file:
RN_SHIFT	libavcodec/simple_idct.c	514;"	d	file:
ROQDPCMContext	libavcodec/roqaudioenc.c	/^} ROQDPCMContext;$/;"	t	typeref:struct:__anon165	file:
ROQ_FIRST_FRAME_SIZE	libavcodec/roqaudioenc.c	28;"	d	file:
ROQ_FRAME_SIZE	libavcodec/roqaudioenc.c	29;"	d	file:
ROQ_LAMBDA_SCALE	libavcodec/roqvideoenc.c	75;"	d	file:
ROT	libavutil/aes.c	73;"	d	file:
ROTATE	libavutil/pca.c	141;"	d	file:
ROUND	libavcodec/x86/idct_sse2_xvid.c	148;"	d	file:
ROUND256	libavutil/sha.c	166;"	d	file:
ROUND256_0_TO_15	libavutil/sha.c	172;"	d	file:
ROUND256_16_TO_63	libavutil/sha.c	176;"	d	file:
ROUNDED_DIV	libavutil/common.h	49;"	d
ROUNDER_0	libavcodec/ps2/idct_mmi.c	41;"	d	file:
ROUNDER_1	libavcodec/ps2/idct_mmi.c	42;"	d	file:
ROW	libavcodec/h264pred_template.c	701;"	d	file:
ROW	libavcodec/h264pred_template.c	705;"	d	file:
ROW0	libavcodec/x86/idct_sse2_xvid.c	110;"	d	file:
ROW0	libavcodec/x86/idct_sse2_xvid.c	128;"	d	file:
ROW0_MASK	libavcodec/simple_idct.c	70;"	d	file:
ROW1	libavcodec/x86/idct_sse2_xvid.c	100;"	d	file:
ROW2	libavcodec/x86/idct_sse2_xvid.c	112;"	d	file:
ROW2	libavcodec/x86/idct_sse2_xvid.c	130;"	d	file:
ROW3	libavcodec/x86/idct_sse2_xvid.c	101;"	d	file:
ROW4	libavcodec/x86/idct_sse2_xvid.c	114;"	d	file:
ROW4	libavcodec/x86/idct_sse2_xvid.c	132;"	d	file:
ROW5	libavcodec/x86/idct_sse2_xvid.c	102;"	d	file:
ROW6	libavcodec/x86/idct_sse2_xvid.c	116;"	d	file:
ROW6	libavcodec/x86/idct_sse2_xvid.c	134;"	d	file:
ROW7	libavcodec/x86/idct_sse2_xvid.c	103;"	d	file:
ROW_IDCT	libavcodec/x86/simple_idct_mmx.c	635;"	d	file:
ROW_SHIFT	libavcodec/alpha/simple_idct_alpha.c	43;"	d	file:
ROW_SHIFT	libavcodec/arm/simple_idct_arm.S	/^#define ROW_SHIFT 11$/;"	d
ROW_SHIFT	libavcodec/arm/simple_idct_armv5te.S	/^#define ROW_SHIFT 11$/;"	d
ROW_SHIFT	libavcodec/arm/simple_idct_armv6.S	/^#define ROW_SHIFT 11$/;"	d
ROW_SHIFT	libavcodec/arm/simple_idct_neon.S	/^#define ROW_SHIFT 11$/;"	d
ROW_SHIFT	libavcodec/simple_idct.c	55;"	d	file:
ROW_SHIFT	libavcodec/x86/idct_mmx.c	29;"	d	file:
ROW_SHIFT	libavcodec/x86/idct_mmx.c	589;"	d	file:
ROW_SHIFT	libavcodec/x86/idct_sse2_xvid.c	53;"	d	file:
ROW_SHIFT	libavcodec/x86/simple_idct_mmx.c	49;"	d	file:
ROW_SHIFT2MSHW	libavcodec/arm/simple_idct_arm.S	/^#define ROW_SHIFT2MSHW (16-11)$/;"	d
ROW_SHIFTED_1	libavcodec/arm/simple_idct_arm.S	/^#define ROW_SHIFTED_1 1024 \/* 1<< (ROW_SHIFT-1) *\/$/;"	d
RPLContext	libavformat/rpl.c	/^typedef struct RPLContext {$/;"	s	file:
RPLContext	libavformat/rpl.c	/^} RPLContext;$/;"	t	typeref:struct:RPLContext	file:
RPL_LINE_LENGTH	libavformat/rpl.c	31;"	d	file:
RPL_SIGNATURE	libavformat/rpl.c	27;"	d	file:
RPL_SIGNATURE_SIZE	libavformat/rpl.c	28;"	d	file:
RS	libavcodec/h264.c	173;"	d	file:
RSCALE	libavcodec/mdct.c	35;"	d	file:
RSCALE	libavcodec/mdct.c	37;"	d	file:
RSHIFT	libavutil/common.h	47;"	d
RSO_HEADER_SIZE	libavformat/rso.h	27;"	d
RST0	libavcodec/mjpeg.h	/^    RST0  = 0xd0,$/;"	e	enum:__anon218
RST1	libavcodec/mjpeg.h	/^    RST1  = 0xd1,$/;"	e	enum:__anon218
RST2	libavcodec/mjpeg.h	/^    RST2  = 0xd2,$/;"	e	enum:__anon218
RST3	libavcodec/mjpeg.h	/^    RST3  = 0xd3,$/;"	e	enum:__anon218
RST4	libavcodec/mjpeg.h	/^    RST4  = 0xd4,$/;"	e	enum:__anon218
RST5	libavcodec/mjpeg.h	/^    RST5  = 0xd5,$/;"	e	enum:__anon218
RST6	libavcodec/mjpeg.h	/^    RST6  = 0xd6,$/;"	e	enum:__anon218
RST7	libavcodec/mjpeg.h	/^    RST7  = 0xd7,$/;"	e	enum:__anon218
RTCPType	libavformat/rtp.h	/^enum RTCPType {$/;"	g
RTCP_APP	libavformat/rtp.h	/^    RTCP_APP   \/\/ 204$/;"	e	enum:RTCPType
RTCP_BYE	libavformat/rtp.h	/^    RTCP_BYE,  \/\/ 203$/;"	e	enum:RTCPType
RTCP_RR	libavformat/rtp.h	/^    RTCP_RR,   \/\/ 201$/;"	e	enum:RTCPType
RTCP_SDES	libavformat/rtp.h	/^    RTCP_SDES, \/\/ 202$/;"	e	enum:RTCPType
RTCP_SR	libavformat/rtp.h	/^    RTCP_SR     = 200,$/;"	e	enum:RTCPType
RTCP_SR_SIZE	libavformat/rtpenc.c	44;"	d	file:
RTCP_TX_RATIO_DEN	libavformat/rtp.h	77;"	d
RTCP_TX_RATIO_NUM	libavformat/rtp.h	76;"	d
RTJpegContext	libavcodec/rtjpeg.h	/^} RTJpegContext;$/;"	t	typeref:struct:__anon172
RTMPChannel	libavformat/rtmppkt.h	/^enum RTMPChannel {$/;"	g
RTMPContext	libavformat/rtmpproto.c	/^typedef struct RTMPContext {$/;"	s	file:
RTMPContext	libavformat/rtmpproto.c	/^} RTMPContext;$/;"	t	typeref:struct:RTMPContext	file:
RTMPPacket	libavformat/rtmppkt.h	/^typedef struct RTMPPacket {$/;"	s
RTMPPacket	libavformat/rtmppkt.h	/^} RTMPPacket;$/;"	t	typeref:struct:RTMPPacket
RTMPPacketSize	libavformat/rtmppkt.h	/^enum RTMPPacketSize {$/;"	g
RTMPPacketType	libavformat/rtmppkt.h	/^typedef enum RTMPPacketType {$/;"	g
RTMPPacketType	libavformat/rtmppkt.h	/^} RTMPPacketType;$/;"	t	typeref:enum:RTMPPacketType
RTMP_AUDIO_CHANNEL	libavformat/rtmppkt.h	/^    RTMP_AUDIO_CHANNEL,         \/\/\/< channel for audio data$/;"	e	enum:RTMPChannel
RTMP_CHANNELS	libavformat/rtmppkt.h	29;"	d
RTMP_CLIENT_PLATFORM	libavformat/rtmp.h	35;"	d
RTMP_CLIENT_VER1	libavformat/rtmp.h	36;"	d
RTMP_CLIENT_VER2	libavformat/rtmp.h	37;"	d
RTMP_CLIENT_VER3	libavformat/rtmp.h	38;"	d
RTMP_CLIENT_VER4	libavformat/rtmp.h	39;"	d
RTMP_DEFAULT_PORT	libavformat/rtmp.h	27;"	d
RTMP_HANDSHAKE_PACKET_SIZE	libavformat/rtmp.h	29;"	d
RTMP_NETWORK_CHANNEL	libavformat/rtmppkt.h	/^    RTMP_NETWORK_CHANNEL = 2,   \/\/\/< channel for network-related messages (bandwidth report, ping, etc)$/;"	e	enum:RTMPChannel
RTMP_PS_EIGHTBYTES	libavformat/rtmppkt.h	/^    RTMP_PS_EIGHTBYTES,      \/\/\/< packet has 8-byte header$/;"	e	enum:RTMPPacketSize
RTMP_PS_FOURBYTES	libavformat/rtmppkt.h	/^    RTMP_PS_FOURBYTES,       \/\/\/< packet has 4-byte header$/;"	e	enum:RTMPPacketSize
RTMP_PS_ONEBYTE	libavformat/rtmppkt.h	/^    RTMP_PS_ONEBYTE          \/\/\/< packet is really a next chunk of a packet$/;"	e	enum:RTMPPacketSize
RTMP_PS_TWELVEBYTES	libavformat/rtmppkt.h	/^    RTMP_PS_TWELVEBYTES = 0, \/\/\/< packet has 12-byte header$/;"	e	enum:RTMPPacketSize
RTMP_PT_AUDIO	libavformat/rtmppkt.h	/^    RTMP_PT_AUDIO        =  8,  \/\/\/< audio packet$/;"	e	enum:RTMPPacketType
RTMP_PT_BYTES_READ	libavformat/rtmppkt.h	/^    RTMP_PT_BYTES_READ   =  3,  \/\/\/< number of bytes read$/;"	e	enum:RTMPPacketType
RTMP_PT_CHUNK_SIZE	libavformat/rtmppkt.h	/^    RTMP_PT_CHUNK_SIZE   =  1,  \/\/\/< chunk size change$/;"	e	enum:RTMPPacketType
RTMP_PT_CLIENT_BW	libavformat/rtmppkt.h	/^    RTMP_PT_CLIENT_BW,          \/\/\/< client bandwidth$/;"	e	enum:RTMPPacketType
RTMP_PT_FLEX_MESSAGE	libavformat/rtmppkt.h	/^    RTMP_PT_FLEX_MESSAGE,       \/\/\/< Flex shared message$/;"	e	enum:RTMPPacketType
RTMP_PT_FLEX_OBJECT	libavformat/rtmppkt.h	/^    RTMP_PT_FLEX_OBJECT,        \/\/\/< Flex shared object$/;"	e	enum:RTMPPacketType
RTMP_PT_FLEX_STREAM	libavformat/rtmppkt.h	/^    RTMP_PT_FLEX_STREAM  = 15,  \/\/\/< Flex shared stream$/;"	e	enum:RTMPPacketType
RTMP_PT_INVOKE	libavformat/rtmppkt.h	/^    RTMP_PT_INVOKE,             \/\/\/< invoke some stream action$/;"	e	enum:RTMPPacketType
RTMP_PT_METADATA	libavformat/rtmppkt.h	/^    RTMP_PT_METADATA     = 22,  \/\/\/< FLV metadata$/;"	e	enum:RTMPPacketType
RTMP_PT_NOTIFY	libavformat/rtmppkt.h	/^    RTMP_PT_NOTIFY,             \/\/\/< some notification$/;"	e	enum:RTMPPacketType
RTMP_PT_PING	libavformat/rtmppkt.h	/^    RTMP_PT_PING,               \/\/\/< ping$/;"	e	enum:RTMPPacketType
RTMP_PT_SERVER_BW	libavformat/rtmppkt.h	/^    RTMP_PT_SERVER_BW,          \/\/\/< server bandwidth$/;"	e	enum:RTMPPacketType
RTMP_PT_SHARED_OBJ	libavformat/rtmppkt.h	/^    RTMP_PT_SHARED_OBJ,         \/\/\/< shared object$/;"	e	enum:RTMPPacketType
RTMP_PT_VIDEO	libavformat/rtmppkt.h	/^    RTMP_PT_VIDEO,              \/\/\/< video packet$/;"	e	enum:RTMPPacketType
RTMP_SOURCE_CHANNEL	libavformat/rtmppkt.h	/^    RTMP_SOURCE_CHANNEL,        \/\/\/< channel for sending a\/v to server$/;"	e	enum:RTMPChannel
RTMP_SYSTEM_CHANNEL	libavformat/rtmppkt.h	/^    RTMP_SYSTEM_CHANNEL,        \/\/\/< channel for sending server control messages$/;"	e	enum:RTMPChannel
RTMP_VIDEO_CHANNEL	libavformat/rtmppkt.h	/^    RTMP_VIDEO_CHANNEL = 8,     \/\/\/< channel for video data$/;"	e	enum:RTMPChannel
RTPContext	libavformat/rtpproto.c	/^typedef struct RTPContext {$/;"	s	file:
RTPContext	libavformat/rtpproto.c	/^} RTPContext;$/;"	t	typeref:struct:RTPContext	file:
RTPDemuxContext	libavformat/rtpdec.h	/^struct RTPDemuxContext {$/;"	s
RTPDemuxContext	libavformat/rtpdec.h	/^typedef struct RTPDemuxContext RTPDemuxContext;$/;"	t	typeref:struct:RTPDemuxContext
RTPDynamicProtocolHandler	libavformat/rtpdec.h	/^typedef struct RTPDynamicProtocolHandler_s RTPDynamicProtocolHandler;$/;"	t	typeref:struct:RTPDynamicProtocolHandler_s
RTPDynamicProtocolHandler_s	libavformat/rtpdec.h	/^struct RTPDynamicProtocolHandler_s {$/;"	s
RTPFirstDynamicPayloadHandler	libavformat/rtpdec.c	/^static RTPDynamicProtocolHandler *RTPFirstDynamicPayloadHandler= NULL;$/;"	v	file:
RTPMuxContext	libavformat/rtpenc.h	/^struct RTPMuxContext {$/;"	s
RTPMuxContext	libavformat/rtpenc.h	/^typedef struct RTPMuxContext RTPMuxContext;$/;"	t	typeref:struct:RTPMuxContext
RTPPacket	libavformat/rtpdec.h	/^typedef struct RTPPacket {$/;"	s
RTPPacket	libavformat/rtpdec.h	/^} RTPPacket;$/;"	t	typeref:struct:RTPPacket
RTPStatistics	libavformat/rtpdec.h	/^} RTPStatistics;$/;"	t	typeref:struct:__anon333
RTP_ASF_HANDLER	libavformat/rtpdec_asf.c	292;"	d	file:
RTP_FLAG_KEY	libavformat/rtpdec.h	93;"	d
RTP_FLAG_MARKER	libavformat/rtpdec.h	94;"	d
RTP_MAX_PACKET_LENGTH	libavformat/rtpdec.h	34;"	d
RTP_MAX_PACKET_SIZE	libavformat/movenc.h	32;"	d
RTP_MAX_SDES	libavformat/rtp.h	73;"	d
RTP_MIN_PACKET_LENGTH	libavformat/rtpdec.h	33;"	d
RTP_NOTS_VALUE	libavformat/rtpdec.h	38;"	d
RTP_PT_PRIVATE	libavformat/rtp.h	71;"	d
RTP_QT_HANDLER	libavformat/rtpdec_qt.c	242;"	d	file:
RTP_REORDER_QUEUE_DEFAULT_SIZE	libavformat/rtpdec.h	36;"	d
RTP_RX_BUF_SIZE	libavformat/rtpproto.c	46;"	d	file:
RTP_SEQ_MOD	libavformat/rtpdec.c	149;"	d	file:
RTP_TX_BUF_SIZE	libavformat/rtpproto.c	45;"	d	file:
RTP_VERSION	libavformat/rtp.h	72;"	d
RTP_XIPH_IDENT	libavformat/rtp.h	83;"	d
RTSPActionServerSetup	ffserver.c	/^typedef struct RTSPActionServerSetup {$/;"	s	file:
RTSPActionServerSetup	ffserver.c	/^} RTSPActionServerSetup;$/;"	t	typeref:struct:RTSPActionServerSetup	file:
RTSPClientState	libavformat/rtsp.h	/^enum RTSPClientState {$/;"	g
RTSPControlTransport	libavformat/rtsp.h	/^enum RTSPControlTransport {$/;"	g
RTSPLowerTransport	libavformat/rtsp.h	/^enum RTSPLowerTransport {$/;"	g
RTSPMessageHeader	libavformat/rtsp.h	/^typedef struct RTSPMessageHeader {$/;"	s
RTSPMessageHeader	libavformat/rtsp.h	/^} RTSPMessageHeader;$/;"	t	typeref:struct:RTSPMessageHeader
RTSPSTATE_SEND_PACKET	ffserver.c	/^    RTSPSTATE_SEND_PACKET,$/;"	e	enum:HTTPState	file:
RTSPSTATE_SEND_REPLY	ffserver.c	/^    RTSPSTATE_SEND_REPLY,$/;"	e	enum:HTTPState	file:
RTSPSTATE_WAIT_REQUEST	ffserver.c	/^    RTSPSTATE_WAIT_REQUEST,$/;"	e	enum:HTTPState	file:
RTSPServerType	libavformat/rtsp.h	/^enum RTSPServerType {$/;"	g
RTSPState	libavformat/rtsp.h	/^typedef struct RTSPState {$/;"	s
RTSPState	libavformat/rtsp.h	/^} RTSPState;$/;"	t	typeref:struct:RTSPState
RTSPStatusCode	libavformat/rtspcodes.h	/^enum RTSPStatusCode {$/;"	g
RTSPStream	libavformat/rtsp.h	/^typedef struct RTSPStream {$/;"	s
RTSPStream	libavformat/rtsp.h	/^} RTSPStream;$/;"	t	typeref:struct:RTSPStream
RTSPTransport	libavformat/rtsp.h	/^enum RTSPTransport {$/;"	g
RTSPTransportField	libavformat/rtsp.h	/^typedef struct RTSPTransportField {$/;"	s
RTSPTransportField	libavformat/rtsp.h	/^} RTSPTransportField;$/;"	t	typeref:struct:RTSPTransportField
RTSP_DEFAULT_AUDIO_SAMPLERATE	libavformat/rtsp.h	67;"	d
RTSP_DEFAULT_NB_AUDIO_CHANNELS	libavformat/rtsp.h	66;"	d
RTSP_DEFAULT_PORT	libavformat/rtsp.h	63;"	d
RTSP_LOWER_TRANSPORT_NB	libavformat/rtsp.h	/^    RTSP_LOWER_TRANSPORT_NB$/;"	e	enum:RTSPLowerTransport
RTSP_LOWER_TRANSPORT_TCP	libavformat/rtsp.h	/^    RTSP_LOWER_TRANSPORT_TCP = 1,           \/**< TCP; interleaved in RTSP *\/$/;"	e	enum:RTSPLowerTransport
RTSP_LOWER_TRANSPORT_UDP	libavformat/rtsp.h	/^    RTSP_LOWER_TRANSPORT_UDP = 0,           \/**< UDP\/unicast *\/$/;"	e	enum:RTSPLowerTransport
RTSP_LOWER_TRANSPORT_UDP_MULTICAST	libavformat/rtsp.h	/^    RTSP_LOWER_TRANSPORT_UDP_MULTICAST = 2, \/**< UDP\/multicast *\/$/;"	e	enum:RTSPLowerTransport
RTSP_MAX_TRANSPORTS	libavformat/rtsp.h	64;"	d
RTSP_MODE_PLAIN	libavformat/rtsp.h	/^    RTSP_MODE_PLAIN,   \/**< Normal RTSP *\/$/;"	e	enum:RTSPControlTransport
RTSP_MODE_TUNNEL	libavformat/rtsp.h	/^    RTSP_MODE_TUNNEL   \/**< RTSP over HTTP (tunneling) *\/$/;"	e	enum:RTSPControlTransport
RTSP_REQUEST_TIMEOUT	ffserver.c	103;"	d	file:
RTSP_RTP_PORT_MAX	libavformat/rtsp.h	69;"	d
RTSP_RTP_PORT_MIN	libavformat/rtsp.h	68;"	d
RTSP_SERVER_NB	libavformat/rtsp.h	/^    RTSP_SERVER_NB$/;"	e	enum:RTSPServerType
RTSP_SERVER_REAL	libavformat/rtsp.h	/^    RTSP_SERVER_REAL, \/**< Realmedia-style server *\/$/;"	e	enum:RTSPServerType
RTSP_SERVER_RTP	libavformat/rtsp.h	/^    RTSP_SERVER_RTP,  \/**< Standards-compliant RTP-server *\/$/;"	e	enum:RTSPServerType
RTSP_SERVER_WMS	libavformat/rtsp.h	/^    RTSP_SERVER_WMS,  \/**< Windows Media server *\/$/;"	e	enum:RTSPServerType
RTSP_STATE_IDLE	libavformat/rtsp.h	/^    RTSP_STATE_IDLE,    \/**< not initialized *\/$/;"	e	enum:RTSPClientState
RTSP_STATE_PAUSED	libavformat/rtsp.h	/^    RTSP_STATE_PAUSED,  \/**< initialized, but not receiving data *\/$/;"	e	enum:RTSPClientState
RTSP_STATE_SEEKING	libavformat/rtsp.h	/^    RTSP_STATE_SEEKING, \/**< initialized, requesting a seek *\/$/;"	e	enum:RTSPClientState
RTSP_STATE_STREAMING	libavformat/rtsp.h	/^    RTSP_STATE_STREAMING, \/**< initialized and sending\/receiving data *\/$/;"	e	enum:RTSPClientState
RTSP_STATUS_AGGREGATE	libavformat/rtspcodes.h	/^RTSP_STATUS_AGGREGATE       =459, \/**< Aggregate operation not allowed *\/$/;"	e	enum:RTSPStatusCode
RTSP_STATUS_BANDWIDTH	libavformat/rtspcodes.h	/^RTSP_STATUS_BANDWIDTH       =453, \/**< Not Enough Bandwidth *\/$/;"	e	enum:RTSPStatusCode
RTSP_STATUS_INTERNAL	libavformat/rtspcodes.h	/^RTSP_STATUS_INTERNAL        =500, \/**< Internal Server Error *\/$/;"	e	enum:RTSPStatusCode
RTSP_STATUS_METHOD	libavformat/rtspcodes.h	/^RTSP_STATUS_METHOD          =405, \/**< Method Not Allowed *\/$/;"	e	enum:RTSPStatusCode
RTSP_STATUS_OK	libavformat/rtspcodes.h	/^RTSP_STATUS_OK              =200, \/**< OK *\/$/;"	e	enum:RTSPStatusCode
RTSP_STATUS_ONLY_AGGREGATE	libavformat/rtspcodes.h	/^RTSP_STATUS_ONLY_AGGREGATE  =460, \/**< Only aggregate operation allowed *\/$/;"	e	enum:RTSPStatusCode
RTSP_STATUS_SERVICE	libavformat/rtspcodes.h	/^RTSP_STATUS_SERVICE         =503, \/**< Service Unavailable *\/$/;"	e	enum:RTSPStatusCode
RTSP_STATUS_SESSION	libavformat/rtspcodes.h	/^RTSP_STATUS_SESSION         =454, \/**< Session Not Found *\/$/;"	e	enum:RTSPStatusCode
RTSP_STATUS_STATE	libavformat/rtspcodes.h	/^RTSP_STATUS_STATE           =455, \/**< Method Not Valid in This State *\/$/;"	e	enum:RTSPStatusCode
RTSP_STATUS_TRANSPORT	libavformat/rtspcodes.h	/^RTSP_STATUS_TRANSPORT       =461, \/**< Unsupported transport *\/$/;"	e	enum:RTSPStatusCode
RTSP_STATUS_VERSION	libavformat/rtspcodes.h	/^RTSP_STATUS_VERSION         =505, \/**< RTSP Version not supported *\/$/;"	e	enum:RTSPStatusCode
RTSP_TCP_MAX_PACKET_SIZE	libavformat/rtsp.h	65;"	d
RTSP_TRANSPORT_NB	libavformat/rtsp.h	/^    RTSP_TRANSPORT_NB$/;"	e	enum:RTSPTransport
RTSP_TRANSPORT_RDT	libavformat/rtsp.h	/^    RTSP_TRANSPORT_RDT, \/**< Realmedia Data Transport *\/$/;"	e	enum:RTSPTransport
RTSP_TRANSPORT_RTP	libavformat/rtsp.h	/^    RTSP_TRANSPORT_RTP, \/**< Standards-compliant RTP *\/$/;"	e	enum:RTSPTransport
RT_BYTE_ENCODED	libavcodec/sunrast.c	28;"	d	file:
RT_FORMAT_IFF	libavcodec/sunrast.c	31;"	d	file:
RT_FORMAT_RGB	libavcodec/sunrast.c	29;"	d	file:
RT_FORMAT_TIFF	libavcodec/sunrast.c	30;"	d	file:
RT_OLD	libavcodec/sunrast.c	26;"	d	file:
RT_STANDARD	libavcodec/sunrast.c	27;"	d	file:
RU	libswscale/rgb2rgb.c	106;"	d	file:
RU	libswscale/swscale.c	81;"	d	file:
RU	libswscale/swscale_unscaled.c	46;"	d	file:
RU	libswscale/x86/rgb2rgb.c	81;"	d	file:
RULES	subdir.mak	/^define RULES$/;"	m
RUN7_VLC_BITS	libavcodec/h264.h	47;"	d
RUNTIME_GAMMA	libavcodec/xan.c	43;"	d	file:
RUN_BLOCK	libavcodec/bink.c	/^    RUN_BLOCK,      \/\/\/< block is composed from runs of colours with custom scan order$/;"	e	enum:BlockTypes	file:
RUN_VLC_BITS	libavcodec/h264.h	46;"	d
RV	libswscale/rgb2rgb.c	105;"	d	file:
RV	libswscale/swscale.c	80;"	d	file:
RV	libswscale/swscale_unscaled.c	45;"	d	file:
RV	libswscale/x86/rgb2rgb.c	80;"	d	file:
RV30_LOWPASS	libavcodec/rv30dsp.c	/^RV30_LOWPASS(put_       , op_put)$/;"	f
RV30_LOWPASS	libavcodec/rv30dsp.c	30;"	d	file:
RV30_MC	libavcodec/rv30dsp.c	210;"	d	file:
RV34DecContext	libavcodec/rv34.h	/^typedef struct RV34DecContext{$/;"	s
RV34DecContext	libavcodec/rv34.h	/^}RV34DecContext;$/;"	t	typeref:struct:RV34DecContext
RV34VLC	libavcodec/rv34.h	/^typedef struct RV34VLC{$/;"	s
RV34VLC	libavcodec/rv34.h	/^}RV34VLC;$/;"	t	typeref:struct:RV34VLC
RV34_MB_B_BACKWARD	libavcodec/rv34.h	/^    RV34_MB_B_BACKWARD,      \/\/\/< B-frame macroblock, backward prediction$/;"	e	enum:RV40BlockTypes
RV34_MB_B_BIDIR	libavcodec/rv34.h	/^    RV34_MB_B_BIDIR,         \/\/\/< Bidirectionally predicted B-frame macroblock, two motion vectors$/;"	e	enum:RV40BlockTypes
RV34_MB_B_DIRECT	libavcodec/rv34.h	/^    RV34_MB_B_DIRECT,        \/\/\/< Bidirectionally predicted B-frame macroblock, no motion vectors$/;"	e	enum:RV40BlockTypes
RV34_MB_B_FORWARD	libavcodec/rv34.h	/^    RV34_MB_B_FORWARD,       \/\/\/< B-frame macroblock, forward prediction$/;"	e	enum:RV40BlockTypes
RV34_MB_P_16x16	libavcodec/rv34.h	/^    RV34_MB_P_16x16,         \/\/\/< P-frame macroblock, one motion frame$/;"	e	enum:RV40BlockTypes
RV34_MB_P_16x8	libavcodec/rv34.h	/^    RV34_MB_P_16x8,          \/\/\/< P-frame macroblock, 16x8 motion compensation partitions$/;"	e	enum:RV40BlockTypes
RV34_MB_P_8x16	libavcodec/rv34.h	/^    RV34_MB_P_8x16,          \/\/\/< P-frame macroblock, 8x16 motion compensation partitions$/;"	e	enum:RV40BlockTypes
RV34_MB_P_8x8	libavcodec/rv34.h	/^    RV34_MB_P_8x8,           \/\/\/< P-frame macroblock, 8x8 motion compensation partitions$/;"	e	enum:RV40BlockTypes
RV34_MB_P_MIX16x16	libavcodec/rv34.h	/^    RV34_MB_P_MIX16x16,      \/\/\/< P-frame macroblock with DCs in a separate 4x4 block, one motion vector$/;"	e	enum:RV40BlockTypes
RV34_MB_SKIP	libavcodec/rv34.h	/^    RV34_MB_SKIP,            \/\/\/< Skipped block$/;"	e	enum:RV40BlockTypes
RV34_MB_TYPES	libavcodec/rv34.h	/^    RV34_MB_TYPES$/;"	e	enum:RV40BlockTypes
RV34_MB_TYPE_INTRA	libavcodec/rv34.h	/^    RV34_MB_TYPE_INTRA,      \/\/\/< Intra macroblock$/;"	e	enum:RV40BlockTypes
RV34_MB_TYPE_INTRA16x16	libavcodec/rv34.h	/^    RV34_MB_TYPE_INTRA16x16, \/\/\/< Intra macroblock with DCs in a separate 4x4 block$/;"	e	enum:RV40BlockTypes
RV40BlockPos	libavcodec/rv40.c	/^enum RV40BlockPos{$/;"	g	file:
RV40BlockTypes	libavcodec/rv34.h	/^enum RV40BlockTypes{$/;"	g
RV40_CHROMA_MC	libavcodec/rv40dsp.c	/^RV40_CHROMA_MC(put_, op_put)$/;"	f
RV40_CHROMA_MC	libavcodec/rv40dsp.c	206;"	d	file:
RV40_LOWPASS	libavcodec/rv40dsp.c	30;"	d	file:
RV40_MC	libavcodec/rv40dsp.c	103;"	d	file:
RVMapDesc	libavcodec/ivi_common.h	/^} RVMapDesc;$/;"	t	typeref:struct:__anon104
RY	libswscale/rgb2rgb.c	104;"	d	file:
RY	libswscale/swscale.c	79;"	d	file:
RY	libswscale/swscale_unscaled.c	44;"	d	file:
RY	libswscale/x86/rgb2rgb.c	79;"	d	file:
R_FIX	libavcodec/simple_idct.c	515;"	d	file:
R_SHIFT	libavcodec/simple_idct.c	519;"	d	file:
R_TABLE_TYPE	libavcodec/amr.h	29;"	d
R_TABLE_TYPE	libavcodec/amr.h	31;"	d
RangeCoder	libavcodec/rangecoder.h	/^typedef struct RangeCoder{$/;"	s
RangeCoder	libavcodec/rangecoder.h	/^}RangeCoder;$/;"	t	typeref:struct:RangeCoder
RateControlContext	libavcodec/ratecontrol.h	/^typedef struct RateControlContext{$/;"	s
RateControlContext	libavcodec/ratecontrol.h	/^}RateControlContext;$/;"	t	typeref:struct:RateControlContext
RateControlEntry	libavcodec/ratecontrol.h	/^typedef struct RateControlEntry{$/;"	s
RateControlEntry	libavcodec/ratecontrol.h	/^}RateControlEntry;$/;"	t	typeref:struct:RateControlEntry
RawAudioDemuxerContext	libavformat/rawdec.h	/^typedef struct RawAudioDemuxerContext {$/;"	s
RawAudioDemuxerContext	libavformat/rawdec.h	/^} RawAudioDemuxerContext;$/;"	t	typeref:struct:RawAudioDemuxerContext
RawDVContext	libavformat/dv.c	/^typedef struct RawDVContext {$/;"	s	file:
RawDVContext	libavformat/dv.c	/^} RawDVContext;$/;"	t	typeref:struct:RawDVContext	file:
RawDataBlockType	libavcodec/aac.h	/^enum RawDataBlockType {$/;"	g
RawVideoContext	libavcodec/rawdec.c	/^typedef struct RawVideoContext {$/;"	s	file:
RawVideoContext	libavcodec/rawdec.c	/^} RawVideoContext;$/;"	t	typeref:struct:RawVideoContext	file:
RcOverride	libavcodec/avcodec.h	/^typedef struct RcOverride{$/;"	s
RcOverride	libavcodec/avcodec.h	/^} RcOverride;$/;"	t	typeref:struct:RcOverride
ReSampleContext	libavcodec/avcodec.h	/^typedef struct ReSampleContext ReSampleContext;$/;"	t	typeref:struct:ReSampleContext
ReSampleContext	libavcodec/resample.c	/^struct ReSampleContext {$/;"	s	file:
RedirType	ffserver.c	/^enum RedirType {$/;"	g	file:
Results	libswscale/swscale-test.c	/^struct Results {$/;"	s	file:
RiceContext	libavcodec/alacenc.c	/^typedef struct RiceContext {$/;"	s	file:
RiceContext	libavcodec/alacenc.c	/^} RiceContext;$/;"	t	typeref:struct:RiceContext	file:
RiceContext	libavcodec/flacenc.c	/^typedef struct RiceContext {$/;"	s	file:
RiceContext	libavcodec/flacenc.c	/^} RiceContext;$/;"	t	typeref:struct:RiceContext	file:
Rl2Context	libavcodec/rl2.c	/^typedef struct Rl2Context {$/;"	s	file:
Rl2Context	libavcodec/rl2.c	/^} Rl2Context;$/;"	t	typeref:struct:Rl2Context	file:
Rl2DemuxContext	libavformat/rl2.c	/^typedef struct Rl2DemuxContext {$/;"	s	file:
Rl2DemuxContext	libavformat/rl2.c	/^} Rl2DemuxContext;$/;"	t	typeref:struct:Rl2DemuxContext	file:
RoQ_AUDIO_SAMPLE_RATE	libavformat/idroqdec.c	35;"	d	file:
RoQ_CHUNKS_TO_SCAN	libavformat/idroqdec.c	36;"	d	file:
RoQ_CHUNK_PREAMBLE_SIZE	libavformat/idroqdec.c	34;"	d	file:
RoQ_ID_CCC	libavcodec/roqvideo.h	86;"	d
RoQ_ID_FCC	libavcodec/roqvideo.h	84;"	d
RoQ_ID_MOT	libavcodec/roqvideo.h	83;"	d
RoQ_ID_SLD	libavcodec/roqvideo.h	85;"	d
RoQ_INFO	libavcodec/roqvideo.h	77;"	d
RoQ_INFO	libavformat/idroqdec.c	38;"	d	file:
RoQ_MAGIC_NUMBER	libavformat/idroqdec.c	33;"	d	file:
RoQ_QUAD_CODEBOOK	libavcodec/roqvideo.h	78;"	d
RoQ_QUAD_CODEBOOK	libavformat/idroqdec.c	39;"	d	file:
RoQ_QUAD_VQ	libavcodec/roqvideo.h	79;"	d
RoQ_QUAD_VQ	libavformat/idroqdec.c	40;"	d	file:
RoQ_SOUND_MONO	libavcodec/roqvideo.h	80;"	d
RoQ_SOUND_MONO	libavformat/idroqdec.c	41;"	d	file:
RoQ_SOUND_STEREO	libavcodec/roqvideo.h	81;"	d
RoQ_SOUND_STEREO	libavformat/idroqdec.c	42;"	d	file:
RoqCodebooks	libavcodec/roqvideoenc.c	/^} RoqCodebooks;$/;"	t	typeref:struct:__anon74	file:
RoqContext	libavcodec/roqvideo.h	/^typedef struct RoqContext {$/;"	s
RoqContext	libavcodec/roqvideo.h	/^} RoqContext;$/;"	t	typeref:struct:RoqContext
RoqDemuxContext	libavformat/idroqdec.c	/^typedef struct RoqDemuxContext {$/;"	s	file:
RoqDemuxContext	libavformat/idroqdec.c	/^} RoqDemuxContext;$/;"	t	typeref:struct:RoqDemuxContext	file:
RoqTempData	libavcodec/roqvideoenc.c	/^typedef struct RoqTempData$/;"	s	file:
RoqTempdata	libavcodec/roqvideoenc.c	/^} RoqTempdata;$/;"	t	typeref:struct:RoqTempData	file:
RpzaContext	libavcodec/rpza.c	/^typedef struct RpzaContext {$/;"	s	file:
RpzaContext	libavcodec/rpza.c	/^} RpzaContext;$/;"	t	typeref:struct:RpzaContext	file:
S	libavcodec/options.c	473;"	d	file:
S	libavcodec/options.c	64;"	d	file:
S	libavcodec/x86/fdct_mmx.c	287;"	d	file:
S	libavfilter/libmpcodecs/vf_ow.c	62;"	d	file:
S	libavfilter/libmpcodecs/vf_ow.c	93;"	d	file:
S	libavutil/md5.c	/^static const uint8_t S[4][4] = {$/;"	v	file:
SAB_CHECK_MV	libavcodec/motion_est_template.c	795;"	d	file:
SAME_HEADER_MASK	libavcodec/mpegaudio_parser.c	37;"	d	file:
SAMPLES	config.mak	/^SAMPLES:=$(FATE_SAMPLES)$/;"	m
SAMPLES	libavformat/timefilter.c	88;"	d	file:
SAMPLES_BUF_SIZE	libavcodec/mpegaudioenc.c	39;"	d	file:
SAMPLES_NEEDED	libavcodec/qdm2.c	73;"	d	file:
SAMPLES_NEEDED_2	libavcodec/qdm2.c	76;"	d	file:
SAMPLES_PER_BAND	libavcodec/mpc.h	40;"	d
SAMPLES_PER_BAND	libavcodec/mpc7.c	39;"	d	file:
SAMPLE_ARRAY_SIZE	ffplay.c	81;"	d	file:
SAMPLE_CORRECTION_PERCENT_MAX	ffplay.c	75;"	d	file:
SAMPLE_FACTOR	libavcodec/sonic.c	72;"	d	file:
SAMPLE_FMT_DBL	libavcodec/avcodec.h	371;"	d
SAMPLE_FMT_FLT	libavcodec/avcodec.h	370;"	d
SAMPLE_FMT_NB	libavcodec/avcodec.h	372;"	d
SAMPLE_FMT_NONE	libavcodec/avcodec.h	366;"	d
SAMPLE_FMT_S16	libavcodec/avcodec.h	368;"	d
SAMPLE_FMT_S32	libavcodec/avcodec.h	369;"	d
SAMPLE_FMT_U8	libavcodec/avcodec.h	367;"	d
SAMPLE_SHIFT	libavcodec/sonic.c	70;"	d	file:
SANE_NB_CHANNELS	libavcodec/utils.c	559;"	d	file:
SAPState	libavformat/sapdec.c	/^struct SAPState {$/;"	s	file:
SAPState	libavformat/sapenc.c	/^struct SAPState {$/;"	s	file:
SAVE_SIGN	libavcodec/x86/mpegvideo_mmx_template.c	29;"	d	file:
SAVE_SIGN	libavcodec/x86/mpegvideo_mmx_template.c	78;"	d	file:
SAVE_SIGN	libavcodec/x86/mpegvideo_mmx_template.c	84;"	d	file:
SAudFlags	libavformat/smacker.c	/^enum SAudFlags {$/;"	g	file:
SBLIMIT	libavcodec/mpegaudio.h	43;"	d
SBRData	libavcodec/sbr.h	/^} SBRData;$/;"	t	typeref:struct:__anon56
SBR_INIT_VLC_STATIC	libavcodec/aacsbr.c	80;"	d	file:
SBR_SYNTHESIS_BUF_SIZE	libavcodec/sbr.h	54;"	d
SBR_VLC_ROW	libavcodec/aacsbr.c	86;"	d	file:
SBUTTERFLY	libavcodec/x86/dsputil_mmx.h	87;"	d
SB_ALLOCATED	libavcodec/mpegaudioenc.c	497;"	d	file:
SB_DITHERING_NOISE	libavcodec/qdm2.c	69;"	d	file:
SB_FULLY_CODED	libavcodec/vp3.c	59;"	d	file:
SB_NOMORE	libavcodec/mpegaudioenc.c	498;"	d	file:
SB_NOTALLOCATED	libavcodec/mpegaudioenc.c	496;"	d	file:
SB_NOT_CODED	libavcodec/vp3.c	57;"	d	file:
SB_PARTIALLY_CODED	libavcodec/vp3.c	58;"	d	file:
SC	libavfilter/libmpcodecs/vf_unsharp.c	/^    uint32_t *SC[MAX_MATRIX_SIZE-1];$/;"	m	struct:FilterParam	file:
SCALARPRODUCT	libavcodec/x86/dsputil_yasm.asm	/^SCALARPRODUCT mmx2$/;"	l
SCALARPRODUCT	libavcodec/x86/dsputil_yasm.asm	/^SCALARPRODUCT sse2$/;"	l
SCALARPRODUCT_LOOP	libavcodec/x86/dsputil_yasm.asm	/^SCALARPRODUCT_LOOP 0$/;"	l
SCALARPRODUCT_LOOP	libavcodec/x86/dsputil_yasm.asm	/^SCALARPRODUCT_LOOP 10$/;"	l
SCALARPRODUCT_LOOP	libavcodec/x86/dsputil_yasm.asm	/^SCALARPRODUCT_LOOP 12$/;"	l
SCALARPRODUCT_LOOP	libavcodec/x86/dsputil_yasm.asm	/^SCALARPRODUCT_LOOP 14$/;"	l
SCALARPRODUCT_LOOP	libavcodec/x86/dsputil_yasm.asm	/^SCALARPRODUCT_LOOP 2$/;"	l
SCALARPRODUCT_LOOP	libavcodec/x86/dsputil_yasm.asm	/^SCALARPRODUCT_LOOP 4$/;"	l
SCALARPRODUCT_LOOP	libavcodec/x86/dsputil_yasm.asm	/^SCALARPRODUCT_LOOP 6$/;"	l
SCALARPRODUCT_LOOP	libavcodec/x86/dsputil_yasm.asm	/^SCALARPRODUCT_LOOP 8$/;"	l
SCALE	libavcodec/faandct.c	33;"	d	file:
SCALE	libavcodec/faandct.c	35;"	d	file:
SCALE1	libavcodec/adx.h	46;"	d
SCALE2	libavcodec/adx.h	47;"	d
SCALEBITS	libavutil/colorspace.h	30;"	d
SCALEBITS	tests/rotozoom.c	56;"	d	file:
SCALEBITS	tests/videogen.c	28;"	d	file:
SCALED_BLOCK	libavcodec/bink.c	/^    SCALED_BLOCK,   \/\/\/< block has size 16x16$/;"	e	enum:BlockTypes	file:
SCALED_CPY	libpostproc/postprocess_template.c	3013;"	d	file:
SCALED_CPY	libpostproc/postprocess_template.c	3080;"	d	file:
SCALEMAXDEPTH	libavcodec/wmaprodec.c	115;"	d	file:
SCALERLMAXDEPTH	libavcodec/wmaprodec.c	116;"	d	file:
SCALEROWS	libavcodec/sparc/simple_idct_vis.c	316;"	d	file:
SCALES_COUNT	libavcodec/dcahuff.h	81;"	d
SCALES_VLC_BITS	libavcodec/dcahuff.h	82;"	d
SCALEVLCBITS	libavcodec/wmaprodec.c	111;"	d	file:
SCALE_DIFF_ZERO	libavcodec/aac.h	132;"	d
SCALE_DIV_512	libavcodec/aac.h	128;"	d
SCALE_FLOAT	libavcodec/fft-internal.h	44;"	d
SCALE_GEN	libavcodec/mpegaudiodec.c	153;"	d	file:
SCALE_MAX_DIFF	libavcodec/aac.h	131;"	d
SCALE_MAX_POS	libavcodec/aac.h	130;"	d
SCALE_OFFSET	libavcodec/x86/dsputilenc_mmx.c	1053;"	d	file:
SCALE_OFFSET	libavcodec/x86/dsputilenc_mmx.c	1059;"	d	file:
SCALE_OFFSET	libavcodec/x86/dsputilenc_mmx.c	1064;"	d	file:
SCALE_OFFSET	libavcodec/x86/dsputilenc_mmx.c	1073;"	d	file:
SCALE_OFFSET	libavcodec/x86/dsputilenc_mmx.c	1080;"	d	file:
SCALE_OFFSET	libavcodec/x86/dsputilenc_mmx.c	1092;"	d	file:
SCALE_ONE_POS	libavcodec/aac.h	129;"	d
SCALE_PERM	libavcodec/dct-test.c	/^  enum formattag { NO_PERM,MMX_PERM, MMX_SIMPLE_PERM, SCALE_PERM, SSE2_PERM, PARTTRANS_PERM } format;$/;"	e	enum:algo::formattag	file:
SCDl_TAG	libavformat/electronicarts.c	44;"	d	file:
SCEl_TAG	libavformat/electronicarts.c	45;"	d	file:
SCHl_TAG	libavformat/electronicarts.c	31;"	d	file:
SC_PKT_ASF_HEADER	libavformat/mmst.c	/^    SC_PKT_ASF_HEADER               = 0x010000,\/\/ make it bigger than 0xFF in case of$/;"	e	enum:__anon340	file:
SC_PKT_ASF_MEDIA	libavformat/mmst.c	/^    SC_PKT_ASF_MEDIA                = 0x010001,\/\/ receiving false data packets.$/;"	e	enum:__anon340	file:
SC_PKT_CANCEL	libavformat/mmst.c	/^    SC_PKT_CANCEL                   = -1,$/;"	e	enum:__anon340	file:
SC_PKT_CLIENT_ACCEPTED	libavformat/mmst.c	/^    SC_PKT_CLIENT_ACCEPTED          = 0x01,$/;"	e	enum:__anon340	file:
SC_PKT_HEADER_REQUEST_ACCEPTED	libavformat/mmst.c	/^    SC_PKT_HEADER_REQUEST_ACCEPTED  = 0x11,$/;"	e	enum:__anon340	file:
SC_PKT_KEEPALIVE	libavformat/mmst.c	/^    SC_PKT_KEEPALIVE                = 0x1b,$/;"	e	enum:__anon340	file:
SC_PKT_MEDIA_FILE_DETAILS	libavformat/mmst.c	/^    SC_PKT_MEDIA_FILE_DETAILS       = 0x06,$/;"	e	enum:__anon340	file:
SC_PKT_MEDIA_PKT_FOLLOWS	libavformat/mmst.c	/^    SC_PKT_MEDIA_PKT_FOLLOWS        = 0x05,$/;"	e	enum:__anon340	file:
SC_PKT_NO_DATA	libavformat/mmst.c	/^    SC_PKT_NO_DATA                  = -2,$/;"	e	enum:__anon340	file:
SC_PKT_PASSWORD_REQUIRED	libavformat/mmst.c	/^    SC_PKT_PASSWORD_REQUIRED        = 0x1a,$/;"	e	enum:__anon340	file:
SC_PKT_PROTOCOL_ACCEPTED	libavformat/mmst.c	/^    SC_PKT_PROTOCOL_ACCEPTED        = 0x02,$/;"	e	enum:__anon340	file:
SC_PKT_PROTOCOL_FAILED	libavformat/mmst.c	/^    SC_PKT_PROTOCOL_FAILED          = 0x03,$/;"	e	enum:__anon340	file:
SC_PKT_STREAM_CHANGING	libavformat/mmst.c	/^    SC_PKT_STREAM_CHANGING          = 0x20,$/;"	e	enum:__anon340	file:
SC_PKT_STREAM_ID_ACCEPTED	libavformat/mmst.c	/^    SC_PKT_STREAM_ID_ACCEPTED       = 0x21,$/;"	e	enum:__anon340	file:
SC_PKT_STREAM_STOPPED	libavformat/mmst.c	/^    SC_PKT_STREAM_STOPPED           = 0x1e,$/;"	e	enum:__anon340	file:
SC_PKT_TIMING_TEST_REPLY	libavformat/mmst.c	/^    SC_PKT_TIMING_TEST_REPLY        = 0x15,$/;"	e	enum:__anon340	file:
SDEN_TAG	libavformat/electronicarts.c	36;"	d	file:
SDLContext	libavdevice/sdl.c	/^} SDLContext;$/;"	t	typeref:struct:__anon309	file:
SDL_AUDIO_BUFFER_SIZE	ffplay.c	65;"	d	file:
SDL_CFLAGS	config.mak	/^SDL_CFLAGS=$/;"	m
SDL_LIBS	config.mak	/^SDL_LIBS=$/;"	m
SDPParseState	libavformat/rtsp.c	/^typedef struct SDPParseState {$/;"	s	file:
SDPParseState	libavformat/rtsp.c	/^} SDPParseState;$/;"	t	typeref:struct:SDPParseState	file:
SDP_MAX_SIZE	libavformat/rtsp.c	55;"	d	file:
SDP_MAX_SIZE	libavformat/rtspenc.c	39;"	d	file:
SDT_PID	libavformat/mpegts.h	37;"	d
SDT_RETRANS_TIME	libavformat/mpegtsenc.c	194;"	d	file:
SDT_TID	libavformat/mpegts.h	42;"	d
SEAD_TAG	libavformat/electronicarts.c	32;"	d	file:
SECAM	libavdevice/bktr.c	68;"	d	file:
SECAM_HEIGHT	libavdevice/bktr.c	75;"	d	file:
SECTION	libavcodec/x86/ac3dsp.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/deinterlace.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/dsputilenc_yasm.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/h264_chromamc.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/h264_chromamc_10bit.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/h264_deblock.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/h264_deblock_10bit.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/h264_idct.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/h264_idct_10bit.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/h264_intrapred.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/h264_intrapred_10bit.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/h264_weight.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/vp3dsp.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/vp56dsp.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/vp8dsp.asm	/^SECTION .text$/;"	l
SECTION	libavcodec/x86/x86inc.asm	/^SECTION .note.GNU-stack noalloc noexec nowrite progbits$/;"	l
SECTION_RODATA	libavcodec/x86/ac3dsp.asm	/^SECTION_RODATA$/;"	l
SECTION_RODATA	libavcodec/x86/dct32_sse.asm	/^SECTION_RODATA 32$/;"	l
SECTION_RODATA	libavcodec/x86/deinterlace.asm	/^SECTION_RODATA$/;"	l
SECTION_RODATA	libavcodec/x86/dsputil_yasm.asm	/^SECTION_RODATA$/;"	l
SECTION_RODATA	libavcodec/x86/fft_mmx.asm	/^SECTION_RODATA$/;"	l
SECTION_RODATA	libavcodec/x86/h264_chromamc.asm	/^SECTION_RODATA$/;"	l
SECTION_RODATA	libavcodec/x86/h264_chromamc_10bit.asm	/^SECTION_RODATA$/;"	l
SECTION_RODATA	libavcodec/x86/h264_deblock_10bit.asm	/^SECTION_RODATA$/;"	l
SECTION_RODATA	libavcodec/x86/h264_idct.asm	/^SECTION_RODATA$/;"	l
SECTION_RODATA	libavcodec/x86/h264_idct_10bit.asm	/^SECTION_RODATA$/;"	l
SECTION_RODATA	libavcodec/x86/h264_intrapred.asm	/^SECTION_RODATA$/;"	l
SECTION_RODATA	libavcodec/x86/h264_intrapred_10bit.asm	/^SECTION_RODATA$/;"	l
SECTION_RODATA	libavcodec/x86/vp3dsp.asm	/^SECTION_RODATA$/;"	l
SECTION_RODATA	libavcodec/x86/vp8dsp.asm	/^SECTION_RODATA$/;"	l
SECTION_TEXT	libavcodec/x86/dct32_sse.asm	/^SECTION_TEXT$/;"	l
SECTION_TEXT	libavcodec/x86/dsputil_yasm.asm	/^SECTION_TEXT$/;"	l
SECTION_TEXT	libavcodec/x86/fft_mmx.asm	/^SECTION_TEXT$/;"	l
SECTION_TEXT	libavcodec/x86/fmtconvert.asm	/^SECTION_TEXT$/;"	l
SEEK_TESTS	config.mak	/^SEEK_TESTS=seek_ac3_rm seek_adpcm_ima_wav seek_adpcm_ms_wav seek_adpcm_qt_aiff seek_adpcm_swf_flv seek_adpcm_yam_wav seek_alac_m4a seek_asv1_avi seek_asv2_avi seek_dnxhd_1080i_mov seek_dnxhd_720p_dnxhd seek_dnxhd_720p_rd_dnxhd seek_dv411_dv seek_dv50_dv seek_dv_dv seek_error_mpeg4_adv_avi seek_ffv1_avi seek_flac_flac seek_flashsv_flv seek_flv_flv seek_g726_wav seek_h261_avi seek_h263_avi seek_h263p_avi seek_huffyuv_avi seek_image_bmp seek_image_jpg seek_image_pcx seek_image_pgm seek_image_ppm seek_image_sgi seek_image_tga seek_image_tiff seek_jpegls_avi seek_lavf_aif seek_lavf_al seek_lavf_asf seek_lavf_au seek_lavf_avi seek_lavf_dv seek_lavf_ffm seek_lavf_flv seek_lavf_gif seek_lavf_gxf seek_lavf_mkv seek_lavf_mmf seek_lavf_mov seek_lavf_mpg seek_lavf_mxf seek_lavf_mxf_d10 seek_lavf_nut seek_lavf_ogg seek_lavf_rm seek_lavf_swf seek_lavf_ts seek_lavf_ul seek_lavf_voc seek_lavf_wav seek_lavf_y4m seek_ljpeg_avi seek_mjpeg_avi seek_mp2_mp2 seek_mpeg1_mpg seek_mpeg1b_mpg seek_mpeg2_422_mpg seek_mpeg2_mpg seek_mpeg2i_mpg seek_mpeg2ivlc_qprd_mpg seek_mpeg2reuse_mpg seek_mpeg2thread_mpg seek_mpeg2threadivlc_mpg seek_mpeg4_adap_avi seek_mpeg4_adv_avi seek_mpeg4_nr_avi seek_mpeg4_qprd_avi seek_mpeg4_rc_avi seek_mpeg4_thread_avi seek_msmpeg4_avi seek_msmpeg4v2_avi seek_odivx_mp4 seek_pbmpipe_pbm seek_pcm_alaw_wav seek_pcm_f32be_au seek_pcm_f32le_wav seek_pcm_f64be_au seek_pcm_f64le_wav seek_pcm_mulaw_wav seek_pcm_s16be_mkv seek_pcm_s16be_mov seek_pcm_s16le_mkv seek_pcm_s16le_wav seek_pcm_s24be_mov seek_pcm_s24daud_302 seek_pcm_s24le_wav seek_pcm_s32be_mov seek_pcm_s32le_wav seek_pcm_s8_mov seek_pcm_u8_wav seek_pcm_zork_wav seek_pgmpipe_pgm seek_ppmpipe_ppm seek_rgb_avi seek_roqav_roq seek_rv10_rm seek_rv20_rm seek_snow53_avi seek_snow_avi seek_svq1_mov seek_wmav1_asf seek_wmav2_asf seek_wmv1_avi seek_wmv2_avi seek_yuv_avi $/;"	m
SEEK_TO_DATA	libavformat/wtvdec.c	/^    SEEK_TO_DATA = 0,$/;"	e	enum:__anon324	file:
SEEK_TO_PTS	libavformat/wtvdec.c	/^    SEEK_TO_PTS,$/;"	e	enum:__anon324	file:
SEEN_TAG	libavformat/electronicarts.c	37;"	d	file:
SEG_MASK	libavcodec/pcm_tablegen.h	35;"	d
SEG_SHIFT	libavcodec/pcm_tablegen.h	34;"	d
SEI_BUFFERING_PERIOD	libavcodec/h264.h	/^    SEI_BUFFERING_PERIOD             =  0, \/\/\/< buffering period (H.264, D.1.1)$/;"	e	enum:__anon69
SEI_PIC_STRUCT_BOTTOM_FIELD	libavcodec/h264.h	/^    SEI_PIC_STRUCT_BOTTOM_FIELD      = 2, \/\/\/<  2: bottom field$/;"	e	enum:__anon70
SEI_PIC_STRUCT_BOTTOM_TOP	libavcodec/h264.h	/^    SEI_PIC_STRUCT_BOTTOM_TOP        = 4, \/\/\/<  4: bottom field, top field, in that order$/;"	e	enum:__anon70
SEI_PIC_STRUCT_BOTTOM_TOP_BOTTOM	libavcodec/h264.h	/^    SEI_PIC_STRUCT_BOTTOM_TOP_BOTTOM = 6, \/\/\/<  6: bottom field, top field, bottom field repeated, in that order$/;"	e	enum:__anon70
SEI_PIC_STRUCT_FRAME	libavcodec/h264.h	/^    SEI_PIC_STRUCT_FRAME             = 0, \/\/\/<  0: %frame$/;"	e	enum:__anon70
SEI_PIC_STRUCT_FRAME_DOUBLING	libavcodec/h264.h	/^    SEI_PIC_STRUCT_FRAME_DOUBLING    = 7, \/\/\/<  7: %frame doubling$/;"	e	enum:__anon70
SEI_PIC_STRUCT_FRAME_TRIPLING	libavcodec/h264.h	/^    SEI_PIC_STRUCT_FRAME_TRIPLING    = 8  \/\/\/<  8: %frame tripling$/;"	e	enum:__anon70
SEI_PIC_STRUCT_TOP_BOTTOM	libavcodec/h264.h	/^    SEI_PIC_STRUCT_TOP_BOTTOM        = 3, \/\/\/<  3: top field, bottom field, in that order$/;"	e	enum:__anon70
SEI_PIC_STRUCT_TOP_BOTTOM_TOP	libavcodec/h264.h	/^    SEI_PIC_STRUCT_TOP_BOTTOM_TOP    = 5, \/\/\/<  5: top field, bottom field, top field repeated, in that order$/;"	e	enum:__anon70
SEI_PIC_STRUCT_TOP_FIELD	libavcodec/h264.h	/^    SEI_PIC_STRUCT_TOP_FIELD         = 1, \/\/\/<  1: top field$/;"	e	enum:__anon70
SEI_PicStructType	libavcodec/h264.h	/^} SEI_PicStructType;$/;"	t	typeref:enum:__anon70
SEI_TYPE_PIC_TIMING	libavcodec/h264.h	/^    SEI_TYPE_PIC_TIMING              =  1, \/\/\/< picture timing$/;"	e	enum:__anon69
SEI_TYPE_RECOVERY_POINT	libavcodec/h264.h	/^    SEI_TYPE_RECOVERY_POINT          =  6  \/\/\/< recovery point (frame # to decoder sync)$/;"	e	enum:__anon69
SEI_TYPE_USER_DATA_UNREGISTERED	libavcodec/h264.h	/^    SEI_TYPE_USER_DATA_UNREGISTERED  =  5, \/\/\/< unregistered user data$/;"	e	enum:__anon69
SEI_Type	libavcodec/h264.h	/^} SEI_Type;$/;"	t	typeref:enum:__anon69
SEND_TAG	libavformat/electronicarts.c	34;"	d	file:
SEQUENCE_END_CODE	libavformat/mpeg.h	30;"	d
SEQ_AUDIO_BUFFER_SIZE	libavformat/tiertexseq.c	33;"	d	file:
SEQ_END_CODE	libavcodec/mpegvideo.h	70;"	d
SEQ_FRAME_H	libavformat/tiertexseq.c	31;"	d	file:
SEQ_FRAME_RATE	libavformat/tiertexseq.c	35;"	d	file:
SEQ_FRAME_SIZE	libavformat/tiertexseq.c	29;"	d	file:
SEQ_FRAME_W	libavformat/tiertexseq.c	30;"	d	file:
SEQ_NUM_FRAME_BUFFERS	libavformat/tiertexseq.c	32;"	d	file:
SEQ_SAMPLE_RATE	libavformat/tiertexseq.c	34;"	d	file:
SEQ_START_CODE	libavcodec/mpegvideo.h	71;"	d
SEQ_START_CODE	libavformat/mpegvideodec.c	26;"	d	file:
SERVER_KEY_OPEN_PART_LEN	libavformat/rtmpproto.c	86;"	d	file:
SERVER_PATH	libavformat/gxfenc.c	99;"	d	file:
SETVTBL	libavdevice/dshow.h	130;"	d
SET_CHROMA_MODES	libavcodec/vp3.c	591;"	d	file:
SET_CMP_FUNC	libavcodec/dsputil.c	3036;"	d	file:
SET_DIAG_MV	libavcodec/h264_mvpred.h	46;"	d
SET_DIAG_MV	libavcodec/h264_mvpred.h	75;"	d
SET_EMPTY_ALPHA	libswscale/x86/yuv2rgb_template.c	338;"	d	file:
SET_HPEL_FUNCS	libavcodec/x86/dsputil_mmx.c	2433;"	d	file:
SET_PARAMS	libavcodec/cavs.c	139;"	d	file:
SET_PARAMS	libavcodec/cavs.c	58;"	d	file:
SET_PIXEL_RGB	libavfilter/vf_drawtext.c	448;"	d	file:
SET_PIXEL_YUV	libavfilter/vf_drawtext.c	409;"	d	file:
SET_PREFIXED_OPTS	cmdutils.c	300;"	d	file:
SET_PREFIXED_OPTS	ffmpeg/cmdutils.c	300;"	d	file:
SET_QPEL_FUNC	libavcodec/h263dec.c	497;"	d	file:
SET_QPEL_FUNCS	libavcodec/x86/dsputil_mmx.c	2522;"	d	file:
SET_RND	libavcodec/arm/dsputil_iwmmxt.c	26;"	d	file:
SET_RND	libavcodec/arm/dsputil_iwmmxt.c	30;"	d	file:
SET_RND	libavcodec/arm/dsputil_iwmmxt.c	34;"	d	file:
SET_RND	libavcodec/arm/dsputil_iwmmxt.c	38;"	d	file:
SET_RND	libavcodec/x86/dsputil_mmx.c	164;"	d	file:
SET_RND	libavcodec/x86/dsputil_mmx.c	172;"	d	file:
SET_RND	libavcodec/x86/dsputil_mmx.c	179;"	d	file:
SET_RND	libavcodec/x86/dsputil_mmx.c	186;"	d	file:
SET_RND	libavcodec/x86/dsputilenc_mmx.c	1052;"	d	file:
SET_RND	libavcodec/x86/dsputilenc_mmx.c	1058;"	d	file:
SET_RND	libavcodec/x86/dsputilenc_mmx.c	1063;"	d	file:
SET_RND	libavcodec/x86/dsputilenc_mmx.c	1072;"	d	file:
SET_RND	libavcodec/x86/dsputilenc_mmx.c	1079;"	d	file:
SET_RND	libavcodec/x86/dsputilenc_mmx.c	1091;"	d	file:
SE_16BIT	libavcodec/dpcm.c	50;"	d	file:
SFENCE	libswscale/x86/rgb2rgb_template.c	32;"	d	file:
SFENCE	libswscale/x86/rgb2rgb_template.c	54;"	d	file:
SFENCE	libswscale/x86/rgb2rgb_template.c	57;"	d	file:
SFENCE	libswscale/x86/yuv2rgb_template.c	26;"	d	file:
SFENCE	libswscale/x86/yuv2rgb_template.c	30;"	d	file:
SFENCE	libswscale/x86/yuv2rgb_template.c	33;"	d	file:
SFRAME_CACHE_MAXSIZE	libavcodec/wmavoice.c	52;"	d	file:
SGI_GRAYSCALE	libavcodec/sgi.h	32;"	d
SGI_HEADER_SIZE	libavcodec/sgi.h	30;"	d
SGI_MAGIC	libavcodec/sgi.h	28;"	d
SGI_MULTI_CHAN	libavcodec/sgienc.c	28;"	d	file:
SGI_RGB	libavcodec/sgi.h	33;"	d
SGI_RGBA	libavcodec/sgi.h	34;"	d
SGI_SINGLE_CHAN	libavcodec/sgienc.c	27;"	d	file:
SHAPE_ID	libavformat/swf.h	62;"	d
SHARP_MAX	libavcodec/amrnbdec.c	88;"	d	file:
SHARP_MAX	libavcodec/g729dec.c	71;"	d	file:
SHARP_MIN	libavcodec/g729dec.c	62;"	d	file:
SHEN_TAG	libavformat/electronicarts.c	35;"	d	file:
SHFLAGS	config.mak	/^SHFLAGS=-shared -Wl,-soname,$$(@F) -Wl,-Bsymbolic -Wl,--version-script,$(SUBDIR)lib$(NAME).ver$/;"	m
SHIFT	libavfilter/libmpcodecs/vf_spp.c	106;"	d	file:
SHIFT2_LINE	libavcodec/x86/vc1dsp_mmx.c	64;"	d	file:
SHIFT4	libavcodec/ppc/vp3dsp_altivec.c	108;"	d	file:
SHIFT_ACCUM	libavcodec/x86/mlpdsp.c	71;"	d	file:
SHIFT_ACCUM	libavcodec/x86/mlpdsp.c	94;"	d	file:
SHIFT_BITS	libavcodec/apedec.c	231;"	d	file:
SHIFT_FRW_COL	libavcodec/x86/fdct_mmx.c	49;"	d	file:
SHIFT_FRW_COL	libavcodec/x86/idct_mmx_xvid.c	58;"	d	file:
SHIFT_FRW_ROW	libavcodec/x86/fdct_mmx.c	50;"	d	file:
SHIFT_FRW_ROW	libavcodec/x86/idct_mmx_xvid.c	59;"	d	file:
SHIFT_HOR4	libavcodec/ppc/vc1dsp_altivec.c	119;"	d	file:
SHIFT_HOR8	libavcodec/ppc/vc1dsp_altivec.c	76;"	d	file:
SHIFT_INV_COL	libavcodec/ps2/idct_mmi.c	34;"	d	file:
SHIFT_INV_COL	libavcodec/x86/idct_mmx_xvid.c	52;"	d	file:
SHIFT_INV_ROW	libavcodec/ps2/idct_mmi.c	33;"	d	file:
SHIFT_INV_ROW	libavcodec/x86/idct_mmx_xvid.c	51;"	d	file:
SHIFT_VERT4	libavcodec/ppc/vc1dsp_altivec.c	125;"	d	file:
SHIFT_VERT8	libavcodec/ppc/vc1dsp_altivec.c	88;"	d	file:
SHL	libavcodec/j2k.c	32;"	d	file:
SHLIBDIR	config.mak	/^SHLIBDIR=$(DESTDIR)${prefix}\/lib$/;"	m
SHORT_DELAY_BAND	libavcodec/aacps.c	/^static const int   SHORT_DELAY_BAND[]  = { 42, 62 };$/;"	v	file:
SHORT_SEEK_THRESHOLD	libavformat/aviobuf.c	38;"	d	file:
SHOT_TAG	libavcodec/xan.c	47;"	d	file:
SHOT_TAG	libavformat/wc3movie.c	43;"	d	file:
SHOW_CONFIG	cmdutils.c	526;"	d	file:
SHOW_CONFIG	ffmpeg/cmdutils.c	526;"	d	file:
SHOW_MODE_NB	ffplay.c	/^        SHOW_MODE_NONE = -1, SHOW_MODE_VIDEO = 0, SHOW_MODE_WAVES, SHOW_MODE_RDFT, SHOW_MODE_NB$/;"	e	enum:VideoState::ShowMode	file:
SHOW_MODE_NONE	ffplay.c	/^        SHOW_MODE_NONE = -1, SHOW_MODE_VIDEO = 0, SHOW_MODE_WAVES, SHOW_MODE_RDFT, SHOW_MODE_NB$/;"	e	enum:VideoState::ShowMode	file:
SHOW_MODE_RDFT	ffplay.c	/^        SHOW_MODE_NONE = -1, SHOW_MODE_VIDEO = 0, SHOW_MODE_WAVES, SHOW_MODE_RDFT, SHOW_MODE_NB$/;"	e	enum:VideoState::ShowMode	file:
SHOW_MODE_VIDEO	ffplay.c	/^        SHOW_MODE_NONE = -1, SHOW_MODE_VIDEO = 0, SHOW_MODE_WAVES, SHOW_MODE_RDFT, SHOW_MODE_NB$/;"	e	enum:VideoState::ShowMode	file:
SHOW_MODE_WAVES	ffplay.c	/^        SHOW_MODE_NONE = -1, SHOW_MODE_VIDEO = 0, SHOW_MODE_WAVES, SHOW_MODE_RDFT, SHOW_MODE_NB$/;"	e	enum:VideoState::ShowMode	file:
SHOW_SBITS	libavcodec/get_bits.h	160;"	d
SHOW_SBITS	libavcodec/get_bits.h	164;"	d
SHOW_SBITS	libavcodec/get_bits.h	230;"	d
SHOW_UBITS	libavcodec/get_bits.h	158;"	d
SHOW_UBITS	libavcodec/get_bits.h	162;"	d
SHOW_UBITS	libavcodec/get_bits.h	228;"	d
SHOW_VERSION	cmdutils.c	525;"	d	file:
SHOW_VERSION	ffmpeg/cmdutils.c	525;"	d	file:
SHR	libavcodec/mpegaudiodec.c	88;"	d	file:
SHR	libavcodec/mpegaudiodec.c	97;"	d	file:
SIFFContext	libavformat/siff.c	/^typedef struct SIFFContext{$/;"	s	file:
SIFFContext	libavformat/siff.c	/^}SIFFContext;$/;"	t	typeref:struct:SIFFContext	file:
SIFFTags	libavformat/siff.c	/^enum SIFFTags{$/;"	g	file:
SIGN_BIT	libavcodec/pcm_tablegen.h	31;"	d
SILENCE	libavcodec/qcelpdec.c	/^    SILENCE,$/;"	e	enum:__anon224	file:
SILENT	common.mak	/^SILENT = DEPCC YASMDEP RM RANLIB$/;"	m
SIMPLE_CPY	libpostproc/postprocess_template.c	3116;"	d	file:
SIMPLE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^SIMPLE_LOOPFILTER mmx,    h, 5, 0$/;"	l
SIMPLE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^SIMPLE_LOOPFILTER mmx,    v, 4, 0$/;"	l
SIMPLE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^SIMPLE_LOOPFILTER mmxext, h, 5, 0$/;"	l
SIMPLE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^SIMPLE_LOOPFILTER mmxext, v, 4, 0$/;"	l
SIMPLE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^SIMPLE_LOOPFILTER sse2,   h, 5, 8$/;"	l
SIMPLE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^SIMPLE_LOOPFILTER sse2,   v, 3, 8$/;"	l
SIMPLE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^SIMPLE_LOOPFILTER sse4,   h, 5, 8$/;"	l
SIMPLE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^SIMPLE_LOOPFILTER ssse3,  h, 5, 8$/;"	l
SIMPLE_LOOPFILTER	libavcodec/x86/vp8dsp.asm	/^SIMPLE_LOOPFILTER ssse3,  v, 3, 8$/;"	l
SIMPLE_VO_TYPE	libavcodec/mpeg4video.h	37;"	d
SIN	libavcodec/dct.c	36;"	d	file:
SINETABLE	libavcodec/sinewin.h	33;"	d
SINETABLE	libavcodec/sinewin_tablegen.c	26;"	d	file:
SINETABLE_CONST	libavcodec/sinewin.h	28;"	d
SINETABLE_CONST	libavcodec/sinewin.h	30;"	d
SINETABLE_CONST	libavcodec/sinewin_tablegen.c	25;"	d	file:
SINGLE_PAYLOAD_DATA_LENGTH	libavformat/asfenc.c	179;"	d	file:
SINTABLE	libavcodec/rdft.h	34;"	d
SINTABLE_CONST	libavcodec/rdft.h	29;"	d
SINTABLE_CONST	libavcodec/rdft.h	31;"	d
SIZE	libavcodec/cabac.c	178;"	d	file:
SIZE	libavcodec/h264.c	4037;"	d	file:
SIZE	libavcodec/iirfilter.c	315;"	d	file:
SIZE	libavcodec/rangecoder.c	113;"	d	file:
SIZE	libswscale/colorspace-test.c	30;"	d	file:
SIZE	tests/tiny_psnr.c	29;"	d	file:
SIZE_BITMAPFILEHEADER	libavcodec/bmpenc.c	105;"	d	file:
SIZE_BITMAPINFOHEADER	libavcodec/bmpenc.c	106;"	d	file:
SIZE_TAG	libavformat/wc3movie.c	39;"	d	file:
SKIPHEADERS	Makefile	/^SKIPHEADERS = cmdutils_common_opts.h$/;"	m
SKIPHEADERS	common.mak	/^SKIPHEADERS := $(addprefix $(SUBDIR),$(SKIPHEADERS-) $(SKIPHEADERS))$/;"	m
SKIPS_MAX	libavcodec/msvideo1enc.c	60;"	d	file:
SKIP_ATOM	tools/qt-faststart.c	64;"	d	file:
SKIP_BITS	libavcodec/get_bits.h	149;"	d
SKIP_BITS	libavcodec/get_bits.h	220;"	d
SKIP_BLOCK	libavcodec/bink.c	/^    SKIP_BLOCK = 0, \/\/\/< skipped block$/;"	e	enum:BlockTypes	file:
SKIP_CACHE	libavcodec/get_bits.h	138;"	d
SKIP_CACHE	libavcodec/get_bits.h	143;"	d
SKIP_CACHE	libavcodec/get_bits.h	205;"	d
SKIP_CACHE	libavcodec/get_bits.h	211;"	d
SKIP_COUNTER	libavcodec/get_bits.h	147;"	d
SKIP_COUNTER	libavcodec/get_bits.h	218;"	d
SKIP_PREFIX	libavcodec/msvideo1enc.c	59;"	d	file:
SKIP_TYPE_COL	libavcodec/wmv2.h	32;"	d
SKIP_TYPE_MPEG	libavcodec/wmv2.h	30;"	d
SKIP_TYPE_NONE	libavcodec/wmv2.h	29;"	d
SKIP_TYPE_ROW	libavcodec/wmv2.h	31;"	d
SLIBNAME	config.mak	/^SLIBNAME=$(SLIBPREF)$(FULLNAME)$(SLIBSUF)$/;"	m
SLIBNAME_WITH_MAJOR	config.mak	/^SLIBNAME_WITH_MAJOR=$(SLIBNAME).$(LIBMAJOR)$/;"	m
SLIBNAME_WITH_VERSION	config.mak	/^SLIBNAME_WITH_VERSION=$(SLIBNAME).$(LIBVERSION)$/;"	m
SLIBPREF	config.mak	/^SLIBPREF=lib$/;"	m
SLIBSUF	config.h	13;"	d
SLIBSUF	config.mak	/^SLIBSUF=.so$/;"	m
SLIB_CREATE_DEF_CMD	config.mak	/^SLIB_CREATE_DEF_CMD=$/;"	m
SLIB_EXTRA_CMD	config.mak	/^SLIB_EXTRA_CMD=$/;"	m
SLIB_INSTALL_EXTRA_CMD	config.mak	/^SLIB_INSTALL_EXTRA_CMD=$/;"	m
SLIB_UNINSTALL_EXTRA_CMD	config.mak	/^SLIB_UNINSTALL_EXTRA_CMD=$/;"	m
SLICE_END	libavcodec/mpegvideo.h	658;"	d
SLICE_ERROR	libavcodec/mpegvideo.h	657;"	d
SLICE_FLAG_ALLOW_FIELD	libavcodec/avcodec.h	2021;"	d
SLICE_FLAG_ALLOW_PLANE	libavcodec/avcodec.h	2022;"	d
SLICE_FLAG_CODED_ORDER	libavcodec/avcodec.h	2020;"	d
SLICE_MAX_START_CODE	libavcodec/cavs.h	29;"	d
SLICE_MAX_START_CODE	libavcodec/mpegvideo.h	75;"	d
SLICE_MIN_START_CODE	libavcodec/mpegvideo.h	74;"	d
SLICE_NOEND	libavcodec/mpegvideo.h	659;"	d
SLICE_OK	libavcodec/mpegvideo.h	656;"	d
SLICE_START_CODE	libavformat/mpegvideodec.c	29;"	d	file:
SLOW_LEFT_EXTEND	libavcodec/x86/dsputil_yasm.asm	/^SLOW_LEFT_EXTEND  %1$/;"	l
SLOW_RIGHT_EXTEND	libavcodec/x86/dsputil_yasm.asm	/^SLOW_RIGHT_EXTEND %1$/;"	l
SLOW_V_EXTEND	libavcodec/x86/dsputil_yasm.asm	/^SLOW_V_EXTEND     %1$/;"	l
SMACKER_FLAG_RING_FRAME	libavformat/smacker.c	31;"	d	file:
SMACKER_PAL	libavformat/smacker.c	30;"	d	file:
SMKTREE_BITS	libavcodec/smacker.c	41;"	d	file:
SMK_AUD_16BITS	libavformat/smacker.c	/^    SMK_AUD_16BITS  = 0x20000000,$/;"	e	enum:SAudFlags	file:
SMK_AUD_BINKAUD	libavformat/smacker.c	/^    SMK_AUD_BINKAUD = 0x08000000,$/;"	e	enum:SAudFlags	file:
SMK_AUD_PACKED	libavformat/smacker.c	/^    SMK_AUD_PACKED  = 0x80000000,$/;"	e	enum:SAudFlags	file:
SMK_AUD_STEREO	libavformat/smacker.c	/^    SMK_AUD_STEREO  = 0x10000000,$/;"	e	enum:SAudFlags	file:
SMK_AUD_USEDCT	libavformat/smacker.c	/^    SMK_AUD_USEDCT  = 0x04000000$/;"	e	enum:SAudFlags	file:
SMK_BLK_FILL	libavcodec/smacker.c	/^    SMK_BLK_FILL = 3 };$/;"	e	enum:SmkBlockTypes	file:
SMK_BLK_FULL	libavcodec/smacker.c	/^    SMK_BLK_FULL = 1,$/;"	e	enum:SmkBlockTypes	file:
SMK_BLK_MONO	libavcodec/smacker.c	/^    SMK_BLK_MONO = 0,$/;"	e	enum:SmkBlockTypes	file:
SMK_BLK_SKIP	libavcodec/smacker.c	/^    SMK_BLK_SKIP = 2,$/;"	e	enum:SmkBlockTypes	file:
SMK_NODE	libavcodec/smacker.c	42;"	d	file:
SN0	libavfilter/libmpcodecs/vf_pp7.c	197;"	d	file:
SN1	libavfilter/libmpcodecs/vf_pp7.c	198;"	d	file:
SN2	libavfilter/libmpcodecs/vf_pp7.c	199;"	d	file:
SND0_TAG	libavformat/westwood.c	47;"	d	file:
SND1_TAG	libavformat/westwood.c	48;"	d	file:
SND2_TAG	libavformat/westwood.c	49;"	d	file:
SNDC_TAG	libavformat/electronicarts.c	33;"	d	file:
SOF0	libavcodec/mjpeg.h	/^    SOF0  = 0xc0,       \/* baseline *\/$/;"	e	enum:__anon218
SOF1	libavcodec/mjpeg.h	/^    SOF1  = 0xc1,       \/* extended sequential, huffman *\/$/;"	e	enum:__anon218
SOF10	libavcodec/mjpeg.h	/^    SOF10 = 0xca,       \/* progressive, arithmetic *\/$/;"	e	enum:__anon218
SOF11	libavcodec/mjpeg.h	/^    SOF11 = 0xcb,       \/* lossless, arithmetic *\/$/;"	e	enum:__anon218
SOF13	libavcodec/mjpeg.h	/^    SOF13 = 0xcd,       \/* differential sequential, arithmetic *\/$/;"	e	enum:__anon218
SOF14	libavcodec/mjpeg.h	/^    SOF14 = 0xce,       \/* differential progressive, arithmetic *\/$/;"	e	enum:__anon218
SOF15	libavcodec/mjpeg.h	/^    SOF15 = 0xcf,       \/* differential lossless, arithmetic *\/$/;"	e	enum:__anon218
SOF2	libavcodec/mjpeg.h	/^    SOF2  = 0xc2,       \/* progressive, huffman *\/$/;"	e	enum:__anon218
SOF3	libavcodec/mjpeg.h	/^    SOF3  = 0xc3,       \/* lossless, huffman *\/$/;"	e	enum:__anon218
SOF48	libavcodec/mjpeg.h	/^    SOF48 = 0xf7,       \/\/\/< JPEG-LS$/;"	e	enum:__anon218
SOF5	libavcodec/mjpeg.h	/^    SOF5  = 0xc5,       \/* differential sequential, huffman *\/$/;"	e	enum:__anon218
SOF6	libavcodec/mjpeg.h	/^    SOF6  = 0xc6,       \/* differential progressive, huffman *\/$/;"	e	enum:__anon218
SOF7	libavcodec/mjpeg.h	/^    SOF7  = 0xc7,       \/* differential lossless, huffman *\/$/;"	e	enum:__anon218
SOF9	libavcodec/mjpeg.h	/^    SOF9  = 0xc9,       \/* extended sequential, arithmetic *\/$/;"	e	enum:__anon218
SOFTCLIP_THRESHOLD	libavcodec/qdm2_tablegen.h	30;"	d
SOI	libavcodec/mjpeg.h	/^    SOI   = 0xd8,       \/* start of image *\/$/;"	e	enum:__anon218
SOLID_PIXEL_VECTORS	libavcodec/vqavideo.c	81;"	d	file:
SOL_16BIT	libavformat/sol.c	47;"	d	file:
SOL_DPCM	libavformat/sol.c	46;"	d	file:
SOL_STEREO	libavformat/sol.c	48;"	d	file:
SOND_TAG	libavformat/wc3movie.c	37;"	d	file:
SOS	libavcodec/mjpeg.h	/^    SOS   = 0xda,       \/* start of scan *\/$/;"	e	enum:__anon218
SOX_FIXED_HDR	libavformat/sox.h	25;"	d
SOX_SAMPLES	libavformat/soxdec.c	124;"	d	file:
SOX_TAG	libavformat/sox.h	27;"	d
SPACE_CHARS	libavformat/internal.h	169;"	d
SPDIF_FLAG_BIGENDIAN	libavformat/spdifenc.c	80;"	d	file:
SPDIF_MAX_OFFSET	libavformat/spdifdec.c	104;"	d	file:
SPEEX_HEADER_SIZE	libavformat/oggenc.c	306;"	d	file:
SPLIT	libavcodec/mpegaudiodec.c	895;"	d	file:
SPLITH	libavcodec/cavs.h	52;"	d
SPLITV	libavcodec/cavs.h	53;"	d
SPREADW	libavcodec/x86/mpegvideo_mmx_template.c	26;"	d	file:
SPREADW	libavcodec/x86/mpegvideo_mmx_template.c	36;"	d	file:
SPREADW	libavcodec/x86/mpegvideo_mmx_template.c	52;"	d	file:
SPREADW	libavcodec/x86/mpegvideo_mmx_template.c	60;"	d	file:
SPRITE_TRAJ_VLC_BITS	libavcodec/mpeg4videodec.c	32;"	d	file:
SPS	libavcodec/h264.h	/^typedef struct SPS{$/;"	s
SPS	libavcodec/h264.h	/^}SPS;$/;"	t	typeref:struct:SPS
SPX_MAX_BANDS	libavcodec/ac3dec.h	63;"	d
SP_LOST	libavcodec/amrwbdata.h	/^    SP_LOST = 14,                          \/\/\/< speech lost$/;"	e	enum:Mode
SQ	libavcodec/dsputil.c	2425;"	d	file:
SQ	libavcodec/motion_est.c	42;"	d	file:
SQRT2	libavcodec/mpegaudiotab.h	36;"	d
SQRT_2	libavcodec/ppc/fdct_altivec.c	43;"	d	file:
SRC	libavcodec/dsputil.c	2201;"	d	file:
SRC	libavcodec/dsputil.c	2205;"	d	file:
SRC	libavcodec/dsputil.c	2208;"	d	file:
SRC	libavcodec/dsputil.c	2212;"	d	file:
SRC	libavcodec/h264pred_template.c	620;"	d	file:
SRC	libavcodec/h264pred_template.c	896;"	d	file:
SRC_DIR	Makefile	/^SRC_DIR = $(SRC_PATH_BARE)$/;"	m
SRC_DIR	subdir.mak	/^SRC_DIR := $(SRC_PATH_BARE)\/lib$(NAME)$/;"	m
SRC_PATH	config.mak	/^SRC_PATH="\/home\/taoanran\/git\/anrdroid4.0\/external\/media\/ffmpeg-0.8.7"$/;"	m
SRC_PATH_BARE	config.mak	/^SRC_PATH_BARE=\/home\/taoanran\/git\/anrdroid4.0\/external\/media\/ffmpeg-0.8.7$/;"	m
SREG2	libavcodec/x86/idct_sse2_xvid.c	122;"	d	file:
SREG2	libavcodec/x86/idct_sse2_xvid.c	142;"	d	file:
SRTContext	libavcodec/srtenc.c	/^} SRTContext;$/;"	t	typeref:struct:__anon139	file:
SRT_STACK_SIZE	libavcodec/srtenc.c	29;"	d	file:
SSE2_PERM	libavcodec/dct-test.c	/^  enum formattag { NO_PERM,MMX_PERM, MMX_SIMPLE_PERM, SCALE_PERM, SSE2_PERM, PARTTRANS_PERM } format;$/;"	e	enum:algo::formattag	file:
STAB_TAG	libavformat/segafilm.c	35;"	d	file:
STARTVARS	libavfilter/libmpcodecs/vf_detc.c	394;"	d	file:
START_TIMER	libavutil/timer.h	46;"	d
START_TIMER	libavutil/timer.h	67;"	d
STAT2	libavcodec/huffyuv.c	815;"	d	file:
STAT3	libavcodec/huffyuv.c	894;"	d	file:
STATE_CODE	libavcodec/ansi.c	/^        STATE_CODE,$/;"	e	enum:__anon173::__anon174	file:
STATE_CONNECTING	libavformat/rtmpproto.c	/^    STATE_CONNECTING, \/\/\/< client connected to server successfully$/;"	e	enum:__anon391	file:
STATE_ESCAPE	libavcodec/ansi.c	/^        STATE_ESCAPE,$/;"	e	enum:__anon173::__anon174	file:
STATE_FCPUBLISH	libavformat/rtmpproto.c	/^    STATE_FCPUBLISH,  \/\/\/< client FCPublishing stream (for output)$/;"	e	enum:__anon391	file:
STATE_GET_BUFFER	libavcodec/pthread.c	/^        STATE_GET_BUFFER,           \/**<$/;"	e	enum:PerThreadContext::__anon278	file:
STATE_HANDSHAKED	libavformat/rtmpproto.c	/^    STATE_HANDSHAKED, \/\/\/< client has performed handshake$/;"	e	enum:__anon391	file:
STATE_INPUT_READY	libavcodec/pthread.c	/^        STATE_INPUT_READY,          \/\/\/< Set when the thread is awaiting a packet.$/;"	e	enum:PerThreadContext::__anon278	file:
STATE_MUSIC_PREAMBLE	libavcodec/ansi.c	/^        STATE_MUSIC_PREAMBLE$/;"	e	enum:__anon173::__anon174	file:
STATE_NORMAL	libavcodec/ansi.c	/^        STATE_NORMAL = 0,$/;"	e	enum:__anon173::__anon174	file:
STATE_PLAYING	libavformat/rtmpproto.c	/^    STATE_PLAYING,    \/\/\/< client has started receiving multimedia data from server$/;"	e	enum:__anon391	file:
STATE_PUBLISHING	libavformat/rtmpproto.c	/^    STATE_PUBLISHING, \/\/\/< client has started sending multimedia data to server (for output)$/;"	e	enum:__anon391	file:
STATE_READY	libavformat/rtmpproto.c	/^    STATE_READY,      \/\/\/< client has sent all needed commands and waits for server reply$/;"	e	enum:__anon391	file:
STATE_RELEASING	libavformat/rtmpproto.c	/^    STATE_RELEASING,  \/\/\/< client releasing stream before publish it (for output)$/;"	e	enum:__anon391	file:
STATE_SETTING_UP	libavcodec/pthread.c	/^        STATE_SETTING_UP,           \/\/\/< Set before the codec has called ff_thread_finish_setup().$/;"	e	enum:PerThreadContext::__anon278	file:
STATE_SETUP_FINISHED	libavcodec/pthread.c	/^        STATE_SETUP_FINISHED        \/\/\/< Set after the codec has called ff_thread_finish_setup().$/;"	e	enum:PerThreadContext::__anon278	file:
STATE_START	libavformat/rtmpproto.c	/^    STATE_START,      \/\/\/< client has not done anything yet$/;"	e	enum:__anon391	file:
STATE_STOPPED	libavformat/rtmpproto.c	/^    STATE_STOPPED,    \/\/\/< the broadcast has been stopped$/;"	e	enum:__anon391	file:
STATIC_SPRITE	libavcodec/mpeg4video.h	49;"	d
STATS_OUT_SIZE	libavcodec/ffv1.c	1093;"	d	file:
STCO_ATOM	tools/qt-faststart.c	71;"	d	file:
STEP	libavfilter/x86/yadif_template.c	250;"	d	file:
STEP	libavfilter/x86/yadif_template.c	26;"	d	file:
STEP	libavfilter/x86/yadif_template.c	39;"	d	file:
STEP4	libavcodec/ppc/vc1dsp_altivec.c	101;"	d	file:
STEP8	libavcodec/ppc/vc1dsp_altivec.c	29;"	d	file:
STEREO	libavcodec/atrac3.c	49;"	d	file:
STEREO	libavcodec/cook.c	63;"	d	file:
STEREO	libavformat/iff.c	61;"	d	file:
STOP_TIMER	libavutil/timer.h	50;"	d
STOP_TIMER	libavutil/timer.h	68;"	d
STORE	libavcodec/alpha/dsputil_alpha.c	242;"	d	file:
STORE	libavcodec/alpha/dsputil_alpha.c	245;"	d	file:
STORE	libavcodec/alpha/dsputil_alpha.c	246;"	d	file:
STORE	libavcodec/alpha/dsputil_alpha.c	253;"	d	file:
STORE	libavcodec/alpha/dsputil_alpha.c	257;"	d	file:
STORE	libavcodec/alpha/dsputil_alpha.c	260;"	d	file:
STORE	libavcodec/alpha/dsputil_alpha.c	261;"	d	file:
STORE	libavfilter/libmpcodecs/vf_fspp.c	109;"	d	file:
STORE	libavfilter/libmpcodecs/vf_spp.c	311;"	d	file:
STORE	libavfilter/libmpcodecs/vf_uspp.c	118;"	d	file:
STORE	libpostproc/postprocess_altivec_template.c	512;"	d	file:
STORE2	libavcodec/ppc/fft_altivec.c	66;"	d	file:
STORE2	libavfilter/libmpcodecs/vf_fspp.c	136;"	d	file:
STORE4	libavcodec/x86/dsputil_mmx.h	75;"	d
STORE8	libavcodec/ppc/fft_altivec.c	70;"	d	file:
STOREROWS	libavcodec/sparc/simple_idct_vis.c	306;"	d	file:
STORE_BGR24_MMX	libswscale/x86/rgb2rgb_template.c	109;"	d	file:
STORE_BLOCK	libavcodec/h264_cabac.c	1680;"	d	file:
STORE_BLOCK	libavcodec/h264_cavlc.c	492;"	d	file:
STORE_DOUBLE_LINE	libpostproc/postprocess_altivec_template.c	1191;"	d	file:
STORE_LINE	libpostproc/postprocess_altivec_template.c	802;"	d	file:
STORE_LINE	libpostproc/postprocess_altivec_template.c	823;"	d	file:
STORE_NODE	libavcodec/adpcm.c	412;"	d	file:
STORE_NODE	libavcodec/adpcm.c	494;"	d	file:
STORE_NODE	libavcodec/g722.c	448;"	d	file:
STORE_OP	libavcodec/x86/dsputil_mmx_avg_template.c	971;"	d	file:
STORE_OP	libavcodec/x86/dsputil_mmx_avg_template.c	973;"	d	file:
STORE_OP	libavcodec/x86/dsputil_mmx_avg_template.c	974;"	d	file:
STORE_OP	libavcodec/x86/dsputil_mmx_avg_template.c	976;"	d	file:
STR	libswscale/swscale_internal.h	32;"	d
STREAM_DURATION	doc/examples/muxing-example.c	40;"	d	file:
STREAM_FRAME_RATE	doc/examples/muxing-example.c	41;"	d	file:
STREAM_NB_FRAMES	doc/examples/muxing-example.c	42;"	d	file:
STREAM_PIX_FMT	doc/examples/muxing-example.c	43;"	d	file:
STREAM_STARTCODE	libavformat/nut.h	33;"	d
STREAM_TYPE_AUDIO_AAC	libavformat/mpeg.h	54;"	d
STREAM_TYPE_AUDIO_AAC	libavformat/mpegts.h	50;"	d
STREAM_TYPE_AUDIO_AAC_LATM	libavformat/mpegts.h	51;"	d
STREAM_TYPE_AUDIO_AC3	libavformat/mpeg.h	58;"	d
STREAM_TYPE_AUDIO_AC3	libavformat/mpegts.h	57;"	d
STREAM_TYPE_AUDIO_DTS	libavformat/mpeg.h	59;"	d
STREAM_TYPE_AUDIO_DTS	libavformat/mpegts.h	58;"	d
STREAM_TYPE_AUDIO_MPEG1	libavformat/mpeg.h	50;"	d
STREAM_TYPE_AUDIO_MPEG1	libavformat/mpegts.h	46;"	d
STREAM_TYPE_AUDIO_MPEG2	libavformat/mpeg.h	51;"	d
STREAM_TYPE_AUDIO_MPEG2	libavformat/mpegts.h	47;"	d
STREAM_TYPE_LIVE	ffserver.c	/^    STREAM_TYPE_LIVE,$/;"	e	enum:StreamType	file:
STREAM_TYPE_PRIVATE_DATA	libavformat/mpeg.h	53;"	d
STREAM_TYPE_PRIVATE_DATA	libavformat/mpegts.h	49;"	d
STREAM_TYPE_PRIVATE_SECTION	libavformat/mpeg.h	52;"	d
STREAM_TYPE_PRIVATE_SECTION	libavformat/mpegts.h	48;"	d
STREAM_TYPE_REDIRECT	ffserver.c	/^    STREAM_TYPE_REDIRECT,$/;"	e	enum:StreamType	file:
STREAM_TYPE_STATUS	ffserver.c	/^    STREAM_TYPE_STATUS,$/;"	e	enum:StreamType	file:
STREAM_TYPE_VIDEO_DIRAC	libavformat/mpegts.h	55;"	d
STREAM_TYPE_VIDEO_H264	libavformat/mpeg.h	56;"	d
STREAM_TYPE_VIDEO_H264	libavformat/mpegts.h	53;"	d
STREAM_TYPE_VIDEO_MPEG1	libavformat/mpeg.h	48;"	d
STREAM_TYPE_VIDEO_MPEG1	libavformat/mpegts.h	44;"	d
STREAM_TYPE_VIDEO_MPEG2	libavformat/mpeg.h	49;"	d
STREAM_TYPE_VIDEO_MPEG2	libavformat/mpegts.h	45;"	d
STREAM_TYPE_VIDEO_MPEG4	libavformat/mpeg.h	55;"	d
STREAM_TYPE_VIDEO_MPEG4	libavformat/mpegts.h	52;"	d
STREAM_TYPE_VIDEO_VC1	libavformat/mpegts.h	54;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	653;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	658;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	662;"	d
STRIDE_ALIGN	libavcodec/dsputil.h	667;"	d
STRIP	config.mak	/^STRIP=\/home\/taoanran\/git\/anrdroid4.0\/prebuilt\/linux-x86\/toolchain\/arm-linux-androideabi-4.4.x\/bin\/arm-linux-androideabi-strip$/;"	m
STRK_TAG	libavformat/4xm.c	40;"	d	file:
STR_MAGIC	libavformat/psxstr.c	49;"	d	file:
SUBBAND_SIZE	libavcodec/cook.c	67;"	d	file:
SUBBLOCKS_MAX	libavcodec/twinvq.c	217;"	d	file:
SUBDIR_VARS	Makefile	/^SUBDIR_VARS := OBJS FFLIBS CLEANFILES DIRS TESTPROGS EXAMPLES SKIPHEADERS \\$/;"	m
SUBFRAMES	libavcodec/dcaenc.c	42;"	d	file:
SUBFRAME_COUNT_16k	libavcodec/sipr.h	46;"	d
SUBFRAME_SIZE	libavcodec/g729dec.c	76;"	d	file:
SUBFR_SIZE	libavcodec/sipr.h	44;"	d
SUBPICTURE_QUEUE_SIZE	ffplay.c	95;"	d	file:
SUBSUBFRAMES	libavcodec/dcaenc.c	43;"	d	file:
SUBTITLE_ASS	libavcodec/avcodec.h	/^    SUBTITLE_ASS,$/;"	e	enum:AVSubtitleType
SUBTITLE_BITMAP	libavcodec/avcodec.h	/^    SUBTITLE_BITMAP,                \/\/\/< A bitmap, pict will be set$/;"	e	enum:AVSubtitleType
SUBTITLE_NONE	libavcodec/avcodec.h	/^    SUBTITLE_NONE,$/;"	e	enum:AVSubtitleType
SUBTITLE_TEXT	libavcodec/avcodec.h	/^    SUBTITLE_TEXT,$/;"	e	enum:AVSubtitleType
SUB_AMP_MAX	libavcodec/twinvq.c	207;"	d	file:
SUB_GAIN_BITS	libavcodec/twinvq.c	211;"	d	file:
SUB_ID	libavformat/mpeg.h	46;"	d
SUB_PIXELS	libavfilter/libmpcodecs/vf_perspective.c	40;"	d	file:
SUB_PIXEL_BITS	libavfilter/libmpcodecs/vf_perspective.c	39;"	d	file:
SUM	libavcodec/x86/dsputilenc_mmx.c	594;"	d	file:
SUM	libavcodec/x86/dsputilenc_mmx.c	647;"	d	file:
SUM	libavcodec/x86/dsputilenc_mmx.c	655;"	d	file:
SUM	libavcodec/x86/dsputilenc_mmx.c	687;"	d	file:
SUM	libavcodec/x86/dsputilenc_mmx.c	696;"	d	file:
SUM	libavcodec/x86/dsputilenc_mmx.c	765;"	d	file:
SUM	libavcodec/x86/dsputilenc_mmx.c	774;"	d	file:
SUM	libavcodec/x86/dsputilenc_mmx.c	822;"	d	file:
SUM8	libavcodec/mpegaudiodsp_template.c	64;"	d	file:
SUM8	libavcodec/ppc/mpegaudiodec_altivec.c	30;"	d	file:
SUM8	libavcodec/x86/mpegaudiodec_mmx.c	30;"	d	file:
SUM8P2	libavcodec/mpegaudiodsp_template.c	76;"	d	file:
SUMS	libavcodec/x86/mpegaudiodec_mmx.c	108;"	d	file:
SUMSUB_BA	libavcodec/x86/dsputil_mmx.h	82;"	d
SUMSUB_BA	libavcodec/x86/h264_idct_10bit.asm	/^    SUMSUB_BA d, 0, 4$/;"	d
SUMSUB_BA	libavcodec/x86/h264_idct_10bit.asm	/^    SUMSUB_BA d, 1, 5$/;"	d
SUMSUB_BA	libavcodec/x86/h264_idct_10bit.asm	/^    SUMSUB_BA d, 3, 2$/;"	d
SUMSUB_BA	libavcodec/x86/h264_idct_10bit.asm	/^    SUMSUB_BA d, 4, 2$/;"	d
SUMSUB_BA	libavcodec/x86/h264_idct_10bit.asm	/^    SUMSUB_BA d, 5, 2$/;"	d
SUMSUB_BA	libavcodec/x86/h264_idct_10bit.asm	/^    SUMSUB_BA d, 6, 5$/;"	d
SUMSUB_BA	libavcodec/x86/h264_idct_10bit.asm	/^    SUMSUB_BA d, 7, 6$/;"	d
SUNRASTContext	libavcodec/sunrast.c	/^typedef struct SUNRASTContext {$/;"	s	file:
SUNRASTContext	libavcodec/sunrast.c	/^} SUNRASTContext;$/;"	t	typeref:struct:SUNRASTContext	file:
SUPPORT_RESAMPLE	libavcodec/resample.c	183;"	d	file:
SURMIXLEV_NUM_OPTIONS	libavcodec/ac3enc.c	58;"	d	file:
SUs	libavcodec/atrac1.c	/^    AT1SUCtx            SUs[AT1_MAX_CHANNELS];              \/\/\/< channel sound unit$/;"	m	struct:__anon120	file:
SVQ1Context	libavcodec/svq1enc.c	/^typedef struct SVQ1Context {$/;"	s	file:
SVQ1Context	libavcodec/svq1enc.c	/^} SVQ1Context;$/;"	t	typeref:struct:SVQ1Context	file:
SVQ1_ADD_CODEBOOK	libavcodec/svq1dec.c	147;"	d	file:
SVQ1_BLOCK_INTER	libavcodec/svq1.h	41;"	d
SVQ1_BLOCK_INTER_4V	libavcodec/svq1.h	42;"	d
SVQ1_BLOCK_INTRA	libavcodec/svq1.h	43;"	d
SVQ1_BLOCK_SKIP	libavcodec/svq1.h	40;"	d
SVQ1_CALC_CODEBOOK_ENTRIES	libavcodec/svq1dec.c	196;"	d	file:
SVQ1_DO_CODEBOOK_INTRA	libavcodec/svq1dec.c	170;"	d	file:
SVQ1_DO_CODEBOOK_NONINTRA	libavcodec/svq1dec.c	182;"	d	file:
SVQ1_PROCESS_VECTOR	libavcodec/svq1dec.c	131;"	d	file:
SVQ3Context	libavcodec/svq3.c	/^} SVQ3Context;$/;"	t	typeref:struct:__anon141	file:
SWAP	libavcodec/ppc/mpegvideo_altivec.c	35;"	d	file:
SWFContext	libavformat/swf.h	/^} SWFContext;$/;"	t	typeref:struct:__anon336
SWSCALE_RGB2RGB_H	libswscale/rgb2rgb.h	27;"	d
SWSCALE_SWSCALE_H	libswscale/swscale.h	22;"	d
SWSCALE_SWSCALE_INTERNAL_H	libswscale/swscale_internal.h	22;"	d
SWS_ACCURATE_RND	libswscale/swscale.h	101;"	d
SWS_AREA	libswscale/swscale.h	81;"	d
SWS_BICUBIC	libswscale/swscale.h	78;"	d
SWS_BICUBLIN	libswscale/swscale.h	82;"	d
SWS_BILINEAR	libswscale/swscale.h	77;"	d
SWS_BITEXACT	libswscale/swscale.h	102;"	d
SWS_CPU_CAPS_3DNOW	libswscale/swscale.h	111;"	d
SWS_CPU_CAPS_ALTIVEC	libswscale/swscale.h	112;"	d
SWS_CPU_CAPS_BFIN	libswscale/swscale.h	113;"	d
SWS_CPU_CAPS_MMX	libswscale/swscale.h	109;"	d
SWS_CPU_CAPS_MMX2	libswscale/swscale.h	110;"	d
SWS_CPU_CAPS_SSE2	libswscale/swscale.h	114;"	d
SWS_CS_DEFAULT	libswscale/swscale.h	125;"	d
SWS_CS_FCC	libswscale/swscale.h	120;"	d
SWS_CS_ITU601	libswscale/swscale.h	121;"	d
SWS_CS_ITU624	libswscale/swscale.h	122;"	d
SWS_CS_ITU709	libswscale/swscale.h	119;"	d
SWS_CS_SMPTE170M	libswscale/swscale.h	123;"	d
SWS_CS_SMPTE240M	libswscale/swscale.h	124;"	d
SWS_DIRECT_BGR	libswscale/swscale.h	100;"	d
SWS_FAST_BILINEAR	libswscale/swscale.h	76;"	d
SWS_FULL_CHR_H_INP	libswscale/swscale.h	99;"	d
SWS_FULL_CHR_H_INT	libswscale/swscale.h	97;"	d
SWS_GAUSS	libswscale/swscale.h	83;"	d
SWS_LANCZOS	libswscale/swscale.h	85;"	d
SWS_MAX_REDUCE_CUTOFF	libswscale/swscale.h	117;"	d
SWS_PARAM_DEFAULT	libswscale/swscale.h	91;"	d
SWS_POINT	libswscale/swscale.h	80;"	d
SWS_PRINT_INFO	libswscale/swscale.h	93;"	d
SWS_SINC	libswscale/swscale.h	84;"	d
SWS_SPLINE	libswscale/swscale.h	86;"	d
SWS_SRC_V_CHR_DROP_MASK	libswscale/swscale.h	88;"	d
SWS_SRC_V_CHR_DROP_SHIFT	libswscale/swscale.h	89;"	d
SWS_X	libswscale/swscale.h	79;"	d
SYM0	libavcodec/cavs.h	50;"	d
SYM1	libavcodec/cavs.h	51;"	d
SYNCPOINT_STARTCODE	libavformat/nut.h	34;"	d
SYNCWORD1	libavformat/spdif.h	27;"	d
SYNCWORD2	libavformat/spdif.h	28;"	d
SYNC_TIMEOUT	ffserver.c	105;"	d	file:
SYSTEM_HEADER_START_CODE	libavformat/mpeg.h	29;"	d
S_FILES	av.mk	/^S_FILES := $(patsubst %.o,%.S,$(S_OBJS))  $/;"	m
S_OBJS	av.mk	/^    S_OBJS :=  $/;"	m
S_OBJS	av.mk	/^    S_OBJS := $(filter $(ALL_S_OBJS),$(OBJS))  $/;"	m
S_boxes	libavutil/des.c	/^static const uint8_t S_boxes[8][32] = {$/;"	v	file:
S_boxes_P_shuffle	libavutil/des.c	/^static const uint32_t S_boxes_P_shuffle[8][64] = {$/;"	v	file:
SampleFmtInfo	libavutil/samplefmt.c	/^typedef struct SampleFmtInfo {$/;"	s	file:
SampleFmtInfo	libavutil/samplefmt.c	/^} SampleFmtInfo;$/;"	t	typeref:struct:SampleFmtInfo	file:
SampleFormat	libavcodec/avcodec.h	364;"	d
SampleType	libavcodec/ac3enc.h	/^typedef float SampleType;$/;"	t
SampleType	libavcodec/ac3enc.h	/^typedef int16_t SampleType;$/;"	t
SavedContext	libavcodec/wavpack.c	/^typedef struct SavedContext {$/;"	s	file:
SavedContext	libavcodec/wavpack.c	/^} SavedContext;$/;"	t	typeref:struct:SavedContext	file:
ScaleContext	libavfilter/vf_scale.c	/^} ScaleContext;$/;"	t	typeref:struct:__anon18	file:
ScanTable	libavcodec/dsputil.h	/^typedef struct ScanTable{$/;"	s
ScanTable	libavcodec/dsputil.h	/^} ScanTable;$/;"	t	typeref:struct:ScanTable
SchroedingerFreeFrame	libavcodec/libschroedingerenc.c	/^static void SchroedingerFreeFrame(void *data)$/;"	f	file:
SectionCallback	libavformat/mpegts.c	/^typedef void SectionCallback(MpegTSFilter *f, const uint8_t *buf, int len);$/;"	t	file:
SectionHeader	libavformat/mpegts.c	/^typedef struct SectionHeader {$/;"	s	file:
SectionHeader	libavformat/mpegts.c	/^} SectionHeader;$/;"	t	typeref:struct:SectionHeader	file:
SegmentType	libavcodec/pgssubdec.c	/^enum SegmentType {$/;"	g	file:
SelectContext	libavfilter/vf_select.c	/^} SelectContext;$/;"	t	typeref:struct:__anon10	file:
SeqDemuxContext	libavformat/tiertexseq.c	/^typedef struct SeqDemuxContext {$/;"	s	file:
SeqDemuxContext	libavformat/tiertexseq.c	/^} SeqDemuxContext;$/;"	t	typeref:struct:SeqDemuxContext	file:
SeqVideoContext	libavcodec/tiertexseqv.c	/^typedef struct SeqVideoContext {$/;"	s	file:
SeqVideoContext	libavcodec/tiertexseqv.c	/^} SeqVideoContext;$/;"	t	typeref:struct:SeqVideoContext	file:
Sequence	libavformat/mxf.h	/^    Sequence,$/;"	e	enum:MXFMetadataSetType
SetPTSContext	libavfilter/vf_setpts.c	/^} SetPTSContext;$/;"	t	typeref:struct:__anon40	file:
SetSchroChromaFormat	libavcodec/libschroedingerenc.c	/^static int SetSchroChromaFormat(AVCodecContext *avccontext)$/;"	f	file:
SetServiceCallback	libavformat/mpegts.c	/^typedef void SetServiceCallback(void *opaque, int ret);$/;"	t	file:
SetTBContext	libavfilter/vf_settb.c	/^} SetTBContext;$/;"	t	typeref:struct:__anon51	file:
SgiContext	libavcodec/sgienc.c	/^typedef struct SgiContext {$/;"	s	file:
SgiContext	libavcodec/sgienc.c	/^} SgiContext;$/;"	t	typeref:struct:SgiContext	file:
SgiState	libavcodec/sgidec.c	/^typedef struct SgiState {$/;"	s	file:
SgiState	libavcodec/sgidec.c	/^} SgiState;$/;"	t	typeref:struct:SgiState	file:
ShortenContext	libavcodec/shorten.c	/^typedef struct ShortenContext {$/;"	s	file:
ShortenContext	libavcodec/shorten.c	/^} ShortenContext;$/;"	t	typeref:struct:ShortenContext	file:
ShowInfoContext	libavfilter/vf_showinfo.c	/^} ShowInfoContext;$/;"	t	typeref:struct:__anon12	file:
ShowMode	ffplay.c	/^    enum ShowMode {$/;"	g	struct:VideoState	file:
Sigma0_256	libavutil/sha.c	157;"	d	file:
Sigma1_256	libavutil/sha.c	158;"	d	file:
SingleChannelElement	libavcodec/aac.h	/^} SingleChannelElement;$/;"	t	typeref:struct:__anon244
SiprContext	libavcodec/sipr.h	/^} SiprContext;$/;"	t	typeref:struct:__anon235
SiprMode	libavcodec/sipr.h	/^} SiprMode;$/;"	t	typeref:enum:__anon234
SiprModeParam	libavcodec/sipr.c	/^} SiprModeParam;$/;"	t	typeref:struct:__anon112	file:
SiprParameters	libavcodec/sipr.h	/^} SiprParameters;$/;"	t	typeref:struct:__anon236
SliceContext	libavfilter/vf_slicify.c	/^} SliceContext;$/;"	t	typeref:struct:__anon22	file:
SliceInfo	libavcodec/rv34.h	/^typedef struct SliceInfo{$/;"	s
SliceInfo	libavcodec/rv34.h	/^}SliceInfo;$/;"	t	typeref:struct:SliceInfo
SmackVContext	libavcodec/smacker.c	/^typedef struct SmackVContext {$/;"	s	file:
SmackVContext	libavcodec/smacker.c	/^} SmackVContext;$/;"	t	typeref:struct:SmackVContext	file:
SmackerContext	libavformat/smacker.c	/^typedef struct SmackerContext {$/;"	s	file:
SmackerContext	libavformat/smacker.c	/^} SmackerContext;$/;"	t	typeref:struct:SmackerContext	file:
SmackerFrame	libavformat/smacker.c	/^typedef struct SmackerFrame {$/;"	s	file:
SmackerFrame	libavformat/smacker.c	/^} SmackerFrame;$/;"	t	typeref:struct:SmackerFrame	file:
SmcContext	libavcodec/smc.c	/^typedef struct SmcContext {$/;"	s	file:
SmcContext	libavcodec/smc.c	/^} SmcContext;$/;"	t	typeref:struct:SmcContext	file:
SmkBlockTypes	libavcodec/smacker.c	/^enum SmkBlockTypes {$/;"	g	file:
SmoothContext	libavfilter/vf_libopencv.c	/^} SmoothContext;$/;"	t	typeref:struct:__anon14	file:
SndioData	libavdevice/sndio_common.h	/^} SndioData;$/;"	t	typeref:struct:__anon318
SnowContext	libavcodec/snow.c	/^typedef struct SnowContext{$/;"	s	file:
SnowContext	libavcodec/snow.c	/^}SnowContext;$/;"	t	typeref:struct:SnowContext	file:
SoXContext	libavformat/soxenc.c	/^} SoXContext;$/;"	t	typeref:struct:__anon452	file:
SoftFloat	libavutil/softfloat.h	/^typedef struct SoftFloat{$/;"	s
SoftFloat	libavutil/softfloat.h	/^}SoftFloat;$/;"	t	typeref:struct:SoftFloat
SonicContext	libavcodec/sonic.c	/^typedef struct SonicContext {$/;"	s	file:
SonicContext	libavcodec/sonic.c	/^} SonicContext;$/;"	t	typeref:struct:SonicContext	file:
SourceClip	libavformat/mxf.h	/^    SourceClip,$/;"	e	enum:MXFMetadataSetType
SourcePackage	libavformat/mxf.h	/^    SourcePackage,$/;"	e	enum:MXFMetadataSetType
Sources	libavcodec/bink.c	/^enum Sources {$/;"	g	file:
SpectralBandReplication	libavcodec/sbr.h	/^} SpectralBandReplication;$/;"	t	typeref:struct:__anon57
SpectrumParameters	libavcodec/sbr.h	/^} SpectrumParameters;$/;"	t	typeref:struct:__anon55
SrtStack	libavcodec/srtdec.c	/^} SrtStack;$/;"	t	typeref:struct:__anon205	file:
StrChannel	libavformat/psxstr.c	/^typedef struct StrChannel {$/;"	s	file:
StrChannel	libavformat/psxstr.c	/^} StrChannel;$/;"	t	typeref:struct:StrChannel	file:
StrDemuxContext	libavformat/psxstr.c	/^typedef struct StrDemuxContext {$/;"	s	file:
StrDemuxContext	libavformat/psxstr.c	/^} StrDemuxContext;$/;"	t	typeref:struct:StrDemuxContext	file:
StreamContext	libavformat/nut.h	/^} StreamContext;$/;"	t	typeref:struct:__anon492
StreamInfo	libavformat/mpegenc.c	/^} StreamInfo;$/;"	t	typeref:struct:__anon428	file:
StreamInfo	libavformat/rmenc.c	/^} StreamInfo;$/;"	t	typeref:struct:__anon382	file:
StreamType	ffserver.c	/^enum StreamType {$/;"	g	file:
StreamType	libavformat/mpegts.c	/^} StreamType;$/;"	t	typeref:struct:__anon472	file:
SubBand	libavcodec/snow.c	/^typedef struct SubBand{$/;"	s	file:
SubBand	libavcodec/snow.c	/^}SubBand;$/;"	t	typeref:struct:SubBand	file:
SubDescriptor	libavformat/mxf.h	/^    SubDescriptor,$/;"	e	enum:MXFMetadataSetType
SubPicture	ffplay.c	/^typedef struct SubPicture {$/;"	s	file:
SubPicture	ffplay.c	/^} SubPicture;$/;"	t	typeref:struct:SubPicture	file:
SubStream	libavcodec/mlpdec.c	/^typedef struct SubStream {$/;"	s	file:
SubStream	libavcodec/mlpdec.c	/^} SubStream;$/;"	t	typeref:struct:SubStream	file:
SubcelEvaluation	libavcodec/roqvideoenc.c	/^} SubcelEvaluation;$/;"	t	typeref:struct:__anon72	file:
Super2xSaI_ex	libavfilter/libmpcodecs/vf_2xsai.c	/^static void Super2xSaI_ex(uint8_t *src, uint32_t src_pitch,$/;"	f	file:
SuperBlock	libavcodec/escape124.c	/^typedef union SuperBlock {$/;"	u	file:
SuperBlock	libavcodec/escape124.c	/^} SuperBlock;$/;"	t	typeref:union:SuperBlock	file:
SwsContext	libswscale/swscale_internal.h	/^typedef struct SwsContext {$/;"	s
SwsContext	libswscale/swscale_internal.h	/^} SwsContext;$/;"	t	typeref:struct:SwsContext
SwsFilter	libswscale/swscale.h	/^} SwsFilter;$/;"	t	typeref:struct:__anon287
SwsFunc	libswscale/swscale_internal.h	/^typedef int (*SwsFunc)(struct SwsContext *context, const uint8_t* src[],$/;"	t
SwsVector	libswscale/swscale.h	/^} SwsVector;$/;"	t	typeref:struct:__anon286
Syncpoint	libavformat/nut.h	/^} Syncpoint;$/;"	t	typeref:struct:__anon490
SynthFilterContext	libavcodec/synth_filter.h	/^typedef struct SynthFilterContext {$/;"	s
SynthFilterContext	libavcodec/synth_filter.h	/^} SynthFilterContext;$/;"	t	typeref:struct:SynthFilterContext
T	libavcodec/h264.c	2395;"	d	file:
T	libavcodec/h264.c	2398;"	d	file:
T	libavcodec/h264.c	2401;"	d	file:
T	libavcodec/h264.c	2406;"	d	file:
T	libavcodec/intrax8.c	442;"	d	file:
T	libavcodec/intrax8.c	505;"	d	file:
T	libavutil/des.c	29;"	d	file:
T	libavutil/des.c	40;"	d	file:
T	libavutil/des.c	42;"	d	file:
T	libavutil/des.c	53;"	d	file:
T	libavutil/des.c	55;"	d	file:
T	libavutil/des.c	66;"	d	file:
T	libavutil/des.c	68;"	d	file:
T	libavutil/des.c	79;"	d	file:
T	libavutil/md5.c	/^static const uint32_t T[64] = { \/\/ T[i]= fabs(sin(i+1)<<32)$/;"	v	file:
T1	libavcodec/jpegls.h	/^    int T1, T2, T3;$/;"	m	struct:JLSState
T1	libavcodec/x86/idct_mmx.c	420;"	d	file:
T1	libavcodec/x86/idct_mmx.c	565;"	d	file:
T2	libavcodec/jpegls.h	/^    int T1, T2, T3;$/;"	m	struct:JLSState
T2	libavcodec/x86/idct_mmx.c	421;"	d	file:
T2	libavcodec/x86/idct_mmx.c	566;"	d	file:
T3	libavcodec/jpegls.h	/^    int T1, T2, T3;$/;"	m	struct:JLSState
T3	libavcodec/x86/idct_mmx.c	422;"	d	file:
T3	libavcodec/x86/idct_mmx.c	567;"	d	file:
TABLE_4_3_SIZE	libavcodec/mpegaudio_tablegen.h	29;"	d
TABLE_SSE2	libavcodec/x86/fdct_mmx.c	160;"	d	file:
TAB_i_04	libavcodec/ps2/idct_mmi.c	44;"	d	file:
TAB_i_17	libavcodec/ps2/idct_mmi.c	45;"	d	file:
TAB_i_26	libavcodec/ps2/idct_mmi.c	46;"	d	file:
TAB_i_35	libavcodec/ps2/idct_mmi.c	47;"	d	file:
TAG	Makefile	/^doc\/%.1: TAG = MAN$/;"	m
TAG	Makefile	/^doc\/%.html: TAG = HTML$/;"	m
TAG	Makefile	/^doc\/%.pod: TAG = POD$/;"	m
TAG	Makefile	/^tests\/data\/asynth1.sw tests\/vsynth%\/00.pgm: TAG = GEN$/;"	m
TAG	common.mak	/^%.c %.h: TAG = GEN$/;"	m
TAG_AUDIOPACKET	libavformat/mpc8.c	/^    TAG_AUDIOPACKET = MKMPCTAG('A','P'),$/;"	e	enum:MPCPacketTags	file:
TAG_BODY	libavformat/siff.c	/^    TAG_BODY = MKTAG('B', 'O', 'D', 'Y'),$/;"	e	enum:SIFFTags	file:
TAG_DEFINESHAPE	libavformat/swf.h	37;"	d
TAG_ENCINFO	libavformat/mpc8.c	/^    TAG_ENCINFO     = MKMPCTAG('E','I'),$/;"	e	enum:MPCPacketTags	file:
TAG_END	libavformat/swf.h	35;"	d
TAG_FILEATTRIBUTES	libavformat/swf.h	48;"	d
TAG_FREECHARACTER	libavformat/swf.h	38;"	d
TAG_JPEG2	libavformat/swf.h	43;"	d
TAG_LONG	libavformat/swf.h	50;"	d
TAG_MPCK	libavformat/mpc8.c	30;"	d	file:
TAG_PLACEOBJECT	libavformat/swf.h	39;"	d
TAG_PLACEOBJECT2	libavformat/swf.h	44;"	d
TAG_REMOVEOBJECT	libavformat/swf.h	40;"	d
TAG_REPLAYGAIN	libavformat/mpc8.c	/^    TAG_REPLAYGAIN  = MKMPCTAG('R','G'),$/;"	e	enum:MPCPacketTags	file:
TAG_SEEKTABLE	libavformat/mpc8.c	/^    TAG_SEEKTABLE   = MKMPCTAG('S','T'),$/;"	e	enum:MPCPacketTags	file:
TAG_SEEKTBLOFF	libavformat/mpc8.c	/^    TAG_SEEKTBLOFF  = MKMPCTAG('S','O'),$/;"	e	enum:MPCPacketTags	file:
TAG_SHDR	libavformat/siff.c	/^    TAG_SHDR = MKTAG('S', 'H', 'D', 'R'),$/;"	e	enum:SIFFTags	file:
TAG_SHOWFRAME	libavformat/swf.h	36;"	d
TAG_SIFF	libavformat/siff.c	/^    TAG_SIFF = MKTAG('S', 'I', 'F', 'F'),$/;"	e	enum:SIFFTags	file:
TAG_SOUN	libavformat/siff.c	/^    TAG_SOUN = MKTAG('S', 'O', 'U', 'N'),$/;"	e	enum:SIFFTags	file:
TAG_STREAMBLOCK	libavformat/swf.h	42;"	d
TAG_STREAMEND	libavformat/mpc8.c	/^    TAG_STREAMEND   = MKMPCTAG('S','E'),$/;"	e	enum:MPCPacketTags	file:
TAG_STREAMHDR	libavformat/mpc8.c	/^    TAG_STREAMHDR   = MKMPCTAG('S','H'),$/;"	e	enum:MPCPacketTags	file:
TAG_STREAMHEAD	libavformat/swf.h	41;"	d
TAG_STREAMHEAD2	libavformat/swf.h	45;"	d
TAG_VBHD	libavformat/siff.c	/^    TAG_VBHD = MKTAG('V', 'B', 'H', 'D'),$/;"	e	enum:SIFFTags	file:
TAG_VBV1	libavformat/siff.c	/^    TAG_VBV1 = MKTAG('V', 'B', 'V', '1'),$/;"	e	enum:SIFFTags	file:
TAG_VIDEOFRAME	libavformat/swf.h	47;"	d
TAG_VIDEOSTREAM	libavformat/swf.h	46;"	d
TAN1	libavcodec/x86/idct_sse2_xvid.c	124;"	d	file:
TAN1	libavcodec/x86/idct_sse2_xvid.c	144;"	d	file:
TAN3	libavcodec/x86/idct_sse2_xvid.c	123;"	d	file:
TAN3	libavcodec/x86/idct_sse2_xvid.c	143;"	d	file:
TAPS	libavcodec/resample.c	268;"	d	file:
TAP_W16	libavcodec/x86/vp8dsp-init.c	120;"	d	file:
TAP_W8	libavcodec/x86/vp8dsp-init.c	130;"	d	file:
TARGET_EXEC	config.mak	/^TARGET_EXEC=$/;"	m
TARGET_PATH	config.mak	/^TARGET_PATH=$(CURDIR)$/;"	m
TB_NSVF	libavformat/nsvdec.c	134;"	d	file:
TB_NSVS	libavformat/nsvdec.c	135;"	d	file:
TCOEFF_VLC_BITS	libavcodec/h261dec.c	39;"	d	file:
TCPContext	libavformat/tcp.c	/^typedef struct TCPContext {$/;"	s	file:
TCPContext	libavformat/tcp.c	/^} TCPContext;$/;"	t	typeref:struct:TCPContext	file:
TC_DROP	libavfilter/libmpcodecs/vf_detc.c	/^        TC_DROP,$/;"	e	enum:__anon28	file:
TC_IL1	libavfilter/libmpcodecs/vf_detc.c	/^        TC_IL1,$/;"	e	enum:__anon28	file:
TC_IL2	libavfilter/libmpcodecs/vf_detc.c	/^        TC_IL2$/;"	e	enum:__anon28	file:
TC_PROG	libavfilter/libmpcodecs/vf_detc.c	/^        TC_PROG,$/;"	e	enum:__anon28	file:
TEM	libavcodec/mjpeg.h	/^    TEM   = 0x01,       \/* temporary private use for arithmetic coding *\/$/;"	e	enum:__anon218
TEMP_NOISE_FILTER	libpostproc/postprocess_internal.h	67;"	d
TEMP_STRIDE	libpostproc/postprocess.c	114;"	d	file:
TESTOBJS	common.mak	/^TESTOBJS  := $(addprefix $(SUBDIR),$(TESTOBJS) $(TESTPROGS:%=%-test.o))$/;"	m
TESTOBJS	libavcodec/Makefile	/^TESTOBJS = dctref.o$/;"	m
TESTPROGS	common.mak	/^TESTPROGS := $(addprefix $(SUBDIR),$(addsuffix -test$(EXESUF),$(TESTPROGS)))$/;"	m
TESTPROGS	libavcodec/Makefile	/^TESTPROGS = cabac dct fft fft-fixed h264 iirfilter rangecoder snow$/;"	m
TESTPROGS	libavformat/Makefile	/^TESTPROGS = timefilter$/;"	m
TESTPROGS	libavutil/Makefile	/^TESTPROGS = adler32 aes base64 cpu crc des eval lls md5 pca sha tree$/;"	m
TESTPROGS	libswscale/Makefile	/^TESTPROGS = colorspace swscale$/;"	m
TESTTOOLS	Makefile	/^TESTTOOLS   = audiogen videogen rotozoom tiny_psnr base64$/;"	m
TEST_FLAG_COOL	libavutil/opt.c	601;"	d	file:
TEST_FLAG_LAME	libavutil/opt.c	602;"	d	file:
TEST_FLAG_MU	libavutil/opt.c	603;"	d	file:
TEST_ONE_ROW	libavcodec/x86/idct_sse2_xvid.c	158;"	d	file:
TEST_TWO_ROWS	libavcodec/x86/idct_sse2_xvid.c	165;"	d	file:
TEXIDEP	Makefile	/^TEXIDEP = awk '\/^@include\/ { printf "$@: $(@D)\/%s\\n", $$2 }' <$< >$(@:%=%.d)$/;"	m
TEXT_TAG	libavformat/wc3movie.c	45;"	d	file:
TEX_VLC_BITS	libavcodec/dv.c	67;"	d	file:
TEX_VLC_BITS	libavcodec/h263.h	36;"	d
TEX_VLC_BITS	libavcodec/mpeg12.h	28;"	d
TEX_VLC_BITS	libavcodec/msmpeg4.c	52;"	d	file:
TG1	libavcodec/ps2/idct_mmi.c	36;"	d	file:
TG2	libavcodec/ps2/idct_mmi.c	37;"	d	file:
TG3	libavcodec/ps2/idct_mmi.c	38;"	d	file:
TGA_BW	libavcodec/targa.h	/^    TGA_BW     = 3, \/\/ black & white or grayscale$/;"	e	enum:TargaCompr
TGA_NODATA	libavcodec/targa.h	/^    TGA_NODATA = 0, \/\/ no image data$/;"	e	enum:TargaCompr
TGA_PAL	libavcodec/targa.h	/^    TGA_PAL    = 1, \/\/ palettized$/;"	e	enum:TargaCompr
TGA_RGB	libavcodec/targa.h	/^    TGA_RGB    = 2, \/\/ true-color$/;"	e	enum:TargaCompr
TGA_RLE	libavcodec/targa.h	/^    TGA_RLE    = 8, \/\/ flag pointing that data is RLE-coded$/;"	e	enum:TargaCompr
TGQs_TAG	libavformat/electronicarts.c	53;"	d	file:
TG_1_16	libavcodec/ps2/idct_mmi.c	49;"	d	file:
TG_2_16	libavcodec/ps2/idct_mmi.c	50;"	d	file:
TG_3_16	libavcodec/ps2/idct_mmi.c	51;"	d	file:
THIRDPEL_MODE	libavcodec/svq3.c	79;"	d	file:
THIRD_QTR	libavcodec/bgmc.c	37;"	d	file:
THIS_LIB	subdir.mak	/^THIS_LIB   := $(SUBDIR)$($(CONFIG_SHARED:yes=S)LIBNAME)$/;"	m
THRESHOLD	libavfilter/libmpcodecs/vf_fspp.c	707;"	d	file:
THRESHOLD_MULTIPLIER	libavcodec/svq1enc.c	114;"	d	file:
TIFF_ADOBE_DEFLATE	libavcodec/tiff.h	/^    TIFF_ADOBE_DEFLATE,$/;"	e	enum:TiffCompr
TIFF_BPP	libavcodec/tiff.h	/^    TIFF_BPP,$/;"	e	enum:TiffTags
TIFF_BYTE	libavcodec/tiff.h	/^    TIFF_BYTE = 1,$/;"	e	enum:TiffTypes
TIFF_CCITT_RLE	libavcodec/tiff.h	/^    TIFF_CCITT_RLE,$/;"	e	enum:TiffCompr
TIFF_COMPR	libavcodec/tiff.h	/^    TIFF_COMPR,$/;"	e	enum:TiffTags
TIFF_DEFLATE	libavcodec/tiff.h	/^    TIFF_DEFLATE = 0x80B2$/;"	e	enum:TiffCompr
TIFF_FILL_ORDER	libavcodec/tiff.h	/^    TIFF_FILL_ORDER = 0x10A,$/;"	e	enum:TiffTags
TIFF_G3	libavcodec/tiff.h	/^    TIFF_G3,$/;"	e	enum:TiffCompr
TIFF_G4	libavcodec/tiff.h	/^    TIFF_G4,$/;"	e	enum:TiffCompr
TIFF_HEIGHT	libavcodec/tiff.h	/^    TIFF_HEIGHT,$/;"	e	enum:TiffTags
TIFF_INVERT	libavcodec/tiff.h	/^    TIFF_INVERT = 0x106,$/;"	e	enum:TiffTags
TIFF_JPEG	libavcodec/tiff.h	/^    TIFF_JPEG,$/;"	e	enum:TiffCompr
TIFF_LONG	libavcodec/tiff.h	/^    TIFF_LONG,$/;"	e	enum:TiffTypes
TIFF_LZW	libavcodec/tiff.h	/^    TIFF_LZW,$/;"	e	enum:TiffCompr
TIFF_MAX_ENTRY	libavcodec/tiffenc.c	37;"	d	file:
TIFF_NEWJPEG	libavcodec/tiff.h	/^    TIFF_NEWJPEG,$/;"	e	enum:TiffCompr
TIFF_PACKBITS	libavcodec/tiff.h	/^    TIFF_PACKBITS = 0x8005,$/;"	e	enum:TiffCompr
TIFF_PAL	libavcodec/tiff.h	/^    TIFF_PAL = 0x140,$/;"	e	enum:TiffTags
TIFF_PLANAR	libavcodec/tiff.h	/^    TIFF_PLANAR = 0x11C,$/;"	e	enum:TiffTags
TIFF_PREDICTOR	libavcodec/tiff.h	/^    TIFF_PREDICTOR = 0x13D,$/;"	e	enum:TiffTags
TIFF_RATIONAL	libavcodec/tiff.h	/^    TIFF_RATIONAL,$/;"	e	enum:TiffTypes
TIFF_RAW	libavcodec/tiff.h	/^    TIFF_RAW = 1,$/;"	e	enum:TiffCompr
TIFF_REFERENCE_BW	libavcodec/tiff.h	/^    TIFF_REFERENCE_BW = 0x214,$/;"	e	enum:TiffTags
TIFF_RES_UNIT	libavcodec/tiff.h	/^    TIFF_RES_UNIT = 0x128,$/;"	e	enum:TiffTags
TIFF_ROWSPERSTRIP	libavcodec/tiff.h	/^    TIFF_ROWSPERSTRIP = 0x116,$/;"	e	enum:TiffTags
TIFF_SAMPLES_PER_PIXEL	libavcodec/tiff.h	/^    TIFF_SAMPLES_PER_PIXEL = 0x115,$/;"	e	enum:TiffTags
TIFF_SHORT	libavcodec/tiff.h	/^    TIFF_SHORT,$/;"	e	enum:TiffTypes
TIFF_SOFTWARE_NAME	libavcodec/tiff.h	/^    TIFF_SOFTWARE_NAME = 0x131,$/;"	e	enum:TiffTags
TIFF_STRING	libavcodec/tiff.h	/^    TIFF_STRING,$/;"	e	enum:TiffTypes
TIFF_STRIP_OFFS	libavcodec/tiff.h	/^    TIFF_STRIP_OFFS = 0x111,$/;"	e	enum:TiffTags
TIFF_STRIP_SIZE	libavcodec/tiff.h	/^    TIFF_STRIP_SIZE,$/;"	e	enum:TiffTags
TIFF_SUBFILE	libavcodec/tiff.h	/^    TIFF_SUBFILE = 0xfe,$/;"	e	enum:TiffTags
TIFF_T4OPTIONS	libavcodec/tiff.h	/^    TIFF_T4OPTIONS = 0x124,$/;"	e	enum:TiffTags
TIFF_T6OPTIONS	libavcodec/tiff.h	/^    TIFF_T6OPTIONS,$/;"	e	enum:TiffTags
TIFF_WIDTH	libavcodec/tiff.h	/^    TIFF_WIDTH = 0x100,$/;"	e	enum:TiffTags
TIFF_XPOS	libavcodec/tiff.h	/^    TIFF_XPOS = 0x11E,$/;"	e	enum:TiffTags
TIFF_XRES	libavcodec/tiff.h	/^    TIFF_XRES = 0x11A,$/;"	e	enum:TiffTags
TIFF_YCBCR_COEFFICIENTS	libavcodec/tiff.h	/^    TIFF_YCBCR_COEFFICIENTS = 0x211,$/;"	e	enum:TiffTags
TIFF_YCBCR_POSITIONING	libavcodec/tiff.h	/^    TIFF_YCBCR_POSITIONING = 0x213,$/;"	e	enum:TiffTags
TIFF_YCBCR_SUBSAMPLING	libavcodec/tiff.h	/^    TIFF_YCBCR_SUBSAMPLING = 0x212,$/;"	e	enum:TiffTags
TIFF_YPOS	libavcodec/tiff.h	/^    TIFF_YPOS = 0x11F,$/;"	e	enum:TiffTags
TIFF_YRES	libavcodec/tiff.h	/^    TIFF_YRES = 0x11B,$/;"	e	enum:TiffTags
TIMESTAMP_UNIT	libavcodec/crystalhd.c	95;"	d	file:
TM2Codes	libavcodec/truemotion2.c	/^typedef struct TM2Codes{$/;"	s	file:
TM2Codes	libavcodec/truemotion2.c	/^} TM2Codes;$/;"	t	typeref:struct:TM2Codes	file:
TM2Context	libavcodec/truemotion2.c	/^typedef struct TM2Context{$/;"	s	file:
TM2Context	libavcodec/truemotion2.c	/^} TM2Context;$/;"	t	typeref:struct:TM2Context	file:
TM2Huff	libavcodec/truemotion2.c	/^typedef struct TM2Huff{$/;"	s	file:
TM2Huff	libavcodec/truemotion2.c	/^} TM2Huff;$/;"	t	typeref:struct:TM2Huff	file:
TM2_BLOCKS	libavcodec/truemotion2.c	/^enum TM2_BLOCKS{ TM2_HI_RES = 0, TM2_MED_RES, TM2_LOW_RES, TM2_NULL_RES,$/;"	g	file:
TM2_C_HI	libavcodec/truemotion2.c	/^enum TM2_STREAMS{ TM2_C_HI = 0, TM2_C_LO, TM2_L_HI, TM2_L_LO,$/;"	e	enum:TM2_STREAMS	file:
TM2_C_LO	libavcodec/truemotion2.c	/^enum TM2_STREAMS{ TM2_C_HI = 0, TM2_C_LO, TM2_L_HI, TM2_L_LO,$/;"	e	enum:TM2_STREAMS	file:
TM2_DELTAS	libavcodec/truemotion2.c	32;"	d	file:
TM2_ESCAPE	libavcodec/truemotion2.c	31;"	d	file:
TM2_HI_RES	libavcodec/truemotion2.c	/^enum TM2_BLOCKS{ TM2_HI_RES = 0, TM2_MED_RES, TM2_LOW_RES, TM2_NULL_RES,$/;"	e	enum:TM2_BLOCKS	file:
TM2_INIT_POINTERS	libavcodec/truemotion2.c	336;"	d	file:
TM2_INIT_POINTERS_2	libavcodec/truemotion2.c	350;"	d	file:
TM2_LOW_RES	libavcodec/truemotion2.c	/^enum TM2_BLOCKS{ TM2_HI_RES = 0, TM2_MED_RES, TM2_LOW_RES, TM2_NULL_RES,$/;"	e	enum:TM2_BLOCKS	file:
TM2_L_HI	libavcodec/truemotion2.c	/^enum TM2_STREAMS{ TM2_C_HI = 0, TM2_C_LO, TM2_L_HI, TM2_L_LO,$/;"	e	enum:TM2_STREAMS	file:
TM2_L_LO	libavcodec/truemotion2.c	/^enum TM2_STREAMS{ TM2_C_HI = 0, TM2_C_LO, TM2_L_HI, TM2_L_LO,$/;"	e	enum:TM2_STREAMS	file:
TM2_MED_RES	libavcodec/truemotion2.c	/^enum TM2_BLOCKS{ TM2_HI_RES = 0, TM2_MED_RES, TM2_LOW_RES, TM2_NULL_RES,$/;"	e	enum:TM2_BLOCKS	file:
TM2_MOT	libavcodec/truemotion2.c	/^     TM2_UPD, TM2_MOT, TM2_TYPE, TM2_NUM_STREAMS};$/;"	e	enum:TM2_STREAMS	file:
TM2_MOTION	libavcodec/truemotion2.c	/^                 TM2_UPDATE, TM2_STILL, TM2_MOTION};$/;"	e	enum:TM2_BLOCKS	file:
TM2_NULL_RES	libavcodec/truemotion2.c	/^enum TM2_BLOCKS{ TM2_HI_RES = 0, TM2_MED_RES, TM2_LOW_RES, TM2_NULL_RES,$/;"	e	enum:TM2_BLOCKS	file:
TM2_NUM_STREAMS	libavcodec/truemotion2.c	/^     TM2_UPD, TM2_MOT, TM2_TYPE, TM2_NUM_STREAMS};$/;"	e	enum:TM2_STREAMS	file:
TM2_RECALC_BLOCK	libavcodec/truemotion2.c	363;"	d	file:
TM2_STILL	libavcodec/truemotion2.c	/^                 TM2_UPDATE, TM2_STILL, TM2_MOTION};$/;"	e	enum:TM2_BLOCKS	file:
TM2_STREAMS	libavcodec/truemotion2.c	/^enum TM2_STREAMS{ TM2_C_HI = 0, TM2_C_LO, TM2_L_HI, TM2_L_LO,$/;"	g	file:
TM2_TYPE	libavcodec/truemotion2.c	/^     TM2_UPD, TM2_MOT, TM2_TYPE, TM2_NUM_STREAMS};$/;"	e	enum:TM2_STREAMS	file:
TM2_UPD	libavcodec/truemotion2.c	/^     TM2_UPD, TM2_MOT, TM2_TYPE, TM2_NUM_STREAMS};$/;"	e	enum:TM2_STREAMS	file:
TM2_UPDATE	libavcodec/truemotion2.c	/^                 TM2_UPDATE, TM2_STILL, TM2_MOTION};$/;"	e	enum:TM2_BLOCKS	file:
TMODE_COUNT	libavcodec/dcahuff.h	29;"	d
TMP0	libavcodec/bfin/idct_bfin.S	/^#define TMP0 FP-8$/;"	d
TMP0	libavcodec/bfin/vp3_idct_bfin.S	/^#define TMP0 FP-8$/;"	d
TMP0	libavcodec/sparc/dsputil_vis.c	97;"	d	file:
TMP1	libavcodec/bfin/idct_bfin.S	/^#define TMP1 FP-12$/;"	d
TMP1	libavcodec/bfin/vp3_idct_bfin.S	/^#define TMP1 FP-12$/;"	d
TMP1	libavcodec/sparc/dsputil_vis.c	98;"	d	file:
TMP10	libavcodec/sparc/dsputil_vis.c	108;"	d	file:
TMP12	libavcodec/sparc/dsputil_vis.c	109;"	d	file:
TMP14	libavcodec/sparc/dsputil_vis.c	110;"	d	file:
TMP16	libavcodec/sparc/dsputil_vis.c	111;"	d	file:
TMP18	libavcodec/sparc/dsputil_vis.c	112;"	d	file:
TMP2	libavcodec/bfin/idct_bfin.S	/^#define TMP2 FP-16$/;"	d
TMP2	libavcodec/bfin/vp3_idct_bfin.S	/^#define TMP2 FP-16$/;"	d
TMP2	libavcodec/sparc/dsputil_vis.c	99;"	d	file:
TMP20	libavcodec/sparc/dsputil_vis.c	113;"	d	file:
TMP22	libavcodec/sparc/dsputil_vis.c	114;"	d	file:
TMP24	libavcodec/sparc/dsputil_vis.c	115;"	d	file:
TMP26	libavcodec/sparc/dsputil_vis.c	116;"	d	file:
TMP28	libavcodec/sparc/dsputil_vis.c	117;"	d	file:
TMP3	libavcodec/sparc/dsputil_vis.c	100;"	d	file:
TMP30	libavcodec/sparc/dsputil_vis.c	118;"	d	file:
TMP32	libavcodec/sparc/dsputil_vis.c	119;"	d	file:
TMP4	libavcodec/sparc/dsputil_vis.c	101;"	d	file:
TMP5	libavcodec/sparc/dsputil_vis.c	102;"	d	file:
TMP6	libavcodec/sparc/dsputil_vis.c	106;"	d	file:
TMP8	libavcodec/sparc/dsputil_vis.c	107;"	d	file:
TMVContext	libavcodec/tmv.c	/^typedef struct TMVContext {$/;"	s	file:
TMVContext	libavcodec/tmv.c	/^} TMVContext;$/;"	t	typeref:struct:TMVContext	file:
TMVContext	libavformat/tmv.c	/^typedef struct TMVContext {$/;"	s	file:
TMVContext	libavformat/tmv.c	/^} TMVContext;$/;"	t	typeref:struct:TMVContext	file:
TMV_HEADER_SIZE	libavformat/tmv.c	46;"	d	file:
TMV_PADDING	libavformat/tmv.c	/^    TMV_PADDING = 0x01,$/;"	e	enum:__anon397	file:
TMV_STEREO	libavformat/tmv.c	/^    TMV_STEREO  = 0x02,$/;"	e	enum:__anon397	file:
TMV_TAG	libavformat/tmv.c	37;"	d	file:
TM_VP8_PRED	libavcodec/h264pred.h	59;"	d
TNS_MAX_ORDER	libavcodec/aac.h	45;"	d
TOKEN_COEFF	libavcodec/vp3.c	204;"	d	file:
TOKEN_EOB	libavcodec/vp3.c	202;"	d	file:
TOKEN_ZERO_RUN	libavcodec/vp3.c	203;"	d	file:
TOOLS	Makefile	/^TOOLS       = $(addprefix tools\/, $(addsuffix $(EXESUF), cws2fws graph2dot lavfi-showfiltfmts pktdumper probetest qt-faststart trasher))$/;"	m
TOP_DC_PRED	libavcodec/h264pred.h	50;"	d
TOP_DC_PRED8x8	libavcodec/h264pred.h	75;"	d
TOP_FIRST	libavfilter/libmpcodecs/vf_phase.c	/^enum mode { PROGRESSIVE, TOP_FIRST, BOTTOM_FIRST,$/;"	e	enum:mode	file:
TOP_FIRST_ANALYZE	libavfilter/libmpcodecs/vf_phase.c	/^            TOP_FIRST_ANALYZE, BOTTOM_FIRST_ANALYZE,$/;"	e	enum:mode	file:
TOP_VALUE	libavcodec/apedec.c	230;"	d	file:
TOP_VALUE	libavcodec/bgmc.c	34;"	d	file:
TOTAL_ZEROS_VLC_BITS	libavcodec/h264.h	44;"	d
TRACK_AUX	libavformat/gxf.h	/^    TRACK_AUX       = 0x4d,$/;"	e	enum:__anon348
TRACK_FPF	libavformat/gxf.h	/^    TRACK_FPF       = 0x52,$/;"	e	enum:__anon348
TRACK_FPS	libavformat/gxf.h	/^    TRACK_FPS       = 0x50,$/;"	e	enum:__anon348
TRACK_LINES	libavformat/gxf.h	/^    TRACK_LINES     = 0x51,$/;"	e	enum:__anon348
TRACK_MPG_AUX	libavformat/gxf.h	/^    TRACK_MPG_AUX   = 0x4f,$/;"	e	enum:__anon348
TRACK_NAME	libavformat/gxf.h	/^    TRACK_NAME      = 0x4c,$/;"	e	enum:__anon348
TRACK_VER	libavformat/gxf.h	/^    TRACK_VER       = 0x4e,$/;"	e	enum:__anon348
TRANSFER_DONT_PACK	libavcodec/x86/vc1dsp_mmx.c	48;"	d	file:
TRANSFER_DO_PACK	libavcodec/x86/vc1dsp_mmx.c	43;"	d	file:
TRANSFORM	libavcodec/fft.c	230;"	d	file:
TRANSFORM_DCT	libavcodec/fft-test.c	/^    TRANSFORM_DCT,$/;"	e	enum:tf_transform	file:
TRANSFORM_FFT	libavcodec/fft-test.c	/^    TRANSFORM_FFT,$/;"	e	enum:tf_transform	file:
TRANSFORM_MDCT	libavcodec/fft-test.c	/^    TRANSFORM_MDCT,$/;"	e	enum:tf_transform	file:
TRANSFORM_RDFT	libavcodec/fft-test.c	/^    TRANSFORM_RDFT,$/;"	e	enum:tf_transform	file:
TRANSFORM_ZERO	libavcodec/fft.c	236;"	d	file:
TRANSPOSE	libavcodec/sparc/simple_idct_vis.c	113;"	d	file:
TRANSPOSE4	libavcodec/ppc/mpegvideo_altivec.c	43;"	d	file:
TRANSPOSE4	libavcodec/x86/dsputil_mmx.h	92;"	d
TRANSPOSE8	libavcodec/ppc/util_altivec.h	63;"	d
TRANSPOSE8	libavcodec/x86/dsputil_mmx.h	144;"	d
TRANSPOSE8	libavcodec/x86/dsputil_mmx.h	159;"	d
TRANSPOSE8x4	libavcodec/x86/dsputil_mmx.h	128;"	d
TRELLIS_STAGES	libavcodec/aaccoder.c	534;"	d	file:
TRELLIS_STATES	libavcodec/aaccoder.c	535;"	d	file:
TRIG_TABLES	libavcodec/Makefile	/^TRIG_TABLES  = cos cos_fixed sin$/;"	m
TRIG_TABLES	libavcodec/Makefile	/^TRIG_TABLES := $(TRIG_TABLES:%=$(SUBDIR)%_tables.c)$/;"	m
TRK__TAG	libavformat/4xm.c	37;"	d	file:
TRUEHD_FRAME_OFFSET	libavformat/spdifenc.c	389;"	d	file:
TS2D	libavfilter/vf_select.c	178;"	d	file:
TS2D	libavfilter/vf_setpts.c	99;"	d	file:
TSContext	libavcodec/truespeech.c	/^} TSContext;$/;"	t	typeref:struct:__anon160	file:
TS_DVHS_PACKET_SIZE	libavformat/mpegts.h	28;"	d
TS_FEC_PACKET_SIZE	libavformat/mpegts.h	27;"	d
TS_MAX_PACKET_SIZE	libavformat/mpegts.h	30;"	d
TS_PACKET_SIZE	libavformat/mpegts.h	29;"	d
TTAChannel	libavcodec/tta.c	/^typedef struct TTAChannel {$/;"	s	file:
TTAChannel	libavcodec/tta.c	/^} TTAChannel;$/;"	t	typeref:struct:TTAChannel	file:
TTAContext	libavcodec/tta.c	/^typedef struct TTAContext {$/;"	s	file:
TTAContext	libavcodec/tta.c	/^} TTAContext;$/;"	t	typeref:struct:TTAContext	file:
TTAContext	libavformat/tta.c	/^} TTAContext;$/;"	t	typeref:struct:__anon483	file:
TTAFilter	libavcodec/tta.c	/^typedef struct TTAFilter {$/;"	s	file:
TTAFilter	libavcodec/tta.c	/^} TTAFilter;$/;"	t	typeref:struct:TTAFilter	file:
TTARice	libavcodec/tta.c	/^typedef struct TTARice {$/;"	s	file:
TTARice	libavcodec/tta.c	/^} TTARice;$/;"	t	typeref:struct:TTARice	file:
TT_4X4	libavcodec/vc1.h	/^    TT_4X4$/;"	e	enum:TransformTypes
TT_4X8	libavcodec/vc1.h	/^    TT_4X8, \/\/Both halves$/;"	e	enum:TransformTypes
TT_4X8_LEFT	libavcodec/vc1.h	/^    TT_4X8_LEFT,$/;"	e	enum:TransformTypes
TT_4X8_RIGHT	libavcodec/vc1.h	/^    TT_4X8_RIGHT,$/;"	e	enum:TransformTypes
TT_8X4	libavcodec/vc1.h	/^    TT_8X4, \/\/Both halves$/;"	e	enum:TransformTypes
TT_8X4_BOTTOM	libavcodec/vc1.h	/^    TT_8X4_BOTTOM,$/;"	e	enum:TransformTypes
TT_8X4_TOP	libavcodec/vc1.h	/^    TT_8X4_TOP,$/;"	e	enum:TransformTypes
TT_8X8	libavcodec/vc1.h	/^    TT_8X8,$/;"	e	enum:TransformTypes
TWOMATRIXES	libavcodec/mjpegenc.c	44;"	d	file:
TXDContext	libavcodec/txd.c	/^typedef struct TXDContext {$/;"	s	file:
TXDContext	libavcodec/txd.c	/^} TXDContext;$/;"	t	typeref:struct:TXDContext	file:
TXD_EXTRA	libavformat/txd.c	27;"	d	file:
TXD_FILE	libavformat/txd.c	25;"	d	file:
TXD_INFO	libavformat/txd.c	26;"	d	file:
TXD_MARKER	libavformat/txd.c	30;"	d	file:
TXD_MARKER2	libavformat/txd.c	31;"	d	file:
TXD_TEXTURE	libavformat/txd.c	28;"	d	file:
TXD_TEXTURE_DATA	libavformat/txd.c	29;"	d	file:
TYPESIZE	libavcodec/shorten.c	45;"	d	file:
TYPE_CCE	libavcodec/aac.h	/^    TYPE_CCE,$/;"	e	enum:RawDataBlockType
TYPE_CPE	libavcodec/aac.h	/^    TYPE_CPE,$/;"	e	enum:RawDataBlockType
TYPE_DSE	libavcodec/aac.h	/^    TYPE_DSE,$/;"	e	enum:RawDataBlockType
TYPE_END	libavcodec/aac.h	/^    TYPE_END,$/;"	e	enum:RawDataBlockType
TYPE_FIL	libavcodec/aac.h	/^    TYPE_FIL,$/;"	e	enum:RawDataBlockType
TYPE_LFE	libavcodec/aac.h	/^    TYPE_LFE,$/;"	e	enum:RawDataBlockType
TYPE_PCE	libavcodec/aac.h	/^    TYPE_PCE,$/;"	e	enum:RawDataBlockType
TYPE_S16HL	libavcodec/shorten.c	51;"	d	file:
TYPE_S16LH	libavcodec/shorten.c	52;"	d	file:
TYPE_SCE	libavcodec/aac.h	/^    TYPE_SCE,$/;"	e	enum:RawDataBlockType
T_ASYN	libavformat/nsvdec.c	131;"	d	file:
T_HUFFMAN_ENV_1_5DB	libavcodec/aacsbr.c	/^    T_HUFFMAN_ENV_1_5DB,$/;"	e	enum:__anon116	file:
T_HUFFMAN_ENV_3_0DB	libavcodec/aacsbr.c	/^    T_HUFFMAN_ENV_3_0DB,$/;"	e	enum:__anon116	file:
T_HUFFMAN_ENV_BAL_1_5DB	libavcodec/aacsbr.c	/^    T_HUFFMAN_ENV_BAL_1_5DB,$/;"	e	enum:__anon116	file:
T_HUFFMAN_ENV_BAL_3_0DB	libavcodec/aacsbr.c	/^    T_HUFFMAN_ENV_BAL_3_0DB,$/;"	e	enum:__anon116	file:
T_HUFFMAN_NOISE_3_0DB	libavcodec/aacsbr.c	/^    T_HUFFMAN_NOISE_3_0DB,$/;"	e	enum:__anon116	file:
T_HUFFMAN_NOISE_BAL_3_0DB	libavcodec/aacsbr.c	/^    T_HUFFMAN_NOISE_BAL_3_0DB,$/;"	e	enum:__anon116	file:
T_KEYF	libavformat/nsvdec.c	132;"	d	file:
T_NONE	libavformat/nsvdec.c	129;"	d	file:
T_NSVF	libavformat/nsvdec.c	126;"	d	file:
T_NSVS	libavformat/nsvdec.c	127;"	d	file:
T_SUBT	libavformat/nsvdec.c	130;"	d	file:
T_TOC2	libavformat/nsvdec.c	128;"	d	file:
TargaCompr	libavcodec/targa.h	/^enum TargaCompr {$/;"	g
TargaContext	libavcodec/targa.c	/^typedef struct TargaContext {$/;"	s	file:
TargaContext	libavcodec/targa.c	/^} TargaContext;$/;"	t	typeref:struct:TargaContext	file:
TargaContext	libavcodec/targaenc.c	/^typedef struct TargaContext {$/;"	s	file:
TargaContext	libavcodec/targaenc.c	/^} TargaContext;$/;"	t	typeref:struct:TargaContext	file:
Telem	libavcodec/bfin/dsputil_bfin.h	/^static double Telem[16];$/;"	v
TelemCnt	libavcodec/bfin/dsputil_bfin.h	/^static int    TelemCnt;$/;"	v
TelemNames	libavcodec/bfin/dsputil_bfin.h	/^static char  *TelemNames[16];$/;"	v
TemporalNoiseShaping	libavcodec/aac.h	/^} TemporalNoiseShaping;$/;"	t	typeref:struct:__anon240
TestContext	libavutil/opt.c	/^typedef struct TestContext$/;"	s	file:
TestContext	libavutil/opt.c	/^} TestContext;$/;"	t	typeref:struct:TestContext	file:
TgqContext	libavcodec/eatgq.c	/^typedef struct TgqContext {$/;"	s	file:
TgqContext	libavcodec/eatgq.c	/^} TgqContext;$/;"	t	typeref:struct:TgqContext	file:
TgvContext	libavcodec/eatgv.c	/^typedef struct TgvContext {$/;"	s	file:
TgvContext	libavcodec/eatgv.c	/^} TgvContext;$/;"	t	typeref:struct:TgvContext	file:
TheoraContext	libavcodec/libtheoraenc.c	/^typedef struct TheoraContext {$/;"	s	file:
TheoraContext	libavcodec/libtheoraenc.c	/^} TheoraContext;$/;"	t	typeref:struct:TheoraContext	file:
ThpDemuxContext	libavformat/thp.c	/^typedef struct ThpDemuxContext {$/;"	s	file:
ThpDemuxContext	libavformat/thp.c	/^} ThpDemuxContext;$/;"	t	typeref:struct:ThpDemuxContext	file:
ThreadContext	libavcodec/pthread.c	/^typedef struct ThreadContext {$/;"	s	file:
ThreadContext	libavcodec/pthread.c	/^} ThreadContext;$/;"	t	typeref:struct:ThreadContext	file:
ThreadContext	libavcodec/w32thread.c	/^typedef struct ThreadContext{$/;"	s	file:
ThreadContext	libavcodec/w32thread.c	/^}ThreadContext;$/;"	t	typeref:struct:ThreadContext	file:
TiertexSeqFrameBuffer	libavformat/tiertexseq.c	/^typedef struct TiertexSeqFrameBuffer {$/;"	s	file:
TiertexSeqFrameBuffer	libavformat/tiertexseq.c	/^} TiertexSeqFrameBuffer;$/;"	t	typeref:struct:TiertexSeqFrameBuffer	file:
TiffCompr	libavcodec/tiff.h	/^enum TiffCompr{$/;"	g
TiffContext	libavcodec/tiff.c	/^typedef struct TiffContext {$/;"	s	file:
TiffContext	libavcodec/tiff.c	/^} TiffContext;$/;"	t	typeref:struct:TiffContext	file:
TiffEncoderContext	libavcodec/tiffenc.c	/^typedef struct TiffEncoderContext {$/;"	s	file:
TiffEncoderContext	libavcodec/tiffenc.c	/^} TiffEncoderContext;$/;"	t	typeref:struct:TiffEncoderContext	file:
TiffTags	libavcodec/tiff.h	/^enum TiffTags{$/;"	g
TiffTypes	libavcodec/tiff.h	/^enum TiffTypes{$/;"	g
TimeFilter	libavformat/timefilter.c	/^struct TimeFilter {$/;"	s	file:
TimeFilter	libavformat/timefilter.h	/^typedef struct TimeFilter TimeFilter;$/;"	t	typeref:struct:TimeFilter
TimecodeComponent	libavformat/mxf.h	/^    TimecodeComponent,$/;"	e	enum:MXFMetadataSetType
TqiContext	libavcodec/eatqi.c	/^typedef struct TqiContext {$/;"	s	file:
TqiContext	libavcodec/eatqi.c	/^} TqiContext;$/;"	t	typeref:struct:TqiContext	file:
Track	libavformat/mxf.h	/^    Track,$/;"	e	enum:MXFMetadataSetType
TransContext	libavfilter/vf_transpose.c	/^} TransContext;$/;"	t	typeref:struct:__anon45	file:
TransformTypes	libavcodec/vc1.h	/^enum TransformTypes {$/;"	g
Tree	libavcodec/bink.c	/^typedef struct Tree {$/;"	s	file:
Tree	libavcodec/bink.c	/^} Tree;$/;"	t	typeref:struct:Tree	file:
TrellisNode	libavcodec/adpcm.c	/^typedef struct TrellisNode {$/;"	s	file:
TrellisNode	libavcodec/adpcm.c	/^} TrellisNode;$/;"	t	typeref:struct:TrellisNode	file:
TrellisNode	libavcodec/g722.c	/^    struct TrellisNode {$/;"	s	struct:__anon140	file:
TrellisPath	libavcodec/aaccoder.c	/^typedef struct TrellisPath {$/;"	s	file:
TrellisPath	libavcodec/aaccoder.c	/^} TrellisPath;$/;"	t	typeref:struct:TrellisPath	file:
TrellisPath	libavcodec/adpcm.c	/^typedef struct TrellisPath {$/;"	s	file:
TrellisPath	libavcodec/adpcm.c	/^} TrellisPath;$/;"	t	typeref:struct:TrellisPath	file:
TrellisPath	libavcodec/g722.c	/^    struct TrellisPath {$/;"	s	struct:__anon140	file:
TrueMotion1Context	libavcodec/truemotion1.c	/^typedef struct TrueMotion1Context {$/;"	s	file:
TrueMotion1Context	libavcodec/truemotion1.c	/^} TrueMotion1Context;$/;"	t	typeref:struct:TrueMotion1Context	file:
TsccContext	libavcodec/tscc.c	/^typedef struct TsccContext {$/;"	s	file:
TtyDemuxContext	libavformat/tty.c	/^} TtyDemuxContext;$/;"	t	typeref:struct:__anon485	file:
TwinContext	libavcodec/twinvq.c	/^typedef struct TwinContext {$/;"	s	file:
TwinContext	libavcodec/twinvq.c	/^} TwinContext;$/;"	t	typeref:struct:TwinContext	file:
TypeBottom	libavformat/mxf.h	/^    TypeBottom,\/\/ add metadata type before this$/;"	e	enum:MXFMetadataSetType
U	libavfilter/vf_drawbox.c	/^enum { Y, U, V, A };$/;"	e	enum:__anon19	file:
U	libavfilter/vf_lut.c	74;"	d	file:
U1	libavcodec/truemotion2.c	/^    int *Y1, *U1, *V1, *Y2, *U2, *V2;$/;"	m	struct:TM2Context	file:
U2	libavcodec/truemotion2.c	/^    int *Y1, *U1, *V1, *Y2, *U2, *V2;$/;"	m	struct:TM2Context	file:
UB_COEFF	libswscale/swscale_internal.h	218;"	d
UDPContext	libavformat/udp.c	/^} UDPContext;$/;"	t	typeref:struct:__anon320	file:
UDP_MAX_PKT_SIZE	libavformat/udp.c	71;"	d	file:
UDP_TX_BUF_SIZE	libavformat/udp.c	70;"	d	file:
UG_COEFF	libswscale/swscale_internal.h	220;"	d
UID	libavformat/mxf.h	/^typedef uint8_t UID[16];$/;"	t
UINT32_MAX	libavutil/internal.h	73;"	d
UINT64_MAX	libavutil/internal.h	85;"	d
ULONGSIZE	libavcodec/shorten.c	39;"	d	file:
UMULH	libavcodec/mathops.h	/^static av_always_inline unsigned UMULH(unsigned a, unsigned b){$/;"	f
UNFOLD	libavcodec/tta.c	390;"	d	file:
UNI_AC_ENC_INDEX	libavcodec/mpegvideo.h	441;"	d
UNI_MPEG4_ENC_INDEX	libavcodec/ituh263enc.c	68;"	d	file:
UNI_MPEG4_ENC_INDEX	libavcodec/mpeg4videoenc.c	43;"	d	file:
UNPACK	libavcodec/sh4/dsputil_align.c	33;"	d	file:
UNROLL1	libavcodec/pngdec.c	146;"	d	file:
UNROLL_FILTER	libavcodec/pngdec.c	162;"	d	file:
UP	libavcodec/cdgraphics.c	168;"	d	file:
UPDATE_CACHE	libavcodec/get_bits.h	135;"	d
UPDATE_CACHE	libavcodec/get_bits.h	140;"	d
UPDATE_CACHE	libavcodec/get_bits.h	194;"	d
UPDATE_WEIGHT_CLIP	libavcodec/wavpack.c	218;"	d	file:
UPS_FIR_SIZE	libavcodec/amrwbdata.h	36;"	d
UPS_MEM_SIZE	libavcodec/amrwbdata.h	37;"	d
URLContext	libavformat/avio.h	/^typedef struct URLContext {$/;"	s
URLContext	libavformat/avio.h	/^} URLContext;$/;"	t	typeref:struct:URLContext
URLContext	libavformat/url.h	/^typedef struct URLContext {$/;"	s
URLContext	libavformat/url.h	/^} URLContext;$/;"	t	typeref:struct:URLContext
URLInterruptCB	libavformat/avio.h	/^typedef int URLInterruptCB(void);$/;"	t
URLPollEntry	libavformat/avio.h	/^typedef struct URLPollEntry {$/;"	s
URLPollEntry	libavformat/avio.h	/^} URLPollEntry;$/;"	t	typeref:struct:URLPollEntry
URLProtocol	libavformat/avio.h	/^typedef struct URLProtocol {$/;"	s
URLProtocol	libavformat/avio.h	/^} URLProtocol;$/;"	t	typeref:struct:URLProtocol
URLProtocol	libavformat/url.h	/^typedef struct URLProtocol {$/;"	s
URLProtocol	libavformat/url.h	/^} URLProtocol;$/;"	t	typeref:struct:URLProtocol
URL_EOF	libavformat/avio.h	285;"	d
URL_FLAG_NONBLOCK	libavformat/avio.h	172;"	d
URL_PROTOCOL_FLAG_NESTED_SCHEME	libavformat/avio.h	114;"	d
URL_PROTOCOL_FLAG_NESTED_SCHEME	libavformat/url.h	32;"	d
URL_RDONLY	libavformat/avio.h	153;"	d
URL_RDWR	libavformat/avio.h	155;"	d
URL_SCHEME_CHARS	libavformat/avio.c	215;"	d	file:
URL_WRONLY	libavformat/avio.h	154;"	d
USERAGENT	libavformat/mmsh.c	41;"	d	file:
USER_DATA_STARTCODE	libavcodec/mpeg4video.h	56;"	d
USER_START_CODE	libavcodec/cavs.h	31;"	d
USER_START_CODE	libavcodec/mpegvideo.h	77;"	d
USES_LIST	libavcodec/mpegvideo.h	116;"	d
USE_FLOATS	libavcodec/mpegaudioenc.c	61;"	d	file:
USE_HALFPEL_PLANE	libavcodec/snow.c	1915;"	d	file:
UUID_ATOM	tools/qt-faststart.c	68;"	d	file:
UV_LOOP_FILTER	libavcodec/vp8dsp.c	268;"	d	file:
UV_OFF	libswscale/swscale_internal.h	233;"	d
UV_OFFx2	libswscale/swscale_internal.h	234;"	d
U_CBP_MASK	libavcodec/rv34.c	1104;"	d	file:
U_OFFSET	libswscale/swscale_internal.h	222;"	d
U_TEMP	libswscale/swscale_internal.h	229;"	d
Ubuf	libavcodec/indeo3.c	/^    uint8_t *Ubuf;$/;"	m	struct:__anon54	file:
UltimotionDecodeContext	libavcodec/ulti.c	/^typedef struct UltimotionDecodeContext {$/;"	s	file:
UltimotionDecodeContext	libavcodec/ulti.c	/^} UltimotionDecodeContext;$/;"	t	typeref:struct:UltimotionDecodeContext	file:
UnQMF	libavcodec/dcaenc.h	/^static const int32_t UnQMF[512] = {$/;"	v
UnsharpContext	libavfilter/vf_unsharp.c	/^} UnsharpContext;$/;"	t	typeref:struct:__anon50	file:
V	libavcodec/libvpxenc.c	73;"	d	file:
V	libavcodec/libvpxenc.c	92;"	d	file:
V	libavcodec/options.c	472;"	d	file:
V	libavcodec/options.c	62;"	d	file:
V	libavfilter/vf_drawbox.c	/^enum { Y, U, V, A };$/;"	e	enum:__anon19	file:
V	libavfilter/vf_lut.c	75;"	d	file:
V	libavformat/nsvdec.c	362;"	d	file:
V	libavformat/nsvdec.c	377;"	d	file:
V1	libavcodec/truemotion2.c	/^    int *Y1, *U1, *V1, *Y2, *U2, *V2;$/;"	m	struct:TM2Context	file:
V2	libavcodec/truemotion2.c	/^    int *Y1, *U1, *V1, *Y2, *U2, *V2;$/;"	m	struct:TM2Context	file:
V2LPCQOFFSET	libavcodec/shorten.c	58;"	d	file:
V2_INTRA_CBPC_VLC_BITS	libavcodec/msmpeg4.c	48;"	d	file:
V2_MB_TYPE_VLC_BITS	libavcodec/msmpeg4.c	49;"	d	file:
V2_MV_VLC_BITS	libavcodec/msmpeg4.c	51;"	d	file:
VALIDATE_INDEX	libavcodec/vorbisdec.c	160;"	d	file:
VALUE_BITS	libavcodec/bgmc.c	33;"	d	file:
VARFIX	libavcodec/aacsbr.c	/^    VARFIX,$/;"	e	enum:__anon117	file:
VARS	libavutil/eval.c	45;"	d	file:
VARS_NB	libavfilter/vf_pad.c	/^    VARS_NB$/;"	e	enum:var_name	file:
VARS_NB	libavfilter/vf_scale.c	/^    VARS_NB$/;"	e	enum:var_name	file:
VARVAR	libavcodec/aacsbr.c	/^    VARVAR,$/;"	e	enum:__anon117	file:
VAR_A	libavfilter/vf_pad.c	/^    VAR_A,$/;"	e	enum:var_name	file:
VAR_A	libavfilter/vf_scale.c	/^    VAR_A,$/;"	e	enum:var_name	file:
VAR_AVTB	libavfilter/vf_settb.c	/^    VAR_AVTB,$/;"	e	enum:var_name	file:
VAR_AVTB	libavfilter/vsrc_nullsrc.c	/^    VAR_AVTB,$/;"	e	enum:var_name	file:
VAR_CLIPVAL	libavfilter/vf_lut.c	/^    VAR_CLIPVAL,$/;"	e	enum:var_name	file:
VAR_E	libavfilter/vf_crop.c	/^    VAR_E,$/;"	e	enum:var_name	file:
VAR_E	libavfilter/vf_lut.c	/^    VAR_E,$/;"	e	enum:var_name	file:
VAR_E	libavfilter/vf_overlay.c	/^    VAR_E,$/;"	e	enum:var_name	file:
VAR_E	libavfilter/vf_pad.c	/^    VAR_E,$/;"	e	enum:var_name	file:
VAR_E	libavfilter/vf_scale.c	/^    VAR_E,$/;"	e	enum:var_name	file:
VAR_E	libavfilter/vf_select.c	/^    VAR_E,$/;"	e	enum:var_name	file:
VAR_E	libavfilter/vf_setpts.c	/^    VAR_E,$/;"	e	enum:var_name	file:
VAR_E	libavfilter/vf_settb.c	/^    VAR_E,$/;"	e	enum:var_name	file:
VAR_E	libavfilter/vsrc_nullsrc.c	/^    VAR_E,$/;"	e	enum:var_name	file:
VAR_H	libavfilter/vf_lut.c	/^    VAR_H,$/;"	e	enum:var_name	file:
VAR_HSUB	libavfilter/vf_pad.c	/^    VAR_HSUB,$/;"	e	enum:var_name	file:
VAR_HSUB	libavfilter/vf_scale.c	/^    VAR_HSUB,$/;"	e	enum:var_name	file:
VAR_IH	libavfilter/vf_crop.c	/^    VAR_IN_H,  VAR_IH,$/;"	e	enum:var_name	file:
VAR_IH	libavfilter/vf_pad.c	/^    VAR_IN_H,   VAR_IH,$/;"	e	enum:var_name	file:
VAR_IH	libavfilter/vf_scale.c	/^    VAR_IN_H,   VAR_IH,$/;"	e	enum:var_name	file:
VAR_INTB	libavfilter/vf_settb.c	/^    VAR_INTB,$/;"	e	enum:var_name	file:
VAR_INTERLACED	libavfilter/vf_setpts.c	/^    VAR_INTERLACED,$/;"	e	enum:var_name	file:
VAR_INTERLACE_TYPE	libavfilter/vf_select.c	/^    VAR_INTERLACE_TYPE,$/;"	e	enum:var_name	file:
VAR_INTERLACE_TYPE_B	libavfilter/vf_select.c	/^    VAR_INTERLACE_TYPE_B,$/;"	e	enum:var_name	file:
VAR_INTERLACE_TYPE_P	libavfilter/vf_select.c	/^    VAR_INTERLACE_TYPE_P,$/;"	e	enum:var_name	file:
VAR_INTERLACE_TYPE_T	libavfilter/vf_select.c	/^    VAR_INTERLACE_TYPE_T,$/;"	e	enum:var_name	file:
VAR_IN_H	libavfilter/vf_crop.c	/^    VAR_IN_H,  VAR_IH,$/;"	e	enum:var_name	file:
VAR_IN_H	libavfilter/vf_pad.c	/^    VAR_IN_H,   VAR_IH,$/;"	e	enum:var_name	file:
VAR_IN_H	libavfilter/vf_scale.c	/^    VAR_IN_H,   VAR_IH,$/;"	e	enum:var_name	file:
VAR_IN_W	libavfilter/vf_crop.c	/^    VAR_IN_W,  VAR_IW,$/;"	e	enum:var_name	file:
VAR_IN_W	libavfilter/vf_pad.c	/^    VAR_IN_W,   VAR_IW,$/;"	e	enum:var_name	file:
VAR_IN_W	libavfilter/vf_scale.c	/^    VAR_IN_W,   VAR_IW,$/;"	e	enum:var_name	file:
VAR_IW	libavfilter/vf_crop.c	/^    VAR_IN_W,  VAR_IW,$/;"	e	enum:var_name	file:
VAR_IW	libavfilter/vf_pad.c	/^    VAR_IN_W,   VAR_IW,$/;"	e	enum:var_name	file:
VAR_IW	libavfilter/vf_scale.c	/^    VAR_IN_W,   VAR_IW,$/;"	e	enum:var_name	file:
VAR_KEY	libavfilter/vf_select.c	/^    VAR_KEY,$/;"	e	enum:var_name	file:
VAR_MAIN_H	libavfilter/vf_overlay.c	/^    VAR_MAIN_H,    VAR_MH,$/;"	e	enum:var_name	file:
VAR_MAIN_W	libavfilter/vf_overlay.c	/^    VAR_MAIN_W,    VAR_MW,$/;"	e	enum:var_name	file:
VAR_MAXVAL	libavfilter/vf_lut.c	/^    VAR_MAXVAL,$/;"	e	enum:var_name	file:
VAR_MH	libavfilter/vf_overlay.c	/^    VAR_MAIN_H,    VAR_MH,$/;"	e	enum:var_name	file:
VAR_MINVAL	libavfilter/vf_lut.c	/^    VAR_MINVAL,$/;"	e	enum:var_name	file:
VAR_MW	libavfilter/vf_overlay.c	/^    VAR_MAIN_W,    VAR_MW,$/;"	e	enum:var_name	file:
VAR_N	libavfilter/vf_crop.c	/^    VAR_N,$/;"	e	enum:var_name	file:
VAR_N	libavfilter/vf_select.c	/^    VAR_N,$/;"	e	enum:var_name	file:
VAR_N	libavfilter/vf_setpts.c	/^    VAR_N,$/;"	e	enum:var_name	file:
VAR_NEGVAL	libavfilter/vf_lut.c	/^    VAR_NEGVAL,$/;"	e	enum:var_name	file:
VAR_OH	libavfilter/vf_crop.c	/^    VAR_OUT_H, VAR_OH,$/;"	e	enum:var_name	file:
VAR_OH	libavfilter/vf_overlay.c	/^    VAR_OVERLAY_H, VAR_OH,$/;"	e	enum:var_name	file:
VAR_OH	libavfilter/vf_pad.c	/^    VAR_OUT_H,  VAR_OH,$/;"	e	enum:var_name	file:
VAR_OH	libavfilter/vf_scale.c	/^    VAR_OUT_H,  VAR_OH,$/;"	e	enum:var_name	file:
VAR_OUT_H	libavfilter/vf_crop.c	/^    VAR_OUT_H, VAR_OH,$/;"	e	enum:var_name	file:
VAR_OUT_H	libavfilter/vf_pad.c	/^    VAR_OUT_H,  VAR_OH,$/;"	e	enum:var_name	file:
VAR_OUT_H	libavfilter/vf_scale.c	/^    VAR_OUT_H,  VAR_OH,$/;"	e	enum:var_name	file:
VAR_OUT_W	libavfilter/vf_crop.c	/^    VAR_OUT_W, VAR_OW,$/;"	e	enum:var_name	file:
VAR_OUT_W	libavfilter/vf_pad.c	/^    VAR_OUT_W,  VAR_OW,$/;"	e	enum:var_name	file:
VAR_OUT_W	libavfilter/vf_scale.c	/^    VAR_OUT_W,  VAR_OW,$/;"	e	enum:var_name	file:
VAR_OVERLAY_H	libavfilter/vf_overlay.c	/^    VAR_OVERLAY_H, VAR_OH,$/;"	e	enum:var_name	file:
VAR_OVERLAY_W	libavfilter/vf_overlay.c	/^    VAR_OVERLAY_W, VAR_OW,$/;"	e	enum:var_name	file:
VAR_OW	libavfilter/vf_crop.c	/^    VAR_OUT_W, VAR_OW,$/;"	e	enum:var_name	file:
VAR_OW	libavfilter/vf_overlay.c	/^    VAR_OVERLAY_W, VAR_OW,$/;"	e	enum:var_name	file:
VAR_OW	libavfilter/vf_pad.c	/^    VAR_OUT_W,  VAR_OW,$/;"	e	enum:var_name	file:
VAR_OW	libavfilter/vf_scale.c	/^    VAR_OUT_W,  VAR_OW,$/;"	e	enum:var_name	file:
VAR_PHI	libavfilter/vf_crop.c	/^    VAR_PHI,$/;"	e	enum:var_name	file:
VAR_PHI	libavfilter/vf_lut.c	/^    VAR_PHI,$/;"	e	enum:var_name	file:
VAR_PHI	libavfilter/vf_overlay.c	/^    VAR_PHI,$/;"	e	enum:var_name	file:
VAR_PHI	libavfilter/vf_pad.c	/^    VAR_PHI,$/;"	e	enum:var_name	file:
VAR_PHI	libavfilter/vf_scale.c	/^    VAR_PHI,$/;"	e	enum:var_name	file:
VAR_PHI	libavfilter/vf_select.c	/^    VAR_PHI,$/;"	e	enum:var_name	file:
VAR_PHI	libavfilter/vf_setpts.c	/^    VAR_PHI,$/;"	e	enum:var_name	file:
VAR_PHI	libavfilter/vf_settb.c	/^    VAR_PHI,$/;"	e	enum:var_name	file:
VAR_PHI	libavfilter/vsrc_nullsrc.c	/^    VAR_PHI,$/;"	e	enum:var_name	file:
VAR_PI	libavfilter/vf_crop.c	/^    VAR_PI,$/;"	e	enum:var_name	file:
VAR_PI	libavfilter/vf_lut.c	/^    VAR_PI,$/;"	e	enum:var_name	file:
VAR_PI	libavfilter/vf_overlay.c	/^    VAR_PI,$/;"	e	enum:var_name	file:
VAR_PI	libavfilter/vf_pad.c	/^    VAR_PI,$/;"	e	enum:var_name	file:
VAR_PI	libavfilter/vf_scale.c	/^    VAR_PI,$/;"	e	enum:var_name	file:
VAR_PI	libavfilter/vf_select.c	/^    VAR_PI,$/;"	e	enum:var_name	file:
VAR_PI	libavfilter/vf_setpts.c	/^    VAR_PI,$/;"	e	enum:var_name	file:
VAR_PI	libavfilter/vf_settb.c	/^    VAR_PI,$/;"	e	enum:var_name	file:
VAR_PI	libavfilter/vsrc_nullsrc.c	/^    VAR_PI,$/;"	e	enum:var_name	file:
VAR_PICT_TYPE	libavfilter/vf_select.c	/^    VAR_PICT_TYPE,$/;"	e	enum:var_name	file:
VAR_PICT_TYPE_B	libavfilter/vf_select.c	/^    VAR_PICT_TYPE_B,$/;"	e	enum:var_name	file:
VAR_PICT_TYPE_BI	libavfilter/vf_select.c	/^    VAR_PICT_TYPE_BI,$/;"	e	enum:var_name	file:
VAR_PICT_TYPE_I	libavfilter/vf_select.c	/^    VAR_PICT_TYPE_I,$/;"	e	enum:var_name	file:
VAR_PICT_TYPE_P	libavfilter/vf_select.c	/^    VAR_PICT_TYPE_P,$/;"	e	enum:var_name	file:
VAR_PICT_TYPE_S	libavfilter/vf_select.c	/^    VAR_PICT_TYPE_S,$/;"	e	enum:var_name	file:
VAR_PICT_TYPE_SI	libavfilter/vf_select.c	/^    VAR_PICT_TYPE_SI,$/;"	e	enum:var_name	file:
VAR_PICT_TYPE_SP	libavfilter/vf_select.c	/^    VAR_PICT_TYPE_SP,$/;"	e	enum:var_name	file:
VAR_POS	libavfilter/vf_crop.c	/^    VAR_POS,$/;"	e	enum:var_name	file:
VAR_POS	libavfilter/vf_select.c	/^    VAR_POS,$/;"	e	enum:var_name	file:
VAR_POS	libavfilter/vf_setpts.c	/^    VAR_POS,$/;"	e	enum:var_name	file:
VAR_PREV_INPTS	libavfilter/vf_setpts.c	/^    VAR_PREV_INPTS,$/;"	e	enum:var_name	file:
VAR_PREV_OUTPTS	libavfilter/vf_setpts.c	/^    VAR_PREV_OUTPTS,$/;"	e	enum:var_name	file:
VAR_PREV_PTS	libavfilter/vf_select.c	/^    VAR_PREV_PTS,$/;"	e	enum:var_name	file:
VAR_PREV_SELECTED_N	libavfilter/vf_select.c	/^    VAR_PREV_SELECTED_N,$/;"	e	enum:var_name	file:
VAR_PREV_SELECTED_PTS	libavfilter/vf_select.c	/^    VAR_PREV_SELECTED_PTS,$/;"	e	enum:var_name	file:
VAR_PREV_SELECTED_T	libavfilter/vf_select.c	/^    VAR_PREV_SELECTED_T,$/;"	e	enum:var_name	file:
VAR_PREV_T	libavfilter/vf_select.c	/^    VAR_PREV_T,$/;"	e	enum:var_name	file:
VAR_PTS	libavfilter/vf_select.c	/^    VAR_PTS,$/;"	e	enum:var_name	file:
VAR_PTS	libavfilter/vf_setpts.c	/^    VAR_PTS,$/;"	e	enum:var_name	file:
VAR_SELECTED_N	libavfilter/vf_select.c	/^    VAR_SELECTED_N,$/;"	e	enum:var_name	file:
VAR_STARTPTS	libavfilter/vf_setpts.c	/^    VAR_STARTPTS,$/;"	e	enum:var_name	file:
VAR_START_PTS	libavfilter/vf_select.c	/^    VAR_START_PTS,$/;"	e	enum:var_name	file:
VAR_START_T	libavfilter/vf_select.c	/^    VAR_START_T,$/;"	e	enum:var_name	file:
VAR_T	libavfilter/vf_crop.c	/^    VAR_T,$/;"	e	enum:var_name	file:
VAR_T	libavfilter/vf_select.c	/^    VAR_T,$/;"	e	enum:var_name	file:
VAR_TB	libavfilter/vf_select.c	/^    VAR_TB,$/;"	e	enum:var_name	file:
VAR_TB	libavfilter/vf_setpts.c	/^    VAR_TB,$/;"	e	enum:var_name	file:
VAR_VAL	libavfilter/vf_lut.c	/^    VAR_VAL,$/;"	e	enum:var_name	file:
VAR_VARS_NB	libavfilter/vf_crop.c	/^    VAR_VARS_NB$/;"	e	enum:var_name	file:
VAR_VARS_NB	libavfilter/vf_lut.c	/^    VAR_VARS_NB$/;"	e	enum:var_name	file:
VAR_VARS_NB	libavfilter/vf_overlay.c	/^    VAR_VARS_NB$/;"	e	enum:var_name	file:
VAR_VARS_NB	libavfilter/vf_select.c	/^    VAR_VARS_NB$/;"	e	enum:var_name	file:
VAR_VARS_NB	libavfilter/vf_setpts.c	/^    VAR_VARS_NB$/;"	e	enum:var_name	file:
VAR_VARS_NB	libavfilter/vf_settb.c	/^    VAR_VARS_NB$/;"	e	enum:var_name	file:
VAR_VARS_NB	libavfilter/vsrc_nullsrc.c	/^    VAR_VARS_NB$/;"	e	enum:var_name	file:
VAR_VSUB	libavfilter/vf_pad.c	/^    VAR_VSUB,$/;"	e	enum:var_name	file:
VAR_VSUB	libavfilter/vf_scale.c	/^    VAR_VSUB,$/;"	e	enum:var_name	file:
VAR_W	libavfilter/vf_lut.c	/^    VAR_W,$/;"	e	enum:var_name	file:
VAR_X	libavfilter/vf_crop.c	/^    VAR_X,$/;"	e	enum:var_name	file:
VAR_X	libavfilter/vf_pad.c	/^    VAR_X,$/;"	e	enum:var_name	file:
VAR_Y	libavfilter/vf_crop.c	/^    VAR_Y,$/;"	e	enum:var_name	file:
VAR_Y	libavfilter/vf_pad.c	/^    VAR_Y,$/;"	e	enum:var_name	file:
VBDecContext	libavcodec/vb.c	/^typedef struct VBDecContext {$/;"	s	file:
VBDecContext	libavcodec/vb.c	/^} VBDecContext;$/;"	t	typeref:struct:VBDecContext	file:
VBFlags	libavcodec/vb.c	/^enum VBFlags{$/;"	g	file:
VBFlags	libavformat/siff.c	/^enum VBFlags{$/;"	g	file:
VBR_NUM_BAGS	libavformat/mp3enc.c	164;"	d	file:
VBR_TOC_SIZE	libavformat/mp3enc.c	165;"	d	file:
VB_HAS_AUDIO	libavcodec/vb.c	/^    VB_HAS_AUDIO   = 0x04,$/;"	e	enum:VBFlags	file:
VB_HAS_AUDIO	libavformat/siff.c	/^    VB_HAS_AUDIO   = 0x04,$/;"	e	enum:VBFlags	file:
VB_HAS_GMC	libavcodec/vb.c	/^    VB_HAS_GMC     = 0x01,$/;"	e	enum:VBFlags	file:
VB_HAS_GMC	libavformat/siff.c	/^    VB_HAS_GMC     = 0x01,$/;"	e	enum:VBFlags	file:
VB_HAS_LENGTH	libavcodec/vb.c	/^    VB_HAS_LENGTH  = 0x20$/;"	e	enum:VBFlags	file:
VB_HAS_LENGTH	libavformat/siff.c	/^    VB_HAS_LENGTH  = 0x20$/;"	e	enum:VBFlags	file:
VB_HAS_PALETTE	libavcodec/vb.c	/^    VB_HAS_PALETTE = 0x10,$/;"	e	enum:VBFlags	file:
VB_HAS_PALETTE	libavformat/siff.c	/^    VB_HAS_PALETTE = 0x10,$/;"	e	enum:VBFlags	file:
VB_HAS_VIDEO	libavcodec/vb.c	/^    VB_HAS_VIDEO   = 0x08,$/;"	e	enum:VBFlags	file:
VB_HAS_VIDEO	libavformat/siff.c	/^    VB_HAS_VIDEO   = 0x08,$/;"	e	enum:VBFlags	file:
VC1Code	libavcodec/vc1.h	/^enum VC1Code{$/;"	g
VC1Context	libavcodec/vc1.h	/^typedef struct VC1Context{$/;"	s
VC1Context	libavcodec/vc1.h	/^} VC1Context;$/;"	t	typeref:struct:VC1Context
VC1DSPContext	libavcodec/vc1dsp.h	/^typedef struct VC1DSPContext {$/;"	s
VC1DSPContext	libavcodec/vc1dsp.h	/^} VC1DSPContext;$/;"	t	typeref:struct:VC1DSPContext
VC1ParseContext	libavcodec/vc1_parser.c	/^} VC1ParseContext;$/;"	t	typeref:struct:__anon138	file:
VC1_4MV_BLOCK_PATTERN_VLC_BITS	libavcodec/vc1data.c	87;"	d	file:
VC1_4MV_BLOCK_PATTERN_VLC_BITS	libavcodec/vc1data.h	66;"	d
VC1_BFRACTION_VLC_BITS	libavcodec/vc1data.c	72;"	d	file:
VC1_BFRACTION_VLC_BITS	libavcodec/vc1data.h	51;"	d
VC1_CBPCY_P_VLC_BITS	libavcodec/vc1data.c	85;"	d	file:
VC1_CBPCY_P_VLC_BITS	libavcodec/vc1data.h	64;"	d
VC1_CODE_ENDOFSEQ	libavcodec/vc1.h	/^    VC1_CODE_ENDOFSEQ   = 0x0000010A,$/;"	e	enum:VC1Code
VC1_CODE_ENTRYPOINT	libavcodec/vc1.h	/^    VC1_CODE_ENTRYPOINT,$/;"	e	enum:VC1Code
VC1_CODE_FIELD	libavcodec/vc1.h	/^    VC1_CODE_FIELD,$/;"	e	enum:VC1Code
VC1_CODE_FRAME	libavcodec/vc1.h	/^    VC1_CODE_FRAME,$/;"	e	enum:VC1Code
VC1_CODE_RES0	libavcodec/vc1.h	/^    VC1_CODE_RES0       = 0x00000100,$/;"	e	enum:VC1Code
VC1_CODE_SEQHDR	libavcodec/vc1.h	/^    VC1_CODE_SEQHDR,$/;"	e	enum:VC1Code
VC1_CODE_SLICE	libavcodec/vc1.h	/^    VC1_CODE_SLICE,$/;"	e	enum:VC1Code
VC1_EXTRADATA_SIZE	libavformat/vc1test.c	32;"	d	file:
VC1_HOR_16b_SHIFT2	libavcodec/x86/vc1dsp_mmx.c	116;"	d	file:
VC1_IMODE_VLC_BITS	libavcodec/vc1data.c	74;"	d	file:
VC1_IMODE_VLC_BITS	libavcodec/vc1data.h	53;"	d
VC1_LF_MMX	libavcodec/x86/vc1dsp_yasm.asm	/^VC1_LF_MMX mmx$/;"	l
VC1_LF_MMX	libavcodec/x86/vc1dsp_yasm.asm	/^VC1_LF_MMX mmx2$/;"	l
VC1_MSPEL_FILTER_16B	libavcodec/vc1dsp.c	537;"	d	file:
VC1_MSPEL_MC	libavcodec/vc1dsp.c	576;"	d	file:
VC1_MSPEL_MC	libavcodec/x86/vc1dsp_mmx.c	417;"	d	file:
VC1_MV_DIFF_VLC_BITS	libavcodec/vc1data.c	83;"	d	file:
VC1_MV_DIFF_VLC_BITS	libavcodec/vc1data.h	62;"	d
VC1_NORM2_VLC_BITS	libavcodec/vc1data.c	76;"	d	file:
VC1_NORM2_VLC_BITS	libavcodec/vc1data.h	55;"	d
VC1_NORM6_VLC_BITS	libavcodec/vc1data.c	78;"	d	file:
VC1_NORM6_VLC_BITS	libavcodec/vc1data.h	57;"	d
VC1_SHIFT2	libavcodec/x86/vc1dsp_mmx.c	164;"	d	file:
VC1_SUBBLKPAT_VLC_BITS	libavcodec/vc1data.c	91;"	d	file:
VC1_SUBBLKPAT_VLC_BITS	libavcodec/vc1data.h	70;"	d
VC1_TTBLK_VLC_BITS	libavcodec/vc1data.c	89;"	d	file:
VC1_TTBLK_VLC_BITS	libavcodec/vc1data.h	68;"	d
VC1_TTMB_VLC_BITS	libavcodec/vc1data.c	81;"	d	file:
VC1_TTMB_VLC_BITS	libavcodec/vc1data.h	60;"	d
VCODEC_TESTS	config.mak	/^VCODEC_TESTS=asv1 asv2 dnxhd_1080i dnxhd_720p dnxhd_720p_rd dv dv50 error ffv1 flashsv2 flv h261 h263 h263p huffyuv jpegls ljpeg mjpeg mpeg mpeg1b mpeg2 mpeg2thread mpeg4 mpeg4adv mpeg4nr mpeg4thread msmpeg4 msmpeg4v2 msvideo1 qtrle qtrlegray rc rgb roq rv10 rv20 snow snowll svq1 vref wmv1 wmv2 yuv $/;"	m
VCR1Context	libavcodec/vcr1.c	/^typedef struct VCR1Context{$/;"	s	file:
VCR1Context	libavcodec/vcr1.c	/^} VCR1Context;$/;"	t	typeref:struct:VCR1Context	file:
VE	libavcodec/dnxhdenc.c	33;"	d	file:
VE	libavcodec/libx264.c	431;"	d	file:
VE	libswscale/options.c	34;"	d	file:
VEC1MAXDEPTH	libavcodec/wmaprodec.c	114;"	d	file:
VEC2MAXDEPTH	libavcodec/wmaprodec.c	113;"	d	file:
VEC4MAXDEPTH	libavcodec/wmaprodec.c	112;"	d	file:
VEC_1D_DCT	libavcodec/ppc/h264_altivec.c	280;"	d	file:
VEC_LOAD_U8_ADD_S16_STORE_U8	libavcodec/ppc/h264_altivec.c	308;"	d	file:
VEC_TRANSPOSE_4	libavcodec/ppc/h264_altivec.c	294;"	d	file:
VERBATIM_BYTE_SIZE	libavcodec/shorten.c	73;"	d	file:
VERBATIM_CKSIZE_SIZE	libavcodec/shorten.c	72;"	d	file:
VERSION_SH	Makefile	/^VERSION_SH  = $(SRC_PATH_BARE)\/version.sh$/;"	m
VERTICAL_EXTEND	libavcodec/x86/dsputil_yasm.asm	/^VERTICAL_EXTEND   %1$/;"	l
VERT_LEFT_PRED	libavcodec/h264pred.h	45;"	d
VERT_LEFT_PRED_RV40_NODOWN	libavcodec/h264pred.h	56;"	d
VERT_PRED	libavcodec/h264pred.h	38;"	d
VERT_PRED8x8	libavcodec/h264pred.h	70;"	d
VERT_RIGHT_PRED	libavcodec/h264pred.h	43;"	d
VERT_VP8_PRED	libavcodec/h264pred.h	60;"	d
VERYCLOSE	libavfilter/libmpcodecs/vf_detc.c	52;"	d	file:
VFCAP_ACCEPT_STRIDE	libavfilter/libmpcodecs/vfcap.h	44;"	d
VFCAP_CONSTANT	libavfilter/libmpcodecs/vfcap.h	48;"	d
VFCAP_CSP_SUPPORTED	libavfilter/libmpcodecs/vfcap.h	24;"	d
VFCAP_CSP_SUPPORTED_BY_HW	libavfilter/libmpcodecs/vfcap.h	26;"	d
VFCAP_EOSD	libavfilter/libmpcodecs/vfcap.h	50;"	d
VFCAP_EOSD_UNSCALED	libavfilter/libmpcodecs/vfcap.h	52;"	d
VFCAP_FLIP	libavfilter/libmpcodecs/vfcap.h	36;"	d
VFCAP_FLIPPED	libavfilter/libmpcodecs/vfcap.h	41;"	d
VFCAP_HWSCALE_DOWN	libavfilter/libmpcodecs/vfcap.h	33;"	d
VFCAP_HWSCALE_UP	libavfilter/libmpcodecs/vfcap.h	32;"	d
VFCAP_OSD	libavfilter/libmpcodecs/vfcap.h	28;"	d
VFCAP_POSTPROC	libavfilter/libmpcodecs/vfcap.h	46;"	d
VFCAP_SPU	libavfilter/libmpcodecs/vfcap.h	30;"	d
VFCAP_SWSCALE	libavfilter/libmpcodecs/vfcap.h	34;"	d
VFCAP_TIMER	libavfilter/libmpcodecs/vfcap.h	39;"	d
VFCTRL_CHANGE_RECTANGLE	libavfilter/libmpcodecs/vf.h	103;"	d
VFCTRL_DRAW_EOSD	libavfilter/libmpcodecs/vf.h	110;"	d
VFCTRL_DRAW_OSD	libavfilter/libmpcodecs/vf.h	102;"	d
VFCTRL_DUPLICATE_FRAME	libavfilter/libmpcodecs/vf.h	105;"	d
VFCTRL_FLIP_PAGE	libavfilter/libmpcodecs/vf.h	104;"	d
VFCTRL_FLUSH_FRAMES	libavfilter/libmpcodecs/vf.h	107;"	d
VFCTRL_GET_DEINTERLACE	libavfilter/libmpcodecs/vf.h	113;"	d
VFCTRL_GET_EQUALIZER	libavfilter/libmpcodecs/vf.h	101;"	d
VFCTRL_GET_PTS	libavfilter/libmpcodecs/vf.h	111;"	d
VFCTRL_INIT_EOSD	libavfilter/libmpcodecs/vf.h	109;"	d
VFCTRL_QUERY_MAX_PP_LEVEL	libavfilter/libmpcodecs/vf.h	98;"	d
VFCTRL_SCREENSHOT	libavfilter/libmpcodecs/vf.h	108;"	d
VFCTRL_SET_DEINTERLACE	libavfilter/libmpcodecs/vf.h	112;"	d
VFCTRL_SET_EQUALIZER	libavfilter/libmpcodecs/vf.h	100;"	d
VFCTRL_SET_PP_LEVEL	libavfilter/libmpcodecs/vf.h	99;"	d
VFCTRL_SKIP_NEXT_FRAME	libavfilter/libmpcodecs/vf.h	106;"	d
VFP	libavcodec/arm/dsputil_neon.S	/^VFP     len .req r2$/;"	l
VFP	libavcodec/arm/dsputil_neon.S	/^VFP     vdup.32         d16, d0[0]$/;"	l
VFP	libavcodec/arm/dsputil_neon.S	/^VFP     vdup.32         q0,  d0[0]$/;"	l
VFP	libavcodec/arm/dsputil_neon.S	/^VFP     vdup.32         q1,  d0[1]$/;"	l
VFP	libavcodec/arm/dsputil_neon.S	/^VFP     vdup.32         q10, d0[0]$/;"	l
VFP	libavcodec/arm/dsputil_neon.S	/^VFP     vdup.32         q8,  d0[0]$/;"	l
VFP	libavcodec/arm/fmtconvert_neon.S	/^VFP     len     .req    r2$/;"	l
VFP	libavcodec/arm/fmtconvert_neon.S	/^VFP     vdup.32         q0,  d0[0]$/;"	l
VFP	libavcodec/arm/synth_filter_neon.S	/^VFP     vpop            {d0}$/;"	l
VFP	libavcodec/arm/synth_filter_neon.S	/^VFP     vpush           {d0}$/;"	l
VGA__TAG	libavcodec/xan.c	45;"	d	file:
VGA__TAG	libavformat/wc3movie.c	44;"	d	file:
VG_COEFF	libswscale/swscale_internal.h	219;"	d
VIDEO_DATA_CHUNK_SIZE	libavformat/psxstr.c	40;"	d	file:
VIDEO_DATA_HEADER_SIZE	libavformat/psxstr.c	41;"	d	file:
VIDEO_FORMAT	libavdevice/bktr.c	79;"	d	file:
VIDEO_ID	libavformat/mpeg.h	42;"	d
VIDEO_ID	libavformat/mpegvideodec.c	31;"	d	file:
VIDEO_ID	libavformat/swf.h	61;"	d
VIDEO_I_FRAME	libavcodec/bethsoftvideo.h	/^    VIDEO_I_FRAME       = 0x03,$/;"	e	enum:BethsoftVidBlockType
VIDEO_PICTURE_QUEUE_SIZE	ffplay.c	94;"	d	file:
VIDEO_P_FRAME	libavcodec/bethsoftvideo.h	/^    VIDEO_P_FRAME       = 0x01,$/;"	e	enum:BethsoftVidBlockType
VIDEO_SID	libavformat/mtv.c	35;"	d	file:
VIDEO_STREAM_INDEX	libavformat/mxg.c	27;"	d	file:
VIDEO_YOFF_P_FRAME	libavcodec/bethsoftvideo.h	/^    VIDEO_YOFF_P_FRAME  = 0x04,$/;"	e	enum:BethsoftVidBlockType
VISUAL_OBJECT_START_CODE	libavformat/m4vdec.c	25;"	d	file:
VISUAL_OBJ_STARTCODE	libavcodec/mpeg4video.h	58;"	d
VIS_GSR_ALIGNADDR_MASK	libavcodec/sparc/vis.h	151;"	d
VIS_GSR_ALIGNADDR_SHIFT	libavcodec/sparc/vis.h	152;"	d
VIS_GSR_SCALEFACT_MASK	libavcodec/sparc/vis.h	153;"	d
VIS_GSR_SCALEFACT_SHIFT	libavcodec/sparc/vis.h	154;"	d
VLC	libavcodec/get_bits.h	/^typedef struct VLC {$/;"	s
VLC	libavcodec/get_bits.h	/^} VLC;$/;"	t	typeref:struct:VLC
VLCBITS	libavcodec/wma.h	53;"	d
VLCBITS	libavcodec/wmaprodec.c	110;"	d	file:
VLCMAX	libavcodec/wma.h	54;"	d
VLC_BITS	libavcodec/asv1.c	36;"	d	file:
VLC_BITS	libavcodec/huffyuv.c	37;"	d	file:
VLC_BITS	libavcodec/mlpdec.c	39;"	d	file:
VLC_NBITS	libavcodec/wmavoice.c	54;"	d	file:
VLC_TABLES_SIZE	libavcodec/imc.c	97;"	d	file:
VLC_TYPE	libavcodec/get_bits.h	66;"	d
VLCcode	libavcodec/bitstream.c	/^} VLCcode;$/;"	t	typeref:struct:__anon81	file:
VMD_HEADER_SIZE	libavcodec/vmdav.c	49;"	d	file:
VMD_HEADER_SIZE	libavformat/sierravmd.c	33;"	d	file:
VMUL2	libavcodec/aacdec.c	/^static inline float *VMUL2(float *dst, const float *v, unsigned idx,$/;"	f	file:
VMUL2	libavcodec/arm/aac.h	/^static inline float *VMUL2(float *dst, const float *v, unsigned idx,$/;"	f
VMUL2	libavcodec/arm/aac.h	28;"	d
VMUL2S	libavcodec/aacdec.c	/^static inline float *VMUL2S(float *dst, const float *v, unsigned idx,$/;"	f	file:
VMUL2S	libavcodec/arm/aac.h	/^static inline float *VMUL2S(float *dst, const float *v, unsigned idx,$/;"	f
VMUL2S	libavcodec/arm/aac.h	72;"	d
VMUL4	libavcodec/aacdec.c	/^static inline float *VMUL4(float *dst, const float *v, unsigned idx,$/;"	f	file:
VMUL4	libavcodec/arm/aac.h	/^static inline float *VMUL4(float *dst, const float *v, unsigned idx,$/;"	f
VMUL4	libavcodec/arm/aac.h	47;"	d
VMUL4S	libavcodec/aacdec.c	/^static inline float *VMUL4S(float *dst, const float *v, unsigned idx,$/;"	f	file:
VMUL4S	libavcodec/arm/aac.h	/^static inline float *VMUL4S(float *dst, const float *v, unsigned idx,$/;"	f
VMUL4S	libavcodec/arm/aac.h	97;"	d
VOCAP_NOSLICES	libavfilter/libmpcodecs/vfcap.h	54;"	d
VOCTRL_BORDER	libavfilter/libmpcodecs/libvo/video_out.h	74;"	d
VOCTRL_DRAW_EOSD	libavfilter/libmpcodecs/libvo/video_out.h	75;"	d
VOCTRL_DRAW_IMAGE	libavfilter/libmpcodecs/libvo/video_out.h	55;"	d
VOCTRL_DUPLICATE_FRAME	libavfilter/libmpcodecs/libvo/video_out.h	68;"	d
VOCTRL_FULLSCREEN	libavfilter/libmpcodecs/libvo/video_out.h	48;"	d
VOCTRL_GET_DEINTERLACE	libavfilter/libmpcodecs/libvo/video_out.h	79;"	d
VOCTRL_GET_EOSD_RES	libavfilter/libmpcodecs/libvo/video_out.h	76;"	d
VOCTRL_GET_EQUALIZER	libavfilter/libmpcodecs/libvo/video_out.h	65;"	d
VOCTRL_GET_FRAME_NUM	libavfilter/libmpcodecs/libvo/video_out.h	59;"	d
VOCTRL_GET_IMAGE	libavfilter/libmpcodecs/libvo/video_out.h	54;"	d
VOCTRL_GET_NUM_FRAMES	libavfilter/libmpcodecs/libvo/video_out.h	58;"	d
VOCTRL_GET_PANSCAN	libavfilter/libmpcodecs/libvo/video_out.h	61;"	d
VOCTRL_GUISUPPORT	libavfilter/libmpcodecs/libvo/video_out.h	45;"	d
VOCTRL_GUI_NOWINDOW	libavfilter/libmpcodecs/libvo/video_out.h	46;"	d
VOCTRL_ONTOP	libavfilter/libmpcodecs/libvo/video_out.h	72;"	d
VOCTRL_PAUSE	libavfilter/libmpcodecs/libvo/video_out.h	50;"	d
VOCTRL_QUERY_FORMAT	libavfilter/libmpcodecs/libvo/video_out.h	41;"	d
VOCTRL_RESET	libavfilter/libmpcodecs/libvo/video_out.h	43;"	d
VOCTRL_RESUME	libavfilter/libmpcodecs/libvo/video_out.h	52;"	d
VOCTRL_ROOTWIN	libavfilter/libmpcodecs/libvo/video_out.h	73;"	d
VOCTRL_SET_DEINTERLACE	libavfilter/libmpcodecs/libvo/video_out.h	78;"	d
VOCTRL_SET_EQUALIZER	libavfilter/libmpcodecs/libvo/video_out.h	64;"	d
VOCTRL_SET_FRAME_NUM	libavfilter/libmpcodecs/libvo/video_out.h	60;"	d
VOCTRL_SET_PANSCAN	libavfilter/libmpcodecs/libvo/video_out.h	62;"	d
VOCTRL_SET_SPU_PALETTE	libavfilter/libmpcodecs/libvo/video_out.h	56;"	d
VOCTRL_START_SLICE	libavfilter/libmpcodecs/libvo/video_out.h	70;"	d
VOCTRL_UPDATE_SCREENINFO	libavfilter/libmpcodecs/libvo/video_out.h	81;"	d
VOCTRL_XOVERLAY_SET_COLORKEY	libavfilter/libmpcodecs/libvo/video_out.h	86;"	d
VOCTRL_XOVERLAY_SET_WIN	libavfilter/libmpcodecs/libvo/video_out.h	92;"	d
VOCTRL_XOVERLAY_SUPPORT	libavfilter/libmpcodecs/libvo/video_out.h	84;"	d
VOC_TYPE_ASCII	libavformat/voc.h	/^    VOC_TYPE_ASCII            = 0x05,$/;"	e	enum:voc_type
VOC_TYPE_EOF	libavformat/voc.h	/^    VOC_TYPE_EOF              = 0x00,$/;"	e	enum:voc_type
VOC_TYPE_EXTENDED	libavformat/voc.h	/^    VOC_TYPE_EXTENDED         = 0x08,$/;"	e	enum:voc_type
VOC_TYPE_MARKER	libavformat/voc.h	/^    VOC_TYPE_MARKER           = 0x04,$/;"	e	enum:voc_type
VOC_TYPE_NEW_VOICE_DATA	libavformat/voc.h	/^    VOC_TYPE_NEW_VOICE_DATA   = 0x09,$/;"	e	enum:voc_type
VOC_TYPE_REPETITION_END	libavformat/voc.h	/^    VOC_TYPE_REPETITION_END   = 0x07,$/;"	e	enum:voc_type
VOC_TYPE_REPETITION_START	libavformat/voc.h	/^    VOC_TYPE_REPETITION_START = 0x06,$/;"	e	enum:voc_type
VOC_TYPE_SILENCE	libavformat/voc.h	/^    VOC_TYPE_SILENCE          = 0x03,$/;"	e	enum:voc_type
VOC_TYPE_VOICE_DATA	libavformat/voc.h	/^    VOC_TYPE_VOICE_DATA       = 0x01,$/;"	e	enum:voc_type
VOC_TYPE_VOICE_DATA_CONT	libavformat/voc.h	/^    VOC_TYPE_VOICE_DATA_CONT  = 0x02,$/;"	e	enum:voc_type
VOFLAG_FLIPPING	libavfilter/libmpcodecs/libvo/video_out.h	107;"	d
VOFLAG_FULLSCREEN	libavfilter/libmpcodecs/libvo/video_out.h	104;"	d
VOFLAG_HIDDEN	libavfilter/libmpcodecs/libvo/video_out.h	108;"	d
VOFLAG_MODESWITCHING	libavfilter/libmpcodecs/libvo/video_out.h	105;"	d
VOFLAG_STEREO	libavfilter/libmpcodecs/libvo/video_out.h	109;"	d
VOFLAG_SWSCALE	libavfilter/libmpcodecs/libvo/video_out.h	106;"	d
VOFLAG_XOVERLAY_SUB_VO	libavfilter/libmpcodecs/libvo/video_out.h	110;"	d
VOP_STARTCODE	libavcodec/mpeg4video.h	59;"	d
VOP_START_CODE	libavformat/m4vdec.c	26;"	d	file:
VOS_STARTCODE	libavcodec/mpeg4video.h	55;"	d
VO_ERROR	libavfilter/libmpcodecs/libvo/video_out.h	100;"	d
VO_EVENT_EXPOSE	libavfilter/libmpcodecs/libvo/video_out.h	33;"	d
VO_EVENT_KEYPRESS	libavfilter/libmpcodecs/libvo/video_out.h	35;"	d
VO_EVENT_MOVE	libavfilter/libmpcodecs/libvo/video_out.h	37;"	d
VO_EVENT_REINIT	libavfilter/libmpcodecs/libvo/video_out.h	36;"	d
VO_EVENT_RESIZE	libavfilter/libmpcodecs/libvo/video_out.h	34;"	d
VO_FALSE	libavfilter/libmpcodecs/libvo/video_out.h	99;"	d
VO_NOTAVAIL	libavfilter/libmpcodecs/libvo/video_out.h	101;"	d
VO_NOTIMPL	libavfilter/libmpcodecs/libvo/video_out.h	102;"	d
VO_TRUE	libavfilter/libmpcodecs/libvo/video_out.h	98;"	d
VObj	tests/videogen.c	/^typedef struct VObj {$/;"	s	file:
VObj	tests/videogen.c	/^} VObj;$/;"	t	typeref:struct:VObj	file:
VP3_IDCT_END	libavcodec/arm/vp3dsp_neon.S	/^VP3_IDCT_END col$/;"	l
VP3_IDCT_END	libavcodec/arm/vp3dsp_neon.S	/^VP3_IDCT_END row$/;"	l
VP56Context	libavcodec/vp56.h	/^typedef struct vp56_context VP56Context;$/;"	t	typeref:struct:vp56_context
VP56DSPContext	libavcodec/vp56dsp.h	/^typedef struct VP56DSPContext {$/;"	s
VP56DSPContext	libavcodec/vp56dsp.h	/^} VP56DSPContext;$/;"	t	typeref:struct:VP56DSPContext
VP56DefaultModelsInit	libavcodec/vp56.h	/^typedef void (*VP56DefaultModelsInit)(VP56Context *s);$/;"	t
VP56Filter	libavcodec/vp56.h	/^typedef void (*VP56Filter)(VP56Context *s, uint8_t *dst, uint8_t *src,$/;"	t
VP56Frame	libavcodec/vp56data.h	/^} VP56Frame;$/;"	t	typeref:enum:__anon146
VP56Macroblock	libavcodec/vp56.h	/^} VP56Macroblock;$/;"	t	typeref:struct:__anon222
VP56Model	libavcodec/vp56.h	/^} VP56Model;$/;"	t	typeref:struct:__anon223
VP56ParseCoeff	libavcodec/vp56.h	/^typedef void (*VP56ParseCoeff)(VP56Context *s);$/;"	t
VP56ParseCoeffModels	libavcodec/vp56.h	/^typedef int  (*VP56ParseCoeffModels)(VP56Context *s);$/;"	t
VP56ParseHeader	libavcodec/vp56.h	/^typedef int  (*VP56ParseHeader)(VP56Context *s, const uint8_t *buf,$/;"	t
VP56ParseVectorAdjustment	libavcodec/vp56.h	/^typedef void (*VP56ParseVectorAdjustment)(VP56Context *s,$/;"	t
VP56ParseVectorModels	libavcodec/vp56.h	/^typedef void (*VP56ParseVectorModels)(VP56Context *s);$/;"	t
VP56RangeCoder	libavcodec/vp56.h	/^} VP56RangeCoder;$/;"	t	typeref:struct:__anon220
VP56RefDc	libavcodec/vp56.h	/^} VP56RefDc;$/;"	t	typeref:struct:__anon221
VP56Tree	libavcodec/vp56data.h	/^} VP56Tree;$/;"	t	typeref:struct:__anon148
VP56_EDGE_FILTER	libavcodec/vp56dsp.c	57;"	d	file:
VP56_FRAME_CURRENT	libavcodec/vp56data.h	/^    VP56_FRAME_CURRENT  = 0,$/;"	e	enum:__anon146
VP56_FRAME_GOLDEN	libavcodec/vp56data.h	/^    VP56_FRAME_GOLDEN   = 2,$/;"	e	enum:__anon146
VP56_FRAME_GOLDEN2	libavcodec/vp56data.h	/^    VP56_FRAME_GOLDEN2  = 3,$/;"	e	enum:__anon146
VP56_FRAME_NONE	libavcodec/vp56data.h	/^    VP56_FRAME_NONE     =-1,$/;"	e	enum:__anon146
VP56_FRAME_PREVIOUS	libavcodec/vp56data.h	/^    VP56_FRAME_PREVIOUS = 1,$/;"	e	enum:__anon146
VP56_FRAME_UNUSED	libavcodec/vp56data.h	/^    VP56_FRAME_UNUSED   = 4,$/;"	e	enum:__anon146
VP56_FRAME_UNUSED2	libavcodec/vp56data.h	/^    VP56_FRAME_UNUSED2  = 5,$/;"	e	enum:__anon146
VP56_MB_INTER_4V	libavcodec/vp56data.h	/^    VP56_MB_INTER_4V       = 7,  \/**< Inter MB, 4 vectors, from previous frame *\/$/;"	e	enum:__anon147
VP56_MB_INTER_DELTA_GF	libavcodec/vp56data.h	/^    VP56_MB_INTER_DELTA_GF = 6,  \/**< Inter MB, above\/left vector + delta, from golden frame *\/$/;"	e	enum:__anon147
VP56_MB_INTER_DELTA_PF	libavcodec/vp56data.h	/^    VP56_MB_INTER_DELTA_PF = 2,  \/**< Inter MB, above\/left vector + delta, from previous frame *\/$/;"	e	enum:__anon147
VP56_MB_INTER_NOVEC_GF	libavcodec/vp56data.h	/^    VP56_MB_INTER_NOVEC_GF = 5,  \/**< Inter MB, no vector, from golden frame *\/$/;"	e	enum:__anon147
VP56_MB_INTER_NOVEC_PF	libavcodec/vp56data.h	/^    VP56_MB_INTER_NOVEC_PF = 0,  \/**< Inter MB, no vector, from previous frame *\/$/;"	e	enum:__anon147
VP56_MB_INTER_V1_GF	libavcodec/vp56data.h	/^    VP56_MB_INTER_V1_GF    = 8,  \/**< Inter MB, first vector, from golden frame *\/$/;"	e	enum:__anon147
VP56_MB_INTER_V1_PF	libavcodec/vp56data.h	/^    VP56_MB_INTER_V1_PF    = 3,  \/**< Inter MB, first vector, from previous frame *\/$/;"	e	enum:__anon147
VP56_MB_INTER_V2_GF	libavcodec/vp56data.h	/^    VP56_MB_INTER_V2_GF    = 9,  \/**< Inter MB, second vector, from golden frame *\/$/;"	e	enum:__anon147
VP56_MB_INTER_V2_PF	libavcodec/vp56data.h	/^    VP56_MB_INTER_V2_PF    = 4,  \/**< Inter MB, second vector, from previous frame *\/$/;"	e	enum:__anon147
VP56_MB_INTRA	libavcodec/vp56data.h	/^    VP56_MB_INTRA          = 1,  \/**< Intra MB *\/$/;"	e	enum:__anon147
VP56mb	libavcodec/vp56data.h	/^} VP56mb;$/;"	t	typeref:enum:__anon147
VP6_MAX_HUFF_SIZE	libavcodec/vp6.c	39;"	d	file:
VP8Context	libavcodec/libvpxdec.c	/^} VP8Context;$/;"	t	typeref:struct:VP8DecoderContext	file:
VP8Context	libavcodec/libvpxenc.c	/^} VP8Context;$/;"	t	typeref:struct:VP8EncoderContext	file:
VP8Context	libavcodec/vp8.h	/^} VP8Context;$/;"	t	typeref:struct:__anon182
VP8DSPContext	libavcodec/vp8dsp.h	/^typedef struct VP8DSPContext {$/;"	s
VP8DSPContext	libavcodec/vp8dsp.h	/^} VP8DSPContext;$/;"	t	typeref:struct:VP8DSPContext
VP8DecoderContext	libavcodec/libvpxdec.c	/^typedef struct VP8DecoderContext {$/;"	s	file:
VP8EncoderContext	libavcodec/libvpxenc.c	/^typedef struct VP8EncoderContext {$/;"	s	file:
VP8F_AUTO_ALT_REF	libavcodec/libvpxenc.c	66;"	d	file:
VP8F_ERROR_RESILIENT	libavcodec/libvpxenc.c	65;"	d	file:
VP8FilterStrength	libavcodec/vp8.h	/^} VP8FilterStrength;$/;"	t	typeref:struct:__anon180
VP8Macroblock	libavcodec/vp8.h	/^} VP8Macroblock;$/;"	t	typeref:struct:__anon181
VP8_BILINEAR	libavcodec/vp8dsp.c	415;"	d	file:
VP8_BILINEAR_MC_FUNC	libavcodec/vp8dsp.c	481;"	d	file:
VP8_BILINEAR_MC_FUNC	libavcodec/x86/vp8dsp-init.c	273;"	d	file:
VP8_DC_WHT	libavcodec/x86/vp8dsp.asm	/^VP8_DC_WHT mmx$/;"	l
VP8_DC_WHT	libavcodec/x86/vp8dsp.asm	/^VP8_DC_WHT sse$/;"	l
VP8_EPEL	libavcodec/arm/vp8dsp_init_arm.c	59;"	d	file:
VP8_EPEL_H	libavcodec/vp8dsp.c	334;"	d	file:
VP8_EPEL_HV	libavcodec/vp8dsp.c	362;"	d	file:
VP8_EPEL_V	libavcodec/vp8dsp.c	348;"	d	file:
VP8_IDCT_ADD	libavcodec/x86/vp8dsp.asm	/^VP8_IDCT_ADD mmx$/;"	l
VP8_IDCT_ADD	libavcodec/x86/vp8dsp.asm	/^VP8_IDCT_ADD sse$/;"	l
VP8_LUMA_MC_FUNC	libavcodec/x86/vp8dsp-init.c	260;"	d	file:
VP8_MAX_QUANT	libavcodec/vp8.h	33;"	d
VP8_MC	libavcodec/arm/vp8dsp_init_arm.c	54;"	d	file:
VP8_MC_FUNC	libavcodec/vp8dsp.c	470;"	d	file:
VP8_MC_FUNC	libavcodec/x86/vp8dsp-init.c	265;"	d	file:
VP8_MVMODE_MV	libavcodec/vp8.h	/^    VP8_MVMODE_MV,$/;"	e	enum:inter_mvmode
VP8_MVMODE_SPLIT	libavcodec/vp8.h	/^    VP8_MVMODE_SPLIT$/;"	e	enum:inter_mvmode
VP8_MVMODE_ZERO	libavcodec/vp8.h	/^    VP8_MVMODE_ZERO = MODE_I4x4 + 1,$/;"	e	enum:inter_mvmode
VP8_SPLITMVMODE_16x8	libavcodec/vp8.h	/^    VP8_SPLITMVMODE_16x8 = 0,    \/\/\/< 2 16x8 blocks (vertical)$/;"	e	enum:inter_splitmvmode
VP8_SPLITMVMODE_4x4	libavcodec/vp8.h	/^    VP8_SPLITMVMODE_4x4,         \/\/\/< 4x4 blocks of 4x4px each$/;"	e	enum:inter_splitmvmode
VP8_SPLITMVMODE_8x16	libavcodec/vp8.h	/^    VP8_SPLITMVMODE_8x16,        \/\/\/< 2 8x16 blocks (horizontal)$/;"	e	enum:inter_splitmvmode
VP8_SPLITMVMODE_8x8	libavcodec/vp8.h	/^    VP8_SPLITMVMODE_8x8,         \/\/\/< 2x2 blocks of 8x8px each$/;"	e	enum:inter_splitmvmode
VP8_SPLITMVMODE_NONE	libavcodec/vp8.h	/^    VP8_SPLITMVMODE_NONE,        \/\/\/< (only used in prediction) no split MVs$/;"	e	enum:inter_splitmvmode
VP8_SUITE	tests/fate/vp8.mak	/^VP8_SUITE = 001 002 003 004 005 006 007 008 009 010 011 012 013 014 015 016 017$/;"	m
VPTZ_TAG	libavcodec/vqavideo.c	91;"	d	file:
VPX_CODEC_DISABLE_COMPAT	libavcodec/libvpxdec.c	26;"	d	file:
VPX_CODEC_DISABLE_COMPAT	libavcodec/libvpxenc.c	27;"	d	file:
VPX_DISABLE_CTRL_TYPECHECKS	libavcodec/libvpxenc.c	26;"	d	file:
VP_START	libavcodec/mpegvideo.h	481;"	d
VQA_FRAMERATE	libavformat/westwood.c	62;"	d	file:
VQA_HEADER_SIZE	libavcodec/vqavideo.c	75;"	d	file:
VQA_HEADER_SIZE	libavformat/westwood.c	61;"	d	file:
VQA_PREAMBLE_SIZE	libavformat/westwood.c	63;"	d	file:
VQFR_TAG	libavformat/westwood.c	50;"	d	file:
VQHD_TAG	libavformat/westwood.c	45;"	d	file:
VQ_1ST_BITS	libavcodec/g729data.h	29;"	d
VQ_2ND_BITS	libavcodec/g729data.h	30;"	d
VREF	Makefile	/^VREF = fate-vsynth1-vref fate-vsynth2-vref$/;"	m
VROUNDER_OFFSET	libswscale/swscale_internal.h	228;"	d
VR_COEFF	libswscale/swscale_internal.h	217;"	d
VSAD_INTRA	libavcodec/dsputil.c	2392;"	d	file:
VSSE_INTRA	libavcodec/dsputil.c	2426;"	d	file:
VTRK_TAG	libavformat/4xm.c	39;"	d	file:
V_A_DEBLOCK	libpostproc/postprocess_internal.h	49;"	d
V_CBP_MASK	libavcodec/rv34.c	1105;"	d	file:
V_DEBLOCK	libpostproc/postprocess_internal.h	33;"	d
V_MAX_PARTITIONS	libavcodec/vorbisdec.c	39;"	d	file:
V_MAX_VLCS	libavcodec/vorbisdec.c	38;"	d	file:
V_NB_BITS	libavcodec/vorbisdec.c	36;"	d	file:
V_NB_BITS2	libavcodec/vorbisdec.c	37;"	d	file:
V_OFFSET	libswscale/swscale_internal.h	223;"	d
V_TEMP	libswscale/swscale_internal.h	230;"	d
V_X1_FILTER	libpostproc/postprocess_internal.h	48;"	d
Vbuf	libavcodec/indeo3.c	/^    uint8_t *Vbuf;$/;"	m	struct:__anon54	file:
VdpPictureInfo	libavcodec/vdpau.h	/^    union VdpPictureInfo {$/;"	u	struct:vdpau_render_state
VideoData	libavdevice/bktr.c	/^} VideoData;$/;"	t	typeref:struct:__anon312	file:
VideoData	libavdevice/v4l.c	/^} VideoData;$/;"	t	typeref:struct:__anon316	file:
VideoData	libavformat/img2.c	/^} VideoData;$/;"	t	typeref:struct:__anon389	file:
VideoDevice	libavdevice/dshow.h	/^    VideoDevice = 0,$/;"	e	enum:dshowDeviceType
VideoPicture	ffplay.c	/^typedef struct VideoPicture {$/;"	s	file:
VideoPicture	ffplay.c	/^} VideoPicture;$/;"	t	typeref:struct:VideoPicture	file:
VideoRateAbbr	libavutil/parseutils.c	/^} VideoRateAbbr;$/;"	t	typeref:struct:__anon293	file:
VideoSizeAbbr	libavutil/parseutils.c	/^} VideoSizeAbbr;$/;"	t	typeref:struct:__anon292	file:
VideoState	ffplay.c	/^typedef struct VideoState {$/;"	s	file:
VideoState	ffplay.c	/^} VideoState;$/;"	t	typeref:struct:VideoState	file:
VideoXLContext	libavcodec/xl.c	/^typedef struct VideoXLContext{$/;"	s	file:
VideoXLContext	libavcodec/xl.c	/^} VideoXLContext;$/;"	t	typeref:struct:VideoXLContext	file:
VlcState	libavcodec/ffv1.c	/^typedef struct VlcState{$/;"	s	file:
VlcState	libavcodec/ffv1.c	/^} VlcState;$/;"	t	typeref:struct:VlcState	file:
VmdAudioContext	libavcodec/vmdav.c	/^typedef struct VmdAudioContext {$/;"	s	file:
VmdAudioContext	libavcodec/vmdav.c	/^} VmdAudioContext;$/;"	t	typeref:struct:VmdAudioContext	file:
VmdDemuxContext	libavformat/sierravmd.c	/^typedef struct VmdDemuxContext {$/;"	s	file:
VmdDemuxContext	libavformat/sierravmd.c	/^} VmdDemuxContext;$/;"	t	typeref:struct:VmdDemuxContext	file:
VmdVideoContext	libavcodec/vmdav.c	/^typedef struct VmdVideoContext {$/;"	s	file:
VmdVideoContext	libavcodec/vmdav.c	/^} VmdVideoContext;$/;"	t	typeref:struct:VmdVideoContext	file:
VmncContext	libavcodec/vmnc.c	/^typedef struct VmncContext {$/;"	s	file:
VmncContext	libavcodec/vmnc.c	/^} VmncContext;$/;"	t	typeref:struct:VmncContext	file:
VocDecContext	libavformat/voc.h	/^} VocDecContext;$/;"	t	typeref:struct:voc_dec_context
VocEncContext	libavformat/vocenc.c	/^} VocEncContext;$/;"	t	typeref:struct:voc_enc_context	file:
VocType	libavformat/voc.h	/^} VocType;$/;"	t	typeref:enum:voc_type
Vp3DecodeContext	libavcodec/vp3.c	/^typedef struct Vp3DecodeContext {$/;"	s	file:
Vp3DecodeContext	libavcodec/vp3.c	/^} Vp3DecodeContext;$/;"	t	typeref:struct:Vp3DecodeContext	file:
Vp3Fragment	libavcodec/vp3.c	/^typedef struct Vp3Fragment {$/;"	s	file:
Vp3Fragment	libavcodec/vp3.c	/^} Vp3Fragment;$/;"	t	typeref:struct:Vp3Fragment	file:
VqaContext	libavcodec/vqavideo.c	/^typedef struct VqaContext {$/;"	s	file:
VqaContext	libavcodec/vqavideo.c	/^} VqaContext;$/;"	t	typeref:struct:VqaContext	file:
VqfContext	libavformat/vqf.c	/^typedef struct VqfContext {$/;"	s	file:
VqfContext	libavformat/vqf.c	/^} VqfContext;$/;"	t	typeref:struct:VqfContext	file:
W	libavcodec/g726.c	/^    const int16_t* W;         \/**< special table #1 ;-) *\/$/;"	m	struct:G726Tables	file:
W	libavcodec/jpegls.h	111;"	d
W	libavcodec/sbr.h	/^    float              W[2][32][32][2];$/;"	m	struct:__anon56
W	libswscale/swscale-test.c	335;"	d	file:
W	tests/rotozoom.c	234;"	d	file:
W0	libavcodec/dsputil.c	2667;"	d	file:
W0	libavcodec/ppc/fdct_altivec.c	46;"	d	file:
W1	libavcodec/alpha/simple_idct_alpha.c	36;"	d	file:
W1	libavcodec/arm/simple_idct_arm.S	/^#define W1  22725$/;"	d
W1	libavcodec/arm/simple_idct_armv5te.S	/^#define W1  22725   \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W1	libavcodec/arm/simple_idct_armv6.S	/^#define W1  22725   \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W1	libavcodec/arm/simple_idct_neon.S	/^#define W1  22725  \/\/cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5$/;"	d
W1	libavcodec/dsputil.c	2668;"	d	file:
W1	libavcodec/ppc/fdct_altivec.c	47;"	d	file:
W1	libavcodec/simple_idct.c	48;"	d	file:
W13	libavcodec/arm/simple_idct_armv5te.S	/^#define W13 (W1 | (W3 << 16))$/;"	d
W13	libavcodec/arm/simple_idct_armv6.S	/^#define W13 (W1 | (W3 << 16))$/;"	d
W2	libavcodec/alpha/simple_idct_alpha.c	37;"	d	file:
W2	libavcodec/arm/simple_idct_arm.S	/^#define W2  21407$/;"	d
W2	libavcodec/arm/simple_idct_armv5te.S	/^#define W2  21407   \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W2	libavcodec/arm/simple_idct_armv6.S	/^#define W2  21407   \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W2	libavcodec/arm/simple_idct_neon.S	/^#define W2  21407  \/\/cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5$/;"	d
W2	libavcodec/dsputil.c	2669;"	d	file:
W2	libavcodec/ppc/fdct_altivec.c	48;"	d	file:
W2	libavcodec/simple_idct.c	49;"	d	file:
W26	libavcodec/arm/simple_idct_armv5te.S	/^#define W26 (W2 | (W6 << 16))$/;"	d
W26	libavcodec/arm/simple_idct_armv6.S	/^#define W26 (W2 | (W6 << 16))$/;"	d
W3	libavcodec/alpha/simple_idct_alpha.c	38;"	d	file:
W3	libavcodec/arm/simple_idct_arm.S	/^#define W3  19266$/;"	d
W3	libavcodec/arm/simple_idct_armv5te.S	/^#define W3  19266   \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W3	libavcodec/arm/simple_idct_armv6.S	/^#define W3  19266   \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W3	libavcodec/arm/simple_idct_neon.S	/^#define W3  19266  \/\/cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5$/;"	d
W3	libavcodec/dsputil.c	2670;"	d	file:
W3	libavcodec/ppc/fdct_altivec.c	49;"	d	file:
W3	libavcodec/simple_idct.c	50;"	d	file:
W4	libavcodec/alpha/simple_idct_alpha.c	39;"	d	file:
W4	libavcodec/arm/simple_idct_arm.S	/^#define W4  16383$/;"	d
W4	libavcodec/arm/simple_idct_armv5te.S	/^#define W4  16383   \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W4	libavcodec/arm/simple_idct_armv6.S	/^#define W4  16383   \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W4	libavcodec/arm/simple_idct_neon.S	/^#define W4  16383  \/\/cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5$/;"	d
W4	libavcodec/dsputil.c	2671;"	d	file:
W4	libavcodec/ppc/fdct_altivec.c	50;"	d	file:
W4	libavcodec/simple_idct.c	51;"	d	file:
W42	libavcodec/arm/simple_idct_armv6.S	/^#define W42 (W4 | (W2 << 16))$/;"	d
W42n	libavcodec/arm/simple_idct_armv6.S	/^#define W42n (-W4&0xffff | (-W2 << 16))$/;"	d
W46	libavcodec/arm/simple_idct_armv6.S	/^#define W46 (W4 | (W6 << 16))$/;"	d
W4c	libavcodec/arm/simple_idct_neon.S	/^#define W4c ((1<<(COL_SHIFT-1))\/W4)$/;"	d
W5	libavcodec/alpha/simple_idct_alpha.c	40;"	d	file:
W5	libavcodec/arm/simple_idct_arm.S	/^#define W5  12873$/;"	d
W5	libavcodec/arm/simple_idct_armv5te.S	/^#define W5  12873   \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W5	libavcodec/arm/simple_idct_armv6.S	/^#define W5  12873   \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W5	libavcodec/arm/simple_idct_neon.S	/^#define W5  12873  \/\/cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5$/;"	d
W5	libavcodec/dsputil.c	2672;"	d	file:
W5	libavcodec/ppc/fdct_altivec.c	51;"	d	file:
W5	libavcodec/simple_idct.c	52;"	d	file:
W57	libavcodec/arm/simple_idct_armv5te.S	/^#define W57 (W5 | (W7 << 16))$/;"	d
W57	libavcodec/arm/simple_idct_armv6.S	/^#define W57 (W5 | (W7 << 16))$/;"	d
W6	libavcodec/alpha/simple_idct_alpha.c	41;"	d	file:
W6	libavcodec/arm/simple_idct_arm.S	/^#define W6  8867$/;"	d
W6	libavcodec/arm/simple_idct_armv5te.S	/^#define W6  8867    \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W6	libavcodec/arm/simple_idct_armv6.S	/^#define W6  8867    \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W6	libavcodec/arm/simple_idct_neon.S	/^#define W6  8867   \/\/cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5$/;"	d
W6	libavcodec/dsputil.c	2673;"	d	file:
W6	libavcodec/ppc/fdct_altivec.c	52;"	d	file:
W6	libavcodec/simple_idct.c	53;"	d	file:
W7	libavcodec/alpha/simple_idct_alpha.c	42;"	d	file:
W7	libavcodec/arm/simple_idct_arm.S	/^#define W7  4520$/;"	d
W7	libavcodec/arm/simple_idct_armv5te.S	/^#define W7  4520    \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W7	libavcodec/arm/simple_idct_armv6.S	/^#define W7  4520    \/* cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5 *\/$/;"	d
W7	libavcodec/arm/simple_idct_neon.S	/^#define W7  4520   \/\/cos(i*M_PI\/16)*sqrt(2)*(1<<14) + 0.5$/;"	d
W7	libavcodec/dsputil.c	2674;"	d	file:
W7	libavcodec/ppc/fdct_altivec.c	53;"	d	file:
W7	libavcodec/simple_idct.c	54;"	d	file:
W8	libavcodec/ppc/fdct_altivec.c	54;"	d	file:
W9	libavcodec/ppc/fdct_altivec.c	55;"	d	file:
WA	libavcodec/ppc/fdct_altivec.c	56;"	d	file:
WAIT_UNIT	libavcodec/crystalhd.c	99;"	d	file:
WAVContext	libavformat/wav.c	/^} WAVContext;$/;"	t	typeref:struct:__anon409	file:
WAVE_FORMAT_PCM	libavcodec/shorten.c	41;"	d	file:
WAVG2B	libavcodec/arm/dsputil_iwmmxt.c	27;"	d	file:
WAVG2B	libavcodec/arm/dsputil_iwmmxt.c	31;"	d	file:
WAVG2B	libavcodec/arm/dsputil_iwmmxt.c	35;"	d	file:
WAVG2BR	libavcodec/arm/dsputil_iwmmxt.c	39;"	d	file:
WB	libavcodec/ppc/fdct_altivec.c	57;"	d	file:
WC3_AUDIO_BITS	libavformat/wc3movie.c	55;"	d	file:
WC3_AUDIO_CHANNELS	libavformat/wc3movie.c	54;"	d	file:
WC3_DEFAULT_HEIGHT	libavformat/wc3movie.c	50;"	d	file:
WC3_DEFAULT_WIDTH	libavformat/wc3movie.c	49;"	d	file:
WC3_FRAME_FPS	libavformat/wc3movie.c	58;"	d	file:
WC3_SAMPLE_RATE	libavformat/wc3movie.c	53;"	d	file:
WEIGHT_FUNC_DBL_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_DBL_MM  8$/;"	l
WEIGHT_FUNC_DBL_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_DBL_MM 16$/;"	l
WEIGHT_FUNC_HALF_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_HALF_MM 4,  2,  8, 0, mmx2$/;"	l
WEIGHT_FUNC_HALF_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_HALF_MM 4,  4,  8, 0, mmx2$/;"	l
WEIGHT_FUNC_HALF_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_HALF_MM 4,  8,  8, 0, mmx2$/;"	l
WEIGHT_FUNC_HALF_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_HALF_MM 8,  4, 16, 8, sse2$/;"	l
WEIGHT_FUNC_HALF_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_HALF_MM 8,  8, 16, 8, sse2$/;"	l
WEIGHT_FUNC_HALF_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_HALF_MM 8, 16, 16, 8, sse2$/;"	l
WEIGHT_FUNC_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_MM  8,  4,  0, mmx2$/;"	l
WEIGHT_FUNC_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_MM  8,  8,  0, mmx2$/;"	l
WEIGHT_FUNC_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_MM  8, 16,  0, mmx2$/;"	l
WEIGHT_FUNC_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_MM 16,  8,  8, sse2$/;"	l
WEIGHT_FUNC_MM	libavcodec/x86/h264_weight.asm	/^WEIGHT_FUNC_MM 16, 16,  8, sse2$/;"	l
WELCH	libavcodec/x86/lpc_mmx.c	42;"	d	file:
WELCH	libavcodec/x86/lpc_mmx.c	70;"	d	file:
WFRAC_BITS	libavcodec/mpegaudio.h	52;"	d
WFRAC_BITS	libavcodec/mpegaudioenc.c	31;"	d	file:
WHITESPACES	libavfilter/graphparser.c	30;"	d	file:
WHITESPACES	libavutil/avstring.c	101;"	d	file:
WIDE_ATOM	tools/qt-faststart.c	65;"	d	file:
WIDTH	libavcodec/c93.c	42;"	d	file:
WIDTH	libavcodec/motion-test.c	39;"	d	file:
WIDTH	libavfilter/libmpcodecs/vf_test.c	43;"	d	file:
WIN32_LEAN_AND_MEAN	libavcodec/w32thread.c	25;"	d	file:
WIN32_LEAN_AND_MEAN	libswscale/utils.c	36;"	d	file:
WINDOW_SEGMENT	libavcodec/pgssubdec.c	/^    WINDOW_SEGMENT       = 0x17,$/;"	e	enum:SegmentType	file:
WINDOW_TYPE	libavcodec/resample2.c	39;"	d	file:
WINDOW_TYPE	libavcodec/resample2.c	48;"	d	file:
WINDOW_TYPE	libavcodec/resample2.c	55;"	d	file:
WINDOW_TYPE_BITS	libavcodec/twinvq.c	212;"	d	file:
WMACodecContext	libavcodec/wma.h	/^typedef struct WMACodecContext {$/;"	s
WMACodecContext	libavcodec/wma.h	/^} WMACodecContext;$/;"	t	typeref:struct:WMACodecContext
WMACoef	libavcodec/wma.h	/^typedef float WMACoef;          \/\/\/< type for decoded coefficients, int16_t would be enough for wma 1\/2$/;"	t
WMAPRO_BLOCK_MAX_BITS	libavcodec/wmaprodec.c	105;"	d	file:
WMAPRO_BLOCK_MAX_SIZE	libavcodec/wmaprodec.c	106;"	d	file:
WMAPRO_BLOCK_MIN_BITS	libavcodec/wmaprodec.c	104;"	d	file:
WMAPRO_BLOCK_SIZES	libavcodec/wmaprodec.c	107;"	d	file:
WMAPRO_MAX_CHANNELS	libavcodec/wmaprodec.c	99;"	d	file:
WMAProChannelCtx	libavcodec/wmaprodec.c	/^} WMAProChannelCtx;$/;"	t	typeref:struct:__anon82	file:
WMAProChannelGrp	libavcodec/wmaprodec.c	/^} WMAProChannelGrp;$/;"	t	typeref:struct:__anon83	file:
WMAProDecodeCtx	libavcodec/wmaprodec.c	/^typedef struct WMAProDecodeCtx {$/;"	s	file:
WMAProDecodeCtx	libavcodec/wmaprodec.c	/^} WMAProDecodeCtx;$/;"	t	typeref:struct:WMAProDecodeCtx	file:
WMAVoiceContext	libavcodec/wmavoice.c	/^} WMAVoiceContext;$/;"	t	typeref:struct:__anon157	file:
WMSEDEC_SHIFT	libavcodec/j2kenc.c	36;"	d	file:
WMV1_SCANTABLE_COUNT	libavcodec/msmpeg4data.h	55;"	d
WMV2_INTER_CBP_TABLE_COUNT	libavcodec/msmpeg4data.h	80;"	d
WNV1Context	libavcodec/wnv1.c	/^typedef struct WNV1Context{$/;"	s	file:
WNV1Context	libavcodec/wnv1.c	/^} WNV1Context;$/;"	t	typeref:struct:WNV1Context	file:
WORD_0	libavcodec/ppc/fft_altivec_s.S	/^#define WORD_0  0x00,0x01,0x02,0x03$/;"	d
WORD_0	libavcodec/ppc/util_altivec.h	39;"	d
WORD_1	libavcodec/ppc/fft_altivec_s.S	/^#define WORD_1  0x04,0x05,0x06,0x07$/;"	d
WORD_1	libavcodec/ppc/util_altivec.h	40;"	d
WORD_2	libavcodec/ppc/fft_altivec_s.S	/^#define WORD_2  0x08,0x09,0x0a,0x0b$/;"	d
WORD_2	libavcodec/ppc/util_altivec.h	41;"	d
WORD_3	libavcodec/ppc/fft_altivec_s.S	/^#define WORD_3  0x0c,0x0d,0x0e,0x0f$/;"	d
WORD_3	libavcodec/ppc/util_altivec.h	42;"	d
WORD_VEC	libavcodec/alpha/asm.h	/^static inline uint64_t WORD_VEC(uint64_t x)$/;"	f
WORD_s0	libavcodec/ppc/fft_altivec_s.S	/^#define WORD_s0 0x10,0x11,0x12,0x13$/;"	d
WORD_s0	libavcodec/ppc/util_altivec.h	43;"	d
WORD_s1	libavcodec/ppc/fft_altivec_s.S	/^#define WORD_s1 0x14,0x15,0x16,0x17$/;"	d
WORD_s1	libavcodec/ppc/util_altivec.h	44;"	d
WORD_s2	libavcodec/ppc/fft_altivec_s.S	/^#define WORD_s2 0x18,0x19,0x1a,0x1b$/;"	d
WORD_s2	libavcodec/ppc/util_altivec.h	45;"	d
WORD_s3	libavcodec/ppc/fft_altivec_s.S	/^#define WORD_s3 0x1c,0x1d,0x1e,0x1f$/;"	d
WORD_s3	libavcodec/ppc/util_altivec.h	46;"	d
WP_ID	libavcodec/wavpack.c	/^enum WP_ID{$/;"	g	file:
WP_IDF_IGNORE	libavcodec/wavpack.c	/^    WP_IDF_IGNORE = 0x20,$/;"	e	enum:WP_ID_Flags	file:
WP_IDF_LONG	libavcodec/wavpack.c	/^    WP_IDF_LONG   = 0x80$/;"	e	enum:WP_ID_Flags	file:
WP_IDF_MASK	libavcodec/wavpack.c	/^    WP_IDF_MASK   = 0x1F,$/;"	e	enum:WP_ID_Flags	file:
WP_IDF_ODD	libavcodec/wavpack.c	/^    WP_IDF_ODD    = 0x40,$/;"	e	enum:WP_ID_Flags	file:
WP_ID_CHANINFO	libavcodec/wavpack.c	/^    WP_ID_CHANINFO$/;"	e	enum:WP_ID	file:
WP_ID_CORR	libavcodec/wavpack.c	/^    WP_ID_CORR,$/;"	e	enum:WP_ID	file:
WP_ID_DATA	libavcodec/wavpack.c	/^    WP_ID_DATA,$/;"	e	enum:WP_ID	file:
WP_ID_DECSAMPLES	libavcodec/wavpack.c	/^    WP_ID_DECSAMPLES,$/;"	e	enum:WP_ID	file:
WP_ID_DECTERMS	libavcodec/wavpack.c	/^    WP_ID_DECTERMS,$/;"	e	enum:WP_ID	file:
WP_ID_DECWEIGHTS	libavcodec/wavpack.c	/^    WP_ID_DECWEIGHTS,$/;"	e	enum:WP_ID	file:
WP_ID_DUMMY	libavcodec/wavpack.c	/^    WP_ID_DUMMY = 0,$/;"	e	enum:WP_ID	file:
WP_ID_ENCINFO	libavcodec/wavpack.c	/^    WP_ID_ENCINFO,$/;"	e	enum:WP_ID	file:
WP_ID_ENTROPY	libavcodec/wavpack.c	/^    WP_ID_ENTROPY,$/;"	e	enum:WP_ID	file:
WP_ID_EXTRABITS	libavcodec/wavpack.c	/^    WP_ID_EXTRABITS,$/;"	e	enum:WP_ID	file:
WP_ID_FLOATINFO	libavcodec/wavpack.c	/^    WP_ID_FLOATINFO,$/;"	e	enum:WP_ID	file:
WP_ID_Flags	libavcodec/wavpack.c	/^enum WP_ID_Flags{$/;"	g	file:
WP_ID_HYBRID	libavcodec/wavpack.c	/^    WP_ID_HYBRID,$/;"	e	enum:WP_ID	file:
WP_ID_INT32INFO	libavcodec/wavpack.c	/^    WP_ID_INT32INFO,$/;"	e	enum:WP_ID	file:
WP_ID_SHAPING	libavcodec/wavpack.c	/^    WP_ID_SHAPING,$/;"	e	enum:WP_ID	file:
WRAPPER8_16	libavcodec/dsputil.h	690;"	d
WRAPPER8_16_SQ	libavcodec/dsputil.h	696;"	d
WRITE2	libavcodec/huffyuv.c	818;"	d	file:
WRITE3	libavcodec/huffyuv.c	898;"	d	file:
WRITEBGR24	libswscale/x86/swscale_template.c	790;"	d	file:
WRITEBGR24	libswscale/x86/swscale_template.c	791;"	d	file:
WRITEBGR24	libswscale/x86/swscale_template.c	793;"	d	file:
WRITEBGR24	libswscale/x86/swscale_template.c	794;"	d	file:
WRITEBGR24MMX	libswscale/x86/swscale_template.c	688;"	d	file:
WRITEBGR24MMX2	libswscale/x86/swscale_template.c	741;"	d	file:
WRITEBGR32	libswscale/x86/swscale_template.c	471;"	d	file:
WRITERGB15	libswscale/x86/swscale_template.c	638;"	d	file:
WRITERGB16	libswscale/x86/swscale_template.c	561;"	d	file:
WRITEYUY2	libswscale/x86/swscale_template.c	860;"	d	file:
WRITE_1D_FUNC	libavcodec/tableprint.h	43;"	d
WRITE_1D_FUNC_ARGV	libavcodec/tableprint.h	31;"	d
WRITE_2D_ARRAY	libavcodec/tableprint.h	82;"	d
WRITE_2D_FUNC	libavcodec/dv_tablegen.c	/^WRITE_2D_FUNC(dv_vlc_pair)$/;"	f
WRITE_2D_FUNC	libavcodec/tableprint.h	46;"	d
WRITE_ARRAY	libavcodec/tableprint.h	73;"	d
WRITE_PIXELS	libavcodec/v210enc.c	71;"	d	file:
WSHIFT	libavcodec/mpegaudioenc.c	308;"	d	file:
WTV_BIGSECTOR_BITS	libavformat/wtv.h	30;"	d
WTV_PAD8	libavformat/wtvdec.c	840;"	d	file:
WTV_SECTOR_BITS	libavformat/wtv.h	28;"	d
WTV_SECTOR_SIZE	libavformat/wtv.h	29;"	d
WVContext	libavformat/wv.c	/^}WVContext;$/;"	t	typeref:struct:__anon327	file:
WVQA_TAG	libavformat/westwood.c	44;"	d	file:
WV_BLOCK_LIMIT	libavformat/wv.c	30;"	d	file:
WV_CROSSD	libavformat/wv.c	/^    WV_CROSSD = 0x0020,$/;"	e	enum:WV_FLAGS	file:
WV_END_BLOCK	libavformat/wv.c	35;"	d	file:
WV_EXTRA_SIZE	libavformat/wv.c	32;"	d	file:
WV_FALSE_STEREO	libavcodec/wavpack.c	34;"	d	file:
WV_FLAGS	libavformat/wv.c	/^enum WV_FLAGS{$/;"	g	file:
WV_FLOAT	libavformat/wv.c	/^    WV_FLOAT  = 0x0080,$/;"	e	enum:WV_FLAGS	file:
WV_FLT_SHIFT_ONES	libavcodec/wavpack.c	41;"	d	file:
WV_FLT_SHIFT_SAME	libavcodec/wavpack.c	42;"	d	file:
WV_FLT_SHIFT_SENT	libavcodec/wavpack.c	43;"	d	file:
WV_FLT_ZERO_SENT	libavcodec/wavpack.c	44;"	d	file:
WV_FLT_ZERO_SIGN	libavcodec/wavpack.c	45;"	d	file:
WV_HBAL	libavformat/wv.c	/^    WV_HBAL   = 0x0400,$/;"	e	enum:WV_FLAGS	file:
WV_HBR	libavformat/wv.c	/^    WV_HBR    = 0x0200,$/;"	e	enum:WV_FLAGS	file:
WV_HSHAPE	libavformat/wv.c	/^    WV_HSHAPE = 0x0040,$/;"	e	enum:WV_FLAGS	file:
WV_HYBRID	libavformat/wv.c	/^    WV_HYBRID = 0x0008,$/;"	e	enum:WV_FLAGS	file:
WV_HYBRID_BALANCE	libavcodec/wavpack.c	39;"	d	file:
WV_HYBRID_BITRATE	libavcodec/wavpack.c	38;"	d	file:
WV_HYBRID_MODE	libavcodec/wavpack.c	36;"	d	file:
WV_HYBRID_SHAPE	libavcodec/wavpack.c	37;"	d	file:
WV_INT32	libavformat/wv.c	/^    WV_INT32  = 0x0100,$/;"	e	enum:WV_FLAGS	file:
WV_JOINT	libavformat/wv.c	/^    WV_JOINT  = 0x0010,$/;"	e	enum:WV_FLAGS	file:
WV_JOINT_STEREO	libavcodec/wavpack.c	33;"	d	file:
WV_MAX_FRAME_DECODERS	libavcodec/wavpack.c	124;"	d	file:
WV_MCEND	libavformat/wv.c	/^    WV_MCEND  = 0x1000,$/;"	e	enum:WV_FLAGS	file:
WV_MCINIT	libavformat/wv.c	/^    WV_MCINIT = 0x0800,$/;"	e	enum:WV_FLAGS	file:
WV_MONO	libavcodec/wavpack.c	32;"	d	file:
WV_MONO	libavformat/wv.c	/^    WV_MONO   = 0x0004,$/;"	e	enum:WV_FLAGS	file:
WV_SINGLE_BLOCK	libavformat/wv.c	36;"	d	file:
WV_START_BLOCK	libavformat/wv.c	34;"	d	file:
W_AM	libavcodec/dwt.h	112;"	d
W_AM	libavcodec/dwt.h	61;"	d
W_AM	libavcodec/dwt.h	78;"	d
W_AM	libavcodec/dwt.h	94;"	d
W_AO	libavcodec/dwt.h	113;"	d
W_AO	libavcodec/dwt.h	62;"	d
W_AO	libavcodec/dwt.h	79;"	d
W_AO	libavcodec/dwt.h	95;"	d
W_AS	libavcodec/dwt.h	114;"	d
W_AS	libavcodec/dwt.h	63;"	d
W_AS	libavcodec/dwt.h	80;"	d
W_AS	libavcodec/dwt.h	96;"	d
W_BM	libavcodec/dwt.h	116;"	d
W_BM	libavcodec/dwt.h	66;"	d
W_BM	libavcodec/dwt.h	82;"	d
W_BM	libavcodec/dwt.h	98;"	d
W_BO	libavcodec/dwt.h	117;"	d
W_BO	libavcodec/dwt.h	67;"	d
W_BO	libavcodec/dwt.h	83;"	d
W_BO	libavcodec/dwt.h	99;"	d
W_BS	libavcodec/dwt.h	100;"	d
W_BS	libavcodec/dwt.h	118;"	d
W_BS	libavcodec/dwt.h	68;"	d
W_BS	libavcodec/dwt.h	84;"	d
W_CM	libavcodec/dwt.h	102;"	d
W_CM	libavcodec/dwt.h	120;"	d
W_CM	libavcodec/dwt.h	70;"	d
W_CM	libavcodec/dwt.h	86;"	d
W_CO	libavcodec/dwt.h	103;"	d
W_CO	libavcodec/dwt.h	121;"	d
W_CO	libavcodec/dwt.h	71;"	d
W_CO	libavcodec/dwt.h	87;"	d
W_CS	libavcodec/dwt.h	104;"	d
W_CS	libavcodec/dwt.h	122;"	d
W_CS	libavcodec/dwt.h	72;"	d
W_CS	libavcodec/dwt.h	88;"	d
W_DM	libavcodec/dwt.h	106;"	d
W_DM	libavcodec/dwt.h	124;"	d
W_DM	libavcodec/dwt.h	74;"	d
W_DM	libavcodec/dwt.h	90;"	d
W_DO	libavcodec/dwt.h	107;"	d
W_DO	libavcodec/dwt.h	125;"	d
W_DO	libavcodec/dwt.h	75;"	d
W_DO	libavcodec/dwt.h	91;"	d
W_DS	libavcodec/dwt.h	108;"	d
W_DS	libavcodec/dwt.h	126;"	d
W_DS	libavcodec/dwt.h	76;"	d
W_DS	libavcodec/dwt.h	92;"	d
W_tbl16	libavcodec/g726.c	/^static const int16_t W_tbl16[] =$/;"	v	file:
W_tbl24	libavcodec/g726.c	/^static const int16_t W_tbl24[] =$/;"	v	file:
W_tbl32	libavcodec/g726.c	/^static const int16_t W_tbl32[] =$/;"	v	file:
W_tbl40	libavcodec/g726.c	/^static const int16_t W_tbl40[] =$/;"	v	file:
WavpackContext	libavcodec/wavpack.c	/^typedef struct WavpackContext {$/;"	s	file:
WavpackContext	libavcodec/wavpack.c	/^} WavpackContext;$/;"	t	typeref:struct:WavpackContext	file:
WavpackFrameContext	libavcodec/wavpack.c	/^typedef struct WavpackFrameContext {$/;"	s	file:
WavpackFrameContext	libavcodec/wavpack.c	/^} WavpackFrameContext;$/;"	t	typeref:struct:WavpackFrameContext	file:
Wc3DemuxContext	libavformat/wc3movie.c	/^typedef struct Wc3DemuxContext {$/;"	s	file:
Wc3DemuxContext	libavformat/wc3movie.c	/^} Wc3DemuxContext;$/;"	t	typeref:struct:Wc3DemuxContext	file:
WindowSequence	libavcodec/aac.h	/^enum WindowSequence {$/;"	g
Wmv2Context	libavcodec/wmv2.h	/^typedef struct Wmv2Context{$/;"	s
Wmv2Context	libavcodec/wmv2.h	/^}Wmv2Context;$/;"	t	typeref:struct:Wmv2Context
WsAudDemuxContext	libavformat/westwood.c	/^typedef struct WsAudDemuxContext {$/;"	s	file:
WsAudDemuxContext	libavformat/westwood.c	/^} WsAudDemuxContext;$/;"	t	typeref:struct:WsAudDemuxContext	file:
WsVqaDemuxContext	libavformat/westwood.c	/^typedef struct WsVqaDemuxContext {$/;"	s	file:
WsVqaDemuxContext	libavformat/westwood.c	/^} WsVqaDemuxContext;$/;"	t	typeref:struct:WsVqaDemuxContext	file:
WtvContext	libavformat/wtvdec.c	/^} WtvContext;$/;"	t	typeref:struct:__anon323	file:
WtvFile	libavformat/wtvdec.c	/^} WtvFile;$/;"	t	typeref:struct:__anon321	file:
WtvStream	libavformat/wtvdec.c	/^} WtvStream;$/;"	t	typeref:struct:__anon322	file:
WvChannel	libavcodec/wavpack.c	/^typedef struct WvChannel {$/;"	s	file:
WvChannel	libavcodec/wavpack.c	/^} WvChannel;$/;"	t	typeref:struct:WvChannel	file:
X	libavcodec/arm/asm.S	/^#define X(s) JOIN(EXTERN_ASM, s)$/;"	d
X	libavcodec/ppc/asm.S	/^#define X(s) JOIN(EXTERN_ASM, s)$/;"	d
X264Context	libavcodec/libx264.c	/^typedef struct X264Context {$/;"	s	file:
X264Context	libavcodec/libx264.c	/^} X264Context;$/;"	t	typeref:struct:X264Context	file:
X264_PART_B8X8	libavcodec/avcodec.h	2480;"	d
X264_PART_I4X4	libavcodec/avcodec.h	2476;"	d
X264_PART_I8X8	libavcodec/avcodec.h	2477;"	d
X264_PART_P4X4	libavcodec/avcodec.h	2479;"	d
X264_PART_P8X8	libavcodec/avcodec.h	2478;"	d
X264_close	libavcodec/libx264.c	/^static av_cold int X264_close(AVCodecContext *avctx)$/;"	f	file:
X264_frame	libavcodec/libx264.c	/^static int X264_frame(AVCodecContext *ctx, uint8_t *buf,$/;"	f	file:
X264_init	libavcodec/libx264.c	/^static av_cold int X264_init(AVCodecContext *avctx)$/;"	f	file:
X264_log	libavcodec/libx264.c	/^static void X264_log(void *p, int level, const char *fmt, va_list args)$/;"	f	file:
X8	libavcodec/x86/fdct_mmx.c	54;"	d	file:
X8	libavcodec/x86/idct_sse2_xvid.c	51;"	d	file:
XA00_TAG	libavformat/xa.c	33;"	d	file:
XADAPTCOEFFSA	libavcodec/apedec.c	54;"	d	file:
XADAPTCOEFFSB	libavcodec/apedec.c	56;"	d	file:
XAI0_TAG	libavformat/xa.c	34;"	d	file:
XAJ0_TAG	libavformat/xa.c	35;"	d	file:
XAVS_PART_B8X8	libavcodec/libxavs.c	34;"	d	file:
XAVS_PART_I8X8	libavcodec/libxavs.c	32;"	d	file:
XAVS_PART_P8X8	libavcodec/libxavs.c	33;"	d	file:
XAVS_close	libavcodec/libxavs.c	/^static av_cold int XAVS_close(AVCodecContext *avctx)$/;"	f	file:
XAVS_frame	libavcodec/libxavs.c	/^static int XAVS_frame(AVCodecContext *ctx, uint8_t *buf,$/;"	f	file:
XAVS_init	libavcodec/libxavs.c	/^static av_cold int XAVS_init(AVCodecContext *avctx)$/;"	f	file:
XAVS_log	libavcodec/libxavs.c	/^static void XAVS_log(void *p, int level, const char *fmt, va_list args)$/;"	f	file:
XCHG	libavcodec/h264.c	1602;"	d	file:
XCHG	libavcodec/vp8.c	812;"	d	file:
XDELAYA	libavcodec/apedec.c	50;"	d	file:
XDELAYB	libavcodec/apedec.c	51;"	d	file:
XMAX	libavfilter/libmpcodecs/vf_pp7.c	43;"	d	file:
XMIN	libavfilter/libmpcodecs/vf_pp7.c	42;"	d	file:
XMIN	libavfilter/libmpcodecs/vf_spp.c	55;"	d	file:
XMIN	libavfilter/libmpcodecs/vf_uspp.c	41;"	d	file:
XMMS	libavcodec/x86/idct_sse2_xvid.c	120;"	d	file:
XMMS	libavcodec/x86/idct_sse2_xvid.c	140;"	d	file:
XMM_CLOBBERS	libavutil/x86_cpu.h	91;"	d
XMM_CLOBBERS	libavutil/x86_cpu.h	94;"	d
XMM_CLOBBERS_ONLY	libavutil/x86_cpu.h	92;"	d
XMM_CLOBBERS_ONLY	libavutil/x86_cpu.h	95;"	d
XOR_TABLE_SIZE	libavformat/rdt.c	100;"	d	file:
XWMAContext	libavformat/xwma.c	/^} XWMAContext;$/;"	t	typeref:struct:__anon430	file:
X_NE	libavutil/pixdesc.c	962;"	d	file:
X_NE	libavutil/pixdesc.c	964;"	d	file:
X_high	libavcodec/sbr.h	/^    float              X_high[64][40][2];$/;"	m	struct:__anon57
X_low	libavcodec/sbr.h	/^    float              X_low[32][40][2];$/;"	m	struct:__anon57
XanContext	libavcodec/xan.c	/^typedef struct XanContext {$/;"	s	file:
XanContext	libavcodec/xan.c	/^} XanContext;$/;"	t	typeref:struct:XanContext	file:
XanContext	libavcodec/xxan.c	/^typedef struct XanContext {$/;"	s	file:
XanContext	libavcodec/xxan.c	/^} XanContext;$/;"	t	typeref:struct:XanContext	file:
XavsContext	libavcodec/libxavs.c	/^typedef struct XavsContext {$/;"	s	file:
XavsContext	libavcodec/libxavs.c	/^} XavsContext;$/;"	t	typeref:struct:XavsContext	file:
Y	libavcodec/sbr.h	/^    float              Y[2][38][64][2];$/;"	m	struct:__anon56
Y	libavfilter/vf_drawbox.c	/^enum { Y, U, V, A };$/;"	e	enum:__anon19	file:
Y	libavfilter/vf_lut.c	73;"	d	file:
Y1	libavcodec/truemotion2.c	/^    int *Y1, *U1, *V1, *Y2, *U2, *V2;$/;"	m	struct:TM2Context	file:
Y2	libavcodec/truemotion2.c	/^    int *Y1, *U1, *V1, *Y2, *U2, *V2;$/;"	m	struct:TM2Context	file:
Y4M_FRAME_MAGIC	libavformat/yuv4mpeg.c	24;"	d	file:
Y4M_LINE_MAX	libavformat/yuv4mpeg.c	25;"	d	file:
Y4M_MAGIC	libavformat/yuv4mpeg.c	23;"	d	file:
YADAPTCOEFFSA	libavcodec/apedec.c	53;"	d	file:
YADAPTCOEFFSB	libavcodec/apedec.c	55;"	d	file:
YADIFContext	libavfilter/vf_yadif.c	/^} YADIFContext;$/;"	t	typeref:struct:__anon6	file:
YASM	config.mak	/^YASM=yasm$/;"	m
YASMDEP	config.mak	/^YASMDEP=yasm$/;"	m
YASMFLAGS	config.mak	/^YASMFLAGS=$/;"	m
YDELAYA	libavcodec/apedec.c	48;"	d	file:
YDELAYB	libavcodec/apedec.c	49;"	d	file:
YSCALEYUV2PACKED	libswscale/x86/swscale_template.c	1162;"	d	file:
YSCALEYUV2PACKED1	libswscale/x86/swscale_template.c	1524;"	d	file:
YSCALEYUV2PACKED1b	libswscale/x86/swscale_template.c	1544;"	d	file:
YSCALEYUV2PACKEDX	libswscale/x86/swscale_template.c	301;"	d	file:
YSCALEYUV2PACKEDX_ACCURATE	libswscale/x86/swscale_template.c	409;"	d	file:
YSCALEYUV2PACKEDX_ACCURATE_UV	libswscale/x86/swscale_template.c	312;"	d	file:
YSCALEYUV2PACKEDX_ACCURATE_YA	libswscale/x86/swscale_template.c	364;"	d	file:
YSCALEYUV2PACKEDX_END	libswscale/x86/swscale_template.c	305;"	d	file:
YSCALEYUV2PACKEDX_UV	libswscale/x86/swscale_template.c	257;"	d	file:
YSCALEYUV2PACKEDX_YA	libswscale/x86/swscale_template.c	282;"	d	file:
YSCALEYUV2RGB	libswscale/x86/swscale_template.c	976;"	d	file:
YSCALEYUV2RGB1	libswscale/x86/swscale_template.c	1234;"	d	file:
YSCALEYUV2RGB1_ALPHA	libswscale/x86/swscale_template.c	1298;"	d	file:
YSCALEYUV2RGB1b	libswscale/x86/swscale_template.c	1290;"	d	file:
YSCALEYUV2RGBX	libswscale/x86/swscale_template.c	413;"	d	file:
YSCALEYUV2RGB_YA	libswscale/x86/swscale_template.c	974;"	d	file:
YSCALEYUV2YV12X	libswscale/x86/swscale_template.c	38;"	d	file:
YSCALEYUV2YV12X_ACCURATE	libswscale/x86/swscale_template.c	98;"	d	file:
YSCALE_YUV_2_ANYRGB_C	libswscale/swscale.c	1124;"	d	file:
YSCALE_YUV_2_RGB1B_C	libswscale/swscale.c	1107;"	d	file:
YSCALE_YUV_2_RGB1_C	libswscale/swscale.c	1090;"	d	file:
YSCALE_YUV_2_RGB2_C	libswscale/swscale.c	1073;"	d	file:
YSCALE_YUV_2_RGBX_C	libswscale/swscale.c	986;"	d	file:
YSCALE_YUV_2_RGBX_FULL_C	libswscale/swscale.c	1034;"	d	file:
YUV2PACKEDWRAPPER	libswscale/swscale.c	591;"	d	file:
YUV2RGB	libswscale/x86/yuv2rgb_template.c	79;"	d	file:
YUV2RGBFUNC	libswscale/yuv2rgb.c	113;"	d	file:
YUV2RGB_ENDFUNC	libswscale/x86/yuv2rgb_template.c	151;"	d	file:
YUV2RGB_ENDLOOP	libswscale/x86/yuv2rgb_template.c	129;"	d	file:
YUV2RGB_INIT	libswscale/sparc/yuv2rgb_vis.c	28;"	d	file:
YUV2RGB_INITIAL_LOAD	libswscale/x86/yuv2rgb_template.c	56;"	d	file:
YUV2RGB_KERNEL	libswscale/sparc/yuv2rgb_vis.c	41;"	d	file:
YUV2RGB_LOOP	libswscale/x86/yuv2rgb_template.c	41;"	d	file:
YUV2RGB_OPERANDS	libswscale/x86/yuv2rgb_template.c	137;"	d	file:
YUV2RGB_OPERANDS_ALPHA	libswscale/x86/yuv2rgb_template.c	144;"	d	file:
YUVA_IN	ffplay.c	414;"	d	file:
YUVA_OUT	ffplay.c	423;"	d	file:
YUVBufs	libavcodec/indeo3.c	/^} YUVBufs;$/;"	t	typeref:struct:__anon54	file:
YUV_FORMATS	libavfilter/vf_lut.c	141;"	d	file:
YUV_NBPS	libswscale/swscale_template.c	206;"	d	file:
YUV_TO_RGB1	libavutil/colorspace.h	52;"	d
YUV_TO_RGB1_CCIR	libavutil/colorspace.h	34;"	d
YUV_TO_RGB2	libavutil/colorspace.h	61;"	d
YUV_TO_RGB2_CCIR	libavutil/colorspace.h	44;"	d
Y_CCIR_TO_JPEG	libavutil/colorspace.h	69;"	d
Y_COEFF	libswscale/swscale_internal.h	216;"	d
Y_DC_SCALE	libavcodec/arm/asm-offsets.h	32;"	d
Y_JPEG_TO_CCIR	libavutil/colorspace.h	72;"	d
Y_OFFSET	libswscale/swscale_internal.h	221;"	d
Y_TEMP	libswscale/swscale_internal.h	231;"	d
Ybuf	libavcodec/indeo3.c	/^    uint8_t *Ybuf;$/;"	m	struct:__anon54	file:
YopDecContext	libavcodec/yop.c	/^typedef struct YopDecContext {$/;"	s	file:
YopDecContext	libavcodec/yop.c	/^} YopDecContext;$/;"	t	typeref:struct:YopDecContext	file:
YopDecContext	libavformat/yop.c	/^} YopDecContext;$/;"	t	typeref:struct:yop_dec_context	file:
YuvPixel	libavcodec/motionpixels_tablegen.h	/^typedef struct YuvPixel {$/;"	s
YuvPixel	libavcodec/motionpixels_tablegen.h	/^} YuvPixel;$/;"	t	typeref:struct:YuvPixel
ZERO	libavcodec/sparc/dsputil_vis.c	103;"	d	file:
ZERO8x2	libavcodec/rv34.c	/^static inline void ZERO8x2(void* dst, int stride)$/;"	f	file:
ZERO_BT	libavcodec/aac.h	/^    ZERO_BT        = 0,     \/\/\/< Scalefactors and spectral data are all zero.$/;"	e	enum:BandType
ZERO_RUN	libavcodec/mjpegdec.c	550;"	d	file:
ZERO_RUN	libavcodec/mjpegdec.c	630;"	d	file:
ZLIB_PRIME_COMPRESS_CURRENT	libavcodec/flashsv2enc.c	60;"	d	file:
ZLIB_PRIME_COMPRESS_PREVIOUS	libavcodec/flashsv2enc.c	61;"	d	file:
ZMBV_BLOCK	libavcodec/zmbvenc.c	38;"	d	file:
ZMBV_DELTAPAL	libavcodec/zmbv.c	36;"	d	file:
ZMBV_DELTAPAL	libavcodec/zmbvenc.c	36;"	d	file:
ZMBV_FMT_15BPP	libavcodec/zmbv.c	/^    ZMBV_FMT_15BPP = 5,$/;"	e	enum:ZmbvFormat	file:
ZMBV_FMT_16BPP	libavcodec/zmbv.c	/^    ZMBV_FMT_16BPP = 6,$/;"	e	enum:ZmbvFormat	file:
ZMBV_FMT_1BPP	libavcodec/zmbv.c	/^    ZMBV_FMT_1BPP  = 1,$/;"	e	enum:ZmbvFormat	file:
ZMBV_FMT_24BPP	libavcodec/zmbv.c	/^    ZMBV_FMT_24BPP = 7,$/;"	e	enum:ZmbvFormat	file:
ZMBV_FMT_2BPP	libavcodec/zmbv.c	/^    ZMBV_FMT_2BPP  = 2,$/;"	e	enum:ZmbvFormat	file:
ZMBV_FMT_32BPP	libavcodec/zmbv.c	/^    ZMBV_FMT_32BPP = 8$/;"	e	enum:ZmbvFormat	file:
ZMBV_FMT_4BPP	libavcodec/zmbv.c	/^    ZMBV_FMT_4BPP  = 3,$/;"	e	enum:ZmbvFormat	file:
ZMBV_FMT_8BPP	libavcodec/zmbv.c	/^    ZMBV_FMT_8BPP  = 4,$/;"	e	enum:ZmbvFormat	file:
ZMBV_FMT_NONE	libavcodec/zmbv.c	/^    ZMBV_FMT_NONE  = 0,$/;"	e	enum:ZmbvFormat	file:
ZMBV_KEYFRAME	libavcodec/zmbv.c	35;"	d	file:
ZMBV_KEYFRAME	libavcodec/zmbvenc.c	35;"	d	file:
Z_COND_IDCT	libavcodec/x86/simple_idct_mmx.c	559;"	d	file:
Z_THRESHOLD	libavcodec/motion_est.c	408;"	d	file:
ZmbvContext	libavcodec/zmbv.c	/^typedef struct ZmbvContext {$/;"	s	file:
ZmbvContext	libavcodec/zmbv.c	/^} ZmbvContext;$/;"	t	typeref:struct:ZmbvContext	file:
ZmbvEncContext	libavcodec/zmbvenc.c	/^typedef struct ZmbvEncContext {$/;"	s	file:
ZmbvEncContext	libavcodec/zmbvenc.c	/^} ZmbvEncContext;$/;"	t	typeref:struct:ZmbvEncContext	file:
ZmbvFormat	libavcodec/zmbv.c	/^enum ZmbvFormat {$/;"	g	file:
_	libavformat/cafdec.c	268;"	d	file:
_	libavformat/cafdec.c	271;"	d	file:
_	libavformat/wtvdec.c	885;"	d	file:
_	libavformat/wtvdec.c	894;"	d	file:
_BSD_SOURCE	libavfilter/libmpcodecs/vf_palette.c	19;"	d	file:
_BSD_SOURCE	libavformat/udp.c	27;"	d	file:
_DARWIN_C_SOURCE	libswscale/utils.c	22;"	d	file:
_GNU_SOURCE	libavutil/error.c	19;"	d	file:
_LINUX_TIME_H	libavdevice/v4l.c	38;"	d	file:
_SVID_SOURCE	libavformat/os_support.c	24;"	d	file:
_SVID_SOURCE	libswscale/utils.c	21;"	d	file:
_WIN32_WINNT	libavcodec/dxva2_internal.h	26;"	d
_XOPEN_SOURCE	libavcodec/crystalhd.c	76;"	d	file:
_XOPEN_SOURCE	libavutil/mem.c	27;"	d	file:
__FTERRORS_H__	libavfilter/vf_drawtext.c	134;"	d	file:
__STRICT_ANSI__	libavdevice/v4l.c	26;"	d	file:
__STRICT_ANSI__	libavdevice/v4l2.c	33;"	d	file:
__a_evaluation	libavcodec/arm/simple_idct_arm.S	/^__a_evaluation:$/;"	l
__a_evaluation2	libavcodec/arm/simple_idct_arm.S	/^__a_evaluation2:$/;"	l
__almost_empty_row	libavcodec/arm/simple_idct_arm.S	/^__almost_empty_row:$/;"	l
__b_evaluation	libavcodec/arm/simple_idct_arm.S	/^__b_evaluation:$/;"	l
__b_evaluation2	libavcodec/arm/simple_idct_arm.S	/^__b_evaluation2:$/;"	l
__col_loop	libavcodec/arm/simple_idct_arm.S	/^__col_loop:$/;"	l
__constant_ptr__	libavcodec/arm/simple_idct_arm.S	/^__constant_ptr__:  @@ see #defines at the beginning of the source code for values.$/;"	l
__end_a_evaluation	libavcodec/arm/simple_idct_arm.S	/^__end_a_evaluation:$/;"	l
__end_a_evaluation2	libavcodec/arm/simple_idct_arm.S	/^__end_a_evaluation2:$/;"	l
__end_b_evaluation	libavcodec/arm/simple_idct_arm.S	/^__end_b_evaluation:$/;"	l
__end_b_evaluation2	libavcodec/arm/simple_idct_arm.S	/^__end_b_evaluation2:$/;"	l
__end_bef_a_evaluation	libavcodec/arm/simple_idct_arm.S	/^__end_bef_a_evaluation:$/;"	l
__end_col_loop	libavcodec/arm/simple_idct_arm.S	/^__end_col_loop:$/;"	l
__end_row_loop	libavcodec/arm/simple_idct_arm.S	/^__end_row_loop:$/;"	l
__end_simple_idct_arm	libavcodec/arm/simple_idct_arm.S	/^__end_simple_idct_arm:$/;"	l
__row_loop	libavcodec/arm/simple_idct_arm.S	/^__row_loop:$/;"	l
_pix_norm1_blkfn_loopEnd	libavcodec/bfin/pixels_bfin.S	/^_pix_norm1_blkfn_loopEnd:$/;"	l
_pix_norm1_blkfn_loopStart	libavcodec/bfin/pixels_bfin.S	/^_pix_norm1_blkfn_loopStart:$/;"	l
a	libavcodec/g726.c	/^    int a[2];           \/**< second order predictor coeffs *\/$/;"	m	struct:G726Context	file:
a	libavcodec/mqc.h	/^    unsigned int a;$/;"	m	struct:__anon253
a	libavcodec/x86/dsputil_mmx.h	/^typedef struct { uint64_t a, b; } xmm_reg;$/;"	m	struct:__anon60
a	libavutil/eval.c	/^    } a;$/;"	m	struct:AVExpr	typeref:union:AVExpr::__anon306	file:
a0	libavcodec/alpha/regdef.h	46;"	d
a1	libavcodec/alpha/regdef.h	47;"	d
a1	libswscale/bfin/internal_bfin.S	/^        a1 = r1.h*r4.h, a0 = r1.l*r4.l                     || r1=[i1++]; \/\/ crv$/;"	d
a1	libswscale/bfin/internal_bfin.S	/^        a1 = r1.h*r5.h, a0 = r1.l*r5.l                     || r1=[i1++]; \/\/ crv$/;"	d
a2	libavcodec/alpha/regdef.h	48;"	d
a3	libavcodec/alpha/regdef.h	49;"	d
a4	libavcodec/alpha/regdef.h	50;"	d
a5	libavcodec/alpha/regdef.h	51;"	d
a64_compress_colram	libavcodec/a64multienc.c	/^static void a64_compress_colram(unsigned char *buf, int *charmap, uint8_t *colram)$/;"	f	file:
a64_palette	libavcodec/a64colors.h	/^static const uint8_t a64_palette[16][3] = {$/;"	v
a64_write_header	libavformat/a64.c	/^static int a64_write_header(struct AVFormatContext *s)$/;"	f	file:
a64_write_packet	libavformat/a64.c	/^static int a64_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
a64_write_trailer	libavformat/a64.c	/^static int a64_write_trailer(struct AVFormatContext *s)$/;"	f	file:
a64multi_close_encoder	libavcodec/a64multienc.c	/^static av_cold int a64multi_close_encoder(AVCodecContext *avctx)$/;"	f	file:
a64multi_encode_frame	libavcodec/a64multienc.c	/^static int a64multi_encode_frame(AVCodecContext *avctx, unsigned char *buf,$/;"	f	file:
a64multi_init_encoder	libavcodec/a64multienc.c	/^static av_cold int a64multi_init_encoder(AVCodecContext *avctx)$/;"	f	file:
a_avail	libavcodec/vc1.h	/^    int a_avail, c_avail;$/;"	m	struct:VC1Context
a_id	libavformat/nuv.c	/^    int a_id;$/;"	m	struct:__anon387	file:
a_mode	libavcodec/dcaenc.c	/^    int a_mode;                         \/\/\/< audio channels arrangement$/;"	m	struct:__anon231	file:
aacPlusAudioContext	libavcodec/libaacplus.c	/^typedef struct aacPlusAudioContext {$/;"	s	file:
aacPlusAudioContext	libavcodec/libaacplus.c	/^} aacPlusAudioContext;$/;"	t	typeref:struct:aacPlusAudioContext	file:
aacPlus_encode_close	libavcodec/libaacplus.c	/^static av_cold int aacPlus_encode_close(AVCodecContext *avctx)$/;"	f	file:
aacPlus_encode_frame	libavcodec/libaacplus.c	/^static int aacPlus_encode_frame(AVCodecContext *avctx,$/;"	f	file:
aacPlus_encode_init	libavcodec/libaacplus.c	/^static av_cold int aacPlus_encode_init(AVCodecContext *avctx)$/;"	f	file:
aac_adtstoasc_filter	libavcodec/aac_adtstoasc_bsf.c	/^static int aac_adtstoasc_filter(AVBitStreamFilterContext *bsfc,$/;"	f	file:
aac_cb_maxval	libavcodec/aaccoder.c	/^static const uint8_t aac_cb_maxval[12] = {0, 1, 1, 2, 2, 4, 4, 7, 7, 12, 12, 16};$/;"	v	file:
aac_cb_range	libavcodec/aaccoder.c	/^static const uint8_t aac_cb_range [12] = {0, 3, 3, 3, 3, 9, 9, 8, 8, 13, 13, 17};$/;"	v	file:
aac_chan_configs	libavcodec/aacenc.c	/^static const uint8_t aac_chan_configs[6][5] = {$/;"	v	file:
aac_channel_layout	libavcodec/aacdectab.h	/^static const int64_t aac_channel_layout[8] = {$/;"	v
aac_channel_layout_map	libavcodec/aacdectab.h	/^static const uint8_t aac_channel_layout_map[7][5][2] = {$/;"	v
aac_ctx	libavcodec/aacdec.c	/^    AACContext      aac_ctx;             \/\/\/< containing AACContext$/;"	m	struct:LATMContext	file:
aac_decode_close	libavcodec/aacdec.c	/^static av_cold int aac_decode_close(AVCodecContext *avctx)$/;"	f	file:
aac_decode_frame	libavcodec/aacdec.c	/^static int aac_decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
aac_decode_frame_int	libavcodec/aacdec.c	/^static int aac_decode_frame_int(AVCodecContext *avctx, void *data,$/;"	f	file:
aac_decode_init	libavcodec/aacdec.c	/^static av_cold int aac_decode_init(AVCodecContext *avctx)$/;"	f	file:
aac_encode_close	libavcodec/libvo-aacenc.c	/^static int aac_encode_close(AVCodecContext *avctx)$/;"	f	file:
aac_encode_end	libavcodec/aacenc.c	/^static av_cold int aac_encode_end(AVCodecContext *avctx)$/;"	f	file:
aac_encode_frame	libavcodec/aacenc.c	/^static int aac_encode_frame(AVCodecContext *avctx,$/;"	f	file:
aac_encode_frame	libavcodec/libvo-aacenc.c	/^static int aac_encode_frame(AVCodecContext *avctx,$/;"	f	file:
aac_encode_init	libavcodec/aacenc.c	/^static av_cold int aac_encode_init(AVCodecContext *avctx)$/;"	f	file:
aac_encode_init	libavcodec/libvo-aacenc.c	/^static av_cold int aac_encode_init(AVCodecContext *avctx)$/;"	f	file:
aac_parse_init	libavcodec/aac_parser.c	/^static av_cold int aac_parse_init(AVCodecParserContext *s1)$/;"	f	file:
aac_parse_packet	libavformat/rtpdec_mpeg4.c	/^static int aac_parse_packet(AVFormatContext *ctx,$/;"	f	file:
aac_sync	libavcodec/aac_parser.c	/^static int aac_sync(uint64_t state, AACAC3ParseContext *hdr_info,$/;"	f	file:
aacenc_class	libavcodec/aacenc.c	/^static const AVClass aacenc_class = {$/;"	v	file:
aacenc_options	libavcodec/aacenc.c	/^static const AVOption aacenc_options[] = {$/;"	v	file:
aacplus_handle	libavcodec/libaacplus.c	/^    aacplusEncHandle aacplus_handle;$/;"	m	struct:aacPlusAudioContext	file:
aasc_decode_end	libavcodec/aasc.c	/^static av_cold int aasc_decode_end(AVCodecContext *avctx)$/;"	f	file:
aasc_decode_frame	libavcodec/aasc.c	/^static int aasc_decode_frame(AVCodecContext *avctx,$/;"	f	file:
aasc_decode_init	libavcodec/aasc.c	/^static av_cold int aasc_decode_init(AVCodecContext *avctx)$/;"	f	file:
abbr	libavutil/parseutils.c	/^    const char *abbr;$/;"	m	struct:__anon292	file:
abbr	libavutil/parseutils.c	/^    const char *abbr;$/;"	m	struct:__anon293	file:
abits_levels	libavcodec/dca.c	/^static const uint8_t abits_levels[7] = { 3, 5, 7, 9, 13, 17, 25 };$/;"	v	file:
abits_sizes	libavcodec/dca.c	/^static const uint8_t abits_sizes[7] = { 7, 10, 12, 13, 15, 17, 19 };$/;"	v	file:
abort_request	ffplay.c	/^    int abort_request;$/;"	m	struct:PacketQueue	file:
abort_request	ffplay.c	/^    int abort_request;$/;"	m	struct:VideoState	file:
above_block_idx	libavcodec/vp56.h	/^    int above_block_idx[6];$/;"	m	struct:vp56_context
above_blocks	libavcodec/vp56.h	/^    VP56RefDc *above_blocks;$/;"	m	struct:vp56_context
abs_pow34_v	libavcodec/aaccoder.c	/^static void abs_pow34_v(float *out, const float *in, const int size)$/;"	f	file:
absolute_vals	libavcodec/vp8.h	/^        uint8_t absolute_vals;$/;"	m	struct:__anon182::__anon183
abt_flag	libavcodec/wmv2.h	/^    int abt_flag;$/;"	m	struct:Wmv2Context
abt_scantable	libavcodec/wmv2.h	/^    ScanTable abt_scantable[2];$/;"	m	struct:Wmv2Context
abt_type	libavcodec/wmv2.h	/^    int abt_type;$/;"	m	struct:Wmv2Context
abt_type_table	libavcodec/wmv2.h	/^    int abt_type_table[6];$/;"	m	struct:Wmv2Context
abytes	libavformat/dv.c	/^    uint64_t          abytes;$/;"	m	struct:DVDemuxContext	file:
ac	libavcodec/ffv1.c	/^    int ac;                              \/\/\/< 1=range coder <-> 0=golomb rice$/;"	m	struct:FFV1Context	file:
ac3_5p1_mux	libavcodec/resample.c	/^static void ac3_5p1_mux(short *output, short *input1, short *input2, int n)$/;"	f	file:
ac3_bandwidth_tab	libavcodec/ac3enc.c	/^static const uint8_t ac3_bandwidth_tab[5][3][19] = {$/;"	v	file:
ac3_bit_alloc_calc_bap_c	libavcodec/ac3dsp.c	/^static void ac3_bit_alloc_calc_bap_c(int16_t *mask, int16_t *psd,$/;"	f	file:
ac3_compute_mantissa_size_c	libavcodec/ac3dsp.c	/^static int ac3_compute_mantissa_size_c(uint16_t mant_cnt[6][16])$/;"	f	file:
ac3_coupling_start_tab	libavcodec/ac3enc.c	/^static const int8_t ac3_coupling_start_tab[6][3][19] = {$/;"	v	file:
ac3_decode_end	libavcodec/ac3dec.c	/^static av_cold int ac3_decode_end(AVCodecContext *avctx)$/;"	f	file:
ac3_decode_frame	libavcodec/ac3dec.c	/^static int ac3_decode_frame(AVCodecContext * avctx, void *data, int *data_size,$/;"	f	file:
ac3_decode_init	libavcodec/ac3dec.c	/^static av_cold int ac3_decode_init(AVCodecContext *avctx)$/;"	f	file:
ac3_decode_transform_coeffs_ch	libavcodec/ac3dec.c	/^static void ac3_decode_transform_coeffs_ch(AC3DecodeContext *s, int ch_index, mant_groups *m)$/;"	f	file:
ac3_default_coeffs	libavcodec/ac3dec.c	/^static const uint8_t ac3_default_coeffs[8][5][2] = {$/;"	v	file:
ac3_downmix	libavcodec/dsputil.h	/^    void (*ac3_downmix)(float (*samples)[256], float (*matrix)[2], int out_ch, int in_ch, int len);$/;"	m	struct:DSPContext
ac3_downmix_sse	libavcodec/x86/dsputil_mmx.c	/^static void ac3_downmix_sse(float (*samples)[256], float (*matrix)[2], int out_ch, int in_ch, int len)$/;"	f	file:
ac3_eac3_probe	libavformat/ac3dec.c	/^static int ac3_eac3_probe(AVProbeData *p, enum CodecID expected_codec_id)$/;"	f	file:
ac3_exponent_min	libavcodec/ac3dsp.h	/^    void (*ac3_exponent_min)(uint8_t *exp, int num_reuse_blocks, int nb_coefs);$/;"	m	struct:AC3DSPContext
ac3_exponent_min_c	libavcodec/ac3dsp.c	/^static void ac3_exponent_min_c(uint8_t *exp, int num_reuse_blocks, int nb_coefs)$/;"	f	file:
ac3_extract_exponents_c	libavcodec/ac3dsp.c	/^static void ac3_extract_exponents_c(uint8_t *exp, int32_t *coef, int nb_coefs)$/;"	f	file:
ac3_fixed_encode_init	libavcodec/ac3enc_fixed.c	/^static av_cold int ac3_fixed_encode_init(AVCodecContext *avctx)$/;"	f	file:
ac3_lshift_int16	libavcodec/ac3dsp.h	/^    void (*ac3_lshift_int16)(int16_t *src, unsigned int len, unsigned int shift);$/;"	m	struct:AC3DSPContext
ac3_lshift_int16_c	libavcodec/ac3dsp.c	/^static void ac3_lshift_int16_c(int16_t *src, unsigned int len,$/;"	f	file:
ac3_max_msb_abs_int16	libavcodec/ac3dsp.h	/^    int (*ac3_max_msb_abs_int16)(const int16_t *src, int len);$/;"	m	struct:AC3DSPContext
ac3_max_msb_abs_int16_c	libavcodec/ac3dsp.c	/^static int ac3_max_msb_abs_int16_c(const int16_t *src, int len)$/;"	f	file:
ac3_output_frame_header	libavcodec/ac3enc.c	/^static void ac3_output_frame_header(AC3EncodeContext *s)$/;"	f	file:
ac3_parse_header	libavcodec/ac3dec.c	/^static int ac3_parse_header(AC3DecodeContext *s)$/;"	f	file:
ac3_parse_init	libavcodec/ac3_parser.c	/^static av_cold int ac3_parse_init(AVCodecParserContext *s1)$/;"	f	file:
ac3_probe	libavformat/ac3dec.c	/^static int ac3_probe(AVProbeData *p)$/;"	f	file:
ac3_rshift_int32	libavcodec/ac3dsp.h	/^    void (*ac3_rshift_int32)(int32_t *src, unsigned int len, unsigned int shift);$/;"	m	struct:AC3DSPContext
ac3_rshift_int32_c	libavcodec/ac3dsp.c	/^static void ac3_rshift_int32_c(int32_t *src, unsigned int len,$/;"	f	file:
ac3_sync	libavcodec/ac3_parser.c	/^static int ac3_sync(uint64_t state, AACAC3ParseContext *hdr_info,$/;"	f	file:
ac3_tables_init	libavcodec/ac3dec.c	/^static av_cold void ac3_tables_init(void)$/;"	f	file:
ac3_update_bap_counts_c	libavcodec/ac3dsp.c	/^static void ac3_update_bap_counts_c(uint16_t mant_cnt[16], uint8_t *bap,$/;"	f	file:
ac3_upmix_delay	libavcodec/ac3dec.c	/^static void ac3_upmix_delay(AC3DecodeContext *s)$/;"	f	file:
ac3dsp	libavcodec/ac3dec.h	/^    AC3DSPContext ac3dsp;$/;"	m	struct:__anon88
ac3dsp	libavcodec/ac3enc.h	/^    AC3DSPContext ac3dsp;                   \/\/\/< AC-3 optimized functions$/;"	m	struct:AC3EncodeContext
ac3enc_class	libavcodec/ac3enc_combined.c	/^static AVClass ac3enc_class = { "AC-3 Encoder", av_default_item_name,$/;"	v	file:
ac3enc_class	libavcodec/ac3enc_fixed.c	/^static AVClass ac3enc_class = { "Fixed-Point AC-3 Encoder", av_default_item_name,$/;"	v	file:
ac3enc_class	libavcodec/ac3enc_float.c	/^static AVClass ac3enc_class = { "AC-3 Encoder", av_default_item_name,$/;"	v	file:
ac3fixed_options	libavcodec/ac3enc_opts_template.c	/^static const AVOption ac3fixed_options[] = {$/;"	v	file:
ac_bias_0	libavcodec/vp3data.h	/^static const uint16_t ac_bias_0[16][32][2] = {$/;"	v
ac_bias_1	libavcodec/vp3data.h	/^static const uint16_t ac_bias_1[16][32][2] = {$/;"	v
ac_bias_2	libavcodec/vp3data.h	/^static const uint16_t ac_bias_2[16][32][2] = {$/;"	v
ac_bias_3	libavcodec/vp3data.h	/^static const uint16_t ac_bias_3[16][32][2] = {$/;"	v
ac_bits	libavcodec/dnxhddata.h	/^    const uint8_t *ac_bits, *ac_level;$/;"	m	struct:__anon281
ac_ccp_tab	libavcodec/asv1.c	/^static const uint8_t ac_ccp_tab[16][2]={$/;"	v	file:
ac_ccp_vlc	libavcodec/asv1.c	/^static VLC ac_ccp_vlc;$/;"	v	file:
ac_codes	libavcodec/dnxhddata.h	/^    const uint16_t *ac_codes;$/;"	m	struct:__anon281
ac_decode_table	libavcodec/intrax8.c	/^static const uint32_t ac_decode_table[]={$/;"	v	file:
ac_esc_length	libavcodec/mpegvideo.h	/^    int ac_esc_length;       \/\/\/< num of bits needed to encode the longest esc$/;"	m	struct:MpegEncContext
ac_index	libavcodec/mjpegdec.h	/^    int ac_index[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext
ac_index_bits	libavcodec/g729dec.c	/^    uint8_t ac_index_bits[2];   \/\/\/< adaptive codebook index for second subframe (size in bits)$/;"	m	struct:__anon271	file:
ac_index_flag	libavcodec/dnxhddata.h	/^    const uint8_t *ac_run_flag, *ac_index_flag;$/;"	m	struct:__anon281
ac_inter	libavcodec/amrwbdata.h	/^static const float ac_inter[65] = {$/;"	v
ac_level	libavcodec/dnxhddata.h	/^    const uint8_t *ac_bits, *ac_level;$/;"	m	struct:__anon281
ac_pred	libavcodec/mpegvideo.h	/^    int ac_pred;$/;"	m	struct:MpegEncContext
ac_run_flag	libavcodec/dnxhddata.h	/^    const uint8_t *ac_run_flag, *ac_index_flag;$/;"	m	struct:__anon281
ac_stats	libavcodec/mpegvideo.h	/^    int (*ac_stats)[2][MAX_LEVEL+1][MAX_RUN+1][2];$/;"	m	struct:MpegEncContext
ac_val	libavcodec/mpegvideo.h	/^    int16_t (*ac_val[3])[16];      \/\/\/< used for for mpeg4 AC prediction, all 3 arrays must be continuous$/;"	m	struct:MpegEncContext
ac_val_base	libavcodec/mpegvideo.h	/^    int16_t (*ac_val_base)[16];$/;"	m	struct:MpegEncContext
ac_vlc	libavcodec/dnxhddec.c	/^    VLC ac_vlc, dc_vlc, run_vlc;$/;"	m	struct:__anon154	file:
ac_vlc_1	libavcodec/vp3.c	/^    VLC ac_vlc_1[16];$/;"	m	struct:Vp3DecodeContext	file:
ac_vlc_2	libavcodec/vp3.c	/^    VLC ac_vlc_2[16];$/;"	m	struct:Vp3DecodeContext	file:
ac_vlc_3	libavcodec/vp3.c	/^    VLC ac_vlc_3[16];$/;"	m	struct:Vp3DecodeContext	file:
ac_vlc_4	libavcodec/vp3.c	/^    VLC ac_vlc_4[16];$/;"	m	struct:Vp3DecodeContext	file:
acb_type	libavcodec/wmavoice.c	/^    uint8_t acb_type;     \/\/\/< Adaptive codebook type (ACB_TYPE_*)$/;"	m	struct:frame_type_desc	file:
acc	libswscale/yuv2rgb.c	/^    int acc;$/;"	v
access_unit_size	libavcodec/mlp_parser.h	/^    int access_unit_size;       \/\/\/< Number of samples per coded frame$/;"	m	struct:MLPHeaderInfo
access_unit_size	libavcodec/mlpdec.c	/^    int         access_unit_size;$/;"	m	struct:MLPDecodeContext	file:
access_unit_size_pow2	libavcodec/mlp_parser.h	/^    int access_unit_size_pow2;  \/\/\/< Next power of two above number of samples per frame$/;"	m	struct:MLPHeaderInfo
access_unit_size_pow2	libavcodec/mlpdec.c	/^    int         access_unit_size_pow2;$/;"	m	struct:MLPDecodeContext	file:
acelp_decode_gain_codef	libavcodec/sipr16k.c	/^static float acelp_decode_gain_codef(float gain_corr_factor, const float *fc_v,$/;"	f	file:
acelp_lp_decodef	libavcodec/sipr16k.c	/^static void acelp_lp_decodef(float *lp_1st, float *lp_2nd,$/;"	f	file:
ach	libavformat/dv.c	/^    int               ach;$/;"	m	struct:DVDemuxContext	file:
acl	ffserver.c	/^    IPAddressACL *acl;$/;"	m	struct:FFStream	file:
acpred_is_raw	libavcodec/vc1.h	/^    int acpred_is_raw;$/;"	m	struct:VC1Context
acpred_plane	libavcodec/vc1.h	/^    uint8_t* acpred_plane;       \/\/\/< AC prediction flags bitplane$/;"	m	struct:VC1Context
action	ffserver.c	/^    enum IPAddressAction action;$/;"	m	struct:IPAddressACL	typeref:enum:IPAddressACL::IPAddressAction	file:
action_func	libavcodec/pthread.c	/^typedef int (action_func)(AVCodecContext *c, void *arg);$/;"	t	file:
action_func2	libavcodec/pthread.c	/^typedef int (action_func2)(AVCodecContext *c, void *arg, int jobnr, int threadnr);$/;"	t	file:
activated	libavdevice/jack_audio.c	/^    int             activated;$/;"	m	struct:__anon315	file:
active_frame	libavdevice/dv1394.h	/^        int active_frame;$/;"	m	struct:dv1394_status
active_lines	libavcodec/aacpsy.c	/^    float active_lines; \/\/\/< number of active spectral lines$/;"	m	struct:AacPsyBand	file:
active_thread_type	libavcodec/avcodec.h	/^    int active_thread_type;$/;"	m	struct:AVCodecContext
ad_converter_type	libavcodec/ac3.h	/^    int ad_converter_type;$/;"	m	struct:AC3EncOptions
adap	libavcodec/amrwbdata.h	/^    uint16_t adap;                         \/\/\/< adaptive codebook index$/;"	m	struct:__anon110
adapt_cb	libavcodec/ra144.h	/^    uint16_t adapt_cb[146+2];$/;"	m	struct:__anon167
adapt_order	libavcodec/alsdec.c	/^    int adapt_order;          \/\/\/< adaptive order: 1 = on, 0 = off$/;"	m	struct:__anon150	file:
adaptcoeffs	libavcodec/apedec.c	/^    int16_t *adaptcoeffs;   \/\/\/< adaptive filter coefficients used for correcting of actual filter coefficients$/;"	m	struct:APEFilter	file:
adaptive_cb_search	libavcodec/ra144enc.c	/^static int adaptive_cb_search(const int16_t *adapt_cb, float *work,$/;"	f	file:
adaptive_gain_control	libavcodec/wmavoice.c	/^static void adaptive_gain_control(float *out, const float *in,$/;"	f	file:
adaptive_quant	libavcodec/mpegvideo.h	/^    int adaptive_quant;         \/\/\/< use adaptive quantization$/;"	m	struct:MpegEncContext
adaptive_quantization	libavcodec/ratecontrol.c	/^static void adaptive_quantization(MpegEncContext *s, double q){$/;"	f	file:
add28	libavcodec/ppc/h264_template_altivec.c	292;"	d	file:
add28	libavcodec/ppc/h264_template_altivec.c	75;"	d	file:
addCode	libavcodec/lzwenc.c	/^static inline void addCode(LZWEncodeState * s, uint8_t c, int hash_prefix, int hash_code)$/;"	f	file:
addTonalComponents	libavcodec/atrac3.c	/^static int addTonalComponents (float *pSpectrum, int numComponents, tonal_component *pComponent)$/;"	f	file:
add_8x8basis	libavcodec/dsputil.h	/^    void (*add_8x8basis)(int16_t rem[64], int16_t basis[64], int scale);$/;"	m	struct:DSPContext
add_8x8basis	libavcodec/x86/dsputil_mmx_qns_template.c	/^static void DEF(add_8x8basis)(int16_t rem[64], int16_t basis[64], int scale)$/;"	f	file:
add_8x8basis_c	libavcodec/dsputil.c	/^static void add_8x8basis_c(int16_t rem[64], int16_t basis[64], int scale){$/;"	f	file:
add_asflags	configure	/^add_asflags(){$/;"	f
add_audio_stream	doc/examples/muxing-example.c	/^static AVStream *add_audio_stream(AVFormatContext *oc, enum CodecID codec_id)$/;"	f	file:
add_av_stream	ffserver.c	/^static int add_av_stream(FFStream *feed, AVStream *st)$/;"	f	file:
add_av_stream1	ffserver.c	/^static AVStream *add_av_stream1(FFStream *stream, AVCodecContext *codec, int copy)$/;"	f	file:
add_block	libavfilter/libmpcodecs/vf_spp.c	/^static inline void add_block(int16_t *dst, int stride, DCTELEM block[64]){$/;"	f	file:
add_bytes	libavcodec/dsputil.h	/^    void (*add_bytes)(uint8_t *dst\/*align 16*\/, uint8_t *src\/*align 16*\/, int w);$/;"	m	struct:DSPContext
add_bytes_altivec	libavcodec/ppc/dsputil_altivec.c	/^static void add_bytes_altivec(uint8_t *dst, uint8_t *src, int w) {$/;"	f	file:
add_bytes_c	libavcodec/dsputil.c	/^static void add_bytes_c(uint8_t *dst, uint8_t *src, int w){$/;"	f	file:
add_bytes_l2	libavcodec/png.h	/^    void (*add_bytes_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int w);$/;"	m	struct:PNGDecContext
add_bytes_l2_c	libavcodec/pngdec.c	/^static void add_bytes_l2_c(uint8_t *dst, uint8_t *src1, uint8_t *src2, int w)$/;"	f	file:
add_bytes_l2_mmx	libavcodec/x86/png_mmx.c	/^static void add_bytes_l2_mmx(uint8_t *dst, uint8_t *src1, uint8_t *src2, int w)$/;"	f	file:
add_bytes_mmx	libavcodec/x86/dsputil_mmx.c	/^static void add_bytes_mmx(uint8_t *dst, uint8_t *src, int w){$/;"	f	file:
add_cflags	configure	/^add_cflags(){$/;"	f
add_codec	ffserver.c	/^static void add_codec(FFStream *stream, AVCodecContext *av)$/;"	f	file:
add_cppflags	configure	/^add_cppflags(){$/;"	f
add_dct	libavcodec/mpegvideo.c	/^static inline void add_dct(MpegEncContext *s,$/;"	f	file:
add_dequant_dct	libavcodec/mpegvideo.c	/^static inline void add_dequant_dct(MpegEncContext *s,$/;"	f	file:
add_dstream	libavformat/rdt.c	/^add_dstream(AVFormatContext *s, AVStream *orig_st)$/;"	f	file:
add_entry	libavcodec/tiffenc.c	/^static void add_entry(TiffEncoderContext * s,$/;"	f	file:
add_entry1	libavcodec/tiffenc.c	/^static void add_entry1(TiffEncoderContext * s,$/;"	f	file:
add_extralibs	configure	/^add_extralibs(){$/;"	f
add_footnote	doc/texi2pod.pl	/^sub add_footnote$/;"	s
add_frame_16	libavcodec/cscd.c	/^static void add_frame_16(AVFrame *f, const uint8_t *src,$/;"	f	file:
add_frame_16	libavcodec/cscd.c	66;"	d	file:
add_frame_32	libavcodec/cscd.c	/^static void add_frame_32(AVFrame *f, const uint8_t *src,$/;"	f	file:
add_frame_32	libavcodec/cscd.c	67;"	d	file:
add_frame_default	libavcodec/cscd.c	/^static void add_frame_default(AVFrame *f, const uint8_t *src, int src_stride,$/;"	f	file:
add_hfyu_left_prediction	libavcodec/dsputil.h	/^    int  (*add_hfyu_left_prediction)(uint8_t *dst, const uint8_t *src, int w, int left);$/;"	m	struct:DSPContext
add_hfyu_left_prediction_bgr32	libavcodec/dsputil.h	/^    void (*add_hfyu_left_prediction_bgr32)(uint8_t *dst, const uint8_t *src, int w, int *red, int *green, int *blue, int *alpha);$/;"	m	struct:DSPContext
add_hfyu_left_prediction_bgr32_c	libavcodec/dsputil.c	/^static void add_hfyu_left_prediction_bgr32_c(uint8_t *dst, const uint8_t *src, int w, int *red, int *green, int *blue, int *alpha){$/;"	f	file:
add_hfyu_left_prediction_c	libavcodec/dsputil.c	/^static int add_hfyu_left_prediction_c(uint8_t *dst, const uint8_t *src, int w, int acc){$/;"	f	file:
add_hfyu_median_prediction	libavcodec/dsputil.h	/^    void (*add_hfyu_median_prediction)(uint8_t *dst, const uint8_t *top, const uint8_t *diff, int w, int *left, int *left_top);$/;"	m	struct:DSPContext
add_hfyu_median_prediction_c	libavcodec/dsputil.c	/^static void add_hfyu_median_prediction_c(uint8_t *dst, const uint8_t *src1, const uint8_t *diff, int w, int *left, int *left_top){$/;"	f	file:
add_hfyu_median_prediction_cmov	libavcodec/x86/dsputil_mmx.c	/^static void add_hfyu_median_prediction_cmov(uint8_t *dst, const uint8_t *top, const uint8_t *diff, int w, int *left, int *left_top) {$/;"	f	file:
add_info	libavformat/nutenc.c	/^static int add_info(AVIOContext *bc, const char *type, const char *value){$/;"	f	file:
add_lag_median_prediction	libavcodec/lagarith.c	/^static void add_lag_median_prediction(uint8_t *dst, uint8_t *src1,$/;"	f	file:
add_ldflags	configure	/^add_ldflags(){$/;"	f
add_metadata	libavformat/vqf.c	/^static void add_metadata(AVFormatContext *s, const char *tag,$/;"	f	file:
add_new_samples	libavcodec/dcaenc.c	/^static void add_new_samples(DCAContext *c, const int32_t *in,$/;"	f	file:
add_paeth_prediction	libavcodec/png.h	/^    void (*add_paeth_prediction)(uint8_t *dst, uint8_t *src, uint8_t *top, int w, int bpp);$/;"	m	struct:PNGDecContext
add_paeth_prediction_c	libavcodec/pngdec.c	/^static void add_paeth_prediction_c(uint8_t *dst, uint8_t *src, uint8_t *top, int w, int bpp)$/;"	f	file:
add_pat_entry	libavformat/mpegts.c	/^static void add_pat_entry(MpegTSContext *ts, unsigned int programid)$/;"	f	file:
add_peak	libavcodec/twinvq.c	/^static void add_peak(int period, int width, const float *shape,$/;"	f	file:
add_pes_stream	libavformat/mpegts.c	/^static PESContext *add_pes_stream(MpegTSContext *ts, int pid, int pcr_pid)$/;"	f	file:
add_pid_to_pmt	libavformat/mpegts.c	/^static void add_pid_to_pmt(MpegTSContext *ts, unsigned int programid, unsigned int pid)$/;"	f	file:
add_pixels4	libavcodec/dsputil.h	/^    void (*add_pixels4)(uint8_t *pixels, DCTELEM *block, int line_size);$/;"	m	struct:DSPContext
add_pixels4	libavcodec/dsputil_template.c	/^static void FUNCC(add_pixels4)(uint8_t *restrict p_pixels, DCTELEM *p_block, int line_size)$/;"	f	file:
add_pixels8	libavcodec/dsputil.h	/^    void (*add_pixels8)(uint8_t *pixels, DCTELEM *block, int line_size);$/;"	m	struct:DSPContext
add_pixels8	libavcodec/dsputil_template.c	/^static void FUNCC(add_pixels8)(uint8_t *restrict p_pixels, DCTELEM *p_block, int line_size)$/;"	f	file:
add_pixels_clamped	libavcodec/dsputil.h	/^    void (*add_pixels_clamped)(const DCTELEM *block\/*align 16*\/, uint8_t *pixels\/*align 8*\/, int line_size);$/;"	m	struct:DSPContext
add_pixels_clamped2_c	libavcodec/dsputil.c	/^static void add_pixels_clamped2_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f	file:
add_pixels_clamped4_c	libavcodec/dsputil.c	/^static void add_pixels_clamped4_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f	file:
add_pixels_clamped_axp_p	libavcodec/alpha/dsputil_alpha.c	/^void (*add_pixels_clamped_axp_p)(const DCTELEM *block, uint8_t *pixels,$/;"	v
add_pixels_clamped_iwmmxt	libavcodec/arm/dsputil_iwmmxt.c	/^void add_pixels_clamped_iwmmxt(const DCTELEM *block, uint8_t *pixels, int line_size)$/;"	f
add_pixels_clamped_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void add_pixels_clamped_mlib(const DCTELEM *block, uint8_t *pixels, int line_size)$/;"	f	file:
add_pixels_clamped_mvi_asm	libavcodec/alpha/dsputil_alpha_asm.S	/^add_pixels_clamped_mvi_asm:$/;"	l
add_sorted	libavcodec/h264_refs.c	/^static int add_sorted(Picture **sorted, Picture **src, int len, int limit, int dir){$/;"	f	file:
add_to_pktbuf	libavformat/utils.c	/^static AVPacket *add_to_pktbuf(AVPacketList **packet_buffer, AVPacket *pkt,$/;"	f	file:
add_video_stream	doc/examples/muxing-example.c	/^static AVStream *add_video_stream(AVFormatContext *oc, enum CodecID codec_id)$/;"	f	file:
add_yblock	libavcodec/snow.c	/^static av_always_inline void add_yblock(SnowContext *s, int sliced, slice_buffer *sb, IDWTELEM *dst, uint8_t *dst8, const uint8_t *obmc, int src_x, int src_y, int b_w, int b_h, int w, int h, int dst_stride, int src_stride, int obmc_stride, int b_x, int b_y, int add, int offset_dst, int plane_index){$/;"	f	file:
addkey	libavutil/aes.c	/^static inline void addkey(av_aes_block *dst, const av_aes_block *src, const av_aes_block *round_key){$/;"	f	file:
addrinfo	libavformat/network.h	/^struct addrinfo {$/;"	s
adjust	libavfilter/libmpcodecs/vf_eq2.c	/^  void (*adjust) (struct eq2_param_t *par, unsigned char *dst, unsigned char *src,$/;"	m	struct:eq2_param_t	file:
adjust_frame_information	libavcodec/aacenc.c	/^static void adjust_frame_information(AACEncContext *apc, ChannelElement *cpe, int chans)$/;"	f	file:
adjust_frame_size	libavcodec/ac3enc.c	/^static void adjust_frame_size(AC3EncodeContext *s)$/;"	f	file:
adjust_pred16	libavcodec/rv34.c	/^static inline int adjust_pred16(int itype, int up, int left)$/;"	f	file:
adjust_write_index	libavformat/ffmdec.c	/^static void adjust_write_index(AVFormatContext *s)$/;"	f	file:
adpcm	libavformat/4xm.c	/^    int adpcm;$/;"	m	struct:AudioTrack	file:
adpcm_compress_trellis	libavcodec/adpcm.c	/^static void adpcm_compress_trellis(AVCodecContext *avctx, const short *samples,$/;"	f	file:
adpcm_ct_expand_nibble	libavcodec/adpcm.c	/^static inline short adpcm_ct_expand_nibble(ADPCMChannelStatus *c, char nibble)$/;"	f	file:
adpcm_decode_frame	libavcodec/adpcm.c	/^static int adpcm_decode_frame(AVCodecContext *avctx,$/;"	f	file:
adpcm_decode_init	libavcodec/adpcm.c	/^static av_cold int adpcm_decode_init(AVCodecContext * avctx)$/;"	f	file:
adpcm_encode_close	libavcodec/adpcm.c	/^static av_cold int adpcm_encode_close(AVCodecContext *avctx)$/;"	f	file:
adpcm_encode_frame	libavcodec/adpcm.c	/^static int adpcm_encode_frame(AVCodecContext *avctx,$/;"	f	file:
adpcm_encode_init	libavcodec/adpcm.c	/^static av_cold int adpcm_encode_init(AVCodecContext *avctx)$/;"	f	file:
adpcm_ima_compress_sample	libavcodec/adpcm.c	/^static inline unsigned char adpcm_ima_compress_sample(ADPCMChannelStatus *c, short sample)$/;"	f	file:
adpcm_ima_expand_nibble	libavcodec/adpcm.c	/^static inline short adpcm_ima_expand_nibble(ADPCMChannelStatus *c, char nibble, int shift)$/;"	f	file:
adpcm_ima_qt_compress_sample	libavcodec/adpcm.c	/^static inline unsigned char adpcm_ima_qt_compress_sample(ADPCMChannelStatus *c, short sample)$/;"	f	file:
adpcm_ima_qt_expand_nibble	libavcodec/adpcm.c	/^static inline int adpcm_ima_qt_expand_nibble(ADPCMChannelStatus *c, int nibble, int shift)$/;"	f	file:
adpcm_ms_compress_sample	libavcodec/adpcm.c	/^static inline unsigned char adpcm_ms_compress_sample(ADPCMChannelStatus *c, short sample)$/;"	f	file:
adpcm_ms_expand_nibble	libavcodec/adpcm.c	/^static inline short adpcm_ms_expand_nibble(ADPCMChannelStatus *c, char nibble)$/;"	f	file:
adpcm_sbpro_expand_nibble	libavcodec/adpcm.c	/^static inline short adpcm_sbpro_expand_nibble(ADPCMChannelStatus *c, char nibble, int size, int shift)$/;"	f	file:
adpcm_vb	libavcodec/dcadata.h	/^static const int16_t adpcm_vb[4096][4] =$/;"	v
adpcm_yamaha_compress_sample	libavcodec/adpcm.c	/^static inline unsigned char adpcm_yamaha_compress_sample(ADPCMChannelStatus *c, short sample)$/;"	f	file:
adpcm_yamaha_expand_nibble	libavcodec/adpcm.c	/^static inline short adpcm_yamaha_expand_nibble(ADPCMChannelStatus *c, unsigned char nibble)$/;"	f	file:
adts	libavformat/mpegtsenc.c	/^    ADTSContext *adts;$/;"	m	struct:MpegTSWriteStream	file:
adts_aac_probe	libavformat/aacdec.c	/^static int adts_aac_probe(AVProbeData *p)$/;"	f	file:
adts_aac_read_header	libavformat/aacdec.c	/^static int adts_aac_read_header(AVFormatContext *s,$/;"	f	file:
adts_write_header	libavformat/adtsenc.c	/^static int adts_write_header(AVFormatContext *s)$/;"	f	file:
adts_write_packet	libavformat/adtsenc.c	/^static int adts_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
adu_mode	libavcodec/mpegaudiodec.c	/^    int adu_mode; \/\/\/< 0 for standard mp3, 1 for adu formatted mp3$/;"	m	struct:MPADecodeContext	file:
adx_decode	libavcodec/adxdec.c	/^static void adx_decode(short *out,const unsigned char *in,PREV *prev)$/;"	f	file:
adx_decode_frame	libavcodec/adxdec.c	/^static int adx_decode_frame(AVCodecContext *avctx,$/;"	f	file:
adx_decode_header	libavcodec/adxdec.c	/^static int adx_decode_header(AVCodecContext *avctx,const unsigned char *buf,size_t bufsize)$/;"	f	file:
adx_decode_init	libavcodec/adxdec.c	/^static av_cold int adx_decode_init(AVCodecContext *avctx)$/;"	f	file:
adx_decode_stereo	libavcodec/adxdec.c	/^static void adx_decode_stereo(short *out,const unsigned char *in,PREV *prev)$/;"	f	file:
adx_encode	libavcodec/adxenc.c	/^static void adx_encode(unsigned char *adx,const short *wav,PREV *prev)$/;"	f	file:
adx_encode_close	libavcodec/adxenc.c	/^static av_cold int adx_encode_close(AVCodecContext *avctx)$/;"	f	file:
adx_encode_frame	libavcodec/adxenc.c	/^static int adx_encode_frame(AVCodecContext *avctx,$/;"	f	file:
adx_encode_header	libavcodec/adxenc.c	/^static int adx_encode_header(AVCodecContext *avctx,unsigned char *buf,size_t bufsize)$/;"	f	file:
adx_encode_init	libavcodec/adxenc.c	/^static av_cold int adx_encode_init(AVCodecContext *avctx)$/;"	f	file:
aea_read_header	libavformat/aea.c	/^static int aea_read_header(AVFormatContext *s,$/;"	f	file:
aea_read_packet	libavformat/aea.c	/^static int aea_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
aea_read_probe	libavformat/aea.c	/^static int aea_read_probe(AVProbeData *p)$/;"	f	file:
aes	libavformat/crypto.c	/^    struct AVAES *aes;$/;"	m	struct:__anon432	typeref:struct:__anon432::AVAES	file:
aesc	libavformat/mxfdec.c	/^    struct AVAES *aesc;$/;"	m	struct:__anon447	typeref:struct:__anon447::AVAES	file:
affine_1d_MMX	libavfilter/libmpcodecs/vf_eq2.c	/^void affine_1d_MMX (eq2_param_t *par, unsigned char *dst, unsigned char *src,$/;"	f	file:
affinity	libavfilter/libmpcodecs/pullup.h	/^    int affinity;$/;"	m	struct:pullup_field
ahead	libavformat/nsvdec.c	/^    AVPacket ahead[2]; \/* [v, a] if .data is !NULL there is something *\/$/;"	m	struct:__anon345	file:
ai_addr	libavformat/network.h	/^    struct sockaddr *ai_addr;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	libavformat/network.h	/^    int ai_addrlen;$/;"	m	struct:addrinfo
ai_canonname	libavformat/network.h	/^    char *ai_canonname;$/;"	m	struct:addrinfo
ai_family	libavformat/network.h	/^    int ai_family;$/;"	m	struct:addrinfo
ai_flags	libavformat/network.h	/^    int ai_flags;$/;"	m	struct:addrinfo
ai_next	libavformat/network.h	/^    struct addrinfo *ai_next;$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	libavformat/network.h	/^    int ai_protocol;$/;"	m	struct:addrinfo
ai_socktype	libavformat/network.h	/^    int ai_socktype;$/;"	m	struct:addrinfo
aic	libavformat/gxfenc.c	/^    AudioInterleaveContext aic;$/;"	m	struct:GXFStreamContext	file:
aic	libavformat/mxfenc.c	/^    AudioInterleaveContext aic;$/;"	m	struct:__anon458	file:
aic_mode1_vlc	libavcodec/rv40.c	/^static VLC aic_mode1_vlc[AIC_MODE1_NUM], aic_mode2_vlc[AIC_MODE2_NUM];$/;"	v	file:
aic_mode1_vlc_bits	libavcodec/rv40vlc2.h	/^static const uint8_t aic_mode1_vlc_bits[AIC_MODE1_NUM][AIC_MODE1_SIZE] = {$/;"	v
aic_mode1_vlc_codes	libavcodec/rv40vlc2.h	/^static const uint8_t aic_mode1_vlc_codes[AIC_MODE1_NUM][AIC_MODE1_SIZE] = {$/;"	v
aic_mode2_vlc	libavcodec/rv40.c	/^static VLC aic_mode1_vlc[AIC_MODE1_NUM], aic_mode2_vlc[AIC_MODE2_NUM];$/;"	v	file:
aic_mode2_vlc_bits	libavcodec/rv40vlc2.h	/^static const uint8_t aic_mode2_vlc_bits[AIC_MODE2_NUM][AIC_MODE2_SIZE] = {$/;"	v
aic_mode2_vlc_codes	libavcodec/rv40vlc2.h	/^static const uint16_t aic_mode2_vlc_codes[AIC_MODE2_NUM][AIC_MODE2_SIZE] = {$/;"	v
aic_top_vlc	libavcodec/rv40.c	/^static VLC aic_top_vlc;$/;"	v	file:
aiff_codec_get_id	libavformat/aiffdec.c	/^static enum CodecID aiff_codec_get_id(int bps)$/;"	f	file:
aiff_probe	libavformat/aiffdec.c	/^static int aiff_probe(AVProbeData *p)$/;"	f	file:
aiff_read_header	libavformat/aiffdec.c	/^static int aiff_read_header(AVFormatContext *s,$/;"	f	file:
aiff_read_packet	libavformat/aiffdec.c	/^static int aiff_read_packet(AVFormatContext *s,$/;"	f	file:
aiff_write_header	libavformat/aiffenc.c	/^static int aiff_write_header(AVFormatContext *s)$/;"	f	file:
aiff_write_packet	libavformat/aiffenc.c	/^static int aiff_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
aiff_write_trailer	libavformat/aiffenc.c	/^static int aiff_write_trailer(AVFormatContext *s)$/;"	f	file:
alac_decode_close	libavcodec/alac.c	/^static av_cold int alac_decode_close(AVCodecContext *avctx)$/;"	f	file:
alac_decode_frame	libavcodec/alac.c	/^static int alac_decode_frame(AVCodecContext *avctx,$/;"	f	file:
alac_decode_init	libavcodec/alac.c	/^static av_cold int alac_decode_init(AVCodecContext * avctx)$/;"	f	file:
alac_encode_close	libavcodec/alacenc.c	/^static av_cold int alac_encode_close(AVCodecContext *avctx)$/;"	f	file:
alac_encode_frame	libavcodec/alacenc.c	/^static int alac_encode_frame(AVCodecContext *avctx, uint8_t *frame,$/;"	f	file:
alac_encode_init	libavcodec/alacenc.c	/^static av_cold int alac_encode_init(AVCodecContext *avctx)$/;"	f	file:
alac_entropy_coder	libavcodec/alacenc.c	/^static void alac_entropy_coder(AlacEncodeContext *s)$/;"	f	file:
alac_linear_predictor	libavcodec/alacenc.c	/^static void alac_linear_predictor(AlacEncodeContext *s, int ch)$/;"	f	file:
alac_set_info	libavcodec/alac.c	/^static int alac_set_info(ALACContext *alac)$/;"	f	file:
alac_stereo_decorrelation	libavcodec/alacenc.c	/^static void alac_stereo_decorrelation(AlacEncodeContext *s)$/;"	f	file:
alaw2linear	libavcodec/pcm_tablegen.h	/^static av_cold int alaw2linear(unsigned char a_val)$/;"	f
algo	libavcodec/dct-test.c	/^struct algo {$/;"	s	file:
algo	libavformat/matroskadec.c	/^    uint64_t algo;$/;"	m	struct:__anon355	file:
algorithm	libavcodec/truemotion1.c	/^    int algorithm;$/;"	m	struct:comp_types	file:
algorithm	libavformat/httpauth.h	/^    char algorithm[10];    \/**< Server specified digest algorithm *\/$/;"	m	struct:__anon404
algos	libavcodec/dct-test.c	/^struct algo algos[] = {$/;"	v	typeref:struct:algo
align16	libavcodec/ps2/idct_mmi.c	/^static short consttable[] align16 = {$/;"	v	file:
align16	libavcodec/ps2/mmi.h	24;"	d
align_get_bits	libavcodec/get_bits.h	/^static inline void align_get_bits(GetBitContext *s)$/;"	f
align_iframe	libavformat/mpegenc.c	/^    int align_iframe;$/;"	m	struct:__anon428	file:
align_put_bits	libavcodec/bitstream.c	/^void align_put_bits(PutBitContext *s)$/;"	f
align_put_bits	libavcodec/put_bits.h	123;"	d
alignment	libavcodec/ass_split.h	/^    int   alignment;      \/**< position of the text (left, center, top...),$/;"	m	struct:__anon249
alignment	libavcodec/ass_split.h	/^    void (*alignment)(void *priv, int alignment);$/;"	m	struct:__anon252
alignment_applied	libavcodec/srtenc.c	/^    int alignment_applied;$/;"	m	struct:__anon139	file:
all_fragments	libavcodec/vp3.c	/^    Vp3Fragment *all_fragments;$/;"	m	struct:Vp3DecodeContext	file:
all_pix_fmts	libavfilter/vf_lut.c	/^static enum PixelFormat all_pix_fmts[] = { RGB_FORMATS, YUV_FORMATS, PIX_FMT_NONE };$/;"	v	typeref:enum:PixelFormat	file:
alloc	libavformat/rtpdec.h	/^    PayloadContext *(*alloc) (void); \/\/\/< allocate any data needed by the rtp parsing for this dynamic data.$/;"	m	struct:RTPDynamicProtocolHandler_s
allocStuff	libavfilter/libmpcodecs/vf_sab.c	/^static int allocStuff(FilterParam *f, int width, int height){$/;"	f	file:
allocStuff	libavfilter/libmpcodecs/vf_smartblur.c	/^static int allocStuff(FilterParam *f, int width, int height){$/;"	f	file:
alloc_and_copy	libavcodec/h264_mp4toannexb_bsf.c	/^static int alloc_and_copy(uint8_t **poutbuf,          int *poutbuf_size,$/;"	f	file:
alloc_and_copy_or_fail	libavcodec/options.c	589;"	d	file:
alloc_and_copy_or_fail	libavcodec/options.c	603;"	d	file:
alloc_blocks	libavcodec/snow.c	/^static int alloc_blocks(SnowContext *s){$/;"	f	file:
alloc_buffer	libavcodec/vaapi.c	/^static void *alloc_buffer(struct vaapi_context *vactx, int type, unsigned int size, uint32_t *buf_id)$/;"	f	file:
alloc_buffer	libavfilter/libmpcodecs/pullup.c	/^static void alloc_buffer(struct pullup_context *c, struct pullup_buffer *b)$/;"	f	file:
alloc_frame_buffer	libavcodec/mpegvideo.c	/^static int alloc_frame_buffer(MpegEncContext *s, Picture *pic)$/;"	f	file:
alloc_metrics	libavfilter/libmpcodecs/pullup.c	/^static void alloc_metrics(struct pullup_context *c, struct pullup_field *f)$/;"	f	file:
alloc_mpi	libavfilter/libmpcodecs/mp_image.c	/^mp_image_t* alloc_mpi(int w, int h, unsigned long int fmt) {$/;"	f
alloc_picture	doc/examples/muxing-example.c	/^static AVFrame *alloc_picture(enum PixelFormat pix_fmt, int width, int height)$/;"	f	file:
alloc_picture	ffplay.c	/^static void alloc_picture(void *opaque)$/;"	f	file:
alloc_priv_context	cmdutils.c	/^static void *alloc_priv_context(int size, const AVClass *class)$/;"	f	file:
alloc_priv_context	ffmpeg/cmdutils.c	/^static void *alloc_priv_context(int size, const AVClass *class)$/;"	f	file:
alloc_table	libavcodec/bitstream.c	/^static int alloc_table(VLC *vlc, int size, int use_static)$/;"	f	file:
alloc_table	libavcodec/mpegaudioenc.c	/^    const unsigned char *alloc_table;$/;"	m	struct:MpegAudioContext	file:
alloc_table_1	libavcodec/mpegaudiodata.c	/^static const unsigned char alloc_table_1[] = {$/;"	v	file:
alloc_table_3	libavcodec/mpegaudiodata.c	/^static const unsigned char alloc_table_3[] = {$/;"	v	file:
alloc_table_4	libavcodec/mpegaudiodata.c	/^static const unsigned char alloc_table_4[] = {$/;"	v	file:
alloc_temp	libavcodec/huffyuv.c	/^static av_cold void alloc_temp(HYuvContext *s){$/;"	f	file:
allocate_buffers	libavcodec/ac3enc.c	/^static av_cold int allocate_buffers(AVCodecContext *avctx)$/;"	f	file:
allocate_buffers	libavcodec/alac.c	/^static void allocate_buffers(ALACContext *alac)$/;"	f	file:
allocate_buffers	libavcodec/flacdec.c	/^static void allocate_buffers(FLACContext *s)$/;"	f	file:
allocate_buffers	libavcodec/shorten.c	/^static int allocate_buffers(ShortenContext *s)$/;"	f	file:
allocate_initial_states	libavcodec/ffv1.c	/^static int allocate_initial_states(FFV1Context *f){$/;"	f	file:
allocate_progress	libavcodec/pthread.c	/^static int *allocate_progress(PerThreadContext *p)$/;"	f	file:
allocate_sample_buffers	libavcodec/ac3enc.h	/^    int  (*allocate_sample_buffers)(struct AC3EncodeContext *s);$/;"	m	struct:AC3EncodeContext
allocate_sample_buffers	libavcodec/ac3enc_template.c	/^int AC3_NAME(allocate_sample_buffers)(AC3EncodeContext *s)$/;"	f
allocate_tables	libavcodec/vp3.c	/^static av_cold int allocate_tables(AVCodecContext *avctx)$/;"	f	file:
allocated	ffplay.c	/^    int allocated;$/;"	m	struct:VideoPicture	file:
allocated_audio_buf_size	ffmpeg.c	/^static unsigned int allocated_audio_out_size, allocated_audio_buf_size;$/;"	v	file:
allocated_audio_buf_size	ffmpeg/ffmpeg.c	/^static unsigned int allocated_audio_out_size, allocated_audio_buf_size;$/;"	v	file:
allocated_audio_out_size	ffmpeg.c	/^static unsigned int allocated_audio_out_size, allocated_audio_buf_size;$/;"	v	file:
allocated_audio_out_size	ffmpeg/ffmpeg.c	/^static unsigned int allocated_audio_out_size, allocated_audio_buf_size;$/;"	v	file:
allocated_bitstream_buffer_size	libavcodec/mpegvideo.h	/^    unsigned int allocated_bitstream_buffer_size;$/;"	m	struct:MpegEncContext
allocated_bitstream_size	libavcodec/shorten.c	/^    unsigned int allocated_bitstream_size;$/;"	m	struct:ShortenContext	file:
allocated_buf_size	libavcodec/pthread.c	/^    int            allocated_buf_size; \/\/\/< Size allocated for avpkt.data$/;"	m	struct:PerThreadContext	file:
allocated_data_blocks	libavcodec/xvmc.h	/^    int             allocated_data_blocks;$/;"	m	struct:xvmc_pix_fmt
allocated_edge_emu_buffer	libavcodec/mpegvideo.h	/^    uint8_t *allocated_edge_emu_buffer;$/;"	m	struct:MpegEncContext
allocated_mv_blocks	libavcodec/xvmc.h	/^    int             allocated_mv_blocks;$/;"	m	struct:xvmc_pix_fmt
allocated_size	libavcodec/4xm.c	/^    unsigned int allocated_size;$/;"	m	struct:CFrameBuffer	file:
allocated_size	libavformat/aviobuf.c	/^    int pos, size, allocated_size;$/;"	m	struct:DynBuffer	file:
allow_dtx	libavcodec/libvo-amrwbenc.c	/^    int    allow_dtx;$/;"	m	struct:AMRWBContext	file:
allow_per_frame_metadata	libavcodec/ac3.h	/^    int allow_per_frame_metadata;$/;"	m	struct:AC3EncOptions
alpMmxFilter	libswscale/swscale_internal.h	/^    int32_t  alpMmxFilter[4*MAX_FILTER_SIZE];$/;"	m	struct:SwsContext
alpPixBuf	libswscale/swscale_internal.h	/^    int16_t **alpPixBuf;          \/\/\/< Ring buffer for scaled horizontal alpha  plane lines to be fed to the vertical scaler.$/;"	m	struct:SwsContext
alpToYV12	libswscale/swscale_internal.h	/^    void (*alpToYV12)(uint8_t *dst, const uint8_t *src,$/;"	m	struct:SwsContext
alpha	libavcodec/ass_split.h	/^    void (*alpha)(void *priv, int alpha, int alpha_id);$/;"	m	struct:__anon252
alpha0	libavcodec/sbr.h	/^    float              alpha0[64][2];$/;"	m	struct:__anon57
alpha1	libavcodec/sbr.h	/^    float              alpha1[64][2];$/;"	m	struct:__anon57
alpha_offset	libavcodec/cavs.h	/^    int alpha_offset, beta_offset;$/;"	m	struct:__anon207
alpha_offset	libavdevice/fbdev.c	/^    int red_offset, green_offset, blue_offset, alpha_offset;$/;"	m	struct:rgb_pixfmt_map_entry	file:
alpha_tab	libavcodec/cavsdata.h	/^static const uint8_t alpha_tab[64] = {$/;"	v
alpha_table	libavcodec/h264_loopfilter.c	/^static const uint8_t alpha_table[52*3] = {$/;"	v	file:
alsa_demuxer_class	libavdevice/alsa-audio-dec.c	/^static const AVClass alsa_demuxer_class = {$/;"	v	file:
alt_inter_vlc	libavcodec/mpegvideo.h	/^    int alt_inter_vlc;              \/\/\/< alternative inter vlc$/;"	m	struct:MpegEncContext
alternate_scan	libavcodec/mpegvideo.h	/^    int alternate_scan;$/;"	m	struct:MpegEncContext
altivec_packIntArrayToCharArray	libswscale/ppc/swscale_altivec.c	/^altivec_packIntArrayToCharArray(int *val, uint8_t* dest, int dstW)$/;"	f	file:
altivec_uyvy_rgb32	libswscale/ppc/yuv2rgb_altivec.c	/^static int altivec_uyvy_rgb32 (SwsContext *c,$/;"	f	file:
altpq	libavcodec/vc1.h	/^    uint8_t pq, altpq;    \/\/\/< Current\/alternate frame quantizer scale$/;"	m	struct:VC1Context
always_reset	libavcodec/snow.c	/^    int always_reset;$/;"	m	struct:SnowContext	file:
amask	libavcodec/alpha/asm.h	113;"	d
amask	libavcodec/alpha/asm.h	164;"	d
amask	libavcodec/alpha/asm.h	99;"	d
amf_get_string	libavformat/flvdec.c	/^static int amf_get_string(AVIOContext *ioc, char *buffer, int buffsize) {$/;"	f	file:
amf_parse_object	libavformat/flvdec.c	/^static int amf_parse_object(AVFormatContext *s, AVStream *astream, AVStream *vstream, const char *key, int64_t max_pos, int depth) {$/;"	f	file:
amode	libavcodec/dca.c	/^    int amode;                  \/\/\/< audio channels arrangement$/;"	m	struct:__anon93	file:
amount	libavfilter/libmpcodecs/vf_unsharp.c	/^    double amount;$/;"	m	struct:FilterParam	file:
amount	libavfilter/vf_unsharp.c	/^    int amount;                              \/\/\/< effect amount$/;"	m	struct:FilterParam	file:
amp	libavcodec/aac.h	/^    int amp[4];$/;"	m	struct:__anon242
amp1Test	libavfilter/libmpcodecs/vf_test.c	/^static void amp1Test(uint8_t *dst, int stride, int off)$/;"	f	file:
amplitude_bits	libavcodec/vorbisdec.c	/^            uint8_t       amplitude_bits;$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor0_s	file:
amplitude_offset	libavcodec/vorbisdec.c	/^            uint8_t       amplitude_offset;$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor0_s	file:
amptable	libavcodec/ra288.h	/^static const float amptable[8]={$/;"	v
amr_bit_orderings_by_mode	libavcodec/amrwbdata.h	/^static const uint16_t* amr_bit_orderings_by_mode[] = {$/;"	v
amr_decode_fix_avctx	libavcodec/libopencore-amr.c	/^static void amr_decode_fix_avctx(AVCodecContext *avctx)$/;"	f	file:
amr_free_context	libavformat/rtpdec_amr.c	/^static void amr_free_context(PayloadContext *data)$/;"	f	file:
amr_handle_packet	libavformat/rtpdec_amr.c	/^static int amr_handle_packet(AVFormatContext *ctx,$/;"	f	file:
amr_nb_decode_close	libavcodec/libopencore-amr.c	/^static av_cold int amr_nb_decode_close(AVCodecContext *avctx)$/;"	f	file:
amr_nb_decode_frame	libavcodec/libopencore-amr.c	/^static int amr_nb_decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
amr_nb_decode_init	libavcodec/libopencore-amr.c	/^static av_cold int amr_nb_decode_init(AVCodecContext *avctx)$/;"	f	file:
amr_nb_encode_close	libavcodec/libopencore-amr.c	/^static av_cold int amr_nb_encode_close(AVCodecContext *avctx)$/;"	f	file:
amr_nb_encode_frame	libavcodec/libopencore-amr.c	/^static int amr_nb_encode_frame(AVCodecContext *avctx,$/;"	f	file:
amr_nb_encode_init	libavcodec/libopencore-amr.c	/^static av_cold int amr_nb_encode_init(AVCodecContext *avctx)$/;"	f	file:
amr_new_context	libavformat/rtpdec_amr.c	/^static PayloadContext *amr_new_context(void)$/;"	f	file:
amr_parse_fmtp	libavformat/rtpdec_amr.c	/^static int amr_parse_fmtp(AVStream *stream, PayloadContext *data,$/;"	f	file:
amr_parse_sdp_line	libavformat/rtpdec_amr.c	/^static int amr_parse_sdp_line(AVFormatContext *s, int st_index,$/;"	f	file:
amr_probe	libavformat/amr.c	/^static int amr_probe(AVProbeData *p)$/;"	f	file:
amr_read_header	libavformat/amr.c	/^static int amr_read_header(AVFormatContext *s,$/;"	f	file:
amr_read_packet	libavformat/amr.c	/^static int amr_read_packet(AVFormatContext *s,$/;"	f	file:
amr_unpacking_bitmaps_per_mode	libavcodec/amrnbdata.h	/^static const uint8_t * const amr_unpacking_bitmaps_per_mode[N_MODES] = {$/;"	v
amr_wb_decode_close	libavcodec/libopencore-amr.c	/^static int amr_wb_decode_close(AVCodecContext *avctx)$/;"	f	file:
amr_wb_decode_frame	libavcodec/libopencore-amr.c	/^static int amr_wb_decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
amr_wb_decode_init	libavcodec/libopencore-amr.c	/^static av_cold int amr_wb_decode_init(AVCodecContext *avctx)$/;"	f	file:
amr_wb_encode_close	libavcodec/libvo-amrwbenc.c	/^static int amr_wb_encode_close(AVCodecContext *avctx)$/;"	f	file:
amr_wb_encode_frame	libavcodec/libvo-amrwbenc.c	/^static int amr_wb_encode_frame(AVCodecContext *avctx,$/;"	f	file:
amr_wb_encode_init	libavcodec/libvo-amrwbenc.c	/^static av_cold int amr_wb_encode_init(AVCodecContext *avctx)$/;"	f	file:
amr_write_header	libavformat/amr.c	/^static int amr_write_header(AVFormatContext *s)$/;"	f	file:
amr_write_packet	libavformat/amr.c	/^static int amr_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
amrnb_decode_frame	libavcodec/amrnbdec.c	/^static int amrnb_decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
amrnb_decode_init	libavcodec/amrnbdec.c	/^static av_cold int amrnb_decode_init(AVCodecContext *avctx)$/;"	f	file:
amrwb_decode_frame	libavcodec/amrwbdec.c	/^static int amrwb_decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
amrwb_decode_init	libavcodec/amrwbdec.c	/^static av_cold int amrwb_decode_init(AVCodecContext *avctx)$/;"	f	file:
anal_funcs	libavfilter/libmpcodecs/vf_detc.c	/^} anal_funcs[] = {$/;"	v	typeref:struct:__anon29	file:
analyze	libavcodec/psymodel.h	/^    void (*analyze)(FFPsyContext *ctx, int channel, const float *coeffs, const FFPsyWindowInfo *wi);$/;"	m	struct:FFPsyModel
analyze	libavfilter/libmpcodecs/vf_detc.c	/^        int (*analyze)(struct vf_priv_s *, mp_image_t *, mp_image_t *);$/;"	m	struct:vf_priv_s	file:
analyze	libavfilter/libmpcodecs/vf_divtc.c	/^static int analyze(struct vf_priv_s *p)$/;"	f	file:
analyze	libavformat/mpegts.c	/^static int analyze(const uint8_t *buf, int size, int packet_size, int *index){$/;"	f	file:
analyze_aggressive	libavfilter/libmpcodecs/vf_detc.c	/^static int analyze_aggressive(struct vf_priv_s *p, mp_image_t *new, mp_image_t *old)$/;"	f	file:
analyze_fixed_pattern	libavfilter/libmpcodecs/vf_detc.c	/^static int analyze_fixed_pattern(struct vf_priv_s *p, mp_image_t *new, mp_image_t *old)$/;"	f	file:
analyze_plane	libavfilter/libmpcodecs/vf_phase.c	/^static enum mode analyze_plane(unsigned char *old, unsigned char *new,$/;"	f	file:
ancillary_id	libavcodec/dvbsubdec.c	/^    int ancillary_id;$/;"	m	struct:DVBSubContext	file:
and	libavcodec/wavpack.c	/^    int and, or, shift;$/;"	m	struct:WavpackFrameContext	file:
angle	libavcodec/vorbisdec.c	/^    uint8_t      *angle;$/;"	m	struct:__anon261	file:
angle	libavcodec/vorbisenc.c	/^    int *angle;$/;"	m	struct:__anon192	file:
angle_by_index	libavcodec/ulti.c	/^static const int angle_by_index[4] = { 0, 2, 6, 12};$/;"	v	file:
ann	libavformat/sapenc.c	/^    uint8_t    *ann;$/;"	m	struct:SAPState	file:
ann_fd	libavformat/sapdec.c	/^    URLContext *ann_fd;$/;"	m	struct:SAPState	file:
ann_fd	libavformat/sapenc.c	/^    URLContext *ann_fd;$/;"	m	struct:SAPState	file:
ann_size	libavformat/sapenc.c	/^    int         ann_size;$/;"	m	struct:SAPState	file:
ansi_to_cga	libavcodec/ansi.c	/^static const uint8_t ansi_to_cga[16] = {$/;"	v	file:
anti_sparseness	libavcodec/amrnbdec.c	/^static const float *anti_sparseness(AMRContext *p, AMRFixed *fixed_sparse,$/;"	f	file:
anti_sparseness	libavcodec/amrwbdec.c	/^static float *anti_sparseness(AMRWBContext *ctx,$/;"	f	file:
antialias_algo	libavcodec/avcodec.h	/^    attribute_deprecated int antialias_algo;$/;"	m	struct:AVCodecContext
ap	libavcodec/g726.c	/^    int ap;             \/**< scale factor control *\/$/;"	m	struct:G726Context	file:
ap_delay	libavcodec/aacps.h	/^    float  ap_delay[PS_MAX_AP_BANDS][PS_AP_LINKS][PS_QMF_TIME_SLOTS + PS_MAX_AP_DELAY][2];$/;"	m	struct:__anon257
apc$2	libavcodec/bfin/pixels_bfin.S	/^apc$2: R7 = BYTEOP3P(R1:0, R3:2) (HI, R) || R0 = [I3++]     || R3 = [I1++M0];$/;"	l
apc$3	libavcodec/bfin/pixels_bfin.S	/^apc$3: R6 = BYTEOP3P(R1:0, R3:2) (LO)    || [I2++M0] = R6   || R2 = [I1];$/;"	l
apc_probe	libavformat/apc.c	/^static int apc_probe(AVProbeData *p)$/;"	f	file:
apc_read_header	libavformat/apc.c	/^static int apc_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
apc_read_packet	libavformat/apc.c	/^static int apc_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
apcm_dequant_add	libavcodec/gsmdec_template.c	/^static void apcm_dequant_add(GetBitContext *gb, int16_t *dst)$/;"	f	file:
ape_apply_filters	libavcodec/apedec.c	/^static void ape_apply_filters(APEContext * ctx, int32_t * decoded0,$/;"	f	file:
ape_decode_close	libavcodec/apedec.c	/^static av_cold int ape_decode_close(AVCodecContext * avctx)$/;"	f	file:
ape_decode_frame	libavcodec/apedec.c	/^static int ape_decode_frame(AVCodecContext * avctx,$/;"	f	file:
ape_decode_init	libavcodec/apedec.c	/^static av_cold int ape_decode_init(AVCodecContext * avctx)$/;"	f	file:
ape_decode_value	libavcodec/apedec.c	/^static inline int ape_decode_value(APEContext * ctx, APERice *rice)$/;"	f	file:
ape_dumpinfo	libavformat/ape.c	/^static void ape_dumpinfo(AVFormatContext * s, APEContext * ape_ctx)$/;"	f	file:
ape_filter_fracbits	libavcodec/apedec.c	/^static const uint8_t ape_filter_fracbits[5][APE_FILTER_LEVELS] = {$/;"	v	file:
ape_filter_orders	libavcodec/apedec.c	/^static const uint16_t ape_filter_orders[5][APE_FILTER_LEVELS] = {$/;"	v	file:
ape_flush	libavcodec/apedec.c	/^static void ape_flush(AVCodecContext *avctx)$/;"	f	file:
ape_probe	libavformat/ape.c	/^static int ape_probe(AVProbeData * p)$/;"	f	file:
ape_read_close	libavformat/ape.c	/^static int ape_read_close(AVFormatContext * s)$/;"	f	file:
ape_read_header	libavformat/ape.c	/^static int ape_read_header(AVFormatContext * s, AVFormatParameters * ap)$/;"	f	file:
ape_read_packet	libavformat/ape.c	/^static int ape_read_packet(AVFormatContext * s, AVPacket * pkt)$/;"	f	file:
ape_read_seek	libavformat/ape.c	/^static int ape_read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
ape_tag_read_field	libavformat/apetag.c	/^static int ape_tag_read_field(AVFormatContext *s)$/;"	f	file:
ape_unpack_mono	libavcodec/apedec.c	/^static void ape_unpack_mono(APEContext * ctx, int count)$/;"	f	file:
ape_unpack_stereo	libavcodec/apedec.c	/^static void ape_unpack_stereo(APEContext * ctx, int count)$/;"	f	file:
api_version	libavdevice/dv1394.h	/^        unsigned int api_version;$/;"	m	struct:dv1394_init
app	libavformat/rtmpproto.c	/^    char          app[128];                   \/\/\/< application$/;"	m	struct:RTMPContext	file:
append	configure	/^append(){$/;"	f
append	libavcodec/mjpeg2jpeg_bsf.c	/^static uint8_t *append(uint8_t *buf, const uint8_t *src, int size)$/;"	f	file:
append_dht_segment	libavcodec/mjpeg2jpeg_bsf.c	/^static uint8_t *append_dht_segment(uint8_t *buf)$/;"	f	file:
applehttp_close	libavformat/applehttp.c	/^static int applehttp_close(AVFormatContext *s)$/;"	f	file:
applehttp_close	libavformat/applehttpproto.c	/^static int applehttp_close(URLContext *h)$/;"	f	file:
applehttp_open	libavformat/applehttpproto.c	/^static int applehttp_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
applehttp_probe	libavformat/applehttp.c	/^static int applehttp_probe(AVProbeData *p)$/;"	f	file:
applehttp_read	libavformat/applehttpproto.c	/^static int applehttp_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
applehttp_read_header	libavformat/applehttp.c	/^static int applehttp_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
applehttp_read_packet	libavformat/applehttp.c	/^static int applehttp_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
applehttp_read_seek	libavformat/applehttp.c	/^static int applehttp_read_seek(AVFormatContext *s, int stream_index,$/;"	f	file:
apply	configure	/^apply(){$/;"	f
apply_channel_coupling	libavcodec/aacdec.c	/^static void apply_channel_coupling(AACContext *ac, ChannelElement *cc,$/;"	f	file:
apply_channel_coupling	libavcodec/ac3enc.h	/^    void (*apply_channel_coupling)(struct AC3EncodeContext *s);$/;"	m	struct:AC3EncodeContext
apply_channel_coupling	libavcodec/ac3enc_template.c	/^void AC3_NAME(apply_channel_coupling)(AC3EncodeContext *s)$/;"	f
apply_dependent_coupling	libavcodec/aacdec.c	/^static void apply_dependent_coupling(AACContext *ac,$/;"	f	file:
apply_filter	libavcodec/apedec.c	/^static void apply_filter(APEContext * ctx, APEFilter *f,$/;"	f	file:
apply_gain_ctrl	libavcodec/qcelpdec.c	/^static void apply_gain_ctrl(float *v_out, const float *v_ref,$/;"	f	file:
apply_independent_coupling	libavcodec/aacdec.c	/^static void apply_independent_coupling(AACContext *ac,$/;"	f	file:
apply_intensity_stereo	libavcodec/aacdec.c	/^static void apply_intensity_stereo(AACContext *ac, ChannelElement *cpe, int ms_present)$/;"	f	file:
apply_ir_filter	libavcodec/amrnbdec.c	/^static void apply_ir_filter(float *out, const AMRFixed *in,$/;"	f	file:
apply_loop_filter	libavcodec/vp3.c	/^static void apply_loop_filter(Vp3DecodeContext *s, int plane, int ystart, int yend)$/;"	f	file:
apply_ltp	libavcodec/aacdec.c	/^static void apply_ltp(AACContext *ac, SingleChannelElement *sce)$/;"	f	file:
apply_lut	libavfilter/libmpcodecs/vf_eq2.c	/^void apply_lut (eq2_param_t *par, unsigned char *dst, unsigned char *src,$/;"	f	file:
apply_mask_fudge_factor	libavfilter/libmpcodecs/vf_remove_logo.c	118;"	d	file:
apply_mdct	libavcodec/ac3enc.h	/^    void (*apply_mdct)(struct AC3EncodeContext *s);$/;"	m	struct:AC3EncodeContext
apply_mdct	libavcodec/ac3enc_template.c	/^void AC3_NAME(apply_mdct)(AC3EncodeContext *s)$/;"	f
apply_mdct	libavcodec/nellymoserenc.c	/^static void apply_mdct(NellyMoserEncodeContext *s)$/;"	f	file:
apply_mid_side_stereo	libavcodec/aacdec.c	/^static void apply_mid_side_stereo(AACContext *ac, ChannelElement *cpe)$/;"	f	file:
apply_motion_generic	libavcodec/roqvideo.c	/^static inline void apply_motion_generic(RoqContext *ri, int x, int y, int deltax,$/;"	f	file:
apply_pitch_filters	libavcodec/qcelpdec.c	/^static void apply_pitch_filters(QCELPContext *q, float *cdn_vector)$/;"	f	file:
apply_prediction	libavcodec/aacdec.c	/^static void apply_prediction(AACContext *ac, SingleChannelElement *sce)$/;"	f	file:
apply_qmf	libavcodec/g722.c	/^static void apply_qmf(const int16_t *prev_samples, int *xout1, int *xout2)$/;"	f	file:
apply_rematrixing	libavcodec/ac3enc.c	/^static void apply_rematrixing(AC3EncodeContext *s)$/;"	f	file:
apply_tns	libavcodec/aacdec.c	/^static void apply_tns(float coef[1024], TemporalNoiseShaping *tns,$/;"	f	file:
apply_window	libavcodec/ac3enc.h	/^    void (*apply_window)(DSPContext *dsp, SampleType *output,$/;"	m	struct:AC3EncodeContext
apply_window	libavcodec/ac3enc_fixed.c	/^void AC3_NAME(apply_window)(DSPContext *dsp, int16_t *output,$/;"	f
apply_window	libavcodec/ppc/mpegaudiodec_altivec.c	/^static void apply_window(const float *buf, const float *win1,$/;"	f	file:
apply_window	libavcodec/ra288.c	/^static void apply_window(float *tgt, const float *m1, const float *m2, int n)$/;"	f	file:
apply_window	libavcodec/x86/mpegaudiodec_mmx.c	/^static void apply_window(const float *buf, const float *win1,$/;"	f	file:
apply_window_and_mdct	libavcodec/aacenc.c	/^static void apply_window_and_mdct(AVCodecContext *avctx, AACEncContext *s,$/;"	f	file:
apply_window_and_mdct	libavcodec/vorbisenc.c	/^static int apply_window_and_mdct(vorbis_enc_context *venc, const signed short *audio,$/;"	f	file:
apply_window_and_mdct	libavcodec/wmaenc.c	/^static void apply_window_and_mdct(AVCodecContext * avctx, const signed short * audio, int len) {$/;"	f	file:
apply_window_fixed	libavcodec/mpegaudiodsp.h	/^    void (*apply_window_fixed)(int32_t *synth_buf, int32_t *window,$/;"	m	struct:MPADSPContext
apply_window_float	libavcodec/mpegaudiodsp.h	/^    void (*apply_window_float)(float *synth_buf, float *window,$/;"	m	struct:MPADSPContext
apply_window_int16	libavcodec/dsputil.h	/^    void (*apply_window_int16)(int16_t *output, const int16_t *input,$/;"	m	struct:DSPContext
apply_window_int16_c	libavcodec/dsputil.c	/^static void apply_window_int16_c(int16_t *output, const int16_t *input,$/;"	f	file:
apply_window_mp3	libavcodec/ppc/mpegaudiodec_altivec.c	/^static void apply_window_mp3(float *in, float *win, int *unused, float *out,$/;"	f	file:
apply_window_mp3	libavcodec/x86/mpegaudiodec_mmx.c	/^static void apply_window_mp3(float *in, float *win, int *unused, float *out,$/;"	f	file:
aq_mode	libavcodec/avcodec.h	/^    int aq_mode;$/;"	m	struct:AVCodecContext
aq_strength	libavcodec/avcodec.h	/^    float aq_strength;$/;"	m	struct:AVCodecContext
area1	libavcodec/intrax8dsp.c	42;"	d	file:
area2	libavcodec/intrax8dsp.c	43;"	d	file:
area3	libavcodec/intrax8dsp.c	44;"	d	file:
area4	libavcodec/intrax8dsp.c	45;"	d	file:
area5	libavcodec/intrax8dsp.c	46;"	d	file:
area6	libavcodec/intrax8dsp.c	47;"	d	file:
area_q	libavcodec/dv.c	/^    int      area_q[4];$/;"	m	struct:EncBlockInfo	file:
arg	libavcodec/w32thread.c	/^    void *arg;$/;"	m	struct:ThreadContext	file:
argname	cmdutils.h	/^    const char *argname;$/;"	m	struct:__anon290
argname	ffmpeg/cmdutils.h	/^    const char *argname;$/;"	m	struct:__anon288
args	libavcodec/ansi.c	/^    int args[MAX_NB_ARGS];$/;"	m	struct:__anon173	file:
args	libavcodec/pthread.c	/^    void *args;$/;"	m	struct:ThreadContext	file:
args	libavcodec/roqvideoenc.c	/^    uint8_t *args;$/;"	m	struct:__anon75	file:
argsize	libavcodec/w32thread.c	/^    int argsize;$/;"	m	struct:ThreadContext	file:
argumentSpool	libavcodec/roqvideoenc.c	/^    uint8_t argumentSpool[64];$/;"	m	struct:__anon75	file:
arnr_max_frames	libavcodec/libvpxenc.c	/^    int arnr_max_frames;$/;"	m	struct:VP8EncoderContext	file:
arnr_strength	libavcodec/libvpxenc.c	/^    int arnr_strength;$/;"	m	struct:VP8EncoderContext	file:
arnr_type	libavcodec/libvpxenc.c	/^    int arnr_type;$/;"	m	struct:VP8EncoderContext	file:
array_min_int16	libavcodec/aacsbr.c	/^static int array_min_int16(const int16_t *array, int nel)$/;"	f	file:
ascii_to_wc	libavformat/movenc.c	/^static int ascii_to_wc(AVIOContext *pb, const uint8_t *b)$/;"	f	file:
asf_build_simple_index	libavformat/asfdec.c	/^static void asf_build_simple_index(AVFormatContext *s, int stream_index)$/;"	f	file:
asf_ctx	libavformat/rtsp.h	/^    AVFormatContext *asf_ctx;$/;"	m	struct:RTSPState
asf_header	libavformat/mms.h	/^    uint8_t *asf_header;                 \/\/\/< Stored ASF header.$/;"	m	struct:__anon455
asf_header_read_size	libavformat/mms.h	/^    int asf_header_read_size;$/;"	m	struct:__anon455
asf_header_size	libavformat/mms.h	/^    int asf_header_size;                 \/\/\/< Size of stored ASF header.$/;"	m	struct:__anon455
asf_packet_len	libavformat/mms.h	/^    int asf_packet_len;$/;"	m	struct:__anon455
asf_pb_pos	libavformat/rtsp.h	/^    uint64_t asf_pb_pos;$/;"	m	struct:RTSPState
asf_probe	libavformat/asfdec.c	/^static int asf_probe(AVProbeData *pd)$/;"	f	file:
asf_read_close	libavformat/asfdec.c	/^static int asf_read_close(AVFormatContext *s)$/;"	f	file:
asf_read_content_desc	libavformat/asfdec.c	/^static int asf_read_content_desc(AVFormatContext *s, int64_t size)$/;"	f	file:
asf_read_ext_content_desc	libavformat/asfdec.c	/^static int asf_read_ext_content_desc(AVFormatContext *s, int64_t size)$/;"	f	file:
asf_read_ext_stream_properties	libavformat/asfdec.c	/^static int asf_read_ext_stream_properties(AVFormatContext *s, int64_t size)$/;"	f	file:
asf_read_file_properties	libavformat/asfdec.c	/^static int asf_read_file_properties(AVFormatContext *s, int64_t size)$/;"	f	file:
asf_read_frame_header	libavformat/asfdec.c	/^static int asf_read_frame_header(AVFormatContext *s, AVIOContext *pb){$/;"	f	file:
asf_read_header	libavformat/asfdec.c	/^static int asf_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
asf_read_language_list	libavformat/asfdec.c	/^static int asf_read_language_list(AVFormatContext *s, int64_t size)$/;"	f	file:
asf_read_marker	libavformat/asfdec.c	/^static int asf_read_marker(AVFormatContext *s, int64_t size)$/;"	f	file:
asf_read_metadata	libavformat/asfdec.c	/^static int asf_read_metadata(AVFormatContext *s, int64_t size)$/;"	f	file:
asf_read_packet	libavformat/asfdec.c	/^static int asf_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
asf_read_pts	libavformat/asfdec.c	/^static int64_t asf_read_pts(AVFormatContext *s, int stream_index, int64_t *ppos, int64_t pos_limit)$/;"	f	file:
asf_read_seek	libavformat/asfdec.c	/^static int asf_read_seek(AVFormatContext *s, int stream_index, int64_t pts, int flags)$/;"	f	file:
asf_read_stream_properties	libavformat/asfdec.c	/^static int asf_read_stream_properties(AVFormatContext *s, int64_t size)$/;"	f	file:
asf_reset_header	libavformat/asfdec.c	/^static void asf_reset_header(AVFormatContext *s)$/;"	f	file:
asf_st	libavformat/asfdec.c	/^    ASFStream* asf_st;                   \/\/\/< currently decoded stream$/;"	m	struct:__anon332	file:
asf_write_header	libavformat/asfenc.c	/^static int asf_write_header(AVFormatContext *s)$/;"	f	file:
asf_write_header1	libavformat/asfenc.c	/^static int asf_write_header1(AVFormatContext *s, int64_t file_size, int64_t data_chunk_size)$/;"	f	file:
asf_write_index	libavformat/asfenc.c	/^static int asf_write_index(AVFormatContext *s, ASFIndex *index, uint16_t max, uint32_t count)$/;"	f	file:
asf_write_packet	libavformat/asfenc.c	/^static int asf_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
asf_write_stream_header	libavformat/asfenc.c	/^static int asf_write_stream_header(AVFormatContext *s)$/;"	f	file:
asf_write_trailer	libavformat/asfenc.c	/^static int asf_write_trailer(AVFormatContext *s)$/;"	f	file:
asfid2avid	libavformat/asfdec.c	/^    int asfid2avid[128];                 \/\/\/< conversion table from asf ID 2 AVStream ID$/;"	m	struct:__anon332	file:
asfrtp_free_context	libavformat/rtpdec_asf.c	/^static void asfrtp_free_context(PayloadContext *asf)$/;"	f	file:
asfrtp_new_context	libavformat/rtpdec_asf.c	/^static PayloadContext *asfrtp_new_context(void)$/;"	f	file:
asfrtp_parse_packet	libavformat/rtpdec_asf.c	/^static int asfrtp_parse_packet(AVFormatContext *s, PayloadContext *asf,$/;"	f	file:
asfrtp_parse_sdp_line	libavformat/rtpdec_asf.c	/^static int asfrtp_parse_sdp_line(AVFormatContext *s, int stream_index,$/;"	f	file:
aspect	libavfilter/libmpcodecs/vf_dsize.c	/^    float aspect;$/;"	m	struct:vf_priv_s	file:
aspect	libavfilter/vf_aspect.c	/^    AVRational aspect;$/;"	m	struct:__anon26	file:
aspect_ratio	libavcodec/cavs.h	/^    int aspect_ratio;$/;"	m	struct:__anon207
aspect_ratio	libavformat/mxfdec.c	/^    AVRational aspect_ratio;$/;"	m	struct:__anon443	file:
aspect_ratio	libavformat/mxfenc.c	/^    AVRational aspect_ratio; \/\/\/< display aspect ratio$/;"	m	struct:__anon458	file:
aspect_ratio_index	libavcodec/dirac.h	/^    uint8_t aspect_ratio_index;     \/\/\/< index into dirac_aspect_ratio[]$/;"	m	struct:__anon227
aspect_ratio_info	libavcodec/mpegvideo.h	/^    int aspect_ratio_info; \/\/FIXME remove$/;"	m	struct:MpegEncContext
aspect_scaling	libavfilter/libmpcodecs/libvo/video_out.h	/^static inline int aspect_scaling(void)$/;"	f
aspf	libavcodec/dca.c	/^    int aspf;                   \/\/\/< audio sync word insertion flag$/;"	m	struct:__anon93	file:
ass	libavcodec/ass_split.c	/^    ASS ass;$/;"	m	struct:ASSSplitContext	file:
ass	libavcodec/avcodec.h	/^    char *ass;$/;"	m	struct:AVSubtitleRect
ass_ctx	libavcodec/srtenc.c	/^    ASSSplitContext *ass_ctx;$/;"	m	struct:__anon139	file:
ass_decode_close	libavcodec/assdec.c	/^static int ass_decode_close(AVCodecContext *avctx)$/;"	f	file:
ass_decode_frame	libavcodec/assdec.c	/^static int ass_decode_frame(AVCodecContext *avctx, void *data, int *got_sub_ptr,$/;"	f	file:
ass_decode_init	libavcodec/assdec.c	/^static av_cold int ass_decode_init(AVCodecContext *avctx)$/;"	f	file:
ass_encode_frame	libavcodec/assenc.c	/^static int ass_encode_frame(AVCodecContext *avctx,$/;"	f	file:
ass_encode_init	libavcodec/assenc.c	/^static av_cold int ass_encode_init(AVCodecContext *avctx)$/;"	f	file:
ass_get_duration	libavformat/matroskaenc.c	/^static int ass_get_duration(const uint8_t *p)$/;"	f	file:
ass_sections	libavcodec/ass_split.c	/^static const ASSSection ass_sections[] = {$/;"	v	file:
ass_split	libavcodec/ass_split.c	/^static int ass_split(ASSSplitContext *ctx, const char *buf)$/;"	f	file:
ass_split_section	libavcodec/ass_split.c	/^static const char *ass_split_section(ASSSplitContext *ctx, const char *buf)$/;"	f	file:
ass_style_get	libavcodec/ass_split.c	/^ASSStyle *ass_style_get(ASSSplitContext *ctx, const char *style)$/;"	f
ast	libavformat/dv.c	/^    AVStream*         ast[4];$/;"	m	struct:DVDemuxContext	file:
ast	libavformat/dvenc.c	/^    AVStream         *ast[2];        \/* stereo audio streams *\/$/;"	m	struct:DVMuxContext	file:
asv1_decode_block	libavcodec/asv1.c	/^static inline int asv1_decode_block(ASV1Context *a, DCTELEM block[64]){$/;"	f	file:
asv1_encode_block	libavcodec/asv1.c	/^static inline void asv1_encode_block(ASV1Context *a, DCTELEM block[64]){$/;"	f	file:
asv1_get_level	libavcodec/asv1.c	/^static inline int asv1_get_level(GetBitContext *gb){$/;"	f	file:
asv1_put_level	libavcodec/asv1.c	/^static inline void asv1_put_level(PutBitContext *pb, int level){$/;"	f	file:
asv2_decode_block	libavcodec/asv1.c	/^static inline int asv2_decode_block(ASV1Context *a, DCTELEM block[64]){$/;"	f	file:
asv2_encode_block	libavcodec/asv1.c	/^static inline void asv2_encode_block(ASV1Context *a, DCTELEM block[64]){$/;"	f	file:
asv2_get_bits	libavcodec/asv1.c	/^static inline int asv2_get_bits(GetBitContext *gb, int n){$/;"	f	file:
asv2_get_level	libavcodec/asv1.c	/^static inline int asv2_get_level(GetBitContext *gb){$/;"	f	file:
asv2_level_tab	libavcodec/asv1.c	/^static const uint8_t asv2_level_tab[63][2]={$/;"	v	file:
asv2_level_vlc	libavcodec/asv1.c	/^static VLC asv2_level_vlc;$/;"	v	file:
asv2_put_bits	libavcodec/asv1.c	/^static inline void asv2_put_bits(PutBitContext *pb, int n, int v){$/;"	f	file:
asv2_put_level	libavcodec/asv1.c	/^static inline void asv2_put_level(PutBitContext *pb, int level){$/;"	f	file:
asym_quant	libavcodec/ac3enc.c	/^static inline int asym_quant(int c, int e, int qbits)$/;"	f	file:
at1_imdct	libavcodec/atrac1.c	/^static void at1_imdct(AT1Ctx *q, float *spec, float *out, int nbits,$/;"	f	file:
at1_imdct_block	libavcodec/atrac1.c	/^static int at1_imdct_block(AT1SUCtx* su, AT1Ctx *q)$/;"	f	file:
at1_parse_bsm	libavcodec/atrac1.c	/^static int at1_parse_bsm(GetBitContext* gb, int log2_block_cnt[AT1_QMF_BANDS])$/;"	f	file:
at1_subband_synthesis	libavcodec/atrac1.c	/^static void at1_subband_synthesis(AT1Ctx *q, AT1SUCtx* su, float *pOut)$/;"	f	file:
at1_unpack_dequant	libavcodec/atrac1.c	/^static int at1_unpack_dequant(GetBitContext* gb, AT1SUCtx* su,$/;"	f	file:
atag	libavformat/nsvdec.c	/^    uint32_t vtag, atag;$/;"	m	struct:__anon345	file:
ath	libavcodec/aacpsy.c	/^    float ath;           \/\/\/< absolute threshold of hearing per bands$/;"	m	struct:AacPsyCoeffs	file:
ath	libavcodec/aacpsy.c	/^static av_cold float ath(float f, float add)$/;"	f	file:
atrac1_decode_end	libavcodec/atrac1.c	/^static av_cold int atrac1_decode_end(AVCodecContext * avctx) {$/;"	f	file:
atrac1_decode_frame	libavcodec/atrac1.c	/^static int atrac1_decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
atrac1_decode_init	libavcodec/atrac1.c	/^static av_cold int atrac1_decode_init(AVCodecContext *avctx)$/;"	f	file:
atrac3_decode_close	libavcodec/atrac3.c	/^static av_cold int atrac3_decode_close(AVCodecContext *avctx)$/;"	f	file:
atrac3_decode_frame	libavcodec/atrac3.c	/^static int atrac3_decode_frame(AVCodecContext *avctx,$/;"	f	file:
atrac3_decode_init	libavcodec/atrac3.c	/^static av_cold int atrac3_decode_init(AVCodecContext *avctx)$/;"	f	file:
atrac3_vlc_offs	libavcodec/atrac3data.h	/^static const uint16_t atrac3_vlc_offs[] = {$/;"	v
atrac3version	libavcodec/atrac3.c	/^    int                 atrac3version;$/;"	m	struct:__anon131	file:
atrac_generate_tables	libavcodec/atrac.c	/^void atrac_generate_tables(void)$/;"	f
atrac_iqmf	libavcodec/atrac.c	/^void atrac_iqmf (float *inlo, float *inhi, unsigned int nIn, float *pOut, float *delayBuf, float *temp)$/;"	f
atrpos	libavformat/mmf.c	/^    int64_t atrpos, atsqpos, awapos;$/;"	m	struct:__anon319	file:
atsqpos	libavformat/mmf.c	/^    int64_t atrpos, atsqpos, awapos;$/;"	m	struct:__anon319	file:
attachments	libavformat/matroskadec.c	/^    EbmlList attachments;$/;"	m	struct:__anon371	file:
attachuid	libavformat/matroskadec.c	/^    uint64_t attachuid;$/;"	m	struct:__anon367	file:
attack_threshold	libavcodec/aacpsy.c	/^    float attack_threshold;              \/\/\/< attack threshold for this channel$/;"	m	struct:AacPsyChannel	file:
attr_names	libavformat/rtpdec_mpeg4.c	/^static const AttrNameMap attr_names[]=$/;"	v	file:
attr_orig	libavutil/log.c	/^static int16_t background, attr_orig;$/;"	v	file:
attribute_align_arg	libavutil/internal.h	50;"	d
attribute_align_arg	libavutil/internal.h	52;"	d
attribute_deprecated	libavcodec/avcodec.h	/^} AVPaletteControl attribute_deprecated;$/;"	t	typeref:struct:AVPaletteControl
attribute_deprecated	libavutil/attributes.h	85;"	d
attribute_deprecated	libavutil/attributes.h	87;"	d
attribute_l1_data_b	libavcodec/bfin/dsputil_bfin.c	/^static uint8_t vtmp_blk[256] attribute_l1_data_b;$/;"	v	file:
attribute_l1_data_b	libavcodec/bfin/dsputil_bfin.h	32;"	d
attribute_l1_data_b	libavcodec/bfin/dsputil_bfin.h	35;"	d
attribute_l1_text	libavcodec/bfin/dsputil_bfin.h	31;"	d
attribute_l1_text	libavcodec/bfin/dsputil_bfin.h	34;"	d
attributes	libavcodec/ansi.c	/^    int attributes;       \/**< attribute flags *\/$/;"	m	struct:__anon173	file:
au_headers	libavformat/rtpdec_mpeg4.c	/^    } *au_headers;$/;"	m	struct:PayloadContext	typeref:struct:PayloadContext::AUHeaders	file:
au_headers_allocated	libavformat/rtpdec_mpeg4.c	/^    int au_headers_allocated;$/;"	m	struct:PayloadContext	file:
au_headers_length_bytes	libavformat/rtpdec_mpeg4.c	/^    int au_headers_length_bytes;$/;"	m	struct:PayloadContext	file:
au_probe	libavformat/au.c	/^static int au_probe(AVProbeData *p)$/;"	f	file:
au_read_header	libavformat/au.c	/^static int au_read_header(AVFormatContext *s,$/;"	f	file:
au_read_packet	libavformat/au.c	/^static int au_read_packet(AVFormatContext *s,$/;"	f	file:
au_write_header	libavformat/au.c	/^static int au_write_header(AVFormatContext *s)$/;"	f	file:
au_write_packet	libavformat/au.c	/^static int au_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
au_write_trailer	libavformat/au.c	/^static int au_write_trailer(AVFormatContext *s)$/;"	f	file:
aud_pts	libavformat/smacker.c	/^    int64_t aud_pts[7];$/;"	m	struct:SmackerContext	file:
audio	libavfilter/avfilter.h	/^    AVFilterBufferRefAudioProps *audio; \/\/\/< audio buffer specific properties$/;"	m	struct:AVFilterBufferRef
audio	libavformat/c93.c	/^    AVStream *audio;$/;"	m	struct:__anon482	file:
audio	libavformat/matroskadec.c	/^    MatroskaTrackAudio audio;$/;"	m	struct:__anon361	file:
audio	libavformat/smacker.c	/^    uint32_t audio[7];$/;"	m	struct:SmackerContext	file:
audio_bits	libavformat/dsicin.c	/^    int audio_bits;$/;"	m	struct:CinFileHeader	file:
audio_bits	libavformat/ipmovie.c	/^    unsigned int audio_bits;$/;"	m	struct:IPMVEContext	file:
audio_bits	libavformat/segafilm.c	/^    unsigned int audio_bits;$/;"	m	struct:FilmDemuxContext	file:
audio_bits	libavformat/westwood.c	/^    int audio_bits;$/;"	m	struct:WsAudDemuxContext	file:
audio_bits	libavformat/westwood.c	/^    int audio_bits;$/;"	m	struct:WsVqaDemuxContext	file:
audio_bitstream_filters	ffmpeg.c	/^static AVBitStreamFilterContext *audio_bitstream_filters=NULL;$/;"	v	file:
audio_bitstream_filters	ffmpeg/ffmpeg.c	/^static AVBitStreamFilterContext *audio_bitstream_filters=NULL;$/;"	v	file:
audio_block_length	libavformat/yop.c	/^    int audio_block_length;$/;"	m	struct:yop_dec_context	file:
audio_bound	libavformat/mpegenc.c	/^    int audio_bound;$/;"	m	struct:__anon429	file:
audio_br	libavformat/mtv.c	/^    unsigned int audio_br;          \/\/\/< bitrate of audio channel (mp3)$/;"	m	struct:MTVDemuxContext	file:
audio_buf	ffmpeg.c	/^static uint8_t *audio_buf;$/;"	v	file:
audio_buf	ffmpeg/ffmpeg.c	/^static uint8_t *audio_buf;$/;"	v	file:
audio_buf	ffplay.c	/^    uint8_t *audio_buf;$/;"	m	struct:VideoState	file:
audio_buf	libavformat/dv.c	/^    uint8_t           audio_buf[4][8192];$/;"	m	struct:DVDemuxContext	file:
audio_buf_index	ffplay.c	/^    int audio_buf_index; \/* in bytes *\/$/;"	m	struct:VideoState	file:
audio_buf_size	ffplay.c	/^    unsigned int audio_buf_size; \/* in bytes *\/$/;"	m	struct:VideoState	file:
audio_buffer_full	libavformat/tiertexseq.c	/^    int audio_buffer_full;$/;"	m	struct:SeqDemuxContext	file:
audio_buffer_size	libavformat/dsicin.c	/^    int audio_buffer_size;$/;"	m	struct:CinDemuxContext	file:
audio_buffer_size	libavformat/matroskaenc.c	/^    unsigned int    audio_buffer_size;$/;"	m	struct:MatroskaMuxContext	file:
audio_callback_time	ffplay.c	/^static int64_t audio_callback_time;$/;"	v	file:
audio_channels	ffmpeg.c	/^static int audio_channels = 0;$/;"	v	file:
audio_channels	ffmpeg/ffmpeg.c	/^static int audio_channels = 0;$/;"	v	file:
audio_channels	libavcodec/vorbisdec.c	/^    uint8_t       audio_channels;$/;"	m	struct:vorbis_context_s	file:
audio_channels	libavformat/idroqdec.c	/^    int audio_channels;$/;"	m	struct:RoqDemuxContext	file:
audio_channels	libavformat/ipmovie.c	/^    unsigned int audio_channels;$/;"	m	struct:IPMVEContext	file:
audio_channels	libavformat/rtp.c	/^    int audio_channels;$/;"	m	struct:__anon392	file:
audio_channels	libavformat/segafilm.c	/^    unsigned int audio_channels;$/;"	m	struct:FilmDemuxContext	file:
audio_channels	libavformat/westwood.c	/^    int audio_channels;$/;"	m	struct:WsAudDemuxContext	file:
audio_channels	libavformat/westwood.c	/^    int audio_channels;$/;"	m	struct:WsVqaDemuxContext	file:
audio_chunk_offset	libavformat/ipmovie.c	/^    int64_t audio_chunk_offset;$/;"	m	struct:IPMVEContext	file:
audio_chunk_size	libavformat/ipmovie.c	/^    int audio_chunk_size;$/;"	m	struct:IPMVEContext	file:
audio_chunk_size	libavformat/tmv.c	/^    unsigned audio_chunk_size;$/;"	m	struct:TMVContext	file:
audio_chunk_size1	libavformat/idcin.c	/^    int audio_chunk_size1;$/;"	m	struct:IdcinDemuxContext	file:
audio_chunk_size2	libavformat/idcin.c	/^    int audio_chunk_size2;$/;"	m	struct:IdcinDemuxContext	file:
audio_cid	libavformat/isom.h	/^    int16_t audio_cid;    \/\/\/< stsd audio compression id$/;"	m	struct:MOVStreamContext
audio_clock	ffplay.c	/^    double audio_clock;$/;"	m	struct:VideoState	file:
audio_close	libavdevice/oss_audio.c	/^static int audio_close(AudioData *s)$/;"	f	file:
audio_codec	libavformat/avformat.h	/^    enum CodecID audio_codec; \/**< default audio codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::CodecID
audio_codec	libavformat/electronicarts.c	/^    enum CodecID audio_codec;$/;"	m	struct:EaDemuxContext	typeref:enum:EaDemuxContext::CodecID	file:
audio_codec_id	libavformat/avformat.h	/^    enum CodecID audio_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::CodecID
audio_codec_name	ffmpeg.c	/^static char  *audio_codec_name = NULL;$/;"	v	file:
audio_codec_name	ffmpeg/ffmpeg.c	/^static char  *audio_codec_name = NULL;$/;"	v	file:
audio_codec_tag	ffmpeg.c	/^static unsigned int audio_codec_tag = 0;$/;"	v	file:
audio_codec_tag	ffmpeg/ffmpeg.c	/^static unsigned int audio_codec_tag = 0;$/;"	v	file:
audio_data	libavformat/dvenc.c	/^    AVFifoBuffer     *audio_data[2]; \/* FIFO for storing excessive amounts of PCM *\/$/;"	m	struct:DVMuxContext	file:
audio_data_size	libavformat/mvi.c	/^    uint32_t audio_data_size;$/;"	m	struct:MviDemuxContext	file:
audio_decode_example	doc/examples/encoding-example.c	/^static void audio_decode_example(const char *outfilename, const char *filename)$/;"	f	file:
audio_decode_frame	ffplay.c	/^static int audio_decode_frame(VideoState *is, double *pts_ptr)$/;"	f	file:
audio_diff_avg_coef	ffplay.c	/^    double audio_diff_avg_coef;$/;"	m	struct:VideoState	file:
audio_diff_avg_count	ffplay.c	/^    int audio_diff_avg_count;$/;"	m	struct:VideoState	file:
audio_diff_cum	ffplay.c	/^    double audio_diff_cum; \/* used for AV difference average computation *\/$/;"	m	struct:VideoState	file:
audio_diff_threshold	ffplay.c	/^    double audio_diff_threshold;$/;"	m	struct:VideoState	file:
audio_disable	ffmpeg.c	/^static int audio_disable = 0;$/;"	v	file:
audio_disable	ffmpeg/ffmpeg.c	/^static int audio_disable = 0;$/;"	v	file:
audio_disable	ffplay.c	/^static int audio_disable;$/;"	v	file:
audio_drift_threshold	ffmpeg.c	/^static float audio_drift_threshold= 0.1;$/;"	v	file:
audio_drift_threshold	ffmpeg/ffmpeg.c	/^static float audio_drift_threshold= 0.1;$/;"	v	file:
audio_enc	libavformat/swf.h	/^    AVCodecContext *audio_enc, *video_enc;$/;"	m	struct:__anon336
audio_encode_example	doc/examples/encoding-example.c	/^static void audio_encode_example(const char *filename)$/;"	f	file:
audio_fifo	libavformat/swf.h	/^    AVFifoBuffer *audio_fifo;$/;"	m	struct:__anon336
audio_frame	libavformat/bfi.c	/^    int audio_frame;$/;"	m	struct:BFIContext	file:
audio_frame_count	libavformat/idroqdec.c	/^    unsigned int audio_frame_count;$/;"	m	struct:RoqDemuxContext	file:
audio_frame_count	libavformat/iff.c	/^    uint32_t  audio_frame_count;$/;"	m	struct:__anon395	file:
audio_frame_count	libavformat/ipmovie.c	/^    unsigned int audio_frame_count;$/;"	m	struct:IPMVEContext	file:
audio_frame_counter	libavformat/electronicarts.c	/^    int audio_frame_counter;$/;"	m	struct:EaDemuxContext	file:
audio_frame_counter	libavformat/westwood.c	/^    int64_t audio_frame_counter;$/;"	m	struct:WsAudDemuxContext	file:
audio_frame_counter	libavformat/westwood.c	/^    int64_t audio_frame_counter;$/;"	m	struct:WsVqaDemuxContext	file:
audio_frame_counter	libavformat/xa.c	/^    uint32_t audio_frame_counter;$/;"	m	struct:MaxisXADemuxContext	file:
audio_frame_size	libavformat/dsicin.c	/^    int audio_frame_size;$/;"	m	struct:CinFileHeader	file:
audio_frame_size	libavformat/dsicin.c	/^    int audio_frame_size;$/;"	m	struct:CinFrameHeader	file:
audio_frame_size	libavformat/mvi.c	/^    uint64_t audio_frame_size;$/;"	m	struct:MviDemuxContext	file:
audio_frame_type	libavformat/dsicin.c	/^    int audio_frame_type;$/;"	m	struct:CinFrameHeader	file:
audio_framesize	libavformat/rmdec.c	/^    int audio_framesize; \/\/\/ Audio frame size from container$/;"	m	struct:RMStream	file:
audio_frequency	libavformat/dsicin.c	/^    int audio_frequency;$/;"	m	struct:CinFileHeader	file:
audio_hw_buf_size	ffplay.c	/^    int audio_hw_buf_size;$/;"	m	struct:VideoState	file:
audio_identifier	libavformat/mtv.c	/^    unsigned int audio_identifier;  \/\/\/< 'MP3' on all files I have seen$/;"	m	struct:MTVDemuxContext	file:
audio_input_frame_size	doc/examples/muxing-example.c	/^int audio_input_frame_size;$/;"	v
audio_language	ffmpeg.c	/^static char *audio_language = NULL;$/;"	v	file:
audio_language	ffmpeg/ffmpeg.c	/^static char *audio_language = NULL;$/;"	v	file:
audio_min_samples	libavcodec/dvdata.h	/^    int              audio_min_samples[3];  \/* min amount of audio samples *\/$/;"	m	struct:DVprofile
audio_mux_version_A	libavcodec/aacdec.c	/^    int             audio_mux_version_A; \/\/\/< LATM syntax version$/;"	m	struct:LATMContext	file:
audio_open	libavdevice/oss_audio.c	/^static int audio_open(AVFormatContext *s1, int is_output, const char *audio_device)$/;"	f	file:
audio_options	libavformat/rawdec.c	/^static const AVOption audio_options[] = {$/;"	v	file:
audio_opts	cmdutils.c	/^AVDictionary *format_opts, *video_opts, *audio_opts, *sub_opts;$/;"	v
audio_opts	ffmpeg/cmdutils.c	/^AVDictionary *format_opts, *video_opts, *audio_opts, *sub_opts;$/;"	v
audio_out	ffmpeg.c	/^static uint8_t *audio_out;$/;"	v	file:
audio_out	ffmpeg/ffmpeg.c	/^static uint8_t *audio_out;$/;"	v	file:
audio_outbuf	doc/examples/muxing-example.c	/^uint8_t *audio_outbuf;$/;"	v
audio_outbuf_size	doc/examples/muxing-example.c	/^int audio_outbuf_size;$/;"	v
audio_packets	libavformat/pmpdec.c	/^    int audio_packets;$/;"	m	struct:__anon331	file:
audio_pkt	ffplay.c	/^    AVPacket audio_pkt;$/;"	m	struct:VideoState	file:
audio_pkt	libavformat/dv.c	/^    AVPacket          audio_pkt[4];$/;"	m	struct:DVDemuxContext	file:
audio_pkt_cnt	libavformat/rdt.c	/^    int audio_pkt_cnt; \/**< remaining audio packets in rmdec *\/$/;"	m	struct:PayloadContext	file:
audio_pkt_cnt	libavformat/rmdec.c	/^    int audio_pkt_cnt; \/\/\/< Output packet counter$/;"	m	struct:__anon436	file:
audio_pkt_temp	ffplay.c	/^    AVPacket audio_pkt_temp;$/;"	m	struct:VideoState	file:
audio_present	libavformat/idcin.c	/^    int audio_present;$/;"	m	struct:IdcinDemuxContext	file:
audio_production_info	libavcodec/ac3.h	/^    int audio_production_info;$/;"	m	struct:AC3EncOptions
audio_pts	libavformat/4xm.c	/^    int64_t audio_pts;$/;"	m	struct:AudioTrack	file:
audio_pts	libavformat/bink.c	/^    int64_t audio_pts[BINK_MAX_AUDIO_TRACKS];$/;"	m	struct:__anon403	file:
audio_pts	libavformat/eacdata.c	/^  unsigned int audio_pts;$/;"	m	struct:__anon450	file:
audio_pts	libavformat/mm.c	/^  unsigned int audio_pts, video_pts;$/;"	m	struct:__anon421	file:
audio_qscale	ffmpeg.c	/^static float audio_qscale = QSCALE_NONE;$/;"	v	file:
audio_qscale	ffmpeg/ffmpeg.c	/^static float audio_qscale = QSCALE_NONE;$/;"	v	file:
audio_read_close	libavdevice/jack_audio.c	/^static int audio_read_close(AVFormatContext *context)$/;"	f	file:
audio_read_close	libavdevice/oss_audio.c	/^static int audio_read_close(AVFormatContext *s1)$/;"	f	file:
audio_read_close	libavdevice/sndio_dec.c	/^static av_cold int audio_read_close(AVFormatContext *s1)$/;"	f	file:
audio_read_header	libavdevice/alsa-audio-dec.c	/^static av_cold int audio_read_header(AVFormatContext *s1,$/;"	f	file:
audio_read_header	libavdevice/jack_audio.c	/^static int audio_read_header(AVFormatContext *context, AVFormatParameters *params)$/;"	f	file:
audio_read_header	libavdevice/oss_audio.c	/^static int audio_read_header(AVFormatContext *s1, AVFormatParameters *ap)$/;"	f	file:
audio_read_header	libavdevice/sndio_dec.c	/^static av_cold int audio_read_header(AVFormatContext *s1,$/;"	f	file:
audio_read_packet	libavdevice/alsa-audio-dec.c	/^static int audio_read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
audio_read_packet	libavdevice/jack_audio.c	/^static int audio_read_packet(AVFormatContext *context, AVPacket *pkt)$/;"	f	file:
audio_read_packet	libavdevice/oss_audio.c	/^static int audio_read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
audio_read_packet	libavdevice/sndio_dec.c	/^static int audio_read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
audio_resample	ffmpeg.c	/^    int audio_resample;$/;"	m	struct:AVOutputStream	file:
audio_resample	ffmpeg/ffmpeg.c	/^    int audio_resample;$/;"	m	struct:AVOutputStream	file:
audio_resample	libavcodec/resample.c	/^int audio_resample(ReSampleContext *s, short *output, short *input, int nb_samples)$/;"	f
audio_resample_close	libavcodec/resample.c	/^void audio_resample_close(ReSampleContext *s)$/;"	f
audio_sample_counter	libavformat/sierravmd.c	/^    int64_t audio_sample_counter;$/;"	m	struct:VmdDemuxContext	file:
audio_sample_fmt	ffmpeg.c	/^static enum AVSampleFormat audio_sample_fmt = AV_SAMPLE_FMT_NONE;$/;"	v	typeref:enum:AVSampleFormat	file:
audio_sample_fmt	ffmpeg/ffmpeg.c	/^static enum AVSampleFormat audio_sample_fmt = AV_SAMPLE_FMT_NONE;$/;"	v	typeref:enum:AVSampleFormat	file:
audio_sample_rate	ffmpeg.c	/^static int audio_sample_rate = 0;$/;"	v	file:
audio_sample_rate	ffmpeg/ffmpeg.c	/^static int audio_sample_rate = 0;$/;"	v	file:
audio_sample_rate	libavformat/ipmovie.c	/^    unsigned int audio_sample_rate;$/;"	m	struct:IPMVEContext	file:
audio_samplerate	libavcodec/vorbisdec.c	/^    uint32_t      audio_samplerate;$/;"	m	struct:vorbis_context_s	file:
audio_samplerate	libavformat/segafilm.c	/^    unsigned int audio_samplerate;$/;"	m	struct:FilmDemuxContext	file:
audio_samplerate	libavformat/westwood.c	/^    int audio_samplerate;$/;"	m	struct:WsAudDemuxContext	file:
audio_samplerate	libavformat/westwood.c	/^    int audio_samplerate;$/;"	m	struct:WsVqaDemuxContext	file:
audio_samples_dist	libavcodec/dvdata.h	/^    int              audio_samples_dist[5]; \/* how many samples are supposed to be *\/$/;"	m	struct:DVprofile
audio_saved	libavdevice/v4l.c	/^    struct video_audio audio_saved;$/;"	m	struct:__anon316	typeref:struct:__anon316::video_audio	file:
audio_service_type	libavcodec/avcodec.h	/^    enum AVAudioServiceType audio_service_type;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVAudioServiceType
audio_shuffle	libavcodec/dvdata.h	/^    const uint8_t  (*audio_shuffle)[9];     \/* PCM shuffling table *\/$/;"	m	struct:DVprofile
audio_size	ffmpeg.c	/^static int64_t audio_size = 0;$/;"	v	file:
audio_size	ffmpeg/ffmpeg.c	/^static int64_t audio_size = 0;$/;"	v	file:
audio_size	libavformat/jvdec.c	/^    int audio_size;    \/** audio packet size (bytes) *\/$/;"	m	struct:__anon425	file:
audio_size_counter	libavformat/mvi.c	/^    uint64_t audio_size_counter;$/;"	m	struct:MviDemuxContext	file:
audio_size_left	libavformat/mvi.c	/^    int audio_size_left;$/;"	m	struct:MviDemuxContext	file:
audio_src_fmt	ffplay.c	/^    enum AVSampleFormat audio_src_fmt;$/;"	m	struct:VideoState	typeref:enum:VideoState::AVSampleFormat	file:
audio_st	ffplay.c	/^    AVStream *audio_st;$/;"	m	struct:VideoState	file:
audio_stereo	libavformat/dsicin.c	/^    int audio_stereo;$/;"	m	struct:CinFileHeader	file:
audio_stream	ffplay.c	/^    int audio_stream;$/;"	m	struct:VideoState	file:
audio_stream	libavformat/rmenc.c	/^    StreamInfo *audio_stream, *video_stream;$/;"	m	struct:__anon383	file:
audio_stream_copy	ffmpeg.c	/^static int audio_stream_copy = 0;$/;"	v	file:
audio_stream_copy	ffmpeg/ffmpeg.c	/^static int audio_stream_copy = 0;$/;"	v	file:
audio_stream_index	libavformat/dsicin.c	/^    int audio_stream_index;$/;"	m	struct:CinDemuxContext	file:
audio_stream_index	libavformat/electronicarts.c	/^    int audio_stream_index;$/;"	m	struct:EaDemuxContext	file:
audio_stream_index	libavformat/flic.c	/^    int audio_stream_index;$/;"	m	struct:FlicDemuxContext	file:
audio_stream_index	libavformat/idcin.c	/^    int audio_stream_index;$/;"	m	struct:IdcinDemuxContext	file:
audio_stream_index	libavformat/idroqdec.c	/^    int audio_stream_index;$/;"	m	struct:RoqDemuxContext	file:
audio_stream_index	libavformat/ipmovie.c	/^    int audio_stream_index;$/;"	m	struct:IPMVEContext	file:
audio_stream_index	libavformat/psxstr.c	/^    int audio_stream_index;$/;"	m	struct:StrChannel	file:
audio_stream_index	libavformat/segafilm.c	/^    int audio_stream_index;$/;"	m	struct:FilmDemuxContext	file:
audio_stream_index	libavformat/sierravmd.c	/^    int audio_stream_index;$/;"	m	struct:VmdDemuxContext	file:
audio_stream_index	libavformat/thp.c	/^    int              audio_stream_index;$/;"	m	struct:ThpDemuxContext	file:
audio_stream_index	libavformat/tiertexseq.c	/^    int audio_stream_index;$/;"	m	struct:SeqDemuxContext	file:
audio_stream_index	libavformat/wc3movie.c	/^    int audio_stream_index;$/;"	m	struct:Wc3DemuxContext	file:
audio_stream_index	libavformat/westwood.c	/^    int audio_stream_index;$/;"	m	struct:WsAudDemuxContext	file:
audio_stream_index	libavformat/westwood.c	/^    int audio_stream_index;$/;"	m	struct:WsVqaDemuxContext	file:
audio_stream_num	libavformat/rmdec.c	/^    int audio_stream_num; \/\/\/< Stream number for audio packets$/;"	m	struct:__anon436	file:
audio_stream_pts	libavformat/dsicin.c	/^    int64_t audio_stream_pts;$/;"	m	struct:CinDemuxContext	file:
audio_stride	libavcodec/dvdata.h	/^    int              audio_stride;          \/* size of audio_shuffle table *\/$/;"	m	struct:DVprofile
audio_strm_length	libavformat/avienc.c	/^    int audio_strm_length;$/;"	m	struct:__anon344	file:
audio_sync_method	ffmpeg.c	/^static int audio_sync_method= 0;$/;"	v	file:
audio_sync_method	ffmpeg/ffmpeg.c	/^static int audio_sync_method= 0;$/;"	v	file:
audio_tracks	libavformat/gxfenc.c	/^    uint16_t audio_tracks;$/;"	m	struct:GXFContext	file:
audio_type	libavformat/ipmovie.c	/^    enum CodecID audio_type;$/;"	m	struct:IPMVEContext	typeref:enum:IPMVEContext::CodecID	file:
audio_type	libavformat/segafilm.c	/^    enum CodecID audio_type;$/;"	m	struct:FilmDemuxContext	typeref:enum:FilmDemuxContext::CodecID	file:
audio_type	libavformat/westwood.c	/^    enum CodecID audio_type;$/;"	m	struct:WsAudDemuxContext	typeref:enum:WsAudDemuxContext::CodecID	file:
audio_vbr	libavformat/movenc.h	/^    int         audio_vbr;$/;"	m	struct:MOVIndex
audio_volume	ffmpeg.c	/^static int audio_volume = 256;$/;"	v	file:
audio_volume	ffmpeg/ffmpeg.c	/^static int audio_volume = 256;$/;"	v	file:
audio_write_get_buf_size	ffplay.c	/^static int audio_write_get_buf_size(VideoState *is)$/;"	f	file:
audio_write_header	libavdevice/alsa-audio-enc.c	/^static av_cold int audio_write_header(AVFormatContext *s1)$/;"	f	file:
audio_write_header	libavdevice/oss_audio.c	/^static int audio_write_header(AVFormatContext *s1)$/;"	f	file:
audio_write_header	libavdevice/sndio_enc.c	/^static av_cold int audio_write_header(AVFormatContext *s1)$/;"	f	file:
audio_write_packet	libavdevice/alsa-audio-enc.c	/^static int audio_write_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
audio_write_packet	libavdevice/oss_audio.c	/^static int audio_write_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
audio_write_packet	libavdevice/sndio_enc.c	/^static int audio_write_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
audio_write_trailer	libavdevice/oss_audio.c	/^static int audio_write_trailer(AVFormatContext *s1)$/;"	f	file:
audio_write_trailer	libavdevice/sndio_enc.c	/^static int audio_write_trailer(AVFormatContext *s1)$/;"	f	file:
audiodatalength	libavformat/ape.c	/^    uint32_t audiodatalength;$/;"	m	struct:__anon335	file:
audiodatalength_high	libavformat/ape.c	/^    uint32_t audiodatalength_high;$/;"	m	struct:__anon335	file:
audioq	ffplay.c	/^    PacketQueue audioq;$/;"	m	struct:VideoState	file:
audioresample_context_class	libavcodec/resample.c	/^static const AVClass audioresample_context_class = {$/;"	v	file:
audiosize	libavformat/thp.c	/^    int              audiosize;$/;"	m	struct:ThpDemuxContext	file:
audiotimestamp	libavformat/rmdec.c	/^    int64_t audiotimestamp; \/\/\/< Audio packet timestamp$/;"	m	struct:RMStream	file:
aura_decode_end	libavcodec/aura.c	/^static av_cold int aura_decode_end(AVCodecContext *avctx)$/;"	f	file:
aura_decode_frame	libavcodec/aura.c	/^static int aura_decode_frame(AVCodecContext *avctx,$/;"	f	file:
aura_decode_init	libavcodec/aura.c	/^static av_cold int aura_decode_init(AVCodecContext *avctx)$/;"	f	file:
auth	libavformat/rtsp.h	/^    char auth[128];$/;"	m	struct:RTSPState
auth_state	libavformat/http.c	/^    HTTPAuthState auth_state;$/;"	m	struct:__anon462	file:
auth_state	libavformat/rtsp.h	/^    HTTPAuthState auth_state;$/;"	m	struct:RTSPState
auth_type	libavformat/httpauth.h	/^    HTTPAuthType auth_type;$/;"	m	struct:__anon405
author	ffserver.c	/^    char author[512];$/;"	m	struct:FFStream	file:
author	libavfilter/libmpcodecs/libvo/video_out.h	/^    const char *author;$/;"	m	struct:vo_info_s
author	libavfilter/libmpcodecs/mpc_info.h	/^        const char *author;$/;"	m	struct:mp_codec_info_s
author	libavfilter/libmpcodecs/vf.h	/^    const char *author;$/;"	m	struct:vf_info_s
auto_correlation	libavcodec/amrwbdec.c	/^static float auto_correlation(float *diff_isf, float mean, int lag)$/;"	f	file:
auto_guess	libavformat/mpegts.c	/^    int auto_guess;$/;"	m	struct:MpegTSContext	file:
autocorrelate	libavcodec/aacsbr.c	/^static void autocorrelate(const float x[40][2], float phi[3][2][2], int lag)$/;"	f	file:
autoexit	ffplay.c	/^static int autoexit;$/;"	v	file:
autostart	libavfilter/libmpcodecs/vf_fixpts.c	/^    int autostart;$/;"	m	struct:vf_priv_s	file:
autostep	libavfilter/libmpcodecs/vf_fixpts.c	/^    int autostep;$/;"	m	struct:vf_priv_s	file:
aux_data	libavcodec/dca.c	/^    int aux_data;               \/\/\/< auxiliary data flag$/;"	m	struct:__anon93	file:
av_abort	libavutil/internal.h	110;"	d
av_add_i	libavutil/integer.c	/^AVInteger av_add_i(AVInteger a, AVInteger b){$/;"	f
av_add_index_entry	libavformat/utils.c	/^int av_add_index_entry(AVStream *st,$/;"	f
av_add_q	libavutil/rational.c	/^AVRational av_add_q(AVRational b, AVRational c){$/;"	f
av_add_sf	libavutil/softfloat.h	/^static inline av_const SoftFloat av_add_sf(SoftFloat a, SoftFloat b){$/;"	f
av_adler32_update	libavutil/adler32.c	/^unsigned long av_adler32_update(unsigned long adler, const uint8_t *buf, unsigned int len)$/;"	f
av_aes_block	libavutil/aes.c	/^} av_aes_block;$/;"	t	typeref:union:__anon296	file:
av_aes_crypt	libavutil/aes.c	/^void av_aes_crypt(AVAES *a, uint8_t *dst_, const uint8_t *src_, int count, uint8_t *iv_, int decrypt){$/;"	f
av_aes_init	libavutil/aes.c	/^int av_aes_init(AVAES *a, const uint8_t *key, int key_bits, int decrypt) {$/;"	f
av_aes_size	libavutil/aes.c	/^const int av_aes_size= sizeof(AVAES);$/;"	v
av_alias	libavutil/attributes.h	114;"	d
av_alias	libavutil/attributes.h	116;"	d
av_alias	libavutil/intreadwrite.h	/^union unaligned_16 { uint16_t l; } __attribute__((packed)) av_alias;$/;"	v	typeref:union:unaligned_16
av_alias	libavutil/intreadwrite.h	/^union unaligned_32 { uint32_t l; } __attribute__((packed)) av_alias;$/;"	v	typeref:union:unaligned_32
av_alias	libavutil/intreadwrite.h	/^union unaligned_64 { uint64_t l; } __attribute__((packed)) av_alias;$/;"	v	typeref:union:unaligned_64
av_alias16	libavutil/intreadwrite.h	/^} av_alias av_alias16;$/;"	t	typeref:union:__anon300
av_alias32	libavutil/intreadwrite.h	/^} av_alias av_alias32;$/;"	t	typeref:union:__anon299
av_alias64	libavutil/intreadwrite.h	/^} av_alias av_alias64;$/;"	t	typeref:union:__anon298
av_alloc_put_byte	libavformat/aviobuf.c	/^AVIOContext *av_alloc_put_byte($/;"	f
av_alloc_size	libavutil/mem.h	61;"	d
av_alloc_size	libavutil/mem.h	63;"	d
av_always_inline	libavutil/attributes.h	37;"	d
av_always_inline	libavutil/attributes.h	39;"	d
av_append_packet	libavformat/utils.c	/^int av_append_packet(AVIOContext *s, AVPacket *pkt, int size)$/;"	f
av_assert0	libavutil/avassert.h	37;"	d
av_assert1	libavutil/avassert.h	51;"	d
av_assert1	libavutil/avassert.h	53;"	d
av_assert2	libavutil/avassert.h	61;"	d
av_assert2	libavutil/avassert.h	63;"	d
av_audio_convert	libavcodec/audioconvert.c	/^int av_audio_convert(AVAudioConvert *ctx,$/;"	f
av_audio_convert_alloc	libavcodec/audioconvert.c	/^AVAudioConvert *av_audio_convert_alloc(enum AVSampleFormat out_fmt, int out_channels,$/;"	f
av_audio_convert_free	libavcodec/audioconvert.c	/^void av_audio_convert_free(AVAudioConvert *ctx)$/;"	f
av_audio_resample_init	libavcodec/resample.c	/^ReSampleContext *av_audio_resample_init(int output_channels, int input_channels,$/;"	f
av_base64_decode	libavutil/base64.c	/^int av_base64_decode(uint8_t *out, const char *in, int out_size)$/;"	f
av_base64_encode	libavutil/base64.c	/^char *av_base64_encode(char *out, int out_size, const uint8_t *in, int in_size)$/;"	f
av_be2ne16	libavutil/bswap.h	107;"	d
av_be2ne16	libavutil/bswap.h	98;"	d
av_be2ne32	libavutil/bswap.h	108;"	d
av_be2ne32	libavutil/bswap.h	99;"	d
av_be2ne64	libavutil/bswap.h	100;"	d
av_be2ne64	libavutil/bswap.h	109;"	d
av_bitstream_filter_close	libavcodec/bitstream_filter.c	/^void av_bitstream_filter_close(AVBitStreamFilterContext *bsfc){$/;"	f
av_bitstream_filter_filter	libavcodec/bitstream_filter.c	/^int av_bitstream_filter_filter(AVBitStreamFilterContext *bsfc,$/;"	f
av_bitstream_filter_init	libavcodec/bitstream_filter.c	/^AVBitStreamFilterContext *av_bitstream_filter_init(const char *name){$/;"	f
av_bitstream_filter_next	libavcodec/bitstream_filter.c	/^AVBitStreamFilter *av_bitstream_filter_next(AVBitStreamFilter *f){$/;"	f
av_bmg_get	libavutil/lfg.c	/^void av_bmg_get(AVLFG *lfg, double out[2])$/;"	f
av_bswap16	libavutil/arm/bswap.h	/^static av_always_inline av_const unsigned av_bswap16(unsigned x)$/;"	f
av_bswap16	libavutil/arm/bswap.h	29;"	d
av_bswap16	libavutil/arm/bswap.h	46;"	d
av_bswap16	libavutil/avr32/bswap.h	/^static av_always_inline av_const uint16_t av_bswap16(uint16_t x)$/;"	f
av_bswap16	libavutil/avr32/bswap.h	28;"	d
av_bswap16	libavutil/bswap.h	/^static av_always_inline av_const uint16_t av_bswap16(uint16_t x)$/;"	f
av_bswap16	libavutil/sh4/bswap.h	/^static av_always_inline av_const uint16_t av_bswap16(uint16_t x)$/;"	f
av_bswap16	libavutil/sh4/bswap.h	31;"	d
av_bswap16	libavutil/x86/bswap.h	/^static av_always_inline av_const unsigned av_bswap16(unsigned x)$/;"	f
av_bswap16	libavutil/x86/bswap.h	31;"	d
av_bswap32	libavutil/arm/bswap.h	/^static av_always_inline av_const uint32_t av_bswap32(uint32_t x)$/;"	f
av_bswap32	libavutil/arm/bswap.h	36;"	d
av_bswap32	libavutil/arm/bswap.h	54;"	d
av_bswap32	libavutil/avr32/bswap.h	/^static av_always_inline av_const uint32_t av_bswap32(uint32_t x)$/;"	f
av_bswap32	libavutil/avr32/bswap.h	35;"	d
av_bswap32	libavutil/bfin/bswap.h	/^static av_always_inline av_const uint32_t av_bswap32(uint32_t x)$/;"	f
av_bswap32	libavutil/bfin/bswap.h	33;"	d
av_bswap32	libavutil/bswap.h	/^static av_always_inline av_const uint32_t av_bswap32(uint32_t x)$/;"	f
av_bswap32	libavutil/sh4/bswap.h	/^static av_always_inline av_const uint32_t av_bswap32(uint32_t x)$/;"	f
av_bswap32	libavutil/sh4/bswap.h	38;"	d
av_bswap32	libavutil/x86/bswap.h	/^static av_always_inline av_const uint32_t av_bswap32(uint32_t x)$/;"	f
av_bswap32	libavutil/x86/bswap.h	38;"	d
av_bswap64	libavutil/bswap.h	/^static inline uint64_t av_const av_bswap64(uint64_t x)$/;"	f
av_bswap64	libavutil/x86/bswap.h	/^static inline uint64_t av_const av_bswap64(uint64_t x)$/;"	f
av_bswap64	libavutil/x86/bswap.h	53;"	d
av_builtin_constant_p	libavutil/attributes.h	129;"	d
av_builtin_constant_p	libavutil/attributes.h	131;"	d
av_calloc	libavutil/mem.c	/^void *av_calloc(size_t nmemb, size_t size)$/;"	f
av_ceil_log2	libavutil/common.h	359;"	d
av_ceil_log2_c	libavutil/common.h	/^static av_always_inline av_const int av_ceil_log2_c(int x)$/;"	f
av_class	libavcodec/aacenc.h	/^    AVClass *av_class;$/;"	m	struct:AACEncContext
av_class	libavcodec/ac3enc.h	/^    AVClass *av_class;                      \/\/\/< AVClass used for AVOption$/;"	m	struct:AC3EncodeContext
av_class	libavcodec/ac3enc_combined.c	/^    AVClass *av_class;                      \/\/\/< AVClass used for AVOption$/;"	m	struct:CombineContext	file:
av_class	libavcodec/avcodec.h	/^    const AVClass *av_class;$/;"	m	struct:AVCodecContext
av_class	libavcodec/crystalhd.c	/^    AVClass *av_class;$/;"	m	struct:__anon268	file:
av_class	libavcodec/libopencore-amr.c	/^    AVClass *av_class;$/;"	m	struct:AMRContext	file:
av_class	libavcodec/libvo-amrwbenc.c	/^    AVClass *av_class;$/;"	m	struct:AMRWBContext	file:
av_class	libavcodec/libvorbis.c	/^    AVClass *av_class;$/;"	m	struct:OggVorbisContext	file:
av_class	libavcodec/libvpxenc.c	/^    AVClass *av_class;$/;"	m	struct:VP8EncoderContext	file:
av_class	libavcodec/rawdec.c	/^    AVClass *av_class;$/;"	m	struct:RawVideoContext	file:
av_class	libavcodec/resample2.c	/^    const AVClass *av_class;$/;"	m	struct:AVResampleContext	file:
av_class	libavfilter/avfilter.h	/^    const AVClass *av_class;              \/\/\/< needed for av_log()$/;"	m	struct:AVFilterContext
av_class	libavformat/avformat.h	/^    const AVClass *av_class; \/**< Set by avformat_alloc_context. *\/$/;"	m	struct:AVFormatContext
av_class	libavformat/avio.h	/^    const AVClass *av_class; \/\/\/< information for av_log(). Set by url_open().$/;"	m	struct:URLContext
av_class	libavformat/movenc.h	/^    const AVClass *av_class;$/;"	m	struct:MOVMuxContext
av_class	libavformat/mpegtsenc.c	/^    const AVClass *av_class;$/;"	m	struct:MpegTSWrite	file:
av_class	libavformat/rtpenc.h	/^    const AVClass *av_class;$/;"	m	struct:RTPMuxContext
av_class	libavformat/spdifenc.c	/^    const AVClass *av_class;$/;"	m	struct:IEC61937Context	file:
av_class	libavformat/url.h	/^    const AVClass *av_class;    \/**< information for av_log(). Set by url_open(). *\/$/;"	m	struct:URLContext
av_class	libpostproc/postprocess_internal.h	/^    const AVClass *av_class;$/;"	m	struct:PPContext
av_class	libswscale/swscale_internal.h	/^    const AVClass *av_class;$/;"	m	struct:SwsContext
av_clip	libavutil/common.h	362;"	d
av_clip_c	libavutil/common.h	/^static av_always_inline av_const int av_clip_c(int a, int amin, int amax)$/;"	f
av_clip_int16	libavutil/arm/intmath.h	69;"	d
av_clip_int16	libavutil/common.h	374;"	d
av_clip_int16_arm	libavutil/arm/intmath.h	/^static av_always_inline av_const int16_t av_clip_int16_arm(int a)$/;"	f
av_clip_int16_c	libavutil/common.h	/^static av_always_inline av_const int16_t av_clip_int16_c(int a)$/;"	f
av_clip_int8	libavutil/arm/intmath.h	53;"	d
av_clip_int8	libavutil/common.h	368;"	d
av_clip_int8_arm	libavutil/arm/intmath.h	/^static av_always_inline av_const uint8_t av_clip_int8_arm(int a)$/;"	f
av_clip_int8_c	libavutil/common.h	/^static av_always_inline av_const int8_t av_clip_int8_c(int a)$/;"	f
av_clip_pixel	libavcodec/high_bit_depth.h	42;"	d
av_clip_pixel	libavcodec/high_bit_depth.h	92;"	d
av_clip_uint16	libavutil/arm/intmath.h	61;"	d
av_clip_uint16	libavutil/common.h	371;"	d
av_clip_uint16_arm	libavutil/arm/intmath.h	/^static av_always_inline av_const uint16_t av_clip_uint16_arm(int a)$/;"	f
av_clip_uint16_c	libavutil/common.h	/^static av_always_inline av_const uint16_t av_clip_uint16_c(int a)$/;"	f
av_clip_uint8	libavutil/arm/intmath.h	45;"	d
av_clip_uint8	libavutil/common.h	365;"	d
av_clip_uint8_arm	libavutil/arm/intmath.h	/^static av_always_inline av_const uint8_t av_clip_uint8_arm(int a)$/;"	f
av_clip_uint8_c	libavutil/common.h	/^static av_always_inline av_const uint8_t av_clip_uint8_c(int a)$/;"	f
av_clip_uintp2	libavutil/arm/intmath.h	77;"	d
av_clip_uintp2	libavutil/common.h	380;"	d
av_clip_uintp2_arm	libavutil/arm/intmath.h	/^static av_always_inline av_const unsigned av_clip_uintp2_arm(int a, int p)$/;"	f
av_clip_uintp2_c	libavutil/common.h	/^static av_always_inline av_const unsigned av_clip_uintp2_c(int a, int p)$/;"	f
av_clipf	libavutil/common.h	383;"	d
av_clipf_c	libavutil/common.h	/^static av_always_inline av_const float av_clipf_c(float a, float amin, float amax)$/;"	f
av_clipl_int32	libavutil/arm/intmath.h	99;"	d
av_clipl_int32	libavutil/common.h	377;"	d
av_clipl_int32_arm	libavutil/arm/intmath.h	/^static av_always_inline av_const int32_t av_clipl_int32_arm(int64_t a)$/;"	f
av_clipl_int32_c	libavutil/common.h	/^static av_always_inline av_const int32_t av_clipl_int32_c(int64_t a)$/;"	f
av_close_input_file	libavformat/utils.c	/^void av_close_input_file(AVFormatContext *s)$/;"	f
av_close_input_stream	libavformat/utils.c	/^void av_close_input_stream(AVFormatContext *s)$/;"	f
av_cmp_i	libavutil/integer.c	/^int av_cmp_i(AVInteger a, AVInteger b){$/;"	f
av_cmp_q	libavutil/rational.h	/^static inline int av_cmp_q(AVRational a, AVRational b){$/;"	f
av_cmp_sf	libavutil/softfloat.h	/^static inline av_const int av_cmp_sf(SoftFloat a, SoftFloat b){$/;"	f
av_codec_context_class	libavcodec/options.c	/^static const AVClass av_codec_context_class = { "AVCodecContext", context_to_name, options, LIBAVUTIL_VERSION_INT, OFFSET(log_level_offset), .opt_find = opt_find};$/;"	v	file:
av_codec_context_class	libpostproc/postprocess.c	/^static const AVClass av_codec_context_class = { "Postproc", context_to_name, NULL };$/;"	v	file:
av_codec_get_id	libavformat/utils.c	/^enum CodecID av_codec_get_id(const AVCodecTag * const *tags, unsigned int tag)$/;"	f
av_codec_get_tag	libavformat/utils.c	/^unsigned int av_codec_get_tag(const AVCodecTag * const *tags, enum CodecID id)$/;"	f
av_codec_next	libavcodec/utils.c	/^AVCodec *av_codec_next(AVCodec *c){$/;"	f
av_cold	libavutil/attributes.h	69;"	d
av_cold	libavutil/attributes.h	71;"	d
av_compare_mod	libavutil/mathematics.c	/^int64_t av_compare_mod(uint64_t a, uint64_t b, uint64_t mod){$/;"	f
av_compare_ts	libavutil/mathematics.c	/^int av_compare_ts(int64_t ts_a, AVRational tb_a, int64_t ts_b, AVRational tb_b){$/;"	f
av_const	libavutil/attributes.h	61;"	d
av_const	libavutil/attributes.h	63;"	d
av_convert_lang_to	libavformat/avlanguage.c	/^const char *av_convert_lang_to(const char *lang, enum AVLangCodespace target_codespace)$/;"	f
av_crc	libavutil/crc.c	/^uint32_t av_crc(const AVCRC *ctx, uint32_t crc, const uint8_t *buffer, size_t length){$/;"	f
av_crc_get_table	libavutil/crc.c	/^const AVCRC *av_crc_get_table(AVCRCId crc_id){$/;"	f
av_crc_init	libavutil/crc.c	/^int av_crc_init(AVCRC *ctx, int le, int bits, uint32_t poly, int ctx_size){$/;"	f
av_crc_table	libavutil/crc.c	/^static AVCRC av_crc_table[AV_CRC_MAX][257];$/;"	v	file:
av_crc_table	libavutil/crc_data.h	/^static const AVCRC av_crc_table[AV_CRC_MAX][257] = {$/;"	v
av_crc_table_params	libavutil/crc.c	/^} av_crc_table_params[AV_CRC_MAX] = {$/;"	v	typeref:struct:__anon307	file:
av_d2q	libavutil/rational.c	/^AVRational av_d2q(double d, int max){$/;"	f
av_d2str	libavutil/avstring.c	/^char *av_d2str(double d)$/;"	f
av_dbl2ext	libavutil/intfloat_readwrite.c	/^AVExtFloat av_dbl2ext(double d){$/;"	f
av_dbl2int	libavutil/intfloat_readwrite.c	/^int64_t av_dbl2int(double d){$/;"	f
av_dct_calc	libavcodec/avfft.c	/^void av_dct_calc(DCTContext *s, FFTSample *data)$/;"	f
av_dct_end	libavcodec/avfft.c	/^void av_dct_end(DCTContext *s)$/;"	f
av_dct_init	libavcodec/avfft.c	/^DCTContext *av_dct_init(int nbits, enum DCTTransformType inverse)$/;"	f
av_default_item_name	libavutil/log.c	/^const char* av_default_item_name(void* ptr){$/;"	f
av_demuxer_open	libavformat/utils.c	/^int av_demuxer_open(AVFormatContext *ic, AVFormatParameters *ap){$/;"	f
av_des_crypt	libavutil/des.c	/^void av_des_crypt(AVDES *d, uint8_t *dst, const uint8_t *src, int count, uint8_t *iv, int decrypt) {$/;"	f
av_des_init	libavutil/des.c	/^int av_des_init(AVDES *d, const uint8_t *key, int key_bits, int decrypt) {$/;"	f
av_destruct_packet	libavcodec/avpacket.c	/^void av_destruct_packet(AVPacket *pkt)$/;"	f
av_destruct_packet_nofree	libavcodec/avpacket.c	/^void av_destruct_packet_nofree(AVPacket *pkt)$/;"	f
av_dict_copy	libavutil/dict.c	/^void av_dict_copy(AVDictionary **dst, AVDictionary *src, int flags)$/;"	f
av_dict_free	libavutil/dict.c	/^void av_dict_free(AVDictionary **pm)$/;"	f
av_dict_get	libavutil/dict.c	/^av_dict_get(AVDictionary *m, const char *key, const AVDictionaryEntry *prev, int flags)$/;"	f
av_dict_set	libavutil/dict.c	/^int av_dict_set(AVDictionary **pm, const char *key, const char *value, int flags)$/;"	f
av_div_i	libavutil/integer.c	/^AVInteger av_div_i(AVInteger a, AVInteger b){$/;"	f
av_div_q	libavutil/rational.c	/^AVRational av_div_q(AVRational b, AVRational c){$/;"	f
av_div_sf	libavutil/softfloat.h	/^static av_const SoftFloat av_div_sf(SoftFloat a, SoftFloat b){$/;"	f
av_dlog	libavutil/log.h	151;"	d
av_dlog	libavutil/log.h	153;"	d
av_dump_format	libavformat/utils.c	/^void av_dump_format(AVFormatContext *ic,$/;"	f
av_dup_packet	libavcodec/avpacket.c	/^int av_dup_packet(AVPacket *pkt)$/;"	f
av_dynarray_add	libavutil/mem.c	/^void av_dynarray_add(void *tab_ptr, int *nb_ptr, void *elem)$/;"	f
av_estimate_timings	libavformat/utils.c	/^static void av_estimate_timings(AVFormatContext *ic, int64_t old_offset)$/;"	f	file:
av_estimate_timings_from_bit_rate	libavformat/utils.c	/^static void av_estimate_timings_from_bit_rate(AVFormatContext *ic)$/;"	f	file:
av_estimate_timings_from_pts	libavformat/utils.c	/^static void av_estimate_timings_from_pts(AVFormatContext *ic, int64_t old_offset)$/;"	f	file:
av_eval_expr	libavutil/eval.c	/^double av_eval_expr(AVExpr *e, const double *const_values, void *opaque)$/;"	f
av_evaluate_lls	libavutil/lls.c	/^double av_evaluate_lls(LLSModel *m, double *param, int order){$/;"	f
av_expr_eval	libavutil/eval.c	/^double av_expr_eval(AVExpr *e, const double *const_values, void *opaque)$/;"	f
av_expr_free	libavutil/eval.c	/^void av_expr_free(AVExpr *e)$/;"	f
av_expr_parse	libavutil/eval.c	/^int av_expr_parse(AVExpr **expr, const char *s,$/;"	f
av_expr_parse_and_eval	libavutil/eval.c	/^int av_expr_parse_and_eval(double *d, const char *s,$/;"	f
av_ext2dbl	libavutil/intfloat_readwrite.c	/^double av_ext2dbl(const AVExtFloat ext){$/;"	f
av_fast_malloc	libavcodec/utils.c	/^void av_fast_malloc(void *ptr, unsigned int *size, size_t min_size)$/;"	f
av_fast_realloc	libavcodec/utils.c	/^void *av_fast_realloc(void *ptr, unsigned int *size, size_t min_size)$/;"	f
av_fft_calc	libavcodec/avfft.c	/^void av_fft_calc(FFTContext *s, FFTComplex *z)$/;"	f
av_fft_end	libavcodec/avfft.c	/^void av_fft_end(FFTContext *s)$/;"	f
av_fft_init	libavcodec/avfft.c	/^FFTContext *av_fft_init(int nbits, int inverse)$/;"	f
av_fft_permute	libavcodec/avfft.c	/^void av_fft_permute(FFTContext *s, FFTComplex *z)$/;"	f
av_fifo_alloc	libavutil/fifo.c	/^AVFifoBuffer *av_fifo_alloc(unsigned int size)$/;"	f
av_fifo_drain	libavutil/fifo.c	/^void av_fifo_drain(AVFifoBuffer *f, int size)$/;"	f
av_fifo_free	libavutil/fifo.c	/^void av_fifo_free(AVFifoBuffer *f)$/;"	f
av_fifo_generic_read	libavutil/fifo.c	/^int av_fifo_generic_read(AVFifoBuffer *f, void *dest, int buf_size, void (*func)(void*, void*, int))$/;"	f
av_fifo_generic_write	libavutil/fifo.c	/^int av_fifo_generic_write(AVFifoBuffer *f, void *src, int size, int (*func)(void*, void*, int))$/;"	f
av_fifo_peek	libavutil/fifo.h	/^static inline uint8_t av_fifo_peek(AVFifoBuffer *f, int offs)$/;"	f
av_fifo_realloc2	libavutil/fifo.c	/^int av_fifo_realloc2(AVFifoBuffer *f, unsigned int new_size) {$/;"	f
av_fifo_reset	libavutil/fifo.c	/^void av_fifo_reset(AVFifoBuffer *f)$/;"	f
av_fifo_size	libavutil/fifo.c	/^int av_fifo_size(AVFifoBuffer *f)$/;"	f
av_fifo_space	libavutil/fifo.c	/^int av_fifo_space(AVFifoBuffer *f)$/;"	f
av_file_map	libavutil/file.c	/^int av_file_map(const char *filename, uint8_t **bufptr, size_t *size,$/;"	f
av_file_unmap	libavutil/file.c	/^void av_file_unmap(uint8_t *bufptr, size_t size)$/;"	f
av_filename_number_test	libavformat/utils.c	/^int av_filename_number_test(const char *filename)$/;"	f
av_filter_next	libavfilter/avfilter.c	/^AVFilter **av_filter_next(AVFilter **filter)$/;"	f
av_find_best_stream	libavformat/utils.c	/^int av_find_best_stream(AVFormatContext *ic,$/;"	f
av_find_default_stream_index	libavformat/utils.c	/^int av_find_default_stream_index(AVFormatContext *s)$/;"	f
av_find_info_tag	libavutil/parseutils.c	/^int av_find_info_tag(char *arg, int arg_size, const char *tag1, const char *info)$/;"	f
av_find_input_format	libavformat/utils.c	/^AVInputFormat *av_find_input_format(const char *short_name)$/;"	f
av_find_nearest_q_idx	libavutil/rational.c	/^int av_find_nearest_q_idx(AVRational q, const AVRational* q_list)$/;"	f
av_find_opt	libavutil/opt.c	/^const AVOption *av_find_opt(void *v, const char *name, const char *unit, int mask, int flags)$/;"	f
av_find_stream_info	libavformat/utils.c	/^int av_find_stream_info(AVFormatContext *ic)$/;"	f
av_first_parser	libavcodec/parser.c	/^static AVCodecParser *av_first_parser = NULL;$/;"	v	file:
av_flatten	libavutil/attributes.h	77;"	d
av_flatten	libavutil/attributes.h	79;"	d
av_flt2int	libavutil/intfloat_readwrite.c	/^int32_t av_flt2int(float d){$/;"	f
av_force_cpu_flags	libavutil/cpu.c	/^void av_force_cpu_flags(int arg){$/;"	f
av_format_context_class	libavformat/options.c	/^static const AVClass av_format_context_class = {$/;"	v	file:
av_frac_add	libavformat/utils.c	/^static void av_frac_add(AVFrac *f, int64_t incr)$/;"	f	file:
av_frac_init	libavformat/utils.c	/^static void av_frac_init(AVFrac *f, int64_t val, int64_t num, int64_t den)$/;"	f	file:
av_free	libavutil/mem.c	/^void av_free(void *ptr)$/;"	f
av_free_expr	libavutil/eval.c	/^void av_free_expr(AVExpr *e)$/;"	f
av_free_packet	libavcodec/avpacket.c	/^void av_free_packet(AVPacket *pkt)$/;"	f
av_freep	libavutil/mem.c	/^void av_freep(void *arg)$/;"	f
av_gcd	libavutil/mathematics.c	/^int64_t av_gcd(int64_t a, int64_t b){$/;"	f
av_gen_search	libavformat/utils.c	/^int64_t av_gen_search(AVFormatContext *s, int stream_index, int64_t target_ts, int64_t pos_min, int64_t pos_max, int64_t pos_limit, int64_t ts_min, int64_t ts_max, int flags, int64_t *ts_ret, int64_t (*read_timestamp)(struct AVFormatContext *, int , int64_t *, int64_t )){$/;"	f
av_get_bits_per_pixel	libavutil/pixdesc.c	/^int av_get_bits_per_pixel(const AVPixFmtDescriptor *pixdesc)$/;"	f
av_get_bits_per_sample	libavcodec/utils.c	/^int av_get_bits_per_sample(enum CodecID codec_id){$/;"	f
av_get_bits_per_sample_fmt	libavutil/samplefmt.c	/^int av_get_bits_per_sample_fmt(enum AVSampleFormat sample_fmt)$/;"	f
av_get_bits_per_sample_format	libavcodec/utils.c	/^int av_get_bits_per_sample_format(enum AVSampleFormat sample_fmt) {$/;"	f
av_get_bytes_per_sample	libavutil/samplefmt.c	/^int av_get_bytes_per_sample(enum AVSampleFormat sample_fmt)$/;"	f
av_get_channel_layout	libavutil/audioconvert.c	/^int64_t av_get_channel_layout(const char *name)$/;"	f
av_get_channel_layout_nb_channels	libavutil/audioconvert.c	/^int av_get_channel_layout_nb_channels(int64_t channel_layout)$/;"	f
av_get_channel_layout_string	libavutil/audioconvert.c	/^void av_get_channel_layout_string(char *buf, int buf_size,$/;"	f
av_get_codec_tag_string	libavcodec/utils.c	/^size_t av_get_codec_tag_string(char *buf, size_t buf_size, unsigned int codec_tag)$/;"	f
av_get_cpu_flags	libavutil/cpu.c	/^int av_get_cpu_flags(void)$/;"	f
av_get_double	libavutil/opt.c	/^double av_get_double(void *obj, const char *name, const AVOption **o_out)$/;"	f
av_get_frame_filename	libavformat/utils.c	/^int av_get_frame_filename(char *buf, int buf_size,$/;"	f
av_get_int	libavutil/opt.c	/^int64_t av_get_int(void *obj, const char *name, const AVOption **o_out)$/;"	f
av_get_number	libavutil/opt.c	/^static int av_get_number(void *obj, const char *name, const AVOption **o_out, double *num, int *den, int64_t *intnum)$/;"	f	file:
av_get_packet	libavformat/utils.c	/^int av_get_packet(AVIOContext *s, AVPacket *pkt, int size)$/;"	f
av_get_pict_type_char	libavcodec/utils.c	/^char av_get_pict_type_char(int pict_type){$/;"	f
av_get_picture_type_char	libavutil/utils.c	/^char av_get_picture_type_char(enum AVPictureType pict_type)$/;"	f
av_get_pix_fmt	libavutil/pixdesc.c	/^enum PixelFormat av_get_pix_fmt(const char *name)$/;"	f
av_get_pix_fmt_name	libavutil/pixdesc.c	/^const char *av_get_pix_fmt_name(enum PixelFormat pix_fmt)$/;"	f
av_get_pix_fmt_string	libavutil/pixdesc.c	/^char *av_get_pix_fmt_string (char *buf, int buf_size, enum PixelFormat pix_fmt)$/;"	f
av_get_profile_name	libavcodec/utils.c	/^const char *av_get_profile_name(const AVCodec *codec, int profile)$/;"	f
av_get_q	libavutil/opt.c	/^AVRational av_get_q(void *obj, const char *name, const AVOption **o_out)$/;"	f
av_get_random_seed	libavutil/random_seed.c	/^uint32_t av_get_random_seed(void)$/;"	f
av_get_sample_fmt	libavutil/samplefmt.c	/^enum AVSampleFormat av_get_sample_fmt(const char *name)$/;"	f
av_get_sample_fmt_name	libavutil/samplefmt.c	/^const char *av_get_sample_fmt_name(enum AVSampleFormat sample_fmt)$/;"	f
av_get_sample_fmt_string	libavutil/samplefmt.c	/^char *av_get_sample_fmt_string (char *buf, int buf_size, enum AVSampleFormat sample_fmt)$/;"	f
av_get_string	libavutil/opt.c	/^const char *av_get_string(void *obj, const char *name, const AVOption **o_out, char *buf, int buf_len)$/;"	f
av_get_token	libavutil/avstring.c	/^char *av_get_token(const char **buf, const char *term)$/;"	f
av_gettime	libavformat/utils.c	/^int64_t av_gettime(void)$/;"	f
av_grow_packet	libavcodec/avpacket.c	/^int av_grow_packet(AVPacket *pkt, int grow_by)$/;"	f
av_guess_codec	libavformat/utils.c	/^enum CodecID av_guess_codec(AVOutputFormat *fmt, const char *short_name,$/;"	f
av_guess_format	libavformat/utils.c	/^AVOutputFormat *av_guess_format(const char *short_name, const char *filename,$/;"	f
av_guess_image2_codec	libavformat/img2.c	/^enum CodecID av_guess_image2_codec(const char *filename){$/;"	f
av_has_duration	libavformat/utils.c	/^static int av_has_duration(AVFormatContext *ic)$/;"	f	file:
av_hex_dump	libavformat/utils.c	/^void av_hex_dump(FILE *f, uint8_t *buf, int size)$/;"	f
av_hex_dump_log	libavformat/utils.c	/^void av_hex_dump_log(void *avcl, int level, uint8_t *buf, int size)$/;"	f
av_hwaccel_next	libavcodec/utils.c	/^AVHWAccel *av_hwaccel_next(AVHWAccel *hwaccel)$/;"	f
av_i2int	libavutil/integer.c	/^int64_t av_i2int(AVInteger a){$/;"	f
av_iformat_next	libavformat/utils.c	/^AVInputFormat  *av_iformat_next(AVInputFormat  *f)$/;"	f
av_image_alloc	libavutil/imgutils.c	/^int av_image_alloc(uint8_t *pointers[4], int linesizes[4],$/;"	f
av_image_check_size	libavutil/imgutils.c	/^int av_image_check_size(unsigned int w, unsigned int h, int log_offset, void *log_ctx)$/;"	f
av_image_copy	libavutil/imgutils.c	/^void av_image_copy(uint8_t *dst_data[4], int dst_linesizes[4],$/;"	f
av_image_copy_plane	libavutil/imgutils.c	/^void av_image_copy_plane(uint8_t       *dst, int dst_linesize,$/;"	f
av_image_fill_linesizes	libavutil/imgutils.c	/^int av_image_fill_linesizes(int linesizes[4], enum PixelFormat pix_fmt, int width)$/;"	f
av_image_fill_max_pixsteps	libavutil/imgutils.c	/^void av_image_fill_max_pixsteps(int max_pixsteps[4], int max_pixstep_comps[4],$/;"	f
av_image_fill_pointers	libavutil/imgutils.c	/^int av_image_fill_pointers(uint8_t *data[4], enum PixelFormat pix_fmt, int height,$/;"	f
av_image_get_linesize	libavutil/imgutils.c	/^int av_image_get_linesize(enum PixelFormat pix_fmt, int width, int plane)$/;"	f
av_imdct_calc	libavcodec/avfft.c	/^void av_imdct_calc(FFTContext *s, FFTSample *output, const FFTSample *input)$/;"	f
av_imdct_half	libavcodec/avfft.c	/^void av_imdct_half(FFTContext *s, FFTSample *output, const FFTSample *input)$/;"	f
av_index_search_timestamp	libavformat/utils.c	/^int av_index_search_timestamp(AVStream *st, int64_t wanted_timestamp,$/;"	f
av_init_lls	libavutil/lls.c	/^void av_init_lls(LLSModel *m, int indep_count){$/;"	f
av_init_packet	libavcodec/avpacket.c	/^void av_init_packet(AVPacket *pkt)$/;"	f
av_int2dbl	libavutil/intfloat_readwrite.c	/^double av_int2dbl(int64_t v){$/;"	f
av_int2flt	libavutil/intfloat_readwrite.c	/^float av_int2flt(int32_t v){$/;"	f
av_int2i	libavutil/integer.c	/^AVInteger av_int2i(int64_t a){$/;"	f
av_int2sf	libavutil/softfloat.h	/^static inline av_const SoftFloat av_int2sf(int v, int frac_bits){$/;"	f
av_interleave_packet	libavformat/utils.c	/^static int av_interleave_packet(AVFormatContext *s, AVPacket *out, AVPacket *in, int flush){$/;"	f	file:
av_interleave_packet_per_dts	libavformat/utils.c	/^int av_interleave_packet_per_dts(AVFormatContext *s, AVPacket *out, AVPacket *pkt, int flush){$/;"	f
av_interleaved_write_frame	libavformat/utils.c	/^int av_interleaved_write_frame(AVFormatContext *s, AVPacket *pkt){$/;"	f
av_le2ne16	libavutil/bswap.h	101;"	d
av_le2ne16	libavutil/bswap.h	110;"	d
av_le2ne32	libavutil/bswap.h	102;"	d
av_le2ne32	libavutil/bswap.h	111;"	d
av_le2ne64	libavutil/bswap.h	103;"	d
av_le2ne64	libavutil/bswap.h	112;"	d
av_lfg_get	libavutil/lfg.h	/^static inline unsigned int av_lfg_get(AVLFG *c){$/;"	f
av_lfg_init	libavutil/lfg.c	/^void av_cold av_lfg_init(AVLFG *c, unsigned int seed){$/;"	f
av_lockmgr_register	libavcodec/utils.c	/^int av_lockmgr_register(int (*cb)(void **mutex, enum AVLockOp op))$/;"	f
av_log	libavutil/log.c	/^void av_log(void* avcl, int level, const char *fmt, ...)$/;"	f
av_log2	libavutil/common.h	353;"	d
av_log2	libavutil/intmath.h	39;"	d
av_log2_16bit	libavutil/common.h	356;"	d
av_log2_16bit	libavutil/intmath.h	41;"	d
av_log2_16bit_c	libavutil/common.h	/^static av_always_inline av_const int av_log2_16bit_c(unsigned int v)$/;"	f
av_log2_c	libavutil/common.h	/^static av_always_inline av_const int av_log2_c(unsigned int v)$/;"	f
av_log2_i	libavutil/integer.c	/^int av_log2_i(AVInteger a){$/;"	f
av_log_ask_for_sample	libavcodec/utils.c	/^void av_log_ask_for_sample(void *avc, const char *msg, ...)$/;"	f
av_log_callback	libavutil/log.c	/^static void (*av_log_callback)(void*, int, const char*, va_list) = av_log_default_callback;$/;"	v	file:
av_log_default_callback	libavutil/log.c	/^void av_log_default_callback(void* ptr, int level, const char* fmt, va_list vl)$/;"	f
av_log_get_level	libavutil/log.c	/^int av_log_get_level(void)$/;"	f
av_log_level	libavutil/log.c	/^static int av_log_level = AV_LOG_INFO;$/;"	v	file:
av_log_missing_feature	libavcodec/utils.c	/^void av_log_missing_feature(void *avc, const char *feature, int want_sample)$/;"	f
av_log_set_callback	libavutil/log.c	/^void av_log_set_callback(void (*callback)(void*, int, const char*, va_list))$/;"	f
av_log_set_flags	libavutil/log.c	/^void av_log_set_flags(int arg)$/;"	f
av_log_set_level	libavutil/log.c	/^void av_log_set_level(int level)$/;"	f
av_lzo1x_decode	libavutil/lzo.c	/^int av_lzo1x_decode(void *out, int *outlen, const void *in, int *inlen) {$/;"	f
av_malloc	libavutil/mem.c	/^void *av_malloc(size_t size)$/;"	f
av_malloc_attrib	libavutil/mem.h	55;"	d
av_malloc_attrib	libavutil/mem.h	57;"	d
av_mallocz	libavutil/mem.c	/^void *av_mallocz(size_t size)$/;"	f
av_match_ext	libavformat/utils.c	/^int av_match_ext(const char *filename, const char *extensions)$/;"	f
av_md5_final	libavutil/md5.c	/^void av_md5_final(AVMD5 *ctx, uint8_t *dst){$/;"	f
av_md5_init	libavutil/md5.c	/^void av_md5_init(AVMD5 *ctx){$/;"	f
av_md5_size	libavutil/md5.c	/^const int av_md5_size= sizeof(AVMD5);$/;"	v
av_md5_sum	libavutil/md5.c	/^void av_md5_sum(uint8_t *dst, const uint8_t *src, const int len){$/;"	f
av_md5_update	libavutil/md5.c	/^void av_md5_update(AVMD5 *ctx, const uint8_t *src, const int len){$/;"	f
av_mdct_calc	libavcodec/avfft.c	/^void av_mdct_calc(FFTContext *s, FFTSample *output, const FFTSample *input)$/;"	f
av_mdct_end	libavcodec/avfft.c	/^void av_mdct_end(FFTContext *s)$/;"	f
av_mdct_init	libavcodec/avfft.c	/^FFTContext *av_mdct_init(int nbits, int inverse, double scale)$/;"	f
av_memcpy_backptr	libavutil/lzo.c	/^void av_memcpy_backptr(uint8_t *dst, int back, int cnt) {$/;"	f
av_metadata_conv	libavformat/metadata.c	/^void av_metadata_conv(AVFormatContext *ctx, const AVMetadataConv *d_conv,$/;"	f
av_metadata_copy	libavformat/metadata.c	/^void av_metadata_copy(AVDictionary **dst, AVDictionary *src, int flags)$/;"	f
av_metadata_free	libavformat/metadata.c	/^void av_metadata_free(AVDictionary **pm)$/;"	f
av_metadata_get	libavformat/metadata.c	/^av_metadata_get(AVDictionary *m, const char *key, const AVDictionaryEntry *prev, int flags)$/;"	f
av_metadata_set2	libavformat/metadata.c	/^int av_metadata_set2(AVDictionary **pm, const char *key, const char *value, int flags)$/;"	f
av_mlfg_get	libavutil/lfg.h	/^static inline unsigned int av_mlfg_get(AVLFG *c){$/;"	f
av_mod_i	libavutil/integer.c	/^AVInteger av_mod_i(AVInteger *quot, AVInteger a, AVInteger b){$/;"	f
av_mpeg4_decode_header	libavcodec/mpeg4video_parser.c	/^static int av_mpeg4_decode_header(AVCodecParserContext *s1,$/;"	f	file:
av_mul_i	libavutil/integer.c	/^AVInteger av_mul_i(AVInteger a, AVInteger b){$/;"	f
av_mul_q	libavutil/rational.c	/^AVRational av_mul_q(AVRational b, AVRational c){$/;"	f
av_mul_sf	libavutil/softfloat.h	/^static inline av_const SoftFloat av_mul_sf(SoftFloat a, SoftFloat b){$/;"	f
av_nearer_q	libavutil/rational.c	/^int av_nearer_q(AVRational q, AVRational q1, AVRational q2)$/;"	f
av_new_packet	libavcodec/avpacket.c	/^int av_new_packet(AVPacket *pkt, int size)$/;"	f
av_new_program	libavformat/utils.c	/^AVProgram *av_new_program(AVFormatContext *ac, int id)$/;"	f
av_new_stream	libavformat/utils.c	/^AVStream *av_new_stream(AVFormatContext *s, int id)$/;"	f
av_next_option	libavutil/opt.c	/^const AVOption *av_next_option(void *obj, const AVOption *last)$/;"	f
av_noinline	libavutil/attributes.h	45;"	d
av_noinline	libavutil/attributes.h	47;"	d
av_normalize1_sf	libavutil/softfloat.h	/^static inline av_const SoftFloat av_normalize1_sf(SoftFloat a){$/;"	f
av_normalize_sf	libavutil/softfloat.h	/^static av_const SoftFloat av_normalize_sf(SoftFloat a){$/;"	f
av_oformat_next	libavformat/utils.c	/^AVOutputFormat *av_oformat_next(AVOutputFormat *f)$/;"	f
av_open_input_file	libavformat/utils.c	/^int av_open_input_file(AVFormatContext **ic_ptr, const char *filename,$/;"	f
av_open_input_stream	libavformat/utils.c	/^int av_open_input_stream(AVFormatContext **ic_ptr,$/;"	f
av_opt_find	libavutil/opt.c	/^const AVOption *av_opt_find(void *obj, const char *name, const char *unit,$/;"	f
av_opt_flag_is_set	libavutil/opt.c	/^int av_opt_flag_is_set(void *obj, const char *field_name, const char *flag_name)$/;"	f
av_opt_free	libavutil/opt.c	/^void av_opt_free(void *obj)$/;"	f
av_opt_set_defaults	libavutil/opt.c	/^void av_opt_set_defaults(void *s)$/;"	f
av_opt_set_defaults2	libavutil/opt.c	/^void av_opt_set_defaults2(void *s, int mask, int flags)$/;"	f
av_opt_set_dict	libavutil/opt.c	/^int av_opt_set_dict(void *obj, AVDictionary **options)$/;"	f
av_opt_show2	libavutil/opt.c	/^int av_opt_show2(void *obj, void *av_log_obj, int req_flags, int rej_flags)$/;"	f
av_packet_get_side_data	libavcodec/avpacket.c	/^uint8_t* av_packet_get_side_data(AVPacket *pkt, enum AVPacketSideDataType type,$/;"	f
av_packet_merge_side_data	libavcodec/avpacket.c	/^int av_packet_merge_side_data(AVPacket *pkt){$/;"	f
av_packet_new_side_data	libavcodec/avpacket.c	/^uint8_t* av_packet_new_side_data(AVPacket *pkt, enum AVPacketSideDataType type,$/;"	f
av_packet_split_side_data	libavcodec/avpacket.c	/^int av_packet_split_side_data(AVPacket *pkt){$/;"	f
av_parse_and_eval_expr	libavutil/eval.c	/^int av_parse_and_eval_expr(double *res, const char *s,$/;"	f
av_parse_color	libavutil/parseutils.c	/^int av_parse_color(uint8_t *rgba_color, const char *color_string, int slen,$/;"	f
av_parse_expr	libavutil/eval.c	/^int av_parse_expr(AVExpr **expr, const char *s,$/;"	f
av_parse_time	libavutil/parseutils.c	/^int av_parse_time(int64_t *timeval, const char *datestr, int duration)$/;"	f
av_parse_video_rate	libavutil/parseutils.c	/^int av_parse_video_rate(AVRational *rate, const char *arg)$/;"	f
av_parse_video_size	libavutil/parseutils.c	/^int av_parse_video_size(int *width_ptr, int *height_ptr, const char *str)$/;"	f
av_parser_change	libavcodec/parser.c	/^int av_parser_change(AVCodecParserContext *s,$/;"	f
av_parser_close	libavcodec/parser.c	/^void av_parser_close(AVCodecParserContext *s)$/;"	f
av_parser_init	libavcodec/parser.c	/^AVCodecParserContext *av_parser_init(int codec_id)$/;"	f
av_parser_next	libavcodec/parser.c	/^AVCodecParser* av_parser_next(AVCodecParser *p){$/;"	f
av_parser_parse2	libavcodec/parser.c	/^int av_parser_parse2(AVCodecParserContext *s,$/;"	f
av_picture_copy	libavcodec/imgconvert.c	/^void av_picture_copy(AVPicture *dst, const AVPicture *src,$/;"	f
av_picture_crop	libavcodec/imgconvert.c	/^int av_picture_crop(AVPicture *dst, const AVPicture *src,$/;"	f
av_picture_pad	libavcodec/imgconvert.c	/^int av_picture_pad(AVPicture *dst, const AVPicture *src, int height, int width,$/;"	f
av_pix_fmt_descriptors	libavutil/pixdesc.c	/^const AVPixFmtDescriptor av_pix_fmt_descriptors[PIX_FMT_NB] = {$/;"	v
av_pkt_dump	libavformat/utils.c	/^void av_pkt_dump(FILE *f, AVPacket *pkt, int dump_payload)$/;"	f
av_pkt_dump2	libavformat/utils.c	/^void av_pkt_dump2(FILE *f, AVPacket *pkt, int dump_payload, AVStream *st)$/;"	f
av_pkt_dump_log	libavformat/utils.c	/^void av_pkt_dump_log(void *avcl, int level, AVPacket *pkt, int dump_payload)$/;"	f
av_pkt_dump_log2	libavformat/utils.c	/^void av_pkt_dump_log2(void *avcl, int level, AVPacket *pkt, int dump_payload,$/;"	f
av_popcount	libavutil/common.h	386;"	d
av_popcount_c	libavutil/common.h	/^static av_always_inline av_const int av_popcount_c(uint32_t x)$/;"	f
av_probe_input_buffer	libavformat/utils.c	/^int av_probe_input_buffer(AVIOContext *pb, AVInputFormat **fmt,$/;"	f
av_probe_input_format	libavformat/utils.c	/^AVInputFormat *av_probe_input_format(AVProbeData *pd, int is_opened){$/;"	f
av_probe_input_format2	libavformat/utils.c	/^AVInputFormat *av_probe_input_format2(AVProbeData *pd, int is_opened, int *score_max)$/;"	f
av_probe_input_format3	libavformat/utils.c	/^AVInputFormat *av_probe_input_format3(AVProbeData *pd, int is_opened, int *score_ret)$/;"	f
av_protocol_next	libavformat/avio.c	/^URLProtocol *av_protocol_next(URLProtocol *p)$/;"	f
av_pure	libavutil/attributes.h	53;"	d
av_pure	libavutil/attributes.h	55;"	d
av_q2d	libavutil/rational.h	/^static inline double av_q2d(AVRational a){$/;"	f
av_rc4_crypt	libavutil/rc4.c	/^void av_rc4_crypt(AVRC4 *r, uint8_t *dst, const uint8_t *src, int count, uint8_t *iv, int decrypt) {$/;"	f
av_rc4_init	libavutil/rc4.c	/^int av_rc4_init(AVRC4 *r, const uint8_t *key, int key_bits, int decrypt) {$/;"	f
av_rdft_calc	libavcodec/avfft.c	/^void av_rdft_calc(RDFTContext *s, FFTSample *data)$/;"	f
av_rdft_end	libavcodec/avfft.c	/^void av_rdft_end(RDFTContext *s)$/;"	f
av_rdft_init	libavcodec/avfft.c	/^RDFTContext *av_rdft_init(int nbits, enum RDFTransformType trans)$/;"	f
av_read	libavformat/libnut.c	/^static size_t av_read(void * h, size_t len, uint8_t * buf) {$/;"	f	file:
av_read_frame	libavformat/utils.c	/^int av_read_frame(AVFormatContext *s, AVPacket *pkt)$/;"	f
av_read_frame_internal	libavformat/utils.c	/^static int av_read_frame_internal(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
av_read_image_line	libavutil/pixdesc.c	/^void av_read_image_line(uint16_t *dst, const uint8_t *data[4], const int linesize[4],$/;"	f
av_read_packet	libavformat/utils.c	/^int av_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f
av_read_pause	libavformat/utils.c	/^int av_read_pause(AVFormatContext *s)$/;"	f
av_read_play	libavformat/utils.c	/^int av_read_play(AVFormatContext *s)$/;"	f
av_realloc	libavutil/mem.c	/^void *av_realloc(void *ptr, size_t size)$/;"	f
av_realloc_f	libavutil/mem.c	/^void *av_realloc_f(void *ptr, size_t nelem, size_t elsize)$/;"	f
av_reduce	libavutil/rational.c	/^int av_reduce(int *dst_num, int *dst_den, int64_t num, int64_t den, int64_t max){$/;"	f
av_register_all	libavformat/allformats.c	/^void av_register_all(void)$/;"	f
av_register_bitstream_filter	libavcodec/bitstream_filter.c	/^void av_register_bitstream_filter(AVBitStreamFilter *bsf){$/;"	f
av_register_codec_parser	libavcodec/parser.c	/^void av_register_codec_parser(AVCodecParser *parser)$/;"	f
av_register_hwaccel	libavcodec/utils.c	/^void av_register_hwaccel(AVHWAccel *hwaccel)$/;"	f
av_register_input_format	libavformat/utils.c	/^void av_register_input_format(AVInputFormat *format)$/;"	f
av_register_output_format	libavformat/utils.c	/^void av_register_output_format(AVOutputFormat *format)$/;"	f
av_register_protocol2	libavformat/avio.c	/^int av_register_protocol2(URLProtocol *protocol, int size)$/;"	f
av_register_rdt_dynamic_payload_handlers	libavformat/rdt.c	/^void av_register_rdt_dynamic_payload_handlers(void)$/;"	f
av_register_rtp_dynamic_payload_handlers	libavformat/rtpdec.c	/^void av_register_rtp_dynamic_payload_handlers(void)$/;"	f
av_resample	libavcodec/resample2.c	/^int av_resample(AVResampleContext *c, short *dst, short *src, int *consumed, int src_size, int dst_size, int update_ctx){$/;"	f
av_resample_close	libavcodec/resample2.c	/^void av_resample_close(AVResampleContext *c){$/;"	f
av_resample_compensate	libavcodec/resample2.c	/^void av_resample_compensate(AVResampleContext *c, int sample_delta, int compensation_distance){$/;"	f
av_resample_init	libavcodec/resample2.c	/^AVResampleContext *av_resample_init(int out_rate, int in_rate, int filter_size, int phase_shift, int linear, double cutoff){$/;"	f
av_rescale	libavutil/mathematics.c	/^int64_t av_rescale(int64_t a, int64_t b, int64_t c){$/;"	f
av_rescale_q	libavutil/mathematics.c	/^int64_t av_rescale_q(int64_t a, AVRational bq, AVRational cq){$/;"	f
av_rescale_rnd	libavutil/mathematics.c	/^int64_t av_rescale_rnd(int64_t a, int64_t b, int64_t c, enum AVRounding rnd){$/;"	f
av_reverse	libavutil/mathematics.c	/^const uint8_t av_reverse[256]={$/;"	v
av_samples_alloc	libavutil/samplefmt.c	/^int av_samples_alloc(uint8_t *pointers[8], int linesizes[8],$/;"	f
av_samples_fill_arrays	libavutil/samplefmt.c	/^int av_samples_fill_arrays(uint8_t *pointers[8], int linesizes[8],$/;"	f
av_sdp_create	libavformat/sdp.c	/^int av_sdp_create(AVFormatContext *ac[], int n_files, char *buf, int size)$/;"	f
av_seek	libavformat/libnut.c	/^static off_t av_seek(void * h, long long pos, int whence) {$/;"	f	file:
av_seek_frame	libavformat/utils.c	/^int av_seek_frame(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f
av_seek_frame_binary	libavformat/utils.c	/^int av_seek_frame_binary(AVFormatContext *s, int stream_index, int64_t target_ts, int flags){$/;"	f
av_seek_frame_byte	libavformat/utils.c	/^static int av_seek_frame_byte(AVFormatContext *s, int stream_index, int64_t pos, int flags){$/;"	f	file:
av_seek_frame_generic	libavformat/utils.c	/^static int av_seek_frame_generic(AVFormatContext *s,$/;"	f	file:
av_set_double	libavutil/opt.c	/^const AVOption *av_set_double(void *obj, const char *name, double n)$/;"	f
av_set_int	libavutil/opt.c	/^const AVOption *av_set_int(void *obj, const char *name, int64_t n)$/;"	f
av_set_number	libavutil/opt.c	/^static const AVOption *av_set_number(void *obj, const char *name, double num, int den, int64_t intnum)$/;"	f	file:
av_set_number2	libavutil/opt.c	/^static int av_set_number2(void *obj, const char *name, double num, int den, int64_t intnum, const AVOption **o_out)$/;"	f	file:
av_set_options_string	libavutil/opt.c	/^int av_set_options_string(void *ctx, const char *opts,$/;"	f
av_set_parameters	libavformat/utils.c	/^int av_set_parameters(AVFormatContext *s, AVFormatParameters *ap)$/;"	f
av_set_pts_info	libavformat/utils.c	/^void av_set_pts_info(AVStream *s, int pts_wrap_bits,$/;"	f
av_set_q	libavutil/opt.c	/^const AVOption *av_set_q(void *obj, const char *name, AVRational n)$/;"	f
av_set_string3	libavutil/opt.c	/^int av_set_string3(void *obj, const char *name, const char *val, int alloc, const AVOption **o_out)$/;"	f
av_sf2int	libavutil/softfloat.h	/^static inline av_const int av_sf2int(SoftFloat v, int frac_bits){$/;"	f
av_sha_final	libavutil/sha.c	/^void av_sha_final(AVSHA* ctx, uint8_t *digest)$/;"	f
av_sha_init	libavutil/sha.c	/^int av_sha_init(AVSHA* ctx, int bits)$/;"	f
av_sha_size	libavutil/sha.c	/^const int av_sha_size = sizeof(AVSHA);$/;"	v
av_sha_update	libavutil/sha.c	/^void av_sha_update(AVSHA* ctx, const uint8_t* data, unsigned int len)$/;"	f
av_shr_i	libavutil/integer.c	/^AVInteger av_shr_i(AVInteger a, int s){$/;"	f
av_shrink_packet	libavcodec/avpacket.c	/^void av_shrink_packet(AVPacket *pkt, int size)$/;"	f
av_size_mult	libavutil/mem.h	/^static inline int av_size_mult(size_t a, size_t b, size_t *r)$/;"	f
av_solve_lls	libavutil/lls.c	/^void av_solve_lls(LLSModel *m, double threshold, int min_order){$/;"	f
av_str2id	libavformat/img2.c	/^static enum CodecID av_str2id(const IdStrMap *tags, const char *str)$/;"	f	file:
av_strdup	libavutil/mem.c	/^char *av_strdup(const char *s)$/;"	f
av_strerror	libavutil/error.c	/^int av_strerror(int errnum, char *errbuf, size_t errbuf_size)$/;"	f
av_stristart	libavutil/avstring.c	/^int av_stristart(const char *str, const char *pfx, const char **ptr)$/;"	f
av_stristr	libavutil/avstring.c	/^char *av_stristr(const char *s1, const char *s2)$/;"	f
av_strlcat	libavutil/avstring.c	/^size_t av_strlcat(char *dst, const char *src, size_t size)$/;"	f
av_strlcatf	libavutil/avstring.c	/^size_t av_strlcatf(char *dst, size_t size, const char *fmt, ...)$/;"	f
av_strlcpy	libavutil/avstring.c	/^size_t av_strlcpy(char *dst, const char *src, size_t size)$/;"	f
av_strstart	libavutil/avstring.c	/^int av_strstart(const char *str, const char *pfx, const char **ptr)$/;"	f
av_strtod	libavutil/eval.c	/^double av_strtod(const char *numstr, char **tail)$/;"	f
av_sub_i	libavutil/integer.c	/^AVInteger av_sub_i(AVInteger a, AVInteger b){$/;"	f
av_sub_q	libavutil/rational.c	/^AVRational av_sub_q(AVRational b, AVRational c){$/;"	f
av_sub_sf	libavutil/softfloat.h	/^static inline av_const SoftFloat av_sub_sf(SoftFloat a, SoftFloat b){$/;"	f
av_sync_type	ffplay.c	/^    int av_sync_type;$/;"	m	struct:VideoState	file:
av_sync_type	ffplay.c	/^static int av_sync_type = AV_SYNC_AUDIO_MASTER;$/;"	v	file:
av_tree_destroy	libavutil/tree.c	/^void av_tree_destroy(AVTreeNode *t){$/;"	f
av_tree_enumerate	libavutil/tree.c	/^void av_tree_enumerate(AVTreeNode *t, void *opaque, int (*cmp)(void *opaque, void *elem), int (*enu)(void *opaque, void *elem)){$/;"	f
av_tree_find	libavutil/tree.c	/^void *av_tree_find(const AVTreeNode *t, void *key, int (*cmp)(void *key, const void *b), void *next[2]){$/;"	f
av_tree_insert	libavutil/tree.c	/^void *av_tree_insert(AVTreeNode **tp, void *key, int (*cmp)(void *key, const void *b), AVTreeNode **next){$/;"	f
av_tree_node_size	libavutil/tree.c	/^const int av_tree_node_size = sizeof(AVTreeNode);$/;"	v
av_uninit	libavutil/attributes.h	122;"	d
av_uninit	libavutil/attributes.h	124;"	d
av_unused	libavutil/attributes.h	93;"	d
av_unused	libavutil/attributes.h	95;"	d
av_update_cur_dts	libavformat/utils.c	/^void av_update_cur_dts(AVFormatContext *s, AVStream *ref_st, int64_t timestamp){$/;"	f
av_update_lls	libavutil/lls.c	/^void av_update_lls(LLSModel *m, double *var, double decay){$/;"	f
av_update_stream_timings	libavformat/utils.c	/^static void av_update_stream_timings(AVFormatContext *ic)$/;"	f	file:
av_url_read_fpause	libavformat/aviobuf.c	/^int av_url_read_fpause(AVIOContext *s, int pause)$/;"	f
av_url_read_fseek	libavformat/aviobuf.c	/^int64_t av_url_read_fseek(AVIOContext *s, int stream_index,$/;"	f
av_url_read_pause	libavformat/avio.c	/^int av_url_read_pause(URLContext *h, int pause)$/;"	f
av_url_read_seek	libavformat/avio.c	/^int64_t av_url_read_seek(URLContext *h,$/;"	f
av_url_split	libavformat/utils.c	/^void av_url_split(char *proto, int proto_size,$/;"	f
av_used	libavutil/attributes.h	106;"	d
av_used	libavutil/attributes.h	108;"	d
av_vlog	libavutil/log.c	/^void av_vlog(void* avcl, int level, const char *fmt, va_list vl)$/;"	f
av_vsink_buffer_get_video_buffer_ref	libavfilter/vsink_buffer.c	/^int av_vsink_buffer_get_video_buffer_ref(AVFilterContext *ctx,$/;"	f
av_vsrc_buffer_add_frame	libavfilter/vsrc_buffer.c	/^int av_vsrc_buffer_add_frame(AVFilterContext *buffer_src,$/;"	f
av_vsrc_buffer_add_video_buffer_ref	libavfilter/vsrc_buffer.c	/^int av_vsrc_buffer_add_video_buffer_ref(AVFilterContext *buffer_filter,$/;"	f
av_write	libavformat/libnut.c	/^static int av_write(void * h, size_t len, const uint8_t * buf) {$/;"	f	file:
av_write_frame	libavformat/utils.c	/^int av_write_frame(AVFormatContext *s, AVPacket *pkt)$/;"	f
av_write_header	libavformat/utils.c	/^int av_write_header(AVFormatContext *s)$/;"	f
av_write_image_line	libavutil/pixdesc.c	/^void av_write_image_line(const uint16_t *src, uint8_t *data[4], const int linesize[4],$/;"	f
av_write_trailer	libavformat/utils.c	/^int av_write_trailer(AVFormatContext *s)$/;"	f
av_xiphlacing	libavcodec/utils.c	/^unsigned int av_xiphlacing(unsigned char *s, unsigned int v)$/;"	f
avail	libavdevice/dv1394.c	/^    int avail;  \/* Number of frames available for reading *\/$/;"	m	struct:dv1394_data	file:
avail_indexes	libavcodec/rv34.c	/^static const uint8_t avail_indexes[4] = { 6, 7, 10, 11 };$/;"	v	file:
avc_mp4_find_startcode	libavformat/rtpenc_h264.c	/^static const uint8_t *avc_mp4_find_startcode(const uint8_t *start, const uint8_t *end, int nal_length_size)$/;"	f	file:
avccontext	libavcodec/vorbisdec.c	/^    AVCodecContext *avccontext;$/;"	m	struct:vorbis_context_s	file:
avclass	libavcodec/tiffenc.c	/^    AVClass *avclass;$/;"	m	struct:TiffEncoderContext	file:
avcodec_align_dimensions	libavcodec/utils.c	/^void avcodec_align_dimensions(AVCodecContext *s, int *width, int *height){$/;"	f
avcodec_align_dimensions2	libavcodec/utils.c	/^void avcodec_align_dimensions2(AVCodecContext *s, int *width, int *height, int linesize_align[4]){$/;"	f
avcodec_alloc_context	libavcodec/options.c	/^AVCodecContext *avcodec_alloc_context(void){$/;"	f
avcodec_alloc_context2	libavcodec/options.c	/^AVCodecContext *avcodec_alloc_context2(enum AVMediaType codec_type){$/;"	f
avcodec_alloc_context3	libavcodec/options.c	/^AVCodecContext *avcodec_alloc_context3(AVCodec *codec){$/;"	f
avcodec_alloc_frame	libavcodec/utils.c	/^AVFrame *avcodec_alloc_frame(void){$/;"	f
avcodec_channel_layout_num_channels	libavcodec/audioconvert.c	/^int avcodec_channel_layout_num_channels(int64_t channel_layout)$/;"	f
avcodec_close	libavcodec/utils.c	/^av_cold int avcodec_close(AVCodecContext *avctx)$/;"	f
avcodec_configuration	libavcodec/utils.c	/^const char *avcodec_configuration(void)$/;"	f
avcodec_copy_context	libavcodec/options.c	/^int avcodec_copy_context(AVCodecContext *dest, const AVCodecContext *src)$/;"	f
avcodec_decode_audio3	libavcodec/utils.c	/^int attribute_align_arg avcodec_decode_audio3(AVCodecContext *avctx, int16_t *samples,$/;"	f
avcodec_decode_subtitle2	libavcodec/utils.c	/^int avcodec_decode_subtitle2(AVCodecContext *avctx, AVSubtitle *sub,$/;"	f
avcodec_decode_video2	libavcodec/utils.c	/^int attribute_align_arg avcodec_decode_video2(AVCodecContext *avctx, AVFrame *picture,$/;"	f
avcodec_default_execute	libavcodec/utils.c	/^int avcodec_default_execute(AVCodecContext *c, int (*func)(AVCodecContext *c2, void *arg2),void *arg, int *ret, int count, int size){$/;"	f
avcodec_default_execute2	libavcodec/utils.c	/^int avcodec_default_execute2(AVCodecContext *c, int (*func)(AVCodecContext *c2, void *arg2, int jobnr, int threadnr),void *arg, int *ret, int count){$/;"	f
avcodec_default_free_buffers	libavcodec/utils.c	/^void avcodec_default_free_buffers(AVCodecContext *s){$/;"	f
avcodec_default_get_buffer	libavcodec/utils.c	/^int avcodec_default_get_buffer(AVCodecContext *s, AVFrame *pic){$/;"	f
avcodec_default_get_format	libavcodec/utils.c	/^enum PixelFormat avcodec_default_get_format(struct AVCodecContext *s, const enum PixelFormat *fmt){$/;"	f
avcodec_default_reget_buffer	libavcodec/utils.c	/^int avcodec_default_reget_buffer(AVCodecContext *s, AVFrame *pic){$/;"	f
avcodec_default_release_buffer	libavcodec/utils.c	/^void avcodec_default_release_buffer(AVCodecContext *s, AVFrame *pic){$/;"	f
avcodec_encode_audio	libavcodec/utils.c	/^int attribute_align_arg avcodec_encode_audio(AVCodecContext *avctx, uint8_t *buf, int buf_size,$/;"	f
avcodec_encode_subtitle	libavcodec/utils.c	/^int avcodec_encode_subtitle(AVCodecContext *avctx, uint8_t *buf, int buf_size,$/;"	f
avcodec_encode_video	libavcodec/utils.c	/^int attribute_align_arg avcodec_encode_video(AVCodecContext *avctx, uint8_t *buf, int buf_size,$/;"	f
avcodec_find_best_pix_fmt	libavcodec/imgconvert.c	/^enum PixelFormat avcodec_find_best_pix_fmt(int64_t pix_fmt_mask, enum PixelFormat src_pix_fmt,$/;"	f
avcodec_find_best_pix_fmt1	libavcodec/imgconvert.c	/^static enum PixelFormat avcodec_find_best_pix_fmt1(int64_t pix_fmt_mask,$/;"	f	file:
avcodec_find_decoder	libavcodec/utils.c	/^AVCodec *avcodec_find_decoder(enum CodecID id)$/;"	f
avcodec_find_decoder_by_name	libavcodec/utils.c	/^AVCodec *avcodec_find_decoder_by_name(const char *name)$/;"	f
avcodec_find_encoder	libavcodec/utils.c	/^AVCodec *avcodec_find_encoder(enum CodecID id)$/;"	f
avcodec_find_encoder_by_name	libavcodec/utils.c	/^AVCodec *avcodec_find_encoder_by_name(const char *name)$/;"	f
avcodec_flush_buffers	libavcodec/utils.c	/^void avcodec_flush_buffers(AVCodecContext *avctx)$/;"	f
avcodec_get_channel_layout	libavcodec/audioconvert.c	/^int64_t avcodec_get_channel_layout(const char *name)$/;"	f
avcodec_get_channel_layout_string	libavcodec/audioconvert.c	/^void avcodec_get_channel_layout_string(char *buf, int buf_size, int nb_channels, int64_t channel_layout)$/;"	f
avcodec_get_chroma_sub_sample	libavcodec/imgconvert.c	/^void avcodec_get_chroma_sub_sample(enum PixelFormat pix_fmt, int *h_shift, int *v_shift)$/;"	f
avcodec_get_context_defaults	libavcodec/options.c	/^void avcodec_get_context_defaults(AVCodecContext *s){$/;"	f
avcodec_get_context_defaults2	libavcodec/options.c	/^void avcodec_get_context_defaults2(AVCodecContext *s, enum AVMediaType codec_type){$/;"	f
avcodec_get_context_defaults3	libavcodec/options.c	/^int avcodec_get_context_defaults3(AVCodecContext *s, AVCodec *codec){$/;"	f
avcodec_get_edge_width	libavcodec/utils.c	/^unsigned avcodec_get_edge_width(void)$/;"	f
avcodec_get_frame_defaults	libavcodec/utils.c	/^void avcodec_get_frame_defaults(AVFrame *pic){$/;"	f
avcodec_get_pix_fmt_loss	libavcodec/imgconvert.c	/^int avcodec_get_pix_fmt_loss(enum PixelFormat dst_pix_fmt, enum PixelFormat src_pix_fmt,$/;"	f
avcodec_get_pix_fmt_name	libavcodec/imgconvert.c	/^const char *avcodec_get_pix_fmt_name(enum PixelFormat pix_fmt)$/;"	f
avcodec_get_sample_fmt	libavcodec/audioconvert.c	/^enum AVSampleFormat avcodec_get_sample_fmt(const char* name)$/;"	f
avcodec_get_sample_fmt_name	libavcodec/audioconvert.c	/^const char *avcodec_get_sample_fmt_name(int sample_fmt)$/;"	f
avcodec_get_subtitle_defaults	libavcodec/utils.c	/^static void avcodec_get_subtitle_defaults(AVSubtitle *sub)$/;"	f	file:
avcodec_guess_channel_layout	libavcodec/audioconvert.c	/^int64_t avcodec_guess_channel_layout(int nb_channels, enum CodecID codec_id, const char *fmt_name)$/;"	f
avcodec_init	libavcodec/utils.c	/^void avcodec_init(void)$/;"	f
avcodec_license	libavcodec/utils.c	/^const char *avcodec_license(void)$/;"	f
avcodec_open	libavcodec/utils.c	/^int attribute_align_arg avcodec_open(AVCodecContext *avctx, AVCodec *codec)$/;"	f
avcodec_open2	libavcodec/utils.c	/^int attribute_align_arg avcodec_open2(AVCodecContext *avctx, AVCodec *codec, AVDictionary **options)$/;"	f
avcodec_opts	cmdutils.c	/^AVCodecContext *avcodec_opts[AVMEDIA_TYPE_NB];$/;"	v
avcodec_opts	ffmpeg/cmdutils.c	/^AVCodecContext *avcodec_opts[AVMEDIA_TYPE_NB];$/;"	v
avcodec_pix_fmt_to_codec_tag	libavcodec/raw.c	/^unsigned int avcodec_pix_fmt_to_codec_tag(enum PixelFormat fmt)$/;"	f
avcodec_register	libavcodec/utils.c	/^void avcodec_register(AVCodec *codec)$/;"	f
avcodec_register_all	libavcodec/allcodecs.c	/^void avcodec_register_all(void)$/;"	f
avcodec_sample_fmt_string	libavcodec/audioconvert.c	/^void avcodec_sample_fmt_string (char *buf, int buf_size, int sample_fmt)$/;"	f
avcodec_set_dimensions	libavcodec/utils.c	/^void avcodec_set_dimensions(AVCodecContext *s, int width, int height){$/;"	f
avcodec_string	libavcodec/utils.c	/^void avcodec_string(char *buf, int buf_size, AVCodecContext *enc, int encode)$/;"	f
avcodec_thread_execute	libavcodec/pthread.c	/^static int avcodec_thread_execute(AVCodecContext *avctx, action_func* func, void *arg, int *ret, int job_count, int job_size)$/;"	f	file:
avcodec_thread_execute	libavcodec/w32thread.c	/^static int avcodec_thread_execute(AVCodecContext *s, int (*func)(AVCodecContext *c2, void *arg2),void *arg, int *ret, int count, int size){$/;"	f	file:
avcodec_thread_execute2	libavcodec/pthread.c	/^static int avcodec_thread_execute2(AVCodecContext *avctx, action_func2* func2, void *arg, int *ret, int job_count)$/;"	f	file:
avcodec_thread_execute2	libavcodec/w32thread.c	/^static int avcodec_thread_execute2(AVCodecContext *s, int (*func)(AVCodecContext *c2, void *arg2, int, int),void *arg, int *ret, int count){$/;"	f	file:
avcodec_thread_init	libavcodec/utils.c	/^int avcodec_thread_init(AVCodecContext *s, int thread_count)$/;"	f
avcodec_thread_park_workers	libavcodec/pthread.c	/^static av_always_inline void avcodec_thread_park_workers(ThreadContext *c, int thread_count)$/;"	f	file:
avcodec_version	libavcodec/utils.c	/^unsigned avcodec_version( void )$/;"	f
avctx	libavcodec/4xm.c	/^    AVCodecContext *avctx;$/;"	m	struct:FourXContext	file:
avctx	libavcodec/8bps.c	/^        AVCodecContext *avctx;$/;"	m	struct:EightBpsContext	file:
avctx	libavcodec/aac.h	/^    AVCodecContext *avctx;$/;"	m	struct:__anon246
avctx	libavcodec/aacpsy.h	/^    AVCodecContext *avctx;            \/\/\/< encoder context$/;"	m	struct:AACPsyContext
avctx	libavcodec/aasc.c	/^    AVCodecContext *avctx;$/;"	m	struct:AascContext	file:
avctx	libavcodec/ac3dec.h	/^    AVCodecContext *avctx;                  \/\/\/< parent context$/;"	m	struct:__anon88
avctx	libavcodec/ac3enc.h	/^    AVCodecContext *avctx;                  \/\/\/< parent AVCodecContext$/;"	m	struct:AC3EncodeContext
avctx	libavcodec/alac.c	/^    AVCodecContext *avctx;$/;"	m	struct:__anon266	file:
avctx	libavcodec/alacenc.c	/^    AVCodecContext *avctx;$/;"	m	struct:AlacEncodeContext	file:
avctx	libavcodec/alsdec.c	/^    AVCodecContext *avctx;$/;"	m	struct:__anon152	file:
avctx	libavcodec/apedec.c	/^    AVCodecContext *avctx;$/;"	m	struct:APEContext	file:
avctx	libavcodec/asv1.c	/^    AVCodecContext *avctx;$/;"	m	struct:ASV1Context	file:
avctx	libavcodec/aura.c	/^    AVCodecContext *avctx;$/;"	m	struct:AuraDecodeContext	file:
avctx	libavcodec/bfi.c	/^    AVCodecContext *avctx;$/;"	m	struct:BFIContext	file:
avctx	libavcodec/bink.c	/^    AVCodecContext *avctx;$/;"	m	struct:BinkContext	file:
avctx	libavcodec/cinepak.c	/^    AVCodecContext *avctx;$/;"	m	struct:CinepakContext	file:
avctx	libavcodec/cljr.c	/^    AVCodecContext *avctx;$/;"	m	struct:CLJRContext	file:
avctx	libavcodec/cook.c	/^    AVCodecContext*     avctx;$/;"	m	struct:cook	file:
avctx	libavcodec/crystalhd.c	/^    AVCodecContext *avctx;$/;"	m	struct:__anon268	file:
avctx	libavcodec/cyuv.c	/^    AVCodecContext *avctx;$/;"	m	struct:CyuvDecodeContext	file:
avctx	libavcodec/dca.c	/^    AVCodecContext *avctx;$/;"	m	struct:__anon93	file:
avctx	libavcodec/dnxhddec.c	/^    AVCodecContext *avctx;$/;"	m	struct:__anon154	file:
avctx	libavcodec/dsicinav.c	/^    AVCodecContext *avctx;$/;"	m	struct:CinAudioContext	file:
avctx	libavcodec/dsicinav.c	/^    AVCodecContext *avctx;$/;"	m	struct:CinVideoContext	file:
avctx	libavcodec/dv.c	/^    AVCodecContext  *avctx;$/;"	m	struct:DVVideoContext	file:
avctx	libavcodec/dxa.c	/^    AVCodecContext *avctx;$/;"	m	struct:DxaDecContext	file:
avctx	libavcodec/eacmv.c	/^    AVCodecContext *avctx;$/;"	m	struct:CmvContext	file:
avctx	libavcodec/eatgq.c	/^    AVCodecContext *avctx;$/;"	m	struct:TgqContext	file:
avctx	libavcodec/eatgv.c	/^    AVCodecContext *avctx;$/;"	m	struct:TgvContext	file:
avctx	libavcodec/ffv1.c	/^    AVCodecContext *avctx;$/;"	m	struct:FFV1Context	file:
avctx	libavcodec/flac_parser.c	/^    AVCodecContext *avctx;         \/**< codec context pointer for logging     *\/$/;"	m	struct:FLACParseContext	file:
avctx	libavcodec/flacdec.c	/^    AVCodecContext *avctx;                  \/\/\/< parent AVCodecContext$/;"	m	struct:FLACContext	file:
avctx	libavcodec/flacenc.c	/^    AVCodecContext *avctx;$/;"	m	struct:FlacEncodeContext	file:
avctx	libavcodec/flashsv.c	/^    AVCodecContext *avctx;$/;"	m	struct:FlashSVContext	file:
avctx	libavcodec/flashsv2enc.c	/^    AVCodecContext *avctx;$/;"	m	struct:FlashSV2Context	file:
avctx	libavcodec/flashsvenc.c	/^    AVCodecContext *avctx;$/;"	m	struct:FlashSVContext	file:
avctx	libavcodec/flicvideo.c	/^    AVCodecContext *avctx;$/;"	m	struct:FlicDecodeContext	file:
avctx	libavcodec/fraps.c	/^    AVCodecContext *avctx;$/;"	m	struct:FrapsContext	file:
avctx	libavcodec/gifdec.c	/^  AVCodecContext* avctx;$/;"	m	struct:GifState	file:
avctx	libavcodec/huffyuv.c	/^    AVCodecContext *avctx;$/;"	m	struct:HYuvContext	file:
avctx	libavcodec/idcinvideo.c	/^    AVCodecContext *avctx;$/;"	m	struct:IdcinContext	file:
avctx	libavcodec/indeo2.c	/^    AVCodecContext *avctx;$/;"	m	struct:Ir2Context	file:
avctx	libavcodec/indeo3.c	/^    AVCodecContext *avctx;$/;"	m	struct:Indeo3DecodeContext	file:
avctx	libavcodec/interplayvideo.c	/^    AVCodecContext *avctx;$/;"	m	struct:IpvideoContext	file:
avctx	libavcodec/j2kdec.c	/^    AVCodecContext *avctx;$/;"	m	struct:__anon98	file:
avctx	libavcodec/j2kenc.c	/^    AVCodecContext *avctx;$/;"	m	struct:__anon63	file:
avctx	libavcodec/jpegls.h	/^    AVCodecContext *avctx;$/;"	m	struct:JpeglsContext
avctx	libavcodec/kgv1dec.c	/^    AVCodecContext *avctx;$/;"	m	struct:__anon115	file:
avctx	libavcodec/kmvc.c	/^    AVCodecContext *avctx;$/;"	m	struct:KmvcContext	file:
avctx	libavcodec/lagarith.c	/^    AVCodecContext *avctx;$/;"	m	struct:LagarithContext	file:
avctx	libavcodec/lagarithrac.h	/^    AVCodecContext *avctx;$/;"	m	struct:lag_rac
avctx	libavcodec/lclenc.c	/^    AVCodecContext *avctx;$/;"	m	struct:LclEncContext	file:
avctx	libavcodec/loco.c	/^    AVCodecContext *avctx;$/;"	m	struct:LOCOContext	file:
avctx	libavcodec/mdec.c	/^    AVCodecContext *avctx;$/;"	m	struct:MDECContext	file:
avctx	libavcodec/mimic.c	/^    AVCodecContext *avctx;$/;"	m	struct:__anon282	file:
avctx	libavcodec/mjpegdec.h	/^    AVCodecContext *avctx;$/;"	m	struct:MJpegDecodeContext
avctx	libavcodec/mlpdec.c	/^    AVCodecContext *avctx;$/;"	m	struct:MLPDecodeContext	file:
avctx	libavcodec/mmvideo.c	/^    AVCodecContext *avctx;$/;"	m	struct:MmContext	file:
avctx	libavcodec/motionpixels.c	/^    AVCodecContext *avctx;$/;"	m	struct:MotionPixelsContext	file:
avctx	libavcodec/mpegaudiodec.c	/^    AVCodecContext* avctx;$/;"	m	struct:MPADecodeContext	file:
avctx	libavcodec/mpegvideo.h	/^    AVCodecContext *avctx;$/;"	m	struct:MotionEstContext
avctx	libavcodec/mpegvideo.h	/^    struct AVCodecContext *avctx;$/;"	m	struct:MpegEncContext	typeref:struct:MpegEncContext::AVCodecContext
avctx	libavcodec/msrle.c	/^    AVCodecContext *avctx;$/;"	m	struct:MsrleContext	file:
avctx	libavcodec/msvideo1.c	/^    AVCodecContext *avctx;$/;"	m	struct:Msvideo1Context	file:
avctx	libavcodec/msvideo1enc.c	/^    AVCodecContext *avctx;$/;"	m	struct:Msvideo1EncContext	file:
avctx	libavcodec/nellymoserdec.c	/^    AVCodecContext* avctx;$/;"	m	struct:NellyMoserDecodeContext	file:
avctx	libavcodec/nellymoserenc.c	/^    AVCodecContext  *avctx;$/;"	m	struct:NellyMoserEncodeContext	file:
avctx	libavcodec/psymodel.c	/^    AVCodecContext *avctx;$/;"	m	struct:FFPsyPreprocessContext	file:
avctx	libavcodec/psymodel.h	/^    AVCodecContext *avctx;            \/\/\/< encoder context$/;"	m	struct:FFPsyContext
avctx	libavcodec/pthread.c	/^    AVCodecContext *avctx;          \/\/\/< Context used to decode packets passed to this thread.$/;"	m	struct:PerThreadContext	file:
avctx	libavcodec/qdrw.c	/^    AVCodecContext *avctx;$/;"	m	struct:QdrawContext	file:
avctx	libavcodec/qpeg.c	/^    AVCodecContext *avctx;$/;"	m	struct:QpegContext	file:
avctx	libavcodec/qtrle.c	/^    AVCodecContext *avctx;$/;"	m	struct:QtrleContext	file:
avctx	libavcodec/qtrleenc.c	/^    AVCodecContext *avctx;$/;"	m	struct:QtrleEncContext	file:
avctx	libavcodec/ra144.h	/^    AVCodecContext *avctx;$/;"	m	struct:__anon167
avctx	libavcodec/rl2.c	/^    AVCodecContext *avctx;$/;"	m	struct:Rl2Context	file:
avctx	libavcodec/roqvideo.h	/^    AVCodecContext *avctx;$/;"	m	struct:RoqContext
avctx	libavcodec/rpza.c	/^    AVCodecContext *avctx;$/;"	m	struct:RpzaContext	file:
avctx	libavcodec/shorten.c	/^    AVCodecContext *avctx;$/;"	m	struct:ShortenContext	file:
avctx	libavcodec/sipr.h	/^    AVCodecContext *avctx;$/;"	m	struct:__anon235
avctx	libavcodec/smacker.c	/^    AVCodecContext *avctx;$/;"	m	struct:SmackVContext	file:
avctx	libavcodec/smc.c	/^    AVCodecContext *avctx;$/;"	m	struct:SmcContext	file:
avctx	libavcodec/snow.c	/^    AVCodecContext *avctx;$/;"	m	struct:SnowContext	file:
avctx	libavcodec/srtenc.c	/^    AVCodecContext *avctx;$/;"	m	struct:__anon139	file:
avctx	libavcodec/svq1enc.c	/^    AVCodecContext *avctx;$/;"	m	struct:SVQ1Context	file:
avctx	libavcodec/tiertexseqv.c	/^    AVCodecContext *avctx;$/;"	m	struct:SeqVideoContext	file:
avctx	libavcodec/tiff.c	/^    AVCodecContext *avctx;$/;"	m	struct:TiffContext	file:
avctx	libavcodec/tiffenc.c	/^    AVCodecContext *avctx;$/;"	m	struct:TiffEncoderContext	file:
avctx	libavcodec/truemotion1.c	/^    AVCodecContext *avctx;$/;"	m	struct:TrueMotion1Context	file:
avctx	libavcodec/truemotion2.c	/^    AVCodecContext *avctx;$/;"	m	struct:TM2Context	file:
avctx	libavcodec/tscc.c	/^    AVCodecContext *avctx;$/;"	m	struct:TsccContext	file:
avctx	libavcodec/tta.c	/^    AVCodecContext *avctx;$/;"	m	struct:TTAContext	file:
avctx	libavcodec/twinvq.c	/^    AVCodecContext *avctx;$/;"	m	struct:TwinContext	file:
avctx	libavcodec/ulti.c	/^    AVCodecContext *avctx;$/;"	m	struct:UltimotionDecodeContext	file:
avctx	libavcodec/vb.c	/^    AVCodecContext *avctx;$/;"	m	struct:VBDecContext	file:
avctx	libavcodec/vcr1.c	/^    AVCodecContext *avctx;$/;"	m	struct:VCR1Context	file:
avctx	libavcodec/vmdav.c	/^    AVCodecContext *avctx;$/;"	m	struct:VmdAudioContext	file:
avctx	libavcodec/vmdav.c	/^    AVCodecContext *avctx;$/;"	m	struct:VmdVideoContext	file:
avctx	libavcodec/vmnc.c	/^    AVCodecContext *avctx;$/;"	m	struct:VmncContext	file:
avctx	libavcodec/vp3.c	/^    AVCodecContext *avctx;$/;"	m	struct:Vp3DecodeContext	file:
avctx	libavcodec/vp56.h	/^    AVCodecContext *avctx;$/;"	m	struct:vp56_context
avctx	libavcodec/vp8.h	/^    AVCodecContext *avctx;$/;"	m	struct:__anon182
avctx	libavcodec/vqavideo.c	/^    AVCodecContext *avctx;$/;"	m	struct:VqaContext	file:
avctx	libavcodec/w32thread.c	/^    AVCodecContext *avctx;$/;"	m	struct:ThreadContext	file:
avctx	libavcodec/wavpack.c	/^    AVCodecContext *avctx;$/;"	m	struct:WavpackContext	file:
avctx	libavcodec/wavpack.c	/^    AVCodecContext *avctx;$/;"	m	struct:WavpackFrameContext	file:
avctx	libavcodec/wma.h	/^    AVCodecContext* avctx;$/;"	m	struct:WMACodecContext
avctx	libavcodec/wmaprodec.c	/^    AVCodecContext*  avctx;                         \/\/\/< codec context for av_log$/;"	m	struct:WMAProDecodeCtx	file:
avctx	libavcodec/wnv1.c	/^    AVCodecContext *avctx;$/;"	m	struct:WNV1Context	file:
avctx	libavcodec/xan.c	/^    AVCodecContext *avctx;$/;"	m	struct:XanContext	file:
avctx	libavcodec/xl.c	/^    AVCodecContext *avctx;$/;"	m	struct:VideoXLContext	file:
avctx	libavcodec/xxan.c	/^    AVCodecContext *avctx;$/;"	m	struct:XanContext	file:
avctx	libavcodec/yop.c	/^    AVCodecContext *avctx;$/;"	m	struct:YopDecContext	file:
avctx	libavcodec/zmbv.c	/^    AVCodecContext *avctx;$/;"	m	struct:ZmbvContext	file:
avctx	libavcodec/zmbvenc.c	/^    AVCodecContext *avctx;$/;"	m	struct:ZmbvEncContext	file:
avctx	libavfilter/libmpcodecs/vf_screenshot.c	/^    AVCodecContext *avctx;$/;"	m	struct:vf_priv_s	file:
avctx	libavfilter/libmpcodecs/vf_spp.c	/^        AVCodecContext *avctx;$/;"	m	struct:vf_priv_s	file:
avctx_enc	libavfilter/libmpcodecs/vf_mcdeint.c	/^    AVCodecContext *avctx_enc;$/;"	m	struct:vf_priv_s	file:
avctx_enc	libavfilter/libmpcodecs/vf_uspp.c	/^    AVCodecContext *avctx_enc[BLOCK*BLOCK];$/;"	m	struct:vf_priv_s	file:
avdevice_configuration	libavdevice/avdevice.c	/^const char * avdevice_configuration(void)$/;"	f
avdevice_license	libavdevice/avdevice.c	/^const char * avdevice_license(void)$/;"	f
avdevice_register_all	libavdevice/alldevices.c	/^void avdevice_register_all(void)$/;"	f
avdevice_version	libavdevice/avdevice.c	/^unsigned avdevice_version(void)$/;"	f
average_quantized_coeffs	libavcodec/qdm2.c	/^static void average_quantized_coeffs (QDM2Context *q)$/;"	f	file:
averaged	libavfilter/libmpcodecs/vf_noise.c	/^        int averaged;$/;"	m	struct:FilterParam	file:
avf	libavformat/nut.h	/^    AVFormatContext *avf;$/;"	m	struct:__anon494
avf_sdp_create	libavformat/sdp.c	/^int avf_sdp_create(AVFormatContext *ac[], int n_files, char *buff, int size)$/;"	f
avfctx	libavfilter/vf_mp.c	/^    AVFilterContext *avfctx;$/;"	m	struct:__anon47	file:
avfilter	ffmpeg.c	/^    char *avfilter;$/;"	m	struct:AVOutputStream	file:
avfilter	ffmpeg/ffmpeg.c	/^    char *avfilter;$/;"	m	struct:AVOutputStream	file:
avfilter_add_format	libavfilter/formats.c	/^int avfilter_add_format(AVFilterFormats **avff, int64_t fmt)$/;"	f
avfilter_af_anull	libavfilter/af_anull.c	/^AVFilter avfilter_af_anull = {$/;"	v
avfilter_all_channel_layouts	libavfilter/formats.c	/^AVFilterFormats *avfilter_all_channel_layouts(void)$/;"	f
avfilter_all_formats	libavfilter/formats.c	/^AVFilterFormats *avfilter_all_formats(enum AVMediaType type)$/;"	f
avfilter_asink_anullsink	libavfilter/asink_anullsink.c	/^AVFilter avfilter_asink_anullsink = {$/;"	v
avfilter_asrc_anullsrc	libavfilter/asrc_anullsrc.c	/^AVFilter avfilter_asrc_anullsrc = {$/;"	v
avfilter_class	libavfilter/avfilter.c	/^static const AVClass avfilter_class = {$/;"	v	file:
avfilter_config_links	libavfilter/avfilter.c	/^int avfilter_config_links(AVFilterContext *filter)$/;"	f
avfilter_configuration	libavfilter/avfilter.c	/^const char *avfilter_configuration(void)$/;"	f
avfilter_copy_buffer_ref_props	libavfilter/avfilter.h	/^static inline void avfilter_copy_buffer_ref_props(AVFilterBufferRef *dst, AVFilterBufferRef *src)$/;"	f
avfilter_copy_frame_props	libavfilter/avcodec.c	/^void avfilter_copy_frame_props(AVFilterBufferRef *dst, const AVFrame *src)$/;"	f
avfilter_default_config_output_link	libavfilter/defaults.c	/^int avfilter_default_config_output_link(AVFilterLink *link)$/;"	f
avfilter_default_draw_slice	libavfilter/defaults.c	/^void avfilter_default_draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir)$/;"	f
avfilter_default_end_frame	libavfilter/defaults.c	/^void avfilter_default_end_frame(AVFilterLink *inlink)$/;"	f
avfilter_default_filter_samples	libavfilter/defaults.c	/^void avfilter_default_filter_samples(AVFilterLink *inlink, AVFilterBufferRef *samplesref)$/;"	f
avfilter_default_get_audio_buffer	libavfilter/defaults.c	/^AVFilterBufferRef *avfilter_default_get_audio_buffer(AVFilterLink *link, int perms,$/;"	f
avfilter_default_get_video_buffer	libavfilter/defaults.c	/^AVFilterBufferRef *avfilter_default_get_video_buffer(AVFilterLink *link, int perms, int w, int h)$/;"	f
avfilter_default_query_formats	libavfilter/defaults.c	/^int avfilter_default_query_formats(AVFilterContext *ctx)$/;"	f
avfilter_default_start_frame	libavfilter/defaults.c	/^void avfilter_default_start_frame(AVFilterLink *inlink, AVFilterBufferRef *picref)$/;"	f
avfilter_draw_slice	libavfilter/avfilter.c	/^void avfilter_draw_slice(AVFilterLink *link, int y, int h, int slice_dir)$/;"	f
avfilter_end_frame	libavfilter/avfilter.c	/^void avfilter_end_frame(AVFilterLink *link)$/;"	f
avfilter_fill_frame_from_video_buffer_ref	libavfilter/avcodec.c	/^int avfilter_fill_frame_from_video_buffer_ref(AVFrame *frame,$/;"	f
avfilter_filter_samples	libavfilter/avfilter.c	/^void avfilter_filter_samples(AVFilterLink *link, AVFilterBufferRef *samplesref)$/;"	f
avfilter_formats_changeref	libavfilter/formats.c	/^void avfilter_formats_changeref(AVFilterFormats **oldref,$/;"	f
avfilter_formats_ref	libavfilter/formats.c	/^void avfilter_formats_ref(AVFilterFormats *f, AVFilterFormats **ref)$/;"	f
avfilter_formats_unref	libavfilter/formats.c	/^void avfilter_formats_unref(AVFilterFormats **ref)$/;"	f
avfilter_free	libavfilter/avfilter.c	/^void avfilter_free(AVFilterContext *filter)$/;"	f
avfilter_get_audio_buffer	libavfilter/avfilter.c	/^AVFilterBufferRef *avfilter_get_audio_buffer(AVFilterLink *link, int perms,$/;"	f
avfilter_get_audio_buffer_ref_from_arrays	libavfilter/avfilter.c	/^avfilter_get_audio_buffer_ref_from_arrays(uint8_t *data[8], int linesize[8], int perms,$/;"	f
avfilter_get_by_name	libavfilter/avfilter.c	/^AVFilter *avfilter_get_by_name(const char *name)$/;"	f
avfilter_get_video_buffer	libavfilter/avfilter.c	/^AVFilterBufferRef *avfilter_get_video_buffer(AVFilterLink *link, int perms, int w, int h)$/;"	f
avfilter_get_video_buffer_ref_from_arrays	libavfilter/avfilter.c	/^avfilter_get_video_buffer_ref_from_arrays(uint8_t * const data[4], const int linesize[4], int perms,$/;"	f
avfilter_get_video_buffer_ref_from_frame	libavfilter/avcodec.c	/^AVFilterBufferRef *avfilter_get_video_buffer_ref_from_frame(const AVFrame *frame,$/;"	f
avfilter_graph_add_filter	libavfilter/avfiltergraph.c	/^int avfilter_graph_add_filter(AVFilterGraph *graph, AVFilterContext *filter)$/;"	f
avfilter_graph_alloc	libavfilter/avfiltergraph.c	/^AVFilterGraph *avfilter_graph_alloc(void)$/;"	f
avfilter_graph_config	libavfilter/avfiltergraph.c	/^int avfilter_graph_config(AVFilterGraph *graphctx, void *log_ctx)$/;"	f
avfilter_graph_create_filter	libavfilter/avfiltergraph.c	/^int avfilter_graph_create_filter(AVFilterContext **filt_ctx, AVFilter *filt,$/;"	f
avfilter_graph_free	libavfilter/avfiltergraph.c	/^void avfilter_graph_free(AVFilterGraph **graph)$/;"	f
avfilter_graph_get_filter	libavfilter/avfiltergraph.c	/^AVFilterContext *avfilter_graph_get_filter(AVFilterGraph *graph, char *name)$/;"	f
avfilter_graph_parse	libavfilter/graphparser.c	/^int avfilter_graph_parse(AVFilterGraph *graph, const char *filters,$/;"	f
avfilter_init_filter	libavfilter/avfilter.c	/^int avfilter_init_filter(AVFilterContext *filter, const char *args, void *opaque)$/;"	f
avfilter_inout_alloc	libavfilter/graphparser.c	/^AVFilterInOut *avfilter_inout_alloc(void)$/;"	f
avfilter_inout_free	libavfilter/graphparser.c	/^void avfilter_inout_free(AVFilterInOut **inout)$/;"	f
avfilter_insert_filter	libavfilter/avfilter.c	/^int avfilter_insert_filter(AVFilterLink *link, AVFilterContext *filt,$/;"	f
avfilter_insert_inpad	libavfilter/avfilter.h	/^static inline void avfilter_insert_inpad(AVFilterContext *f, unsigned index,$/;"	f
avfilter_insert_outpad	libavfilter/avfilter.h	/^static inline void avfilter_insert_outpad(AVFilterContext *f, unsigned index,$/;"	f
avfilter_insert_pad	libavfilter/avfilter.c	/^void avfilter_insert_pad(unsigned idx, unsigned *count, size_t padidx_off,$/;"	f
avfilter_license	libavfilter/avfilter.c	/^const char *avfilter_license(void)$/;"	f
avfilter_link	libavfilter/avfilter.c	/^int avfilter_link(AVFilterContext *src, unsigned srcpad,$/;"	f
avfilter_link_free	libavfilter/avfilter.c	/^void avfilter_link_free(AVFilterLink **link)$/;"	f
avfilter_make_format64_list	libavfilter/formats.c	/^AVFilterFormats *avfilter_make_format64_list(const int64_t *fmts)$/;"	f
avfilter_make_format_list	libavfilter/formats.c	/^AVFilterFormats *avfilter_make_format_list(const int *fmts)$/;"	f
avfilter_merge_formats	libavfilter/formats.c	/^AVFilterFormats *avfilter_merge_formats(AVFilterFormats *a, AVFilterFormats *b)$/;"	f
avfilter_null_draw_slice	libavfilter/defaults.c	/^void avfilter_null_draw_slice(AVFilterLink *link, int y, int h, int slice_dir)$/;"	f
avfilter_null_end_frame	libavfilter/defaults.c	/^void avfilter_null_end_frame(AVFilterLink *link)$/;"	f
avfilter_null_filter_samples	libavfilter/defaults.c	/^void avfilter_null_filter_samples(AVFilterLink *link, AVFilterBufferRef *samplesref)$/;"	f
avfilter_null_get_audio_buffer	libavfilter/defaults.c	/^AVFilterBufferRef *avfilter_null_get_audio_buffer(AVFilterLink *link, int perms,$/;"	f
avfilter_null_get_video_buffer	libavfilter/defaults.c	/^AVFilterBufferRef *avfilter_null_get_video_buffer(AVFilterLink *link, int perms, int w, int h)$/;"	f
avfilter_null_start_frame	libavfilter/defaults.c	/^void avfilter_null_start_frame(AVFilterLink *link, AVFilterBufferRef *picref)$/;"	f
avfilter_open	libavfilter/avfilter.c	/^int avfilter_open(AVFilterContext **filter_ctx, AVFilter *filter, const char *inst_name)$/;"	f
avfilter_poll_frame	libavfilter/avfilter.c	/^int avfilter_poll_frame(AVFilterLink *link)$/;"	f
avfilter_ref_buffer	libavfilter/avfilter.c	/^AVFilterBufferRef *avfilter_ref_buffer(AVFilterBufferRef *ref, int pmask)$/;"	f
avfilter_register	libavfilter/avfilter.c	/^int avfilter_register(AVFilter *filter)$/;"	f
avfilter_register_all	libavfilter/allfilters.c	/^void avfilter_register_all(void)$/;"	f
avfilter_request_frame	libavfilter/avfilter.c	/^int avfilter_request_frame(AVFilterLink *link)$/;"	f
avfilter_set_common_channel_layouts	libavfilter/defaults.c	/^void avfilter_set_common_channel_layouts(AVFilterContext *ctx, AVFilterFormats *formats)$/;"	f
avfilter_set_common_pixel_formats	libavfilter/defaults.c	/^void avfilter_set_common_pixel_formats(AVFilterContext *ctx, AVFilterFormats *formats)$/;"	f
avfilter_set_common_sample_formats	libavfilter/defaults.c	/^void avfilter_set_common_sample_formats(AVFilterContext *ctx, AVFilterFormats *formats)$/;"	f
avfilter_start_frame	libavfilter/avfilter.c	/^void avfilter_start_frame(AVFilterLink *link, AVFilterBufferRef *picref)$/;"	f
avfilter_uninit	libavfilter/avfilter.c	/^void avfilter_uninit(void)$/;"	f
avfilter_unref_buffer	libavfilter/avfilter.c	/^void avfilter_unref_buffer(AVFilterBufferRef *ref)$/;"	f
avfilter_version	libavfilter/avfilter.c	/^unsigned avfilter_version(void) {$/;"	f
avfilter_vf_blackframe	libavfilter/vf_blackframe.c	/^AVFilter avfilter_vf_blackframe = {$/;"	v
avfilter_vf_copy	libavfilter/vf_copy.c	/^AVFilter avfilter_vf_copy = {$/;"	v
avfilter_vf_crop	libavfilter/vf_crop.c	/^AVFilter avfilter_vf_crop = {$/;"	v
avfilter_vf_cropdetect	libavfilter/vf_cropdetect.c	/^AVFilter avfilter_vf_cropdetect = {$/;"	v
avfilter_vf_drawbox	libavfilter/vf_drawbox.c	/^AVFilter avfilter_vf_drawbox = {$/;"	v
avfilter_vf_drawtext	libavfilter/vf_drawtext.c	/^AVFilter avfilter_vf_drawtext = {$/;"	v
avfilter_vf_fade	libavfilter/vf_fade.c	/^AVFilter avfilter_vf_fade = {$/;"	v
avfilter_vf_fieldorder	libavfilter/vf_fieldorder.c	/^AVFilter avfilter_vf_fieldorder = {$/;"	v
avfilter_vf_fifo	libavfilter/vf_fifo.c	/^AVFilter avfilter_vf_fifo = {$/;"	v
avfilter_vf_format	libavfilter/vf_format.c	/^AVFilter avfilter_vf_format = {$/;"	v
avfilter_vf_frei0r	libavfilter/vf_frei0r.c	/^AVFilter avfilter_vf_frei0r = {$/;"	v
avfilter_vf_gradfun	libavfilter/vf_gradfun.c	/^AVFilter avfilter_vf_gradfun = {$/;"	v
avfilter_vf_hflip	libavfilter/vf_hflip.c	/^AVFilter avfilter_vf_hflip = {$/;"	v
avfilter_vf_hqdn3d	libavfilter/vf_hqdn3d.c	/^AVFilter avfilter_vf_hqdn3d = {$/;"	v
avfilter_vf_mp	libavfilter/vf_mp.c	/^AVFilter avfilter_vf_mp = {$/;"	v
avfilter_vf_noformat	libavfilter/vf_format.c	/^AVFilter avfilter_vf_noformat = {$/;"	v
avfilter_vf_null	libavfilter/vf_null.c	/^AVFilter avfilter_vf_null = {$/;"	v
avfilter_vf_ocv	libavfilter/vf_libopencv.c	/^AVFilter avfilter_vf_ocv = {$/;"	v
avfilter_vf_overlay	libavfilter/vf_overlay.c	/^AVFilter avfilter_vf_overlay = {$/;"	v
avfilter_vf_pad	libavfilter/vf_pad.c	/^AVFilter avfilter_vf_pad = {$/;"	v
avfilter_vf_pixdesctest	libavfilter/vf_pixdesctest.c	/^AVFilter avfilter_vf_pixdesctest = {$/;"	v
avfilter_vf_scale	libavfilter/vf_scale.c	/^AVFilter avfilter_vf_scale = {$/;"	v
avfilter_vf_select	libavfilter/vf_select.c	/^AVFilter avfilter_vf_select = {$/;"	v
avfilter_vf_setdar	libavfilter/vf_aspect.c	/^AVFilter avfilter_vf_setdar = {$/;"	v
avfilter_vf_setpts	libavfilter/vf_setpts.c	/^AVFilter avfilter_vf_setpts = {$/;"	v
avfilter_vf_setsar	libavfilter/vf_aspect.c	/^AVFilter avfilter_vf_setsar = {$/;"	v
avfilter_vf_settb	libavfilter/vf_settb.c	/^AVFilter avfilter_vf_settb = {$/;"	v
avfilter_vf_showinfo	libavfilter/vf_showinfo.c	/^AVFilter avfilter_vf_showinfo = {$/;"	v
avfilter_vf_slicify	libavfilter/vf_slicify.c	/^AVFilter avfilter_vf_slicify = {$/;"	v
avfilter_vf_split	libavfilter/vf_split.c	/^AVFilter avfilter_vf_split = {$/;"	v
avfilter_vf_transpose	libavfilter/vf_transpose.c	/^AVFilter avfilter_vf_transpose = {$/;"	v
avfilter_vf_unsharp	libavfilter/vf_unsharp.c	/^AVFilter avfilter_vf_unsharp = {$/;"	v
avfilter_vf_vflip	libavfilter/vf_vflip.c	/^AVFilter avfilter_vf_vflip = {$/;"	v
avfilter_vf_yadif	libavfilter/vf_yadif.c	/^AVFilter avfilter_vf_yadif = {$/;"	v
avfilter_vsink_buffersink	libavfilter/vsink_buffer.c	/^AVFilter avfilter_vsink_buffersink = {$/;"	v
avfilter_vsink_nullsink	libavfilter/vsink_nullsink.c	/^AVFilter avfilter_vsink_nullsink = {$/;"	v
avfilter_vsrc_buffer	libavfilter/vsrc_buffer.c	/^AVFilter avfilter_vsrc_buffer = {$/;"	v
avfilter_vsrc_color	libavfilter/vsrc_color.c	/^AVFilter avfilter_vsrc_color = {$/;"	v
avfilter_vsrc_frei0r_src	libavfilter/vf_frei0r.c	/^AVFilter avfilter_vsrc_frei0r_src = {$/;"	v
avfilter_vsrc_movie	libavfilter/vsrc_movie.c	/^AVFilter avfilter_vsrc_movie = {$/;"	v
avfilter_vsrc_nullsrc	libavfilter/vsrc_nullsrc.c	/^AVFilter avfilter_vsrc_nullsrc = {$/;"	v
avflag	libavformat/bfi.c	/^    int avflag;$/;"	m	struct:BFIContext	file:
avformat_alloc_context	libavformat/options.c	/^AVFormatContext *avformat_alloc_context(void)$/;"	f
avformat_alloc_output_context	libavformat/utils.c	/^AVFormatContext *avformat_alloc_output_context(const char *format,$/;"	f
avformat_alloc_output_context2	libavformat/utils.c	/^int avformat_alloc_output_context2(AVFormatContext **avctx, AVOutputFormat *oformat,$/;"	f
avformat_configuration	libavformat/utils.c	/^const char *avformat_configuration(void)$/;"	f
avformat_find_stream_info	libavformat/utils.c	/^int avformat_find_stream_info(AVFormatContext *ic, AVDictionary **options)$/;"	f
avformat_free_context	libavformat/utils.c	/^void avformat_free_context(AVFormatContext *s)$/;"	f
avformat_get_context_defaults	libavformat/options.c	/^static void avformat_get_context_defaults(AVFormatContext *s)$/;"	f	file:
avformat_license	libavformat/utils.c	/^const char *avformat_license(void)$/;"	f
avformat_open_input	libavformat/utils.c	/^int avformat_open_input(AVFormatContext **ps, const char *filename, AVInputFormat *fmt, AVDictionary **options)$/;"	f
avformat_opts	cmdutils.c	/^AVFormatContext *avformat_opts;$/;"	v
avformat_opts	ffmpeg/cmdutils.c	/^AVFormatContext *avformat_opts;$/;"	v
avformat_seek_file	libavformat/utils.c	/^int avformat_seek_file(AVFormatContext *s, int stream_index, int64_t min_ts, int64_t ts, int64_t max_ts, int flags)$/;"	f
avformat_version	libavformat/utils.c	/^unsigned avformat_version(void)$/;"	f
avformat_write_header	libavformat/utils.c	/^int avformat_write_header(AVFormatContext *s, AVDictionary **options)$/;"	f
avg	libavcodec/apedec.c	/^    int avg;$/;"	m	struct:APEFilter	file:
avg	libavcodec/msvideo1enc.c	/^    int avg[3];$/;"	m	struct:Msvideo1EncContext	file:
avg	libavcodec/sh4/dsputil_align.c	51;"	d	file:
avg2	libavcodec/alpha/dsputil_alpha.c	/^static inline uint64_t avg2(uint64_t a, uint64_t b)$/;"	f	file:
avg2	libavcodec/alpha/motion_est_alpha.c	/^static inline uint64_t avg2(uint64_t a, uint64_t b)$/;"	f	file:
avg2	libavcodec/dsputil.c	544;"	d	file:
avg2	libavcodec/sh4/qpel.c	323;"	d	file:
avg2	libavcodec/vc1dsp.c	691;"	d	file:
avg2_no_rnd	libavcodec/alpha/dsputil_alpha.c	/^static inline uint64_t avg2_no_rnd(uint64_t a, uint64_t b)$/;"	f	file:
avg4	libavcodec/alpha/motion_est_alpha.c	/^static inline uint64_t avg4(uint64_t l1, uint64_t l2, uint64_t l3, uint64_t l4)$/;"	f	file:
avg4	libavcodec/dsputil.c	545;"	d	file:
avg4	libavcodec/sh4/qpel.c	324;"	d	file:
avg_2tap_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func avg_2tap_qpel_pixels_tab[4][16];$/;"	m	struct:DSPContext
avg_bits_per_pixel	libavcodec/imgconvert.c	/^static int avg_bits_per_pixel(enum PixelFormat pix_fmt)$/;"	f	file:
avg_cavs_qpel_pixels_tab	libavcodec/cavsdsp.h	/^    qpel_mc_func avg_cavs_qpel_pixels_tab[2][16];$/;"	m	struct:CAVSDSPContext
avg_frame_rate	libavformat/avformat.h	/^    AVRational avg_frame_rate;$/;"	m	struct:AVStream
avg_frame_size	ffserver.c	/^    float avg_frame_size;   \/* frame size averaged over last frames with exponential mean *\/$/;"	m	struct:FeedData	file:
avg_h264_chroma_pixels_tab	libavcodec/dsputil.h	/^    h264_chroma_mc_func avg_h264_chroma_pixels_tab[3];$/;"	m	struct:DSPContext
avg_h264_qpel16_h_lowpass_l2_sse2	libavcodec/x86/h264_qpel_mmx.c	1023;"	d	file:
avg_h264_qpel16_mc00_8_c	libavcodec/dsputil_template.c	1354;"	d	file:
avg_h264_qpel16_mc00_sse2	libavcodec/x86/h264_qpel_mmx.c	/^static void avg_h264_qpel16_mc00_sse2 (uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
avg_h264_qpel16_v_lowpass_ssse3	libavcodec/x86/h264_qpel_mmx.c	1028;"	d	file:
avg_h264_qpel8_h_lowpass_l2_sse2	libavcodec/x86/h264_qpel_mmx.c	1021;"	d	file:
avg_h264_qpel8_mc00_8_c	libavcodec/dsputil_template.c	1352;"	d	file:
avg_h264_qpel8_mc00_sse2	libavcodec/x86/h264_qpel_mmx.c	1046;"	d	file:
avg_h264_qpel8_v_lowpass_ssse3	libavcodec/x86/h264_qpel_mmx.c	1026;"	d	file:
avg_h264_qpel8or16_hv2_lowpass_sse2	libavcodec/x86/h264_qpel_mmx.c	1031;"	d	file:
avg_h264_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func avg_h264_qpel_pixels_tab[4][16];$/;"	m	struct:DSPContext
avg_no_rnd_pixels16_c	libavcodec/sh4/dsputil_align.c	324;"	d	file:
avg_no_rnd_pixels16_o	libavcodec/sh4/dsputil_align.c	315;"	d	file:
avg_no_rnd_pixels8_c	libavcodec/sh4/dsputil_align.c	323;"	d	file:
avg_no_rnd_pixels8_o	libavcodec/sh4/dsputil_align.c	314;"	d	file:
avg_no_rnd_pixels_tab	libavcodec/dsputil.h	/^    op_pixels_func avg_no_rnd_pixels_tab[4][4];$/;"	m	struct:DSPContext
avg_no_rnd_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func avg_no_rnd_qpel_pixels_tab[2][16];$/;"	m	struct:DSPContext
avg_no_rnd_vc1_chroma_mc8_c	libavcodec/vc1dsp.c	/^static void avg_no_rnd_vc1_chroma_mc8_c(uint8_t *dst\/*align 8*\/, uint8_t *src\/*align 1*\/, int stride, int h, int x, int y){$/;"	f	file:
avg_no_rnd_vc1_chroma_pixels_tab	libavcodec/vc1dsp.h	/^    h264_chroma_mc_func avg_no_rnd_vc1_chroma_pixels_tab[3];$/;"	m	struct:VC1DSPContext
avg_pixels16	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(avg_pixels16)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f	file:
avg_pixels16_altivec	libavcodec/ppc/dsputil_altivec.c	/^void avg_pixels16_altivec(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
avg_pixels16_c	libavcodec/sh4/dsputil_align.c	320;"	d	file:
avg_pixels16_l2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(avg_pixels16_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f	file:
avg_pixels16_l2_altivec	libavcodec/ppc/h264_altivec.c	/^static inline void avg_pixels16_l2_altivec( uint8_t * dst, const uint8_t * src1,$/;"	f	file:
avg_pixels16_l2_shift5_sse2	libavcodec/x86/h264_qpel_mmx.c	1014;"	d	file:
avg_pixels16_l2_shift5_ssse3	libavcodec/x86/h264_qpel_mmx.c	1018;"	d	file:
avg_pixels16_l2_sse2	libavcodec/x86/h264_qpel_mmx.c	1005;"	d	file:
avg_pixels16_l2_ssse3	libavcodec/x86/h264_qpel_mmx.c	1009;"	d	file:
avg_pixels16_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels16_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels16_sse2	libavcodec/x86/dsputil_mmx.c	/^static void avg_pixels16_sse2(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
avg_pixels16_x2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(avg_pixels16_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f	file:
avg_pixels16_x2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels16_x2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels16_xy2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(avg_pixels16_xy2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f	file:
avg_pixels16_xy2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels16_xy2_mlib(uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels16_y2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(avg_pixels16_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f	file:
avg_pixels16_y2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels16_y2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels4	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(avg_pixels4)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
avg_pixels4_c	libavcodec/sh4/dsputil_align.c	/^static void avg_pixels4_c(uint8_t *dest,const uint8_t *ref, const int stride,int height)$/;"	f	file:
avg_pixels4_l2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(avg_pixels4_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f	file:
avg_pixels8	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(avg_pixels8)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
avg_pixels8_altivec	libavcodec/ppc/dsputil_altivec.c	/^static void avg_pixels8_altivec(uint8_t * block, const uint8_t * pixels, int line_size, int h)$/;"	f	file:
avg_pixels8_c	libavcodec/sh4/dsputil_align.c	319;"	d	file:
avg_pixels8_l2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(avg_pixels8_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f	file:
avg_pixels8_l2_shift5_sse2	libavcodec/x86/h264_qpel_mmx.c	1012;"	d	file:
avg_pixels8_l2_shift5_ssse3	libavcodec/x86/h264_qpel_mmx.c	1016;"	d	file:
avg_pixels8_l2_sse2	libavcodec/x86/h264_qpel_mmx.c	1003;"	d	file:
avg_pixels8_l2_ssse3	libavcodec/x86/h264_qpel_mmx.c	1007;"	d	file:
avg_pixels8_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels8_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels8_x2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(avg_pixels8_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
avg_pixels8_x2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels8_x2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels8_xy2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(avg_pixels8_xy2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
avg_pixels8_xy2_altivec	libavcodec/ppc/dsputil_altivec.c	/^static void avg_pixels8_xy2_altivec(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
avg_pixels8_xy2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels8_xy2_mlib(uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels8_y2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(avg_pixels8_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
avg_pixels8_y2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void avg_pixels8_y2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
avg_pixels_tab	libavcodec/dsputil.h	/^    op_pixels_func avg_pixels_tab[4][4];$/;"	m	struct:DSPContext
avg_qpel16_mc00_c	libavcodec/dsputil.c	1336;"	d	file:
avg_qpel8_mc00_c	libavcodec/dsputil.c	1334;"	d	file:
avg_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func avg_qpel_pixels_tab[2][16];$/;"	m	struct:DSPContext
avg_rv30_tpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func avg_rv30_tpel_pixels_tab[4][16];$/;"	m	struct:DSPContext
avg_rv40_chroma_pixels_tab	libavcodec/dsputil.h	/^    h264_chroma_mc_func avg_rv40_chroma_pixels_tab[3];$/;"	m	struct:DSPContext
avg_rv40_qpel16_mc33_c	libavcodec/dsputil.c	/^static void avg_rv40_qpel16_mc33_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
avg_rv40_qpel8_mc33_c	libavcodec/dsputil.c	/^static void avg_rv40_qpel8_mc33_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
avg_rv40_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func avg_rv40_qpel_pixels_tab[4][16];$/;"	m	struct:DSPContext
avg_tpel_pixels_mc00_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc00_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc01_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc01_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc02_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc02_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc10_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc10_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc11_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc11_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc12_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc12_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc20_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc20_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc21_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc21_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_mc22_c	libavcodec/dsputil.c	/^static inline void avg_tpel_pixels_mc22_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
avg_tpel_pixels_tab	libavcodec/dsputil.h	/^    tpel_mc_func avg_tpel_pixels_tab[11]; \/\/FIXME individual func ptr per width?$/;"	m	struct:DSPContext
avg_vc1_mspel_pixels_tab	libavcodec/vc1dsp.h	/^    op_pixels_func avg_vc1_mspel_pixels_tab[16];$/;"	m	struct:VC1DSPContext
avi_get_ientry	libavformat/avienc.c	/^static inline AVIIentry* avi_get_ientry(AVIIndex* idx, int ent_id)$/;"	f	file:
avi_headers	libavformat/avidec.c	/^static const char avi_headers[][8] = {$/;"	v	file:
avi_load_index	libavformat/avidec.c	/^static int avi_load_index(AVFormatContext *s)$/;"	f	file:
avi_metadata_creation_time	libavformat/avidec.c	/^static void avi_metadata_creation_time(AVDictionary **metadata, char *date)$/;"	f	file:
avi_probe	libavformat/avidec.c	/^static int avi_probe(AVProbeData *p)$/;"	f	file:
avi_read_close	libavformat/avidec.c	/^static int avi_read_close(AVFormatContext *s)$/;"	f	file:
avi_read_header	libavformat/avidec.c	/^static int avi_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
avi_read_idx1	libavformat/avidec.c	/^static int avi_read_idx1(AVFormatContext *s, int size)$/;"	f	file:
avi_read_info	libavformat/avidec.c	/^static void avi_read_info(AVFormatContext *s, uint64_t end)$/;"	f	file:
avi_read_nikon	libavformat/avidec.c	/^static void avi_read_nikon(AVFormatContext *s, uint64_t end)$/;"	f	file:
avi_read_packet	libavformat/avidec.c	/^static int avi_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
avi_read_seek	libavformat/avidec.c	/^static int avi_read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
avi_read_tag	libavformat/avidec.c	/^static int avi_read_tag(AVFormatContext *s, AVStream *st, uint32_t tag, uint32_t size)$/;"	f	file:
avi_start_new_riff	libavformat/avienc.c	/^static int64_t avi_start_new_riff(AVFormatContext *s, AVIOContext *pb,$/;"	f	file:
avi_stream2fourcc	libavformat/avienc.c	/^static char* avi_stream2fourcc(char* tag, int index, enum AVMediaType type)$/;"	f	file:
avi_write_counters	libavformat/avienc.c	/^static int avi_write_counters(AVFormatContext* s, int riff_id)$/;"	f	file:
avi_write_header	libavformat/avienc.c	/^static int avi_write_header(AVFormatContext *s)$/;"	f	file:
avi_write_idx1	libavformat/avienc.c	/^static int avi_write_idx1(AVFormatContext *s)$/;"	f	file:
avi_write_info_tag	libavformat/avienc.c	/^static void avi_write_info_tag(AVIOContext *pb, const char *tag, const char *str)$/;"	f	file:
avi_write_ix	libavformat/avienc.c	/^static int avi_write_ix(AVFormatContext *s)$/;"	f	file:
avi_write_packet	libavformat/avienc.c	/^static int avi_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
avi_write_trailer	libavformat/avienc.c	/^static int avi_write_trailer(AVFormatContext *s)$/;"	f	file:
avio_alloc_context	libavformat/aviobuf.c	/^AVIOContext *avio_alloc_context($/;"	f
avio_check	libavformat/avio.c	/^int avio_check(const char *url, int flags)$/;"	f
avio_close	libavformat/aviobuf.c	/^int avio_close(AVIOContext *s)$/;"	f
avio_close_dyn_buf	libavformat/aviobuf.c	/^int avio_close_dyn_buf(AVIOContext *s, uint8_t **pbuffer)$/;"	f
avio_enum_protocols	libavformat/avio.c	/^const char *avio_enum_protocols(void **opaque, int output)$/;"	f
avio_flush	libavformat/aviobuf.c	/^void avio_flush(AVIOContext *s)$/;"	f
avio_get_str	libavformat/aviobuf.c	/^int avio_get_str(AVIOContext *s, int maxlen, char *buf, int buflen)$/;"	f
avio_open	libavformat/aviobuf.c	/^int avio_open(AVIOContext **s, const char *filename, int flags)$/;"	f
avio_open_dyn_buf	libavformat/aviobuf.c	/^int avio_open_dyn_buf(AVIOContext **s)$/;"	f
avio_pause	libavformat/aviobuf.c	/^int avio_pause(AVIOContext *s, int pause)$/;"	f
avio_printf	libavformat/aviobuf.c	/^int avio_printf(AVIOContext *s, const char *fmt, ...)$/;"	f
avio_put_str	libavformat/aviobuf.c	/^int avio_put_str(AVIOContext *s, const char *str)$/;"	f
avio_put_str16le	libavformat/aviobuf.c	/^int avio_put_str16le(AVIOContext *s, const char *str)$/;"	f
avio_r8	libavformat/aviobuf.c	/^int avio_r8(AVIOContext *s)$/;"	f
avio_rb16	libavformat/aviobuf.c	/^unsigned int avio_rb16(AVIOContext *s)$/;"	f
avio_rb24	libavformat/aviobuf.c	/^unsigned int avio_rb24(AVIOContext *s)$/;"	f
avio_rb32	libavformat/aviobuf.c	/^unsigned int avio_rb32(AVIOContext *s)$/;"	f
avio_read	libavformat/aviobuf.c	/^int avio_read(AVIOContext *s, unsigned char *buf, int size)$/;"	f
avio_rl16	libavformat/aviobuf.c	/^unsigned int avio_rl16(AVIOContext *s)$/;"	f
avio_rl24	libavformat/aviobuf.c	/^unsigned int avio_rl24(AVIOContext *s)$/;"	f
avio_rl32	libavformat/aviobuf.c	/^unsigned int avio_rl32(AVIOContext *s)$/;"	f
avio_rl64	libavformat/aviobuf.c	/^uint64_t avio_rl64(AVIOContext *s)$/;"	f
avio_seek	libavformat/aviobuf.c	/^int64_t avio_seek(AVIOContext *s, int64_t offset, int whence)$/;"	f
avio_seek_time	libavformat/aviobuf.c	/^int64_t avio_seek_time(AVIOContext *s, int stream_index,$/;"	f
avio_set_interrupt_cb	libavformat/avio.c	/^void avio_set_interrupt_cb(int (*interrupt_cb)(void))$/;"	f
avio_size	libavformat/aviobuf.c	/^int64_t avio_size(AVIOContext *s)$/;"	f
avio_skip	libavformat/aviobuf.c	/^int64_t avio_skip(AVIOContext *s, int64_t offset)$/;"	f
avio_tell	libavformat/avio.h	/^static av_always_inline int64_t avio_tell(AVIOContext *s)$/;"	f
avio_w8	libavformat/aviobuf.c	/^void avio_w8(AVIOContext *s, int b)$/;"	f
avio_wb16	libavformat/aviobuf.c	/^void avio_wb16(AVIOContext *s, unsigned int val)$/;"	f
avio_wb24	libavformat/aviobuf.c	/^void avio_wb24(AVIOContext *s, unsigned int val)$/;"	f
avio_wb32	libavformat/aviobuf.c	/^void avio_wb32(AVIOContext *s, unsigned int val)$/;"	f
avio_wb64	libavformat/aviobuf.c	/^void avio_wb64(AVIOContext *s, uint64_t val)$/;"	f
avio_wl16	libavformat/aviobuf.c	/^void avio_wl16(AVIOContext *s, unsigned int val)$/;"	f
avio_wl24	libavformat/aviobuf.c	/^void avio_wl24(AVIOContext *s, unsigned int val)$/;"	f
avio_wl32	libavformat/aviobuf.c	/^void avio_wl32(AVIOContext *s, unsigned int val)$/;"	f
avio_wl64	libavformat/aviobuf.c	/^void avio_wl64(AVIOContext *s, uint64_t val)$/;"	f
avio_write	libavformat/aviobuf.c	/^void avio_write(AVIOContext *s, const unsigned char *buf, int size)$/;"	f
avisynth_read_close	libavformat/avisynth.c	/^static int avisynth_read_close(AVFormatContext *s)$/;"	f	file:
avisynth_read_header	libavformat/avisynth.c	/^static int avisynth_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
avisynth_read_packet	libavformat/avisynth.c	/^static int avisynth_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
avisynth_read_seek	libavformat/avisynth.c	/^static int avisynth_read_seek(AVFormatContext *s, int stream_index, int64_t pts, int flags)$/;"	f	file:
avoid_holes	libavcodec/aacpsy.c	/^    int   avoid_holes;  \/\/\/< hole avoidance flag$/;"	m	struct:AacPsyBand	file:
avpicture_alloc	libavcodec/imgconvert.c	/^int avpicture_alloc(AVPicture *picture,$/;"	f
avpicture_deinterlace	libavcodec/imgconvert.c	/^int avpicture_deinterlace(AVPicture *dst, const AVPicture *src,$/;"	f
avpicture_fill	libavcodec/imgconvert.c	/^int avpicture_fill(AVPicture *picture, uint8_t *ptr,$/;"	f
avpicture_free	libavcodec/imgconvert.c	/^void avpicture_free(AVPicture *picture)$/;"	f
avpicture_get_size	libavcodec/imgconvert.c	/^int avpicture_get_size(enum PixelFormat pix_fmt, int width, int height)$/;"	f
avpicture_layout	libavcodec/imgconvert.c	/^int avpicture_layout(const AVPicture* src, enum PixelFormat pix_fmt, int width, int height,$/;"	f
avpkt	libavcodec/pthread.c	/^    AVPacket       avpkt;           \/\/\/< Input packet (for decoding) or output (for encoding).$/;"	m	struct:PerThreadContext	file:
avs_block_type	libavformat/avs.c	/^typedef enum avs_block_type {$/;"	g	file:
avs_decode_frame	libavcodec/avs.c	/^avs_decode_frame(AVCodecContext * avctx,$/;"	f	file:
avs_decode_init	libavcodec/avs.c	/^static av_cold int avs_decode_init(AVCodecContext * avctx)$/;"	f	file:
avs_format	libavformat/avs.c	/^typedef struct avs_format {$/;"	s	file:
avs_probe	libavformat/avs.c	/^static int avs_probe(AVProbeData * p)$/;"	f	file:
avs_read_audio_packet	libavformat/avs.c	/^static int avs_read_audio_packet(AVFormatContext * s, AVPacket * pkt)$/;"	f	file:
avs_read_close	libavformat/avs.c	/^static int avs_read_close(AVFormatContext * s)$/;"	f	file:
avs_read_header	libavformat/avs.c	/^static int avs_read_header(AVFormatContext * s, AVFormatParameters * ap)$/;"	f	file:
avs_read_packet	libavformat/avs.c	/^static int avs_read_packet(AVFormatContext * s, AVPacket * pkt)$/;"	f	file:
avs_read_video_packet	libavformat/avs.c	/^avs_read_video_packet(AVFormatContext * s, AVPacket * pkt,$/;"	f	file:
avsubtitle_free	libavcodec/utils.c	/^void avsubtitle_free(AVSubtitle *sub)$/;"	f
avsync	libavformat/nsvdec.c	/^    int16_t avsync;$/;"	m	struct:__anon345	file:
avutil_configuration	libavutil/utils.c	/^const char *avutil_configuration(void)$/;"	f
avutil_license	libavutil/utils.c	/^const char *avutil_license(void)$/;"	f
avutil_version	libavutil/utils.c	/^unsigned avutil_version(void)$/;"	f
avx_tab	libavcodec/fft.c	/^static const int avx_tab[] = {$/;"	v	file:
aw_first_pulse_off	libavcodec/wmavoice.c	/^    int aw_first_pulse_off[2];    \/\/\/< index of first sample to which to$/;"	m	struct:__anon157	file:
aw_idx_is_ext	libavcodec/wmavoice.c	/^    int aw_idx_is_ext;            \/\/\/< whether the AW index was encoded in$/;"	m	struct:__anon157	file:
aw_n_pulses	libavcodec/wmavoice.c	/^    int aw_n_pulses[2];           \/\/\/< number of AW-pulses in each block; note$/;"	m	struct:__anon157	file:
aw_next_pulse_off_cache	libavcodec/wmavoice.c	/^    int aw_next_pulse_off_cache;  \/\/\/< the position (relative to start of the$/;"	m	struct:__anon157	file:
aw_parse_coords	libavcodec/wmavoice.c	/^static void aw_parse_coords(WMAVoiceContext *s, GetBitContext *gb,$/;"	f	file:
aw_pulse_range	libavcodec/wmavoice.c	/^    int aw_pulse_range;           \/\/\/< the range over which #aw_pulse_set1()$/;"	m	struct:__anon157	file:
aw_pulse_set1	libavcodec/wmavoice.c	/^static void aw_pulse_set1(WMAVoiceContext *s, GetBitContext *gb,$/;"	f	file:
aw_pulse_set2	libavcodec/wmavoice.c	/^static void aw_pulse_set2(WMAVoiceContext *s, GetBitContext *gb,$/;"	f	file:
await_reference_mb_row	libavcodec/h264_direct.c	/^static void await_reference_mb_row(H264Context * const h, Picture *ref, int mb_y)$/;"	f	file:
await_reference_row	libavcodec/vp3.c	/^static void await_reference_row(Vp3DecodeContext *s, Vp3Fragment *fragment, int motion_y, int y)$/;"	f	file:
await_references	libavcodec/h264.c	/^static void await_references(H264Context *h){$/;"	f	file:
awapos	libavformat/mmf.c	/^    int64_t atrpos, atsqpos, awapos;$/;"	m	struct:__anon319	file:
b	libavcodec/g726.c	/^    int b[6];           \/**< sixth order predictor coeffs *\/$/;"	m	struct:G726Context	file:
b	libavcodec/x86/dsputil_mmx.h	/^typedef struct { uint64_t a, b; } xmm_reg;$/;"	m	struct:__anon60
b	libavfilter/libmpcodecs/libvo/video_out.h	/^  uint16_t r,g,b;$/;"	m	struct:__anon30
b	libavfilter/libmpcodecs/vf_eq2.c	/^  double        b;$/;"	m	struct:eq2_param_t	file:
b	libavformat/gif.c	/^    unsigned char b;$/;"	m	struct:__anon384	file:
b	tests/videogen.c	/^    int r, g, b;$/;"	m	struct:VObj	file:
b0	libavcodec/bfin/fdct_bfin.S	/^    b0 = r0;$/;"	d
b0	libavcodec/bfin/pixels_bfin.S	/^        b0 = I0;$/;"	d
b0	libavcodec/dwt.h	/^    IDWTELEM *b0;$/;"	m	struct:__anon206
b1	libavcodec/ac3dec.c	/^    int b1;$/;"	m	struct:__anon96	file:
b1	libavcodec/bfin/pixels_bfin.S	/^        b1 = I1;$/;"	d
b1	libavcodec/dwt.h	/^    IDWTELEM *b1;$/;"	m	struct:__anon206
b1	libswscale/bfin/internal_bfin.S	/^        b1 = i1;$/;"	d
b1_mant	libavcodec/ac3dec.c	/^    int b1_mant[2];$/;"	m	struct:__anon96	file:
b1_mantissas	libavcodec/ac3dec.c	/^static int b1_mantissas[32][3];$/;"	v	file:
b2	libavcodec/ac3dec.c	/^    int b2;$/;"	m	struct:__anon96	file:
b2	libavcodec/bfin/fdct_bfin.S	/^    b2 = r0;$/;"	d
b2	libavcodec/dwt.h	/^    IDWTELEM *b2;$/;"	m	struct:__anon206
b2_mant	libavcodec/ac3dec.c	/^    int b2_mant[2];$/;"	m	struct:__anon96	file:
b2_mantissas	libavcodec/ac3dec.c	/^static int b2_mantissas[128][3];$/;"	v	file:
b3	libavcodec/bfin/fdct_bfin.S	/^    b3 = r0;$/;"	d
b3	libavcodec/bfin/pixels_bfin.S	/^        b3 = I3;$/;"	d
b3	libavcodec/dwt.h	/^    IDWTELEM *b3;$/;"	m	struct:__anon206
b3_mantissas	libavcodec/ac3dec.c	/^static int b3_mantissas[8];$/;"	v	file:
b4	libavcodec/ac3dec.c	/^    int b4;$/;"	m	struct:__anon96	file:
b4_mant	libavcodec/ac3dec.c	/^    int b4_mant;$/;"	m	struct:__anon96	file:
b4_mantissas	libavcodec/ac3dec.c	/^static int b4_mantissas[128][2];$/;"	v	file:
b4_stride	libavcodec/mpegvideo.h	/^    int b4_stride;             \/\/\/< 4*mb_width+1 used for some 4x4 block arrays to allow simple addressing$/;"	m	struct:MpegEncContext
b5_mantissas	libavcodec/ac3dec.c	/^static int b5_mantissas[16];$/;"	v	file:
b8_stride	libavcodec/mpegvideo.h	/^    int b8_stride;             \/\/\/< 2*mb_width+1 used for some 8x8 block arrays to allow simple addressing$/;"	m	struct:MpegEncContext
b_back_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*b_back_mv_table)[2];       \/\/\/< MV table (1MV per MB) backward mode b-frame encoding$/;"	m	struct:MpegEncContext
b_back_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*b_back_mv_table_base)[2];$/;"	m	struct:MpegEncContext
b_bidir_back_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*b_bidir_back_mv_table)[2]; \/\/\/< MV table (1MV per MB) bidir mode b-frame encoding$/;"	m	struct:MpegEncContext
b_bidir_back_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*b_bidir_back_mv_table_base)[2];$/;"	m	struct:MpegEncContext
b_bidir_forw_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*b_bidir_forw_mv_table)[2]; \/\/\/< MV table (1MV per MB) bidir mode b-frame encoding$/;"	m	struct:MpegEncContext
b_bidir_forw_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*b_bidir_forw_mv_table_base)[2];$/;"	m	struct:MpegEncContext
b_code	libavcodec/mpegvideo.h	/^    int b_code;                 \/\/\/< backward MV resolution for B Frames (mpeg4)$/;"	m	struct:MpegEncContext
b_code	libavcodec/ratecontrol.h	/^    int b_code;$/;"	m	struct:RateControlEntry
b_count	libavcodec/mpegvideo.h	/^    int b_count;$/;"	m	struct:MpegEncContext
b_direct_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*b_direct_mv_table)[2];     \/\/\/< MV table (1MV per MB) direct mode b-frame encoding$/;"	m	struct:MpegEncContext
b_direct_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*b_direct_mv_table_base)[2];$/;"	m	struct:MpegEncContext
b_field_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*b_field_mv_table[2][2][2])[2];\/\/\/< MV table (4MV per MB) interlaced b-frame encoding$/;"	m	struct:MpegEncContext
b_field_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*b_field_mv_table_base[2][2][2])[2];$/;"	m	struct:MpegEncContext
b_field_select_table	libavcodec/mpegvideo.h	/^    uint8_t (*b_field_select_table[2][2]);$/;"	m	struct:MpegEncContext
b_forw_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*b_forw_mv_table)[2];       \/\/\/< MV table (1MV per MB) forward mode b-frame encoding$/;"	m	struct:MpegEncContext
b_forw_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*b_forw_mv_table_base)[2];$/;"	m	struct:MpegEncContext
b_frame_score	libavcodec/mpegvideo.h	/^    int b_frame_score;          \/* *\/$/;"	m	struct:Picture
b_frame_strategy	libavcodec/avcodec.h	/^    int b_frame_strategy;$/;"	m	struct:AVCodecContext
b_frames_since_non_b	libavcodec/mpegvideo.h	/^    int b_frames_since_non_b;  \/\/\/< used for encoding, relative to not yet reordered input$/;"	m	struct:MpegEncContext
b_height	libavcodec/snow.c	/^    int b_height;$/;"	m	struct:SnowContext	file:
b_mb_type_info	libavcodec/h264data.h	/^static const PMbInfo b_mb_type_info[23]={$/;"	v
b_per_i_or_p	libavformat/gxfenc.c	/^    int b_per_i_or_p; \/\/\/< number of B frames per I frame or P frame$/;"	m	struct:GXFStreamContext	file:
b_quant_factor	libavcodec/avcodec.h	/^    float b_quant_factor;$/;"	m	struct:AVCodecContext
b_quant_offset	libavcodec/avcodec.h	/^    float b_quant_offset;$/;"	m	struct:AVCodecContext
b_r	libswscale/swscale.c	843;"	d	file:
b_r	libswscale/swscale.c	979;"	d	file:
b_scratchpad	libavcodec/mpegvideo.h	/^    uint8_t *b_scratchpad;        \/\/\/< scratchpad used for writing into write only buffers$/;"	m	struct:MpegEncContext
b_sensitivity	libavcodec/avcodec.h	/^    int b_sensitivity;$/;"	m	struct:AVCodecContext
b_stride	libavcodec/h264.h	/^    int b_stride; \/\/FIXME use s->b4_stride$/;"	m	struct:H264Context
b_sub_mb_type_info	libavcodec/h264data.h	/^static const PMbInfo b_sub_mb_type_info[13]={$/;"	v
b_width	libavcodec/snow.c	/^    int b_width;$/;"	m	struct:SnowContext	file:
back_color	libavcodec/ass_split.h	/^    int   back_color;     \/**< color of the subtitle outline or shadow *\/$/;"	m	struct:__anon249
back_frame	libavcodec/rl2.c	/^    unsigned char* back_frame; \/\/\/< background frame$/;"	m	struct:Rl2Context	file:
back_ptr	libavformat/nut.h	/^    uint64_t back_ptr;$/;"	m	struct:__anon490
background	libavfilter/libmpcodecs/pullup.h	/^    int *bpp, *w, *h, *stride, *background;$/;"	m	struct:pullup_context
background	libavutil/log.c	/^static int16_t background, attr_orig;$/;"	v	file:
background_color_index	libavcodec/gifdec.c	/^    int background_color_index;$/;"	m	struct:GifState	file:
backup_duplicate_context	libavcodec/mpegvideo.c	/^static void backup_duplicate_context(MpegEncContext *bak, MpegEncContext *src){$/;"	f	file:
backup_mb_border	libavcodec/h264.c	/^static inline void backup_mb_border(H264Context *h, uint8_t *src_y, uint8_t *src_cb, uint8_t *src_cr, int linesize, int uvlinesize, int chroma444, int simple){$/;"	f	file:
backup_mb_border	libavcodec/vp8.c	/^void backup_mb_border(uint8_t *top_border, uint8_t *src_y, uint8_t *src_cb, uint8_t *src_cr,$/;"	f	file:
backward_filter	libavcodec/ra288.c	/^static void backward_filter(float *hist, float *rec, const float *window,$/;"	f	file:
bad_frame_indicator	libavcodec/amrnbdec.c	/^    uint8_t             bad_frame_indicator; \/\/\/< bad frame ? 1 : 0$/;"	m	struct:AMRContext	file:
bad_seq	libavformat/rtpdec.h	/^    uint32_t bad_seq;           \/\/\/< last bad sequence number + 1$/;"	m	struct:__anon333
bag	libavformat/mp3enc.c	/^    uint64_t bag[VBR_NUM_BAGS];$/;"	m	struct:MP3Context	file:
bamount	libavfilter/libmpcodecs/vf_blackframe.c	/^    unsigned int bamount, bthresh, frame, lastkeyframe;$/;"	m	struct:vf_priv_s	file:
bamount	libavfilter/vf_blackframe.c	/^    unsigned int bamount; \/\/\/< black amount$/;"	m	struct:__anon49	file:
band	libavcodec/aacpsy.c	/^    AacPsyBand band[128];               \/\/\/< bands information$/;"	m	struct:AacPsyChannel	file:
band	libavcodec/g722.c	/^    } band[2];$/;"	m	struct:__anon140	typeref:struct:__anon140::G722Band	file:
band	libavcodec/j2k.h	/^    J2kBand *band;$/;"	m	struct:__anon216
band	libavcodec/snow.c	/^    SubBand band[MAX_DECOMPOSITIONS][4];$/;"	m	struct:Plane	file:
band	libavfilter/libmpcodecs/vf_delogo.c	/^    int xoff, yoff, lw, lh, band, show;$/;"	m	struct:vf_priv_s	file:
bandFlagsBuf	libavcodec/imc.c	/^    int bandFlagsBuf[BANDS];   \/\/\/< flags for each band$/;"	m	struct:__anon90	file:
bandWidthT	libavcodec/imc.c	/^    int bandWidthT[BANDS];     \/\/\/< codewords per band$/;"	m	struct:__anon90	file:
band_delta_factor	libavcodec/dcaenc.c	/^static int32_t band_delta_factor(int band, int sample_num)$/;"	f	file:
band_incr	libavcodec/aac.h	/^    int band_incr;                                  \/\/\/< Number of DRC bands greater than 1 having DRC info.$/;"	m	struct:__anon241
band_index_long	libavcodec/mpegaudiodec.c	/^static uint16_t band_index_long[9][23];$/;"	v	file:
band_num	libavcodec/ivi_common.h	/^    int             band_num;       \/\/\/< band number$/;"	m	struct:__anon107
band_psd	libavcodec/ac3dec.h	/^    int16_t band_psd[AC3_MAX_CHANNELS][AC3_CRITICAL_BANDS]; \/\/\/< interpolated exponents$/;"	m	struct:__anon88
band_psd	libavcodec/ac3enc.h	/^    int16_t  **band_psd;                        \/\/\/< psd per critical band$/;"	m	struct:AC3Block
band_psd_buffer	libavcodec/ac3enc.h	/^    int16_t *band_psd_buffer;$/;"	m	struct:AC3EncodeContext
band_size_long	libavcodec/mpegaudiodectab.h	/^static const uint8_t band_size_long[9][22] = {$/;"	v
band_size_short	libavcodec/mpegaudiodectab.h	/^static const uint8_t band_size_short[9][13] = {$/;"	v
band_tab	libavcodec/imcdata.h	/^static const uint16_t band_tab[33] = {$/;"	v
band_top	libavcodec/aac.h	/^    int band_top[17];                               \/\/\/< Indicates the top of the i-th DRC band in units of 4 spectral lines.$/;"	m	struct:__anon241
band_type	libavcodec/aac.h	/^    enum BandType band_type[128];                   \/\/\/< band types$/;"	m	struct:__anon244	typeref:enum:__anon244::BandType
band_type_run_end	libavcodec/aac.h	/^    int band_type_run_end[120];                     \/\/\/< band type run end points$/;"	m	struct:__anon244
band_vlc	libavcodec/mpc8.c	/^static VLC band_vlc, scfi_vlc[2], dscf_vlc[2], res_vlc[2];$/;"	v	file:
bands	libavcodec/atrac1.c	/^    float*              bands[3];$/;"	m	struct:__anon120	file:
bands	libavcodec/binkaudio.c	/^    unsigned int *bands;$/;"	m	struct:__anon136	file:
bands	libavcodec/ivi_common.h	/^    IVIBandDesc *bands;     \/\/\/< array of band descriptors$/;"	m	struct:__anon108
bands	libavcodec/mpc.h	/^    Band bands[BANDS];$/;"	m	struct:__anon179
bands	libavcodec/psymodel.h	/^    uint8_t **bands;                  \/\/\/< scalefactor band sizes for possible frame sizes$/;"	m	struct:FFPsyContext
bandsCoded	libavcodec/atrac3.c	/^    int               bandsCoded;$/;"	m	struct:__anon130	file:
bandwidth	ffserver.c	/^    unsigned bandwidth; \/* bandwidth, in kbits\/s *\/$/;"	m	struct:FFStream	file:
bandwidth	libavformat/applehttp.c	/^    char bandwidth[20];$/;"	m	struct:variant_info	file:
bandwidth	libavformat/applehttp.c	/^    int bandwidth;$/;"	m	struct:variant	file:
bandwidth	libavformat/applehttpproto.c	/^    char bandwidth[20];$/;"	m	struct:variant_info	file:
bandwidth	libavformat/applehttpproto.c	/^    int bandwidth;$/;"	m	struct:variant	file:
bandwidth_code	libavcodec/ac3enc.h	/^    int bandwidth_code;                     \/\/\/< bandwidth code (0 to 60)               (chbwcod)$/;"	m	struct:AC3EncodeContext
bap	libavcodec/ac3dec.h	/^    uint8_t bap[AC3_MAX_CHANNELS][AC3_MAX_COEFS];   \/\/\/< bit allocation pointers$/;"	m	struct:__anon88
bap1_buffer	libavcodec/ac3enc.h	/^    uint8_t *bap1_buffer;$/;"	m	struct:AC3EncodeContext
bap_buffer	libavcodec/ac3enc.h	/^    uint8_t *bap_buffer;$/;"	m	struct:AC3EncodeContext
bark_cb	libavcodec/twinvq.c	/^    const int16_t  *bark_cb;    \/\/\/< codebook for the bark scale envelope (BSE)$/;"	m	struct:FrameMode	file:
bark_env_size	libavcodec/twinvq.c	/^    uint8_t         bark_env_size;$/;"	m	struct:FrameMode	file:
bark_hist	libavcodec/twinvq.c	/^    float bark_hist[3][2][40];       \/\/\/< BSE coefficients of last frame$/;"	m	struct:TwinContext	file:
bark_map_size	libavcodec/vorbisdec.c	/^            uint16_t      bark_map_size;$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor0_s	file:
bark_n_bit	libavcodec/twinvq.c	/^    uint8_t         bark_n_bit; \/\/\/< number of bits of the BSE coefs$/;"	m	struct:FrameMode	file:
bark_n_coef	libavcodec/twinvq.c	/^    uint8_t         bark_n_coef;\/\/\/< number of BSE CB coefficients to read$/;"	m	struct:FrameMode	file:
bark_tab	libavcodec/twinvq.c	/^    const uint16_t *bark_tab;$/;"	m	struct:FrameMode	file:
bark_tab_l08_512	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_l08_512[] = {$/;"	v
bark_tab_l11_512	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_l11_512[] = {$/;"	v
bark_tab_l16_1024	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_l16_1024[] = {$/;"	v
bark_tab_l22_1024	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_l22_1024[] = {$/;"	v
bark_tab_l22_512	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_l22_512[] = {$/;"	v
bark_tab_l44_2048	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_l44_2048[] = {$/;"	v
bark_tab_m08_256	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_m08_256[] = {$/;"	v
bark_tab_m11_256	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_m11_256[] = {$/;"	v
bark_tab_m16_512	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_m16_512[] = {$/;"	v
bark_tab_m22_256	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_m22_256[] = {$/;"	v
bark_tab_m22_512	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_m22_512[] = {$/;"	v
bark_tab_m44_512	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_m44_512[] = {$/;"	v
bark_tab_s08_64	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_s08_64[] = {$/;"	v
bark_tab_s11_64	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_s11_64[] = {$/;"	v
bark_tab_s16_128	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_s16_128[] = {$/;"	v
bark_tab_s22_128	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_s22_128[] = {$/;"	v
bark_tab_s44_128	libavcodec/twinvq_data.h	/^static const uint16_t bark_tab_s44_128[] = {$/;"	v
barks	libavcodec/aacpsy.c	/^    float barks;         \/\/\/< Bark value for each spectral band in long frame$/;"	m	struct:AacPsyCoeffs	file:
base	libavcodec/utils.c	/^    uint8_t *base[4];$/;"	m	struct:InternalBuffer	file:
baseDcDiff	libpostproc/postprocess_internal.h	/^    int baseDcDiff;$/;"	m	struct:PPMode
base_buffer	libavcodec/dwt.h	/^    IDWTELEM * base_buffer; \/\/\/< Buffer that this structure is caching.$/;"	m	struct:slice_buffer_s
base_clock	libavformat/segafilm.c	/^    unsigned int base_clock;$/;"	m	struct:FilmDemuxContext	file:
base_cos	libavcodec/celp_math.c	/^static const int16_t base_cos[64] =$/;"	v	file:
base_data_offset	libavformat/isom.h	/^    uint64_t base_data_offset;$/;"	m	struct:__anon468
base_five_table	libavcodec/amrnbdata.h	/^static const uint8_t base_five_table[128][3] = {$/;"	v
base_matrix	libavcodec/vp3.c	/^    uint8_t base_matrix[384][64];$/;"	m	struct:Vp3DecodeContext	file:
base_offset	libavformat/nsvdec.c	/^    int  base_offset;$/;"	m	struct:__anon345	file:
base_pitch_lag	libavcodec/amrwbdec.c	/^    uint8_t                       base_pitch_lag; \/\/\/< integer part of pitch lag for the next relative subframe$/;"	m	struct:__anon64	file:
base_quant	libavcodec/vp8.h	/^        int8_t base_quant[4];$/;"	m	struct:__anon182::__anon183
base_record	libavformat/anm.c	/^    int base_record;$/;"	m	struct:__anon434	file:
base_seq	libavformat/rtpdec.h	/^    uint32_t base_seq;          \/\/\/< base sequence number$/;"	m	struct:__anon333
base_timestamp	libavformat/rtpdec.h	/^    uint32_t base_timestamp;$/;"	m	struct:RTPDemuxContext
base_timestamp	libavformat/rtpenc.h	/^    uint32_t base_timestamp;$/;"	m	struct:RTPMuxContext
basis	libavcodec/mpegvideo_enc.c	/^static int16_t basis[64][64];$/;"	v	file:
bastardized_rice_decompress	libavcodec/alac.c	/^static void bastardized_rice_decompress(ALACContext *alac,$/;"	f	file:
bbits	libavcodec/lzw.c	/^    int bbits;$/;"	m	struct:LZWState	file:
bbuf	libavcodec/lzw.c	/^    unsigned int bbuf;$/;"	m	struct:LZWState	file:
bcount	libavfilter/libmpcodecs/vf_divtc.c	/^   int deghost, pass, phase, window, fcount, bcount, frameno, misscount,$/;"	m	struct:vf_priv_s	file:
bdata	libavfilter/libmpcodecs/vf_divtc.c	/^   int8_t *bdata;$/;"	m	struct:vf_priv_s	file:
be2me_16	libavfilter/libmpcodecs/mpbswap.h	31;"	d
be2me_32	libavfilter/libmpcodecs/mpbswap.h	32;"	d
begin	libavcodec/vorbisdec.c	/^    uint32_t      begin;$/;"	m	struct:__anon260	file:
begin	libavcodec/vorbisenc.c	/^    int begin;$/;"	m	struct:__anon191	file:
bessel	libavcodec/resample2.c	/^static double bessel(double x){$/;"	f	file:
best_bit_use	libavcodec/roqvideoenc.c	/^    int best_bit_use;$/;"	m	struct:__anon72	file:
best_bits	libavcodec/mpegvideo.h	/^    int best_bits;$/;"	m	struct:MotionEstContext
best_child	libavcodec/flac_parser.c	/^    struct FLACHeaderMarker *best_child; \/**< following frame header with$/;"	m	struct:FLACHeaderMarker	typeref:struct:FLACHeaderMarker::FLACHeaderMarker	file:
best_coding	libavcodec/roqvideoenc.c	/^    int best_coding;$/;"	m	struct:__anon72	file:
best_coding	libavcodec/roqvideoenc.c	/^    int best_coding;$/;"	m	struct:__anon73	file:
best_header	libavcodec/flac_parser.c	/^    FLACHeaderMarker *best_header; \/**< highest scoring header within buffer  *\/$/;"	m	struct:FLACParseContext	file:
best_header_valid	libavcodec/flac_parser.c	/^    int best_header_valid;         \/**< flag set when the parser returns junk;$/;"	m	struct:FLACParseContext	file:
best_mb	libavcodec/mpegvideo.h	/^    uint8_t *best_mb;$/;"	m	struct:MotionEstContext
bestpos	libavcodec/msvideo1enc.c	/^    int bestpos;$/;"	m	struct:Msvideo1EncContext	file:
beta	libavcodec/amrnbdec.c	/^    float                              beta; \/\/\/< previous pitch_gain, bounded by [0.0,SHARP_MAX]$/;"	m	struct:AMRContext	file:
beta_offset	libavcodec/cavs.h	/^    int alpha_offset, beta_offset;$/;"	m	struct:__anon207
beta_tab	libavcodec/cavsdata.h	/^static const uint8_t beta_tab[64] = {$/;"	v
beta_table	libavcodec/h264_loopfilter.c	/^static const uint8_t beta_table[52*3] = {$/;"	v	file:
bethsoft_global_delay	libavformat/bethsoftvid.c	/^    int bethsoft_global_delay;$/;"	m	struct:BVID_DemuxContext	file:
bethsoftvid_decode_end	libavcodec/bethsoftvideo.c	/^static av_cold int bethsoftvid_decode_end(AVCodecContext *avctx)$/;"	f	file:
bethsoftvid_decode_frame	libavcodec/bethsoftvideo.c	/^static int bethsoftvid_decode_frame(AVCodecContext *avctx,$/;"	f	file:
bethsoftvid_decode_init	libavcodec/bethsoftvideo.c	/^static av_cold int bethsoftvid_decode_init(AVCodecContext *avctx)$/;"	f	file:
bfi_decode_close	libavcodec/bfi.c	/^static av_cold int bfi_decode_close(AVCodecContext * avctx)$/;"	f	file:
bfi_decode_frame	libavcodec/bfi.c	/^static int bfi_decode_frame(AVCodecContext * avctx, void *data,$/;"	f	file:
bfi_decode_init	libavcodec/bfi.c	/^static av_cold int bfi_decode_init(AVCodecContext * avctx)$/;"	f	file:
bfi_probe	libavformat/bfi.c	/^static int bfi_probe(AVProbeData * p)$/;"	f	file:
bfi_read_header	libavformat/bfi.c	/^static int bfi_read_header(AVFormatContext * s, AVFormatParameters * ap)$/;"	f	file:
bfi_read_packet	libavformat/bfi.c	/^static int bfi_read_packet(AVFormatContext * s, AVPacket * pkt)$/;"	f	file:
bfin_clear_blocks	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_clear_blocks (DCTELEM *blocks)$/;"	f	file:
bfin_idct_add	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_idct_add (uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
bfin_idct_put	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_idct_put (uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
bfin_pix_abs16	libavcodec/bfin/dsputil_bfin.c	/^static int bfin_pix_abs16 (void *c, uint8_t *blk1, uint8_t *blk2, int line_size, int h)$/;"	f	file:
bfin_pix_abs16_x2	libavcodec/bfin/dsputil_bfin.c	/^static int bfin_pix_abs16_x2 (void *c, uint8_t *blk1, uint8_t *blk2, int line_size, int h)$/;"	f	file:
bfin_pix_abs16_xy2	libavcodec/bfin/dsputil_bfin.c	/^static int bfin_pix_abs16_xy2 (void *c, uint8_t *blk1, uint8_t *blk2, int line_size, int h)$/;"	f	file:
bfin_pix_abs16_y2	libavcodec/bfin/dsputil_bfin.c	/^static int bfin_pix_abs16_y2 (void *c, uint8_t *blk1, uint8_t *blk2, int line_size, int h)$/;"	f	file:
bfin_pix_abs8	libavcodec/bfin/dsputil_bfin.c	/^static int bfin_pix_abs8 (void *c, uint8_t *blk1, uint8_t *blk2, int line_size, int h)$/;"	f	file:
bfin_pix_abs8_x2	libavcodec/bfin/dsputil_bfin.c	/^static int bfin_pix_abs8_x2 (void *c, uint8_t *blk1, uint8_t *blk2, int line_size, int h)$/;"	f	file:
bfin_pix_abs8_xy2	libavcodec/bfin/dsputil_bfin.c	/^static int bfin_pix_abs8_xy2 (void *c, uint8_t *blk1, uint8_t *blk2, int line_size, int h)$/;"	f	file:
bfin_pix_abs8_y2	libavcodec/bfin/dsputil_bfin.c	/^static int bfin_pix_abs8_y2 (void *c, uint8_t *blk1, uint8_t *blk2, int line_size, int h)$/;"	f	file:
bfin_prepare_coefficients	libswscale/bfin/yuv2rgb_bfin.c	/^static void bfin_prepare_coefficients(SwsContext *c, int rgb, int masks)$/;"	f	file:
bfin_put_pixels16	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels16 (uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
bfin_put_pixels16_nornd	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels16_nornd (uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
bfin_put_pixels16_x2	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels16_x2 (uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
bfin_put_pixels16_x2_nornd	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels16_x2_nornd (uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
bfin_put_pixels16_xy2	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels16_xy2 (uint8_t *block, const uint8_t *s0, int line_size, int h)$/;"	f	file:
bfin_put_pixels16_y2	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels16_y2 (uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
bfin_put_pixels16_y2_nornd	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels16_y2_nornd (uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
bfin_put_pixels8	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels8 (uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
bfin_put_pixels8_nornd	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels8_nornd (uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
bfin_put_pixels8_x2	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels8_x2(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
bfin_put_pixels8_x2_nornd	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels8_x2_nornd (uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
bfin_put_pixels8_xy2	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels8_xy2 (uint8_t *block, const uint8_t *s0, int line_size, int h)$/;"	f	file:
bfin_put_pixels8_y2	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels8_y2 (uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
bfin_put_pixels8_y2_nornd	libavcodec/bfin/dsputil_bfin.c	/^static void bfin_put_pixels8_y2_nornd (uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
bfin_vsad	libavcodec/bfin/dsputil_bfin.c	/^static int bfin_vsad (void *c, uint8_t *blk1, uint8_t *blk2, int stride, int h) {$/;"	f	file:
bfin_vsad_intra16	libavcodec/bfin/dsputil_bfin.c	/^static int bfin_vsad_intra16 (void *c, uint8_t *blk1, uint8_t *dummy, int stride, int h) {$/;"	f	file:
bfin_yuv420_bgr24	libswscale/bfin/yuv2rgb_bfin.c	/^static int bfin_yuv420_bgr24(SwsContext *c,$/;"	f	file:
bfin_yuv420_bgr555	libswscale/bfin/yuv2rgb_bfin.c	/^static int bfin_yuv420_bgr555(SwsContext *c,$/;"	f	file:
bfin_yuv420_bgr565	libswscale/bfin/yuv2rgb_bfin.c	/^static int bfin_yuv420_bgr565(SwsContext *c,$/;"	f	file:
bfin_yuv420_rgb24	libswscale/bfin/yuv2rgb_bfin.c	/^static int bfin_yuv420_rgb24(SwsContext *c,$/;"	f	file:
bfin_yuv420_rgb555	libswscale/bfin/yuv2rgb_bfin.c	/^static int bfin_yuv420_rgb555(SwsContext *c,$/;"	f	file:
bfin_yuv420_rgb565	libswscale/bfin/yuv2rgb_bfin.c	/^static int bfin_yuv420_rgb565(SwsContext *c,$/;"	f	file:
bfprof	libavcodec/bfin/dsputil_bfin.h	/^static void bfprof (void)$/;"	f
bfprof	libavcodec/bfin/dsputil_bfin.h	105;"	d
bfraction	libavcodec/vc1.h	/^    int16_t bfraction;    \/\/\/< Relative position % anchors=> how to scale MVs$/;"	m	struct:VC1Context
bfraction_lut_index	libavcodec/vc1.h	/^    uint8_t bfraction_lut_index;\/\/\/< Index for BFRACTION value (see Table 40, reproduced into ff_vc1_bfraction_lut[])$/;"	m	struct:VC1Context
bframe_bug	libavcodec/crystalhd.c	/^    uint8_t bframe_bug;$/;"	m	struct:__anon268	file:
bframebias	libavcodec/avcodec.h	/^    int bframebias;$/;"	m	struct:AVCodecContext
bframes	libavfilter/libmpcodecs/vf_fspp.c	/^    int bframes;$/;"	m	struct:vf_priv_s	file:
bframes	libavformat/gxfenc.c	/^    int bframes;$/;"	m	struct:GXFStreamContext	file:
bfu_amount_tab1	libavcodec/atrac1data.h	/^static const uint8_t bfu_amount_tab1[8] = {20,  28,  32,  36, 40, 44, 48, 52};$/;"	v
bfu_amount_tab2	libavcodec/atrac1data.h	/^static const uint8_t bfu_amount_tab2[4] = { 0, 112, 176, 208};$/;"	v
bfu_amount_tab3	libavcodec/atrac1data.h	/^static const uint8_t bfu_amount_tab3[8] = { 0,  24,  36,  48, 72, 108, 132, 156};$/;"	v
bfu_bands_t	libavcodec/atrac1data.h	/^static const uint8_t bfu_bands_t[4]  = {0, 20, 36, 52};$/;"	v
bfu_start_long	libavcodec/atrac1data.h	/^static const uint16_t bfu_start_long[52] = {$/;"	v
bfu_start_short	libavcodec/atrac1data.h	/^static const uint16_t bfu_start_short[52] = {$/;"	v
bg	libavcodec/ansi.c	/^    int bg;               \/**< background color *\/$/;"	m	struct:__anon173	file:
bgamma	libavfilter/libmpcodecs/vf_eq2.c	/^  double        bgamma;$/;"	m	struct:vf_priv_s	file:
bgcolor	libavcodec/dvbsubdec.c	/^    int bgcolor;$/;"	m	struct:DVBSubObjectDisplay	file:
bgcolor	libavcodec/dvbsubdec.c	/^    int bgcolor;$/;"	m	struct:DVBSubRegion	file:
bgmc	libavcodec/alsdec.c	/^    int bgmc;                 \/\/\/< "Block Gilbert-Moore Code": 1 = on, 0 = off (Rice coding only)$/;"	m	struct:__anon150	file:
bgmc_lut	libavcodec/alsdec.c	/^    uint8_t *bgmc_lut;              \/\/\/< pointer at lookup tables used for BGMC$/;"	m	struct:__anon152	file:
bgmc_lut_fillp	libavcodec/bgmc.c	/^static void bgmc_lut_fillp(uint8_t *lut, int *lut_status,$/;"	f	file:
bgmc_lut_getp	libavcodec/bgmc.c	/^static uint8_t* bgmc_lut_getp(uint8_t *lut, int *lut_status,$/;"	f	file:
bgmc_lut_status	libavcodec/alsdec.c	/^    int *bgmc_lut_status;           \/\/\/< pointer at lookup table status flags used for BGMC$/;"	m	struct:__anon152	file:
bgr24ToUV	libswscale/x86/swscale_template.c	/^static void RENAME(bgr24ToUV)(int16_t *dstU, int16_t *dstV,$/;"	f	file:
bgr24ToUV_mmx	libswscale/x86/swscale_template.c	/^static av_always_inline void RENAME(bgr24ToUV_mmx)(int16_t *dstU, int16_t *dstV,$/;"	f	file:
bgr24ToY	libswscale/x86/swscale_template.c	/^static void RENAME(bgr24ToY)(int16_t *dst, const uint8_t *src,$/;"	f	file:
bgr24ToY_mmx	libswscale/x86/swscale_template.c	/^static av_always_inline void RENAME(bgr24ToY_mmx)(int16_t *dst, const uint8_t *src,$/;"	f	file:
bgr24ToYv12Wrapper	libswscale/swscale_unscaled.c	/^static int bgr24ToYv12Wrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
bgr32	libavcodec/huffyuv.c	/^    int bgr32;                              \/\/use bgr32 instead of bgr24$/;"	m	struct:HYuvContext	file:
bgr8torgb8	libswscale/rgb2rgb.c	/^void bgr8torgb8(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f
bgr_list	libavfilter/libmpcodecs/vf_palette.c	/^static const unsigned int bgr_list[]={$/;"	v	file:
bh	libavcodec/zmbv.c	/^    int bw, bh, bx, by;$/;"	m	struct:ZmbvContext	file:
bi_type	libavcodec/vc1.h	/^    int bi_type;$/;"	m	struct:VC1Context
bias	libavcodec/ffv1.c	/^    int8_t bias;$/;"	m	struct:VlcState	file:
bidir_refine	libavcodec/avcodec.h	/^    int bidir_refine;$/;"	m	struct:AVCodecContext
bidir_refine	libavcodec/motion_est.c	/^static inline int bidir_refine(MpegEncContext * s, int mb_x, int mb_y)$/;"	f	file:
bidir_sal	libavcodec/celp_math.h	/^static inline int bidir_sal(int value, int offset)$/;"	f
big_endian	libavcodec/dpxenc.c	/^    int big_endian;$/;"	m	struct:DPXContext	file:
big_endian	libavformat/electronicarts.c	/^    int big_endian;$/;"	m	struct:EaDemuxContext	file:
big_values	libavcodec/mpegaudiodec.c	/^    int big_values;$/;"	m	struct:GranuleDef	file:
bigendian	libavcodec/vmnc.c	/^    int bigendian;$/;"	m	struct:VmncContext	file:
bigger	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct metrics tiny, low, high, bigger, twox, max;$/;"	m	struct:frame_stats	typeref:struct:frame_stats::	file:
bilin16_h	libavcodec/arm/vp8dsp_init_arm.c	/^VP8_MC(bilin16_h);$/;"	v
bilin16_hv	libavcodec/arm/vp8dsp_init_arm.c	/^VP8_MC(bilin16_hv);$/;"	v
bilin16_v	libavcodec/arm/vp8dsp_init_arm.c	/^VP8_MC(bilin16_v);$/;"	v
bilin4_h	libavcodec/arm/vp8dsp_init_arm.c	/^VP8_MC(bilin4_h);$/;"	v
bilin4_hv	libavcodec/arm/vp8dsp_init_arm.c	/^VP8_MC(bilin4_hv);$/;"	v
bilin4_v	libavcodec/arm/vp8dsp_init_arm.c	/^VP8_MC(bilin4_v);$/;"	v
bilin8_h	libavcodec/arm/vp8dsp_init_arm.c	/^VP8_MC(bilin8_h);$/;"	v
bilin8_hv	libavcodec/arm/vp8dsp_init_arm.c	/^VP8_MC(bilin8_hv);$/;"	v
bilin8_v	libavcodec/arm/vp8dsp_init_arm.c	/^VP8_MC(bilin8_v);$/;"	v
bilinear_filter_vb_m	libavcodec/x86/vp8dsp.asm	/^bilinear_filter_vb_m: times 8 db 7, 1$/;"	l
bilinear_filter_vw_m	libavcodec/x86/vp8dsp.asm	/^bilinear_filter_vw_m: times 8 dw 1$/;"	l
bin	libavformat/matroskadec.c	/^    EbmlBin  bin;$/;"	m	struct:__anon372	file:
bin	libavformat/matroskadec.c	/^    EbmlBin bin;$/;"	m	struct:__anon362	file:
binary_unit_prefixes	ffprobe.c	/^static const char *binary_unit_prefixes [] = { "", "Ki", "Mi", "Gi", "Ti", "Pi" };$/;"	v	file:
bink_decode_plane	libavcodec/bink.c	/^static int bink_decode_plane(BinkContext *c, GetBitContext *gb, int plane_idx,$/;"	f	file:
bink_idct_col	libavcodec/binkidct.c	/^static inline void bink_idct_col(int *dest, const DCTELEM *src)$/;"	f	file:
bink_inter_quant	libavcodec/binkdata.h	/^static const uint32_t bink_inter_quant[16][64] = {$/;"	v
bink_intra_quant	libavcodec/binkdata.h	/^static const uint32_t bink_intra_quant[16][64] = {$/;"	v
bink_patterns	libavcodec/binkdata.h	/^static const uint8_t bink_patterns[16][64] = {$/;"	v
bink_rlelens	libavcodec/bink.c	/^static const uint8_t bink_rlelens[4] = { 4, 8, 12, 32 };$/;"	v	file:
bink_scan	libavcodec/binkdata.h	/^static const uint8_t bink_scan[64] = {$/;"	v
bink_tree_bits	libavcodec/binkdata.h	/^static const uint8_t bink_tree_bits[16][16] = {$/;"	v
bink_tree_lens	libavcodec/binkdata.h	/^static const uint8_t bink_tree_lens[16][16] = {$/;"	v
bink_trees	libavcodec/bink.c	/^static VLC bink_trees[16];$/;"	v	file:
binkb_bundle_signed	libavcodec/bink.c	/^static const int binkb_bundle_signed[BINKB_NB_SRC] = {$/;"	v	file:
binkb_bundle_sizes	libavcodec/bink.c	/^static const int binkb_bundle_sizes[BINKB_NB_SRC] = {$/;"	v	file:
binkb_calc_quant	libavcodec/bink.c	/^static av_cold void binkb_calc_quant(void)$/;"	f	file:
binkb_decode_plane	libavcodec/bink.c	/^static int binkb_decode_plane(BinkContext *c, GetBitContext *gb, int plane_idx,$/;"	f	file:
binkb_den	libavcodec/binkdata.h	/^static const uint8_t binkb_den[16] = {$/;"	v
binkb_get_value	libavcodec/bink.c	/^static inline int binkb_get_value(BinkContext *c, int bundle_num)$/;"	f	file:
binkb_init_bundle	libavcodec/bink.c	/^static void binkb_init_bundle(BinkContext *c, int bundle_num)$/;"	f	file:
binkb_init_bundles	libavcodec/bink.c	/^static void binkb_init_bundles(BinkContext *c)$/;"	f	file:
binkb_inter_quant	libavcodec/bink.c	/^static uint32_t binkb_inter_quant[16][64];$/;"	v	file:
binkb_inter_seed	libavcodec/binkdata.h	/^static const uint8_t binkb_inter_seed[64] = {$/;"	v
binkb_intra_quant	libavcodec/bink.c	/^static uint32_t binkb_intra_quant[16][64];$/;"	v	file:
binkb_intra_seed	libavcodec/binkdata.h	/^static const uint8_t binkb_intra_seed[64] = {$/;"	v
binkb_num	libavcodec/binkdata.h	/^static const uint8_t binkb_num[16] = {$/;"	v
binkb_read_bundle	libavcodec/bink.c	/^static int binkb_read_bundle(BinkContext *c, GetBitContext *gb, int bundle_num)$/;"	f	file:
binkb_runbits	libavcodec/binkdata.h	/^static const uint8_t binkb_runbits[64] = {$/;"	v
biquad_init_coeffs	libavcodec/iirfilter.c	/^static int biquad_init_coeffs(void *avc, struct FFIIRFilterCoeffs *c,$/;"	f	file:
bit	libavcodec/dsputil.h	/^    me_cmp_func bit[6];$/;"	m	struct:DSPContext
bit8x8_c	libavcodec/dsputil.c	/^static int bit8x8_c(\/*MpegEncContext*\/ void *c, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
bit_alloc	libavcodec/ac3enc.c	/^static int bit_alloc(AC3EncodeContext *s, int snr_offset)$/;"	f	file:
bit_alloc	libavcodec/ac3enc.h	/^    AC3BitAllocParameters bit_alloc;        \/\/\/< bit allocation parameters$/;"	m	struct:AC3EncodeContext
bit_alloc_calc_bap	libavcodec/ac3dsp.h	/^    void (*bit_alloc_calc_bap)(int16_t *mask, int16_t *psd, int start, int end,$/;"	m	struct:AC3DSPContext
bit_alloc_init	libavcodec/ac3enc.c	/^static void bit_alloc_init(AC3EncodeContext *s)$/;"	f	file:
bit_alloc_masking	libavcodec/ac3enc.c	/^static void bit_alloc_masking(AC3EncodeContext *s)$/;"	f	file:
bit_alloc_params	libavcodec/ac3dec.h	/^    AC3BitAllocParameters bit_alloc_params;         \/\/\/< bit allocation parameters$/;"	m	struct:__anon88
bit_allocation	libavcodec/imc.c	/^static int bit_allocation (IMCContext* q, int stream_format_code, int freebits, int flag) {$/;"	f	file:
bit_allocation_syntax	libavcodec/ac3dec.h	/^    int bit_allocation_syntax;              \/\/\/< bit allocation model syntax enabled    (bamode)$/;"	m	struct:__anon88
bit_buffer	ffmpeg.c	/^static uint8_t *bit_buffer= NULL;$/;"	v	file:
bit_buffer	ffmpeg/ffmpeg.c	/^static uint8_t *bit_buffer= NULL;$/;"	v	file:
bit_buffer_size	ffmpeg.c	/^static int bit_buffer_size= 1024*256;$/;"	v	file:
bit_buffer_size	ffmpeg/ffmpeg.c	/^static int bit_buffer_size= 1024*256;$/;"	v	file:
bit_copy	libavcodec/dv.c	/^static inline void bit_copy(PutBitContext *pb, GetBitContext *gb)$/;"	f	file:
bit_count	libavcodec/get_bits.h	/^    int bit_count;$/;"	m	struct:GetBitContext
bit_depth	libavcodec/dnxhddata.h	/^    int bit_depth;$/;"	m	struct:__anon281
bit_depth	libavcodec/png.h	/^    int bit_depth;$/;"	m	struct:PNGDecContext
bit_depth_chroma	libavcodec/h264.h	/^    int bit_depth_chroma;              \/\/\/< bit_depth_chroma_minus8 + 8$/;"	m	struct:SPS
bit_depth_luma	libavcodec/h264.h	/^    int bit_depth_luma;                \/\/\/< bit_depth_luma_minus8 + 8$/;"	m	struct:SPS
bit_index	libavcodec/j2kdec.c	/^    int bit_index;$/;"	m	struct:__anon98	file:
bit_index	libavcodec/j2kenc.c	/^    int bit_index;$/;"	m	struct:__anon63	file:
bit_rate	libavcodec/aac_ac3_parser.h	/^    int bit_rate;$/;"	m	struct:AACAC3ParseContext
bit_rate	libavcodec/aacadtsdec.h	/^    uint32_t bit_rate;$/;"	m	struct:__anon121
bit_rate	libavcodec/ac3.h	/^    uint32_t bit_rate;$/;"	m	struct:__anon170
bit_rate	libavcodec/ac3dec.h	/^    int bit_rate;                           \/\/\/< stream bit rate, in bits-per-second$/;"	m	struct:__anon88
bit_rate	libavcodec/ac3enc.h	/^    int bit_rate;                           \/\/\/< target bit rate, in bits-per-second$/;"	m	struct:AC3EncodeContext
bit_rate	libavcodec/atrac3.c	/^    int                 bit_rate;$/;"	m	struct:__anon131	file:
bit_rate	libavcodec/avcodec.h	/^    int bit_rate;$/;"	m	struct:AVCodecContext
bit_rate	libavcodec/cook.c	/^    int                 bit_rate;$/;"	m	struct:cook	file:
bit_rate	libavcodec/dca.c	/^    int bit_rate;               \/\/\/< transmission bit rate$/;"	m	struct:__anon93	file:
bit_rate	libavcodec/mpegvideo.h	/^    int bit_rate;     \/\/\/< wanted bit rate$/;"	m	struct:MpegEncContext
bit_rate	libavcodec/wma.h	/^    int bit_rate;$/;"	m	struct:WMACodecContext
bit_rate	libavformat/avformat.h	/^    int bit_rate;$/;"	m	struct:AVFormatContext
bit_rate	libavformat/rmenc.c	/^    int bit_rate;$/;"	m	struct:__anon382	file:
bit_rate_exponent	libavcodec/vc1.h	/^    uint8_t bit_rate_exponent;$/;"	m	struct:VC1Context
bit_rate_index	libavcodec/dca.c	/^    int bit_rate_index;         \/\/\/< transmission bit rate index$/;"	m	struct:__anon93	file:
bit_rate_tolerance	libavcodec/avcodec.h	/^    int bit_rate_tolerance;$/;"	m	struct:AVCodecContext
bit_rates	libavcodec/dnxhddata.h	/^    int bit_rates[5]; \/\/\/< Helpher to choose variants, rounded to nearest 5Mb\/s$/;"	m	struct:__anon281
bit_size	libavcodec/dv.c	/^    int      bit_size[4];$/;"	m	struct:EncBlockInfo	file:
bitalloc	libavcodec/dca.c	/^    int bitalloc[DCA_PRIM_CHANNELS_MAX][DCA_SUBBANDS];           \/\/\/< bit allocation index$/;"	m	struct:__anon93	file:
bitalloc_129_bits_a	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_129_bits_a[129] =$/;"	v
bitalloc_129_bits_b	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_129_bits_b[129] =$/;"	v
bitalloc_129_bits_c	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_129_bits_c[129] =$/;"	v
bitalloc_129_bits_d	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_129_bits_d[129] =$/;"	v
bitalloc_129_bits_e	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_129_bits_e[129] =$/;"	v
bitalloc_129_bits_f	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_129_bits_f[129] =$/;"	v
bitalloc_129_bits_g	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_129_bits_g[129] =$/;"	v
bitalloc_129_codes_a	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_129_codes_a[129] =$/;"	v
bitalloc_129_codes_b	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_129_codes_b[129] =$/;"	v
bitalloc_129_codes_c	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_129_codes_c[129] =$/;"	v
bitalloc_129_codes_d	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_129_codes_d[129] =$/;"	v
bitalloc_129_codes_e	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_129_codes_e[129] =$/;"	v
bitalloc_129_codes_f	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_129_codes_f[129] =$/;"	v
bitalloc_129_codes_g	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_129_codes_g[129] =$/;"	v
bitalloc_12_bits	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_12_bits[BITALLOC_12_COUNT][12] = {$/;"	v
bitalloc_12_codes	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_12_codes[BITALLOC_12_COUNT][12] = {$/;"	v
bitalloc_12_vlc_bits	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_12_vlc_bits[BITALLOC_12_COUNT] = {$/;"	v
bitalloc_13_bits_a	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_13_bits_a[13] =$/;"	v
bitalloc_13_bits_b	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_13_bits_b[13] =$/;"	v
bitalloc_13_bits_c	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_13_bits_c[13] =$/;"	v
bitalloc_13_codes_a	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_13_codes_a[13] =$/;"	v
bitalloc_13_codes_b	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_13_codes_b[13] =$/;"	v
bitalloc_13_codes_c	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_13_codes_c[13] =$/;"	v
bitalloc_17_bits_a	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_17_bits_a[17] =$/;"	v
bitalloc_17_bits_b	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_17_bits_b[17] =$/;"	v
bitalloc_17_bits_c	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_17_bits_c[17] =$/;"	v
bitalloc_17_bits_d	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_17_bits_d[17] =$/;"	v
bitalloc_17_bits_e	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_17_bits_e[17] =$/;"	v
bitalloc_17_bits_f	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_17_bits_f[17] =$/;"	v
bitalloc_17_bits_g	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_17_bits_g[17] =$/;"	v
bitalloc_17_codes_a	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_17_codes_a[17] =$/;"	v
bitalloc_17_codes_b	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_17_codes_b[17] =$/;"	v
bitalloc_17_codes_c	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_17_codes_c[17] =$/;"	v
bitalloc_17_codes_d	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_17_codes_d[17] =$/;"	v
bitalloc_17_codes_e	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_17_codes_e[17] =$/;"	v
bitalloc_17_codes_f	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_17_codes_f[17] =$/;"	v
bitalloc_17_codes_g	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_17_codes_g[17] =$/;"	v
bitalloc_25_bits_a	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_25_bits_a[25] =$/;"	v
bitalloc_25_bits_b	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_25_bits_b[25] =$/;"	v
bitalloc_25_bits_c	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_25_bits_c[25] =$/;"	v
bitalloc_25_bits_d	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_25_bits_d[25] =$/;"	v
bitalloc_25_bits_e	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_25_bits_e[25] =$/;"	v
bitalloc_25_bits_f	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_25_bits_f[25] =$/;"	v
bitalloc_25_bits_g	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_25_bits_g[25] =$/;"	v
bitalloc_25_codes_a	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_25_codes_a[25] =$/;"	v
bitalloc_25_codes_b	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_25_codes_b[25] =$/;"	v
bitalloc_25_codes_c	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_25_codes_c[25] =$/;"	v
bitalloc_25_codes_d	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_25_codes_d[25] =$/;"	v
bitalloc_25_codes_e	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_25_codes_e[25] =$/;"	v
bitalloc_25_codes_f	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_25_codes_f[25] =$/;"	v
bitalloc_25_codes_g	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_25_codes_g[25] =$/;"	v
bitalloc_33_bits_a	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_33_bits_a[33] =$/;"	v
bitalloc_33_bits_b	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_33_bits_b[33] =$/;"	v
bitalloc_33_bits_c	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_33_bits_c[33] =$/;"	v
bitalloc_33_bits_d	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_33_bits_d[33] =$/;"	v
bitalloc_33_bits_e	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_33_bits_e[33] =$/;"	v
bitalloc_33_bits_f	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_33_bits_f[33] =$/;"	v
bitalloc_33_bits_g	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_33_bits_g[33] =$/;"	v
bitalloc_33_codes_a	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_33_codes_a[33] =$/;"	v
bitalloc_33_codes_b	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_33_codes_b[33] =$/;"	v
bitalloc_33_codes_c	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_33_codes_c[33] =$/;"	v
bitalloc_33_codes_d	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_33_codes_d[33] =$/;"	v
bitalloc_33_codes_e	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_33_codes_e[33] =$/;"	v
bitalloc_33_codes_f	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_33_codes_f[33] =$/;"	v
bitalloc_33_codes_g	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_33_codes_g[33] =$/;"	v
bitalloc_3_bits	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_3_bits[3] =$/;"	v
bitalloc_3_codes	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_3_codes[3] =$/;"	v
bitalloc_5_bits_a	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_5_bits_a[5] =$/;"	v
bitalloc_5_bits_b	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_5_bits_b[5] =$/;"	v
bitalloc_5_bits_c	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_5_bits_c[5] =$/;"	v
bitalloc_5_codes_a	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_5_codes_a[5] =$/;"	v
bitalloc_5_codes_b	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_5_codes_b[5] =$/;"	v
bitalloc_5_codes_c	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_5_codes_c[5] =$/;"	v
bitalloc_65_bits_a	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_65_bits_a[65] =$/;"	v
bitalloc_65_bits_b	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_65_bits_b[65] =$/;"	v
bitalloc_65_bits_c	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_65_bits_c[65] =$/;"	v
bitalloc_65_bits_d	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_65_bits_d[65] =$/;"	v
bitalloc_65_bits_e	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_65_bits_e[65] =$/;"	v
bitalloc_65_bits_f	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_65_bits_f[65] =$/;"	v
bitalloc_65_bits_g	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_65_bits_g[65] =$/;"	v
bitalloc_65_codes_a	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_65_codes_a[65] =$/;"	v
bitalloc_65_codes_b	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_65_codes_b[65] =$/;"	v
bitalloc_65_codes_c	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_65_codes_c[65] =$/;"	v
bitalloc_65_codes_d	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_65_codes_d[65] =$/;"	v
bitalloc_65_codes_e	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_65_codes_e[65] =$/;"	v
bitalloc_65_codes_f	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_65_codes_f[65] =$/;"	v
bitalloc_65_codes_g	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_65_codes_g[65] =$/;"	v
bitalloc_7_bits_a	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_7_bits_a[7] =$/;"	v
bitalloc_7_bits_b	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_7_bits_b[7] =$/;"	v
bitalloc_7_bits_c	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_7_bits_c[7] =$/;"	v
bitalloc_7_codes_a	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_7_codes_a[7] =$/;"	v
bitalloc_7_codes_b	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_7_codes_b[7] =$/;"	v
bitalloc_7_codes_c	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_7_codes_c[7] =$/;"	v
bitalloc_9_bits_a	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_9_bits_a[9] =$/;"	v
bitalloc_9_bits_b	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_9_bits_b[9] =$/;"	v
bitalloc_9_bits_c	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_9_bits_c[9] =$/;"	v
bitalloc_9_codes_a	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_9_codes_a[9] =$/;"	v
bitalloc_9_codes_b	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_9_codes_b[9] =$/;"	v
bitalloc_9_codes_c	libavcodec/dcahuff.h	/^static const uint16_t bitalloc_9_codes_c[9] =$/;"	v
bitalloc_bits	libavcodec/dcahuff.h	/^static const uint8_t* const bitalloc_bits[10][8] = {$/;"	v
bitalloc_codes	libavcodec/dcahuff.h	/^static const uint16_t* const bitalloc_codes[10][8] = {$/;"	v
bitalloc_huffman	libavcodec/dca.c	/^    int bitalloc_huffman[DCA_PRIM_CHANNELS_MAX];    \/\/\/< bit allocation quantizer select$/;"	m	struct:__anon93	file:
bitalloc_maxbits	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_maxbits[10][7] = {$/;"	v
bitalloc_offsets	libavcodec/dcahuff.h	/^static const int8_t bitalloc_offsets[10] =$/;"	v
bitalloc_sizes	libavcodec/dcahuff.h	/^static const uint8_t bitalloc_sizes[10] = { 3, 5, 7, 9, 13, 17, 25, 33, 65, 129 };$/;"	v
bitbuf	libavcodec/kmvc.c	/^    int bitbuf;$/;"	m	struct:BitBuf	file:
bitdepth	libavcodec/dirac.c	/^    uint8_t             bitdepth;$/;"	m	struct:__anon94	file:
bitdepth	libavformat/matroskadec.c	/^    uint64_t bitdepth;$/;"	m	struct:__anon358	file:
bitindex	libavcodec/shorten.c	/^    int bitindex;$/;"	m	struct:ShortenContext	file:
bitinv32	libavcodec/mpegaudiotab.h	/^static const int bitinv32[32] = {$/;"	v
bitlen	libavcodec/qcelpdata.h	/^    uint8_t bitlen; \/*!< number of bits to read *\/$/;"	m	struct:__anon85
bitmap_compression	libavformat/iff.c	/^    bitmap_compression_type bitmap_compression;  \/\/\/< delta compression method used$/;"	m	struct:__anon395	file:
bitmap_compression_type	libavformat/iff.c	/^} bitmap_compression_type;$/;"	t	typeref:enum:__anon394	file:
bitmap_size	libavcodec/dsicinav.c	/^    unsigned int bitmap_size;$/;"	m	struct:CinVideoContext	file:
bitmap_table	libavcodec/dsicinav.c	/^    uint8_t *bitmap_table[3];$/;"	m	struct:CinVideoContext	file:
bitmask_size	libavcodec/mxpegdec.c	/^    unsigned bitmask_size; \/* size of bitmask *\/$/;"	m	struct:MXpegDecodeContext	file:
bitplane_buf_id	libavcodec/vaapi.h	/^    uint32_t bitplane_buf_id;$/;"	m	struct:vaapi_context
bitplane_decoding	libavcodec/vc1.c	/^static int bitplane_decoding(uint8_t* data, int *raw_flag, VC1Context *v)$/;"	f	file:
bitpos	libavcodec/qcelpdata.h	/^    uint8_t bitpos; \/*!< position of the lowest bit in the value's byte *\/$/;"	m	struct:__anon85
bitrate	libavcodec/qcelpdec.c	/^    qcelp_packet_rate bitrate;$/;"	m	struct:__anon225	file:
bitrate_acc	libavcodec/wavpack.c	/^    int bitrate_acc, bitrate_delta;$/;"	m	struct:WvChannel	file:
bitrate_delta	libavcodec/wavpack.c	/^    int bitrate_acc, bitrate_delta;$/;"	m	struct:WvChannel	file:
bitrate_index	libavcodec/mpegaudioenc.c	/^    int bitrate_index; \/* bit rate *\/$/;"	m	struct:MpegAudioContext	file:
bitrate_maximum	libavcodec/vorbisdec.c	/^    uint32_t      bitrate_maximum;$/;"	m	struct:vorbis_context_s	file:
bitrate_minimum	libavcodec/vorbisdec.c	/^    uint32_t      bitrate_minimum;$/;"	m	struct:vorbis_context_s	file:
bitrate_nominal	libavcodec/vorbisdec.c	/^    uint32_t      bitrate_nominal;$/;"	m	struct:vorbis_context_s	file:
bitres	libavcodec/psymodel.h	/^    } bitres;$/;"	m	struct:FFPsyContext	typeref:struct:FFPsyContext::__anon226
bitrtq_postproc	libavcodec/vc1.h	/^    int bitrtq_postproc;  \/\/\/< 5bits, quantized framerate-based postprocessing strength$/;"	m	struct:VC1Context
bits	libavcodec/bitstream.c	/^    uint8_t bits;$/;"	m	struct:__anon81	file:
bits	libavcodec/dnxhdenc.h	/^    int bits;$/;"	m	struct:__anon163
bits	libavcodec/get_bits.h	/^    int bits;$/;"	m	struct:VLC
bits	libavcodec/huffyuv.c	/^    uint32_t bits[3][256];$/;"	m	struct:HYuvContext	file:
bits	libavcodec/kmvc.c	/^    int bits;$/;"	m	struct:BitBuf	file:
bits	libavcodec/libspeexdec.c	/^    SpeexBits bits;$/;"	m	struct:__anon228	file:
bits	libavcodec/libspeexenc.c	/^    SpeexBits bits;$/;"	m	struct:__anon135	file:
bits	libavcodec/lzwenc.c	/^    int bits;                \/\/\/< Actual bits code$/;"	m	struct:LZWEncodeState	file:
bits	libavcodec/mjpegdec.h	/^    int bits;           \/* bits per component *\/$/;"	m	struct:MJpegDecodeContext
bits	libavcodec/mpc.h	/^    uint8_t *bits;$/;"	m	struct:__anon179
bits	libavcodec/mpegaudiodectab.h	/^    const uint8_t *bits;$/;"	m	struct:HuffTable
bits	libavcodec/psymodel.h	/^        int bits;                     \/\/\/< number of bits used in the bitresevoir$/;"	m	struct:FFPsyContext::__anon226
bits	libavcodec/psymodel.h	/^    int   bits;$/;"	m	struct:FFPsyBand
bits	libavcodec/rv34.h	/^    int bits;                \/\/\/< slice size in bits$/;"	m	struct:RV34DecContext
bits	libavcodec/smacker.c	/^    uint32_t *bits;$/;"	m	struct:HuffContext	file:
bits	libavcodec/truemotion2.c	/^    int bits;$/;"	m	struct:TM2Codes	file:
bits	libavcodec/truemotion2.c	/^    uint32_t *bits; \/\/\/< codes$/;"	m	struct:TM2Huff	file:
bits	libavcodec/vc1.h	/^    int bits;$/;"	m	struct:VC1Context
bits	libavcodec/vp56.h	/^    int bits; \/* stored negated (i.e. negative "bits" is a positive number of$/;"	m	struct:__anon220
bits	libavformat/4xm.c	/^    int bits;$/;"	m	struct:AudioTrack	file:
bits	libavformat/siff.c	/^    int bits;$/;"	m	struct:SIFFContext	file:
bits	libavutil/crc.c	/^    uint8_t  bits;$/;"	m	struct:__anon307	file:
bits	libavutil/samplefmt.c	/^    int bits;$/;"	m	struct:SampleFmtInfo	file:
bits1	libavcodec/aactab.c	/^static const uint8_t bits1[81] = {$/;"	v	file:
bits10	libavcodec/aactab.c	/^static const uint8_t bits10[169] = {$/;"	v	file:
bits11	libavcodec/aactab.c	/^static const uint8_t bits11[289] = {$/;"	v	file:
bits2	libavcodec/aactab.c	/^static const uint8_t bits2[81] = {$/;"	v	file:
bits2qp	libavcodec/ratecontrol.c	/^static inline double bits2qp(RateControlEntry *rce, double bits){$/;"	f	file:
bits3	libavcodec/aactab.c	/^static const uint8_t bits3[81] = {$/;"	v	file:
bits4	libavcodec/aactab.c	/^static const uint8_t bits4[81] = {$/;"	v	file:
bits5	libavcodec/aactab.c	/^static const uint8_t bits5[81] = {$/;"	v	file:
bits6	libavcodec/aactab.c	/^static const uint8_t bits6[81] = {$/;"	v	file:
bits7	libavcodec/aactab.c	/^static const uint8_t bits7[64] = {$/;"	v	file:
bits8	libavcodec/aactab.c	/^static const uint8_t bits8[64] = {$/;"	v	file:
bits9	libavcodec/aactab.c	/^static const uint8_t bits9[169] = {$/;"	v	file:
bitsBandT	libavcodec/imc.c	/^    int bitsBandT[BANDS];      \/\/\/< how many bits per codeword in band$/;"	m	struct:__anon90	file:
bits_main_spec	libavcodec/twinvq.c	/^    uint8_t bits_main_spec[2][4][2]; \/\/\/< bits for the main codebook$/;"	m	struct:TwinContext	file:
bits_main_spec_change	libavcodec/twinvq.c	/^    int bits_main_spec_change[4];$/;"	m	struct:TwinContext	file:
bits_per_coded_sample	libavcodec/avcodec.h	/^     int bits_per_coded_sample;$/;"	m	struct:AVCodecContext
bits_per_component	libavcodec/dpxenc.c	/^    int bits_per_component;$/;"	m	struct:DPXContext	file:
bits_per_frame	libavcodec/atrac3.c	/^    int                 bits_per_frame;$/;"	m	struct:__anon131	file:
bits_per_frame	libavcodec/sipr.c	/^    uint16_t bits_per_frame;$/;"	m	struct:__anon112	file:
bits_per_pixel	libavcodec/gifdec.c	/^    int bits_per_pixel;$/;"	m	struct:GifState	file:
bits_per_pixel	libavcodec/png.h	/^    int bits_per_pixel;$/;"	m	struct:PNGDecContext
bits_per_pixel	libavdevice/fbdev.c	/^    int bits_per_pixel;$/;"	m	struct:rgb_pixfmt_map_entry	file:
bits_per_raw_sample	libavcodec/avcodec.h	/^    int bits_per_raw_sample;$/;"	m	struct:AVCodecContext
bits_per_sample	libavcodec/wmaprodec.c	/^    uint8_t          bits_per_sample;               \/\/\/< integer audio sample size for the unscaled IMDCT output (used to scale to [-1.0, 1.0])$/;"	m	struct:WMAProDecodeCtx	file:
bits_per_sample	libavformat/avs.c	/^    int bits_per_sample;$/;"	m	struct:avs_format	file:
bits_per_sample	libavformat/mxfdec.c	/^    int bits_per_sample;$/;"	m	struct:__anon443	file:
bits_per_subpacket	libavcodec/cook.c	/^    int                 bits_per_subpacket;$/;"	m	struct:__anon230	file:
bits_per_subpdiv	libavcodec/cook.c	/^    int                 bits_per_subpdiv;$/;"	m	struct:__anon230	file:
bits_to_store	libavcodec/sonic.c	/^static int bits_to_store(uint64_t x)$/;"	f	file:
bits_used	libavcodec/wavpack.c	/^    int bits_used;$/;"	m	struct:SavedContext	file:
bits_written	libavcodec/ac3enc.h	/^    int64_t bits_written;                   \/\/\/< bit count    (used to avg. bitrate)$/;"	m	struct:AC3EncodeContext
bitshift	libavcodec/shorten.c	/^    int bitshift;$/;"	m	struct:ShortenContext	file:
bitstream	libavcodec/dxva2_h264.c	/^    const uint8_t         *bitstream;$/;"	m	struct:dxva2_picture_context	file:
bitstream	libavcodec/dxva2_mpeg2.c	/^    const uint8_t          *bitstream;$/;"	m	struct:dxva2_picture_context	file:
bitstream	libavcodec/dxva2_vc1.c	/^    const uint8_t          *bitstream;$/;"	m	struct:dxva2_picture_context	file:
bitstream	libavcodec/shorten.c	/^    uint8_t *bitstream;$/;"	m	struct:ShortenContext	file:
bitstream_bpp	libavcodec/huffyuv.c	/^    int bitstream_bpp;$/;"	m	struct:HYuvContext	file:
bitstream_buf	libavcodec/eamad.c	/^    void *bitstream_buf;$/;"	m	struct:MadContext	file:
bitstream_buf	libavcodec/eatqi.c	/^    void *bitstream_buf;$/;"	m	struct:TqiContext	file:
bitstream_buf_size	libavcodec/eamad.c	/^    unsigned int bitstream_buf_size;$/;"	m	struct:MadContext	file:
bitstream_buf_size	libavcodec/eatqi.c	/^    unsigned int bitstream_buf_size;$/;"	m	struct:TqiContext	file:
bitstream_buffer	libavcodec/4xm.c	/^    void *bitstream_buffer;$/;"	m	struct:FourXContext	file:
bitstream_buffer	libavcodec/asv1.c	/^    uint8_t *bitstream_buffer;$/;"	m	struct:ASV1Context	file:
bitstream_buffer	libavcodec/huffyuv.c	/^    uint8_t *bitstream_buffer;$/;"	m	struct:HYuvContext	file:
bitstream_buffer	libavcodec/mdec.c	/^    uint8_t *bitstream_buffer;$/;"	m	struct:MDECContext	file:
bitstream_buffer	libavcodec/mpegvideo.h	/^    uint8_t *bitstream_buffer; \/\/Divx 5.01 puts several frames in a single one, this is used to reorder them$/;"	m	struct:MpegEncContext
bitstream_buffer_size	libavcodec/4xm.c	/^    unsigned int bitstream_buffer_size;$/;"	m	struct:FourXContext	file:
bitstream_buffer_size	libavcodec/asv1.c	/^    unsigned int bitstream_buffer_size;$/;"	m	struct:ASV1Context	file:
bitstream_buffer_size	libavcodec/huffyuv.c	/^    unsigned int bitstream_buffer_size;$/;"	m	struct:HYuvContext	file:
bitstream_buffer_size	libavcodec/mdec.c	/^    unsigned int bitstream_buffer_size;$/;"	m	struct:MDECContext	file:
bitstream_buffer_size	libavcodec/mpegvideo.h	/^    int bitstream_buffer_size;$/;"	m	struct:MpegEncContext
bitstream_buffers	libavcodec/vdpau.h	/^    VdpBitstreamBuffer *bitstream_buffers;$/;"	m	struct:vdpau_render_state
bitstream_buffers_allocated	libavcodec/vdpau.h	/^    int bitstream_buffers_allocated;$/;"	m	struct:vdpau_render_state
bitstream_buffers_used	libavcodec/vdpau.h	/^    int bitstream_buffers_used;$/;"	m	struct:vdpau_render_state
bitstream_filters	ffmpeg.c	/^    AVBitStreamFilterContext *bitstream_filters;$/;"	m	struct:AVOutputStream	file:
bitstream_filters	ffmpeg/ffmpeg.c	/^    AVBitStreamFilterContext *bitstream_filters;$/;"	m	struct:AVOutputStream	file:
bitstream_id	libavcodec/ac3.h	/^    uint8_t bitstream_id;$/;"	m	struct:__anon170
bitstream_id	libavcodec/ac3enc.h	/^    int bitstream_id;                       \/\/\/< bitstream id                           (bsid)$/;"	m	struct:AC3EncodeContext
bitstream_index	libavcodec/shorten.c	/^    int bitstream_index;$/;"	m	struct:ShortenContext	file:
bitstream_mode	libavcodec/ac3.h	/^    int bitstream_mode;$/;"	m	struct:AC3EncOptions
bitstream_mode	libavcodec/ac3.h	/^    uint8_t bitstream_mode;$/;"	m	struct:__anon170
bitstream_mode	libavcodec/ac3dec.h	/^    int bitstream_mode;                     \/\/\/< bitstream mode                         (bsmod)$/;"	m	struct:__anon88
bitstream_mode	libavcodec/ac3enc.h	/^    int bitstream_mode;                     \/\/\/< bitstream mode                         (bsmod)$/;"	m	struct:AC3EncodeContext
bitstream_restriction_flag	libavcodec/h264.h	/^    int bitstream_restriction_flag;$/;"	m	struct:SPS
bitstream_size	libavcodec/dxva2_h264.c	/^    unsigned              bitstream_size;$/;"	m	struct:dxva2_picture_context	file:
bitstream_size	libavcodec/dxva2_mpeg2.c	/^    unsigned               bitstream_size;$/;"	m	struct:dxva2_picture_context	file:
bitstream_size	libavcodec/dxva2_vc1.c	/^    unsigned               bitstream_size;$/;"	m	struct:dxva2_picture_context	file:
bitstream_size	libavcodec/shorten.c	/^    int bitstream_size;$/;"	m	struct:ShortenContext	file:
bitswap_32	libavcodec/bitstream.c	/^static av_always_inline uint32_t bitswap_32(uint32_t x) {$/;"	f	file:
biweight_h264_WxH_altivec	libavcodec/ppc/h264_altivec.c	/^void biweight_h264_WxH_altivec(uint8_t *dst, uint8_t *src, int stride, int log2_denom,$/;"	f	file:
biweight_h264_pixels_tab	libavcodec/h264dsp.h	/^    h264_biweight_func biweight_h264_pixels_tab[10];$/;"	m	struct:H264DSPContext
bktr_class	libavdevice/bktr.c	/^static const AVClass bktr_class = {$/;"	v	file:
bktr_dev	libavdevice/bktr.c	/^static int bktr_dev[] = { METEOR_DEV0, METEOR_DEV1, METEOR_DEV2,$/;"	v	file:
bktr_getframe	libavdevice/bktr.c	/^static void bktr_getframe(uint64_t per_frame)$/;"	f	file:
bktr_init	libavdevice/bktr.c	/^static av_cold int bktr_init(const char *video_device, int width, int height,$/;"	f	file:
blend_slice	libavfilter/vf_overlay.c	/^static void blend_slice(AVFilterContext *ctx,$/;"	f	file:
blend_subrect	ffplay.c	/^static void blend_subrect(AVPicture *dst, const AVSubtitleRect *rect, int imgw, int imgh)$/;"	f	file:
blk	libavutil/sha.c	162;"	d	file:
blk	libavutil/sha.c	163;"	d	file:
blk	libavutil/sha.c	46;"	d	file:
blk0	libavutil/sha.c	45;"	d	file:
blk_size	libavcodec/ivi_common.h	/^    int             blk_size;       \/\/\/< block size$/;"	m	struct:__anon107
blk_vlc	libavcodec/ivi_common.h	/^    IVIHuffTab      blk_vlc;        \/\/\/< vlc table for decoding block data$/;"	m	struct:__anon107
blksize	libavformat/wv.c	/^    uint32_t blksize, flags;$/;"	m	struct:__anon327	file:
block	libavcodec/cavs.h	/^    DCTELEM *block;$/;"	m	struct:__anon207
block	libavcodec/mpegvideo.h	/^    DCTELEM (*block)[64]; \/\/\/< points to one of the following blocks$/;"	m	struct:MpegEncContext
block	libavcodec/msvideo1enc.c	/^    int block[16*3];$/;"	m	struct:Msvideo1EncContext	file:
block	libavcodec/snow.c	/^    BlockNode *block;$/;"	m	struct:SnowContext	file:
block	libavcodec/vc1.h	/^    DCTELEM (*block)[6][64];$/;"	m	struct:VC1Context
block	libavcodec/wavpack.c	/^    int block;$/;"	m	struct:WavpackContext	file:
block	libavutil/md5.c	/^    uint8_t  block[64];$/;"	m	struct:AVMD5	file:
block2	libavcodec/msvideo1enc.c	/^    int block2[16*3];$/;"	m	struct:Msvideo1EncContext	file:
blockCopy	libpostproc/postprocess_template.c	/^static inline void RENAME(blockCopy)(uint8_t dst[], int dstStride, const uint8_t src[], int srcStride,$/;"	f	file:
block_align	libavcodec/avcodec.h	/^    int block_align;$/;"	m	struct:AVCodecContext
block_align	libavcodec/sonic.c	/^    int channels, samplerate, block_align, frame_size;$/;"	m	struct:SonicContext	file:
block_align	libavcodec/wma.h	/^    int block_align;$/;"	m	struct:WMACodecContext
block_align	libavformat/siff.c	/^    int block_align;$/;"	m	struct:SIFFContext	file:
block_cmp	libavcodec/zmbvenc.c	/^static inline int block_cmp(uint8_t *src, int stride, uint8_t *src2, int stride2,$/;"	f	file:
block_codebook	libavcodec/eatgv.c	/^    unsigned char (*block_codebook)[16];$/;"	m	struct:TgvContext	file:
block_conv_table	libavcodec/wmavoice.c	/^    uint16_t block_conv_table[4]; \/\/\/< boundaries for block pitch unit\/scale$/;"	m	struct:__anon157	file:
block_coords	libavcodec/ulti.c	/^static const int block_coords[8] = \/\/ 4x4 block coords in 8x8 superblock$/;"	v	file:
block_copy	libavcodec/roqvideo.c	/^static inline void block_copy(unsigned char *out, unsigned char *in,$/;"	f	file:
block_delta_pitch_hrange	libavcodec/wmavoice.c	/^    int block_delta_pitch_hrange; \/\/\/< 1\/2 range of the delta (full range is$/;"	m	struct:__anon157	file:
block_delta_pitch_nbits	libavcodec/wmavoice.c	/^    int block_delta_pitch_nbits;  \/\/\/< number of bits used to specify the$/;"	m	struct:__anon157	file:
block_diffs	libavfilter/libmpcodecs/vf_detc.c	/^static void block_diffs(struct metrics *m, unsigned char *old, unsigned char *new, int os, int ns)$/;"	f	file:
block_diffs	libavfilter/libmpcodecs/vf_ivtc.c	/^static void (*block_diffs)(struct metrics *, unsigned char *, unsigned char *, int, int);$/;"	v	file:
block_diffs_C	libavfilter/libmpcodecs/vf_ivtc.c	/^static void block_diffs_C(struct metrics *m, unsigned char *old, unsigned char *new, int os, int ns)$/;"	f	file:
block_diffs_MMX	libavfilter/libmpcodecs/vf_ivtc.c	/^static void block_diffs_MMX(struct metrics *m, unsigned char *old, unsigned char *new, int os, int ns)$/;"	f	file:
block_height	libavcodec/flashsv.c	/^    int             block_width, block_height;$/;"	m	struct:FlashSVContext	file:
block_height	libavcodec/flashsv2enc.c	/^    int block_width, block_height;$/;"	m	struct:FlashSV2Context	file:
block_height	libavcodec/flashsvenc.c	/^    int             block_width, block_height;$/;"	m	struct:FlashSVContext	file:
block_height	libavcodec/truemotion1.c	/^    int block_height; \/\/ hres$/;"	m	struct:comp_types	file:
block_height	libavcodec/truemotion1.c	/^    int block_height;$/;"	m	struct:TrueMotion1Context	file:
block_index	libavcodec/mpegvideo.h	/^    int block_index[6]; \/\/\/< index to current MB in block based arrays with edges$/;"	m	struct:MpegEncContext
block_last_index	libavcodec/mdec.c	/^    int block_last_index[6];$/;"	m	struct:MDECContext	file:
block_last_index	libavcodec/mpegvideo.h	/^    int block_last_index[12];  \/\/\/< last non zero coefficient in block$/;"	m	struct:MpegEncContext
block_len	libavcodec/wma.h	/^    int block_len;                          \/\/\/< block length in samples$/;"	m	struct:WMACodecContext
block_len_bits	libavcodec/wma.h	/^    int block_len_bits;                     \/\/\/< log2 of current block length$/;"	m	struct:WMACodecContext
block_length	libavcodec/alsdec.c	/^    unsigned int block_length;      \/\/\/< number of samples within the block$/;"	m	struct:__anon153	file:
block_max_depth	libavcodec/snow.c	/^    int block_max_depth;$/;"	m	struct:SnowContext	file:
block_metrics_3dnow	libavfilter/libmpcodecs/vf_filmdint.c	/^block_metrics_3dnow(unsigned char *a, unsigned char *b, int as, int bs,$/;"	f	file:
block_metrics_c	libavfilter/libmpcodecs/vf_filmdint.c	/^block_metrics_c(unsigned char *a, unsigned char *b, int as, int bs,$/;"	f	file:
block_metrics_fast_c	libavfilter/libmpcodecs/vf_filmdint.c	/^block_metrics_fast_c(unsigned char *a, unsigned char *b, int as, int bs,$/;"	f	file:
block_metrics_faster_c	libavfilter/libmpcodecs/vf_filmdint.c	/^block_metrics_faster_c(unsigned char *a, unsigned char *b, int as, int bs,$/;"	f	file:
block_metrics_mmx2	libavfilter/libmpcodecs/vf_filmdint.c	/^block_metrics_mmx2(unsigned char *a, unsigned char *b, int as, int bs,$/;"	f	file:
block_num	libavcodec/wma.h	/^    int block_num;                          \/\/\/< block number in current frame$/;"	m	struct:WMACodecContext
block_num_to_btype_vlc_num	libavcodec/rv40vlc2.h	/^static const uint8_t block_num_to_btype_vlc_num[12] = {$/;"	v
block_num_to_ptype_vlc_num	libavcodec/rv40vlc2.h	/^static const uint8_t block_num_to_ptype_vlc_num[12] = {$/;"	v
block_offset	libavcodec/h264.h	/^    int block_offset[2*(16*3)];$/;"	m	struct:H264Context
block_offset	libavcodec/vp56.h	/^    int block_offset[6];$/;"	m	struct:vp56_context
block_parsed	libavformat/wv.c	/^    int block_parsed;$/;"	m	struct:__anon327	file:
block_pitch_nbits	libavcodec/wmavoice.c	/^    int block_pitch_nbits;        \/\/\/< number of bits used to specify the$/;"	m	struct:__anon157	file:
block_pitch_range	libavcodec/wmavoice.c	/^    int block_pitch_range;        \/\/\/< range of the block pitch$/;"	m	struct:__anon157	file:
block_pos	libavcodec/wma.h	/^    int block_pos;                          \/\/\/< current position in frame$/;"	m	struct:WMACodecContext
block_records	libavformat/c93.c	/^    C93BlockRecord block_records[512];$/;"	m	struct:__anon482	file:
block_runs	libavcodec/smacker.c	/^static const int block_runs[64] = {$/;"	v	file:
block_size	libavcodec/binkaudio.c	/^    int block_size;$/;"	m	struct:__anon136	file:
block_size	libavcodec/flashsv.c	/^    int             block_size;$/;"	m	struct:FlashSVContext	file:
block_size	libavcodec/flashsvenc.c	/^    int             block_size;$/;"	m	struct:FlashSVContext	file:
block_size	libavformat/rtpdec_qdm2.c	/^    int block_size;            \/\/\/< from extradata, used as pkt length$/;"	m	struct:PayloadContext	file:
block_size_fraction	libavcodec/flashsv2enc.c	/^static const double block_size_fraction = 1.0 \/ 300;$/;"	v	file:
block_sizes	libavcodec/dvdata.h	/^    const uint8_t   *block_sizes;           \/* AC block sizes, in bits *\/$/;"	m	struct:DVprofile
block_sizes_dv100	libavcodec/dvdata.h	/^static const uint8_t block_sizes_dv100[8] = {$/;"	v
block_sizes_dv2550	libavcodec/dvdata.h	/^static const uint8_t block_sizes_dv2550[8] = {$/;"	v
block_sse	libavcodec/roqvideoenc.c	/^static int block_sse(uint8_t **buf1, uint8_t **buf2, int x1, int y1, int x2,$/;"	f	file:
block_state	libavcodec/snow.c	/^    uint8_t block_state[128 + 32*128];$/;"	m	struct:SnowContext	file:
block_stride	libavcodec/mjpegdec.h	/^    int block_stride[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext
block_switch	libavcodec/ac3dec.h	/^    int block_switch[AC3_MAX_CHANNELS];     \/\/\/< block switch flags                     (blksw)$/;"	m	struct:__anon88
block_switch_syntax	libavcodec/ac3dec.h	/^    int block_switch_syntax;                \/\/\/< block switch syntax enabled            (blkswe)$/;"	m	struct:__anon88
block_switching	libavcodec/alsdec.c	/^    int block_switching;      \/\/\/< number of block switching levels$/;"	m	struct:__anon150	file:
block_time_ms	libavcodec/flacenc.c	/^    int block_time_ms;$/;"	m	struct:CompressionOptions	file:
block_type	libavcodec/mpegaudiodec.c	/^    uint8_t block_type;$/;"	m	struct:GranuleDef	file:
block_type	libavcodec/rv34.h	/^    int block_type;          \/\/\/< current block type$/;"	m	struct:RV34DecContext
block_type	libavcodec/truemotion1.c	/^    int block_type;$/;"	m	struct:TrueMotion1Context	file:
block_type	libavcodec/truemotion1.c	/^    int block_type;$/;"	m	struct:comp_types	file:
block_type	libavformat/rtpdec_qdm2.c	/^    int block_type;            \/\/\/< superblock type, value 2 .. 8$/;"	m	struct:PayloadContext	file:
block_type_tab	libavcodec/4xm.c	/^static const uint8_t block_type_tab[2][4][8][2]={$/;"	v	file:
block_type_vlc	libavcodec/4xm.c	/^static VLC block_type_vlc[2][4];$/;"	v	file:
block_width	libavcodec/flashsv.c	/^    int             block_width, block_height;$/;"	m	struct:FlashSVContext	file:
block_width	libavcodec/flashsv2enc.c	/^    int block_width, block_height;$/;"	m	struct:FlashSV2Context	file:
block_width	libavcodec/flashsvenc.c	/^    int             block_width, block_height;$/;"	m	struct:FlashSVContext	file:
block_width	libavcodec/truemotion1.c	/^    int block_width; \/\/ vres$/;"	m	struct:comp_types	file:
block_width	libavcodec/truemotion1.c	/^    int block_width;$/;"	m	struct:TrueMotion1Context	file:
block_wrap	libavcodec/mpegvideo.h	/^    int block_wrap[6];$/;"	m	struct:MpegEncContext
blockflag	libavcodec/vorbisdec.c	/^    uint8_t       blockflag;$/;"	m	struct:__anon262	file:
blockflag	libavcodec/vorbisenc.c	/^    int blockflag;$/;"	m	struct:__anon193	file:
blockpos	libavcodec/mlpdec.c	/^    uint16_t    blockpos;$/;"	m	struct:SubStream	file:
blocks	libavcodec/ac3enc.h	/^    AC3Block blocks[AC3_MAX_BLOCKS];        \/\/\/< per-block info$/;"	m	struct:AC3EncodeContext
blocks	libavcodec/escape124.c	/^    MacroBlock* blocks;$/;"	m	struct:CodeBook	file:
blocks	libavcodec/mjpegdec.h	/^    DCTELEM (*blocks[MAX_COMPONENTS])[64]; \/\/\/< intermediate sums (progressive mode)$/;"	m	struct:MJpegDecodeContext
blocks	libavcodec/mpegvideo.h	/^    DCTELEM (*blocks)[8][64]; \/\/ for HQ mode we need to keep the best block$/;"	m	struct:MpegEncContext
blocks	libavcodec/ulti.c	/^    int width, height, blocks;$/;"	m	struct:UltimotionDecodeContext	file:
blocks	libavformat/matroskadec.c	/^    EbmlList blocks;$/;"	m	struct:__anon373	file:
blocks_size	libavcodec/flashsv2enc.c	/^    int blocks_size;$/;"	m	struct:FlashSV2Context	file:
blocksdecoded	libavcodec/apedec.c	/^    int blocksdecoded;                       \/\/\/< count of decoded samples in current frame$/;"	m	struct:APEContext	file:
blocksize	libavcodec/flac.h	/^    int blocksize;          \/**< block size of the frame                 *\/$/;"	m	struct:FLACFrameInfo
blocksize	libavcodec/flacdec.c	/^    int blocksize;                          \/\/\/< number of samples in the current frame$/;"	m	struct:FLACContext	file:
blocksize	libavcodec/flacenc.c	/^    int blocksize;$/;"	m	struct:FlacFrame	file:
blocksize	libavcodec/lpc.h	/^    int blocksize;$/;"	m	struct:LPCContext
blocksize	libavcodec/mlpdec.c	/^    uint16_t    blocksize;$/;"	m	struct:SubStream	file:
blocksize	libavcodec/shorten.c	/^    int blocksize;$/;"	m	struct:ShortenContext	file:
blocksize	libavcodec/vorbisdec.c	/^    uint32_t      blocksize[2];$/;"	m	struct:vorbis_context_s	file:
blocksperframe	libavformat/ape.c	/^    uint32_t blocksperframe;$/;"	m	struct:__anon335	file:
blue_offset	libavdevice/fbdev.c	/^    int red_offset, green_offset, blue_offset, alpha_offset;$/;"	m	struct:rgb_pixfmt_map_entry	file:
blur	libavfilter/libmpcodecs/vf_boxblur.c	/^static inline void blur(uint8_t *dst, uint8_t *src, int w, int radius, int dstStep, int srcStep){$/;"	f	file:
blur	libavfilter/libmpcodecs/vf_sab.c	/^static inline void blur(uint8_t *dst, uint8_t *src, int w, int h, int dstStride, int srcStride, FilterParam *fp){$/;"	f	file:
blur	libavfilter/libmpcodecs/vf_smartblur.c	/^static inline void blur(uint8_t *dst, uint8_t *src, int w, int h, int dstStride, int srcStride, FilterParam *fp){$/;"	f	file:
blur2	libavfilter/libmpcodecs/vf_boxblur.c	/^static inline void blur2(uint8_t *dst, uint8_t *src, int w, int radius, int power, int dstStep, int srcStep){$/;"	f	file:
blur_line	libavfilter/gradfun.h	/^    void (*blur_line) (uint16_t *dc, uint16_t *buf, const uint16_t *buf1, const uint8_t *src, int src_linesize, int width);$/;"	m	struct:__anon17
blur_line	libavfilter/libmpcodecs/vf_gradfun.c	/^    void (*blur_line)(uint16_t *dc, uint16_t *buf, uint16_t *buf1,$/;"	m	struct:vf_priv_s	file:
blur_line_c	libavfilter/libmpcodecs/vf_gradfun.c	/^static void blur_line_c(uint16_t *dc, uint16_t *buf, uint16_t *buf1,$/;"	f	file:
blur_line_sse2	libavfilter/libmpcodecs/vf_gradfun.c	/^static void blur_line_sse2(uint16_t *dc, uint16_t *buf, uint16_t *buf1,$/;"	f	file:
bmp	ffplay.c	/^    SDL_Overlay *bmp;$/;"	m	struct:VideoPicture	file:
bmp_decode_end	libavcodec/bmp.c	/^static av_cold int bmp_decode_end(AVCodecContext *avctx)$/;"	f	file:
bmp_decode_frame	libavcodec/bmp.c	/^static int bmp_decode_frame(AVCodecContext *avctx,$/;"	f	file:
bmp_decode_init	libavcodec/bmp.c	/^static av_cold int bmp_decode_init(AVCodecContext *avctx){$/;"	f	file:
bmp_encode_frame	libavcodec/bmpenc.c	/^static int bmp_encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
bmp_encode_init	libavcodec/bmpenc.c	/^static av_cold int bmp_encode_init(AVCodecContext *avctx){$/;"	f	file:
bmv	libavcodec/vp8.h	/^    VP56mv bmv[16];$/;"	m	struct:__anon181
body	libavutil/md5.c	/^static void body(uint32_t ABCD[4], uint32_t X[16]){$/;"	f	file:
body_offset	libavformat/mxfenc.c	/^    uint64_t body_offset;$/;"	m	struct:MXFContext	file:
body_partition_key	libavformat/mxfenc.c	/^static const uint8_t body_partition_key[]          = { 0x06,0x0E,0x2B,0x34,0x02,0x05,0x01,0x01,0x0D,0x01,0x02,0x01,0x01,0x03,0x04,0x00 }; \/\/ ClosedComplete$/;"	v	file:
body_partition_offset	libavformat/mxfenc.c	/^    uint64_t *body_partition_offset;$/;"	m	struct:MXFContext	file:
body_partitions_count	libavformat/mxfenc.c	/^    unsigned body_partitions_count;$/;"	m	struct:MXFContext	file:
body_pos	libavformat/iff.c	/^    uint64_t  body_pos;$/;"	m	struct:__anon395	file:
body_size	libavformat/iff.c	/^    uint32_t  body_size;$/;"	m	struct:__anon395	file:
bold	libavcodec/ass_split.h	/^    int   bold;           \/**< whether text is bold (1) or not (0) *\/$/;"	m	struct:__anon249
book_list	libavcodec/vorbisdec.c	/^            uint8_t      *book_list;$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor0_s	file:
books	libavcodec/vorbisdec.c	/^    int16_t       books[64][8];$/;"	m	struct:__anon260	file:
books	libavcodec/vorbisenc.c	/^    int *books;$/;"	m	struct:__anon189	file:
books	libavcodec/vorbisenc.c	/^    int8_t (*books)[8];$/;"	m	struct:__anon191	file:
border_masking	libavcodec/avcodec.h	/^    float border_masking;$/;"	m	struct:AVCodecContext
border_position	libavcodec/aacps.h	/^    int    border_position[PS_MAX_NUM_ENV+1];$/;"	m	struct:__anon257
bottom	libavfilter/libmpcodecs/libvo/video_out.h	/^  int left, right, top, bottom, width, height;$/;"	m	struct:vo_rect
bottom_field	libavcodec/mjpegdec.h	/^    int bottom_field;   \/* true if bottom field *\/$/;"	m	struct:MJpegDecodeContext
bottomrightx	libavcodec/vc1.h	/^    uint16_t bottomrightx;$/;"	m	struct:VC1Context
bottomrighty	libavcodec/vc1.h	/^    uint16_t bottomrighty;$/;"	m	struct:VC1Context
bounding_rectangle_half_size_posx1	libavfilter/libmpcodecs/vf_remove_logo.c	/^  int bounding_rectangle_half_size_posx1;$/;"	m	struct:vf_priv_s	file:
bounding_rectangle_half_size_posx2	libavfilter/libmpcodecs/vf_remove_logo.c	/^  int bounding_rectangle_half_size_posx2;$/;"	m	struct:vf_priv_s	file:
bounding_rectangle_half_size_posy1	libavfilter/libmpcodecs/vf_remove_logo.c	/^  int bounding_rectangle_half_size_posy1;$/;"	m	struct:vf_priv_s	file:
bounding_rectangle_half_size_posy2	libavfilter/libmpcodecs/vf_remove_logo.c	/^  int bounding_rectangle_half_size_posy2;$/;"	m	struct:vf_priv_s	file:
bounding_rectangle_posx1	libavfilter/libmpcodecs/vf_remove_logo.c	/^  int bounding_rectangle_posx1;$/;"	m	struct:vf_priv_s	file:
bounding_rectangle_posx2	libavfilter/libmpcodecs/vf_remove_logo.c	/^  int bounding_rectangle_posx2;$/;"	m	struct:vf_priv_s	file:
bounding_rectangle_posy1	libavfilter/libmpcodecs/vf_remove_logo.c	/^  int bounding_rectangle_posy1;$/;"	m	struct:vf_priv_s	file:
bounding_rectangle_posy2	libavfilter/libmpcodecs/vf_remove_logo.c	/^  int bounding_rectangle_posy2;$/;"	m	struct:vf_priv_s	file:
box_line	libavfilter/vf_drawtext.c	/^    uint8_t *box_line[4];           \/\/\/< line used for filling the box background$/;"	m	struct:__anon24	file:
boxcolor	libavfilter/vf_drawtext.c	/^    uint8_t boxcolor[4];            \/\/\/< background color$/;"	m	struct:__anon24	file:
boxcolor_rgba	libavfilter/vf_drawtext.c	/^    uint8_t boxcolor_rgba[4];       \/\/\/< background color in RGBA$/;"	m	struct:__anon24	file:
boxcolor_string	libavfilter/vf_drawtext.c	/^    char *boxcolor_string;          \/\/\/< box color as string$/;"	m	struct:__anon24	file:
bp	libavcodec/mqc.h	/^    uint8_t *bp, *bpstart;$/;"	m	struct:__anon253
bpc	libavformat/dxa.c	/^    int bpc;$/;"	m	struct:__anon330	file:
bpf_6_7_coef	libavcodec/amrwbdata.h	/^static const float bpf_6_7_coef[31] = { \/\/ band pass, 6kHz and 7kHz cutoffs$/;"	v
bpf_6_7_mem	libavcodec/amrwbdec.c	/^    float               bpf_6_7_mem[HB_FIR_SIZE]; \/\/\/< previous values in the high-band band pass filter$/;"	m	struct:__anon64	file:
bpm	libavcodec/dvdata.h	/^    int              bpm;                   \/* blocks per macroblock *\/$/;"	m	struct:DVprofile
bpp	libavcodec/cscd.c	/^    int linelen, height, bpp;$/;"	m	struct:__anon232	file:
bpp	libavcodec/iff.c	/^    unsigned  bpp;          \/\/\/< bits per plane to decode (differs from bits_per_coded_sample if HAM)$/;"	m	struct:__anon114	file:
bpp	libavcodec/jpegls.h	/^    int limit, reset, bpp, qbpp, maxval, range;$/;"	m	struct:JLSState
bpp	libavcodec/png.h	/^    int bpp;$/;"	m	struct:PNGDecContext
bpp	libavcodec/targa.c	/^    int bpp;$/;"	m	struct:TargaContext	file:
bpp	libavcodec/tiff.c	/^    unsigned int bpp, bppcount;$/;"	m	struct:TiffContext	file:
bpp	libavcodec/tiffenc.c	/^    unsigned int bpp;                   \/\/\/< bits per pixel$/;"	m	struct:TiffEncoderContext	file:
bpp	libavcodec/tscc.c	/^    int bpp;$/;"	m	struct:TsccContext	file:
bpp	libavcodec/vmnc.c	/^    int bpp;$/;"	m	struct:VmncContext	file:
bpp	libavcodec/zmbv.c	/^    int bpp;$/;"	m	struct:ZmbvContext	file:
bpp	libavfilter/libmpcodecs/mp_image.h	/^    unsigned char bpp;  \/\/ bits\/pixel. NOT depth! for RGB it will be n*8$/;"	m	struct:mp_image
bpp	libavfilter/libmpcodecs/pullup.h	/^    int *bpp, *w, *h, *stride, *background;$/;"	m	struct:pullup_context
bpp	libavfilter/vf_fade.c	/^    int hsub, vsub, bpp;$/;"	m	struct:__anon11	file:
bpp	libavformat/iff.c	/^    unsigned  bpp;          \/\/\/< bits per plane to decode (differs from bits_per_coded_sample if HAM)$/;"	m	struct:__anon395	file:
bpp	libavformat/wv.c	/^    int rate, chan, bpp;$/;"	m	struct:__anon327	file:
bpp2	libavcodec/vmnc.c	/^    int bpp2;$/;"	m	struct:VmncContext	file:
bpp_tab_size	libavcodec/tiffenc.c	/^    int bpp_tab_size;                   \/\/\/< bpp_tab size$/;"	m	struct:TiffEncoderContext	file:
bppcount	libavcodec/tiff.c	/^    unsigned int bpp, bppcount;$/;"	m	struct:TiffContext	file:
bps	libavcodec/tta.c	/^    int flags, channels, bps, is_float, data_length;$/;"	m	struct:TTAContext	file:
bps	libavdevice/sndio_common.h	/^    int bps;$/;"	m	struct:__anon318
bps	libavformat/ape.c	/^    uint16_t bps;$/;"	m	struct:__anon335	file:
bps	libavformat/movenc.c	/^    unsigned bps;$/;"	m	struct:__anon423	file:
bpstart	libavcodec/mqc.h	/^    uint8_t *bp, *bpstart;$/;"	m	struct:__anon253
brd_scale	libavcodec/avcodec.h	/^    int brd_scale;$/;"	m	struct:AVCodecContext
breaks	libavfilter/libmpcodecs/pullup.h	/^    int breaks;$/;"	m	struct:pullup_field
brightness	libavfilter/libmpcodecs/vf_eq.c	/^        int brightness;$/;"	m	struct:vf_priv_s	file:
brightness	libavfilter/libmpcodecs/vf_eq2.c	/^  double        brightness;$/;"	m	struct:vf_priv_s	file:
brightness	libswscale/swscale_internal.h	/^    int contrast, brightness, saturation;    \/\/ for sws_getColorspaceDetails$/;"	m	struct:SwsContext
brktimegm	libavformat/cutils.c	/^struct tm *brktimegm(time_t secs, struct tm *tm)$/;"	f
broadcast	libavcodec/vc1.h	/^    int broadcast;        \/\/\/< TFF\/RFF present$/;"	m	struct:VC1Context
broken_link	libavcodec/mpegvideo.h	/^    int broken_link;         \/\/\/< no_output_of_prior_pics_flag$/;"	m	struct:MpegEncContext
broken_link	libavcodec/vc1.h	/^    uint8_t broken_link;        \/\/\/< Broken link flag (BROKEN_LINK syntax element)$/;"	m	struct:VC1Context
bs	libavcodec/lzw.c	/^    int bs;                     \/\/\/< current buffer size for GIF$/;"	m	struct:LZWState	file:
bs_add_harmonic	libavcodec/sbr.h	/^    uint8_t            bs_add_harmonic[48];$/;"	m	struct:__anon56
bs_add_harmonic_flag	libavcodec/sbr.h	/^    unsigned           bs_add_harmonic_flag;$/;"	m	struct:__anon56
bs_alter_scale	libavcodec/sbr.h	/^    uint8_t bs_alter_scale;$/;"	m	struct:__anon55
bs_amp_res	libavcodec/sbr.h	/^    unsigned           bs_amp_res;$/;"	m	struct:__anon56
bs_amp_res_header	libavcodec/sbr.h	/^    int                bs_amp_res_header;$/;"	m	struct:__anon57
bs_code	libavcodec/flacenc.c	/^    int bs_code[2];$/;"	m	struct:FlacFrame	file:
bs_coupling	libavcodec/sbr.h	/^    unsigned           bs_coupling;$/;"	m	struct:__anon57
bs_df_env	libavcodec/sbr.h	/^    uint8_t            bs_df_env[5];$/;"	m	struct:__anon56
bs_df_noise	libavcodec/sbr.h	/^    uint8_t            bs_df_noise[2];$/;"	m	struct:__anon56
bs_frame_class	libavcodec/sbr.h	/^    unsigned           bs_frame_class;$/;"	m	struct:__anon56
bs_freq_res	libavcodec/sbr.h	/^    uint8_t            bs_freq_res[7];$/;"	m	struct:__anon56
bs_freq_scale	libavcodec/sbr.h	/^    uint8_t bs_freq_scale;$/;"	m	struct:__anon55
bs_get_v	libavformat/mpc8.c	/^static inline int64_t bs_get_v(uint8_t **bs)$/;"	f	file:
bs_interpol_freq	libavcodec/sbr.h	/^    unsigned           bs_interpol_freq;$/;"	m	struct:__anon57
bs_invf_mode	libavcodec/sbr.h	/^    uint8_t            bs_invf_mode[2][5];$/;"	m	struct:__anon56
bs_limiter_bands	libavcodec/sbr.h	/^    unsigned           bs_limiter_bands;$/;"	m	struct:__anon57
bs_limiter_gains	libavcodec/sbr.h	/^    unsigned           bs_limiter_gains;$/;"	m	struct:__anon57
bs_noise_bands	libavcodec/sbr.h	/^    uint8_t bs_noise_bands;$/;"	m	struct:__anon55
bs_num_env	libavcodec/sbr.h	/^    unsigned           bs_num_env;$/;"	m	struct:__anon56
bs_num_noise	libavcodec/sbr.h	/^    unsigned           bs_num_noise;$/;"	m	struct:__anon56
bs_smoothing_mode	libavcodec/sbr.h	/^    unsigned           bs_smoothing_mode;$/;"	m	struct:__anon57
bs_start_freq	libavcodec/sbr.h	/^    uint8_t bs_start_freq;$/;"	m	struct:__anon55
bs_stop_freq	libavcodec/sbr.h	/^    uint8_t bs_stop_freq;$/;"	m	struct:__anon55
bs_xover_band	libavcodec/sbr.h	/^    uint8_t bs_xover_band;$/;"	m	struct:__anon55
bsfc	libavcodec/crystalhd.c	/^    AVBitStreamFilterContext *bsfc;$/;"	m	struct:__anon268	file:
bswap16_buf	libavcodec/dsputil.c	/^static void bswap16_buf(uint16_t *dst, const uint16_t *src, int len)$/;"	f	file:
bswap16_buf	libavcodec/dsputil.h	/^    void (*bswap16_buf)(uint16_t *dst, const uint16_t *src, int len);$/;"	m	struct:DSPContext
bswap16_buf	libavcodec/eamad.c	/^static void bswap16_buf(uint16_t *dst, const uint16_t *src, int count)$/;"	f	file:
bswap_16	libavfilter/libmpcodecs/mpbswap.h	26;"	d
bswap_32	libavfilter/libmpcodecs/mpbswap.h	27;"	d
bswap_buf	libavcodec/dsputil.c	/^static void bswap_buf(uint32_t *dst, const uint32_t *src, int w){$/;"	f	file:
bswap_buf	libavcodec/dsputil.h	/^    void (*bswap_buf)(uint32_t *dst, const uint32_t *src, int w);$/;"	m	struct:DSPContext
bswap_buf_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void bswap_buf_mlib(uint32_t *dst, const uint32_t *src, int w)$/;"	f	file:
bswapbuf	libavcodec/motionpixels.c	/^    uint8_t *bswapbuf;$/;"	m	struct:MotionPixelsContext	file:
bswapbuf_size	libavcodec/motionpixels.c	/^    int bswapbuf_size;$/;"	m	struct:MotionPixelsContext	file:
bthresh	libavfilter/libmpcodecs/vf_blackframe.c	/^    unsigned int bamount, bthresh, frame, lastkeyframe;$/;"	m	struct:vf_priv_s	file:
bthresh	libavfilter/vf_blackframe.c	/^    unsigned int bthresh; \/\/\/< black threshold$/;"	m	struct:__anon49	file:
btype2mb_type	libavcodec/mpeg12decdata.h	/^static const uint32_t btype2mb_type[11] = {$/;"	v
btype_vlc	libavcodec/rv40.c	/^static VLC ptype_vlc[NUM_PTYPE_VLCS], btype_vlc[NUM_BTYPE_VLCS];$/;"	v	file:
btype_vlc_bits	libavcodec/rv40vlc2.h	/^static const uint8_t btype_vlc_bits[NUM_BTYPE_VLCS][PTYPE_VLC_SIZE] = {$/;"	v
btype_vlc_codes	libavcodec/rv40vlc2.h	/^static const uint8_t btype_vlc_codes[NUM_BTYPE_VLCS][BTYPE_VLC_SIZE] = {$/;"	v
btype_vlc_syms	libavcodec/rv40vlc2.h	/^static const uint8_t btype_vlc_syms[BTYPE_VLC_SIZE] = {$/;"	v
buf	libavcodec/apedec.c	/^    int32_t *buf;$/;"	m	struct:APEPredictor	file:
buf	libavcodec/dv.c	/^    uint8_t         *buf;$/;"	m	struct:DVVideoContext	file:
buf	libavcodec/gif.c	/^    uint8_t *buf;$/;"	m	struct:__anon89	file:
buf	libavcodec/idcinvideo.c	/^    const unsigned char *buf;$/;"	m	struct:IdcinContext	file:
buf	libavcodec/indeo3.c	/^    uint8_t *buf;$/;"	m	struct:Indeo3DecodeContext	file:
buf	libavcodec/interplayvideo.c	/^    const unsigned char *buf;$/;"	m	struct:IpvideoContext	file:
buf	libavcodec/ivi_common.h	/^    int16_t         *buf;           \/\/\/< pointer to the output buffer for this band$/;"	m	struct:__anon107
buf	libavcodec/j2kdec.c	/^    uint8_t *buf;$/;"	m	struct:__anon98	file:
buf	libavcodec/j2kenc.c	/^    uint8_t *buf;$/;"	m	struct:__anon63	file:
buf	libavcodec/libschroedingerdec.c	/^    const uint8_t *buf;$/;"	m	struct:FfmpegSchroParseUnitContext	file:
buf	libavcodec/libvpxenc.c	/^    void *buf;                       \/**< compressed data buffer *\/$/;"	m	struct:FrameListData	file:
buf	libavcodec/msrle.c	/^    const unsigned char *buf;$/;"	m	struct:MsrleContext	file:
buf	libavcodec/msvideo1.c	/^    const unsigned char *buf;$/;"	m	struct:Msvideo1Context	file:
buf	libavcodec/pngenc.c	/^    uint8_t buf[IOBUF_SIZE];$/;"	m	struct:PNGEncContext	file:
buf	libavcodec/put_bits.h	/^    uint8_t *buf, *buf_end;$/;"	m	struct:PutBitContext
buf	libavcodec/qtrle.c	/^    const unsigned char *buf;$/;"	m	struct:QtrleContext	file:
buf	libavcodec/roqvideo.h	/^    const unsigned char *buf;$/;"	m	struct:RoqContext
buf	libavcodec/rpza.c	/^    const unsigned char *buf;$/;"	m	struct:RpzaContext	file:
buf	libavcodec/smc.c	/^    const unsigned char *buf;$/;"	m	struct:SmcContext	file:
buf	libavcodec/snow.c	/^    DWTELEM *buf;$/;"	m	struct:SubBand	file:
buf	libavcodec/svq3.c	/^    uint8_t *buf;$/;"	m	struct:__anon141	file:
buf	libavcodec/tiffenc.c	/^    uint8_t **buf;                      \/\/\/< actual position in buffer$/;"	m	struct:TiffEncoderContext	file:
buf	libavcodec/truemotion1.c	/^    const uint8_t *buf;$/;"	m	struct:TrueMotion1Context	file:
buf	libavcodec/vmdav.c	/^    const unsigned char *buf;$/;"	m	struct:VmdVideoContext	file:
buf	libavcodec/vqavideo.c	/^    const unsigned char *buf;$/;"	m	struct:VqaContext	file:
buf	libavcodec/xan.c	/^    const unsigned char *buf;$/;"	m	struct:XanContext	file:
buf	libavfilter/avfilter.h	/^    AVFilterBuffer *buf;        \/\/\/< the buffer that this is a reference to$/;"	m	struct:AVFilterBufferRef
buf	libavfilter/gradfun.h	/^    uint16_t *buf; \/\/\/< holds image data for blur algorithm passed into filter.$/;"	m	struct:__anon17
buf	libavfilter/libmpcodecs/vf_eq.c	/^        unsigned char *buf;$/;"	m	struct:vf_priv_s	file:
buf	libavfilter/libmpcodecs/vf_eq2.c	/^  unsigned char *buf[3];$/;"	m	struct:vf_priv_s	file:
buf	libavfilter/libmpcodecs/vf_gradfun.c	/^    uint16_t *buf;$/;"	m	struct:vf_priv_s	file:
buf	libavfilter/libmpcodecs/vf_hue.c	/^        uint8_t *buf[2];$/;"	m	struct:vf_priv_s	file:
buf	libavfilter/libmpcodecs/vf_phase.c	/^   unsigned char *buf[3];$/;"	m	struct:vf_priv_s	file:
buf	libavformat/avformat.h	/^    unsigned char *buf; \/**< Buffer must have AVPROBE_PADDING_SIZE of extra allocated bytes filled with zero. *\/$/;"	m	struct:AVProbeData
buf	libavformat/dv.c	/^    uint8_t         buf[DV_MAX_FRAME_SIZE];$/;"	m	struct:RawDVContext	file:
buf	libavformat/ipmovie.c	/^    unsigned char *buf;$/;"	m	struct:IPMVEContext	file:
buf	libavformat/matroskadec.c	/^    uint8_t *buf;$/;"	m	struct:__anon358	file:
buf	libavformat/oggdec.h	/^    uint8_t *buf;$/;"	m	struct:ogg_stream
buf	libavformat/rtpdec.h	/^    uint8_t *buf;$/;"	m	struct:RTPPacket
buf	libavformat/rtpdec.h	/^    uint8_t buf[RTP_MAX_PACKET_LENGTH];$/;"	m	struct:RTPDemuxContext
buf	libavformat/rtpdec_asf.c	/^    uint8_t *buf;$/;"	m	struct:PayloadContext	file:
buf	libavformat/rtpdec_latm.c	/^    uint8_t *buf;$/;"	m	struct:PayloadContext	file:
buf	libavformat/rtpdec_qdm2.c	/^    uint8_t  buf[0x80][0x800]; \/\/\/< the temporary storage buffer$/;"	m	struct:PayloadContext	file:
buf	libavformat/rtpenc.h	/^    uint8_t *buf;$/;"	m	struct:RTPMuxContext
buf_bit_size	libavcodec/wmaprodec.c	/^    int              buf_bit_size;                  \/\/\/< buffer size in bits$/;"	m	struct:WMAProDecodeCtx	file:
buf_end	libavcodec/j2kdec.c	/^    uint8_t *buf_end;$/;"	m	struct:__anon98	file:
buf_end	libavcodec/j2kenc.c	/^    uint8_t *buf_end;$/;"	m	struct:__anon63	file:
buf_end	libavcodec/put_bits.h	/^    uint8_t *buf, *buf_end;$/;"	m	struct:PutBitContext
buf_end	libavformat/avio.h	/^    unsigned char *buf_end; \/**< End of the data, may be less than$/;"	m	struct:__anon396
buf_end	libavformat/http.c	/^    unsigned char buffer[BUFFER_SIZE], *buf_ptr, *buf_end;$/;"	m	struct:__anon462	file:
buf_h	libavfilter/libmpcodecs/vf_eq2.c	/^  unsigned      buf_h[3];$/;"	m	struct:vf_priv_s	file:
buf_len	libavdevice/v4l2.c	/^    unsigned int *buf_len;$/;"	m	struct:video_data	file:
buf_offs	libavcodec/ivi_common.h	/^    uint32_t    buf_offs; \/\/\/< address in the output buffer for this mb$/;"	m	struct:__anon105
buf_offset	libavcodec/dvdata.h	/^    uint16_t  buf_offset;$/;"	m	struct:DVwork_chunk
buf_ptr	libavformat/avio.h	/^    unsigned char *buf_ptr; \/**< Current position in the buffer *\/$/;"	m	struct:__anon396
buf_ptr	libavformat/http.c	/^    unsigned char buffer[BUFFER_SIZE], *buf_ptr, *buf_end;$/;"	m	struct:__anon462	file:
buf_ptr	libavformat/rtpdec.h	/^    uint8_t *buf_ptr;$/;"	m	struct:RTPDemuxContext
buf_ptr	libavformat/rtpenc.h	/^    uint8_t *buf_ptr;$/;"	m	struct:RTPMuxContext
buf_ptrs	libavcodec/mimic.c	/^    AVFrame         buf_ptrs    [16];$/;"	m	struct:__anon282	file:
buf_size	libavcodec/dvbsubdec.c	/^    int buf_size;$/;"	m	struct:DVBSubRegion	file:
buf_size	libavcodec/libschroedingerdec.c	/^    int           buf_size;$/;"	m	struct:FfmpegSchroParseUnitContext	file:
buf_size	libavcodec/mpc.h	/^    int buf_size;$/;"	m	struct:__anon179
buf_size	libavcodec/svq3.c	/^    int buf_size;$/;"	m	struct:__anon141	file:
buf_size	libavcodec/tiffenc.c	/^    int buf_size;                       \/\/\/< buffer size$/;"	m	struct:TiffEncoderContext	file:
buf_size	libavformat/avformat.h	/^    int buf_size;       \/**< Size of buf except extra allocated bytes *\/$/;"	m	struct:AVProbeData
buf_size	libavformat/ipmovie.c	/^    int buf_size;$/;"	m	struct:IPMVEContext	file:
buf_size2bitrate	libavcodec/qcelpdec.c	/^static qcelp_packet_rate buf_size2bitrate(const int buf_size)$/;"	f	file:
buf_sizes	libavformat/smacker.c	/^    int buf_sizes[7];$/;"	m	struct:SmackerContext	file:
buf_start	libavcodec/j2kdec.c	/^    uint8_t *buf_start;$/;"	m	struct:__anon98	file:
buf_start	libavcodec/j2kenc.c	/^    uint8_t *buf_start;$/;"	m	struct:__anon63	file:
buf_start	libavcodec/tiffenc.c	/^    uint8_t *buf_start;                 \/\/\/< pointer to first byte in buffer$/;"	m	struct:TiffEncoderContext	file:
buf_start	libavdevice/v4l2.c	/^    void **buf_start;$/;"	m	struct:video_data	file:
buf_switch	libavcodec/indeo5.c	/^    int             buf_switch;      \/\/\/< used to switch between three buffers$/;"	m	struct:__anon203	file:
buf_timecode	libavformat/matroskadec.c	/^    uint64_t buf_timecode;$/;"	m	struct:__anon358	file:
buf_w	libavfilter/libmpcodecs/vf_eq2.c	/^  unsigned      buf_w[3];$/;"	m	struct:vf_priv_s	file:
buf_x_offset	libavcodec/snow.c	/^    int buf_x_offset;$/;"	m	struct:SubBand	file:
buf_y_offset	libavcodec/snow.c	/^    int buf_y_offset;$/;"	m	struct:SubBand	file:
buff_data	libavdevice/v4l2.c	/^struct buff_data {$/;"	s	file:
buffer	ffserver.c	/^    uint8_t *buffer;$/;"	m	struct:HTTPContext	file:
buffer	libavcodec/apedec.c	/^    unsigned int buffer;    \/\/\/< buffer for input\/output$/;"	m	struct:APERangecoder	file:
buffer	libavcodec/dirac_parser.c	/^    uint8_t *buffer;$/;"	m	struct:DiracParseContext	file:
buffer	libavcodec/get_bits.h	/^    const uint8_t *buffer, *buffer_end;$/;"	m	struct:GetBitContext
buffer	libavcodec/libmp3lame.c	/^    uint8_t buffer[BUFFER_SIZE];$/;"	m	struct:Mp3AudioContext	file:
buffer	libavcodec/libvorbis.c	/^    uint8_t buffer[BUFFER_SIZE];$/;"	m	struct:OggVorbisContext	file:
buffer	libavcodec/mjpegdec.h	/^    uint8_t *buffer;$/;"	m	struct:MJpegDecodeContext
buffer	libavcodec/parser.h	/^    uint8_t *buffer;$/;"	m	struct:ParseContext
buffer	libavcodec/rawdec.c	/^    unsigned char * buffer;  \/* block of memory for holding one frame *\/$/;"	m	struct:RawVideoContext	file:
buffer	libavcodec/resample.c	/^    short *buffer[2];                  \/\/\/< buffers used for conversion to S16$/;"	m	struct:ReSampleContext	file:
buffer	libavcodec/srtenc.c	/^    char buffer[2048];$/;"	m	struct:__anon139	file:
buffer	libavcodec/vp56.h	/^    const uint8_t *buffer;$/;"	m	struct:__anon220
buffer	libavdevice/oss_audio.c	/^    uint8_t buffer[AUDIO_BLOCK_SIZE];$/;"	m	struct:__anon311	file:
buffer	libavdevice/sndio_common.h	/^    uint8_t *buffer;$/;"	m	struct:__anon318
buffer	libavfilter/libmpcodecs/pullup.h	/^    struct pullup_buffer *buffer;$/;"	m	struct:pullup_field	typeref:struct:pullup_field::pullup_buffer
buffer	libavfilter/libmpcodecs/pullup.h	/^    struct pullup_buffer *buffer;$/;"	m	struct:pullup_frame	typeref:struct:pullup_frame::pullup_buffer
buffer	libavfilter/libmpcodecs/vf_screenshot.c	/^    uint8_t *buffer;$/;"	m	struct:vf_priv_s	file:
buffer	libavformat/avio.h	/^    unsigned char *buffer;  \/**< Start of the buffer. *\/$/;"	m	struct:__anon396
buffer	libavformat/aviobuf.c	/^    uint8_t *buffer;$/;"	m	struct:DynBuffer	file:
buffer	libavformat/gif.c	/^    uint8_t buffer[100]; \/* data chunks *\/$/;"	m	struct:__anon385	file:
buffer	libavformat/http.c	/^    unsigned char buffer[BUFFER_SIZE], *buf_ptr, *buf_end;$/;"	m	struct:__anon462	file:
buffer	libavformat/mpegts.c	/^    uint8_t *buffer;$/;"	m	struct:PESContext	file:
buffer	libavformat/mxg.c	/^    uint8_t *buffer;$/;"	m	struct:MXGContext	file:
buffer	libavformat/rdt.c	/^    char buffer[RTP_MAX_PACKET_LENGTH + FF_INPUT_BUFFER_PADDING_SIZE];$/;"	m	struct:PayloadContext	file:
buffer	libavformat/spdifenc.c	/^    uint8_t *buffer;                \/\/\/< allocated buffer, used for swap bytes$/;"	m	struct:IEC61937Context	file:
buffer	libavutil/fifo.h	/^    uint8_t *buffer;$/;"	m	struct:AVFifoBuffer
buffer	libavutil/sha.c	/^    uint8_t  buffer[64];  \/\/\/< 512-bit buffer of input values used in hash updating$/;"	m	struct:AVSHA	file:
buffer	tests/seek_test.c	/^static char buffer[20];$/;"	v	file:
buffer1	libavcodec/xan.c	/^    unsigned char *buffer1;$/;"	m	struct:XanContext	file:
buffer1_size	libavcodec/xan.c	/^    int buffer1_size;$/;"	m	struct:XanContext	file:
buffer2	libavcodec/xan.c	/^    unsigned char *buffer2;$/;"	m	struct:XanContext	file:
buffer2_size	libavcodec/xan.c	/^    int buffer2_size;$/;"	m	struct:XanContext	file:
buffer_end	ffserver.c	/^    uint8_t *buffer_ptr, *buffer_end;$/;"	m	struct:HTTPContext	file:
buffer_end	libavcodec/get_bits.h	/^    const uint8_t *buffer, *buffer_end;$/;"	m	struct:GetBitContext
buffer_fullness	libavcodec/vc1.h	/^    int buffer_fullness;  \/\/\/< HRD info$/;"	m	struct:VC1Context
buffer_index	libavcodec/libmp3lame.c	/^    int buffer_index;$/;"	m	struct:Mp3AudioContext	file:
buffer_index	libavcodec/libvorbis.c	/^    int buffer_index;$/;"	m	struct:OggVorbisContext	file:
buffer_index	libavcodec/ratecontrol.h	/^    double buffer_index;          \/\/\/< amount of bits in the video\/audio buffer$/;"	m	struct:RateControlContext
buffer_index	libavformat/mpegenc.c	/^    int buffer_index;$/;"	m	struct:__anon428	file:
buffer_mutex	libavcodec/pthread.c	/^    pthread_mutex_t buffer_mutex;  \/\/\/< Mutex used to protect get\/release_buffer().$/;"	m	struct:FrameThreadContext	file:
buffer_offset	libavdevice/sndio_common.h	/^    int buffer_offset;$/;"	m	struct:__anon318
buffer_ptr	ffserver.c	/^    uint8_t *buffer_ptr, *buffer_end;$/;"	m	struct:HTTPContext	file:
buffer_ptr	libavcodec/get_bits.h	/^    uint32_t *buffer_ptr;$/;"	m	struct:GetBitContext
buffer_ptr	libavdevice/oss_audio.c	/^    int buffer_ptr;$/;"	m	struct:__anon311	file:
buffer_ptr	libavformat/mxg.c	/^    uint8_t *buffer_ptr;$/;"	m	struct:MXGContext	file:
buffer_size	ffmpeg.c	/^    int buffer_size;      \/* current total buffer size *\/$/;"	m	struct:AVInputFile	file:
buffer_size	ffmpeg/ffmpeg.c	/^    int buffer_size;      \/* current total buffer size *\/$/;"	m	struct:AVInputFile	file:
buffer_size	ffserver.c	/^    int buffer_size;$/;"	m	struct:HTTPContext	file:
buffer_size	libavcodec/dirac_parser.c	/^    int buffer_size;$/;"	m	struct:DiracParseContext	file:
buffer_size	libavcodec/mjpegdec.h	/^    int buffer_size;$/;"	m	struct:MJpegDecodeContext
buffer_size	libavcodec/parser.h	/^    unsigned int buffer_size;$/;"	m	struct:ParseContext
buffer_size	libavcodec/resample.c	/^    unsigned buffer_size[2];           \/\/\/< sizes of allocated buffers$/;"	m	struct:ReSampleContext	file:
buffer_size	libavcodec/xxan.c	/^    int     buffer_size;$/;"	m	struct:XanContext	file:
buffer_size	libavdevice/jack_audio.c	/^    jack_nframes_t  buffer_size;$/;"	m	struct:__anon315	file:
buffer_size	libavdevice/sndio_common.h	/^    int buffer_size;$/;"	m	struct:__anon318
buffer_size	libavformat/avio.h	/^    int buffer_size;        \/**< Maximum buffer size *\/$/;"	m	struct:__anon396
buffer_size	libavformat/mxg.c	/^    unsigned int buffer_size;$/;"	m	struct:MXGContext	file:
buffer_size	libavformat/spdifenc.c	/^    int buffer_size;                \/\/\/< size of allocated buffer$/;"	m	struct:IEC61937Context	file:
buffer_size	libavformat/udp.c	/^    int buffer_size;$/;"	m	struct:__anon320	file:
buffer_size_exponent	libavcodec/vc1.h	/^    uint8_t buffer_size_exponent;$/;"	m	struct:VC1Context
buffers	libavdevice/v4l2.c	/^    int buffers;$/;"	m	struct:video_data	file:
buffers	libavfilter/libmpcodecs/pullup.h	/^    struct pullup_buffer *buffers;$/;"	m	struct:pullup_context	typeref:struct:pullup_context::pullup_buffer
bufpos	libavformat/oggdec.h	/^    unsigned int bufpos;$/;"	m	struct:ogg_stream
bufs	libavcodec/ivi_common.h	/^    int16_t         *bufs[3];       \/\/\/< array of pointers to the band buffers$/;"	m	struct:__anon107
bufs	libavformat/smacker.c	/^    uint8_t *bufs[7];$/;"	m	struct:SmackerContext	file:
bufsel	libavcodec/nellymoserenc.c	/^    int             bufsel;$/;"	m	struct:NellyMoserEncodeContext	file:
bufsize	libavcodec/ivi_common.h	/^    int             bufsize;        \/\/\/< band buffer size in bytes$/;"	m	struct:__anon107
bufsize	libavcodec/lzwenc.c	/^    int bufsize;             \/\/\/< Size of output buffer$/;"	m	struct:LZWEncodeState	file:
bufsize	libavformat/oggdec.h	/^    unsigned int bufsize;$/;"	m	struct:ogg_stream
buggy_avid	libavcodec/mjpegdec.h	/^    int buggy_avid;$/;"	m	struct:MJpegDecodeContext
build_basic_mjpeg_vlc	libavcodec/mjpegdec.c	/^static void build_basic_mjpeg_vlc(MJpegDecodeContext * s) {$/;"	f	file:
build_basis	libavcodec/mpegvideo_enc.c	/^static void build_basis(uint8_t *perm){$/;"	f	file:
build_def_list	libavcodec/h264_refs.c	/^static int build_def_list(Picture *def, Picture **in, int len, int is_long, int sel){$/;"	f	file:
build_elision_headers	libavformat/nutenc.c	/^static void build_elision_headers(AVFormatContext *s){$/;"	f	file:
build_feed_streams	ffserver.c	/^static void build_feed_streams(void)$/;"	f	file:
build_file_streams	ffserver.c	/^static void build_file_streams(void)$/;"	f	file:
build_filter	libavcodec/resample2.c	/^static int build_filter(FELEM *filter, double factor, int tap_count, int phase_count, int scale, int type){$/;"	f	file:
build_frame_code	libavformat/nutenc.c	/^static void build_frame_code(AVFormatContext *s){$/;"	f	file:
build_huff_tree	libavcodec/huffman.c	/^static int build_huff_tree(VLC *vlc, Node *nodes, int head, int flags)$/;"	f	file:
build_modpred	libavcodec/indeo3.c	/^static av_cold int build_modpred(Indeo3DecodeContext *s)$/;"	f	file:
build_qp_table	libavcodec/h264_ps.c	/^build_qp_table(PPS *pps, int t, int index, const int depth)$/;"	f	file:
build_sb_samples_from_noise	libavcodec/qdm2.c	/^static void build_sb_samples_from_noise (QDM2Context *q, int sb)$/;"	f	file:
build_table	libavcodec/bitstream.c	/^static int build_table(VLC *vlc, int table_nb_bits, int nb_codes,$/;"	f	file:
build_udp_url	libavformat/rtpproto.c	/^static void build_udp_url(char *buf, int buf_size,$/;"	f	file:
build_vlc	libavcodec/mjpegdec.c	/^static int build_vlc(VLC *vlc, const uint8_t *bits_table, const uint8_t *val_table,$/;"	f	file:
build_xlaw_table	libavcodec/pcm_tablegen.h	/^static av_cold void build_xlaw_table(uint8_t *linear_to_xlaw,$/;"	f
bundle	libavcodec/bink.c	/^    Bundle         bundle[BINKB_NB_SRC]; \/\/\/< bundles for decoding all data types$/;"	m	struct:BinkContext	file:
butterflies_float	libavcodec/dsputil.h	/^    void (*butterflies_float)(float *restrict v1, float *restrict v2, int len);$/;"	m	struct:DSPContext
butterflies_float_c	libavcodec/dsputil.c	/^static void butterflies_float_c(float *restrict v1, float *restrict v2,$/;"	f	file:
butterworth_init_coeffs	libavcodec/iirfilter.c	/^static int butterworth_init_coeffs(void *avc, struct FFIIRFilterCoeffs *c,$/;"	f	file:
bw	libavcodec/zmbv.c	/^    int bw, bh, bx, by;$/;"	m	struct:ZmbvContext	file:
bw_array	libavcodec/sbr.h	/^    float              bw_array[5];$/;"	m	struct:__anon56
bx	libavcodec/zmbv.c	/^    int bw, bh, bx, by;$/;"	m	struct:ZmbvContext	file:
by	libavcodec/zmbv.c	/^    int bw, bh, bx, by;$/;"	m	struct:ZmbvContext	file:
bypassed_lsbs	libavcodec/mlpdec.c	/^    int8_t      bypassed_lsbs[MAX_BLOCKSIZE][MAX_CHANNELS];$/;"	m	struct:MLPDecodeContext	file:
byte_offset_bits	libavcodec/wma.h	/^    int byte_offset_bits;$/;"	m	struct:WMACodecContext
bytein	libavcodec/mqcdec.c	/^static void bytein(MqcState *mqc)$/;"	f	file:
byteout	libavcodec/mqcenc.c	/^static void byteout(MqcState *mqc)$/;"	f	file:
bytes	libavformat/electronicarts.c	/^    int bytes;$/;"	m	struct:EaDemuxContext	file:
bytes_left	libavcodec/mlp_parser.c	/^    int bytes_left;$/;"	m	struct:MLPParseContext	file:
bytes_left	libavformat/dxa.c	/^    uint32_t bytes_left;$/;"	m	struct:__anon330	file:
bytes_per_channel	libavcodec/sgidec.c	/^    unsigned int bytes_per_channel;$/;"	m	struct:SgiState	file:
bytes_per_frame	libavcodec/atrac3.c	/^    int                 bytes_per_frame;$/;"	m	struct:__anon131	file:
bytes_per_frame	libavformat/isom.h	/^    unsigned int bytes_per_frame;$/;"	m	struct:MOVStreamContext
bytes_per_frame	libavformat/rtpdec_qt.c	/^    int bytes_per_frame, remaining;$/;"	m	struct:PayloadContext	file:
bytes_per_packet	libavformat/cafdec.c	/^    int bytes_per_packet;           \/\/\/< bytes in a packet, or 0 if variable$/;"	m	struct:__anon422	file:
bytes_per_pixel	libavdevice/fbdev.c	/^    int bytes_per_pixel;$/;"	m	struct:__anon314	file:
bytes_read	libavformat/rtmpproto.c	/^    uint32_t      bytes_read;                 \/\/\/< number of bytes read from server$/;"	m	struct:RTMPContext	file:
bytes_served	ffserver.c	/^    int64_t bytes_served;$/;"	m	struct:FFStream	file:
bytes_to_iframe	libavformat/mpegenc.c	/^    int bytes_to_iframe;$/;"	m	struct:__anon428	file:
bytespersample	libavcodec/alac.c	/^    int bytespersample;$/;"	m	struct:__anon266	file:
bytestream	libavcodec/4xm.c	/^    const uint8_t *bytestream;$/;"	m	struct:FourXContext	file:
bytestream	libavcodec/cabac.h	/^    const uint8_t *bytestream;$/;"	m	struct:CABACContext
bytestream	libavcodec/gifdec.c	/^    const uint8_t *bytestream;$/;"	m	struct:GifState	file:
bytestream	libavcodec/lagarithrac.h	/^    const uint8_t *bytestream;        \/*!< Current position in input bytestream. *\/$/;"	m	struct:lag_rac
bytestream	libavcodec/png.h	/^    const uint8_t *bytestream;$/;"	m	struct:PNGDecContext
bytestream	libavcodec/pngenc.c	/^    uint8_t *bytestream;$/;"	m	struct:PNGEncContext	file:
bytestream	libavcodec/pnm.h	/^    uint8_t *bytestream;$/;"	m	struct:PNMContext
bytestream	libavcodec/rangecoder.h	/^    uint8_t *bytestream;$/;"	m	struct:RangeCoder
bytestream_end	libavcodec/4xm.c	/^    const uint8_t *bytestream_end;$/;"	m	struct:FourXContext	file:
bytestream_end	libavcodec/cabac.h	/^    const uint8_t *bytestream_end;$/;"	m	struct:CABACContext
bytestream_end	libavcodec/gifdec.c	/^    const uint8_t *bytestream_end;$/;"	m	struct:GifState	file:
bytestream_end	libavcodec/lagarithrac.h	/^    const uint8_t *bytestream_end;    \/*!< End position of input bytestream. *\/$/;"	m	struct:lag_rac
bytestream_end	libavcodec/png.h	/^    const uint8_t *bytestream_end;$/;"	m	struct:PNGDecContext
bytestream_end	libavcodec/pngenc.c	/^    uint8_t *bytestream_end;$/;"	m	struct:PNGEncContext	file:
bytestream_end	libavcodec/pnm.h	/^    uint8_t *bytestream_end;$/;"	m	struct:PNMContext
bytestream_end	libavcodec/rangecoder.h	/^    uint8_t *bytestream_end;$/;"	m	struct:RangeCoder
bytestream_get_buffer	libavcodec/bytestream.h	/^static av_always_inline unsigned int bytestream_get_buffer(const uint8_t **b, uint8_t *dst, unsigned int size)$/;"	f
bytestream_put_buffer	libavcodec/bytestream.h	/^static av_always_inline void bytestream_put_buffer(uint8_t **b, const uint8_t *src, unsigned int size)$/;"	f
bytestream_start	libavcodec/cabac.h	/^    const uint8_t *bytestream_start;$/;"	m	struct:CABACContext
bytestream_start	libavcodec/lagarithrac.h	/^    const uint8_t *bytestream_start;  \/*!< Start of input bytestream. *\/$/;"	m	struct:lag_rac
bytestream_start	libavcodec/png.h	/^    const uint8_t *bytestream_start;$/;"	m	struct:PNGDecContext
bytestream_start	libavcodec/pngenc.c	/^    uint8_t *bytestream_start;$/;"	m	struct:PNGEncContext	file:
bytestream_start	libavcodec/pnm.h	/^    uint8_t *bytestream_start;$/;"	m	struct:PNMContext
bytestream_start	libavcodec/rangecoder.h	/^    uint8_t *bytestream_start;$/;"	m	struct:RangeCoder
c	libavcodec/ffv1.c	/^    RangeCoder c;$/;"	m	struct:FFV1Context	file:
c	libavcodec/mqc.h	/^    unsigned int c;$/;"	m	struct:__anon253
c	libavcodec/snow.c	/^    RangeCoder c;$/;"	m	struct:SnowContext	file:
c	libavcodec/vp56.h	/^    VP56RangeCoder c;$/;"	m	struct:vp56_context
c	libavcodec/vp8.h	/^    VP56RangeCoder c;   \/\/\/< header context, includes mb modes and motion vectors$/;"	m	struct:__anon182
c	libavfilter/libmpcodecs/vf_eq2.c	/^  double        c;$/;"	m	struct:eq2_param_t	file:
c	libavfilter/libmpcodecs/vf_test.c	/^static double c[64];$/;"	v	file:
c1	libavcodec/sh4/idct_sh4.c	27;"	d	file:
c1	libavcodec/sh4/idct_sh4.c	49;"	d	file:
c2	libavcodec/sh4/idct_sh4.c	28;"	d	file:
c2	libavcodec/sh4/idct_sh4.c	50;"	d	file:
c3	libavcodec/sh4/idct_sh4.c	29;"	d	file:
c3	libavcodec/sh4/idct_sh4.c	51;"	d	file:
c4	libavcodec/sh4/idct_sh4.c	30;"	d	file:
c4	libavcodec/sh4/idct_sh4.c	52;"	d	file:
c5	libavcodec/sh4/idct_sh4.c	31;"	d	file:
c5	libavcodec/sh4/idct_sh4.c	53;"	d	file:
c6	libavcodec/sh4/idct_sh4.c	32;"	d	file:
c6	libavcodec/sh4/idct_sh4.c	54;"	d	file:
c7	libavcodec/sh4/idct_sh4.c	33;"	d	file:
c7	libavcodec/sh4/idct_sh4.c	55;"	d	file:
c_ac_table_index	libavcodec/vc1.h	/^    int c_ac_table_index; \/\/\/< Chroma index from ACFRM element$/;"	m	struct:VC1Context
c_avail	libavcodec/vc1.h	/^    int a_avail, c_avail;$/;"	m	struct:VC1Context
c_block_height	libavcodec/svq1enc.c	/^    int c_block_height;$/;"	m	struct:SVQ1Context	file:
c_block_width	libavcodec/svq1enc.c	/^    int c_block_width;$/;"	m	struct:SVQ1Context	file:
c_dc_scale	libavcodec/mpegvideo.h	/^    int y_dc_scale, c_dc_scale;$/;"	m	struct:MpegEncContext
c_dc_scale_table	libavcodec/mpegvideo.h	/^    const uint8_t *c_dc_scale_table;     \/\/\/< qscale -> c_dc_scale table$/;"	m	struct:MpegEncContext
c_escape	configure	/^c_escape(){$/;"	f
c_predictor_table	libavcodec/truemotion1.c	/^    uint32_t c_predictor_table[1024];$/;"	m	struct:TrueMotion1Context	file:
c_stride	libavcodec/cavs.h	/^    int l_stride, c_stride;$/;"	m	struct:__anon207
c_superblock_count	libavcodec/vp3.c	/^    int c_superblock_count;$/;"	m	struct:Vp3DecodeContext	file:
c_superblock_height	libavcodec/vp3.c	/^    int c_superblock_height;$/;"	m	struct:Vp3DecodeContext	file:
c_superblock_width	libavcodec/vp3.c	/^    int c_superblock_width;$/;"	m	struct:Vp3DecodeContext	file:
cabac	libavcodec/h264.h	/^    CABACContext cabac;$/;"	m	struct:H264Context
cabac	libavcodec/h264.h	/^    int cabac;                  \/\/\/< entropy_coding_mode_flag$/;"	m	struct:PPS
cabac_context_init_I	libavcodec/h264_cabac.c	/^static const int8_t cabac_context_init_I[1024][2] =$/;"	v	file:
cabac_context_init_PB	libavcodec/h264_cabac.c	/^static const int8_t cabac_context_init_PB[3][1024][2] =$/;"	v	file:
cabac_init_idc	libavcodec/h264.h	/^    int          cabac_init_idc;$/;"	m	struct:H264Context
cabac_state	libavcodec/h264.h	/^    uint8_t      cabac_state[1024];$/;"	m	struct:H264Context
cache	libavformat/rtpdec_qdm2.c	/^    unsigned int cache;        \/\/\/< number of data packets that we have cached right now$/;"	m	struct:PayloadContext	file:
cache0	libavcodec/get_bits.h	/^    uint32_t cache0;$/;"	m	struct:GetBitContext
cache1	libavcodec/get_bits.h	/^    uint32_t cache1;$/;"	m	struct:GetBitContext
cache_frames	libavfilter/vf_select.c	/^    int cache_frames;$/;"	m	struct:__anon10	file:
cache_size	libavformat/mxg.c	/^    unsigned int cache_size;$/;"	m	struct:MXGContext	file:
caf_write_header	libavformat/cafenc.c	/^static int caf_write_header(AVFormatContext *s)$/;"	f	file:
caf_write_packet	libavformat/cafenc.c	/^static int caf_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
caf_write_trailer	libavformat/cafenc.c	/^static int caf_write_trailer(AVFormatContext *s)$/;"	f	file:
calc_add_mv	libavcodec/rv34.c	/^static int calc_add_mv(RV34DecContext *r, int dir, int val)$/;"	f	file:
calc_bark	libavcodec/aacpsy.c	/^static av_cold float calc_bark(float f)$/;"	f	file:
calc_bit_demand	libavcodec/aacpsy.c	/^static int calc_bit_demand(AacPsyContext *ctx, float pe, int bits, int size,$/;"	f	file:
calc_cpl_coord	libavcodec/ac3enc_template.c	/^static inline float calc_cpl_coord(float energy_ch, float energy_cpl)$/;"	f	file:
calc_input_response	libavcodec/wmavoice.c	/^static void calc_input_response(WMAVoiceContext *s, float *lpcs,$/;"	f	file:
calc_intra_matrix	libavcodec/eamad.c	/^static void calc_intra_matrix(MadContext *t, int qscale)$/;"	f	file:
calc_lowcomp	libavcodec/ac3.c	/^static inline int calc_lowcomp(int a, int b0, int b1, int bin)$/;"	f	file:
calc_lowcomp1	libavcodec/ac3.c	/^static inline int calc_lowcomp1(int a, int b0, int b1, int c)$/;"	f	file:
calc_optimal_rice_params	libavcodec/flacenc.c	/^static uint32_t calc_optimal_rice_params(RiceContext *rc, int porder,$/;"	f	file:
calc_pe_3gpp	libavcodec/aacpsy.c	/^static float calc_pe_3gpp(AacPsyBand *band)$/;"	f	file:
calc_predictor_params	libavcodec/alacenc.c	/^static void calc_predictor_params(AlacEncodeContext *s, int ch)$/;"	f	file:
calc_reduced_thr_3gpp	libavcodec/aacpsy.c	/^static float calc_reduced_thr_3gpp(AacPsyBand *band, float min_snr,$/;"	f	file:
calc_reduction_3gpp	libavcodec/aacpsy.c	/^static float calc_reduction_3gpp(float a, float desired_pe, float pe,$/;"	f	file:
calc_rice_params	libavcodec/flacenc.c	/^static uint32_t calc_rice_params(RiceContext *rc, int pmin, int pmax,$/;"	f	file:
calc_sums	libavcodec/flacenc.c	/^static void calc_sums(int pmin, int pmax, uint32_t *data, int n, int pred_order,$/;"	f	file:
calc_transform_coeffs_cpl	libavcodec/ac3dec.c	/^static void calc_transform_coeffs_cpl(AC3DecodeContext *s)$/;"	f	file:
calculate_bounding_rectangle	libavfilter/libmpcodecs/vf_remove_logo.c	/^static void calculate_bounding_rectangle(int * posx1, int * posy1, int * posx2, int * posy2, pgm_structure * filter)$/;"	f	file:
calculate_sign_huff	libavcodec/mlpdec.c	/^static inline int32_t calculate_sign_huff(MLPDecodeContext *m,$/;"	f	file:
calculate_visual_weight	libavcodec/snow.c	/^static void calculate_visual_weight(SnowContext *s, Plane *p){$/;"	f	file:
call_2x_pixels	libavcodec/arm/dsputil_armv6.S	/^call_2x_pixels          avg$/;"	l
call_2x_pixels	libavcodec/arm/dsputil_armv6.S	/^call_2x_pixels          put, _x2$/;"	l
call_2x_pixels	libavcodec/arm/dsputil_armv6.S	/^call_2x_pixels          put, _x2_no_rnd$/;"	l
call_2x_pixels	libavcodec/arm/dsputil_armv6.S	/^call_2x_pixels          put, _y2$/;"	l
call_2x_pixels	libavcodec/arm/dsputil_armv6.S	/^call_2x_pixels          put, _y2_no_rnd$/;"	l
callback	libavdevice/dshow.c	/^callback(void *priv_data, int index, uint8_t *buf, int buf_size, int64_t time)$/;"	f	file:
callback	libavdevice/dshow.h	/^    void (*callback)(void *priv_data, int index, uint8_t *buf, int buf_size, int64_t time);$/;"	m	struct:libAVFilter
camera	libavdevice/libdc1394.c	/^    dc1394camera_t *camera;$/;"	m	struct:dc1394_data	file:
canMMX2BeUsed	libswscale/swscale_internal.h	/^    int canMMX2BeUsed;$/;"	m	struct:SwsContext
can_safely_read	libavcodec/escape124.c	/^static int can_safely_read(GetBitContext* gb, int bits) {$/;"	f	file:
cancel_overrides	libavcodec/ass_split.h	/^    void (*cancel_overrides)(void *priv, const char *style);$/;"	m	struct:__anon252
capabilities	libavcodec/avcodec.h	/^    int capabilities;$/;"	m	struct:AVCodec
capabilities	libavcodec/avcodec.h	/^    int capabilities;$/;"	m	struct:AVHWAccel
capture_filter	libavdevice/dshow.c	/^    libAVFilter *capture_filter[2];$/;"	m	struct:dshow_ctx	file:
capture_pin	libavdevice/dshow.c	/^    libAVPin    *capture_pin[2];$/;"	m	struct:dshow_ctx	file:
catchsignal	libavdevice/bktr.c	/^static void catchsignal(int signal)$/;"	f	file:
categorize	libavcodec/cook.c	/^static void categorize(COOKContext *q, COOKSubpacket *p, int* quant_index_table,$/;"	f	file:
cavlc_level_tab	libavcodec/h264_cavlc.c	/^static int8_t cavlc_level_tab[7][1<<LEVEL_TAB_BITS][2];$/;"	v	file:
cavs_block	libavcodec/cavs.h	/^enum cavs_block {$/;"	g
cavs_decode_frame	libavcodec/cavsdec.c	/^static int cavs_decode_frame(AVCodecContext * avctx,void *data, int *data_size,$/;"	f	file:
cavs_filter_ch	libavcodec/cavsdsp.h	/^    void (*cavs_filter_ch)(uint8_t *pix, int stride, int alpha, int beta, int tc, int bs1, int bs2);$/;"	m	struct:CAVSDSPContext
cavs_filter_ch_c	libavcodec/cavsdsp.c	/^static void cavs_filter_ch_c(uint8_t *d, int stride, int alpha, int beta, int tc,$/;"	f	file:
cavs_filter_cv	libavcodec/cavsdsp.h	/^    void (*cavs_filter_cv)(uint8_t *pix, int stride, int alpha, int beta, int tc, int bs1, int bs2);$/;"	m	struct:CAVSDSPContext
cavs_filter_cv_c	libavcodec/cavsdsp.c	/^static void cavs_filter_cv_c(uint8_t *d, int stride, int alpha, int beta, int tc,$/;"	f	file:
cavs_filter_lh	libavcodec/cavsdsp.h	/^    void (*cavs_filter_lh)(uint8_t *pix, int stride, int alpha, int beta, int tc, int bs1, int bs2);$/;"	m	struct:CAVSDSPContext
cavs_filter_lh_c	libavcodec/cavsdsp.c	/^static void cavs_filter_lh_c(uint8_t *d, int stride, int alpha, int beta, int tc,$/;"	f	file:
cavs_filter_lv	libavcodec/cavsdsp.h	/^    void (*cavs_filter_lv)(uint8_t *pix, int stride, int alpha, int beta, int tc, int bs1, int bs2);$/;"	m	struct:CAVSDSPContext
cavs_filter_lv_c	libavcodec/cavsdsp.c	/^static void cavs_filter_lv_c(uint8_t *d, int stride, int alpha, int beta, int tc,$/;"	f	file:
cavs_find_frame_end	libavcodec/cavs_parser.c	/^static int cavs_find_frame_end(ParseContext *pc, const uint8_t *buf,$/;"	f	file:
cavs_flush	libavcodec/cavsdec.c	/^static void cavs_flush(AVCodecContext * avctx) {$/;"	f	file:
cavs_idct8_1d	libavcodec/x86/cavsdsp_mmx.c	/^static inline void cavs_idct8_1d(int16_t *block, uint64_t bias)$/;"	f	file:
cavs_idct8_add	libavcodec/cavsdsp.h	/^    void (*cavs_idct8_add)(uint8_t *dst, DCTELEM *block, int stride);$/;"	m	struct:CAVSDSPContext
cavs_idct8_add_c	libavcodec/cavsdsp.c	/^static void cavs_idct8_add_c(uint8_t *dst, DCTELEM *block, int stride) {$/;"	f	file:
cavs_idct8_add_mmx	libavcodec/x86/cavsdsp_mmx.c	/^static void cavs_idct8_add_mmx(uint8_t *dst, int16_t *block, int stride)$/;"	f	file:
cavs_intra_chroma	libavcodec/cavs.h	/^enum cavs_intra_chroma {$/;"	g
cavs_intra_luma	libavcodec/cavs.h	/^enum cavs_intra_luma {$/;"	g
cavs_mb	libavcodec/cavs.h	/^enum cavs_mb {$/;"	g
cavs_mv_loc	libavcodec/cavs.h	/^enum cavs_mv_loc {$/;"	g
cavs_mv_pred	libavcodec/cavs.h	/^enum cavs_mv_pred {$/;"	g
cavs_sub_mb	libavcodec/cavs.h	/^enum cavs_sub_mb {$/;"	g
cavsvideo_parse	libavcodec/cavs_parser.c	/^static int cavsvideo_parse(AVCodecParserContext *s,$/;"	f	file:
cavsvideo_probe	libavformat/cavsvideodec.c	/^static int cavsvideo_probe(AVProbeData *p)$/;"	f	file:
cb	libavfilter/libmpcodecs/vf_geq.c	/^static double cb(void *vf, double x, double y){$/;"	f	file:
cb0	libavcodec/twinvq.c	/^    const int16_t    *cb0;$/;"	m	struct:FrameMode	file:
cb0808l0	libavcodec/twinvq_data.h	/^    int16_t cb0808l0[1088];$/;"	m	struct:__anon263
cb0808l1	libavcodec/twinvq_data.h	/^    int16_t cb0808l1[1088];$/;"	m	struct:__anon263
cb0808m0	libavcodec/twinvq_data.h	/^    int16_t cb0808m0[1024];$/;"	m	struct:__anon263
cb0808m1	libavcodec/twinvq_data.h	/^    int16_t cb0808m1[1024];$/;"	m	struct:__anon263
cb0808s0	libavcodec/twinvq_data.h	/^    int16_t cb0808s0[1152];$/;"	m	struct:__anon263
cb0808s1	libavcodec/twinvq_data.h	/^    int16_t cb0808s1[1152];$/;"	m	struct:__anon263
cb1	libavcodec/twinvq.c	/^    const int16_t    *cb1;$/;"	m	struct:FrameMode	file:
cb1108l0	libavcodec/twinvq_data.h	/^    int16_t cb1108l0[1728];$/;"	m	struct:__anon263
cb1108l1	libavcodec/twinvq_data.h	/^    int16_t cb1108l1[1728];$/;"	m	struct:__anon263
cb1108m0	libavcodec/twinvq_data.h	/^    int16_t cb1108m0[1536];$/;"	m	struct:__anon263
cb1108m1	libavcodec/twinvq_data.h	/^    int16_t cb1108m1[1536];$/;"	m	struct:__anon263
cb1108s0	libavcodec/twinvq_data.h	/^    int16_t cb1108s0[1856];$/;"	m	struct:__anon263
cb1108s1	libavcodec/twinvq_data.h	/^    int16_t cb1108s1[1856];$/;"	m	struct:__anon263
cb1110l0	libavcodec/twinvq_data.h	/^    int16_t cb1110l0[1280];$/;"	m	struct:__anon263
cb1110l1	libavcodec/twinvq_data.h	/^    int16_t cb1110l1[1280];$/;"	m	struct:__anon263
cb1110m0	libavcodec/twinvq_data.h	/^    int16_t cb1110m0[1152];$/;"	m	struct:__anon263
cb1110m1	libavcodec/twinvq_data.h	/^    int16_t cb1110m1[1152];$/;"	m	struct:__anon263
cb1110s0	libavcodec/twinvq_data.h	/^    int16_t cb1110s0[1344];$/;"	m	struct:__anon263
cb1110s1	libavcodec/twinvq_data.h	/^    int16_t cb1110s1[1344];$/;"	m	struct:__anon263
cb1616l0	libavcodec/twinvq_data.h	/^    int16_t cb1616l0[1024];$/;"	m	struct:__anon263
cb1616l1	libavcodec/twinvq_data.h	/^    int16_t cb1616l1[1024];$/;"	m	struct:__anon263
cb1616m0	libavcodec/twinvq_data.h	/^    int16_t cb1616m0[960];$/;"	m	struct:__anon263
cb1616m1	libavcodec/twinvq_data.h	/^    int16_t cb1616m1[960];$/;"	m	struct:__anon263
cb1616s0	libavcodec/twinvq_data.h	/^    int16_t cb1616s0[1024];$/;"	m	struct:__anon263
cb1616s1	libavcodec/twinvq_data.h	/^    int16_t cb1616s1[1024];$/;"	m	struct:__anon263
cb2220l0	libavcodec/twinvq_data.h	/^    int16_t cb2220l0[1152];$/;"	m	struct:__anon263
cb2220l1	libavcodec/twinvq_data.h	/^    int16_t cb2220l1[1152];$/;"	m	struct:__anon263
cb2220m0	libavcodec/twinvq_data.h	/^    int16_t cb2220m0[1088];$/;"	m	struct:__anon263
cb2220m1	libavcodec/twinvq_data.h	/^    int16_t cb2220m1[1088];$/;"	m	struct:__anon263
cb2220s0	libavcodec/twinvq_data.h	/^    int16_t cb2220s0[1152];$/;"	m	struct:__anon263
cb2220s1	libavcodec/twinvq_data.h	/^    int16_t cb2220s1[1152];$/;"	m	struct:__anon263
cb2224l0	libavcodec/twinvq_data.h	/^    int16_t cb2224l0[960];$/;"	m	struct:__anon263
cb2224l1	libavcodec/twinvq_data.h	/^    int16_t cb2224l1[960];$/;"	m	struct:__anon263
cb2224m0	libavcodec/twinvq_data.h	/^    int16_t cb2224m0[896];$/;"	m	struct:__anon263
cb2224m1	libavcodec/twinvq_data.h	/^    int16_t cb2224m1[896];$/;"	m	struct:__anon263
cb2224s0	libavcodec/twinvq_data.h	/^    int16_t cb2224s0[960];$/;"	m	struct:__anon263
cb2224s1	libavcodec/twinvq_data.h	/^    int16_t cb2224s1[960];$/;"	m	struct:__anon263
cb2232l0	libavcodec/twinvq_data.h	/^    int16_t cb2232l0[768];$/;"	m	struct:__anon263
cb2232l1	libavcodec/twinvq_data.h	/^    int16_t cb2232l1[768];$/;"	m	struct:__anon263
cb2232m0	libavcodec/twinvq_data.h	/^    int16_t cb2232m0[704];$/;"	m	struct:__anon263
cb2232m1	libavcodec/twinvq_data.h	/^    int16_t cb2232m1[704];$/;"	m	struct:__anon263
cb2232s0	libavcodec/twinvq_data.h	/^    int16_t cb2232s0[704];$/;"	m	struct:__anon263
cb2232s1	libavcodec/twinvq_data.h	/^    int16_t cb2232s1[704];$/;"	m	struct:__anon263
cb2x2	libavcodec/roqvideo.h	/^    roq_cell cb2x2[256];$/;"	m	struct:RoqContext
cb4440l0	libavcodec/twinvq_data.h	/^    int16_t cb4440l0[1088];$/;"	m	struct:__anon263
cb4440l1	libavcodec/twinvq_data.h	/^    int16_t cb4440l1[1088];$/;"	m	struct:__anon263
cb4440m0	libavcodec/twinvq_data.h	/^    int16_t cb4440m0[1088];$/;"	m	struct:__anon263
cb4440m1	libavcodec/twinvq_data.h	/^    int16_t cb4440m1[1088];$/;"	m	struct:__anon263
cb4440s0	libavcodec/twinvq_data.h	/^    int16_t cb4440s0[1152];$/;"	m	struct:__anon263
cb4440s1	libavcodec/twinvq_data.h	/^    int16_t cb4440s1[1152];$/;"	m	struct:__anon263
cb4448l0	libavcodec/twinvq_data.h	/^    int16_t cb4448l0[896];$/;"	m	struct:__anon263
cb4448l1	libavcodec/twinvq_data.h	/^    int16_t cb4448l1[896];$/;"	m	struct:__anon263
cb4448m0	libavcodec/twinvq_data.h	/^    int16_t cb4448m0[896];$/;"	m	struct:__anon263
cb4448m1	libavcodec/twinvq_data.h	/^    int16_t cb4448m1[896];$/;"	m	struct:__anon263
cb4448s0	libavcodec/twinvq_data.h	/^    int16_t cb4448s0[960];$/;"	m	struct:__anon263
cb4448s1	libavcodec/twinvq_data.h	/^    int16_t cb4448s1[960];$/;"	m	struct:__anon263
cb4x4	libavcodec/roqvideo.h	/^    roq_qcell cb4x4[256];$/;"	m	struct:RoqContext
cbEntry	libavcodec/roqvideoenc.c	/^    int cbEntry;$/;"	m	struct:__anon72	file:
cbEntry	libavcodec/roqvideoenc.c	/^    int cbEntry;$/;"	m	struct:__anon73	file:
cb_gain_1st_8k	libavcodec/g729data.h	/^static const int16_t cb_gain_1st_8k[1<<GC_1ST_IDX_BITS_8K][2] = { \/*(0.14) (2.13) *\/$/;"	v
cb_gain_2nd_8k	libavcodec/g729data.h	/^static const int16_t cb_gain_2nd_8k[1<<GC_2ND_IDX_BITS_8K][2] = { \/*(1.14) (1.13) *\/$/;"	v
cb_len_read	libavcodec/twinvq.c	/^    uint8_t         cb_len_read; \/\/\/< number of spectrum coefficients to read$/;"	m	struct:FrameMode	file:
cb_lookup_vals	libavcodec/vorbisenc.c	/^static int cb_lookup_vals(int lookup, int dimentions, int entries)$/;"	f	file:
cb_lsp_1st	libavcodec/g729data.h	/^static const int16_t cb_lsp_1st[1<<VQ_1ST_BITS][10] = { \/* (2.13) *\/$/;"	v
cb_lsp_2nd	libavcodec/g729data.h	/^static const int16_t cb_lsp_2nd[1<<VQ_2ND_BITS][10] = { \/* (2.13) *\/$/;"	v
cb_ma_predictor	libavcodec/g729data.h	/^static const int16_t cb_ma_predictor[2][MA_NP][10] = { \/* (0.15) *\/$/;"	v
cb_ma_predictor_sum	libavcodec/g729data.h	/^static const int16_t cb_ma_predictor_sum[2][10] = { \/* (0.15) *\/$/;"	v
cbc_key	libavutil/des.c	/^static const uint8_t cbc_key[] = {$/;"	v	file:
cbgain	libavcodec/qcelpdata.h	/^    uint8_t cbgain[16]; \/\/\/!< unsigned codebook gain for each codebook subframe$/;"	m	struct:__anon84
cblk	libavcodec/j2k.h	/^    J2kCblk *cblk;$/;"	m	struct:__anon215
cblk_style	libavcodec/j2k.h	/^    uint8_t cblk_style;       \/\/\/< codeblock coding style$/;"	m	struct:__anon210
cblkincl	libavcodec/j2k.h	/^    J2kTgtNode *cblkincl;$/;"	m	struct:__anon214
cblknx	libavcodec/j2k.h	/^    uint16_t cblknx, cblkny;$/;"	m	struct:__anon215
cblkny	libavcodec/j2k.h	/^    uint16_t cblknx, cblkny;$/;"	m	struct:__anon215
cbp	libavcodec/cavs.h	/^    int cbp;$/;"	m	struct:__anon207
cbp	libavcodec/h264.h	/^    int cbp;$/;"	m	struct:H264Context
cbp	libavcodec/h264data.h	/^    uint8_t cbp;$/;"	m	struct:IMbInfo
cbp	libavcodec/ivi_common.h	/^    uint8_t     cbp;      \/\/\/< coded block pattern$/;"	m	struct:__anon105
cbp	libavcodec/rv34.h	/^    VLC cbp[2][4];         \/\/\/< VLCs used for coded block patterns decoding$/;"	m	struct:RV34VLC
cbp	libavcodec/vc1.h	/^    uint32_t *cbp_base, *cbp;$/;"	m	struct:VC1Context
cbp1Test	libavfilter/libmpcodecs/vf_test.c	/^static void cbp1Test(uint8_t *dst[3], int stride[3], int off)$/;"	f	file:
cbp_base	libavcodec/vc1.h	/^    uint32_t *cbp_base, *cbp;$/;"	m	struct:VC1Context
cbp_chroma	libavcodec/rv34.h	/^    uint8_t  *cbp_chroma;    \/\/\/< CBP values for chroma subblocks$/;"	m	struct:RV34DecContext
cbp_luma	libavcodec/rv34.h	/^    uint16_t *cbp_luma;      \/\/\/< CBP values for luma subblocks$/;"	m	struct:RV34DecContext
cbp_tab	libavcodec/cavsdec.c	/^static const uint8_t cbp_tab[64][2] = {$/;"	v	file:
cbp_table	libavcodec/h264.h	/^    uint16_t     *cbp_table;$/;"	m	struct:H264Context
cbp_table	libavcodec/mpegvideo.h	/^    uint8_t *cbp_table;           \/\/\/< used to store cbp, ac_pred for partitioned decoding$/;"	m	struct:MpegEncContext
cbp_table_index	libavcodec/wmv2.h	/^    int cbp_table_index;$/;"	m	struct:Wmv2Context
cbpc_b_tab	libavcodec/h263data.h	/^const uint8_t cbpc_b_tab[4][2] = {$/;"	v
cbpc_b_vlc	libavcodec/ituh263dec.c	/^static VLC cbpc_b_vlc;$/;"	v	file:
cbpcy_vlc	libavcodec/vc1.h	/^    VLC *cbpcy_vlc;               \/\/\/< CBPCY VLC table$/;"	m	struct:VC1Context
cbppattern	libavcodec/rv34.h	/^    VLC cbppattern[2];     \/\/\/< VLCs used for pattern of coded block patterns decoding$/;"	m	struct:RV34VLC
cbps	libavcodec/j2kdec.c	/^    uint8_t cbps[4]; \/\/\/< bits per sample in particular components$/;"	m	struct:__anon98	file:
cbps	libavcodec/j2kenc.c	/^    uint8_t cbps[4]; \/\/\/< bits per sample in particular components$/;"	m	struct:__anon63	file:
cbr_bit_allocation	libavcodec/ac3enc.c	/^static int cbr_bit_allocation(AC3EncodeContext *s)$/;"	f	file:
cbrt_tab	libavcodec/cbrt_tablegen.h	/^static uint32_t cbrt_tab[1 << 13];$/;"	v
cbrt_tableinit	libavcodec/cbrt_tablegen.h	/^static void cbrt_tableinit(void)$/;"	f
cbrt_tableinit	libavcodec/cbrt_tablegen.h	30;"	d
cbsign	libavcodec/qcelpdata.h	/^    uint8_t cbsign[16]; \/\/\/!< sign of the codebook gain for each codebook subframe$/;"	m	struct:__anon84
cc	libavcodec/vp56.h	/^    VP56RangeCoder cc;$/;"	m	struct:vp56_context
cc	libavformat/mpegtsenc.c	/^    int cc;$/;"	m	struct:MpegTSSection	file:
cc	libavformat/mpegtsenc.c	/^    int cc;$/;"	m	struct:MpegTSWriteStream	file:
cce_scale	libavcodec/aacdec.c	/^static const float cce_scale[] = {$/;"	v	file:
ccitt_codes_bits	libavcodec/faxcompr.c	/^static const uint8_t ccitt_codes_bits[2][CCITT_SYMS] =$/;"	v	file:
ccitt_codes_lens	libavcodec/faxcompr.c	/^static const uint8_t ccitt_codes_lens[2][CCITT_SYMS] =$/;"	v	file:
ccitt_group3_2d_bits	libavcodec/faxcompr.c	/^static const uint8_t ccitt_group3_2d_bits[11] = {$/;"	v	file:
ccitt_group3_2d_lens	libavcodec/faxcompr.c	/^static const uint8_t ccitt_group3_2d_lens[11] = {$/;"	v	file:
ccitt_group3_2d_vlc	libavcodec/faxcompr.c	/^static VLC ccitt_vlc[2], ccitt_group3_2d_vlc;$/;"	v	file:
ccitt_syms	libavcodec/faxcompr.c	/^static const uint16_t ccitt_syms[CCITT_SYMS] = {$/;"	v	file:
ccitt_vlc	libavcodec/faxcompr.c	/^static VLC ccitt_vlc[2], ccitt_group3_2d_vlc;$/;"	v	file:
ccp	libavcodec/vp56.h	/^    VP56RangeCoder *ccp;$/;"	m	struct:vp56_context
ccp_tab	libavcodec/asv1.c	/^static const uint8_t ccp_tab[17][2]={$/;"	v	file:
ccp_vlc	libavcodec/asv1.c	/^static VLC ccp_vlc;$/;"	v	file:
ccpl	libavcodec/cook.c	/^    VLC                 ccpl;                 \/\/\/< channel coupling$/;"	m	struct:__anon230	file:
ccpl_huffbits	libavcodec/cookdata.h	/^static const uint8_t* const ccpl_huffbits[5] = {$/;"	v
ccpl_huffbits2	libavcodec/cookdata.h	/^static const uint8_t ccpl_huffbits2[3] = {$/;"	v
ccpl_huffbits3	libavcodec/cookdata.h	/^static const uint8_t ccpl_huffbits3[7] = {$/;"	v
ccpl_huffbits4	libavcodec/cookdata.h	/^static const uint8_t ccpl_huffbits4[15] = {$/;"	v
ccpl_huffbits5	libavcodec/cookdata.h	/^static const uint8_t ccpl_huffbits5[31] = {$/;"	v
ccpl_huffbits6	libavcodec/cookdata.h	/^static const uint8_t ccpl_huffbits6[63] = {$/;"	v
ccpl_huffcodes	libavcodec/cookdata.h	/^static const uint16_t* const ccpl_huffcodes[5] = {$/;"	v
ccpl_huffcodes2	libavcodec/cookdata.h	/^static const uint16_t ccpl_huffcodes2[3] = {$/;"	v
ccpl_huffcodes3	libavcodec/cookdata.h	/^static const uint16_t ccpl_huffcodes3[7] = {$/;"	v
ccpl_huffcodes4	libavcodec/cookdata.h	/^static const uint16_t ccpl_huffcodes4[15] = {$/;"	v
ccpl_huffcodes5	libavcodec/cookdata.h	/^static const uint16_t ccpl_huffcodes5[31] = {$/;"	v
ccpl_huffcodes6	libavcodec/cookdata.h	/^static const uint16_t ccpl_huffcodes6[63] = {$/;"	v
cdata_probe	libavformat/eacdata.c	/^static int cdata_probe(AVProbeData *p)$/;"	f	file:
cdata_read_header	libavformat/eacdata.c	/^static int cdata_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
cdata_read_packet	libavformat/eacdata.c	/^static int cdata_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
cdg_border_preset	libavcodec/cdgraphics.c	/^static void cdg_border_preset(CDGraphicsContext *cc, uint8_t *data)$/;"	f	file:
cdg_copy_rect_buf	libavcodec/cdgraphics.c	/^static void cdg_copy_rect_buf(int out_tl_x, int out_tl_y, uint8_t *out,$/;"	f	file:
cdg_decode_end	libavcodec/cdgraphics.c	/^static av_cold int cdg_decode_end(AVCodecContext *avctx)$/;"	f	file:
cdg_decode_frame	libavcodec/cdgraphics.c	/^static int cdg_decode_frame(AVCodecContext *avctx,$/;"	f	file:
cdg_decode_init	libavcodec/cdgraphics.c	/^static av_cold int cdg_decode_init(AVCodecContext *avctx)$/;"	f	file:
cdg_fill_rect_preset	libavcodec/cdgraphics.c	/^static void cdg_fill_rect_preset(int tl_x, int tl_y, uint8_t *out,$/;"	f	file:
cdg_fill_wrapper	libavcodec/cdgraphics.c	/^static void cdg_fill_wrapper(int out_tl_x, int out_tl_y, uint8_t *out,$/;"	f	file:
cdg_init_frame	libavcodec/cdgraphics.c	/^static void cdg_init_frame(AVFrame *frame)$/;"	f	file:
cdg_load_palette	libavcodec/cdgraphics.c	/^static void cdg_load_palette(CDGraphicsContext *cc, uint8_t *data, int low)$/;"	f	file:
cdg_scroll	libavcodec/cdgraphics.c	/^static void cdg_scroll(CDGraphicsContext *cc, uint8_t *data,$/;"	f	file:
cdg_tile_block	libavcodec/cdgraphics.c	/^static int cdg_tile_block(CDGraphicsContext *cc, uint8_t *data, int b)$/;"	f	file:
cdsp	libavcodec/cavs.h	/^    CAVSDSPContext cdsp;$/;"	m	struct:__anon207
cdt	libavcodec/truemotion1.c	/^    int16_t cdt[8];$/;"	m	struct:TrueMotion1Context	file:
cdt1	libavcodec/truemotion1data.h	/^static const int16_t cdt1[8] = { 0, -1, 1, -2, 3, -4, 5, -4 };$/;"	v
cdt2	libavcodec/truemotion1data.h	/^static const int16_t cdt2[8] = { 0, -4, 3, -16, 20, -32, 36, -32 };$/;"	v
cdt3	libavcodec/truemotion1data.h	/^static const int16_t cdt3[8] = { 0, -2, 2, -8, 8, -18, 18, -40 };$/;"	v
cdts	libavcodec/truemotion1data.h	/^static const int16_t * const cdts[] = { cdt1, cdt1, cdt2, cdt3, NULL };$/;"	v
cdx	libavcodec/j2kdec.c	/^    int cdx[4], cdy[4];$/;"	m	struct:__anon98	file:
cdy	libavcodec/j2kdec.c	/^    int cdx[4], cdy[4];$/;"	m	struct:__anon98	file:
ceil_log2	libavcodec/aacsbr.c	/^static const int8_t ceil_log2[] = {$/;"	v	file:
cel_evals	libavcodec/roqvideoenc.c	/^    CelEvaluation *cel_evals;$/;"	m	struct:RoqTempData	file:
cell	libavcodec/elbg.c	/^} cell;$/;"	t	typeref:struct:cell_s	file:
cell_s	libavcodec/elbg.c	/^typedef struct cell_s {$/;"	s	file:
cells	libavcodec/elbg.c	/^    cell **cells;$/;"	m	struct:__anon247	file:
celt_header	libavformat/oggparsecelt.c	/^static int celt_header(AVFormatContext *s, int idx)$/;"	f	file:
center_levels	libavcodec/ac3dec.c	/^static const uint8_t center_levels[4] = { 4, 5, 6, 5 };$/;"	v	file:
center_mix_level	libavcodec/ac3.h	/^    float center_mix_level;$/;"	m	struct:AC3EncOptions
center_mix_level	libavcodec/ac3.h	/^    int center_mix_level;                   \/\/\/< Center mix level index$/;"	m	struct:__anon170
center_mix_level	libavcodec/ac3dec.h	/^    int center_mix_level;                   \/\/\/< Center mix level index$/;"	m	struct:__anon88
center_mix_level	libavcodec/ac3enc.h	/^    int center_mix_level;                   \/\/\/< center mix level code$/;"	m	struct:AC3EncodeContext
cextern	libavcodec/x86/ac3dsp.asm	/^cextern ac3_bap_bits$/;"	l
cextern	libavcodec/x86/deinterlace.asm	/^cextern pw_4$/;"	l
cextern	libavcodec/x86/fft_mmx.asm	/^cextern cos_ %+ i$/;"	l
cextern	libavcodec/x86/h264_chromamc.asm	/^cextern pw_28$/;"	l
cextern	libavcodec/x86/h264_chromamc.asm	/^cextern pw_3$/;"	l
cextern	libavcodec/x86/h264_chromamc.asm	/^cextern pw_32$/;"	l
cextern	libavcodec/x86/h264_chromamc.asm	/^cextern pw_4$/;"	l
cextern	libavcodec/x86/h264_chromamc.asm	/^cextern pw_64$/;"	l
cextern	libavcodec/x86/h264_chromamc.asm	/^cextern pw_8$/;"	l
cextern	libavcodec/x86/h264_chromamc_10bit.asm	/^cextern pw_32$/;"	l
cextern	libavcodec/x86/h264_chromamc_10bit.asm	/^cextern pw_4$/;"	l
cextern	libavcodec/x86/h264_chromamc_10bit.asm	/^cextern pw_64$/;"	l
cextern	libavcodec/x86/h264_chromamc_10bit.asm	/^cextern pw_8$/;"	l
cextern	libavcodec/x86/h264_deblock.asm	/^cextern pb_0$/;"	l
cextern	libavcodec/x86/h264_deblock.asm	/^cextern pb_1$/;"	l
cextern	libavcodec/x86/h264_deblock.asm	/^cextern pb_3$/;"	l
cextern	libavcodec/x86/h264_deblock.asm	/^cextern pb_A1$/;"	l
cextern	libavcodec/x86/h264_deblock_10bit.asm	/^cextern pw_2$/;"	l
cextern	libavcodec/x86/h264_deblock_10bit.asm	/^cextern pw_3$/;"	l
cextern	libavcodec/x86/h264_deblock_10bit.asm	/^cextern pw_4$/;"	l
cextern	libavcodec/x86/h264_idct.asm	/^cextern pw_1$/;"	l
cextern	libavcodec/x86/h264_idct.asm	/^cextern pw_32$/;"	l
cextern	libavcodec/x86/h264_intrapred.asm	/^cextern pb_1$/;"	l
cextern	libavcodec/x86/h264_intrapred.asm	/^cextern pb_3$/;"	l
cextern	libavcodec/x86/h264_intrapred.asm	/^cextern pw_16$/;"	l
cextern	libavcodec/x86/h264_intrapred.asm	/^cextern pw_17$/;"	l
cextern	libavcodec/x86/h264_intrapred.asm	/^cextern pw_32$/;"	l
cextern	libavcodec/x86/h264_intrapred.asm	/^cextern pw_4$/;"	l
cextern	libavcodec/x86/h264_intrapred.asm	/^cextern pw_5$/;"	l
cextern	libavcodec/x86/h264_intrapred.asm	/^cextern pw_8$/;"	l
cextern	libavcodec/x86/h264_intrapred_10bit.asm	/^cextern pw_1$/;"	l
cextern	libavcodec/x86/h264_intrapred_10bit.asm	/^cextern pw_4$/;"	l
cextern	libavcodec/x86/vc1dsp_yasm.asm	/^cextern pw_4$/;"	l
cextern	libavcodec/x86/vc1dsp_yasm.asm	/^cextern pw_5$/;"	l
cextern	libavcodec/x86/vp3dsp.asm	/^cextern add_pixels_clamped_mmx$/;"	l
cextern	libavcodec/x86/vp3dsp.asm	/^cextern pb_1$/;"	l
cextern	libavcodec/x86/vp3dsp.asm	/^cextern pb_1F$/;"	l
cextern	libavcodec/x86/vp3dsp.asm	/^cextern pb_3$/;"	l
cextern	libavcodec/x86/vp3dsp.asm	/^cextern pb_7$/;"	l
cextern	libavcodec/x86/vp3dsp.asm	/^cextern pb_81$/;"	l
cextern	libavcodec/x86/vp3dsp.asm	/^cextern put_signed_pixels_clamped_mmx$/;"	l
cextern	libavcodec/x86/vp3dsp.asm	/^cextern pw_8$/;"	l
cextern	libavcodec/x86/vp56dsp.asm	/^cextern pw_64$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pb_1$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pb_3$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pb_4$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pb_80$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pb_F8$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pb_FE$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pw_18$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pw_27$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pw_3$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pw_4$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pw_63$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pw_64$/;"	l
cextern	libavcodec/x86/vp8dsp.asm	/^cextern pw_9$/;"	l
cf_sizes_wb	libavcodec/amrwbdata.h	/^static const uint16_t cf_sizes_wb[] = {$/;"	v
cf_table	libavcodec/bgmc.c	/^static const uint16_t * const cf_table[16] = {$/;"	v	file:
cf_tables_1	libavcodec/bgmc.c	/^static const uint16_t cf_tables_1[3][129] = {$/;"	v	file:
cf_tables_2	libavcodec/bgmc.c	/^static const uint16_t cf_tables_2[8][193] = {$/;"	v	file:
cf_tables_3	libavcodec/bgmc.c	/^static const uint16_t cf_tables_3[5][257] = {$/;"	v	file:
cfg	libavcodec/dxva2.h	/^    const DXVA2_ConfigPictureDecode *cfg;$/;"	m	struct:dxva_context
cfr2_TAG	libavformat/4xm.c	50;"	d	file:
cfrm	libavcodec/4xm.c	/^    CFrameBuffer cfrm[CFRAME_BUFFER_COUNT];$/;"	m	struct:FourXContext	file:
cfrm_TAG	libavformat/4xm.c	47;"	d	file:
cga_mode45_index	libavcodec/pictordec.c	/^static const uint8_t cga_mode45_index[6][4] = {$/;"	v	file:
cglobal	libavcodec/x86/ac3dsp.asm	/^cglobal ac3_%1shift_int%2_%4, 3,3,5, src, len, shift$/;"	l
cglobal	libavcodec/x86/ac3dsp.asm	/^cglobal ac3_compute_mantissa_size_sse2, 1,2,4, mant_cnt, sum$/;"	l
cglobal	libavcodec/x86/ac3dsp.asm	/^cglobal ac3_exponent_min_%1, 3,4,2, exp, reuse_blks, expn, offset$/;"	l
cglobal	libavcodec/x86/ac3dsp.asm	/^cglobal ac3_max_msb_abs_int16_%1, 2,2,5, src, len$/;"	l
cglobal	libavcodec/x86/ac3dsp.asm	/^cglobal float_to_fixed24_3dnow, 3,3,0, dst, src, len$/;"	l
cglobal	libavcodec/x86/ac3dsp.asm	/^cglobal float_to_fixed24_sse, 3,3,3, dst, src, len$/;"	l
cglobal	libavcodec/x86/ac3dsp.asm	/^cglobal float_to_fixed24_sse2, 3,3,9, dst, src, len$/;"	l
cglobal	libavcodec/x86/dct32_sse.asm	/^cglobal dct32_float_avx, 2,3,8, out, in, tmp$/;"	l
cglobal	libavcodec/x86/dct32_sse.asm	/^cglobal dct32_float_sse, 2,3,16, out, in, tmp$/;"	l
cglobal	libavcodec/x86/deinterlace.asm	/^cglobal deinterlace_line_inplace_mmx, 6,6,7,      lum_m4, lum_m3, lum_m2, lum_m1, lum, size$/;"	l
cglobal	libavcodec/x86/deinterlace.asm	/^cglobal deinterlace_line_mmx,         7,7,7, dst, lum_m4, lum_m3, lum_m2, lum_m1, lum, size$/;"	l
cglobal	libavcodec/x86/dsputil_yasm.asm	/^cglobal add_hfyu_left_prediction_sse4, 3,3,7, dst, src, w, left$/;"	l
cglobal	libavcodec/x86/dsputil_yasm.asm	/^cglobal add_hfyu_left_prediction_ssse3, 3,3,7, dst, src, w, left$/;"	l
cglobal	libavcodec/x86/dsputil_yasm.asm	/^cglobal add_hfyu_median_prediction_mmx2, 6,6,0, dst, top, diff, w, left, left_top$/;"	l
cglobal	libavcodec/x86/dsputil_yasm.asm	/^cglobal apply_window_int16_%1, 4,5,6, output, input, window, offset, offset2$/;"	l
cglobal	libavcodec/x86/dsputil_yasm.asm	/^cglobal emu_edge_core_%1, 2, 7, 0$/;"	l
cglobal	libavcodec/x86/dsputil_yasm.asm	/^cglobal emu_edge_core_%1, 6, 7, 1$/;"	l
cglobal	libavcodec/x86/dsputil_yasm.asm	/^cglobal scalarproduct_and_madd_int16_%1, 4,4,8, v1, v2, v3, order, mul$/;"	l
cglobal	libavcodec/x86/dsputil_yasm.asm	/^cglobal scalarproduct_and_madd_int16_ssse3, 4,5,10, v1, v2, v3, order, mul$/;"	l
cglobal	libavcodec/x86/dsputil_yasm.asm	/^cglobal scalarproduct_float_sse, 3,3,2, v1, v2, offset$/;"	l
cglobal	libavcodec/x86/dsputil_yasm.asm	/^cglobal scalarproduct_int16_%1, 3,3,4, v1, v2, order, shift$/;"	l
cglobal	libavcodec/x86/dsputilenc_yasm.asm	/^cglobal hadamard8_diff16_%1, 5, 6, %2$/;"	l
cglobal	libavcodec/x86/dsputilenc_yasm.asm	/^cglobal hadamard8_diff_%1, 4, 4, %2$/;"	l
cglobal	libavcodec/x86/dsputilenc_yasm.asm	/^cglobal sse16_sse2, 5, 5, 8$/;"	l
cglobal	libavcodec/x86/fft_mmx.asm	/^cglobal fft_dispatch%3%2, 2,5,8, z, nbits$/;"	l
cglobal	libavcodec/x86/fft_mmx.asm	/^cglobal imdct_half%1, 3,7,8; FFTContext *s, FFTSample *output, const FFTSample *input$/;"	l
cglobal	libavcodec/x86/fmtconvert.asm	/^cglobal float_interleave2_%1, 3,4,%2, dst, src, len, src1$/;"	l
cglobal	libavcodec/x86/fmtconvert.asm	/^cglobal float_interleave6_%1, 2,7,%2, dst, src, src1, src2, src3, src4, src5$/;"	l
cglobal	libavcodec/x86/fmtconvert.asm	/^cglobal float_to_int16_interleave6_%1, 2,7,0, dst, src, src1, src2, src3, src4, src5$/;"	l
cglobal	libavcodec/x86/h264_chromamc.asm	/^cglobal %1_%2_chroma_mc2_%3, 6, 7, 0$/;"	l
cglobal	libavcodec/x86/h264_chromamc.asm	/^cglobal %1_%2_chroma_mc4_%3, 6, 6, 0$/;"	l
cglobal	libavcodec/x86/h264_chromamc.asm	/^cglobal %1_%2_chroma_mc4_%3, 6, 7, 0$/;"	l
cglobal	libavcodec/x86/h264_chromamc.asm	/^cglobal %1_%2_chroma_mc8_%3, 6, 7, 0$/;"	l
cglobal	libavcodec/x86/h264_chromamc.asm	/^cglobal %1_%2_chroma_mc8_%3, 6, 7, 8$/;"	l
cglobal	libavcodec/x86/h264_chromamc_10bit.asm	/^cglobal %1_h264_chroma_mc2_10_%2, 6,7$/;"	l
cglobal	libavcodec/x86/h264_chromamc_10bit.asm	/^cglobal %1_h264_chroma_mc4_10_%2, 6,6,7$/;"	l
cglobal	libavcodec/x86/h264_chromamc_10bit.asm	/^cglobal %1_h264_chroma_mc8_10_%2, 6,7,8$/;"	l
cglobal	libavcodec/x86/h264_deblock.asm	/^cglobal deblock_%2_luma_8_%1, 5,5$/;"	l
cglobal	libavcodec/x86/h264_deblock.asm	/^cglobal deblock_%2_luma_intra_8_%1, 4,6,16$/;"	l
cglobal	libavcodec/x86/h264_deblock.asm	/^cglobal deblock_h_chroma_8_mmxext, 5,7$/;"	l
cglobal	libavcodec/x86/h264_deblock.asm	/^cglobal deblock_h_chroma_intra_8_mmxext, 4,6$/;"	l
cglobal	libavcodec/x86/h264_deblock.asm	/^cglobal deblock_h_luma_8_%1, 0,5$/;"	l
cglobal	libavcodec/x86/h264_deblock.asm	/^cglobal deblock_h_luma_8_%1, 5,7$/;"	l
cglobal	libavcodec/x86/h264_deblock.asm	/^cglobal deblock_h_luma_intra_8_%1, 2,4$/;"	l
cglobal	libavcodec/x86/h264_deblock.asm	/^cglobal deblock_h_luma_intra_8_%1, 4,7$/;"	l
cglobal	libavcodec/x86/h264_deblock.asm	/^cglobal deblock_v_chroma_8_mmxext, 5,6$/;"	l
cglobal	libavcodec/x86/h264_deblock.asm	/^cglobal deblock_v_chroma_intra_8_mmxext, 4,5$/;"	l
cglobal	libavcodec/x86/h264_deblock.asm	/^cglobal deblock_v_luma_8_%1, 5,5,10$/;"	l
cglobal	libavcodec/x86/h264_deblock_10bit.asm	/^cglobal deblock_h_luma_10_%1, 5,6,8*(mmsize\/16)$/;"	l
cglobal	libavcodec/x86/h264_deblock_10bit.asm	/^cglobal deblock_h_luma_10_%1, 5,7,15$/;"	l
cglobal	libavcodec/x86/h264_deblock_10bit.asm	/^cglobal deblock_h_luma_intra_10_%1, 4,7,16$/;"	l
cglobal	libavcodec/x86/h264_deblock_10bit.asm	/^cglobal deblock_h_luma_intra_10_%1, 4,7,8*(mmsize\/16)$/;"	l
cglobal	libavcodec/x86/h264_deblock_10bit.asm	/^cglobal deblock_v_chroma_10_%1, 5,7-(mmsize\/16),8*(mmsize\/16)$/;"	l
cglobal	libavcodec/x86/h264_deblock_10bit.asm	/^cglobal deblock_v_chroma_intra_10_%1, 4,6-(mmsize\/16),8*(mmsize\/16)$/;"	l
cglobal	libavcodec/x86/h264_deblock_10bit.asm	/^cglobal deblock_v_luma_10_%1, 5,5,15$/;"	l
cglobal	libavcodec/x86/h264_deblock_10bit.asm	/^cglobal deblock_v_luma_10_%1, 5,5,8*(mmsize\/16)$/;"	l
cglobal	libavcodec/x86/h264_deblock_10bit.asm	/^cglobal deblock_v_luma_intra_10_%1, 4,7,16$/;"	l
cglobal	libavcodec/x86/h264_deblock_10bit.asm	/^cglobal deblock_v_luma_intra_10_%1, 4,7,8*(mmsize\/16)$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct8_add4_8_mmx, 5, 7, 0$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct8_add4_8_mmx2, 5, 7, 0$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct8_add4_8_sse2, 5, 7, 10$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct8_add_8_mmx, 3, 4, 0$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct8_add_8_sse2, 3, 4, 10$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct8_dc_add_8_mmx2, 3, 3, 0$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct_add16_8_mmx, 5, 7, 0$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct_add16_8_mmx2, 5, 7, 0$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct_add16_8_sse2, 5, 5, 8$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct_add16intra_8_mmx, 5, 7, 0$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct_add16intra_8_mmx2, 5, 7, 0$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct_add16intra_8_sse2, 5, 7, 8$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct_add8_8_mmx, 5, 7, 0$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct_add8_8_mmx2, 5, 7, 0$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct_add8_8_sse2, 5, 7, 8$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct_add_8_mmx, 3, 3, 0$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_idct_dc_add_8_mmx2, 3, 3, 0$/;"	l
cglobal	libavcodec/x86/h264_idct.asm	/^cglobal h264_luma_dc_dequant_idct_%1, 3,4,%2$/;"	l
cglobal	libavcodec/x86/h264_idct_10bit.asm	/^cglobal h264_idct8_add4_10_%1, 0,7,16$/;"	l
cglobal	libavcodec/x86/h264_idct_10bit.asm	/^cglobal h264_idct8_add_10_%1, 3,4,16$/;"	l
cglobal	libavcodec/x86/h264_idct_10bit.asm	/^cglobal h264_idct8_dc_add_10_%1,3,3,7$/;"	l
cglobal	libavcodec/x86/h264_idct_10bit.asm	/^cglobal h264_idct_add16_10_%1, 5,6$/;"	l
cglobal	libavcodec/x86/h264_idct_10bit.asm	/^cglobal h264_idct_add16intra_10_%1,5,7,8$/;"	l
cglobal	libavcodec/x86/h264_idct_10bit.asm	/^cglobal h264_idct_add8_10_%1,5,7$/;"	l
cglobal	libavcodec/x86/h264_idct_10bit.asm	/^cglobal h264_idct_add_10_%1, 3,3$/;"	l
cglobal	libavcodec/x86/h264_idct_10bit.asm	/^cglobal h264_idct_dc_add_10_mmx2,3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred16x16_dc_%1, 2,7$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred16x16_horizontal_%1, 2,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred16x16_plane_%3_%1, 2, 7, %2$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred16x16_tm_vp8_%1, 2,5$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred16x16_tm_vp8_sse2, 2,6,6$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred16x16_vertical_mmx, 2,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred16x16_vertical_sse, 2,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred4x4_dc_mmxext, 3,5$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred4x4_down_left_mmxext, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred4x4_down_right_mmxext, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred4x4_horizontal_down_mmxext, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred4x4_horizontal_up_mmxext, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred4x4_tm_vp8_%1, 3,6$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred4x4_tm_vp8_ssse3, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred4x4_vertical_left_mmxext, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred4x4_vertical_right_mmxext, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred4x4_vertical_vp8_mmxext, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8_dc_mmxext, 2,5$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8_dc_rv40_mmxext, 2,7$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8_horizontal_%1, 2,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8_plane_%1, 2, 7, %2$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8_tm_vp8_%1, 2,6$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8_tm_vp8_sse2, 2,6,4$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8_tm_vp8_ssse3, 2,3,6$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8_top_dc_mmxext, 2,5$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8_vertical_mmx, 2,2$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_dc_%1, 4,5$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_down_left_%1, 4,4$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_down_left_mmxext, 4,5$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_down_right_%1, 4,5$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_down_right_mmxext, 4,5$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_horizontal_%1, 4,4$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_horizontal_down_%1, 4,5$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_horizontal_down_mmxext, 4,5$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_horizontal_up_%1, 4,4$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_top_dc_%1, 4,4$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_vertical_%1, 4,4$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_vertical_left_%1, 4,4$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_vertical_right_%1, 4,5,7$/;"	l
cglobal	libavcodec/x86/h264_intrapred.asm	/^cglobal pred8x8l_vertical_right_mmxext, 4,5$/;"	l
cglobal	libavcodec/x86/h264_intrapred_10bit.asm	/^cglobal pred4x4_dc_10_mmxext, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred_10bit.asm	/^cglobal pred4x4_down_left_10_%1, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred_10bit.asm	/^cglobal pred4x4_down_right_10_%1, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred_10bit.asm	/^cglobal pred4x4_horizontal_down_10_%1, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred_10bit.asm	/^cglobal pred4x4_horizontal_up_10_mmxext, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred_10bit.asm	/^cglobal pred4x4_vertical_left_10_%1, 3,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred_10bit.asm	/^cglobal pred4x4_vertical_right_10_%1, 3,3,6$/;"	l
cglobal	libavcodec/x86/h264_intrapred_10bit.asm	/^cglobal pred8x8_horizontal_10_sse2, 2,3$/;"	l
cglobal	libavcodec/x86/h264_intrapred_10bit.asm	/^cglobal pred8x8_vertical_10_sse2, 2,2$/;"	l
cglobal	libavcodec/x86/h264_weight.asm	/^cglobal h264_biweight_%1x%2_%4, 7, 7, %3$/;"	l
cglobal	libavcodec/x86/h264_weight.asm	/^cglobal h264_biweight_%1x%2_%5, 7, 7, %4$/;"	l
cglobal	libavcodec/x86/h264_weight.asm	/^cglobal h264_biweight_16x%1_mmx2, 7, 7, 0$/;"	l
cglobal	libavcodec/x86/h264_weight.asm	/^cglobal h264_biweight_16x%1_ssse3, 7, 7, 8$/;"	l
cglobal	libavcodec/x86/h264_weight.asm	/^cglobal h264_biweight_8x%1_ssse3, 7, 7, 8$/;"	l
cglobal	libavcodec/x86/h264_weight.asm	/^cglobal h264_weight_%1x%2_%4, 7, 7, %3$/;"	l
cglobal	libavcodec/x86/h264_weight.asm	/^cglobal h264_weight_%1x%2_%5, 5, 5, %4$/;"	l
cglobal	libavcodec/x86/h264_weight.asm	/^cglobal h264_weight_16x%1_mmx2, 5, 5, 0$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_h_loop_filter4_%1, 3,5,0$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_h_loop_filter4_ssse3, 3,5,0$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_h_loop_filter8_%1, 3,5,0$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_h_loop_filter8_sse2, 3,6,8$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_h_loop_filter8_sse4, 3,5,8$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_h_loop_filter8_ssse3, 3,6,8$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_h_loop_filter_internal_%1$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_v_loop_filter4_%1, 3,5,0$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_v_loop_filter4_ssse3, 3,5,0$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_v_loop_filter8_%1, 3,5,0$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_v_loop_filter8_sse2, 3,5,8$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_v_loop_filter8_ssse3, 3,5,8$/;"	l
cglobal	libavcodec/x86/vc1dsp_yasm.asm	/^cglobal vc1_v_loop_filter_internal_%1$/;"	l
cglobal	libavcodec/x86/vp3dsp.asm	/^cglobal vp3_h_loop_filter_mmx2, 3, 4$/;"	l
cglobal	libavcodec/x86/vp3dsp.asm	/^cglobal vp3_idct_%1, 1, 1, %2$/;"	l
cglobal	libavcodec/x86/vp3dsp.asm	/^cglobal vp3_idct_add_%1, 3, %3, %2$/;"	l
cglobal	libavcodec/x86/vp3dsp.asm	/^cglobal vp3_idct_dc_add_mmx2, 3, 4$/;"	l
cglobal	libavcodec/x86/vp3dsp.asm	/^cglobal vp3_idct_put_%1, 3, %3, %2$/;"	l
cglobal	libavcodec/x86/vp3dsp.asm	/^cglobal vp3_v_loop_filter_mmx2, 3, 4$/;"	l
cglobal	libavcodec/x86/vp56dsp.asm	/^cglobal vp6_filter_diag4_%1, 5, 7, %2$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_bilinear%1_h_ssse3, 7,7$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_bilinear%1_v_ssse3, 7,7$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_bilinear%2_h_%1, 7,7,%3$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_bilinear%2_v_%1, 7,7,%3$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_epel%1_h4_ssse3, 6, 6, %3$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_epel%1_h6_ssse3, 6, 6, %2$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_epel%1_v4_ssse3, 7, 7, %2$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_epel%1_v6_ssse3, 7, 7, %2$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_epel%2_v4_%1, 7, 7, %3$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_epel%2_v6_%1, 7, 7, %3$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_epel4_h4_mmxext, 6, 6$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_epel4_h6_mmxext, 6, 6$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_epel8_h4_sse2, 6, 6, 10$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_epel8_h6_sse2, 6, 6, 14$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_pixels16_mmx, 5,5$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_pixels16_sse, 5,5,2$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal put_vp8_pixels8_mmx, 5,5$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal vp8_%2_loop_filter16y_inner_%1, 5, %3, %5$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal vp8_%2_loop_filter16y_mbedge_%1, 5, %3, %5$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal vp8_%2_loop_filter8uv_inner_%1, 6, %3, %5$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal vp8_%2_loop_filter8uv_mbedge_%1, 6, %3, %5$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal vp8_%2_loop_filter_simple_%1, 3, %3, %4$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal vp8_idct_add_%1, 3, 3$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal vp8_idct_dc_add4uv_mmx, 3, 3$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal vp8_idct_dc_add4y_mmx, 3, 3$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal vp8_idct_dc_add4y_sse2, 3, 3, 6$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal vp8_idct_dc_add_mmx, 3, 3$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal vp8_idct_dc_add_sse4, 3, 3, 6$/;"	l
cglobal	libavcodec/x86/vp8dsp.asm	/^cglobal vp8_luma_dc_wht_%1, 2,3$/;"	l
ch	libavcodec/aac.h	/^    SingleChannelElement ch[2];$/;"	m	struct:__anon245
ch	libavcodec/aacpsy.c	/^    AacPsyChannel *ch;$/;"	m	struct:AacPsyContext	file:
ch	libavcodec/wavpack.c	/^    WvChannel ch[2];$/;"	m	struct:WavpackFrameContext	file:
ch	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long w, h, cw, ch, stride, chroma_stride, nplanes;$/;"	m	struct:vf_priv_s	file:
ch_assign	libavcodec/mlpdec.c	/^    uint8_t     ch_assign[MAX_CHANNELS];$/;"	m	struct:SubStream	file:
ch_ctx	libavcodec/tta.c	/^    TTAChannel *ch_ctx;$/;"	m	struct:TTAContext	file:
ch_idx	libavcodec/cook.c	/^    int                 ch_idx;$/;"	m	struct:__anon230	file:
ch_mode	libavcodec/flac.h	/^    int ch_mode;            \/**< channel decorrelation mode              *\/$/;"	m	struct:FLACFrameInfo
ch_mode	libavcodec/flacdec.c	/^    int ch_mode;                            \/\/\/< channel decorrelation type in the current frame$/;"	m	struct:FLACContext	file:
ch_mode	libavcodec/flacenc.c	/^    int ch_mode;$/;"	m	struct:FlacFrame	file:
ch_offset	libavcodec/wavpack.c	/^    int ch_offset;$/;"	m	struct:WavpackContext	file:
ch_select	libavcodec/aac.h	/^    int ch_select[8];      \/**< [0] shared list of gains; [1] list of gains for right channel;$/;"	m	struct:__anon243
chan	libavformat/wv.c	/^    int rate, chan, bpp;$/;"	m	struct:__anon327	file:
chan_bitrate	libavcodec/aacpsy.c	/^    int chan_bitrate;     \/\/\/< bitrate per channel$/;"	m	struct:AacPsyContext	file:
chan_config	libavcodec/aacadtsdec.h	/^    uint8_t  chan_config;$/;"	m	struct:__anon121
chan_config	libavcodec/alsdec.c	/^    int chan_config;          \/\/\/< indicates that a chan_config_info field is present$/;"	m	struct:__anon150	file:
chan_config	libavcodec/mpeg4audio.h	/^    int chan_config;$/;"	m	struct:__anon208
chan_config_info	libavcodec/alsdec.c	/^    int chan_config_info;     \/\/\/< mapping of channels to loudspeaker locations. Unused until setting channel configuration is implemented.$/;"	m	struct:__anon150	file:
chan_data	libavcodec/alsdec.c	/^    ALSChannelData **chan_data;     \/\/\/< channel data for multi-channel correlation$/;"	m	struct:__anon152	file:
chan_data_buffer	libavcodec/alsdec.c	/^    ALSChannelData *chan_data_buffer; \/\/\/< contains channel data for all channels$/;"	m	struct:__anon152	file:
chan_offset	libavcodec/mpegaudiodec.c	/^static const uint8_t chan_offset[8][5] = {$/;"	v	file:
chan_pos	libavcodec/alsdec.c	/^    int *chan_pos;            \/\/\/< original channel positions$/;"	m	struct:__anon150	file:
chan_sort	libavcodec/alsdec.c	/^    int chan_sort;            \/\/\/< channel rearrangement: 1 = on, 0 = off$/;"	m	struct:__anon150	file:
changes_map	libavcodec/motionpixels.c	/^    uint8_t *changes_map;$/;"	m	struct:MotionPixelsContext	file:
channel	libavcodec/qdm2.c	/^    uint8_t channel;$/;"	m	struct:__anon198	file:
channel	libavcodec/wmaprodec.c	/^    WMAProChannelCtx channel[WMAPRO_MAX_CHANNELS];  \/\/\/< per channel data$/;"	m	struct:WMAProDecodeCtx	file:
channel	libavdevice/dv1394.c	/^    int channel;$/;"	m	struct:dv1394_data	file:
channel	libavdevice/dv1394.h	/^        unsigned int channel;$/;"	m	struct:dv1394_init
channel	libavdevice/v4l2.c	/^    int channel;$/;"	m	struct:video_data	file:
channel	libavformat/avformat.h	/^    attribute_deprecated int channel; \/**< Used to select DV channel. *\/$/;"	m	struct:AVFormatParameters
channelWeighting	libavcodec/atrac3.c	/^static void channelWeighting (float *su1, float *su2, int *p3)$/;"	f	file:
channel_coded	libavcodec/wma.h	/^    uint8_t channel_coded[MAX_CHANNELS];    \/\/\/< true if channel is coded$/;"	m	struct:WMACodecContext
channel_conf	libavformat/adts.h	/^    int channel_conf;$/;"	m	struct:__anon431
channel_coupling	libavcodec/ac3.h	/^    int channel_coupling;$/;"	m	struct:AC3EncOptions
channel_data	libavcodec/wmaprodec.c	/^    float*  channel_data[WMAPRO_MAX_CHANNELS];                \/\/\/< transformation coefficients$/;"	m	struct:__anon83	file:
channel_decorrelation	libavcodec/flacenc.c	/^static void channel_decorrelation(FlacEncodeContext *s)$/;"	f	file:
channel_floors	libavcodec/vorbisdec.c	/^    float        *channel_floors;$/;"	m	struct:vorbis_context_s	file:
channel_id	libavformat/rtmppkt.h	/^    int            channel_id; \/\/\/< RTMP channel ID (nothing to do with audio\/video channels though)$/;"	m	struct:RTMPPacket
channel_in_cpl	libavcodec/ac3dec.h	/^    int channel_in_cpl[AC3_MAX_CHANNELS];   \/\/\/< channel in coupling                    (chincpl)$/;"	m	struct:__anon88
channel_in_cpl	libavcodec/ac3enc.h	/^    uint8_t  channel_in_cpl[AC3_MAX_CHANNELS];  \/\/\/< channel in coupling                (chincpl)$/;"	m	struct:AC3Block
channel_indexes_for_cur_subframe	libavcodec/wmaprodec.c	/^    int8_t           channel_indexes_for_cur_subframe[WMAPRO_MAX_CHANNELS];$/;"	m	struct:WMAProDecodeCtx	file:
channel_layout	ffmpeg.c	/^static int64_t channel_layout = 0;$/;"	v	file:
channel_layout	ffmpeg/ffmpeg.c	/^static int64_t channel_layout = 0;$/;"	v	file:
channel_layout	libavcodec/aac_ac3_parser.h	/^    int64_t channel_layout;$/;"	m	struct:AACAC3ParseContext
channel_layout	libavcodec/ac3.h	/^    int64_t channel_layout;$/;"	m	struct:__anon170
channel_layout	libavcodec/ac3dec.h	/^    int channel_layout;                     \/\/\/< channel layout$/;"	m	struct:__anon88
channel_layout	libavcodec/avcodec.h	/^    int64_t channel_layout;$/;"	m	struct:AVCodecContext
channel_layout	libavfilter/asrc_anullsrc.c	/^    int64_t channel_layout;$/;"	m	struct:__anon41	file:
channel_layout	libavfilter/avfilter.h	/^    int64_t channel_layout;     \/\/\/< channel layout of audio buffer$/;"	m	struct:AVFilterBufferRefAudioProps
channel_layout	libavfilter/avfilter.h	/^    int64_t channel_layout;     \/\/\/< channel layout of current buffer (see libavutil\/audioconvert.h)$/;"	m	struct:AVFilterLink
channel_layout	libavformat/isom.c	/^    int64_t  channel_layout;$/;"	m	struct:MovChannelLayout	file:
channel_layout_map	libavutil/audioconvert.c	/^} channel_layout_map[] = {$/;"	v	typeref:struct:__anon302	file:
channel_layouts	libavcodec/avcodec.h	/^    const int64_t *channel_layouts;         \/\/\/< array of support channel layouts, or NULL if unknown. array is terminated by 0$/;"	m	struct:AVCodec
channel_map	libavcodec/ac3.h	/^    uint16_t channel_map;$/;"	m	struct:__anon170
channel_map	libavcodec/ac3dec.h	/^    int channel_map;                        \/\/\/< custom channel map$/;"	m	struct:__anon88
channel_map	libavcodec/ac3enc.h	/^    const uint8_t *channel_map;             \/\/\/< channel map used to reorder channels$/;"	m	struct:AC3EncodeContext
channel_maps	libavcodec/aacenc.c	/^static const uint8_t channel_maps[][AAC_MAX_CHANNELS] = {$/;"	v	file:
channel_maps	libavcodec/libfaac.c	/^static const int channel_maps[][6] = {$/;"	v	file:
channel_mask	libavcodec/cook.c	/^    unsigned int        channel_mask;$/;"	m	struct:__anon230	file:
channel_mode	libavcodec/ac3.h	/^    uint8_t channel_mode;$/;"	m	struct:__anon170
channel_mode	libavcodec/ac3dec.h	/^    int channel_mode;                       \/\/\/< channel mode                           (acmod)$/;"	m	struct:__anon88
channel_mode	libavcodec/ac3enc.h	/^    int channel_mode;                       \/\/\/< channel mode                           (acmod)$/;"	m	struct:AC3EncodeContext
channel_names	libavutil/audioconvert.c	/^static const char * const channel_names[] = {$/;"	v	file:
channel_order_tab	libavcodec/dca.c	/^    const int8_t* channel_order_tab;                             \/\/\/< channel reordering table, lfe and non lfe$/;"	m	struct:__anon93	file:
channel_order_tab	libavcodec/dcaenc.c	/^    const int8_t *channel_order_tab;    \/\/\/< channel reordering table, lfe and non lfe$/;"	m	struct:__anon231	file:
channel_params	libavcodec/mlpdec.c	/^    ChannelParams channel_params[MAX_CHANNELS];$/;"	m	struct:SubStream	file:
channel_residues	libavcodec/vorbisdec.c	/^    float        *channel_residues;$/;"	m	struct:vorbis_context_s	file:
channel_unit	libavcodec/atrac3.c	/^} channel_unit;$/;"	t	typeref:struct:__anon130	file:
channel_uses_aht	libavcodec/ac3dec.h	/^    int channel_uses_aht[AC3_MAX_CHANNELS];                         \/\/\/< channel AHT in use (chahtinu)$/;"	m	struct:__anon88
channel_uses_spx	libavcodec/ac3dec.h	/^    uint8_t channel_uses_spx[AC3_MAX_CHANNELS]; \/\/\/< channel uses spectral extension        (chinspx)$/;"	m	struct:__anon88
channels	libavcodec/aac_ac3_parser.h	/^    int channels;$/;"	m	struct:AACAC3ParseContext
channels	libavcodec/ac3.h	/^    uint8_t channels;$/;"	m	struct:__anon170
channels	libavcodec/ac3dec.h	/^    int channels;                               \/\/\/< number of total channels$/;"	m	struct:__anon88
channels	libavcodec/ac3enc.h	/^    int channels;                           \/\/\/< total number of channels               (nchans)$/;"	m	struct:AC3EncodeContext
channels	libavcodec/apedec.c	/^    int channels;$/;"	m	struct:APEContext	file:
channels	libavcodec/atrac1.c	/^    int                 channels;$/;"	m	struct:__anon120	file:
channels	libavcodec/atrac3.c	/^    int                 channels;$/;"	m	struct:__anon131	file:
channels	libavcodec/avcodec.h	/^    int channels;    \/\/\/< number of audio channels$/;"	m	struct:AVCodecContext
channels	libavcodec/binkaudio.c	/^    int channels;$/;"	m	struct:__anon136	file:
channels	libavcodec/dpcm.c	/^    int channels;$/;"	m	struct:DPCMContext	file:
channels	libavcodec/flacenc.c	/^    int channels;$/;"	m	struct:FlacEncodeContext	file:
channels	libavcodec/mpeg4audio.h	/^    int channels;$/;"	m	struct:__anon208
channels	libavcodec/png.h	/^    int channels;$/;"	m	struct:PNGDecContext
channels	libavcodec/qdm2.c	/^    int channels;            \/\/\/< number of channels$/;"	m	struct:__anon200	file:
channels	libavcodec/shorten.c	/^    int channels;$/;"	m	struct:ShortenContext	file:
channels	libavcodec/sonic.c	/^    int channels, samplerate, block_align, frame_size;$/;"	m	struct:SonicContext	file:
channels	libavcodec/tta.c	/^    int flags, channels, bps, is_float, data_length;$/;"	m	struct:TTAContext	file:
channels	libavcodec/vorbisenc.c	/^    int channels;$/;"	m	struct:__anon194	file:
channels	libavdevice/alsa-audio.h	/^    int channels;    \/\/\/< number of channels set by user$/;"	m	struct:__anon313
channels	libavdevice/oss_audio.c	/^    int channels;$/;"	m	struct:__anon311	file:
channels	libavdevice/sndio_common.h	/^    int channels;$/;"	m	struct:__anon318
channels	libavformat/4xm.c	/^    int channels;$/;"	m	struct:AudioTrack	file:
channels	libavformat/ape.c	/^    uint16_t channels;$/;"	m	struct:__anon335	file:
channels	libavformat/avformat.h	/^    attribute_deprecated int channels;$/;"	m	struct:AVFormatParameters
channels	libavformat/eacdata.c	/^  unsigned int channels;$/;"	m	struct:__anon450	file:
channels	libavformat/lxfdec.c	/^    int channels;                       \/\/\/< number of audio channels. zero means no audio$/;"	m	struct:__anon377	file:
channels	libavformat/matroskadec.c	/^    uint64_t channels;$/;"	m	struct:__anon358	file:
channels	libavformat/mxfdec.c	/^    int channels;$/;"	m	struct:__anon443	file:
channels	libavformat/psxstr.c	/^    StrChannel channels[32];$/;"	m	struct:StrDemuxContext	file:
channels	libavformat/rawdec.h	/^    int channels;$/;"	m	struct:RawAudioDemuxerContext
channels	libavformat/rtpdec_amr.c	/^    int channels;$/;"	m	struct:PayloadContext	file:
channels_for_cur_subframe	libavcodec/wmaprodec.c	/^    int8_t           channels_for_cur_subframe;     \/\/\/< number of channels that contain the subframe$/;"	m	struct:WMAProDecodeCtx	file:
channels_mlp	libavcodec/mlp_parser.h	/^    int channels_mlp;           \/\/\/< Channel arrangement for MLP streams$/;"	m	struct:MLPHeaderInfo
channels_thd_stream1	libavcodec/mlp_parser.h	/^    int channels_thd_stream1;   \/\/\/< Channel arrangement for substream 1 of TrueHD streams (5.1)$/;"	m	struct:MLPHeaderInfo
channels_thd_stream2	libavcodec/mlp_parser.h	/^    int channels_thd_stream2;   \/\/\/< Channel arrangement for substream 2 of TrueHD streams (7.1)$/;"	m	struct:MLPHeaderInfo
chapter	libavformat/matroskadec.c	/^    AVChapter *chapter;$/;"	m	struct:__anon363	file:
chapter	libavformat/nut.h	/^    ChapterContext *chapter;$/;"	m	struct:__anon494
chapter_maps	ffmpeg.c	/^static AVChapterMap *chapter_maps = NULL;$/;"	v	file:
chapter_maps	ffmpeg/ffmpeg.c	/^static AVChapterMap *chapter_maps = NULL;$/;"	v	file:
chapter_track	libavformat/isom.h	/^    int chapter_track;$/;"	m	struct:MOVContext
chapter_track	libavformat/movenc.h	/^    int     chapter_track; \/\/\/< qt chapter track number$/;"	m	struct:MOVMuxContext
chapters	libavformat/avformat.h	/^    AVChapter **chapters;$/;"	m	struct:AVFormatContext
chapters	libavformat/matroskadec.c	/^    EbmlList chapters;$/;"	m	struct:__anon371	file:
chapteruid	libavformat/matroskadec.c	/^    uint64_t chapteruid;$/;"	m	struct:__anon367	file:
chars_per_frame	libavformat/tty.c	/^    int chars_per_frame;$/;"	m	struct:__anon485	file:
chd	libavcodec/mace.c	/^    ChannelData chd[2];$/;"	m	struct:MACEContext	file:
che	libavcodec/aac.h	/^    ChannelElement          *che[4][MAX_ELEM_ID];$/;"	m	struct:__anon246
che_configure	libavcodec/aacdec.c	/^static av_cold int che_configure(AACContext *ac,$/;"	f	file:
che_drc	libavcodec/aac.h	/^    DynamicRangeControl che_drc;$/;"	m	struct:__anon246
che_pos	libavcodec/aac.h	/^    enum ChannelPosition che_pos[4][MAX_ELEM_ID]; \/**< channel element channel mapping with the$/;"	m	struct:__anon246	typeref:enum:__anon246::ChannelPosition
check	libavcodec/motion_est_template.c	546;"	d	file:
check	libavutil/tree.c	/^static int check(AVTreeNode *t){$/;"	f	file:
check_4block_inter	libavcodec/snow.c	/^static av_always_inline int check_4block_inter(SnowContext *s, int mb_x, int mb_y, int p0, int p1, int ref, int *best_rd){$/;"	f	file:
check_as	configure	/^check_as(){$/;"	f
check_asm	configure	/^check_asm(){$/;"	f
check_bidir_mv	libavcodec/motion_est.c	/^static inline int check_bidir_mv(MpegEncContext * s,$/;"	f	file:
check_bits_for_superframe	libavcodec/wmavoice.c	/^static int check_bits_for_superframe(GetBitContext *orig_gb,$/;"	f	file:
check_block	libavcodec/snow.c	/^static av_always_inline int check_block(SnowContext *s, int mb_x, int mb_y, int p[3], int intra, const uint8_t *obmc_edged, int *best_rd){$/;"	f	file:
check_block_inter	libavcodec/snow.c	/^static av_always_inline int check_block_inter(SnowContext *s, int mb_x, int mb_y, int p0, int p1, const uint8_t *obmc_edged, int *best_rd){$/;"	f	file:
check_cc	configure	/^check_cc(){$/;"	f
check_cflags	configure	/^check_cflags(){$/;"	f
check_checksum	libavformat/lxfdec.c	/^static int check_checksum(const uint8_t *header)$/;"	f	file:
check_cmd	configure	/^check_cmd(){$/;"	f
check_cpp	configure	/^check_cpp(){$/;"	f
check_cpp_condition	configure	/^check_cpp_condition(){$/;"	f
check_cppflags	configure	/^check_cppflags(){$/;"	f
check_crc	libavformat/mpegts.c	/^    unsigned int check_crc:1;$/;"	m	struct:MpegTSSectionFilter	file:
check_dc_pred8x8_mode	libavcodec/vp8.c	/^int check_dc_pred8x8_mode(int mode, int mb_x, int mb_y)$/;"	f	file:
check_dcbzl_effect	libavcodec/ppc/dsputil_ppc.c	/^static long check_dcbzl_effect(void)$/;"	f	file:
check_default_settings	libavcodec/libx264.c	/^static void check_default_settings(AVCodecContext *avctx)$/;"	f	file:
check_deps	configure	/^check_deps(){$/;"	f
check_diff	libavcodec/fft-test.c	/^static int check_diff(FFTSample *tab1, FFTSample *tab2, int n, double scale)$/;"	f	file:
check_events	libavfilter/libmpcodecs/libvo/video_out.h	/^    void (*check_events)(void);$/;"	m	struct:vo_functions_s
check_exec	configure	/^check_exec(){$/;"	f
check_exec_crash	configure	/^check_exec_crash(){$/;"	f
check_field_queue	libavfilter/libmpcodecs/pullup.c	/^static void check_field_queue(struct pullup_context *c)$/;"	f	file:
check_for_slice	libavcodec/cavsdec.c	/^static inline int check_for_slice(AVSContext *h) {$/;"	f	file:
check_func	configure	/^check_func(){$/;"	f
check_func_headers	configure	/^check_func_headers(){$/;"	f
check_header	configure	/^check_header(){$/;"	f
check_header_mismatch	libavcodec/flac_parser.c	/^static int check_header_mismatch(FLACParseContext  *fpc,$/;"	f	file:
check_host_cc	configure	/^check_host_cc(){$/;"	f
check_host_cflags	configure	/^check_host_cflags(){$/;"	f
check_image_attributes	libavcodec/libopenjpeg.c	/^static int check_image_attributes(opj_image_t *image)$/;"	f	file:
check_image_pointers	libswscale/swscale_unscaled.c	/^static int check_image_pointers(uint8_t *data[4], enum PixelFormat pix_fmt,$/;"	f	file:
check_input_motion	libavcodec/motion_est.c	/^static inline int check_input_motion(MpegEncContext * s, int mb_x, int mb_y, int p_type){$/;"	f	file:
check_inputs	ffmpeg.c	/^static void check_inputs(int *has_video_ptr,$/;"	f	file:
check_inputs	ffmpeg/ffmpeg.c	/^static void check_inputs(int *has_video_ptr,$/;"	f	file:
check_intra_pred4x4_mode_emuedge	libavcodec/vp8.c	/^int check_intra_pred4x4_mode_emuedge(int mode, int mb_x, int mb_y, int *copy_buf)$/;"	f	file:
check_intra_pred8x8_mode	libavcodec/vp8.c	/^int check_intra_pred8x8_mode(int mode, int mb_x, int mb_y)$/;"	f	file:
check_intra_pred8x8_mode_emuedge	libavcodec/vp8.c	/^int check_intra_pred8x8_mode_emuedge(int mode, int mb_x, int mb_y)$/;"	f	file:
check_intra_pred_mode	libavcodec/h264.c	/^static int check_intra_pred_mode(H264Context *h, int mode, int is_chroma){$/;"	f	file:
check_ld	configure	/^check_ld(){$/;"	f
check_ldflags	configure	/^check_ldflags(){$/;"	f
check_lib	configure	/^check_lib(){$/;"	f
check_lib2	configure	/^check_lib2(){$/;"	f
check_line	libavcodec/vb.c	/^static inline int check_line(uint8_t *buf, uint8_t *start, uint8_t *end)$/;"	f	file:
check_marker	libavcodec/get_bits.h	/^static inline int check_marker(GetBitContext *s, const char *msg)$/;"	f
check_mathfunc	configure	/^check_mathfunc(){$/;"	f
check_mv	libavcodec/h264_loopfilter.c	/^static int check_mv(H264Context *h, long b_idx, long bn_idx, int mvy_limit){$/;"	f	file:
check_n_master	libavcodec/aacsbr.c	/^static int check_n_master(AVCodecContext *avctx, int n_master, int bs_xover_band)$/;"	f	file:
check_native	configure	/^            check_native(){$/;"	f
check_pes	libavformat/mpeg.c	/^static int check_pes(uint8_t *p, uint8_t *end){$/;"	f	file:
check_pixel	libavcodec/vb.c	/^static inline int check_pixel(uint8_t *buf, uint8_t *start, uint8_t *end)$/;"	f	file:
check_pkg_config	configure	/^check_pkg_config(){$/;"	f
check_size	libavcodec/tiffenc.c	/^inline static int check_size(TiffEncoderContext * s, uint64_t need)$/;"	f	file:
check_slice_end	libavcodec/rv34.c	/^static int check_slice_end(RV34DecContext *r, MpegEncContext *s)$/;"	f	file:
check_specific_config	libavcodec/alsdec.c	/^static int check_specific_config(ALSDecContext *ctx)$/;"	f	file:
check_struct	configure	/^check_struct(){$/;"	f
check_tm_pred4x4_mode	libavcodec/vp8.c	/^int check_tm_pred4x4_mode(int mode, int mb_x, int mb_y)$/;"	f	file:
check_tm_pred8x8_mode	libavcodec/vp8.c	/^int check_tm_pred8x8_mode(int mode, int mb_x, int mb_y)$/;"	f	file:
check_type	configure	/^check_type(){$/;"	f
check_values	libavfilter/libmpcodecs/vf_eq2.c	/^void check_values (eq2_param_t *par)$/;"	f	file:
check_yasm	configure	/^check_yasm(){$/;"	f
checked	libavcodec/motion_est.c	/^    int checked;$/;"	m	struct:Minima	file:
checked	libavutil/cpu.c	/^static int flags, checked;$/;"	v	file:
checkline	libavfilter/libmpcodecs/vf_cropdetect.c	/^static int checkline(unsigned char* src,int stride,int len,int bpp){$/;"	f	file:
checkline	libavfilter/vf_cropdetect.c	/^static int checkline(void *ctx, const unsigned char *src, int stride, int len, int bpp)$/;"	f	file:
checkout	tests/fate.sh	/^checkout(){$/;"	f
checksum	libavcodec/indeo5.c	/^    uint16_t        checksum;        \/\/\/< frame checksum$/;"	m	struct:__anon203	file:
checksum	libavcodec/ivi_common.h	/^    int32_t         checksum;       \/\/\/< for debug purposes$/;"	m	struct:__anon107
checksum	libavcodec/truemotion1.c	/^    uint16_t checksum;$/;"	m	struct:frame_header	file:
checksum	libavformat/avio.h	/^    unsigned long checksum;$/;"	m	struct:__anon396
checksum	libavutil/adler32.c	/^volatile int checksum;$/;"	v
checksum_plane	libavfilter/libmpcodecs/vf_divtc.c	/^static unsigned int checksum_plane(unsigned char *p, unsigned char *z,$/;"	f	file:
checksum_present	libavcodec/ivi_common.h	/^    int             checksum_present;$/;"	m	struct:__anon107
checksum_ptr	libavformat/avio.h	/^    unsigned char *checksum_ptr;$/;"	m	struct:__anon396
checksum_size	libavcodec/qdm2.c	/^    int checksum_size;       \/\/\/< size of data block, used also for checksum$/;"	m	struct:__anon200	file:
checksum_table	libavcodec/svq1dec.c	/^static const uint16_t checksum_table[256] = {$/;"	v	file:
chflag	libavfilter/libmpcodecs/vf_filmdint.c	/^    char chflag;$/;"	m	struct:vf_priv_s	file:
chgroup	libavcodec/wmaprodec.c	/^    WMAProChannelGrp chgroup[WMAPRO_MAX_CHANNELS];  \/\/\/< channel group information$/;"	m	struct:WMAProDecodeCtx	file:
child	libavutil/tree.c	/^    struct AVTreeNode *child[2];$/;"	m	struct:AVTreeNode	typeref:struct:AVTreeNode::AVTreeNode	file:
child_argv	ffserver.c	/^    char **child_argv;$/;"	m	struct:FFStream	file:
children	libavcodec/idcinvideo.c	/^  int children[2];$/;"	m	struct:__anon65	file:
chmask	libavformat/wv.c	/^    uint32_t chmask;$/;"	m	struct:__anon327	file:
chomp3	libavcodec/mace.c	/^static void chomp3(ChannelData *chd, int16_t *output, uint8_t val,$/;"	f	file:
chomp6	libavcodec/mace.c	/^static void chomp6(ChannelData *chd, int16_t *output, uint8_t val,$/;"	f	file:
chomp_filter	libavcodec/chomp_bsf.c	/^static int chomp_filter(AVBitStreamFilterContext *bsfc,$/;"	f	file:
choose_pixel_fmt	ffmpeg.c	/^static void choose_pixel_fmt(AVStream *st, AVCodec *codec)$/;"	f	file:
choose_pixel_fmt	ffmpeg/ffmpeg.c	/^static void choose_pixel_fmt(AVStream *st, AVCodec *codec)$/;"	f	file:
choose_qop	libavformat/httpauth.c	/^static void choose_qop(char *qop, int size)$/;"	f	file:
choose_sample_fmt	ffmpeg.c	/^static void choose_sample_fmt(AVStream *st, AVCodec *codec)$/;"	f	file:
choose_sample_fmt	ffmpeg/ffmpeg.c	/^static void choose_sample_fmt(AVStream *st, AVCodec *codec)$/;"	f	file:
choose_sample_rate	ffmpeg.c	/^static void choose_sample_rate(AVStream *st, AVCodec *codec)$/;"	f	file:
choose_sample_rate	ffmpeg/ffmpeg.c	/^static void choose_sample_rate(AVStream *st, AVCodec *codec)$/;"	f	file:
choose_vlc_set	libavcodec/rv34.c	/^static inline RV34VLC* choose_vlc_set(int quant, int mod, int type)$/;"	f	file:
chrBufIndex	libswscale/swscale_internal.h	/^    int       chrBufIndex;        \/\/\/< Index in ring buffer of the last scaled horizontal chroma     line from source.$/;"	m	struct:SwsContext
chrConvertRange	libswscale/swscale_internal.h	/^    void (*chrConvertRange)(int16_t *dst1, int16_t *dst2, int width); \/\/\/< Color range conversion function for chroma planes if needed.$/;"	m	struct:SwsContext
chrDstH	libswscale/swscale_internal.h	/^    int chrDstH;                  \/\/\/< Height of destination chroma     planes.$/;"	m	struct:SwsContext
chrDstHSubSample	libswscale/swscale_internal.h	/^    int chrDstHSubSample;         \/\/\/< Binary logarithm of horizontal subsampling factor between luma\/alpha and chroma planes in destination image.$/;"	m	struct:SwsContext
chrDstVSubSample	libswscale/swscale_internal.h	/^    int chrDstVSubSample;         \/\/\/< Binary logarithm of vertical   subsampling factor between luma\/alpha and chroma planes in destination image.$/;"	m	struct:SwsContext
chrDstW	libswscale/swscale_internal.h	/^    int chrDstW;                  \/\/\/< Width  of destination chroma     planes.$/;"	m	struct:SwsContext
chrH	libswscale/swscale.h	/^    SwsVector *chrH;$/;"	m	struct:__anon287
chrMmx2FilterCode	libswscale/swscale_internal.h	/^    uint8_t *chrMmx2FilterCode;   \/\/\/< Runtime-generated MMX2 horizontal fast bilinear scaler code for chroma     planes.$/;"	m	struct:SwsContext
chrMmx2FilterCodeSize	libswscale/swscale_internal.h	/^    int chrMmx2FilterCodeSize;    \/\/\/< Runtime-generated MMX2 horizontal fast bilinear scaler code size for chroma     planes.$/;"	m	struct:SwsContext
chrMmxFilter	libswscale/swscale_internal.h	/^    int32_t  chrMmxFilter[4*MAX_FILTER_SIZE];$/;"	m	struct:SwsContext
chrSrcH	libswscale/swscale_internal.h	/^    int chrSrcH;                  \/\/\/< Height of source      chroma     planes.$/;"	m	struct:SwsContext
chrSrcHSubSample	libswscale/swscale_internal.h	/^    int chrSrcHSubSample;         \/\/\/< Binary logarithm of horizontal subsampling factor between luma\/alpha and chroma planes in source      image.$/;"	m	struct:SwsContext
chrSrcVSubSample	libswscale/swscale_internal.h	/^    int chrSrcVSubSample;         \/\/\/< Binary logarithm of vertical   subsampling factor between luma\/alpha and chroma planes in source      image.$/;"	m	struct:SwsContext
chrSrcW	libswscale/swscale_internal.h	/^    int chrSrcW;                  \/\/\/< Width  of source      chroma     planes.$/;"	m	struct:SwsContext
chrToYV12	libswscale/swscale_internal.h	/^    void (*chrToYV12)(uint8_t *dstU, uint8_t *dstV,$/;"	m	struct:SwsContext
chrUPixBuf	libswscale/swscale_internal.h	/^    int16_t **chrUPixBuf;         \/\/\/< Ring buffer for scaled horizontal chroma plane lines to be fed to the vertical scaler.$/;"	m	struct:SwsContext
chrV	libswscale/swscale.h	/^    SwsVector *chrV;$/;"	m	struct:__anon287
chrVPixBuf	libswscale/swscale_internal.h	/^    int16_t **chrVPixBuf;         \/\/\/< Ring buffer for scaled horizontal chroma plane lines to be fed to the vertical scaler.$/;"	m	struct:SwsContext
chrXInc	libswscale/swscale_internal.h	/^    int lumXInc, chrXInc;$/;"	m	struct:SwsContext
chrYInc	libswscale/swscale_internal.h	/^    int lumYInc, chrYInc;$/;"	m	struct:SwsContext
chromDefault	libpostproc/postprocess_internal.h	/^    int chromDefault;       \/\/\/< is chrominance filtering on by default if this filter is manually activated$/;"	m	struct:PPFilter
chromMode	libpostproc/postprocess_internal.h	/^    int chromMode;                  \/\/\/< acivates filters for chrominance$/;"	m	struct:PPMode
chroma	libavfilter/libmpcodecs/vf_sab.c	/^    FilterParam chroma;$/;"	m	struct:vf_priv_s	file:
chroma	libavfilter/libmpcodecs/vf_smartblur.c	/^    FilterParam chroma;$/;"	m	struct:vf_priv_s	file:
chroma	libavfilter/vf_unsharp.c	/^    FilterParam chroma; \/\/\/< chroma parameters (width, height, amount)$/;"	m	struct:__anon50	file:
chromaParam	libavfilter/libmpcodecs/vf_boxblur.c	/^        FilterParam chromaParam;$/;"	m	struct:vf_priv_s	file:
chromaParam	libavfilter/libmpcodecs/vf_il.c	/^    FilterParam chromaParam;$/;"	m	struct:vf_priv_s	file:
chromaParam	libavfilter/libmpcodecs/vf_noise.c	/^        FilterParam chromaParam;$/;"	m	struct:vf_priv_s	file:
chromaParam	libavfilter/libmpcodecs/vf_unsharp.c	/^    FilterParam chromaParam;$/;"	m	struct:vf_priv_s	file:
chroma_420_type	libavcodec/mpegvideo.h	/^    int chroma_420_type;$/;"	m	struct:MpegEncContext
chroma_4mv_motion	libavcodec/mpegvideo_common.h	/^static inline void chroma_4mv_motion(MpegEncContext *s,$/;"	f
chroma_4mv_motion_lowres	libavcodec/mpegvideo.c	/^static inline void chroma_4mv_motion_lowres(MpegEncContext *s,$/;"	f	file:
chroma_bands	libavcodec/ivi_common.h	/^    uint8_t     chroma_bands;$/;"	m	struct:__anon109
chroma_coeffs	libavcodec/rv34.c	/^static const int chroma_coeffs[3] = { 0, 3, 5 };$/;"	v	file:
chroma_dc_coeff_token_bits	libavcodec/h264_cavlc.c	/^static const uint8_t chroma_dc_coeff_token_bits[4*5]={$/;"	v	file:
chroma_dc_coeff_token_len	libavcodec/h264_cavlc.c	/^static const uint8_t chroma_dc_coeff_token_len[4*5]={$/;"	v	file:
chroma_dc_coeff_token_vlc	libavcodec/h264_cavlc.c	/^static VLC chroma_dc_coeff_token_vlc;$/;"	v	file:
chroma_dc_coeff_token_vlc_table	libavcodec/h264_cavlc.c	/^static VLC_TYPE chroma_dc_coeff_token_vlc_table[256][2];$/;"	v	file:
chroma_dc_coeff_token_vlc_table_size	libavcodec/h264_cavlc.c	/^static const int chroma_dc_coeff_token_vlc_table_size = 256;$/;"	v	file:
chroma_dc_scan	libavcodec/h264data.h	/^static const uint8_t chroma_dc_scan[4]={$/;"	v
chroma_dc_total_zeros_bits	libavcodec/h264_cavlc.c	/^static const uint8_t chroma_dc_total_zeros_bits[3][4]= {$/;"	v	file:
chroma_dc_total_zeros_len	libavcodec/h264_cavlc.c	/^static const uint8_t chroma_dc_total_zeros_len[3][4]= {$/;"	v	file:
chroma_dc_total_zeros_vlc	libavcodec/h264_cavlc.c	/^static VLC chroma_dc_total_zeros_vlc[3];$/;"	v	file:
chroma_dc_total_zeros_vlc_tables	libavcodec/h264_cavlc.c	/^static VLC_TYPE chroma_dc_total_zeros_vlc_tables[3][8][2];$/;"	v	file:
chroma_dc_total_zeros_vlc_tables_size	libavcodec/h264_cavlc.c	/^static const int chroma_dc_total_zeros_vlc_tables_size = 8;$/;"	v	file:
chroma_dc_vlc_length	libavcodec/mpegvideo.h	/^    uint8_t *chroma_dc_vlc_length;$/;"	m	struct:MpegEncContext
chroma_diff	libavcodec/flashsv2enc.c	/^static inline unsigned int chroma_diff(unsigned int c1, unsigned int c2)$/;"	f	file:
chroma_elim_threshold	libavcodec/avcodec.h	/^    int chroma_elim_threshold;$/;"	m	struct:AVCodecContext
chroma_elim_threshold	libavcodec/mpegvideo.h	/^    int chroma_elim_threshold;$/;"	m	struct:MpegEncContext
chroma_format	libavcodec/dirac.h	/^    uint8_t chroma_format;          \/\/\/< 0: 444  1: 422  2: 420$/;"	m	struct:__anon227
chroma_format	libavcodec/mpegvideo.h	/^    int chroma_format;$/;"	m	struct:MpegEncContext
chroma_format_idc	libavcodec/h264.h	/^    int chroma_format_idc;$/;"	m	struct:SPS
chroma_h	libavfilter/gradfun.h	/^    int chroma_h;  \/\/\/< weight of the chroma planes$/;"	m	struct:__anon17
chroma_h_shift	libavcodec/ffv1.c	/^    int chroma_h_shift, chroma_v_shift;$/;"	m	struct:FFV1Context	file:
chroma_h_shift	libavcodec/snow.c	/^    int chroma_h_shift;$/;"	m	struct:SnowContext	file:
chroma_height	libavcodec/ivi_common.h	/^    uint16_t    chroma_height;$/;"	m	struct:__anon109
chroma_height	libavfilter/libmpcodecs/mp_image.h	/^    int chroma_height;$/;"	m	struct:mp_image
chroma_inter_matrix	libavcodec/mpegvideo.h	/^    uint16_t chroma_inter_matrix[64];$/;"	m	struct:MpegEncContext
chroma_intra_matrix	libavcodec/mpegvideo.h	/^    uint16_t chroma_intra_matrix[64];$/;"	m	struct:MpegEncContext
chroma_log2_weight_denom	libavcodec/h264.h	/^    int chroma_log2_weight_denom;$/;"	m	struct:H264Context
chroma_mc2_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc2_mmx_func avg, h264, mmx2$/;"	l
chroma_mc2_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc2_mmx_func put, h264, mmx2$/;"	l
chroma_mc4_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc4_mmx_func avg, h264, 3dnow$/;"	l
chroma_mc4_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc4_mmx_func avg, h264, mmx2$/;"	l
chroma_mc4_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc4_mmx_func avg, rv40, 3dnow$/;"	l
chroma_mc4_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc4_mmx_func avg, rv40, mmx2$/;"	l
chroma_mc4_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc4_mmx_func put, h264, mmx$/;"	l
chroma_mc4_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc4_mmx_func put, rv40, mmx$/;"	l
chroma_mc4_ssse3_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc4_ssse3_func avg, h264, ssse3$/;"	l
chroma_mc4_ssse3_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc4_ssse3_func put, h264, ssse3$/;"	l
chroma_mc8_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_mmx_func avg, h264, 3dnow_rnd$/;"	l
chroma_mc8_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_mmx_func avg, h264, mmx2_rnd$/;"	l
chroma_mc8_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_mmx_func avg, rv40, 3dnow$/;"	l
chroma_mc8_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_mmx_func avg, rv40, mmx2$/;"	l
chroma_mc8_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_mmx_func avg, vc1,  3dnow_nornd$/;"	l
chroma_mc8_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_mmx_func avg, vc1,  mmx2_nornd$/;"	l
chroma_mc8_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_mmx_func put, h264, mmx_rnd$/;"	l
chroma_mc8_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_mmx_func put, rv40, mmx$/;"	l
chroma_mc8_mmx_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_mmx_func put, vc1,  mmx_nornd$/;"	l
chroma_mc8_ssse3_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_ssse3_func avg, h264, ssse3_rnd$/;"	l
chroma_mc8_ssse3_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_ssse3_func avg, vc1,  ssse3_nornd$/;"	l
chroma_mc8_ssse3_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_ssse3_func put, h264, ssse3_rnd$/;"	l
chroma_mc8_ssse3_func	libavcodec/x86/h264_chromamc.asm	/^chroma_mc8_ssse3_func put, vc1,  ssse3_nornd$/;"	l
chroma_orient	libavcodec/intrax8.h	/^    int chroma_orient;$/;"	m	struct:__anon134
chroma_pred_mode	libavcodec/h264.h	/^    int chroma_pred_mode;$/;"	m	struct:H264Context
chroma_pred_mode	libavcodec/vp8.h	/^    uint8_t chroma_pred_mode;    \/\/\/< 8x8c pred mode of the current macroblock$/;"	m	struct:__anon182
chroma_pred_mode_table	libavcodec/h264.h	/^    uint8_t     *chroma_pred_mode_table;$/;"	m	struct:H264Context
chroma_qmul	libavcodec/vp8.h	/^        int16_t chroma_qmul[2];$/;"	m	struct:__anon182::__anon185
chroma_qp	libavcodec/h264.h	/^    int chroma_qp[2]; \/\/QPc$/;"	m	struct:H264Context
chroma_qp_diff	libavcodec/h264.h	/^    int chroma_qp_diff;$/;"	m	struct:PPS
chroma_qp_index_offset	libavcodec/h264.h	/^    int chroma_qp_index_offset[2];$/;"	m	struct:PPS
chroma_qp_table	libavcodec/h264.h	/^    uint8_t chroma_qp_table[2][QP_MAX_NUM+1];  \/\/\/< pre-scaled (with chroma_qp_index_offset) version of qp_table$/;"	m	struct:PPS
chroma_qscale	libavcodec/mpegvideo.h	/^    int chroma_qscale;          \/\/\/< chroma QP$/;"	m	struct:MpegEncContext
chroma_qscale_table	libavcodec/mpegvideo.h	/^    const uint8_t *chroma_qscale_table;  \/\/\/< qscale -> chroma_qscale (h263)$/;"	m	struct:MpegEncContext
chroma_r	libavfilter/gradfun.h	/^    int chroma_r;  \/\/\/< blur radius for the chroma planes$/;"	m	struct:__anon17
chroma_sample_location	libavcodec/avcodec.h	/^    enum AVChromaLocation chroma_sample_location;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVChromaLocation
chroma_shift	libavcodec/j2kenc.c	/^    int chroma_shift[2];$/;"	m	struct:__anon63	file:
chroma_stride	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long w, h, cw, ch, stride, chroma_stride, nplanes;$/;"	m	struct:vf_priv_s	file:
chroma_swapped	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned swapped, chroma_swapped;$/;"	m	struct:vf_priv_s	file:
chroma_v_shift	libavcodec/ffv1.c	/^    int chroma_h_shift, chroma_v_shift;$/;"	m	struct:FFV1Context	file:
chroma_v_shift	libavcodec/snow.c	/^    int chroma_v_shift;$/;"	m	struct:SnowContext	file:
chroma_vlc	libavcodec/rv34.h	/^    int chroma_vlc;          \/\/\/< which VLC set will be used for decoding of chroma blocks$/;"	m	struct:RV34DecContext
chroma_w	libavfilter/gradfun.h	/^    int chroma_w;  \/\/\/< width of the chroma planes$/;"	m	struct:__anon17
chroma_weight	libavcodec/dnxhddata.h	/^    const uint8_t *luma_weight, *chroma_weight;$/;"	m	struct:__anon281
chroma_weight	libavcodec/h264.h	/^    int chroma_weight[48][2][2][2];$/;"	m	struct:H264Context
chroma_weight_flag	libavcodec/h264.h	/^    int chroma_weight_flag[2]; \/\/\/< 7.4.3.2 chroma_weight_lX_flag$/;"	m	struct:H264Context
chroma_width	libavcodec/ivi_common.h	/^    uint16_t    chroma_width;$/;"	m	struct:__anon109
chroma_width	libavfilter/libmpcodecs/mp_image.h	/^    int chroma_width;$/;"	m	struct:mp_image
chroma_x_shift	libavcodec/mpegvideo.h	/^    int chroma_x_shift;\/\/depend on pix_format, that depend on chroma_format$/;"	m	struct:MpegEncContext
chroma_x_shift	libavcodec/vp3.c	/^    int chroma_x_shift, chroma_y_shift;$/;"	m	struct:Vp3DecodeContext	file:
chroma_x_shift	libavfilter/libmpcodecs/mp_image.h	/^    int chroma_x_shift; \/\/ horizontal$/;"	m	struct:mp_image
chroma_y_shift	libavcodec/mpegvideo.h	/^    int chroma_y_shift;$/;"	m	struct:MpegEncContext
chroma_y_shift	libavcodec/vp3.c	/^    int chroma_x_shift, chroma_y_shift;$/;"	m	struct:Vp3DecodeContext	file:
chroma_y_shift	libavfilter/libmpcodecs/mp_image.h	/^    int chroma_y_shift; \/\/ vertical$/;"	m	struct:mp_image
chromaformat	libavcodec/vc1.h	/^    int chromaformat;     \/\/\/< 2bits, 2=4:2:0, only defined$/;"	m	struct:VC1Context
chromaoffset	libavcodec/avcodec.h	/^    int chromaoffset;$/;"	m	struct:AVCodecContext
chunck_samples	libavformat/avisynth.c	/^  LONG chunck_samples;$/;"	m	struct:__anon474	file:
chunck_size	libavformat/avisynth.c	/^  LONG chunck_size;$/;"	m	struct:__anon474	file:
chunk_count	libavformat/isom.h	/^    unsigned int chunk_count;$/;"	m	struct:MOVStreamContext
chunk_decoder	libavcodec/dfa.c	/^typedef int (*chunk_decoder)(uint8_t *frame, int width, int height,$/;"	t	file:
chunk_name	libavcodec/dfa.c	/^static const char* chunk_name[8] = {$/;"	v	file:
chunk_number	libavformat/rpl.c	/^    uint32_t chunk_number;$/;"	m	struct:RPLContext	file:
chunk_offsets	libavformat/isom.h	/^    int64_t *chunk_offsets;$/;"	m	struct:MOVStreamContext
chunk_part	libavformat/rpl.c	/^    uint32_t chunk_part;$/;"	m	struct:RPLContext	file:
chunk_seq	libavformat/mmsh.c	/^    int chunk_seq;    \/\/\/< data packet sequence$/;"	m	struct:__anon497	file:
chunk_size	ffserver.c	/^    int chunk_size;               \/* 0 if it needs to be read *\/$/;"	m	struct:HTTPContext	file:
chunk_size	libavformat/rtmpproto.c	/^    int           chunk_size;                 \/\/\/< size of the chunks RTMP packets are divided into$/;"	m	struct:RTMPContext	file:
chunked_encoding	ffserver.c	/^    int chunked_encoding;$/;"	m	struct:HTTPContext	file:
chunksize	libavformat/http.c	/^    int64_t chunksize;      \/**< Used if "Transfer-Encoding: chunked" otherwise -1. *\/$/;"	m	struct:__anon462	file:
ci_table	libavcodec/mpegaudiodectab.h	/^static const float ci_table[8] = {$/;"	v
cid	libavcodec/dnxhddata.h	/^    int cid;$/;"	m	struct:__anon281
cid	libavcodec/dnxhddec.c	/^    int cid;                            \/\/\/< compression id$/;"	m	struct:__anon154	file:
cid	libavcodec/dnxhdenc.h	/^    int cid;$/;"	m	struct:DNXHDEncContext
cid_table	libavcodec/dnxhddec.c	/^    const CIDEntry *cid_table;$/;"	m	struct:__anon154	file:
cid_table	libavcodec/dnxhdenc.h	/^    const CIDEntry *cid_table;$/;"	m	struct:DNXHDEncContext
cin_apply_delta_data	libavcodec/dsicinav.c	/^static void cin_apply_delta_data(const unsigned char *src, unsigned char *dst, int size)$/;"	f	file:
cin_decode_huffman	libavcodec/dsicinav.c	/^static int cin_decode_huffman(const unsigned char *src, int src_size, unsigned char *dst, int dst_size)$/;"	f	file:
cin_decode_lzss	libavcodec/dsicinav.c	/^static void cin_decode_lzss(const unsigned char *src, int src_size, unsigned char *dst, int dst_size)$/;"	f	file:
cin_decode_rle	libavcodec/dsicinav.c	/^static void cin_decode_rle(const unsigned char *src, int src_size, unsigned char *dst, int dst_size)$/;"	f	file:
cin_probe	libavformat/dsicin.c	/^static int cin_probe(AVProbeData *p)$/;"	f	file:
cin_read_file_header	libavformat/dsicin.c	/^static int cin_read_file_header(CinDemuxContext *cin, AVIOContext *pb) {$/;"	f	file:
cin_read_frame_header	libavformat/dsicin.c	/^static int cin_read_frame_header(CinDemuxContext *cin, AVIOContext *pb) {$/;"	f	file:
cin_read_header	libavformat/dsicin.c	/^static int cin_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
cin_read_packet	libavformat/dsicin.c	/^static int cin_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
cinaudio_decode_frame	libavcodec/dsicinav.c	/^static int cinaudio_decode_frame(AVCodecContext *avctx,$/;"	f	file:
cinaudio_decode_init	libavcodec/dsicinav.c	/^static av_cold int cinaudio_decode_init(AVCodecContext *avctx)$/;"	f	file:
cinaudio_delta16_table	libavcodec/dsicinav.c	/^static const int16_t cinaudio_delta16_table[256] = {$/;"	v	file:
cindex	libavcodec/qcelpdata.h	/^    uint8_t cindex[16]; \/\/\/!< codebook index for each codebook subframe$/;"	m	struct:__anon84
cinepak_decode	libavcodec/cinepak.c	/^static int cinepak_decode (CinepakContext *s)$/;"	f	file:
cinepak_decode_codebook	libavcodec/cinepak.c	/^static void cinepak_decode_codebook (cvid_codebook *codebook,$/;"	f	file:
cinepak_decode_end	libavcodec/cinepak.c	/^static av_cold int cinepak_decode_end(AVCodecContext *avctx)$/;"	f	file:
cinepak_decode_frame	libavcodec/cinepak.c	/^static int cinepak_decode_frame(AVCodecContext *avctx,$/;"	f	file:
cinepak_decode_init	libavcodec/cinepak.c	/^static av_cold int cinepak_decode_init(AVCodecContext *avctx)$/;"	f	file:
cinepak_decode_strip	libavcodec/cinepak.c	/^static int cinepak_decode_strip (CinepakContext *s,$/;"	f	file:
cinepak_decode_vectors	libavcodec/cinepak.c	/^static int cinepak_decode_vectors (CinepakContext *s, cvid_strip *strip,$/;"	f	file:
cinvideo_decode_end	libavcodec/dsicinav.c	/^static av_cold int cinvideo_decode_end(AVCodecContext *avctx)$/;"	f	file:
cinvideo_decode_frame	libavcodec/dsicinav.c	/^static int cinvideo_decode_frame(AVCodecContext *avctx,$/;"	f	file:
cinvideo_decode_init	libavcodec/dsicinav.c	/^static av_cold int cinvideo_decode_init(AVCodecContext *avctx)$/;"	f	file:
cip_d	libavdevice/dv1394.h	/^        unsigned long cip_d;$/;"	m	struct:dv1394_init
cip_n	libavdevice/dv1394.h	/^        unsigned long cip_n;$/;"	m	struct:dv1394_init
circular_buffer_error	libavformat/udp.c	/^    int circular_buffer_error;$/;"	m	struct:__anon320	file:
circular_buffer_size	libavformat/udp.c	/^    int circular_buffer_size;$/;"	m	struct:__anon320	file:
circular_buffer_task	libavformat/udp.c	/^static void *circular_buffer_task( void *_URLContext)$/;"	f	file:
circular_buffer_thread	libavformat/udp.c	/^    pthread_t circular_buffer_thread;$/;"	m	struct:__anon320	file:
cl_size	libavfilter/libmpcodecs/cpudetect.h	/^    unsigned cl_size; \/* size of cache line *\/$/;"	m	struct:cpucaps_s
clamp_c	libavfilter/libmpcodecs/vf_yuvcsp.c	/^static inline int clamp_c(int x){$/;"	f	file:
clamp_mv	libavcodec/vp8.c	/^static av_always_inline void clamp_mv(VP8Context *s, VP56mv *dst, const VP56mv *src)$/;"	f	file:
clamp_y	libavfilter/libmpcodecs/vf_yuvcsp.c	/^static inline int clamp_y(int x){$/;"	f	file:
class	libavcodec/dnxhdenc.c	/^static const AVClass class = { "dnxhd", av_default_item_name, options, LIBAVUTIL_VERSION_INT };$/;"	v	file:
class	libavcodec/flacenc.c	/^    AVClass *class;$/;"	m	struct:FlacEncodeContext	file:
class	libavcodec/libopencore-amr.c	/^static const AVClass class = {$/;"	v	file:
class	libavcodec/libvo-amrwbenc.c	/^static const AVClass class = {$/;"	v	file:
class	libavcodec/libvorbis.c	/^static const AVClass class = { "libvorbis", av_default_item_name, options, LIBAVUTIL_VERSION_INT };$/;"	v	file:
class	libavcodec/libvpxenc.c	/^static const AVClass class = { "libvpx", av_default_item_name, options, LIBAVUTIL_VERSION_INT };$/;"	v	file:
class	libavcodec/libx264.c	/^    AVClass        *class;$/;"	m	struct:X264Context	file:
class	libavcodec/libx264.c	/^static const AVClass class = { "libx264", av_default_item_name, options, LIBAVUTIL_VERSION_INT };$/;"	v	file:
class	libavcodec/rawdec.c	/^static const AVClass class = { "rawdec", NULL, options, LIBAVUTIL_VERSION_INT };$/;"	v	file:
class	libavdevice/bktr.c	/^    AVClass *class;$/;"	m	struct:__anon312	file:
class	libavdevice/dv1394.c	/^    AVClass *class;$/;"	m	struct:dv1394_data	file:
class	libavdevice/fbdev.c	/^    AVClass *class;          \/\/\/< class for private options$/;"	m	struct:__anon314	file:
class	libavdevice/libdc1394.c	/^    AVClass *class;$/;"	m	struct:dc1394_data	file:
class	libavdevice/oss_audio.c	/^    AVClass *class;$/;"	m	struct:__anon311	file:
class	libavdevice/sdl.c	/^    AVClass *class;$/;"	m	struct:__anon309	file:
class	libavdevice/v4l.c	/^    AVClass *class;$/;"	m	struct:__anon316	file:
class	libavdevice/v4l2.c	/^    AVClass *class;$/;"	m	struct:video_data	file:
class	libavdevice/vfwcap.c	/^    const AVClass *class;$/;"	m	struct:vfw_ctx	file:
class	libavdevice/x11grab.c	/^    const AVClass *class;    \/**< Class for private options. *\/$/;"	m	struct:x11_grab	file:
class	libavfilter/vf_drawtext.c	/^    const AVClass *class;$/;"	m	struct:__anon24	file:
class	libavfilter/vf_lut.c	/^    const AVClass *class;$/;"	m	struct:__anon23	file:
class	libavfilter/vsrc_movie.c	/^    const AVClass *class;$/;"	m	struct:__anon38	file:
class	libavformat/avidec.c	/^    const AVClass *class;$/;"	m	struct:__anon451	file:
class	libavformat/crypto.c	/^    const AVClass *class;$/;"	m	struct:__anon432	file:
class	libavformat/http.c	/^    const AVClass *class;$/;"	m	struct:__anon462	file:
class	libavformat/img2.c	/^    const AVClass *class;  \/**< Class for private options. *\/$/;"	m	struct:__anon389	file:
class	libavformat/mp3enc.c	/^    const AVClass *class;$/;"	m	struct:MP3Context	file:
class	libavformat/mpegts.c	/^    const AVClass *class;$/;"	m	struct:MpegTSContext	file:
class	libavformat/oggenc.c	/^    const AVClass *class;$/;"	m	struct:__anon381	file:
class	libavformat/spdifenc.c	/^static const AVClass class = {$/;"	v	file:
class	libavformat/tty.c	/^    AVClass *class;$/;"	m	struct:__anon485	file:
class	libavutil/eval.c	/^    const AVClass *class;$/;"	m	struct:Parser	file:
class	libavutil/eval.c	/^static const AVClass class = { "Eval", av_default_item_name, NULL, LIBAVUTIL_VERSION_INT, offsetof(Parser,log_offset), offsetof(Parser,log_ctx) };$/;"	v	file:
class	libavutil/file.c	/^    const AVClass *class;$/;"	m	struct:__anon303	file:
class	libavutil/imgutils.c	/^    const AVClass *class;$/;"	m	struct:ImgUtils	file:
class	libavutil/opt.c	/^    const AVClass *class;$/;"	m	struct:TestContext	file:
class_dimensions	libavcodec/vorbisdec.c	/^            uint8_t       class_dimensions[16];$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor1_s	file:
class_masterbook	libavcodec/vorbisdec.c	/^            uint8_t       class_masterbook[16];$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor1_s	file:
class_name	libavutil/log.h	/^    const char* class_name;$/;"	m	struct:__anon308
class_subclasses	libavcodec/vorbisdec.c	/^            uint8_t       class_subclasses[16];$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor1_s	file:
classbook	libavcodec/vorbisdec.c	/^    uint8_t       classbook;$/;"	m	struct:__anon260	file:
classbook	libavcodec/vorbisenc.c	/^    int classbook;$/;"	m	struct:__anon191	file:
classes	libavcodec/vorbisenc.c	/^    vorbis_enc_floor_class *classes;$/;"	m	struct:__anon190	file:
classic_add_chroma	libavcodec/huffyuv.c	/^static const unsigned char classic_add_chroma[256] = {$/;"	v	file:
classic_add_luma	libavcodec/huffyuv.c	/^static const unsigned char classic_add_luma[256] = {$/;"	v	file:
classic_shift_chroma	libavcodec/huffyuv.c	/^static const unsigned char classic_shift_chroma[] = {$/;"	v	file:
classic_shift_luma	libavcodec/huffyuv.c	/^static const unsigned char classic_shift_luma[] = {$/;"	v	file:
classifications	libavcodec/vorbisdec.c	/^    uint8_t       classifications;$/;"	m	struct:__anon260	file:
classifications	libavcodec/vorbisenc.c	/^    int classifications;$/;"	m	struct:__anon191	file:
classifs	libavcodec/vorbisdec.c	/^    uint8_t      *classifs;$/;"	m	struct:__anon260	file:
clast	libavcodec/truemotion2.c	/^    int *clast;$/;"	m	struct:TM2Context	file:
clean	tests/fate.sh	/^clean(){$/;"	f
clean_height	libavcodec/dirac.h	/^    uint16_t clean_height;$/;"	m	struct:__anon227
clean_index	libavformat/avidec.c	/^static void clean_index(AVFormatContext *s){$/;"	f	file:
clean_left_offset	libavcodec/dirac.h	/^    uint16_t clean_left_offset;$/;"	m	struct:__anon227
clean_right_offset	libavcodec/dirac.h	/^    uint16_t clean_right_offset;$/;"	m	struct:__anon227
clean_width	libavcodec/dirac.h	/^    uint16_t clean_width;$/;"	m	struct:__anon227
cleanup	libavcodec/flashsv2enc.c	/^static av_cold void cleanup(FlashSV2Context * s)$/;"	f	file:
cleanup	libavcodec/j2kdec.c	/^static void cleanup(J2kDecoderContext *s)$/;"	f	file:
cleanup	libavcodec/j2kenc.c	/^void cleanup(J2kEncoderContext *s)$/;"	f
cleanws	configure	/^cleanws(){$/;"	f
clearTable	libavcodec/lzwenc.c	/^static void clearTable(LZWEncodeState * s)$/;"	f	file:
clear_block	libavcodec/dsputil.h	/^    void (*clear_block)(DCTELEM *block\/*align 16*\/);$/;"	m	struct:DSPContext
clear_block	libavcodec/dsputil_template.c	/^static void FUNCC(clear_block)(DCTELEM *block)$/;"	f	file:
clear_block_altivec	libavcodec/ppc/dsputil_altivec.c	/^static void clear_block_altivec(DCTELEM *block) {$/;"	f	file:
clear_block_sse	libavcodec/x86/dsputil_mmx.c	/^static void clear_block_sse(DCTELEM *block)$/;"	f	file:
clear_blocks	libavcodec/dsputil.h	/^    void (*clear_blocks)(DCTELEM *blocks\/*align 16*\/);$/;"	m	struct:DSPContext
clear_blocks	libavcodec/dsputil_template.c	/^static void FUNCC(clear_blocks)(DCTELEM *blocks)$/;"	f	file:
clear_blocks_axp	libavcodec/alpha/dsputil_alpha.c	/^static void clear_blocks_axp(DCTELEM *blocks) {$/;"	f	file:
clear_blocks_dcbz128_ppc	libavcodec/ppc/dsputil_ppc.c	/^static void clear_blocks_dcbz128_ppc(DCTELEM *blocks)$/;"	f	file:
clear_blocks_dcbz32_ppc	libavcodec/ppc/dsputil_ppc.c	/^static void clear_blocks_dcbz32_ppc(DCTELEM *blocks)$/;"	f	file:
clear_blocks_iwmmxt	libavcodec/arm/dsputil_iwmmxt.c	/^static void clear_blocks_iwmmxt(DCTELEM *blocks)$/;"	f	file:
clear_blocks_mmi	libavcodec/ps2/dsputil_mmi.c	/^static void clear_blocks_mmi(DCTELEM * blocks)$/;"	f	file:
clear_blocks_sh4	libavcodec/sh4/dsputil_sh4.c	/^static void clear_blocks_sh4(DCTELEM *blocks)$/;"	f	file:
clear_blocks_sse	libavcodec/x86/dsputil_mmx.c	/^static void clear_blocks_sse(DCTELEM *blocks)$/;"	f	file:
clear_code	libavcodec/lzw.c	/^    int clear_code;$/;"	m	struct:LZWState	file:
clear_code	libavcodec/lzwenc.c	/^    int clear_code;          \/\/\/< Value of clear code$/;"	m	struct:LZWEncodeState	file:
clear_program	libavformat/mpegts.c	/^static void clear_program(MpegTSContext *ts, unsigned int programid)$/;"	f	file:
clear_programs	libavformat/mpegts.c	/^static void clear_programs(MpegTSContext *ts)$/;"	f	file:
clear_state	libavcodec/ffv1.c	/^static void clear_state(FFV1Context *f){$/;"	f	file:
clear_stream_buffers	libavformat/mmst.c	/^static void clear_stream_buffers(MMSContext *mms)$/;"	f	file:
clens	libavcodec/vorbis_enc_data.h	/^    const uint8_t *clens;$/;"	m	struct:__anon273
client	libavdevice/jack_audio.c	/^    jack_client_t * client;$/;"	m	struct:__anon315	file:
client_port_max	libavformat/rtsp.h	/^    int client_port_min, client_port_max;$/;"	m	struct:RTSPTransportField
client_port_min	libavformat/rtsp.h	/^    int client_port_min, client_port_max;$/;"	m	struct:RTSPTransportField
client_report_size	libavformat/rtmpproto.c	/^    uint32_t      client_report_size;         \/\/\/< number of bytes after which client should report to server$/;"	m	struct:RTMPContext	file:
clip	libavfilter/vf_lut.c	/^static double clip(void *opaque, double val)$/;"	f	file:
clip_coeffs	libavcodec/mpegvideo_enc.c	/^static inline void clip_coeffs(MpegEncContext *s, DCTELEM *block, int last_index)$/;"	f	file:
clip_f15	libavcodec/cos_tablegen.c	/^static int clip_f15(int v)$/;"	f	file:
clip_input_mv	libavcodec/motion_est.c	/^static void clip_input_mv(MpegEncContext * s, int16_t *mv, int interlaced){$/;"	f	file:
clip_int8	libavcodec/vp8dsp.c	155;"	d	file:
clipf_c_one	libavcodec/dsputil.c	/^static inline uint32_t clipf_c_one(uint32_t a, uint32_t mini,$/;"	f	file:
clock	libavdevice/dshow.h	/^    IReferenceClock *clock;$/;"	m	struct:libAVFilter
clock_period	libavformat/timefilter.c	/^    double clock_period;$/;"	m	struct:TimeFilter	file:
clock_rate	libavformat/rtp.c	/^    int clock_rate;$/;"	m	struct:__anon392	file:
clone_slice	libavcodec/h264.c	/^static void clone_slice(H264Context *dst, H264Context *src)$/;"	f	file:
clone_tables	libavcodec/h264.c	/^static void clone_tables(H264Context *dst, H264Context *src, int i){$/;"	f	file:
close	libavcodec/avcodec.h	/^    int (*close)(AVCodecContext *);$/;"	m	struct:AVCodec
close	libavcodec/avcodec.h	/^    void (*close)(AVBitStreamFilterContext *bsfc);$/;"	m	struct:AVBitStreamFilter
close	libavcodec/h264_parser.c	/^static void close(AVCodecParserContext *s)$/;"	f	file:
close_audio	doc/examples/muxing-example.c	/^static void close_audio(AVFormatContext *oc, AVStream *st)$/;"	f	file:
close_connection	ffserver.c	/^static void close_connection(HTTPContext *c)$/;"	f	file:
close_decoder	libavcodec/pgssubdec.c	/^static av_cold int close_decoder(AVCodecContext *avctx)$/;"	f	file:
close_video	doc/examples/muxing-example.c	/^static void close_video(AVFormatContext *oc, AVStream *st)$/;"	f	file:
closed_entry	libavcodec/vc1.h	/^    uint8_t closed_entry;       \/\/\/< Closed entry point flag (CLOSED_ENTRY syntax element)$/;"	m	struct:VC1Context
closed_gop	libavcodec/mpegvideo.h	/^    int closed_gop;             \/\/\/< MPEG1\/2 GOP is closed$/;"	m	struct:MpegEncContext
closed_gop	libavformat/mxfenc.c	/^    int closed_gop;          \/\/\/< gop is closed, used in mpeg-2 frame parsing$/;"	m	struct:__anon458	file:
closesocket	ffserver.c	24;"	d	file:
closesocket	libavformat/os_support.h	60;"	d
closest_cb2	libavcodec/roqvideoenc.c	/^    int *closest_cb2;$/;"	m	struct:RoqTempData	file:
clr_count	libavcodec/rl2.c	/^    unsigned int clr_count;    \/\/\/< number of used colors (currently unused)$/;"	m	struct:Rl2Context	file:
cluster	libavformat/avienc.c	/^    AVIIentry** cluster;$/;"	m	struct:AVIIndex	file:
cluster	libavformat/matroskaenc.c	/^    ebml_master     cluster;$/;"	m	struct:MatroskaMuxContext	file:
cluster	libavformat/movenc.h	/^    MOVIentry   *cluster;$/;"	m	struct:MOVIndex
cluster_pos	libavformat/matroskaenc.c	/^    int64_t         cluster_pos;        \/\/\/< file offset of the cluster containing the block$/;"	m	struct:__anon476	file:
cluster_pos	libavformat/matroskaenc.c	/^    int64_t         cluster_pos;        \/\/\/< file offset of the current cluster$/;"	m	struct:MatroskaMuxContext	file:
cluster_pts	libavformat/matroskaenc.c	/^    int64_t         cluster_pts;$/;"	m	struct:MatroskaMuxContext	file:
clut	libavcodec/dvbsubdec.c	/^    int clut;$/;"	m	struct:DVBSubRegion	file:
clut	libavcodec/pgssubdec.c	/^    uint32_t           clut[256];$/;"	m	struct:PGSSubContext	file:
clut16	libavcodec/dvbsubdec.c	/^    uint32_t clut16[16];$/;"	m	struct:DVBSubCLUT	file:
clut256	libavcodec/dvbsubdec.c	/^    uint32_t clut256[256];$/;"	m	struct:DVBSubCLUT	file:
clut4	libavcodec/dvbsubdec.c	/^    uint32_t clut4[4];$/;"	m	struct:DVBSubCLUT	file:
clut_list	libavcodec/dvbsubdec.c	/^    DVBSubCLUT   *clut_list;$/;"	m	struct:DVBSubContext	file:
cm	libavcodec/dvbsubdec.c	34;"	d	file:
cm_table_select	libavcodec/qdm2.c	/^    int cm_table_select;     \/\/\/< selector for "coding method" tables. Can be 0, 1 (from init: 0-4)$/;"	m	struct:__anon200	file:
cmixlev_options	libavcodec/ac3enc.c	/^static const float cmixlev_options[CMIXLEV_NUM_OPTIONS] = {$/;"	v	file:
cmp	libavcodec/motion_est.c	/^static av_always_inline int cmp(MpegEncContext *s, const int x, const int y, const int subx, const int suby,$/;"	f	file:
cmp	libavutil/tree.c	/^static int cmp(void *a, const void *b){$/;"	f	file:
cmp_direct_inline	libavcodec/motion_est.c	/^static av_always_inline int cmp_direct_inline(MpegEncContext *s, const int x, const int y, const int subx, const int suby,$/;"	f	file:
cmp_fpel_internal	libavcodec/motion_est.c	/^static int cmp_fpel_internal(MpegEncContext *s, const int x, const int y,$/;"	f	file:
cmp_hpel	libavcodec/motion_est.c	/^static int cmp_hpel(MpegEncContext *s, const int x, const int y, const int subx, const int suby,$/;"	f	file:
cmp_inline	libavcodec/motion_est.c	/^static av_always_inline int cmp_inline(MpegEncContext *s, const int x, const int y, const int subx, const int suby,$/;"	f	file:
cmp_internal	libavcodec/motion_est.c	/^static int cmp_internal(MpegEncContext *s, const int x, const int y, const int subx, const int suby,$/;"	f	file:
cmp_qpel	libavcodec/motion_est.c	/^static int cmp_qpel(MpegEncContext *s, const int x, const int y, const int subx, const int suby,$/;"	f	file:
cmp_simple	libavcodec/motion_est.c	/^static int cmp_simple(MpegEncContext *s, const int x, const int y,$/;"	f	file:
cmpbge	libavcodec/alpha/asm.h	107;"	d
cmpbge	libavcodec/alpha/asm.h	158;"	d
cmpbge	libavcodec/alpha/asm.h	92;"	d
cmpe	libavfilter/libmpcodecs/vf_filmdint.c	/^cmpe(unsigned long x, unsigned long y, unsigned long err, unsigned long e)$/;"	f	file:
cmv_decode_end	libavcodec/eacmv.c	/^static av_cold int cmv_decode_end(AVCodecContext *avctx){$/;"	f	file:
cmv_decode_frame	libavcodec/eacmv.c	/^static int cmv_decode_frame(AVCodecContext *avctx,$/;"	f	file:
cmv_decode_init	libavcodec/eacmv.c	/^static av_cold int cmv_decode_init(AVCodecContext *avctx){$/;"	f	file:
cmv_decode_inter	libavcodec/eacmv.c	/^static void cmv_decode_inter(CmvContext * s, const uint8_t *buf, const uint8_t *buf_end){$/;"	f	file:
cmv_decode_intra	libavcodec/eacmv.c	/^static void cmv_decode_intra(CmvContext * s, const uint8_t *buf, const uint8_t *buf_end){$/;"	f	file:
cmv_motcomp	libavcodec/eacmv.c	/^static void cmv_motcomp(unsigned char *dst, int dst_stride,$/;"	f	file:
cmv_process_header	libavcodec/eacmv.c	/^static void cmv_process_header(CmvContext *s, const uint8_t *buf, const uint8_t *buf_end)$/;"	f	file:
cno	libavcodec/dv.c	/^    int      cno;$/;"	m	struct:EncBlockInfo	file:
cnt	libavfilter/libmpcodecs/vf_decimate.c	/^    int max, last, cnt;$/;"	m	struct:vf_priv_s	file:
co_located_mv	libavcodec/mpegvideo.h	/^    int co_located_mv[4][2];           \/\/\/< mv from last P-frame for direct mode ME$/;"	m	struct:MotionEstContext
coarse_snr_offset	libavcodec/ac3enc.h	/^    int coarse_snr_offset;                  \/\/\/< coarse SNR offsets                     (csnroffst)$/;"	m	struct:AC3EncodeContext
code	libavcodec/bitstream.c	/^    uint32_t code;$/;"	m	struct:__anon81	file:
code	libavcodec/lzwenc.c	/^    int code;               \/\/\/< LZW code$/;"	m	struct:Code	file:
code	libavcodec/motionpixels.c	/^    int code;$/;"	m	struct:HuffCode	file:
code_samplerate	libavcodec/sonic.c	/^static inline int code_samplerate(int samplerate)$/;"	f	file:
code_size	libavcodec/g726.c	/^    int code_size;$/;"	m	struct:G726Context	file:
code_tab	libavcodec/wnv1.c	/^static const uint16_t code_tab[16][2]={$/;"	v	file:
code_vlc	libavcodec/wnv1.c	/^static VLC code_vlc;$/;"	v	file:
code_word	libavcodec/vp56.h	/^    unsigned int code_word;$/;"	m	struct:__anon220
codeblock_height	libavcodec/j2k.h	/^    uint16_t codeblock_width, codeblock_height;$/;"	m	struct:__anon215
codeblock_width	libavcodec/j2k.h	/^    uint16_t codeblock_width, codeblock_height;$/;"	m	struct:__anon215
codebook	libavcodec/elbg.c	/^    int *codebook;$/;"	m	struct:__anon247	file:
codebook	libavcodec/mlp.h	/^    uint8_t     codebook;         \/\/\/< Which VLC codebook to use to read residuals.$/;"	m	struct:__anon78
codebook	libavcodec/msvideo1enc.c	/^    int codebook[8*3];$/;"	m	struct:Msvideo1EncContext	file:
codebook	libavcodec/vqavideo.c	/^    unsigned char *codebook;         \/* the current codebook *\/$/;"	m	struct:VqaContext	file:
codebook0	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook0[] = {$/;"	v
codebook1	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook1[] = {$/;"	v
codebook10	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook10[] = {$/;"	v
codebook11	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook11[] = {$/;"	v
codebook12	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook12[] = {$/;"	v
codebook13	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook13[] = {$/;"	v
codebook14	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook14[] = {$/;"	v
codebook15	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook15[] = {$/;"	v
codebook16	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook16[] = {$/;"	v
codebook17	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook17[] = {$/;"	v
codebook18	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook18[] = {$/;"	v
codebook19	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook19[] = {$/;"	v
codebook2	libavcodec/msvideo1enc.c	/^    int codebook2[8*3];$/;"	m	struct:Msvideo1EncContext	file:
codebook2	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook2[] = {$/;"	v
codebook20	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook20[] = {$/;"	v
codebook21	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook21[] = {$/;"	v
codebook22	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook22[] = {$/;"	v
codebook23	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook23[] = {$/;"	v
codebook24	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook24[] = {$/;"	v
codebook25	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook25[] = {$/;"	v
codebook26	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook26[] = {$/;"	v
codebook27	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook27[] = {$/;"	v
codebook28	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook28[] = {$/;"	v
codebook3	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook3[] = {$/;"	v
codebook4	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook4[] = {$/;"	v
codebook5	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook5[] = {$/;"	v
codebook6	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook6[] = {$/;"	v
codebook7	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook7[] = {$/;"	v
codebook8	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook8[] = {$/;"	v
codebook9	libavcodec/vorbis_enc_data.h	/^static const uint8_t codebook9[] = {$/;"	v
codebook_count	libavcodec/vorbisdec.c	/^    uint16_t      codebook_count;$/;"	m	struct:vorbis_context_s	file:
codebook_sanity_check_for_rate_quarter	libavcodec/qcelpdec.c	/^static int codebook_sanity_check_for_rate_quarter(const uint8_t *cbgain)$/;"	f	file:
codebook_size	libavcodec/vqavideo.c	/^    int codebook_size;$/;"	m	struct:VqaContext	file:
codebook_trellis_rate	libavcodec/aaccoder.c	/^static void codebook_trellis_rate(AACEncContext *s, SingleChannelElement *sce,$/;"	f	file:
codebook_vector02_idx	libavcodec/aactab.c	/^static const uint16_t codebook_vector02_idx[] = {$/;"	v	file:
codebook_vector0_vals	libavcodec/aactab.c	/^static const float codebook_vector0_vals[] = {$/;"	v	file:
codebook_vector10_idx	libavcodec/aactab.c	/^static const uint16_t codebook_vector10_idx[] = {$/;"	v	file:
codebook_vector10_vals	libavcodec/aactab.c	/^static const float codebook_vector10_vals[] = {$/;"	v	file:
codebook_vector4_idx	libavcodec/aactab.c	/^static const uint16_t codebook_vector4_idx[] = {$/;"	v	file:
codebook_vector4_vals	libavcodec/aactab.c	/^static const float codebook_vector4_vals[] = {$/;"	v	file:
codebook_vector6_idx	libavcodec/aactab.c	/^static const uint16_t codebook_vector6_idx[] = {$/;"	v	file:
codebook_vector8_idx	libavcodec/aactab.c	/^static const uint16_t codebook_vector8_idx[] = {$/;"	v	file:
codebooks	libavcodec/escape124.c	/^    CodeBook codebooks[3];$/;"	m	struct:Escape124Context	file:
codebooks	libavcodec/roqvideoenc.c	/^    RoqCodebooks codebooks;$/;"	m	struct:RoqTempData	file:
codebooks	libavcodec/vorbisdec.c	/^    vorbis_codebook *codebooks;$/;"	m	struct:vorbis_context_s	file:
codebooks	libavcodec/vorbisenc.c	/^    vorbis_enc_codebook *codebooks;$/;"	m	struct:__anon194	file:
codec	libavcodec/ac3enc_combined.c	/^    AVCodec *codec;$/;"	m	struct:CombineContext	file:
codec	libavcodec/avcodec.h	/^    struct AVCodec *codec;$/;"	m	struct:AVCodecContext	typeref:struct:AVCodecContext::AVCodec
codec	libavformat/avformat.h	/^    AVCodecContext *codec; \/**< codec context *\/$/;"	m	struct:AVStream
codec	libavformat/oggdec.h	/^    const struct ogg_codec *codec;$/;"	m	struct:ogg_stream	typeref:struct:ogg_stream::ogg_codec
codec_3gp_tags	libavformat/movenc.c	/^static const AVCodecTag codec_3gp_tags[] = {$/;"	v	file:
codec_api	libavcodec/libvo-aacenc.c	/^    VO_AUDIO_CODECAPI codec_api;$/;"	m	struct:AACContext	file:
codec_asf_bmp_tags	libavformat/asfenc.c	/^static const AVCodecTag codec_asf_bmp_tags[] = {$/;"	v	file:
codec_au_tags	libavformat/au.c	/^static const AVCodecTag codec_au_tags[] = {$/;"	v	file:
codec_ctx	libavfilter/vsrc_movie.c	/^    AVCodecContext *codec_ctx;$/;"	m	struct:__anon38	file:
codec_flags	libavformat/cafenc.c	/^static uint32_t codec_flags(enum CodecID codec_id) {$/;"	f	file:
codec_frameheader	libavcodec/nuv.c	/^    int codec_frameheader;$/;"	m	struct:__anon100	file:
codec_id	libavcodec/aac_ac3_parser.h	/^    enum CodecID codec_id;$/;"	m	struct:AACAC3ParseContext	typeref:enum:AACAC3ParseContext::CodecID
codec_id	libavcodec/avcodec.h	/^    enum CodecID codec_id; \/* see CODEC_ID_xxx *\/$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::CodecID
codec_id	libavcodec/mpegvideo.h	/^    enum CodecID codec_id;     \/* see CODEC_ID_xxx *\/$/;"	m	struct:MpegEncContext	typeref:enum:MpegEncContext::CodecID
codec_id	libavdevice/oss_audio.c	/^    enum CodecID codec_id;$/;"	m	struct:__anon311	typeref:enum:__anon311::CodecID	file:
codec_id	libavdevice/sndio_common.h	/^    enum CodecID codec_id;$/;"	m	struct:__anon318	typeref:enum:__anon318::CodecID
codec_id	libavdevice/v4l2.c	/^    enum CodecID codec_id;$/;"	m	struct:fmt_map	typeref:enum:fmt_map::CodecID	file:
codec_id	libavformat/matroskadec.c	/^    char    *codec_id;$/;"	m	struct:__anon361	file:
codec_id	libavformat/mpegts.c	/^    enum CodecID codec_id;$/;"	m	struct:__anon472	typeref:enum:__anon472::CodecID	file:
codec_id	libavformat/rtp.c	/^    enum CodecID codec_id;$/;"	m	struct:__anon392	typeref:enum:__anon392::CodecID	file:
codec_id	libavformat/rtpdec.h	/^    enum CodecID codec_id;$/;"	m	struct:RTPDynamicProtocolHandler_s	typeref:enum:RTPDynamicProtocolHandler_s::CodecID
codec_id_to_pcm_format	libavdevice/alsa-audio-common.c	/^static av_cold snd_pcm_format_t codec_id_to_pcm_format(int codec_id)$/;"	f	file:
codec_ids	libavcodec/avcodec.h	/^    int codec_ids[5]; \/* several codec IDs are permitted *\/$/;"	m	struct:AVCodecParser
codec_info_duration	libavformat/avformat.h	/^        int64_t codec_info_duration;$/;"	m	struct:AVStream::__anon480
codec_info_nb_frames	libavformat/avformat.h	/^    int codec_info_nb_frames;$/;"	m	struct:AVStream
codec_ipod_tags	libavformat/movenc.c	/^static const AVCodecTag codec_ipod_tags[] = {$/;"	v	file:
codec_movaudio_tags	libavformat/isom.c	/^const AVCodecTag codec_movaudio_tags[] = {$/;"	v
codec_movvideo_tags	libavformat/isom.c	/^const AVCodecTag codec_movvideo_tags[] = {$/;"	v
codec_mutex	libavcodec/utils.c	/^static void *codec_mutex;$/;"	v	file:
codec_name	libavcodec/avcodec.h	/^    char codec_name[32];$/;"	m	struct:AVCodecContext
codec_oma_tags	libavformat/oma.c	/^static const AVCodecTag codec_oma_tags[] = {$/;"	v	file:
codec_priv	libavformat/matroskadec.c	/^    EbmlBin  codec_priv;$/;"	m	struct:__anon361	file:
codec_reinit	libavcodec/nuv.c	/^static int codec_reinit(AVCodecContext *avctx, int width, int height, int quality) {$/;"	f	file:
codec_tag	libavcodec/avcodec.h	/^    unsigned int codec_tag;$/;"	m	struct:AVCodecContext
codec_tag	libavcodec/mpegvideo.h	/^    int codec_tag;             \/\/\/< internal codec_tag upper case converted from avctx codec_tag$/;"	m	struct:MpegEncContext
codec_tag	libavformat/avformat.h	/^    const struct AVCodecTag * const *codec_tag;$/;"	m	struct:AVInputFormat
codec_tag	libavformat/avformat.h	/^    const struct AVCodecTag * const *codec_tag;$/;"	m	struct:AVOutputFormat
codec_type	libavcodec/avcodec.h	/^    enum AVMediaType codec_type; \/* see AVMEDIA_TYPE_xxx *\/$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVMediaType
codec_type	libavformat/mpegts.c	/^    enum AVMediaType codec_type;$/;"	m	struct:__anon472	typeref:enum:__anon472::AVMediaType	file:
codec_type	libavformat/rtp.c	/^    enum AVMediaType codec_type;$/;"	m	struct:__anon392	typeref:enum:__anon392::AVMediaType	file:
codec_type	libavformat/rtpdec.h	/^    enum AVMediaType codec_type;$/;"	m	struct:RTPDynamicProtocolHandler_s	typeref:enum:RTPDynamicProtocolHandler_s::AVMediaType
codec_ul	libavformat/mxfenc.c	/^    UID codec_ul;$/;"	m	struct:__anon459	file:
codec_ul	libavformat/mxfenc.c	/^    const UID *codec_ul;$/;"	m	struct:__anon458	file:
codecctl_int	libavcodec/libvpxenc.c	/^static av_cold int codecctl_int(AVCodecContext *avctx,$/;"	f	file:
codectest	tests/fate-run.sh	/^codectest(){$/;"	f
coded_ac_scale_factor	libavcodec/vp3.c	/^    uint32_t coded_ac_scale_factor[64];$/;"	m	struct:Vp3DecodeContext	file:
coded_block	libavcodec/mpegvideo.h	/^    uint8_t *coded_block;          \/\/\/< used for coded block pattern prediction (msmpeg4v3, wmv1)$/;"	m	struct:MpegEncContext
coded_block_base	libavcodec/mpegvideo.h	/^    uint8_t *coded_block_base;$/;"	m	struct:MpegEncContext
coded_dc_scale_factor	libavcodec/vp3.c	/^    uint16_t coded_dc_scale_factor[64];$/;"	m	struct:Vp3DecodeContext	file:
coded_fragment_list	libavcodec/vp3.c	/^    int *coded_fragment_list[3];$/;"	m	struct:Vp3DecodeContext	file:
coded_frame	libavcodec/avcodec.h	/^    AVFrame *coded_frame;$/;"	m	struct:AVCodecContext
coded_frame_add	libavcodec/libvpxenc.c	/^static void coded_frame_add(void *list, struct FrameListData *cx_frame)$/;"	f	file:
coded_frame_list	libavcodec/libvpxenc.c	/^    struct FrameListData *coded_frame_list;$/;"	m	struct:VP8EncoderContext	typeref:struct:VP8EncoderContext::FrameListData	file:
coded_framesize	libavformat/matroskadec.c	/^    int      coded_framesize;$/;"	m	struct:__anon358	file:
coded_framesize	libavformat/rmdec.c	/^    int sub_packet_size, sub_packet_h, coded_framesize; \/\/\/< Descrambling parameters from container$/;"	m	struct:RMStream	file:
coded_height	libavcodec/avcodec.h	/^    int coded_width, coded_height;$/;"	m	struct:AVCodecContext
coded_picture_number	libavcodec/mpegvideo.h	/^    int coded_picture_number;  \/\/\/< used to set pic->coded_picture_number, should not be used for\/by anything else$/;"	m	struct:MpegEncContext
coded_samples	libavcodec/sonic.c	/^    int *coded_samples[MAX_CHANNELS];$/;"	m	struct:SonicContext	file:
coded_score	libavcodec/mpegvideo.h	/^    int coded_score[8];$/;"	m	struct:MpegEncContext
coded_width	libavcodec/avcodec.h	/^    int coded_width, coded_height;$/;"	m	struct:AVCodecContext
coder	libavcodec/aacenc.h	/^    AACCoefficientsEncoder *coder;$/;"	m	struct:AACEncContext
coder_type	libavcodec/avcodec.h	/^    int coder_type;$/;"	m	struct:AVCodecContext
codes	libavcodec/motionpixels.c	/^    HuffCode codes[MAX_HUFF_CODES];$/;"	m	struct:MotionPixelsContext	file:
codes	libavcodec/mpegaudiodectab.h	/^    const uint16_t *codes;$/;"	m	struct:HuffTable
codes1	libavcodec/aactab.c	/^static const uint16_t codes1[81] = {$/;"	v	file:
codes10	libavcodec/aactab.c	/^static const uint16_t codes10[169] = {$/;"	v	file:
codes11	libavcodec/aactab.c	/^static const uint16_t codes11[289] = {$/;"	v	file:
codes2	libavcodec/aactab.c	/^static const uint16_t codes2[81] = {$/;"	v	file:
codes3	libavcodec/aactab.c	/^static const uint16_t codes3[81] = {$/;"	v	file:
codes4	libavcodec/aactab.c	/^static const uint16_t codes4[81] = {$/;"	v	file:
codes5	libavcodec/aactab.c	/^static const uint16_t codes5[81] = {$/;"	v	file:
codes6	libavcodec/aactab.c	/^static const uint16_t codes6[81] = {$/;"	v	file:
codes7	libavcodec/aactab.c	/^static const uint16_t codes7[64] = {$/;"	v	file:
codes8	libavcodec/aactab.c	/^static const uint16_t codes8[64] = {$/;"	v	file:
codes9	libavcodec/aactab.c	/^static const uint16_t codes9[169] = {$/;"	v	file:
codes_count	libavcodec/motionpixels.c	/^    int codes_count, current_codes_count;$/;"	m	struct:MotionPixelsContext	file:
codesize	libavcodec/lzw.c	/^    int codesize;$/;"	m	struct:LZWState	file:
codetable	libavcodec/ra288.h	/^static const int16_t codetable[128][5]={$/;"	v
codevectors	libavcodec/vorbisdec.c	/^    float       *codevectors;$/;"	m	struct:__anon258	file:
codewords	libavcodec/imc.c	/^    int codewords[COEFFS];     \/\/\/< raw codewords read from bitstream$/;"	m	struct:__anon90	file:
codewords	libavcodec/vorbisenc.c	/^    uint32_t *codewords;$/;"	m	struct:__anon188	file:
coding	libavdevice/libdc1394.c	/^    uint32_t coding;$/;"	m	struct:dc1394_color_coding	file:
codingMode	libavcodec/atrac3.c	/^    int                 codingMode;$/;"	m	struct:__anon131	file:
coding_method	libavcodec/qdm2.c	/^    int8_t coding_method[MPA_MAX_CHANNELS][30][64];$/;"	m	struct:__anon200	file:
coding_method	libavcodec/vp3.c	/^    uint8_t coding_method;$/;"	m	struct:Vp3Fragment	file:
coding_method_table	libavcodec/qdm2data.h	/^static const int8_t coding_method_table[5][30] = {$/;"	v
coding_unit_size	libavcodec/dnxhddata.h	/^    unsigned int coding_unit_size;$/;"	m	struct:__anon281
codingset	libavcodec/vc1.h	/^    int codingset;        \/\/\/< index of current table set from 11.8 to use for luma block decoding$/;"	m	struct:VC1Context
codingset2	libavcodec/vc1.h	/^    int codingset2;       \/\/\/< index of current table set from 11.8 to use for chroma block decoding$/;"	m	struct:VC1Context
codsty	libavcodec/j2kdec.c	/^    J2kCodingStyle codsty[4];$/;"	m	struct:__anon98	file:
codsty	libavcodec/j2kdec.c	/^   J2kCodingStyle codsty[4];$/;"	m	struct:__anon97	file:
codsty	libavcodec/j2kenc.c	/^    J2kCodingStyle codsty;$/;"	m	struct:__anon63	file:
coef	libavcodec/aac.h	/^    float coef;$/;"	m	struct:__anon238
coef	libavcodec/aac.h	/^    float coef[8][4][TNS_MAX_ORDER];$/;"	m	struct:__anon240
coef	libavcodec/atrac3.c	/^    float   coef[8];$/;"	m	struct:__anon129	file:
coef0_huffbits	libavcodec/wmadata.h	/^static const uint8_t coef0_huffbits[666] = {$/;"	v
coef0_huffbits	libavcodec/wmaprodata.h	/^static const uint8_t coef0_huffbits[HUFF_COEF0_SIZE] = {$/;"	v
coef0_huffcodes	libavcodec/wmadata.h	/^static const uint32_t coef0_huffcodes[666] = {$/;"	v
coef0_huffcodes	libavcodec/wmaprodata.h	/^static const uint32_t coef0_huffcodes[HUFF_COEF0_SIZE] = {$/;"	v
coef0_level	libavcodec/wmaprodata.h	/^static const float coef0_level[HUFF_COEF0_SIZE] = {$/;"	v
coef0_run	libavcodec/wmaprodata.h	/^static const uint16_t coef0_run[HUFF_COEF0_SIZE] = {$/;"	v
coef1_huffbits	libavcodec/wmadata.h	/^static const uint8_t coef1_huffbits[555] = {$/;"	v
coef1_huffbits	libavcodec/wmaprodata.h	/^static const uint8_t coef1_huffbits[HUFF_COEF1_SIZE] = {$/;"	v
coef1_huffcodes	libavcodec/wmadata.h	/^static const uint32_t coef1_huffcodes[555] = {$/;"	v
coef1_huffcodes	libavcodec/wmaprodata.h	/^static const uint32_t coef1_huffcodes[HUFF_COEF1_SIZE] = {$/;"	v
coef1_level	libavcodec/wmaprodata.h	/^static const float coef1_level[HUFF_COEF1_SIZE] = {$/;"	v
coef1_run	libavcodec/wmaprodata.h	/^static const uint16_t coef1_run[HUFF_COEF1_SIZE] = {$/;"	v
coef2_huffbits	libavcodec/wmadata.h	/^static const uint8_t coef2_huffbits[1336] = {$/;"	v
coef2_huffcodes	libavcodec/wmadata.h	/^static const uint32_t coef2_huffcodes[1336] = {$/;"	v
coef2maxsf	libavcodec/aaccoder.c	/^static av_always_inline uint8_t coef2maxsf(float coef) {$/;"	f	file:
coef2minsf	libavcodec/aaccoder.c	/^static av_always_inline uint8_t coef2minsf(float coef) {$/;"	f	file:
coef3_huffbits	libavcodec/wmadata.h	/^static const uint8_t coef3_huffbits[1072] = {$/;"	v
coef3_huffcodes	libavcodec/wmadata.h	/^static const uint32_t coef3_huffcodes[1072] = {$/;"	v
coef4_huffbits	libavcodec/wmadata.h	/^static const uint8_t coef4_huffbits[476] = {$/;"	v
coef4_huffcodes	libavcodec/wmadata.h	/^static const uint32_t coef4_huffcodes[476] = {$/;"	v
coef5_huffbits	libavcodec/wmadata.h	/^static const uint8_t coef5_huffbits[435] = {$/;"	v
coef5_huffcodes	libavcodec/wmadata.h	/^static const uint32_t coef5_huffcodes[435] = {$/;"	v
coef_table	libavcodec/alsdec.c	/^    int coef_table;           \/\/\/< table index of Rice code parameters$/;"	m	struct:__anon150	file:
coef_vlc	libavcodec/wma.h	/^    VLC coef_vlc[2];$/;"	m	struct:WMACodecContext
coef_vlc	libavcodec/wmaprodec.c	/^static VLC              coef_vlc[2];      \/\/\/< coefficient run length vlc codes$/;"	v	file:
coef_vlcs	libavcodec/wma.h	/^    const CoefVLCTable *coef_vlcs[2];$/;"	m	struct:WMACodecContext
coef_vlcs	libavcodec/wmadata.h	/^static const CoefVLCTable coef_vlcs[6] = {$/;"	v
coeff	libavcodec/mlp.h	/^    int32_t     coeff[NUM_FILTERS][MAX_FIR_ORDER];$/;"	m	struct:__anon78
coeff	libavcodec/ratecontrol.h	/^    double coeff;$/;"	m	struct:Predictor
coeff	libavcodec/snow.c	/^    uint16_t coeff;$/;"	m	struct:x_and_coeff	file:
coeff	libavfilter/libmpcodecs/vf_ow.c	/^static const double coeff[2][5]={$/;"	v	file:
coeff	libavfilter/libmpcodecs/vf_perspective.c	/^    int32_t coeff[1<<SUB_PIXEL_BITS][4];$/;"	m	struct:vf_priv_s	file:
coeff	libavutil/lls.h	/^    double coeff[MAX_VARS][MAX_VARS];$/;"	m	struct:LLSModel
coeff	libswscale/swscale.h	/^    double *coeff;              \/\/\/< pointer to the list of coefficients$/;"	m	struct:__anon286
coeff1	libavcodec/adpcm.c	/^    int coeff1;$/;"	m	struct:ADPCMChannelStatus	file:
coeff2	libavcodec/adpcm.c	/^    int coeff2;$/;"	m	struct:ADPCMChannelStatus	file:
coeff_acct	libavcodec/vp56.h	/^    uint8_t coeff_acct[2][3][3][6][5];\/* vp5 only AC coding type for coding group < 3 *\/$/;"	m	struct:__anon223
coeff_ctx	libavcodec/vp56.h	/^    uint8_t coeff_ctx[4][64];              \/* used in vp5 only *\/$/;"	m	struct:vp56_context
coeff_ctx_last	libavcodec/vp56.h	/^    uint8_t coeff_ctx_last[4];             \/* used in vp5 only *\/$/;"	m	struct:vp56_context
coeff_dcct	libavcodec/vp56.h	/^    uint8_t coeff_dcct[2][36][5];    \/* DC coeff coding type *\/$/;"	m	struct:__anon223
coeff_dccv	libavcodec/vp56.h	/^    uint8_t coeff_dccv[2][11];       \/* DC coeff value *\/$/;"	m	struct:__anon223
coeff_get_bits	libavcodec/vp3data.h	/^static const int coeff_get_bits[32] = {$/;"	v
coeff_index_to_pos	libavcodec/vp56.h	/^    uint8_t coeff_index_to_pos[64];  \/* used in vp6 only *\/$/;"	m	struct:__anon223
coeff_partition	libavcodec/vp8.h	/^    VP56RangeCoder coeff_partition[8];$/;"	m	struct:__anon182
coeff_per_sb_for_avg	libavcodec/qdm2data.h	/^static const uint8_t coeff_per_sb_for_avg[3][30] = {$/;"	v
coeff_per_sb_for_dequant	libavcodec/qdm2data.h	/^static const uint8_t coeff_per_sb_for_dequant[3][30] = {$/;"	v
coeff_per_sb_select	libavcodec/qdm2.c	/^    int coeff_per_sb_select; \/\/\/< selector for "num. of coeffs. per subband" tables. Can be 0, 1, 2$/;"	m	struct:__anon200	file:
coeff_ract	libavcodec/vp56.h	/^    uint8_t coeff_ract[2][3][6][11]; \/* Run\/AC coding type and AC coeff value *\/$/;"	m	struct:__anon223
coeff_reorder	libavcodec/vp56.h	/^    uint8_t coeff_reorder[64];       \/* used in vp6 only *\/$/;"	m	struct:__anon223
coeff_runv	libavcodec/vp56.h	/^    uint8_t coeff_runv[2][14];       \/* run value (vp6 only) *\/$/;"	m	struct:__anon223
coeff_shift	libavcodec/ac3enc.h	/^    uint8_t  coeff_shift[AC3_MAX_CHANNELS];     \/\/\/< fixed-point coefficient shift values$/;"	m	struct:AC3Block
coeff_table_token_10	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_10[1] = { -1 };$/;"	v
coeff_table_token_11	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_11[1] = { 2 };$/;"	v
coeff_table_token_12	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_12[1] = { -2 };$/;"	v
coeff_table_token_13	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_13[2] = { 3, -3 };$/;"	v
coeff_table_token_14	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_14[2] = { 4, -4 };$/;"	v
coeff_table_token_15	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_15[2] = { 5, -5 };$/;"	v
coeff_table_token_16	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_16[2] = { 6, -6 };$/;"	v
coeff_table_token_17	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_17[4] = {$/;"	v
coeff_table_token_18	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_18[8] = {$/;"	v
coeff_table_token_19	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_19[16] = {$/;"	v
coeff_table_token_20	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_20[32] = {$/;"	v
coeff_table_token_21	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_21[64] = {$/;"	v
coeff_table_token_22	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_22[1024] = {$/;"	v
coeff_table_token_23_24_25_26_27_28_29	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_23_24_25_26_27_28_29[2] = { 1, -1 };$/;"	v
coeff_table_token_30	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_30[4] = { 2, 3, -2, -3 };$/;"	v
coeff_table_token_31	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_31[4] = { 2, 3, -2, -3 };$/;"	v
coeff_table_token_7_8	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_7_8[1] = { 0 };$/;"	v
coeff_table_token_9	libavcodec/vp3data.h	/^static const int16_t coeff_table_token_9[1] = { 1 };$/;"	v
coeff_tables	libavcodec/vp3data.h	/^static const int16_t *const coeff_tables[32] = {$/;"	v
coeff_token_bits	libavcodec/h264_cavlc.c	/^static const uint8_t coeff_token_bits[4][4*17]={$/;"	v	file:
coeff_token_len	libavcodec/h264_cavlc.c	/^static const uint8_t coeff_token_len[4][4*17]={$/;"	v	file:
coeff_token_vlc	libavcodec/h264_cavlc.c	/^static VLC coeff_token_vlc[4];$/;"	v	file:
coeff_token_vlc_tables	libavcodec/h264_cavlc.c	/^static VLC_TYPE coeff_token_vlc_tables[520+332+280+256][2];$/;"	v	file:
coeff_token_vlc_tables_size	libavcodec/h264_cavlc.c	/^static const int coeff_token_vlc_tables_size[4]={520,332,280,256};$/;"	v	file:
coefficient	libavcodec/rv34.h	/^    VLC coefficient;       \/\/\/< VLCs used for decoding big coefficients$/;"	m	struct:RV34VLC
coefficients	libavcodec/dctref.c	/^static double coefficients[8 * 8];$/;"	v	file:
coeffs	libavcodec/apedec.c	/^    int16_t *coeffs;        \/\/\/< actual coefficients used in filtering$/;"	m	struct:APEFilter	file:
coeffs	libavcodec/shorten.c	/^    int *coeffs;$/;"	m	struct:ShortenContext	file:
coeffs	libavcodec/vorbisenc.c	/^    float *coeffs; \/\/ also used for residue after floor$/;"	m	struct:__anon194	file:
coeffs	libavcodec/wmaprodec.c	/^    float*   coeffs;                                  \/\/\/< pointer to the subframe decode buffer$/;"	m	struct:__anon82	file:
coeffsA	libavcodec/apedec.c	/^    int32_t coeffsA[2][4];  \/\/\/< adaption coefficients$/;"	m	struct:APEPredictor	file:
coeffsB	libavcodec/apedec.c	/^    int32_t coeffsB[2][5];  \/\/\/< adaption coefficients$/;"	m	struct:APEPredictor	file:
coeffs_ptr	libavcodec/binkaudio.c	/^    float *coeffs_ptr[MAX_CHANNELS]; \/\/\/< pointers to the coeffs arrays for float_to_int16_interleave$/;"	m	struct:__anon136	file:
coefs	libavcodec/bfin/idct_bfin.S	/^coefs:$/;"	l
coefs	libavcodec/bfin/vp3_idct_bfin.S	/^coefs:$/;"	l
coefs	libavcodec/flacenc.c	/^    int32_t coefs[MAX_LPC_ORDER];$/;"	m	struct:FlacSubframe	file:
coefs1	libavcodec/wma.h	/^    WMACoef coefs1[MAX_CHANNELS][BLOCK_MAX_SIZE];$/;"	m	struct:WMACodecContext
coefs_end	libavcodec/wma.h	/^    int coefs_end[BLOCK_NB_SIZES];          \/\/\/< max number of coded coefficients$/;"	m	struct:WMACodecContext
coefs_finished	libavcodec/mjpegdec.h	/^    uint64_t coefs_finished[MAX_COMPONENTS]; \/\/\/< bitmask of which coefs have been completely decoded (progressive mode)$/;"	m	struct:MJpegDecodeContext
coefs_start	libavcodec/wma.h	/^    int coefs_start;                        \/\/\/< first coded coef$/;"	m	struct:WMACodecContext
coff	libavcodec/mpegaudiodec.c	/^    const uint8_t *coff; \/\/\/< channels offsets in output buffer$/;"	m	struct:MP3On4DecodeContext	file:
col	libavcodec/flashsv2enc.c	/^    uint8_t col, row, width, height;$/;"	m	struct:Block	file:
col_fieldoff	libavcodec/h264.h	/^    int col_fieldoff;$/;"	m	struct:H264Context
col_high	libavcodec/bink.c	/^    Tree           col_high[16];         \/\/\/< trees for decoding high nibble in "colours" data type$/;"	m	struct:BinkContext	file:
col_lastval	libavcodec/bink.c	/^    int            col_lastval;          \/\/\/< value of last decoded high nibble in "colours" data type$/;"	m	struct:BinkContext	file:
col_mv	libavcodec/cavs.h	/^    cavs_vector *col_mv;$/;"	m	struct:__anon207
col_parity	libavcodec/h264.h	/^    int col_parity;$/;"	m	struct:H264Context
col_type_base	libavcodec/cavs.h	/^    uint8_t *col_type_base;$/;"	m	struct:__anon207
col_zag	libavcodec/mimic.c	/^static const uint8_t col_zag[64] = {$/;"	v	file:
collisions	libavcodec/ass_split.h	/^    char *collisions;     \/**< how subtitles are moved to prevent collisions *\/$/;"	m	struct:__anon248
color	libavcodec/ass_split.h	/^    void (*color)(void *priv, unsigned int color, unsigned int color_id);$/;"	m	struct:__anon252
color	libavcodec/snow.c	/^    uint8_t color[3];$/;"	m	struct:BlockNode	file:
color	libavfilter/vf_pad.c	/^    uint8_t color[4];       \/\/\/< color expressed either in YUVA or RGBA colorspace for the padding area$/;"	m	struct:__anon52	file:
color	libavfilter/vsrc_color.c	/^    uint8_t color[4];$/;"	m	struct:__anon27	file:
color	libavutil/log.c	/^static const uint8_t color[] = {12,12,12,14,7,7,7};$/;"	v	file:
color	libavutil/log.c	/^static const uint8_t color[]={0x41,0x41,0x11,0x03,9,9,9};$/;"	v	file:
color15_7_factor	libavcodec/flashsv2enc.c	/^static const double color15_7_factor = 100;$/;"	v	file:
colorDiffCoeff	libavfilter/libmpcodecs/vf_sab.c	/^    int colorDiffCoeff[512];$/;"	m	struct:FilterParam	file:
colorMask	libavfilter/libmpcodecs/vf_2xsai.c	/^static uint32_t colorMask = 0xF7DEF7DE;$/;"	v	file:
color_config_props	libavfilter/vsrc_color.c	/^static int color_config_props(AVFilterLink *inlink)$/;"	f	file:
color_init	libavfilter/vsrc_color.c	/^static av_cold int color_init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
color_octets	libavcodec/smc.c	/^    unsigned char color_octets[COLORS_PER_TABLE * COCTET];$/;"	m	struct:SmcContext	file:
color_pairs	libavcodec/smc.c	/^    unsigned char color_pairs[COLORS_PER_TABLE * CPAIR];$/;"	m	struct:SmcContext	file:
color_prim	libavcodec/vc1.h	/^    int color_prim;       \/\/\/< 8bits, chroma coordinates of the color primaries$/;"	m	struct:VC1Context
color_primaries	libavcodec/avcodec.h	/^    enum AVColorPrimaries color_primaries;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorPrimaries
color_primaries	libavcodec/dirac.c	/^    enum AVColorPrimaries color_primaries;$/;"	m	struct:__anon95	typeref:enum:__anon95::AVColorPrimaries	file:
color_primaries	libavcodec/h264.h	/^    enum AVColorPrimaries color_primaries;$/;"	m	struct:SPS	typeref:enum:SPS::AVColorPrimaries
color_quads	libavcodec/smc.c	/^    unsigned char color_quads[COLORS_PER_TABLE * CQUAD];$/;"	m	struct:SmcContext	file:
color_range	libavcodec/avcodec.h	/^    enum AVColorRange color_range;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorRange
color_range	libavcodec/dirac.c	/^    enum AVColorRange   color_range;$/;"	m	struct:__anon94	typeref:enum:__anon94::AVColorRange	file:
color_request_frame	libavfilter/vsrc_color.c	/^static int color_request_frame(AVFilterLink *link)$/;"	f	file:
color_resolution	libavcodec/gifdec.c	/^    int color_resolution;$/;"	m	struct:GifState	file:
color_space	libavformat/matroskadec.c	/^    EbmlBin color_space;$/;"	m	struct:__anon357	file:
color_spec_index	libavcodec/dirac.h	/^    uint8_t color_spec_index;       \/\/\/< index into dirac_color_spec_presets[]$/;"	m	struct:__anon227
color_table	libavutil/parseutils.c	/^static ColorEntry color_table[] = {$/;"	v	file:
color_table_compare	libavutil/parseutils.c	/^static int color_table_compare(const void *lhs, const void *rhs)$/;"	f	file:
color_table_id	libavcodec/avcodec.h	/^    int color_table_id;$/;"	m	struct:AVCodecContext
color_trc	libavcodec/avcodec.h	/^    enum AVColorTransferCharacteristic color_trc;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorTransferCharacteristic
color_trc	libavcodec/dirac.c	/^    enum AVColorTransferCharacteristic color_trc;$/;"	m	struct:__anon95	typeref:enum:__anon95::AVColorTransferCharacteristic	file:
color_trc	libavcodec/h264.h	/^    enum AVColorTransferCharacteristic color_trc;$/;"	m	struct:SPS	typeref:enum:SPS::AVColorTransferCharacteristic
color_type	libavcodec/imgconvert.c	/^    uint8_t color_type;      \/**< color type (see FF_COLOR_xxx constants) *\/$/;"	m	struct:PixFmtInfo	file:
color_type	libavcodec/png.h	/^    int color_type;$/;"	m	struct:PNGDecContext
color_type	libavcodec/targa.c	/^    int color_type;$/;"	m	struct:TargaContext	file:
color_uninit	libavfilter/vsrc_color.c	/^static av_cold void color_uninit(AVFilterContext *ctx)$/;"	f	file:
colored_fputs	libavutil/log.c	/^static void colored_fputs(int level, const char *str){$/;"	f	file:
colors	libavcodec/flashsv2enc.c	/^    unsigned colors[128];$/;"	m	struct:Palette	file:
colorspace	libavcodec/avcodec.h	/^    enum AVColorSpace colorspace;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVColorSpace
colorspace	libavcodec/dirac.c	/^    enum AVColorSpace colorspace;$/;"	m	struct:__anon95	typeref:enum:__anon95::AVColorSpace	file:
colorspace	libavcodec/ffv1.c	/^    int colorspace;$/;"	m	struct:FFV1Context	file:
colorspace	libavcodec/h264.h	/^    enum AVColorSpace colorspace;$/;"	m	struct:SPS	typeref:enum:SPS::AVColorSpace
colorspace_type	libavcodec/snow.c	/^    int colorspace_type;$/;"	m	struct:SnowContext	file:
colour_description_present_flag	libavcodec/h264.h	/^    int colour_description_present_flag;$/;"	m	struct:SPS
cols	libavcodec/flashsv2enc.c	/^    int rows, cols;$/;"	m	struct:FlashSV2Context	file:
column_fidct_c	libavfilter/libmpcodecs/vf_fspp.c	/^static void column_fidct_c(int16_t* thr_adr, DCTELEM *data, DCTELEM *output, int cnt)$/;"	f	file:
column_fidct_mmx	libavfilter/libmpcodecs/vf_fspp.c	/^static void column_fidct_mmx(int16_t* thr_adr,  DCTELEM *data,  DCTELEM *output,  int cnt)$/;"	f	file:
column_fidct_s	libavfilter/libmpcodecs/vf_fspp.c	176;"	d	file:
column_fidct_s	libavfilter/libmpcodecs/vf_fspp.c	404;"	d	file:
column_loop	libavcodec/arm/jrevdct_arm.S	/^column_loop:$/;"	l
comb	libavfilter/libmpcodecs/pullup.h	/^    int (*comb)(unsigned char *, unsigned char *, int);$/;"	m	struct:pullup_context
comb	libavfilter/libmpcodecs/pullup.h	/^    int *comb;$/;"	m	struct:pullup_field
combine_planes	libavformat/matroskadec.c	/^    EbmlList combine_planes;$/;"	m	struct:__anon360	file:
comment	ffserver.c	/^    char comment[512];$/;"	m	struct:FFStream	file:
comment	libavfilter/libmpcodecs/libvo/video_out.h	/^    const char *comment;$/;"	m	struct:vo_info_s
comment	libavfilter/libmpcodecs/mpc_info.h	/^        const char *comment;$/;"	m	struct:mp_codec_info_s
comment	libavfilter/libmpcodecs/vf.h	/^    const char *comment;$/;"	m	struct:vf_info_s
commit_bitstream_and_slice_buffer	libavcodec/dxva2_h264.c	/^static int commit_bitstream_and_slice_buffer(AVCodecContext *avctx,$/;"	f	file:
commit_bitstream_and_slice_buffer	libavcodec/dxva2_mpeg2.c	/^static int commit_bitstream_and_slice_buffer(AVCodecContext *avctx,$/;"	f	file:
commit_bitstream_and_slice_buffer	libavcodec/dxva2_vc1.c	/^static int commit_bitstream_and_slice_buffer(AVCodecContext *avctx,$/;"	f	file:
commit_slices	libavcodec/vaapi.c	/^static int commit_slices(struct vaapi_context *vactx)$/;"	f	file:
common_end	libavcodec/ffv1.c	/^static av_cold int common_end(AVCodecContext *avctx){$/;"	f	file:
common_end	libavcodec/huffyuv.c	/^static int common_end(HYuvContext *s){$/;"	f	file:
common_end	libavcodec/snow.c	/^static av_cold void common_end(SnowContext *s){$/;"	f	file:
common_init	libavcodec/4xm.c	/^static av_cold void common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/asv1.c	/^static av_cold void common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/cljr.c	/^static av_cold void common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/ffv1.c	/^static av_cold int common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/h264.c	/^static av_cold void common_init(H264Context *h){$/;"	f	file:
common_init	libavcodec/huffyuv.c	/^static av_cold int common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/msmpeg4.c	/^static av_cold void common_init(MpegEncContext * s)$/;"	f	file:
common_init	libavcodec/snow.c	/^static av_cold int common_init(AVCodecContext *avctx){$/;"	f	file:
common_init	libavcodec/vcr1.c	/^static av_cold void common_init(AVCodecContext *avctx){$/;"	f	file:
common_init_after_header	libavcodec/snow.c	/^static int common_init_after_header(AVCodecContext *avctx){$/;"	f	file:
common_window	libavcodec/aac.h	/^    int common_window;        \/\/\/< Set if channels share a common 'IndividualChannelStream' in bitstream.$/;"	m	struct:__anon245
comp	libavcodec/eamad.c	/^static inline void comp(unsigned char *dst, int dst_stride,$/;"	f	file:
comp	libavcodec/flashsv2enc.c	/^    int use15_7, dist, comp;$/;"	m	struct:FlashSV2Context	file:
comp	libavcodec/j2kdec.c	/^   J2kComponent *comp;$/;"	m	struct:__anon97	file:
comp	libavcodec/j2kenc.c	/^   J2kComponent *comp;$/;"	m	struct:__anon62	file:
comp	libavcodec/zmbv.c	/^    int comp;$/;"	m	struct:ZmbvContext	file:
comp	libavutil/pixdesc.h	/^    AVComponentDescriptor comp[4];$/;"	m	struct:AVPixFmtDescriptor
comp_block	libavcodec/eamad.c	/^static inline void comp_block(MadContext *t, int mb_x, int mb_y,$/;"	f	file:
comp_buf	libavcodec/zmbvenc.c	/^    uint8_t *comp_buf, *work_buf;$/;"	m	struct:ZmbvEncContext	file:
comp_expr	libavfilter/vf_lut.c	/^    AVExpr *comp_expr[4];$/;"	m	struct:__anon23	file:
comp_expr_str	libavfilter/vf_lut.c	/^    char   *comp_expr_str[4];$/;"	m	struct:__anon23	file:
comp_index	libavcodec/mjpegdec.h	/^    int comp_index[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext
comp_size	libavcodec/flashsv2enc.c	/^    double comp_size;           \/\/\/< size of compressed data since last keyframe$/;"	m	struct:FlashSV2Context	file:
comp_size	libavcodec/zmbvenc.c	/^    int comp_size;$/;"	m	struct:ZmbvEncContext	file:
comp_types	libavcodec/truemotion1.c	/^typedef struct comp_types {$/;"	s	file:
comp_types	libavcodec/truemotion1.c	/^} comp_types;$/;"	t	typeref:struct:comp_types	file:
compare_sl	libavcodec/flashsv2enc.c	/^static int compare_sl(FlashSV2Context * s, Block * b, const uint8_t * src,$/;"	f	file:
compare_vlcspec	libavcodec/bitstream.c	/^static int compare_vlcspec(const void *a, const void *b)$/;"	f	file:
compcount	libavformat/thp.c	/^    int              compcount;$/;"	m	struct:ThpDemuxContext	file:
compensation_distance	libavcodec/resample2.c	/^    int compensation_distance;$/;"	m	struct:AVResampleContext	file:
compile	tests/fate.sh	/^compile()($/;"	f
completion_bitmask	libavcodec/mxpegdec.c	/^    uint8_t *completion_bitmask; \/* completion bitmask of macroblocks *\/$/;"	m	struct:MXpegDecodeContext	file:
complex	libavcodec/qdm2.c	/^    QDM2Complex *complex;$/;"	m	struct:__anon197	file:
complexityblur	libavcodec/avcodec.h	/^    float complexityblur;$/;"	m	struct:AVCodecContext
compoff	libavformat/thp.c	/^    int              compoff;$/;"	m	struct:ThpDemuxContext	file:
component_id	libavcodec/mjpegdec.h	/^    int component_id[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext
components	libavcodec/atrac3.c	/^    tonal_component   components[64];$/;"	m	struct:__anon130	file:
components	libavformat/thp.c	/^    unsigned char    components[16];$/;"	m	struct:ThpDemuxContext	file:
compose	libavfilter/libmpcodecs/vf_ow.c	/^static inline void compose(float *dst, float *srcL, float *srcH, int stride, int w){$/;"	f	file:
compose2D	libavfilter/libmpcodecs/vf_ow.c	/^static inline void compose2D(float *dst, float *srcL, float *srcH, int xstride, int ystride, int step, int w, int h){$/;"	f	file:
compose2D2	libavfilter/libmpcodecs/vf_ow.c	/^static void compose2D2(float *dst, float *src[4], float *temp[2], int stride, int step, int w, int h){$/;"	f	file:
composition_id	libavcodec/dvbsubdec.c	/^    int composition_id;$/;"	m	struct:DVBSubContext	file:
compr	libavcodec/tiff.c	/^    enum TiffCompr compr;$/;"	m	struct:TiffContext	typeref:enum:TiffContext::TiffCompr	file:
compr	libavcodec/tiffenc.c	/^    int compr;                          \/\/\/< compression level$/;"	m	struct:TiffEncoderContext	file:
compressed_data	libavcodec/qdm2.c	/^    const uint8_t *compressed_data;$/;"	m	struct:__anon200	file:
compressed_size	libavcodec/qdm2.c	/^    int compressed_size;$/;"	m	struct:__anon200	file:
compression	libavcodec/iff.c	/^    unsigned  compression;  \/\/\/< delta compression method used$/;"	m	struct:__anon114	file:
compression	libavcodec/lcldec.c	/^    int compression;$/;"	m	struct:LclDecContext	file:
compression	libavcodec/lclenc.c	/^    int compression;$/;"	m	struct:LclEncContext	file:
compression	libavcodec/truemotion1.c	/^    int compression;$/;"	m	struct:TrueMotion1Context	file:
compression	libavcodec/truemotion1.c	/^    uint8_t compression;$/;"	m	struct:frame_header	file:
compression	libavformat/matroskadec.c	/^    MatroskaTrackCompression compression;$/;"	m	struct:__anon356	file:
compression_level	libavcodec/alacenc.c	/^    int compression_level;$/;"	m	struct:AlacEncodeContext	file:
compression_level	libavcodec/apedec.c	/^    int compression_level;                   \/\/\/< compression levels$/;"	m	struct:APEContext	file:
compression_level	libavcodec/avcodec.h	/^    int compression_level;$/;"	m	struct:AVCodecContext
compression_level	libavcodec/flacenc.c	/^    int compression_level;$/;"	m	struct:CompressionOptions	file:
compression_type	libavcodec/png.h	/^    int compression_type;$/;"	m	struct:PNGDecContext
compression_type	libavcodec/targa.c	/^    int compression_type;$/;"	m	struct:TargaContext	file:
compression_types	libavcodec/truemotion1.c	/^static const comp_types compression_types[17] = {$/;"	v	file:
compressiontype	libavformat/ape.c	/^    uint16_t compressiontype;$/;"	m	struct:__anon335	file:
compute_affinity	libavfilter/libmpcodecs/pullup.c	/^static void compute_affinity(struct pullup_context *c, struct pullup_field *f)$/;"	f	file:
compute_antialias	libavcodec/mpegaudiodec.c	/^static void compute_antialias(MPADecodeContext *s, GranuleDef *g)$/;"	f	file:
compute_avg_bitrate	libavformat/movenc.c	/^static unsigned compute_avg_bitrate(MOVTrack *track)$/;"	f	file:
compute_bandwidth	ffserver.c	/^static void compute_bandwidth(void)$/;"	f	file:
compute_bit_allocation	libavcodec/ac3enc.c	/^static int compute_bit_allocation(AC3EncodeContext *s)$/;"	f	file:
compute_bit_allocation	libavcodec/mpegaudioenc.c	/^static void compute_bit_allocation(MpegAudioContext *s,$/;"	f	file:
compute_breaks	libavfilter/libmpcodecs/pullup.c	/^static void compute_breaks(struct pullup_context *c, struct pullup_field *f0)$/;"	f	file:
compute_chapters_end	libavformat/utils.c	/^static void compute_chapters_end(AVFormatContext *s)$/;"	f	file:
compute_coupling_strategy	libavcodec/ac3enc.c	/^static void compute_coupling_strategy(AC3EncodeContext *s)$/;"	f	file:
compute_datarate	ffserver.c	/^static int compute_datarate(DataRateData *drd, int64_t count)$/;"	f	file:
compute_exp_strategy	libavcodec/ac3enc.c	/^static void compute_exp_strategy(AC3EncodeContext *s)$/;"	f	file:
compute_frame_duration	libavformat/utils.c	/^static void compute_frame_duration(int *pnum, int *pden, AVStream *st,$/;"	f	file:
compute_gammaval	libavfilter/vf_lut.c	/^static double compute_gammaval(void *opaque, double gamma)$/;"	f	file:
compute_imdct	libavcodec/mpegaudiodec.c	/^static void compute_imdct(MPADecodeContext *s,$/;"	f	file:
compute_lpc_coefs	libavcodec/lpc.h	/^static inline int compute_lpc_coefs(const LPC_TYPE *autoc, int max_order,$/;"	f
compute_mantissa_size	libavcodec/ac3dsp.h	/^    int (*compute_mantissa_size)(uint16_t mant_cnt[6][16]);$/;"	m	struct:AC3DSPContext
compute_metric	libavfilter/libmpcodecs/pullup.c	/^static void compute_metric(struct pullup_context *c,$/;"	f	file:
compute_mod	ffplay.c	/^static inline int compute_mod(int a, int b)$/;"	f	file:
compute_pkt_fields	libavformat/utils.c	/^static void compute_pkt_fields(AVFormatContext *s, AVStream *st,$/;"	f	file:
compute_pkt_fields2	libavformat/utils.c	/^static int compute_pkt_fields2(AVFormatContext *s, AVStream *st, AVPacket *pkt){$/;"	f	file:
compute_real_filename	ffserver.c	/^static void compute_real_filename(char *filename, int max_size)$/;"	f	file:
compute_rematrixing_strategy	libavcodec/ac3enc.h	/^    void (*compute_rematrixing_strategy)(struct AC3EncodeContext *s);$/;"	m	struct:AC3EncodeContext
compute_rematrixing_strategy	libavcodec/ac3enc_template.c	/^void AC3_NAME(compute_rematrixing_strategy)(AC3EncodeContext *s)$/;"	f
compute_scale_factors	libavcodec/mpegaudioenc.c	/^static void compute_scale_factors(unsigned char scale_code[SBLIMIT],$/;"	f	file:
compute_status	ffserver.c	/^static void compute_status(HTTPContext *c)$/;"	f	file:
compute_stereo	libavcodec/mpegaudiodec.c	/^static void compute_stereo(MPADecodeContext *s,$/;"	f	file:
compute_svector	libavcodec/qcelpdec.c	/^static void compute_svector(QCELPContext *q, const float *gain,$/;"	f	file:
compute_target_time	ffplay.c	/^static double compute_target_time(double frame_current_pts, VideoState *is)$/;"	f	file:
con	libavutil/log.c	/^static HANDLE con;$/;"	v	file:
concat_close	libavformat/concat.c	/^static av_cold int concat_close(URLContext *h)$/;"	f	file:
concat_data	libavformat/concat.c	/^struct concat_data {$/;"	s	file:
concat_nodes	libavformat/concat.c	/^struct concat_nodes {$/;"	s	file:
concat_open	libavformat/concat.c	/^static av_cold int concat_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
concat_read	libavformat/concat.c	/^static int concat_read(URLContext *h, unsigned char *buf, int size)$/;"	f	file:
concat_seek	libavformat/concat.c	/^static int64_t concat_seek(URLContext *h, int64_t pos, int whence)$/;"	f	file:
concatenate_packet	libavcodec/libtheoraenc.c	/^static int concatenate_packet(unsigned int* offset,$/;"	f	file:
concealment_motion_vectors	libavcodec/mpegvideo.h	/^    int concealment_motion_vectors;$/;"	m	struct:MpegEncContext
cond	ffplay.c	/^    SDL_cond *cond;$/;"	m	struct:PacketQueue	file:
cond_release_buffer	libavcodec/eatgv.c	/^static void cond_release_buffer(AVFrame *pic)$/;"	f	file:
condover	libavcodec/vc1.h	/^    uint8_t condover;$/;"	m	struct:VC1Context
config	libavfilter/libmpcodecs/libvo/video_out.h	/^    int (*config)(uint32_t width, uint32_t height, uint32_t d_width,$/;"	m	struct:vo_functions_s
config	libavfilter/libmpcodecs/vf.h	/^    int (*config)(struct vf_instance *vf,$/;"	m	struct:vf_instance
config	libavfilter/libmpcodecs/vf_2xsai.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_blackframe.c	/^static int config(struct vf_instance *vf, int width, int height, int d_width,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_boxblur.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_cropdetect.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_delogo.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_denoise3d.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_detc.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_dint.c	/^static int config (struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_down3dright.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_dsize.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_field.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_fil.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_filmdint.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_fspp.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_geq.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_gradfun.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_hqdn3d.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_ilpack.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_kerndeint.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_noise.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_ow.c	/^static int config(struct vf_instance *vf, int width, int height, int d_width, int d_height, unsigned int flags, unsigned int outfmt){$/;"	f	file:
config	libavfilter/libmpcodecs/vf_palette.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_perspective.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_pp7.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_pullup.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_qp.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_rectangle.c	/^config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_remove_logo.c	/^static int config(struct vf_instance *vf, int width, int height, int d_width, int d_height, unsigned int flags, unsigned int outfmt)$/;"	f	file:
config	libavfilter/libmpcodecs/vf_rgbtest.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_rotate.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_sab.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_screenshot.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_smartblur.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_softpulldown.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_spp.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_test.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_tile.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_tinterlace.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_unsharp.c	/^static int config( struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_uspp.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_yuvcsp.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config	libavfilter/libmpcodecs/vf_yvu9.c	/^static int config(struct vf_instance *vf,$/;"	f	file:
config_filename	ffserver.c	/^static const char *config_filename = "\/etc\/ffserver.conf";$/;"	v	file:
config_id	libavcodec/vaapi.h	/^    uint32_t config_id;$/;"	m	struct:vaapi_context
config_inprops	libavfilter/vf_mp.c	/^static int config_inprops(AVFilterLink *inlink)$/;"	f	file:
config_input	libavfilter/vf_crop.c	/^static int config_input(AVFilterLink *link)$/;"	f	file:
config_input	libavfilter/vf_cropdetect.c	/^static int config_input(AVFilterLink *inlink)$/;"	f	file:
config_input	libavfilter/vf_drawbox.c	/^static int config_input(AVFilterLink *inlink)$/;"	f	file:
config_input	libavfilter/vf_drawtext.c	/^static int config_input(AVFilterLink *inlink)$/;"	f	file:
config_input	libavfilter/vf_fieldorder.c	/^static int config_input(AVFilterLink *inlink)$/;"	f	file:
config_input	libavfilter/vf_gradfun.c	/^static int config_input(AVFilterLink *inlink)$/;"	f	file:
config_input	libavfilter/vf_hqdn3d.c	/^static int config_input(AVFilterLink *inlink)$/;"	f	file:
config_input	libavfilter/vf_pad.c	/^static int config_input(AVFilterLink *inlink)$/;"	f	file:
config_input	libavfilter/vf_select.c	/^static int config_input(AVFilterLink *inlink)$/;"	f	file:
config_input	libavfilter/vf_setpts.c	/^static int config_input(AVFilterLink *inlink)$/;"	f	file:
config_input	libavfilter/vf_vflip.c	/^static int config_input(AVFilterLink *link)$/;"	f	file:
config_input_main	libavfilter/vf_overlay.c	/^static int config_input_main(AVFilterLink *inlink)$/;"	f	file:
config_input_overlay	libavfilter/vf_overlay.c	/^static int config_input_overlay(AVFilterLink *inlink)$/;"	f	file:
config_input_props	libavfilter/vf_frei0r.c	/^static int config_input_props(AVFilterLink *inlink)$/;"	f	file:
config_outprops	libavfilter/vf_mp.c	/^static int config_outprops(AVFilterLink *outlink)$/;"	f	file:
config_output	libavfilter/vf_crop.c	/^static int config_output(AVFilterLink *link)$/;"	f	file:
config_output	libavfilter/vf_overlay.c	/^static int config_output(AVFilterLink *outlink)$/;"	f	file:
config_output	libavfilter/vf_pad.c	/^static int config_output(AVFilterLink *outlink)$/;"	f	file:
config_output_props	libavfilter/vf_settb.c	/^static int config_output_props(AVFilterLink *outlink)$/;"	f	file:
config_output_props	libavfilter/vsrc_movie.c	/^static int config_output_props(AVFilterLink *outlink)$/;"	f	file:
config_props	libavfilter/asrc_anullsrc.c	/^static int config_props(AVFilterLink *outlink)$/;"	f	file:
config_props	libavfilter/avfilter.h	/^    int (*config_props)(AVFilterLink *link);$/;"	m	struct:AVFilterPad
config_props	libavfilter/vf_fade.c	/^static int config_props(AVFilterLink *inlink)$/;"	f	file:
config_props	libavfilter/vf_hflip.c	/^static int config_props(AVFilterLink *inlink)$/;"	f	file:
config_props	libavfilter/vf_lut.c	/^static int config_props(AVFilterLink *inlink)$/;"	f	file:
config_props	libavfilter/vf_pixdesctest.c	/^static int config_props(AVFilterLink *inlink)$/;"	f	file:
config_props	libavfilter/vf_scale.c	/^static int config_props(AVFilterLink *outlink)$/;"	f	file:
config_props	libavfilter/vf_slicify.c	/^static int config_props(AVFilterLink *link)$/;"	f	file:
config_props	libavfilter/vf_unsharp.c	/^static int config_props(AVFilterLink *link)$/;"	f	file:
config_props	libavfilter/vsrc_buffer.c	/^static int config_props(AVFilterLink *link)$/;"	f	file:
config_props	libavfilter/vsrc_nullsrc.c	/^static int config_props(AVFilterLink *outlink)$/;"	f	file:
config_props_output	libavfilter/vf_transpose.c	/^static int config_props_output(AVFilterLink *outlink)$/;"	f	file:
configure	tests/fate.sh	/^configure()($/;"	f
configure_video_filters	ffmpeg.c	/^static int configure_video_filters(AVInputStream *ist, AVOutputStream *ost)$/;"	f	file:
configure_video_filters	ffmpeg/ffmpeg.c	/^static int configure_video_filters(AVInputStream *ist, AVOutputStream *ost)$/;"	f	file:
configure_video_filters	ffplay.c	/^static int configure_video_filters(AVFilterGraph *graph, VideoState *is, const char *vfilters)$/;"	f	file:
connectedto	libavdevice/dshow.h	/^    IPin *connectedto;$/;"	m	struct:libAVPin
conns_served	ffserver.c	/^    int conns_served;$/;"	m	struct:FFStream	file:
const	libavcodec/arm/fft_fixed_neon.S	/^const   coefs, align=4$/;"	l
const	libavcodec/arm/fft_fixed_neon.S	/^const   fft_fixed_tab_neon$/;"	l
const	libavcodec/arm/jrevdct_arm.S	/^const const_array$/;"	l
const	libavcodec/arm/vp8dsp_neon.S	/^const   subpel_filters, align=4$/;"	l
const_block	libavcodec/alsdec.c	/^    int          *const_block;      \/\/\/< if true, this is a constant value block$/;"	m	struct:__anon153	file:
const_block	libavcodec/alsdec.c	/^    int *const_block;               \/\/\/< contains const_block flags for all channels$/;"	m	struct:__anon152	file:
const_index	libavutil/eval.c	/^        int const_index;$/;"	m	union:AVExpr::__anon306	file:
const_names	libavutil/eval.c	/^    const char * const *const_names;          \/\/ NULL terminated$/;"	m	struct:Parser	file:
const_names	libavutil/eval.c	/^static const char *const_names[] = {$/;"	v	file:
const_names	libavutil/opt.c	/^static const char * const const_names[] = {$/;"	v	file:
const_values	libavutil/eval.c	/^    const double *const_values;$/;"	m	struct:Parser	file:
const_values	libavutil/eval.c	/^static double const_values[] = {$/;"	v	file:
const_values	libavutil/opt.c	/^static const double const_values[] = {$/;"	v	file:
constants	libavcodec/ppc/idct_altivec.c	/^static const vec_s16 constants[5] = {$/;"	v	file:
constants	libavcodec/ppc/vp3dsp_altivec.c	/^static const vec_s16 constants =$/;"	v	file:
constrained_intra_pred	libavcodec/h264.h	/^    int constrained_intra_pred; \/\/\/< constrained_intra_pred_flag$/;"	m	struct:PPS
constraint_set_flags	libavcodec/h264.h	/^    int constraint_set_flags;          \/\/\/< constraint_set[0-3]_flag$/;"	m	struct:SPS
construct	libavfilter/vf_frei0r.c	/^    f0r_construct_f       construct;$/;"	m	struct:Frei0rContext	file:
construct_perm_table	libavcodec/twinvq.c	/^static av_cold void construct_perm_table(TwinContext *tctx,enum FrameType ftype)$/;"	f	file:
container_ul	libavformat/mxfenc.c	/^    UID container_ul;$/;"	m	struct:__anon459	file:
content_length	libavformat/rtsp.h	/^    int content_length;$/;"	m	struct:RTSPMessageHeader
context	libavcodec/huffyuv.c	/^    int context;$/;"	m	struct:HYuvContext	file:
context	libavcodec/libxvidff.c	/^    struct xvid_context *context;   \/**< Pointer to private context *\/$/;"	m	struct:xvid_ff_pass1	typeref:struct:xvid_ff_pass1::xvid_context	file:
context_count	libavcodec/ffv1.c	/^    int context_count;$/;"	m	struct:PlaneContext	file:
context_count	libavcodec/ffv1.c	/^    int context_count[MAX_QUANT_TABLES];$/;"	m	struct:FFV1Context	file:
context_id	libavcodec/vaapi.h	/^    uint32_t context_id;$/;"	m	struct:vaapi_context
context_init	libavcodec/h264.c	/^static int context_init(H264Context *h){$/;"	f	file:
context_initialized	libavcodec/mpegvideo.h	/^    int context_initialized;$/;"	m	struct:MpegEncContext
context_model	libavcodec/avcodec.h	/^    int context_model;$/;"	m	struct:AVCodecContext
context_to_name	libavcodec/options.c	/^static const char* context_to_name(void* ptr) {$/;"	f	file:
context_to_name	libavcodec/resample.c	/^static const char *context_to_name(void *ptr)$/;"	f	file:
context_to_name	libpostproc/postprocess.c	/^static const char * context_to_name(void * ptr) {$/;"	f	file:
continue_buffered_image	libavfilter/libmpcodecs/vf.h	/^    int (*continue_buffered_image)(struct vf_instance *vf);$/;"	m	struct:vf_instance
continue_pes	libavformat/pva.c	/^    int continue_pes;$/;"	m	struct:__anon461	file:
contrast	libavfilter/libmpcodecs/vf_eq.c	/^        int contrast;$/;"	m	struct:vf_priv_s	file:
contrast	libavfilter/libmpcodecs/vf_eq2.c	/^  double        contrast;$/;"	m	struct:vf_priv_s	file:
contrast	libswscale/swscale_internal.h	/^    int contrast, brightness, saturation;    \/\/ for sws_getColorspaceDetails$/;"	m	struct:SwsContext
control	libavcodec/truemotion1.c	/^    uint8_t control;$/;"	m	struct:frame_header	file:
control	libavdevice/dshow.c	/^    IMediaControl *control;$/;"	m	struct:dshow_ctx	file:
control	libavfilter/libmpcodecs/libvo/video_out.h	/^    int (*control)(uint32_t request, void *data, ...);$/;"	m	struct:vo_functions_s
control	libavfilter/libmpcodecs/vf.h	/^    int (*control)(struct vf_instance *vf,$/;"	m	struct:vf_instance
control	libavfilter/libmpcodecs/vf_blackframe.c	/^static int control(struct vf_instance *vf, int request, void* data){$/;"	f	file:
control	libavfilter/libmpcodecs/vf_eq.c	/^static int control(struct vf_instance *vf, int request, void* data)$/;"	f	file:
control	libavfilter/libmpcodecs/vf_eq2.c	/^int control (vf_instance_t *vf, int request, void *data)$/;"	f	file:
control	libavfilter/libmpcodecs/vf_fspp.c	/^static int control(struct vf_instance *vf, int request, void* data)$/;"	f	file:
control	libavfilter/libmpcodecs/vf_harddup.c	/^static int control(struct vf_instance *vf, int request, void* data)$/;"	f	file:
control	libavfilter/libmpcodecs/vf_hue.c	/^static int control(struct vf_instance *vf, int request, void* data)$/;"	f	file:
control	libavfilter/libmpcodecs/vf_kerndeint.c	/^static int control(struct vf_instance *vf, int request, void* data){$/;"	f	file:
control	libavfilter/libmpcodecs/vf_pp7.c	/^static int control(struct vf_instance *vf, int request, void* data){$/;"	f	file:
control	libavfilter/libmpcodecs/vf_rectangle.c	/^control(struct vf_instance *vf, int request, void *data)$/;"	f	file:
control	libavfilter/libmpcodecs/vf_screenshot.c	/^static int control (vf_instance_t *vf, int request, void *data)$/;"	f	file:
control	libavfilter/libmpcodecs/vf_softskip.c	/^static int control(struct vf_instance *vf, int request, void* data)$/;"	f	file:
control	libavfilter/libmpcodecs/vf_spp.c	/^static int control(struct vf_instance *vf, int request, void* data){$/;"	f	file:
control	libavfilter/libmpcodecs/vf_uspp.c	/^static int control(struct vf_instance *vf, int request, void* data){$/;"	f	file:
control_transport	libavformat/rtsp.h	/^    enum RTSPControlTransport control_transport;$/;"	m	struct:RTSPState	typeref:enum:RTSPState::RTSPControlTransport
control_uri	libavformat/rtsp.h	/^    char control_uri[1024];$/;"	m	struct:RTSPState
control_url	libavformat/rtsp.h	/^    char control_url[1024];   \/**< url for this stream (from SDP) *\/$/;"	m	struct:RTSPStream
convergence_duration	libavcodec/avcodec.h	/^    int64_t convergence_duration;$/;"	m	struct:AVCodecParserContext
convergence_duration	libavcodec/avcodec.h	/^    int64_t convergence_duration;$/;"	m	struct:AVPacket
conversion_map	libavfilter/vf_mp.c	/^} conversion_map[] = {$/;"	v	typeref:struct:__anon46	file:
convert_alignment	libavcodec/ass_split.c	/^static int convert_alignment(void *dest, const char *buf, int len)$/;"	f	file:
convert_color	libavcodec/ass_split.c	/^static int convert_color(void *dest, const char *buf, int len)$/;"	f	file:
convert_ctx	libavcodec/resample.c	/^    AVAudioConvert *convert_ctx[2];$/;"	m	struct:ReSampleContext	file:
convert_flt	libavcodec/ass_split.c	/^static int convert_flt(void *dest, const char *buf, int len)$/;"	f	file:
convert_format_parameters	libavformat/utils.c	/^static AVDictionary *convert_format_parameters(AVFormatParameters *ap)$/;"	f	file:
convert_from_rgb32	libavcodec/pngenc.c	/^static void convert_from_rgb32(uint8_t *dst, const uint8_t *src, int width)$/;"	f	file:
convert_func	libavcodec/ass_split.c	/^static const ASSConvertFunc convert_func[] = {$/;"	v	file:
convert_int	libavcodec/ass_split.c	/^static int convert_int(void *dest, const char *buf, int len)$/;"	f	file:
convert_mask_to_strength_mask	libavfilter/libmpcodecs/vf_remove_logo.c	/^static void convert_mask_to_strength_mask(vf_instance_t * vf, pgm_structure * mask)$/;"	f	file:
convert_str	libavcodec/ass_split.c	/^static int convert_str(void *dest, const char *buf, int len)$/;"	f	file:
convert_timestamp	libavcodec/ass_split.c	/^static int convert_timestamp(void *dest, const char *buf, int len)$/;"	f	file:
convert_to_rgb32	libavcodec/pngdec.c	/^static void convert_to_rgb32(uint8_t *dst, const uint8_t *src, int width, int loco)$/;"	f	file:
convert_to_rgb32_loco	libavcodec/pngdec.c	/^static av_always_inline void convert_to_rgb32_loco(uint8_t *dst, const uint8_t *src, int width, int loco)$/;"	f	file:
convert_yv12	libavfilter/libmpcodecs/vf_remove_logo.c	/^static void convert_yv12(const vf_instance_t * const vf, const char * const source, const int source_stride,$/;"	f	file:
convolute_with_sparse	libavcodec/sipr.c	/^static void convolute_with_sparse(float *out, const AMRFixed *pulses,$/;"	f	file:
convolve	libavcodec/ra288.c	/^static void convolve(float *tgt, const float *src, int len, int n)$/;"	f	file:
cook	libavcodec/cook.c	/^typedef struct cook {$/;"	s	file:
cook_count_channels	libavcodec/cook.c	/^static av_cold int cook_count_channels(unsigned int mask){$/;"	f	file:
cook_decode_close	libavcodec/cook.c	/^static av_cold int cook_decode_close(AVCodecContext *avctx)$/;"	f	file:
cook_decode_frame	libavcodec/cook.c	/^static int cook_decode_frame(AVCodecContext *avctx,$/;"	f	file:
cook_decode_init	libavcodec/cook.c	/^static av_cold int cook_decode_init(AVCodecContext *avctx)$/;"	f	file:
cook_gains	libavcodec/cook.c	/^} cook_gains;$/;"	t	typeref:struct:__anon229	file:
cookie	libavformat/rtpdec_h264.c	/^    unsigned long cookie;       \/\/\/< sanity check, to make sure we get the pointer we're expecting.$/;"	m	struct:PayloadContext	file:
cookversion	libavcodec/cook.c	/^    int                 cookversion;$/;"	m	struct:__anon230	file:
coord	libavcodec/j2k.h	/^    uint16_t coord[2][2]; \/\/\/< border coordinates {{x0, x1}, {y0, y1}}$/;"	m	struct:__anon215
coord	libavcodec/j2k.h	/^    uint16_t coord[2][2]; \/\/\/< border coordinates {{x0, x1}, {y0, y1}}$/;"	m	struct:__anon216
coord	libavcodec/j2k.h	/^   uint16_t coord[2][2]; \/\/\/< border coordinates {{x0, x1}, {y0, y1}}$/;"	m	struct:__anon217
copy	libavutil/lzo.c	/^static inline void copy(LZOContext *c, int cnt) {$/;"	f	file:
copyPlane	libswscale/swscale_unscaled.c	/^static void copyPlane(const uint8_t *src, int srcStride,$/;"	f	file:
copy_backptr	libavutil/lzo.c	/^static inline void copy_backptr(LZOContext *c, int back, int cnt) {$/;"	f	file:
copy_bits	libavcodec/mpeg4audio.c	/^static av_always_inline unsigned int copy_bits(PutBitContext *pb,$/;"	f	file:
copy_bits	libavcodec/wmavoice.c	/^static void copy_bits(PutBitContext *pb,$/;"	f	file:
copy_block	libavcodec/c93.c	/^static inline int copy_block(AVCodecContext *avctx, uint8_t *to,$/;"	f	file:
copy_block16	libavcodec/dsputil.h	/^static inline void copy_block16(uint8_t *dst, const uint8_t *src, int dstStride, int srcStride, int h)$/;"	f
copy_block16	libavcodec/dsputil_template.c	/^static inline void FUNC(copy_block16)(uint8_t *dst, const uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block17	libavcodec/dsputil.h	/^static inline void copy_block17(uint8_t *dst, const uint8_t *src, int dstStride, int srcStride, int h)$/;"	f
copy_block2	libavcodec/dsputil.h	/^static inline void copy_block2(uint8_t *dst, const uint8_t *src, int dstStride, int srcStride, int h)$/;"	f
copy_block2	libavcodec/dsputil_template.c	/^static inline void FUNC(copy_block2)(uint8_t *dst, const uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block4	libavcodec/dsputil.h	/^static inline void copy_block4(uint8_t *dst, const uint8_t *src, int dstStride, int srcStride, int h)$/;"	f
copy_block4	libavcodec/dsputil_template.c	/^static inline void FUNC(copy_block4)(uint8_t *dst, const uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block8	libavcodec/dsputil.h	/^static inline void copy_block8(uint8_t *dst, const uint8_t *src, int dstStride, int srcStride, int h)$/;"	f
copy_block8	libavcodec/dsputil_template.c	/^static inline void FUNC(copy_block8)(uint8_t *dst, const uint8_t *src, int dstStride, int srcStride, int h)$/;"	f	file:
copy_block9	libavcodec/dsputil.h	/^static inline void copy_block9(uint8_t *dst, const uint8_t *src, int dstStride, int srcStride, int h)$/;"	f
copy_chapters	ffmpeg.c	/^static int copy_chapters(int infile, int outfile)$/;"	f	file:
copy_chapters	ffmpeg/ffmpeg.c	/^static int copy_chapters(int infile, int outfile)$/;"	f	file:
copy_context_after_encode	libavcodec/mpegvideo_enc.c	/^static inline void copy_context_after_encode(MpegEncContext *d, MpegEncContext *s, int type){$/;"	f	file:
copy_context_before_encode	libavcodec/mpegvideo_enc.c	/^static inline void copy_context_before_encode(MpegEncContext *d, MpegEncContext *s, int type){$/;"	f	file:
copy_field	libavfilter/libmpcodecs/pullup.c	/^static void copy_field(struct pullup_context *c, struct pullup_buffer *dest,$/;"	f	file:
copy_fields	libavcodec/h264.c	1178;"	d	file:
copy_fields	libavcodec/pthread.c	378;"	d	file:
copy_fields	libavcodec/pthread.c	397;"	d	file:
copy_fields	libavcodec/vp3.c	1801;"	d	file:
copy_fields	libavcodec/vp3.c	1841;"	d	file:
copy_frame	libavcodec/crystalhd.c	/^static inline CopyRet copy_frame(AVCodecContext *avctx,$/;"	f	file:
copy_frame	libavcodec/j2kenc.c	/^static void copy_frame(J2kEncoderContext *s)$/;"	f	file:
copy_frame	libavcodec/nuv.c	/^static void copy_frame(AVFrame *f, const uint8_t *src,$/;"	f	file:
copy_frame_16	libavcodec/cscd.c	/^static void copy_frame_16(AVFrame *f, const uint8_t *src,$/;"	f	file:
copy_frame_16	libavcodec/cscd.c	64;"	d	file:
copy_frame_32	libavcodec/cscd.c	/^static void copy_frame_32(AVFrame *f, const uint8_t *src,$/;"	f	file:
copy_frame_32	libavcodec/cscd.c	65;"	d	file:
copy_frame_default	libavcodec/cscd.c	/^static void copy_frame_default(AVFrame *f, const uint8_t *src, int src_stride,$/;"	f	file:
copy_from	libavcodec/interplayvideo.c	/^static int copy_from(IpvideoContext *s, AVFrame *src, int delta_x, int delta_y)$/;"	f	file:
copy_history	libavcodec/dca.c	/^    int copy_history;           \/\/\/< copy history$/;"	m	struct:__anon93	file:
copy_image	libavfilter/libmpcodecs/vf_detc.c	/^static void copy_image(mp_image_t *dmpi, mp_image_t *mpi, int field)$/;"	f	file:
copy_image	libavfilter/libmpcodecs/vf_ivtc.c	/^static void copy_image(mp_image_t *dmpi, mp_image_t *mpi, int field)$/;"	f	file:
copy_initial_nonkeyframes	ffmpeg.c	/^static int copy_initial_nonkeyframes = 0;$/;"	v	file:
copy_initial_nonkeyframes	ffmpeg/ffmpeg.c	/^static int copy_initial_nonkeyframes = 0;$/;"	v	file:
copy_merge_fields	libavfilter/libmpcodecs/vf_filmdint.c	/^copy_merge_fields(struct vf_priv_s *p, mp_image_t *dmpi,$/;"	f	file:
copy_mpi	libavfilter/libmpcodecs/mp_image.c	/^void copy_mpi(mp_image_t *dmpi, mp_image_t *mpi) {$/;"	f
copy_parameter_set	libavcodec/h264.c	/^static void copy_parameter_set(void **to, void **from, int count, int size)$/;"	f	file:
copy_picture_attributes	libavcodec/mpegvideo_enc.c	/^static void copy_picture_attributes(MpegEncContext *s, AVFrame *dst, AVFrame *src){$/;"	f	file:
copy_picture_range	libavcodec/h264.c	/^static void copy_picture_range(Picture **to, Picture **from, int count, MpegEncContext *new_base, MpegEncContext *old_base)$/;"	f	file:
copy_rac_state	libavcodec/snow.c	/^static inline void copy_rac_state(RangeCoder *d, RangeCoder *s){$/;"	f	file:
copy_region	libavcodec/flashsv.c	/^static void copy_region(uint8_t *sptr, uint8_t *dptr,$/;"	f	file:
copy_region_enc	libavcodec/flashsvenc.c	/^static int copy_region_enc(uint8_t *sptr, uint8_t *dptr, int dx, int dy,$/;"	f	file:
copy_samples	libavcodec/flacenc.c	/^static void copy_samples(FlacEncodeContext *s, const int16_t *samples)$/;"	f	file:
copy_sbr_grid	libavcodec/aacsbr.c	/^static void copy_sbr_grid(SBRData *dst, const SBRData *src) {$/;"	f	file:
copy_superblock	libavcodec/escape124.c	/^static void copy_superblock(uint16_t* dest, unsigned dest_stride,$/;"	f	file:
copy_tb	ffmpeg.c	/^static int copy_tb= 0;$/;"	v	file:
copy_tb	ffmpeg/ffmpeg.c	/^static int copy_tb= 0;$/;"	v	file:
copy_ts	ffmpeg.c	/^static int copy_ts= 0;$/;"	v	file:
copy_ts	ffmpeg/ffmpeg.c	/^static int copy_ts= 0;$/;"	v	file:
copyop	libavfilter/libmpcodecs/vf_divtc.c	/^static int copyop(unsigned char *d, unsigned char *s, int bpl, int h, int dstride, int sstride, int dummy) {$/;"	f	file:
copyright	ffserver.c	/^    char copyright[512];$/;"	m	struct:FFStream	file:
copyright	libavcodec/ac3.h	/^    int copyright;$/;"	m	struct:AC3EncOptions
cor0	libavcodec/aac.h	/^    float cor0;$/;"	m	struct:__anon237
cor1	libavcodec/aac.h	/^    float cor1;$/;"	m	struct:__anon237
core_ext_mask	libavcodec/dca.c	/^    int core_ext_mask;          \/\/\/< present extensions in the core substream$/;"	m	struct:__anon93	file:
core_yuv420_rgb	libswscale/bfin/yuv2rgb_bfin.c	/^static int core_yuv420_rgb(SwsContext *c,$/;"	f	file:
corr	libavcodec/ivi_common.h	/^    uint8_t         corr[61*2];     \/\/\/< rvmap correction pairs$/;"	m	struct:__anon107
correction	libavcodec/aacpsy.c	/^        float correction; \/\/\/< PE correction factor$/;"	m	struct:AacPsyContext::__anon255	file:
correction	libavcodec/indeo3data.h	/^static const uint32_t correction[] = {$/;"	v
correctionhighorder	libavcodec/indeo3data.h	/^static const uint32_t correctionhighorder[] = {$/;"	v
correctionloworder	libavcodec/indeo3data.h	/^static const uint32_t correctionloworder[] = {$/;"	v
corrector_type	libavcodec/indeo3.c	/^    uint8_t *corrector_type;$/;"	m	struct:Indeo3DecodeContext	file:
corrector_type_0	libavcodec/indeo3.c	/^static const uint8_t corrector_type_0[24] = {$/;"	v	file:
corrector_type_2	libavcodec/indeo3.c	/^static const uint8_t corrector_type_2[8] = { 9, 7, 6, 8, 5, 4, 3, 2 };$/;"	v	file:
correlate	libavcodec/snow.c	/^static void correlate(SnowContext *s, SubBand *b, IDWTELEM *src, int stride, int inverse, int use_median){$/;"	f	file:
correlate_slice_buffered	libavcodec/snow.c	/^static void correlate_slice_buffered(SnowContext *s, slice_buffer * sb, SubBand *b, IDWTELEM *src, int stride, int inverse, int use_median, int start_y, int end_y){$/;"	f	file:
cos	libavcodec/wmavoice.c	/^    float sin[511], cos[511];     \/\/\/< 8-bit cosine\/sine windows over [-pi,pi]$/;"	m	struct:__anon157	file:
cos_table	libavcodec/dcaenc.c	/^static int32_t cos_table[128];$/;"	v	file:
cos_table	tests/audiogen.c	/^static const unsigned short cos_table[(1 << COS_TABLE_BITS) + 2] = {$/;"	v	file:
cos_tabs	libavcodec/twinvq.c	/^    float *cos_tabs[3];$/;"	m	struct:TwinContext	file:
cost	libavcodec/aaccoder.c	/^    float cost;   \/\/\/< path cost$/;"	m	struct:BandCodingPath	file:
cost	libavcodec/aaccoder.c	/^    float cost;$/;"	m	struct:TrellisPath	file:
costab	libavcodec/dct.h	/^    const float *costab;$/;"	m	struct:DCTContext
costab32	libavcodec/mpegaudiotab.h	/^static const int costab32[30] = {$/;"	v
count	libavcodec/ffv1.c	/^    uint8_t count;$/;"	m	struct:VlcState	file:
count	libavcodec/huffman.h	/^    uint32_t count;$/;"	m	struct:__anon149
count	libavcodec/idcinvideo.c	/^  int count;$/;"	m	struct:__anon65	file:
count	libavcodec/latm_parser.c	/^    int count;$/;"	m	struct:LATMParseContext	file:
count	libavcodec/loco.c	/^    int sum, count; \/* sum and count for getting rice parameter *\/$/;"	m	struct:RICEContext	file:
count	libavcodec/ratecontrol.h	/^    double count;$/;"	m	struct:Predictor
count	libavcodec/srtenc.c	/^    int count;$/;"	m	struct:__anon139	file:
count	libavfilter/internal.h	/^    int count;$/;"	m	struct:AVFilterPool
count	libavformat/isom.h	/^    int count;$/;"	m	struct:__anon464
count	libavformat/isom.h	/^    int count;$/;"	m	struct:__anon465
count	libavformat/timefilter.c	/^    int count;$/;"	m	struct:TimeFilter	file:
count	libavutil/internal.h	/^    int count;$/;"	m	struct:AVDictionary
count	libavutil/pca.c	/^    int count;$/;"	m	struct:PCA	file:
count	libavutil/sha.c	/^    uint64_t count;       \/\/\/< number of bytes in buffer$/;"	m	struct:AVSHA	file:
count1	ffserver.c	/^    int64_t count1, count2;$/;"	m	struct:__anon498	file:
count1table_select	libavcodec/mpegaudiodec.c	/^    uint8_t count1table_select;$/;"	m	struct:GranuleDef	file:
count2	ffserver.c	/^    int64_t count1, count2;$/;"	m	struct:__anon498	file:
count_frame_bits	libavcodec/ac3enc.c	/^static void count_frame_bits(AC3EncodeContext *s)$/;"	f	file:
count_frame_bits_fixed	libavcodec/ac3enc.c	/^static void count_frame_bits_fixed(AC3EncodeContext *s)$/;"	f	file:
count_frame_header	libavcodec/flacenc.c	/^static int count_frame_header(FlacEncodeContext *s)$/;"	f	file:
count_mantissa_bits	libavcodec/ac3enc.c	/^static int count_mantissa_bits(AC3EncodeContext *s)$/;"	f	file:
count_mantissa_bits_init	libavcodec/ac3enc.c	/^static void count_mantissa_bits_init(uint16_t mant_cnt[AC3_MAX_BLOCKS][16])$/;"	f	file:
count_mantissa_bits_update_ch	libavcodec/ac3enc.c	/^static void count_mantissa_bits_update_ch(AC3EncodeContext *s, int ch,$/;"	f	file:
count_pixels	libavcodec/rle.c	/^static int count_pixels(const uint8_t *start, int len, int bpp, int same)$/;"	f	file:
counts_3970	libavcodec/apedec.c	/^static const uint16_t counts_3970[22] = {$/;"	v	file:
counts_3980	libavcodec/apedec.c	/^static const uint16_t counts_3980[22] = {$/;"	v	file:
counts_diff_3970	libavcodec/apedec.c	/^static const uint16_t counts_diff_3970[21] = {$/;"	v	file:
counts_diff_3980	libavcodec/apedec.c	/^static const uint16_t counts_diff_3980[21] = {$/;"	v	file:
coup	libavcodec/aac.h	/^    ChannelCoupling coup;$/;"	m	struct:__anon245
coupling_point	libavcodec/aac.h	/^    enum CouplingPoint coupling_point;  \/\/\/< The point during decoding at which coupling is applied.$/;"	m	struct:__anon243	typeref:enum:__anon243::CouplingPoint
coupling_steps	libavcodec/vorbisdec.c	/^    uint16_t      coupling_steps;$/;"	m	struct:__anon261	file:
coupling_steps	libavcodec/vorbisenc.c	/^    int coupling_steps;$/;"	m	struct:__anon192	file:
covariance	libavutil/lls.h	/^    double covariance[MAX_VARS+1][MAX_VARS+1];$/;"	m	struct:LLSModel
covariance	libavutil/pca.c	/^    double *covariance;$/;"	m	struct:PCA	file:
cp_if_changed	configure	/^cp_if_changed(){$/;"	f
cpb_cnt	libavcodec/h264.h	/^    int cpb_cnt;                       \/\/\/< See H.264 E.1.2$/;"	m	struct:SPS
cpb_removal_delay_length	libavcodec/h264.h	/^    int cpb_removal_delay_length;      \/\/\/< cpb_removal_delay_length_minus1 + 1$/;"	m	struct:SPS
cpe	libavcodec/aacenc.h	/^    ChannelElement *cpe;                         \/\/\/< channel elements$/;"	m	struct:AACEncContext
cpl_band_sizes	libavcodec/ac3dec.h	/^    uint8_t cpl_band_sizes[AC3_MAX_CPL_BANDS]; \/\/\/< number of coeffs in each coupling band$/;"	m	struct:__anon88
cpl_band_sizes	libavcodec/ac3enc.h	/^    uint8_t cpl_band_sizes[AC3_MAX_CPL_BANDS];  \/\/\/< number of coeffs in each coupling band$/;"	m	struct:AC3EncodeContext
cpl_coord_exp	libavcodec/ac3enc.h	/^    uint8_t  **cpl_coord_exp;                   \/\/\/< coupling coord exponents           (cplcoexp)$/;"	m	struct:AC3Block
cpl_coord_exp_buffer	libavcodec/ac3enc.h	/^    uint8_t *cpl_coord_exp_buffer;$/;"	m	struct:AC3EncodeContext
cpl_coord_mant	libavcodec/ac3enc.h	/^    uint8_t  **cpl_coord_mant;                  \/\/\/< coupling coord mantissas           (cplcomant)$/;"	m	struct:AC3Block
cpl_coord_mant_buffer	libavcodec/ac3enc.h	/^    uint8_t *cpl_coord_mant_buffer;$/;"	m	struct:AC3EncodeContext
cpl_coords	libavcodec/ac3dec.h	/^    int cpl_coords[AC3_MAX_CHANNELS][AC3_MAX_CPL_BANDS]; \/\/\/< coupling coordinates      (cplco)$/;"	m	struct:__anon88
cpl_enabled	libavcodec/ac3enc.h	/^    int cpl_enabled;                        \/\/\/< coupling enabled for all frames$/;"	m	struct:AC3EncodeContext
cpl_end_freq	libavcodec/ac3enc.h	/^    int cpl_end_freq;                       \/\/\/< coupling channel end frequency bin$/;"	m	struct:AC3EncodeContext
cpl_fast_leak	libavcodec/ac3.h	/^    int cpl_fast_leak, cpl_slow_leak;$/;"	m	struct:AC3BitAllocParameters
cpl_in_use	libavcodec/ac3dec.h	/^    int cpl_in_use[AC3_MAX_BLOCKS];         \/\/\/< coupling in use                        (cplinu)$/;"	m	struct:__anon88
cpl_in_use	libavcodec/ac3enc.h	/^    int      cpl_in_use;                        \/\/\/< coupling in use for this block     (cplinu)$/;"	m	struct:AC3Block
cpl_master_exp	libavcodec/ac3enc.h	/^    uint8_t  cpl_master_exp[AC3_MAX_CHANNELS];  \/\/\/< coupling coord master exponents    (mstrcplco)$/;"	m	struct:AC3Block
cpl_on	libavcodec/ac3enc.h	/^    int cpl_on;                             \/\/\/< coupling turned on for this frame$/;"	m	struct:AC3EncodeContext
cpl_slow_leak	libavcodec/ac3.h	/^    int cpl_fast_leak, cpl_slow_leak;$/;"	m	struct:AC3BitAllocParameters
cpl_start	libavcodec/ac3.h	/^    int cpl_start;    $/;"	m	struct:AC3EncOptions
cpl_strategy_exists	libavcodec/ac3dec.h	/^    int cpl_strategy_exists[AC3_MAX_BLOCKS];\/\/\/< coupling strategy exists               (cplstre)$/;"	m	struct:__anon88
cplband	libavcodec/cookdata.h	/^static const int cplband[51] = {$/;"	v
cplscale2	libavcodec/cookdata.h	/^static const float cplscale2[3] = {$/;"	v
cplscale3	libavcodec/cookdata.h	/^static const float cplscale3[7] = {$/;"	v
cplscale4	libavcodec/cookdata.h	/^static const float cplscale4[15] = {$/;"	v
cplscale5	libavcodec/cookdata.h	/^static const float cplscale5[31] = {$/;"	v
cplscale6	libavcodec/cookdata.h	/^static const float cplscale6[63] = {$/;"	v
cplscales	libavcodec/cook.c	/^    const float         *cplscales[5];$/;"	m	struct:cook	file:
cplscales	libavcodec/cookdata.h	/^static const float* const cplscales[5] = {$/;"	v
cplx_estimation_trash_b	libavcodec/mpegvideo.h	/^    int cplx_estimation_trash_b;$/;"	m	struct:MpegEncContext
cplx_estimation_trash_i	libavcodec/mpegvideo.h	/^    int cplx_estimation_trash_i;$/;"	m	struct:MpegEncContext
cplx_estimation_trash_p	libavcodec/mpegvideo.h	/^    int cplx_estimation_trash_p;$/;"	m	struct:MpegEncContext
cpu	libavfilter/libmpcodecs/pullup.h	/^    unsigned int cpu;$/;"	m	struct:pullup_context
cpuCaps	libpostproc/postprocess_internal.h	/^    int cpuCaps;$/;"	m	struct:PPContext
cpuModel	libavfilter/libmpcodecs/cpudetect.h	/^    int cpuModel;$/;"	m	struct:cpucaps_s
cpuStepping	libavfilter/libmpcodecs/cpudetect.h	/^    int cpuStepping;$/;"	m	struct:cpucaps_s
cpuType	libavfilter/libmpcodecs/cpudetect.h	/^    int cpuType;$/;"	m	struct:cpucaps_s
cpu_flags	libavcodec/dct-test.c	/^static int cpu_flags;$/;"	v	file:
cpucaps_s	libavfilter/libmpcodecs/cpudetect.h	/^typedef struct cpucaps_s {$/;"	s
cpuid	libavutil/x86/cpu.c	29;"	d	file:
cpuused	libavcodec/libvpxenc.c	/^    int cpuused;$/;"	m	struct:VP8EncoderContext	file:
cq	libavcodec/nuv.c	/^    uint32_t lq[64], cq[64];$/;"	m	struct:__anon100	file:
cqp	libavcodec/avcodec.h	/^    int cqp;$/;"	m	struct:AVCodecContext
cquant	libavcodec/rtjpeg.h	/^    uint32_t cquant[64];$/;"	m	struct:__anon172
cr	libavfilter/libmpcodecs/vf_geq.c	/^static double cr(void *vf, double x, double y){$/;"	f	file:
crazytime_to_iso8601	libavformat/wtvdec.c	/^static void crazytime_to_iso8601(char *buf, int buf_size, int64_t value)$/;"	f	file:
crc	libavcodec/alsdec.c	/^    uint32_t crc;                   \/\/\/< CRC value calculated from decoded data$/;"	m	struct:__anon152	file:
crc	libavcodec/wavpack.c	/^    uint32_t crc;$/;"	m	struct:SavedContext	file:
crc	libavformat/rtpdec_amr.c	/^    int crc;$/;"	m	struct:PayloadContext	file:
crc	libswscale/swscale-test.c	/^    uint32_t crc;$/;"	m	struct:Results	file:
crc	tests/fate-run.sh	/^crc(){$/;"	f
crc1	libavcodec/ac3.h	/^    uint16_t crc1;$/;"	m	struct:__anon170
crc8	libavcodec/flacenc.c	/^    uint8_t crc8;$/;"	m	struct:FlacFrame	file:
crc_1D	libavcodec/mlp.c	/^static AVCRC crc_1D[CRC_TABLE_SIZE];$/;"	v	file:
crc_2D	libavcodec/mlp.c	/^static AVCRC crc_2D[CRC_TABLE_SIZE];$/;"	v	file:
crc_63	libavcodec/mlp.c	/^static AVCRC crc_63[CRC_TABLE_SIZE];$/;"	v	file:
crc_absent	libavcodec/aacadtsdec.h	/^    uint8_t  crc_absent;$/;"	m	struct:__anon121
crc_buffer	libavcodec/alsdec.c	/^    uint8_t *crc_buffer;            \/\/\/< buffer of byte order corrected samples used for CRC check$/;"	m	struct:__anon152	file:
crc_enabled	libavcodec/alsdec.c	/^    int crc_enabled;          \/\/\/< enable Cyclic Redundancy Checksum$/;"	m	struct:__anon150	file:
crc_extra_bits	libavcodec/wavpack.c	/^    uint32_t crc_extra_bits;$/;"	m	struct:WavpackFrameContext	file:
crc_init	libavcodec/mlp.c	/^static int crc_init = 0;$/;"	v	file:
crc_inv	libavcodec/ac3enc.h	/^    uint16_t crc_inv[2];$/;"	m	struct:AC3EncodeContext
crc_org	libavcodec/alsdec.c	/^    uint32_t crc_org;               \/\/\/< CRC value of the original input data$/;"	m	struct:__anon152	file:
crc_present	libavcodec/dca.c	/^    int crc_present;            \/\/\/< crc is present in the bitstream$/;"	m	struct:__anon93	file:
crc_table	libavcodec/alsdec.c	/^    const AVCRC *crc_table;$/;"	m	struct:__anon152	file:
crc_write_header	libavformat/crcenc.c	/^static int crc_write_header(struct AVFormatContext *s)$/;"	f	file:
crc_write_packet	libavformat/crcenc.c	/^static int crc_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
crc_write_trailer	libavformat/crcenc.c	/^static int crc_write_trailer(struct AVFormatContext *s)$/;"	f	file:
crcval	libavformat/crcenc.c	/^    uint32_t crcval;$/;"	m	struct:CRCState	file:
create_adapt_vect	libavcodec/ra144enc.c	/^static void create_adapt_vect(float *vect, const int16_t *cb, int lag)$/;"	f	file:
create_audio_stream	libavformat/siff.c	/^static int create_audio_stream(AVFormatContext *s, SIFFContext *c)$/;"	f	file:
create_cel_evals	libavcodec/roqvideoenc.c	/^static void create_cel_evals(RoqContext *enc, RoqTempdata *tempData)$/;"	f	file:
create_clusters	libavcodec/roqvideoenc.c	/^static void create_clusters(AVFrame *frame, int w, int h, uint8_t *yuvClusters)$/;"	f	file:
create_filter	libavfilter/graphparser.c	/^static int create_filter(AVFilterContext **filt_ctx, AVFilterGraph *ctx, int index,$/;"	f	file:
create_lut	libavfilter/libmpcodecs/vf_eq2.c	/^void create_lut (eq2_param_t *par)$/;"	f	file:
create_map	libavcodec/vorbisdec.c	/^static void create_map(vorbis_context *vc, unsigned floor_number)$/;"	f	file:
create_stream	libavformat/flvdec.c	/^static AVStream *create_stream(AVFormatContext *s, int is_audio){$/;"	f	file:
create_time	libavformat/asf.h	/^    uint64_t create_time;       \/**< time of creation, in 100-nanosecond units since 1.1.1601$/;"	m	struct:__anon400
create_vorbis_context	libavcodec/vorbisenc.c	/^static void create_vorbis_context(vorbis_enc_context *venc,$/;"	f	file:
creation_time	libavformat/gxfenc.c	/^    int64_t creation_time;$/;"	m	struct:GXFContext	file:
crf	libavcodec/avcodec.h	/^    float crf;$/;"	m	struct:AVCodecContext
crf_max	libavcodec/avcodec.h	/^    float crf_max;$/;"	m	struct:AVCodecContext
critical_freq	libavcodec/wmaprodata.h	/^static const uint16_t critical_freq[] = {$/;"	v
crop	libavcodec/h264.h	/^    int crop;                   \/\/\/< frame_cropping_flag$/;"	m	struct:SPS
cropTbl	libavcodec/dct-test.c	/^uint8_t cropTbl[256 + 2 * MAX_NEG_CROP];$/;"	v
crop_bottom	libavcodec/h264.h	/^    unsigned int crop_bottom;          \/\/\/< frame_cropping_rect_bottom_offset$/;"	m	struct:SPS
crop_cx	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long crop_x, crop_y, crop_cx, crop_cy;$/;"	m	struct:vf_priv_s	file:
crop_cy	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long crop_x, crop_y, crop_cx, crop_cy;$/;"	m	struct:vf_priv_s	file:
crop_left	libavcodec/h264.h	/^    unsigned int crop_left;            \/\/\/< frame_cropping_rect_left_offset$/;"	m	struct:SPS
crop_right	libavcodec/h264.h	/^    unsigned int crop_right;           \/\/\/< frame_cropping_rect_right_offset$/;"	m	struct:SPS
crop_top	libavcodec/h264.h	/^    unsigned int crop_top;             \/\/\/< frame_cropping_rect_top_offset$/;"	m	struct:SPS
crop_x	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long crop_x, crop_y, crop_cx, crop_cy;$/;"	m	struct:vf_priv_s	file:
crop_y	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long crop_x, crop_y, crop_cx, crop_cy;$/;"	m	struct:vf_priv_s	file:
crow_buf	libavcodec/png.h	/^    uint8_t *crow_buf;$/;"	m	struct:PNGDecContext
crow_size	libavcodec/png.h	/^    int crow_size; \/* compressed row size (include filter type) *\/$/;"	m	struct:PNGDecContext
crypt	libavutil/aes.c	/^static inline void crypt(AVAES *a, int s, const uint8_t *sbox, uint32_t multbl[][256]){$/;"	f	file:
crypto_class	libavformat/crypto.c	/^static const AVClass crypto_class = {$/;"	v	file:
crypto_close	libavformat/crypto.c	/^static int crypto_close(URLContext *h)$/;"	f	file:
crypto_open	libavformat/crypto.c	/^static int crypto_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
crypto_read	libavformat/crypto.c	/^static int crypto_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
cs_itu601	libavcodec/mjpegdec.h	/^    int cs_itu601;$/;"	m	struct:MJpegDecodeContext
csa_table	libavcodec/mpegaudiodec.c	/^static INTFLOAT csa_table[8][4];$/;"	v	file:
csc2	libavcodec/dct.h	/^    FFTSample *csc2;$/;"	m	struct:DCTContext
csdata	libavfilter/libmpcodecs/vf_divtc.c	/^   unsigned int *csdata;$/;"	m	struct:vf_priv_s	file:
csp	libavfilter/libmpcodecs/vf_yuvcsp.c	/^    int csp;$/;"	m	struct:vf_priv_s	file:
csp	libavfilter/vf_yadif.c	/^    const AVPixFmtDescriptor *csp;$/;"	m	struct:__anon6	file:
csty	libavcodec/j2k.h	/^    uint8_t csty;             \/\/\/< coding style$/;"	m	struct:__anon210
ct	libavcodec/mqc.h	/^    unsigned int ct;$/;"	m	struct:__anon253
ctime1	ffserver.c	/^static char *ctime1(char *buf2)$/;"	f	file:
ctlidstr	libavcodec/libvpxenc.c	/^static const char *ctlidstr[] = {$/;"	v	file:
cts	libavformat/movenc.h	/^    int          cts;$/;"	m	struct:MOVIentry
cts	libavformat/rtpdec_mpeg4.c	/^        int cts;$/;"	m	struct:PayloadContext::AUHeaders	file:
cts_flag	libavformat/rtpdec_mpeg4.c	/^        int cts_flag;$/;"	m	struct:PayloadContext::AUHeaders	file:
ctts_count	libavformat/isom.h	/^    unsigned int ctts_count;$/;"	m	struct:MOVStreamContext
ctts_data	libavformat/isom.h	/^    MOVStts *ctts_data;$/;"	m	struct:MOVStreamContext
ctts_index	libavformat/isom.h	/^    int ctts_index;$/;"	m	struct:MOVStreamContext
ctts_sample	libavformat/isom.h	/^    int ctts_sample;$/;"	m	struct:MOVStreamContext
ctx	ffmpeg.c	/^    AVFormatContext *ctx;$/;"	m	struct:AVInputFile	file:
ctx	ffmpeg/ffmpeg.c	/^    AVFormatContext *ctx;$/;"	m	struct:AVInputFile	file:
ctx	libavcodec/ac3enc_combined.c	/^    void *ctx;$/;"	m	struct:CombineContext	file:
ctx	libavfilter/libmpcodecs/vf_pullup.c	/^    struct pullup_context *ctx;$/;"	m	struct:vf_priv_s	typeref:struct:vf_priv_s::pullup_context	file:
ctx	libavfilter/libmpcodecs/vf_screenshot.c	/^    struct SwsContext *ctx;$/;"	m	struct:vf_priv_s	typeref:struct:vf_priv_s::SwsContext	file:
ctx	libavformat/applehttp.c	/^    AVFormatContext *ctx;$/;"	m	struct:variant	file:
ctx	libavformat/matroskadec.c	/^    AVFormatContext *ctx;$/;"	m	struct:__anon371	file:
ctx_flags	libavformat/avformat.h	/^    int ctx_flags; \/**< Format-specific flags, see AVFMTCTX_xx *\/$/;"	m	struct:AVFormatContext
ctx_size	libavformat/mxfdec.c	/^    int ctx_size;$/;"	m	struct:__anon448	file:
cu	libavcodec/cavs.h	/^    uint8_t *cy, *cu, *cv; \/\/\/< current MB sample pointers$/;"	m	struct:__anon207
cubic	libavfilter/libmpcodecs/vf_perspective.c	/^    int cubic;$/;"	m	struct:vf_priv_s	file:
cues	libavformat/matroskaenc.c	/^    mkv_cues        *cues;$/;"	m	struct:MatroskaMuxContext	file:
cum_len	libavformat/avidec.c	/^    int64_t cum_len; \/* temporary storage (used during seek) *\/$/;"	m	struct:AVIStream	file:
cum_len	libavformat/nsvdec.c	/^    int cum_len; \/* temporary storage (used during seek) *\/$/;"	m	struct:NSVStream	file:
cur	libavcodec/kgv1dec.c	/^    uint16_t *prev, *cur;$/;"	m	struct:__anon115	file:
cur	libavcodec/kmvc.c	/^    uint8_t *cur, *prev;$/;"	m	struct:KmvcContext	file:
cur	libavcodec/truemotion2.c	/^    int cur;$/;"	m	struct:TM2Context	file:
cur	libavcodec/zmbv.c	/^    uint8_t *prev, *cur;$/;"	m	struct:ZmbvContext	file:
cur	libavfilter/vf_yadif.c	/^    AVFilterBufferRef *cur;$/;"	m	struct:__anon6	file:
cur_ac	libavcodec/dv.c	/^    int      cur_ac;$/;"	m	struct:EncBlockInfo	file:
cur_au_index	libavformat/rtpdec_mpeg4.c	/^    int cur_au_index;$/;"	m	struct:PayloadContext	file:
cur_audio_pkt	libavformat/matroskaenc.c	/^    AVPacket        cur_audio_pkt;$/;"	m	struct:MatroskaMuxContext	file:
cur_blk_idx	libavcodec/vc1.h	/^    int n_allocated_blks, cur_blk_idx, left_blk_idx, topleft_blk_idx, top_blk_idx;$/;"	m	struct:VC1Context
cur_buf	libavfilter/avfilter.h	/^    AVFilterBufferRef *cur_buf;$/;"	m	struct:AVFilterLink
cur_chan	libavcodec/shorten.c	/^    int cur_chan;$/;"	m	struct:ShortenContext	file:
cur_channel	libavcodec/aacenc.h	/^    int cur_channel;$/;"	m	struct:AACEncContext
cur_clock	ffserver.c	/^    int64_t cur_clock;           \/* current clock reference value in us *\/$/;"	m	struct:HTTPContext	file:
cur_dec	libavcodec/bink.c	/^    uint8_t *cur_dec;  \/\/\/< pointer to the not yet decoded part of the buffer$/;"	m	struct:Bundle	file:
cur_dts	libavformat/avformat.h	/^    int64_t cur_dts;$/;"	m	struct:AVStream
cur_dts	libavformat/seek.h	/^    int64_t                 cur_dts;$/;"	m	struct:AVParserStreamState
cur_field	libavcodec/dnxhddec.c	/^    int cur_field;                      \/\/\/< current interlaced field$/;"	m	struct:__anon154	file:
cur_field	libavcodec/dnxhdenc.h	/^    int cur_field;$/;"	m	struct:DNXHDEncContext
cur_frame	libavcodec/indeo3.c	/^    YUVBufs *cur_frame;$/;"	m	struct:Indeo3DecodeContext	file:
cur_frame	libavcodec/mpc.h	/^    int cur_frame, frames;$/;"	m	struct:__anon179
cur_frame	libavformat/siff.c	/^    int cur_frame;$/;"	m	struct:SIFFContext	file:
cur_frame	libavformat/smacker.c	/^    int cur_frame;$/;"	m	struct:SmackerContext	file:
cur_frame_bytes	ffserver.c	/^    int cur_frame_bytes;       \/* output frame size, needed to compute$/;"	m	struct:HTTPContext	file:
cur_frame_dts	libavcodec/avcodec.h	/^    int64_t cur_frame_dts[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_duration	ffserver.c	/^    int64_t cur_frame_duration;  \/* duration of the current frame in us *\/$/;"	m	struct:HTTPContext	file:
cur_frame_end	libavcodec/avcodec.h	/^    int64_t cur_frame_end[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_length	libavcodec/alsdec.c	/^    unsigned int cur_frame_length;  \/\/\/< length of the current frame to decode$/;"	m	struct:__anon152	file:
cur_frame_mode	libavcodec/amrnbdec.c	/^    enum Mode                cur_frame_mode;$/;"	m	struct:AMRContext	typeref:enum:AMRContext::Mode	file:
cur_frame_offset	libavcodec/avcodec.h	/^    int64_t cur_frame_offset[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_pos	libavcodec/avcodec.h	/^    int64_t cur_frame_pos[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_pts	libavcodec/avcodec.h	/^    int64_t cur_frame_pts[AV_PARSER_PTS_NB];$/;"	m	struct:AVCodecParserContext
cur_frame_start_index	libavcodec/avcodec.h	/^    int cur_frame_start_index;$/;"	m	struct:AVCodecParserContext
cur_h	libavcodec/vmnc.c	/^    int cur_w, cur_h;$/;"	m	struct:VmncContext	file:
cur_hx	libavcodec/vmnc.c	/^    int cur_hx, cur_hy;$/;"	m	struct:VmncContext	file:
cur_hy	libavcodec/vmnc.c	/^    int cur_hx, cur_hy;$/;"	m	struct:VmncContext	file:
cur_index	libavcodec/mimic.c	/^    int             cur_index;$/;"	m	struct:__anon282	file:
cur_len	libavformat/avformat.h	/^    int cur_len;$/;"	m	struct:AVStream
cur_len	libavformat/seek.h	/^    int                     cur_len;$/;"	m	struct:AVParserStreamState
cur_needed	libavformat/applehttp.c	/^    int needed, cur_needed;$/;"	m	struct:variant	file:
cur_offset	libavcodec/avcodec.h	/^    int64_t cur_offset; \/* current offset$/;"	m	struct:AVCodecParserContext
cur_palette	libavcodec/xan.c	/^    int cur_palette;$/;"	m	struct:XanContext	file:
cur_pcr	libavformat/mpegts.c	/^    int64_t cur_pcr;    \/**< used to estimate the exact PCR  *\/$/;"	m	struct:MpegTSContext	file:
cur_pkt	libavformat/avformat.h	/^    AVPacket cur_pkt;$/;"	m	struct:AVStream
cur_pkt	libavformat/seek.h	/^    AVPacket                cur_pkt;$/;"	m	struct:AVParserStreamState
cur_ptr	libavcodec/bink.c	/^    uint8_t *cur_ptr;  \/\/\/< pointer to the data that is not read from buffer yet$/;"	m	struct:Bundle	file:
cur_ptr	libavformat/avformat.h	/^    const uint8_t *cur_ptr;$/;"	m	struct:AVStream
cur_ptr	libavformat/seek.h	/^    const uint8_t          *cur_ptr;$/;"	m	struct:AVParserStreamState
cur_pts	ffserver.c	/^    int64_t cur_pts;             \/* current pts value from the stream in us *\/$/;"	m	struct:HTTPContext	file:
cur_pts	libavcodec/rv34.h	/^    int cur_pts, last_pts, next_pts;$/;"	m	struct:RV34DecContext
cur_pts	libavformat/smacker.c	/^    int64_t cur_pts;$/;"	m	struct:SmackerContext	file:
cur_rtp_ts_unwrapped	libavformat/movenc.h	/^    int64_t     cur_rtp_ts_unwrapped;$/;"	m	struct:MOVIndex
cur_scan	libavcodec/mjpegdec.h	/^    int cur_scan; \/* current scan, used by JPEG-LS *\/$/;"	m	struct:MJpegDecodeContext
cur_seq_no	libavformat/applehttp.c	/^    int cur_seq_no;$/;"	m	struct:AppleHTTPContext	file:
cur_seq_no	libavformat/applehttp.c	/^    int cur_seq_no;$/;"	m	struct:variant	file:
cur_seq_no	libavformat/applehttpproto.c	/^    int cur_seq_no;$/;"	m	struct:AppleHTTPContext	file:
cur_sfb_offsets	libavcodec/wmaprodec.c	/^    int16_t*         cur_sfb_offsets;               \/\/\/< sfb offsets for the current block$/;"	m	struct:WMAProDecodeCtx	file:
cur_slice	libavformat/rmdec.c	/^    int cur_slice, slices;$/;"	m	struct:RMStream	file:
cur_st	libavformat/avformat.h	/^    AVStream *cur_st;$/;"	m	struct:AVFormatContext
cur_st	libavformat/seek.h	/^    AVStream       *cur_st;                 \/\/\/< current stream.$/;"	m	struct:AVParserState
cur_stream	ffplay.c	/^static VideoState *cur_stream;$/;"	v	file:
cur_stream	libavformat/pmpdec.c	/^    int cur_stream;$/;"	m	struct:__anon331	file:
cur_subframe	libavcodec/wmaprodec.c	/^    uint8_t  cur_subframe;                            \/\/\/< current subframe number$/;"	m	struct:__anon82	file:
cur_time	ffserver.c	/^static int64_t cur_time;           \/\/ Making this global saves on passing it around everywhere$/;"	v	file:
cur_timestamp	libavformat/rtpdec.h	/^    uint32_t cur_timestamp;$/;"	m	struct:RTPDemuxContext
cur_timestamp	libavformat/rtpenc.h	/^    uint32_t cur_timestamp;$/;"	m	struct:RTPMuxContext
cur_transport_priv	libavformat/rtsp.h	/^    void *cur_transport_priv;$/;"	m	struct:RTSPState
cur_vlcs	libavcodec/rv34.h	/^    RV34VLC *cur_vlcs;       \/\/\/< VLC set used for current frame decoding$/;"	m	struct:RV34DecContext
cur_w	libavcodec/vmnc.c	/^    int cur_w, cur_h;$/;"	m	struct:VmncContext	file:
cur_x	libavcodec/vmnc.c	/^    int cur_x, cur_y;$/;"	m	struct:VmncContext	file:
cur_y	libavcodec/vmnc.c	/^    int cur_x, cur_y;$/;"	m	struct:VmncContext	file:
curbits	libavcodec/vmnc.c	/^    uint8_t* curbits, *curmask;$/;"	m	struct:VmncContext	file:
curbits	libavformat/mpc.c	/^    int curbits;$/;"	m	struct:__anon376	file:
curbufsize	libavdevice/dshow.c	/^    unsigned int curbufsize;$/;"	m	struct:dshow_ctx	file:
curbufsize	libavdevice/vfwcap.c	/^    unsigned int curbufsize;$/;"	m	struct:vfw_ctx	file:
curframe	libavformat/mpc.c	/^    uint32_t curframe, lastframe;$/;"	m	struct:__anon376	file:
curfrm	libavcodec/zmbvenc.c	/^    int keyint, curfrm;$/;"	m	struct:ZmbvEncContext	file:
curidx	libavformat/oggdec.h	/^    int curidx;$/;"	m	struct:ogg
curidx	libavformat/oggdec.h	/^    int curidx;$/;"	m	struct:ogg_state
curmask	libavcodec/lzw.c	/^    int curmask;$/;"	m	struct:LZWState	file:
curmask	libavcodec/vmnc.c	/^    uint8_t* curbits, *curmask;$/;"	m	struct:VmncContext	file:
curpic_num	libavformat/rmdec.c	/^    int curpic_num;    \/\/\/< picture number of current frame$/;"	m	struct:RMStream	file:
curr_block	libavcodec/ra144.h	/^    int16_t curr_block[NBLOCKS * BLOCKSIZE];$/;"	m	struct:__anon167
curr_bps	libavcodec/flacdec.c	/^    int curr_bps;                           \/\/\/< bps for current subframe, adjusted for channel correlation and wasted bits$/;"	m	struct:FLACContext	file:
curr_frame	libavcodec/twinvq.c	/^    float *curr_frame;               \/\/\/< non-interleaved output$/;"	m	struct:TwinContext	file:
curr_pic_num	libavcodec/h264.h	/^    int curr_pic_num;$/;"	m	struct:H264Context
curr_sblock	libavcodec/ra144.h	/^    int16_t curr_sblock[50];$/;"	m	struct:__anon167
current	libavcodec/smacker.c	/^    int current;$/;"	m	struct:HuffContext	file:
current	libavfilter/libmpcodecs/vf_fixpts.c	/^    double current;$/;"	m	struct:vf_priv_s	file:
current	libavformat/concat.c	/^    size_t               current;  \/\/\/< index of currently read node$/;"	m	struct:concat_data	file:
current_audio_chunk	libavformat/idcin.c	/^    int current_audio_chunk;$/;"	m	struct:IdcinDemuxContext	file:
current_audio_data_offs	libavformat/tiertexseq.c	/^    unsigned int current_audio_data_offs;$/;"	m	struct:SeqDemuxContext	file:
current_audio_data_size	libavformat/tiertexseq.c	/^    unsigned int current_audio_data_size;$/;"	m	struct:SeqDemuxContext	file:
current_bandwidth	ffserver.c	/^static uint64_t current_bandwidth;$/;"	v	file:
current_block	libavformat/c93.c	/^    int current_block;$/;"	m	struct:__anon482	file:
current_codes_count	libavcodec/motionpixels.c	/^    int codes_count, current_codes_count;$/;"	m	struct:MotionPixelsContext	file:
current_frame	libavcodec/flashsv2enc.c	/^    uint8_t *current_frame;$/;"	m	struct:FlashSV2Context	file:
current_frame	libavcodec/interplayvideo.c	/^    AVFrame current_frame;$/;"	m	struct:IpvideoContext	file:
current_frame	libavcodec/roqvideo.h	/^    AVFrame *current_frame;$/;"	m	struct:RoqContext
current_frame	libavcodec/vp3.c	/^    AVFrame current_frame;$/;"	m	struct:Vp3DecodeContext	file:
current_frame	libavcodec/xan.c	/^    AVFrame current_frame;$/;"	m	struct:XanContext	file:
current_frame	libavdevice/libdc1394.c	/^    int current_frame;$/;"	m	struct:dc1394_data	file:
current_frame	libavformat/c93.c	/^    int current_frame;$/;"	m	struct:__anon482	file:
current_frame	libavformat/sierravmd.c	/^    unsigned int current_frame;$/;"	m	struct:VmdDemuxContext	file:
current_frame_offs	libavformat/tiertexseq.c	/^    int current_frame_offs;$/;"	m	struct:SeqDemuxContext	file:
current_frame_pts	libavformat/tiertexseq.c	/^    int current_frame_pts;$/;"	m	struct:SeqDemuxContext	file:
current_id	libavformat/matroskadec.c	/^    uint32_t current_id;$/;"	m	struct:__anon371	file:
current_job	libavcodec/pthread.c	/^    int current_job;$/;"	m	struct:ThreadContext	file:
current_job_cond	libavcodec/pthread.c	/^    pthread_cond_t current_job_cond;$/;"	m	struct:ThreadContext	file:
current_job_lock	libavcodec/pthread.c	/^    pthread_mutex_t current_job_lock;$/;"	m	struct:ThreadContext	file:
current_mba	libavcodec/h261.h	/^    int current_mba;$/;"	m	struct:H261Context
current_mv_penalty	libavcodec/mpegvideo.h	/^    uint8_t *current_mv_penalty;$/;"	m	struct:MotionEstContext
current_mv_x	libavcodec/h261.h	/^    int current_mv_x;$/;"	m	struct:H261Context
current_mv_y	libavcodec/h261.h	/^    int current_mv_y;$/;"	m	struct:H261Context
current_packet	libavformat/pmpdec.c	/^    int current_packet;$/;"	m	struct:__anon331	file:
current_pal_data_offs	libavformat/tiertexseq.c	/^    unsigned int current_pal_data_offs;$/;"	m	struct:SeqDemuxContext	file:
current_pal_data_size	libavformat/tiertexseq.c	/^    unsigned int current_pal_data_size;$/;"	m	struct:SeqDemuxContext	file:
current_picture	libavcodec/4xm.c	/^    AVFrame current_picture, last_picture;$/;"	m	struct:FourXContext	file:
current_picture	libavcodec/mpegvideo.h	/^    Picture current_picture;    \/\/\/< buffer to store the decompressed current picture$/;"	m	struct:MpegEncContext
current_picture	libavcodec/png.h	/^    AVFrame *current_picture, *last_picture;$/;"	m	struct:PNGDecContext
current_picture	libavcodec/snow.c	/^    AVFrame current_picture;$/;"	m	struct:SnowContext	file:
current_picture	libavcodec/svq1enc.c	/^    AVFrame current_picture;$/;"	m	struct:SVQ1Context	file:
current_picture_ptr	libavcodec/mpegvideo.h	/^    Picture *current_picture_ptr;  \/\/\/< pointer to the current picture$/;"	m	struct:MpegEncContext
current_sample	libavformat/isom.h	/^    int current_sample;$/;"	m	struct:MOVStreamContext
current_sample	libavformat/segafilm.c	/^    unsigned int current_sample;$/;"	m	struct:FilmDemuxContext	file:
current_section	libavcodec/ass_split.c	/^    int current_section;$/;"	m	struct:ASSSplitContext	file:
current_slice	libavcodec/h264.h	/^    int current_slice;$/;"	m	struct:H264Context
current_stream	libavformat/rmdec.c	/^    int current_stream;$/;"	m	struct:__anon436	file:
current_subframe	libavcodec/dca.c	/^    int current_subframe;$/;"	m	struct:__anon93	file:
current_subsubframe	libavcodec/dca.c	/^    int current_subsubframe;$/;"	m	struct:__anon93	file:
current_track	libavformat/bink.c	/^    int current_track;      \/\/\/< audio track to return in next packet$/;"	m	struct:__anon403	file:
current_video_data_ptr	libavformat/tiertexseq.c	/^    unsigned char *current_video_data_ptr;$/;"	m	struct:SeqDemuxContext	file:
current_video_data_size	libavformat/tiertexseq.c	/^    unsigned int current_video_data_size;$/;"	m	struct:SeqDemuxContext	file:
currentframe	libavformat/ape.c	/^    int currentframe;$/;"	m	struct:__anon335	file:
currentframe	libavformat/tta.c	/^    int totalframes, currentframe;$/;"	m	struct:__anon483	file:
currentframeblocks	libavcodec/apedec.c	/^    int currentframeblocks;                  \/\/\/< samples (per channel) in current frame$/;"	m	struct:APEContext	file:
currentpic	libavcodec/c93.c	/^    int currentpic;$/;"	m	struct:__anon276	file:
cursize	libavcodec/lzw.c	/^    int cursize;                \/\/\/< The current code size$/;"	m	struct:LZWState	file:
curstream	libavformat/smacker.c	/^    int curstream;$/;"	m	struct:SmackerContext	file:
curstrm	libavformat/siff.c	/^    int curstrm;$/;"	m	struct:SIFFContext	file:
curtileno	libavcodec/j2kdec.c	/^    int16_t curtileno;$/;"	m	struct:__anon98	file:
cust_desc	libavcodec/ivi_common.h	/^    IVIHuffDesc cust_desc;  \/\/\/ custom Huffman codebook descriptor$/;"	m	struct:__anon102
cust_tab	libavcodec/ivi_common.h	/^    VLC         cust_tab;   \/\/\/ vlc table for custom codebook$/;"	m	struct:__anon102
custom_pcf	libavcodec/mpegvideo.h	/^    int custom_pcf;$/;"	m	struct:MpegEncContext
custom_threshold	libavfilter/libmpcodecs/vf_fspp.c	/^static const short custom_threshold[64]=$/;"	v	file:
cutoff	libavcodec/ac3enc.h	/^    int cutoff;                             \/\/\/< user-specified cutoff frequency, in Hz$/;"	m	struct:AC3EncodeContext
cutoff	libavcodec/avcodec.h	/^    int cutoff;$/;"	m	struct:AVCodecContext
cutoff	libavcodec/qdm2.c	/^    short cutoff;$/;"	m	struct:__anon197	file:
cv	libavcodec/cavs.h	/^    uint8_t *cy, *cu, *cv; \/\/\/< current MB sample pointers$/;"	m	struct:__anon207
cvector	libavcodec/truespeech.c	/^    int16_t cvector[8]; \/\/ correlated input vector$/;"	m	struct:__anon160	file:
cvectors	libavcodec/vorbis_enc_data.h	/^} cvectors[] = {$/;"	v	typeref:struct:__anon273
cvh_huffbits	libavcodec/cookdata.h	/^static const uint8_t* const cvh_huffbits[7] = {$/;"	v
cvh_huffbits0	libavcodec/cookdata.h	/^static const uint8_t cvh_huffbits0[191] = {$/;"	v
cvh_huffbits1	libavcodec/cookdata.h	/^static const uint8_t cvh_huffbits1[97] = {$/;"	v
cvh_huffbits2	libavcodec/cookdata.h	/^static const uint8_t cvh_huffbits2[48] = {$/;"	v
cvh_huffbits3	libavcodec/cookdata.h	/^static const uint8_t cvh_huffbits3[607] = {$/;"	v
cvh_huffbits4	libavcodec/cookdata.h	/^static const uint8_t cvh_huffbits4[246] = {$/;"	v
cvh_huffbits5	libavcodec/cookdata.h	/^static const uint8_t cvh_huffbits5[230] = {$/;"	v
cvh_huffbits6	libavcodec/cookdata.h	/^static const uint8_t cvh_huffbits6[32] = {$/;"	v
cvh_huffcodes	libavcodec/cookdata.h	/^static const uint16_t* const cvh_huffcodes[7] = {$/;"	v
cvh_huffcodes0	libavcodec/cookdata.h	/^static const uint16_t cvh_huffcodes0[191] = {$/;"	v
cvh_huffcodes1	libavcodec/cookdata.h	/^static const uint16_t cvh_huffcodes1[97] = {$/;"	v
cvh_huffcodes2	libavcodec/cookdata.h	/^static const uint16_t cvh_huffcodes2[48] = {$/;"	v
cvh_huffcodes3	libavcodec/cookdata.h	/^static const uint16_t cvh_huffcodes3[607] = {$/;"	v
cvh_huffcodes4	libavcodec/cookdata.h	/^static const uint16_t cvh_huffcodes4[246] = {$/;"	v
cvh_huffcodes5	libavcodec/cookdata.h	/^static const uint16_t cvh_huffcodes5[230] = {$/;"	v
cvh_huffcodes6	libavcodec/cookdata.h	/^static const uint16_t cvh_huffcodes6[32] = {$/;"	v
cvid_codebook	libavcodec/cinepak.c	/^} cvid_codebook;$/;"	t	typeref:struct:__anon279	file:
cvid_strip	libavcodec/cinepak.c	/^} cvid_strip;$/;"	t	typeref:struct:__anon280	file:
cvtyuvtoRGB	libswscale/ppc/yuv2rgb_altivec.c	/^static inline void cvtyuvtoRGB (SwsContext *c,$/;"	f	file:
cw	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long w, h, cw, ch, stride, chroma_stride, nplanes;$/;"	m	struct:vf_priv_s	file:
cx	libavcodec/iirfilter.c	/^    int   *cx;$/;"	m	struct:FFIIRFilterCoeffs	file:
cx_pktcpy	libavcodec/libvpxenc.c	/^static inline void cx_pktcpy(struct FrameListData *dst,$/;"	f	file:
cx_states	libavcodec/mqc.c	/^const static MqcCxState cx_states[47] = {$/;"	v	file:
cx_states	libavcodec/mqc.h	/^    uint8_t cx_states[19];$/;"	m	struct:__anon253
cy	libavcodec/cavs.h	/^    uint8_t *cy, *cu, *cv; \/\/\/< current MB sample pointers$/;"	m	struct:__anon207
cy	libavcodec/iirfilter.c	/^    float *cy;$/;"	m	struct:FFIIRFilterCoeffs	file:
cyclTab	libavcodec/imcdata.h	/^static const int8_t cyclTab[32] = {$/;"	v
cyclTab2	libavcodec/imcdata.h	/^static const int8_t cyclTab2[32] = {$/;"	v
cycle_time	libavformat/timefilter.c	/^    double cycle_time;$/;"	m	struct:TimeFilter	file:
cycles	libavformat/rtpdec.h	/^    uint32_t cycles;            \/\/\/< shifted count of sequence number cycles$/;"	m	struct:__anon333
cyuv_decode_end	libavcodec/cyuv.c	/^static av_cold int cyuv_decode_end(AVCodecContext *avctx)$/;"	f	file:
cyuv_decode_frame	libavcodec/cyuv.c	/^static int cyuv_decode_frame(AVCodecContext *avctx,$/;"	f	file:
cyuv_decode_init	libavcodec/cyuv.c	/^static av_cold int cyuv_decode_init(AVCodecContext *avctx)$/;"	f	file:
d	libavcodec/roqvideo.h	/^    int d[2];$/;"	m	struct:__anon125
d	libavdevice/libdc1394.c	/^    dc1394_t *d;$/;"	m	struct:dc1394_data	file:
d	libavfilter/libmpcodecs/vf_ivtc.c	/^    int d, e, o;$/;"	m	struct:metrics	file:
d128	libswscale/yuv2rgb.c	/^        const uint8_t *d128 = dither_8x8_220[y&7];$/;"	v
d128	libswscale/yuv2rgb.c	/^    const uint8_t *d128 = dither_8x8_220[y&7];$/;"	v
d16	libswscale/yuv2rgb.c	/^    const uint8_t *d16 = dither_4x4_16[y&3];$/;"	v
d32	libswscale/yuv2rgb.c	/^    const uint8_t *d32 = dither_8x8_32[y&7];$/;"	v
d64	libswscale/yuv2rgb.c	/^    const uint8_t *d64 =  dither_8x8_73[y&7];$/;"	v
d64	libswscale/yuv2rgb.c	/^    const uint8_t *d64 = dither_8x8_73[y&7];$/;"	v
dar	libavformat/asfdec.c	/^    AVRational dar[128];$/;"	m	struct:__anon332	file:
dark_masking	libavcodec/avcodec.h	/^    float dark_masking;$/;"	m	struct:AVCodecContext
data	libavcodec/4xm.c	/^    uint8_t *data;$/;"	m	struct:CFrameBuffer	file:
data	libavcodec/apedec.c	/^    uint8_t *data;                           \/\/\/< current frame data$/;"	m	struct:APEContext	file:
data	libavcodec/avcodec.h	/^        uint8_t *data;$/;"	m	struct:AVPacket::__anon99
data	libavcodec/avcodec.h	/^    uint8_t *data;$/;"	m	struct:AVPacket
data	libavcodec/avcodec.h	/^    uint8_t *data[4];$/;"	m	struct:AVPicture
data	libavcodec/bink.c	/^    uint8_t *data;     \/\/\/< buffer for decoded symbols$/;"	m	struct:Bundle	file:
data	libavcodec/cinepak.c	/^    const unsigned char *data;$/;"	m	struct:CinepakContext	file:
data	libavcodec/flashsv2enc.c	/^    uint8_t *data;$/;"	m	struct:Block	file:
data	libavcodec/j2k.h	/^    int data[J2K_MAX_CBLKW][J2K_MAX_CBLKH];$/;"	m	struct:__anon209
data	libavcodec/j2k.h	/^    uint8_t data[8192];$/;"	m	struct:__anon213
data	libavcodec/j2k.h	/^   int *data;$/;"	m	struct:__anon217
data	libavcodec/libdirac_libschro.h	/^    void *data;$/;"	m	struct:FfmpegDiracSchroQueueElement
data	libavcodec/qdm2.c	/^    const uint8_t *data; \/\/\/< pointer to subpacket data (points to input data buffer, it's not a private copy)$/;"	m	struct:__anon195	file:
data	libavcodec/sbr.h	/^    SBRData            data[2];$/;"	m	struct:__anon57
data	libavcodec/utils.c	/^    uint8_t *data[4];$/;"	m	struct:InternalBuffer	file:
data	libavcodec/vorbisdec.c	/^    } data;$/;"	m	struct:__anon259	typeref:union:__anon259::vorbis_floor_u	file:
data	libavdevice/fbdev.c	/^    uint8_t *data;           \/\/\/< framebuffer data$/;"	m	struct:__anon314	file:
data	libavfilter/avfilter.h	/^    uint8_t *data[8];           \/\/\/< buffer data for each plane\/channel$/;"	m	struct:AVFilterBuffer
data	libavfilter/avfilter.h	/^    uint8_t *data[8];           \/\/\/< picture\/audio data for each plane$/;"	m	struct:AVFilterBufferRef
data	libavfilter/libmpcodecs/img_format.h	/^    void* data;$/;"	m	struct:__anon33
data	libavformat/cafenc.c	/^    int64_t data;$/;"	m	struct:__anon337	file:
data	libavformat/matroskadec.c	/^    uint8_t *data;$/;"	m	struct:__anon353	file:
data	libavformat/movenc.h	/^    uint8_t *data;$/;"	m	struct:HintSample
data	libavformat/mxf.c	/^    const char data[16];$/;"	m	struct:__anon329	file:
data	libavformat/oggenc.c	/^    uint8_t data[MAX_PAGE_SIZE];$/;"	m	struct:__anon379	file:
data	libavformat/rtmppkt.h	/^    uint8_t        *data;      \/\/\/< packet payload$/;"	m	struct:RTMPPacket
data	libavformat/rtpdec_qcelp.c	/^    uint8_t data[35*9];$/;"	m	struct:__anon386	file:
data	libavformat/rtpdec_vp8.c	/^    AVIOContext *data;$/;"	m	struct:PayloadContext	file:
data	libavformat/tiertexseq.c	/^    unsigned char *data;$/;"	m	struct:TiertexSeqFrameBuffer	file:
data	libavformat/wav.c	/^    int64_t data;$/;"	m	struct:__anon409	file:
data	tools/graph2dot.c	/^    char data[256];$/;"	m	struct:line	file:
data_blocks	libavcodec/xvmc.h	/^    short*          data_blocks;$/;"	m	struct:xvmc_pix_fmt
data_check_present	libavcodec/mlpdec.c	/^    uint8_t     data_check_present;$/;"	m	struct:SubStream	file:
data_codec_name	ffmpeg.c	/^static char *data_codec_name = NULL;$/;"	v	file:
data_codec_name	ffmpeg/ffmpeg.c	/^static char *data_codec_name = NULL;$/;"	v	file:
data_codec_tag	ffmpeg.c	/^static unsigned int data_codec_tag = 0;$/;"	v	file:
data_codec_tag	ffmpeg/ffmpeg.c	/^static unsigned int data_codec_tag = 0;$/;"	v	file:
data_count	ffserver.c	/^    int64_t data_count;$/;"	m	struct:HTTPContext	file:
data_count	ffserver.c	/^    long long data_count;$/;"	m	struct:FeedData	file:
data_count	libavcodec/dwt.h	/^    int data_count;$/;"	m	struct:slice_buffer_s
data_definition_ul	libavformat/mxfdec.c	/^    UID data_definition_ul;$/;"	m	struct:__anon440	file:
data_definition_ul	libavformat/mxfdec.c	/^    UID data_definition_ul;$/;"	m	struct:__anon441	file:
data_disable	ffmpeg.c	/^static int data_disable = 0;$/;"	v	file:
data_disable	ffmpeg/ffmpeg.c	/^static int data_disable = 0;$/;"	v	file:
data_end	libavcodec/apedec.c	/^    uint8_t *data_end;                       \/\/\/< frame data end$/;"	m	struct:APEContext	file:
data_end	libavcodec/bink.c	/^    uint8_t *data_end; \/\/\/< buffer end$/;"	m	struct:Bundle	file:
data_end	libavformat/aiffdec.c	/^    int64_t data_end;$/;"	m	struct:__anon411	file:
data_end	libavformat/wav.c	/^    int64_t data_end;$/;"	m	struct:__anon409	file:
data_end	libavformat/xwma.c	/^    int64_t data_end;$/;"	m	struct:__anon430	file:
data_index	libavformat/mpegts.c	/^    int data_index;$/;"	m	struct:PESContext	file:
data_length	libavcodec/tta.c	/^    int flags, channels, bps, is_float, data_length;$/;"	m	struct:TTAContext	file:
data_object_offset	libavformat/asfdec.c	/^    uint64_t data_object_offset;         \/\/\/< data object offset (excl. GUID & size)$/;"	m	struct:__anon332	file:
data_object_size	libavformat/asfdec.c	/^    uint64_t data_object_size;           \/\/\/< size of the data object$/;"	m	struct:__anon332	file:
data_offset	libavcodec/vp3.c	/^    int data_offset[3];$/;"	m	struct:Vp3DecodeContext	file:
data_offset	libavformat/asfdec.c	/^    uint64_t data_offset;                \/\/\/< beginning of the first data packet$/;"	m	struct:__anon332	file:
data_offset	libavformat/asfenc.c	/^    uint64_t data_offset;                \/\/\/< beginning of the first data packet$/;"	m	struct:__anon470	file:
data_offset	libavformat/avformat.h	/^    int64_t data_offset; \/**< offset of the first packet *\/$/;"	m	struct:AVFormatContext
data_offset	libavformat/matroskadec.c	/^    int data_offset;$/;"	m	struct:EbmlSyntax	file:
data_partitioning	libavcodec/mpegvideo.h	/^    int data_partitioning;           \/\/\/< data partitioning flag from header$/;"	m	struct:MpegEncContext
data_pos	libavformat/rmenc.c	/^    int data_pos; \/* position of the data after the header *\/$/;"	m	struct:__anon383	file:
data_ptr	libavcodec/ivi_common.h	/^    const uint8_t   *data_ptr;      \/\/\/< ptr to the first byte of the band data$/;"	m	struct:__anon107
data_size	libavcodec/flashsv2enc.c	/^    unsigned long data_size;$/;"	m	struct:Block	file:
data_size	libavcodec/ivi_common.h	/^    int             data_size;      \/\/\/< size of the band data$/;"	m	struct:__anon107
data_size	libavcodec/ivi_common.h	/^    int         data_size; \/\/\/< size of the data in bytes$/;"	m	struct:__anon106
data_size	libavcodec/wavpack.c	/^    int data_size; \/\/ in bits$/;"	m	struct:WavpackFrameContext	file:
data_size	libavformat/cafdec.c	/^    int64_t data_size;              \/\/\/< raw data size, in bytes$/;"	m	struct:__anon422	file:
data_size	libavformat/mmf.c	/^    int64_t data_size;$/;"	m	struct:__anon319	file:
data_size	libavformat/qcp.c	/^    uint32_t data_size;                     \/\/\/< size of data chunk$/;"	m	struct:__anon479	file:
data_size	libavformat/rtmppkt.h	/^    int            data_size;  \/\/\/< packet payload size$/;"	m	struct:RTMPPacket
data_size	libavformat/tiertexseq.c	/^    int data_size;$/;"	m	struct:TiertexSeqFrameBuffer	file:
data_stack	libavcodec/dwt.h	/^    IDWTELEM * * data_stack; \/\/\/< Used for internal purposes.$/;"	m	struct:slice_buffer_s
data_stack_top	libavcodec/dwt.h	/^    int data_stack_top;$/;"	m	struct:slice_buffer_s
data_start	libavformat/cafdec.c	/^    int64_t data_start;             \/\/\/< data start position, in bytes$/;"	m	struct:__anon422	file:
data_stream_copy	ffmpeg.c	/^static int data_stream_copy = 0;$/;"	v	file:
data_stream_copy	ffmpeg/ffmpeg.c	/^static int data_stream_copy = 0;$/;"	v	file:
data_type	libavformat/spdifenc.c	/^    enum IEC61937DataType data_type;\/\/\/< burst info - reference to type of payload of the data-burst$/;"	m	struct:IEC61937Context	typeref:enum:IEC61937Context::IEC61937DataType	file:
databuffer	libavcodec/flashsv2enc.c	/^    uint8_t *databuffer;$/;"	m	struct:FlashSV2Context	file:
datarate	ffserver.c	/^    DataRateData datarate;$/;"	m	struct:HTTPContext	file:
date_get_num	libavutil/parseutils.c	/^static int date_get_num(const char **pp,$/;"	f	file:
daud_header	libavformat/daud.c	/^static int daud_header(AVFormatContext *s, AVFormatParameters *ap) {$/;"	f	file:
daud_packet	libavformat/daud.c	/^static int daud_packet(AVFormatContext *s, AVPacket *pkt) {$/;"	f	file:
daud_write_header	libavformat/daud.c	/^static int daud_write_header(struct AVFormatContext *s)$/;"	f	file:
daud_write_packet	libavformat/daud.c	/^static int daud_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
db_per_bit	libavcodec/ac3.h	/^    int slow_gain, slow_decay, fast_decay, db_per_bit, floor;$/;"	m	struct:AC3BitAllocParameters
db_per_bit_code	libavcodec/ac3enc.h	/^    int db_per_bit_code;                    \/\/\/< dB\/bit code                            (dbpbcod)$/;"	m	struct:AC3EncodeContext
dba_lengths	libavcodec/ac3dec.h	/^    uint8_t dba_lengths[AC3_MAX_CHANNELS][8];       \/\/\/< delta segment lengths$/;"	m	struct:__anon88
dba_mode	libavcodec/ac3dec.h	/^    int dba_mode[AC3_MAX_CHANNELS];                 \/\/\/< delta bit allocation mode$/;"	m	struct:__anon88
dba_nsegs	libavcodec/ac3dec.h	/^    int dba_nsegs[AC3_MAX_CHANNELS];                \/\/\/< number of delta segments$/;"	m	struct:__anon88
dba_offsets	libavcodec/ac3dec.h	/^    uint8_t dba_offsets[AC3_MAX_CHANNELS][8];       \/\/\/< delta segment offsets$/;"	m	struct:__anon88
dba_syntax	libavcodec/ac3dec.h	/^    int dba_syntax;                         \/\/\/< delta bit allocation syntax enabled    (dbaflde)$/;"	m	struct:__anon88
dba_values	libavcodec/ac3dec.h	/^    uint8_t dba_values[AC3_MAX_CHANNELS][8];        \/\/\/< delta values for each segment$/;"	m	struct:__anon88
dbgprintf	tools/cws2fws.c	17;"	d	file:
dbgprintf	tools/cws2fws.c	19;"	d	file:
dbl	libavutil/opt.h	/^        double dbl;$/;"	m	union:AVOption::__anon304
dbl_pulses	libavcodec/wmavoice.c	/^    uint8_t dbl_pulses;   \/\/\/< how many pulse vectors have pulse pairs$/;"	m	struct:frame_type_desc	file:
dc	libavcodec/vp3.c	/^    int16_t dc;$/;"	m	struct:Vp3Fragment	file:
dc1394_close	libavdevice/libdc1394.c	/^static int dc1394_close(AVFormatContext * context)$/;"	f	file:
dc1394_color_coding	libavdevice/libdc1394.c	/^struct dc1394_color_coding {$/;"	s	file:
dc1394_color_codings	libavdevice/libdc1394.c	/^} dc1394_color_codings[] = {$/;"	v	typeref:struct:dc1394_color_coding
dc1394_data	libavdevice/libdc1394.c	/^typedef struct dc1394_data {$/;"	s	file:
dc1394_data	libavdevice/libdc1394.c	/^} dc1394_data;$/;"	t	typeref:struct:dc1394_data	file:
dc1394_frame_rate	libavdevice/libdc1394.c	/^struct dc1394_frame_rate {$/;"	s	file:
dc1394_frame_rates	libavdevice/libdc1394.c	/^} dc1394_frame_rates[] = {$/;"	v	typeref:struct:dc1394_frame_rate
dc1394_read_header	libavdevice/libdc1394.c	/^static int dc1394_read_header(AVFormatContext *c, AVFormatParameters * ap)$/;"	f	file:
dc1394_read_packet	libavdevice/libdc1394.c	/^static int dc1394_read_packet(AVFormatContext *c, AVPacket *pkt)$/;"	f	file:
dc1Test	libavfilter/libmpcodecs/vf_test.c	/^static void dc1Test(uint8_t *dst, int stride, int w, int h, int off)$/;"	f	file:
dc_bias	libavcodec/vp3data.h	/^static const uint16_t dc_bias[16][32][2] = {$/;"	v
dc_bits	libavcodec/dnxhddata.h	/^    const uint8_t *dc_codes, *dc_bits;$/;"	m	struct:__anon281
dc_cache	libavcodec/mpegvideo.h	/^    int16_t dc_cache[4*5];$/;"	m	struct:MpegEncContext
dc_ccp_tab	libavcodec/asv1.c	/^static const uint8_t dc_ccp_tab[8][2]={$/;"	v	file:
dc_ccp_vlc	libavcodec/asv1.c	/^static VLC dc_ccp_vlc;$/;"	v	file:
dc_chrom	libavcodec/mpeg4videodec.c	/^static VLC dc_lum, dc_chrom;$/;"	v	file:
dc_codes	libavcodec/dnxhddata.h	/^    const uint8_t *dc_codes, *dc_bits;$/;"	m	struct:__anon281
dc_coeff	libavcodec/vp56.h	/^    DCTELEM dc_coeff;$/;"	m	struct:__anon221
dc_index	libavcodec/mjpegdec.h	/^    int dc_index[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext
dc_index_offset	libavcodec/intrax8.c	/^static const uint8_t dc_index_offset[]  ={ 0, 1,2, 3,4, 5,7, 9,13, 17,25, 33,49, 65,97, 129,193};$/;"	v	file:
dc_level	libavcodec/wmavoice.c	/^    int dc_level;                 \/\/\/< Predicted amount of DC noise, based$/;"	m	struct:__anon157	file:
dc_lum	libavcodec/mpeg4videodec.c	/^static VLC dc_lum, dc_chrom;$/;"	v	file:
dc_table_index	libavcodec/mpegvideo.h	/^    int dc_table_index;$/;"	m	struct:MpegEncContext
dc_transform	libavcodec/ivi_common.h	/^    DCTransformPtr  *dc_transform;$/;"	m	struct:__anon107
dc_val	libavcodec/mpegvideo.h	/^    int16_t *dc_val[3];            \/\/\/< used for mpeg4 DC prediction, all 3 arrays must be continuous$/;"	m	struct:MpegEncContext
dc_val_base	libavcodec/mpegvideo.h	/^    int16_t *dc_val_base;$/;"	m	struct:MpegEncContext
dc_vlc	libavcodec/dnxhddec.c	/^    VLC ac_vlc, dc_vlc, run_vlc;$/;"	m	struct:__anon154	file:
dc_vlc	libavcodec/vp3.c	/^    VLC dc_vlc[16];$/;"	m	struct:Vp3DecodeContext	file:
dca_bit_rates	libavcodec/dcadata.h	/^static const uint32_t dca_bit_rates[32] =$/;"	v
dca_bitalloc_index	libavcodec/dca.c	/^static BitAlloc dca_bitalloc_index;    \/\/\/< indexes for samples VLC select$/;"	v	file:
dca_bits_per_sample	libavcodec/dcadata.h	/^static const uint8_t dca_bits_per_sample[7] =$/;"	v
dca_buffer	libavcodec/dca.c	/^    uint8_t dca_buffer[DCA_MAX_FRAME_SIZE + DCA_MAX_EXSS_HEADER_SIZE + DCA_BUFFER_PADDING_SIZE];$/;"	m	struct:__anon93	file:
dca_buffer_size	libavcodec/dca.c	/^    int dca_buffer_size;        \/\/\/< how much data is in the dca_buffer$/;"	m	struct:__anon93	file:
dca_channel_reorder_lfe	libavcodec/dca.c	/^static const int8_t dca_channel_reorder_lfe[][9] = {$/;"	v	file:
dca_channel_reorder_lfe	libavcodec/dcaenc.c	/^static const int8_t dca_channel_reorder_lfe[][9] = {$/;"	v	file:
dca_channel_reorder_lfe_xch	libavcodec/dca.c	/^static const int8_t dca_channel_reorder_lfe_xch[][9] = {$/;"	v	file:
dca_channel_reorder_nolfe	libavcodec/dca.c	/^static const int8_t dca_channel_reorder_nolfe[][9] = {$/;"	v	file:
dca_channel_reorder_nolfe	libavcodec/dcaenc.c	/^static const int8_t dca_channel_reorder_nolfe[][9] = {$/;"	v	file:
dca_channel_reorder_nolfe_xch	libavcodec/dca.c	/^static const int8_t dca_channel_reorder_nolfe_xch[][9] = {$/;"	v	file:
dca_channels	libavcodec/dcadata.h	/^static const uint8_t dca_channels[16] =$/;"	v
dca_convert_bitstream	libavcodec/dca.c	/^static int dca_convert_bitstream(const uint8_t * src, int src_size, uint8_t * dst,$/;"	f	file:
dca_core_channel_layout	libavcodec/dca.c	/^static const int64_t dca_core_channel_layout[] = {$/;"	v	file:
dca_decode_block	libavcodec/dca.c	/^static int dca_decode_block(DCAContext * s, int base_channel, int block_index)$/;"	f	file:
dca_decode_end	libavcodec/dca.c	/^static av_cold int dca_decode_end(AVCodecContext * avctx)$/;"	f	file:
dca_decode_frame	libavcodec/dca.c	/^static int dca_decode_frame(AVCodecContext * avctx,$/;"	f	file:
dca_decode_init	libavcodec/dca.c	/^static av_cold int dca_decode_init(AVCodecContext * avctx)$/;"	f	file:
dca_default_coeffs	libavcodec/dcadata.h	/^static const uint8_t dca_default_coeffs[16][5][2] = {$/;"	v
dca_downmix	libavcodec/dca.c	/^static void dca_downmix(float *samples, int srcfmt,$/;"	f	file:
dca_downmix_coeffs	libavcodec/dcadata.h	/^static const float dca_downmix_coeffs[65] = {$/;"	v
dca_exss_mask2count	libavcodec/dca.c	/^static int dca_exss_mask2count(int mask)$/;"	f	file:
dca_exss_parse_asset_header	libavcodec/dca.c	/^static int dca_exss_parse_asset_header(DCAContext *s)$/;"	f	file:
dca_exss_parse_header	libavcodec/dca.c	/^static void dca_exss_parse_header(DCAContext *s)$/;"	f	file:
dca_exss_skip_mix_coeffs	libavcodec/dca.c	/^static void dca_exss_skip_mix_coeffs(GetBitContext *gb, int channels, int out_ch)$/;"	f	file:
dca_ext_audio_descr_mask	libavcodec/dca.c	/^static const int dca_ext_audio_descr_mask[] = {$/;"	v	file:
dca_filter_channels	libavcodec/dca.c	/^static int dca_filter_channels(DCAContext * s, int block_index)$/;"	f	file:
dca_find_frame_end	libavcodec/dca_parser.c	/^static int dca_find_frame_end(DCAParseContext * pc1, const uint8_t * buf,$/;"	f	file:
dca_init_vlcs	libavcodec/dca.c	/^static av_cold void dca_init_vlcs(void)$/;"	f	file:
dca_lfe_fir_c	libavcodec/dcadsp.c	/^static void dca_lfe_fir_c(float *out, const float *in, const float *coefs,$/;"	f	file:
dca_lfe_index	libavcodec/dca.c	/^static const int8_t dca_lfe_index[] = {$/;"	v	file:
dca_lfe_index	libavcodec/dcaenc.c	/^static const int8_t dca_lfe_index[] = {$/;"	v	file:
dca_parse	libavcodec/dca_parser.c	/^static int dca_parse(AVCodecParserContext * s,$/;"	f	file:
dca_parse_audio_coding_header	libavcodec/dca.c	/^static int dca_parse_audio_coding_header(DCAContext * s, int base_channel)$/;"	f	file:
dca_parse_frame_header	libavcodec/dca.c	/^static int dca_parse_frame_header(DCAContext * s)$/;"	f	file:
dca_parse_init	libavcodec/dca_parser.c	/^static av_cold int dca_parse_init(AVCodecParserContext * s)$/;"	f	file:
dca_sample_rates	libavcodec/dcadata.h	/^static const uint32_t dca_sample_rates[16] =$/;"	v
dca_scalefactor	libavcodec/dca.c	/^static BitAlloc dca_scalefactor;       \/\/\/< scalefactor VLCs$/;"	v	file:
dca_smpl_bitalloc	libavcodec/dca.c	/^static BitAlloc dca_smpl_bitalloc[11]; \/\/\/< samples VLCs$/;"	v	file:
dca_subframe_footer	libavcodec/dca.c	/^static int dca_subframe_footer(DCAContext * s, int base_channel)$/;"	f	file:
dca_subframe_header	libavcodec/dca.c	/^static int dca_subframe_header(DCAContext * s, int base_channel, int block_index)$/;"	f	file:
dca_subsubframe	libavcodec/dca.c	/^static int dca_subsubframe(DCAContext * s, int base_channel, int block_index)$/;"	f	file:
dca_tmode	libavcodec/dca.c	/^static BitAlloc dca_tmode;             \/\/\/< transition mode VLCs$/;"	v	file:
dca_vlc_offs	libavcodec/dca.c	/^static const uint16_t dca_vlc_offs[] = {$/;"	v	file:
dcadsp	libavcodec/dca.c	/^    DCADSPContext dcadsp;$/;"	m	struct:__anon93	file:
dccv_vlc	libavcodec/vp56.h	/^    VLC dccv_vlc[2];$/;"	m	struct:vp56_context
dcf_mem	libavcodec/wmavoice.c	/^    float dcf_mem[2];             \/\/\/< DC filter history$/;"	m	struct:__anon157	file:
dct	libavcodec/binkaudio.c	/^        DCTContext dct;$/;"	m	union:__anon136::__anon137	file:
dct	libavcodec/wmavoice.c	/^    DCTContext dct, dst;          \/\/\/< contexts for phase shift (in Hilbert$/;"	m	struct:__anon157	file:
dct264_sad	libavcodec/dsputil.h	/^    me_cmp_func dct264_sad[6];$/;"	m	struct:DSPContext
dct264_sad8x8_c	libavcodec/dsputil.c	/^static int dct264_sad8x8_c(\/*MpegEncContext*\/ void *c, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
dct32	libavcodec/dct.h	/^    void (*dct32)(FFTSample *out, const FFTSample *in);$/;"	m	struct:DCTContext
dct32	libavcodec/dct32.c	/^void dct32(INTFLOAT *out, const INTFLOAT *tab)$/;"	f
dct32	libavcodec/dct32.c	26;"	d	file:
dct32	libavcodec/dct32.c	31;"	d	file:
dct32_fixed	libavcodec/mpegaudiodsp.h	/^    void (*dct32_fixed)(int *dst, const int *src);$/;"	m	struct:MPADSPContext
dct32_float	libavcodec/mpegaudiodsp.h	/^    void (*dct32_float)(float *dst, const float *src);$/;"	m	struct:MPADSPContext
dct32_func	libavcodec/dct.c	/^static void dct32_func(DCTContext *ctx, FFTSample *data)$/;"	f	file:
dctA_c	libavfilter/libmpcodecs/vf_pp7.c	/^static inline void dctA_c(DCTELEM *dst, uint8_t *src, int stride){$/;"	f	file:
dctB	libavfilter/libmpcodecs/vf_pp7.c	/^static void (*dctB)(DCTELEM *dst, DCTELEM *src)= dctB_c;$/;"	v	file:
dctB_c	libavfilter/libmpcodecs/vf_pp7.c	/^static void dctB_c(DCTELEM *dst, DCTELEM *src){$/;"	f	file:
dctB_mmx	libavfilter/libmpcodecs/vf_pp7.c	/^static void dctB_mmx(DCTELEM *dst, DCTELEM *src){$/;"	f	file:
dct_algo	libavcodec/avcodec.h	/^    int dct_algo;$/;"	m	struct:AVCodecContext
dct_calc	libavcodec/dct.h	/^    void (*dct_calc)(struct DCTContext *s, FFTSample *data);$/;"	m	struct:DCTContext
dct_coeff	libavcodec/bfin/fdct_bfin.S	/^dct_coeff:$/;"	l
dct_count	libavcodec/mpegvideo.h	/^    int dct_count[2];$/;"	m	struct:MpegEncContext
dct_error	libavcodec/dct-test.c	/^static void dct_error(const char *name, int is_idct,$/;"	f	file:
dct_error_sum	libavcodec/mpegvideo.h	/^    int (*dct_error_sum)[64];$/;"	m	struct:MpegEncContext
dct_get	libavcodec/asv1.c	/^static inline void dct_get(ASV1Context *a, int mb_x, int mb_y){$/;"	f	file:
dct_max	libavcodec/dsputil.h	/^    me_cmp_func dct_max[6];$/;"	m	struct:DSPContext
dct_max8x8_c	libavcodec/dsputil.c	/^static int dct_max8x8_c(\/*MpegEncContext*\/ void *c, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
dct_mode	libavcodec/dv.c	/^    int      dct_mode;$/;"	m	struct:EncBlockInfo	file:
dct_offset	libavcodec/mpegvideo.h	/^    uint16_t (*dct_offset)[64];$/;"	m	struct:MpegEncContext
dct_quantize	libavcodec/mpegvideo.h	/^    int (*dct_quantize)(struct MpegEncContext *s, DCTELEM *block\/*align 16*\/, int n, int qscale, int *overflow);$/;"	m	struct:MpegEncContext
dct_quantize	libavcodec/x86/mpegvideo_mmx_template.c	/^static int RENAME(dct_quantize)(MpegEncContext *s,$/;"	f	file:
dct_quantize_altivec	libavcodec/ppc/mpegvideo_altivec.c	/^static int dct_quantize_altivec(MpegEncContext* s,$/;"	f	file:
dct_quantize_bfin	libavcodec/bfin/mpegvideo_bfin.c	/^static int dct_quantize_bfin (MpegEncContext *s,$/;"	f	file:
dct_quantize_c	libavcodec/mpegvideo_enc.c	/^int dct_quantize_c(MpegEncContext *s,$/;"	f
dct_quantize_refine	libavcodec/mpegvideo_enc.c	/^static int dct_quantize_refine(MpegEncContext *s, \/\/FIXME breaks denoise?$/;"	f	file:
dct_quantize_trellis_c	libavcodec/mpegvideo_enc.c	/^static int dct_quantize_trellis_c(MpegEncContext *s,$/;"	f	file:
dct_ref	libavcodec/fft-test.c	/^static void dct_ref(float *output, float *input, int nbits)$/;"	f	file:
dct_sad	libavcodec/dsputil.h	/^    me_cmp_func dct_sad[6];$/;"	m	struct:DSPContext
dct_sad8x8_c	libavcodec/dsputil.c	/^static int dct_sad8x8_c(\/*MpegEncContext*\/ void *c, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
dct_single_coeff_elimination	libavcodec/mpegvideo_enc.c	/^static inline void dct_single_coeff_elimination(MpegEncContext *s, int n, int threshold)$/;"	f	file:
dct_token	libavcodec/vp8.h	/^enum dct_token {$/;"	g
dct_tokens	libavcodec/vp3.c	/^    int16_t *dct_tokens[3][64];$/;"	m	struct:Vp3DecodeContext	file:
dct_tokens_base	libavcodec/vp3.c	/^    int16_t *dct_tokens_base;$/;"	m	struct:Vp3DecodeContext	file:
dct_unquantize_h261_inter	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_h261_inter)(struct MpegEncContext *s,$/;"	m	struct:MpegEncContext
dct_unquantize_h261_intra	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_h261_intra)(struct MpegEncContext *s,$/;"	m	struct:MpegEncContext
dct_unquantize_h263_altivec	libavcodec/ppc/mpegvideo_altivec.c	/^static void dct_unquantize_h263_altivec(MpegEncContext *s,$/;"	f	file:
dct_unquantize_h263_axp	libavcodec/alpha/mpegvideo_alpha.c	/^static void dct_unquantize_h263_axp(DCTELEM *block, int n_coeffs,$/;"	f	file:
dct_unquantize_h263_helper_c	libavcodec/arm/mpegvideo_armv5te.c	/^static inline void dct_unquantize_h263_helper_c(DCTELEM *block, int qmul, int qadd, int count)$/;"	f	file:
dct_unquantize_h263_inter	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_h263_inter)(struct MpegEncContext *s,$/;"	m	struct:MpegEncContext
dct_unquantize_h263_inter_armv5te	libavcodec/arm/mpegvideo_armv5te.c	/^static void dct_unquantize_h263_inter_armv5te(MpegEncContext *s,$/;"	f	file:
dct_unquantize_h263_inter_axp	libavcodec/alpha/mpegvideo_alpha.c	/^static void dct_unquantize_h263_inter_axp(MpegEncContext *s, DCTELEM *block,$/;"	f	file:
dct_unquantize_h263_inter_c	libavcodec/mpegvideo.c	/^static void dct_unquantize_h263_inter_c(MpegEncContext *s,$/;"	f	file:
dct_unquantize_h263_inter_mmx	libavcodec/x86/mpegvideo_mmx.c	/^static void dct_unquantize_h263_inter_mmx(MpegEncContext *s,$/;"	f	file:
dct_unquantize_h263_intra	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_h263_intra)(struct MpegEncContext *s,$/;"	m	struct:MpegEncContext
dct_unquantize_h263_intra_armv5te	libavcodec/arm/mpegvideo_armv5te.c	/^static void dct_unquantize_h263_intra_armv5te(MpegEncContext *s,$/;"	f	file:
dct_unquantize_h263_intra_axp	libavcodec/alpha/mpegvideo_alpha.c	/^static void dct_unquantize_h263_intra_axp(MpegEncContext *s, DCTELEM *block,$/;"	f	file:
dct_unquantize_h263_intra_c	libavcodec/mpegvideo.c	/^static void dct_unquantize_h263_intra_c(MpegEncContext *s,$/;"	f	file:
dct_unquantize_h263_intra_iwmmxt	libavcodec/arm/mpegvideo_iwmmxt.c	/^static void dct_unquantize_h263_intra_iwmmxt(MpegEncContext *s,$/;"	f	file:
dct_unquantize_h263_intra_mmx	libavcodec/x86/mpegvideo_mmx.c	/^static void dct_unquantize_h263_intra_mmx(MpegEncContext *s,$/;"	f	file:
dct_unquantize_h263_mmi	libavcodec/ps2/mpegvideo_mmi.c	/^static void dct_unquantize_h263_mmi(MpegEncContext *s,$/;"	f	file:
dct_unquantize_inter	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_inter)(struct MpegEncContext *s, \/\/ unquantizer to use (mpeg4 can use both)$/;"	m	struct:MpegEncContext
dct_unquantize_intra	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_intra)(struct MpegEncContext *s, \/\/ unquantizer to use (mpeg4 can use both)$/;"	m	struct:MpegEncContext
dct_unquantize_mpeg1_inter	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_mpeg1_inter)(struct MpegEncContext *s,$/;"	m	struct:MpegEncContext
dct_unquantize_mpeg1_inter_c	libavcodec/mpegvideo.c	/^static void dct_unquantize_mpeg1_inter_c(MpegEncContext *s,$/;"	f	file:
dct_unquantize_mpeg1_inter_mmx	libavcodec/x86/mpegvideo_mmx.c	/^static void dct_unquantize_mpeg1_inter_mmx(MpegEncContext *s,$/;"	f	file:
dct_unquantize_mpeg1_intra	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_mpeg1_intra)(struct MpegEncContext *s,$/;"	m	struct:MpegEncContext
dct_unquantize_mpeg1_intra_c	libavcodec/mpegvideo.c	/^static void dct_unquantize_mpeg1_intra_c(MpegEncContext *s,$/;"	f	file:
dct_unquantize_mpeg1_intra_mmx	libavcodec/x86/mpegvideo_mmx.c	/^static void dct_unquantize_mpeg1_intra_mmx(MpegEncContext *s,$/;"	f	file:
dct_unquantize_mpeg2_inter	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_mpeg2_inter)(struct MpegEncContext *s,$/;"	m	struct:MpegEncContext
dct_unquantize_mpeg2_inter_c	libavcodec/mpegvideo.c	/^static void dct_unquantize_mpeg2_inter_c(MpegEncContext *s,$/;"	f	file:
dct_unquantize_mpeg2_inter_mmx	libavcodec/x86/mpegvideo_mmx.c	/^static void dct_unquantize_mpeg2_inter_mmx(MpegEncContext *s,$/;"	f	file:
dct_unquantize_mpeg2_intra	libavcodec/mpegvideo.h	/^    void (*dct_unquantize_mpeg2_intra)(struct MpegEncContext *s,$/;"	m	struct:MpegEncContext
dct_unquantize_mpeg2_intra_bitexact	libavcodec/mpegvideo.c	/^static void dct_unquantize_mpeg2_intra_bitexact(MpegEncContext *s,$/;"	f	file:
dct_unquantize_mpeg2_intra_c	libavcodec/mpegvideo.c	/^static void dct_unquantize_mpeg2_intra_c(MpegEncContext *s,$/;"	f	file:
dct_unquantize_mpeg2_intra_mmx	libavcodec/x86/mpegvideo_mmx.c	/^static void dct_unquantize_mpeg2_intra_mmx(MpegEncContext *s,$/;"	f	file:
dct_uv_offset	libavcodec/dnxhdenc.h	/^    unsigned dct_uv_offset;$/;"	m	struct:DNXHDEncContext
dct_y_offset	libavcodec/dnxhdenc.h	/^    unsigned dct_y_offset;$/;"	m	struct:DNXHDEncContext
dctcoef	libavcodec/high_bit_depth.h	29;"	d
dctcoef	libavcodec/high_bit_depth.h	61;"	d
dctcoef_get	libavcodec/h264.c	/^static av_always_inline int dctcoef_get(DCTELEM *mb, int high_bit_depth, int index) {$/;"	f	file:
dctcoef_set	libavcodec/h264.c	/^static av_always_inline void dctcoef_set(DCTELEM *mb, int high_bit_depth, int index, int value) {$/;"	f	file:
deInterlaceBlendLinear	libpostproc/postprocess_template.c	/^static inline void RENAME(deInterlaceBlendLinear)(uint8_t src[], int stride, uint8_t *tmp)$/;"	f	file:
deInterlaceFF	libpostproc/postprocess_template.c	/^static inline void RENAME(deInterlaceFF)(uint8_t src[], int stride, uint8_t *tmp)$/;"	f	file:
deInterlaceInterpolateCubic	libpostproc/postprocess_template.c	/^static inline void RENAME(deInterlaceInterpolateCubic)(uint8_t src[], int stride)$/;"	f	file:
deInterlaceInterpolateLinear	libpostproc/postprocess_template.c	/^static inline void RENAME(deInterlaceInterpolateLinear)(uint8_t src[], int stride)$/;"	f	file:
deInterlaceL5	libpostproc/postprocess_template.c	/^static inline void RENAME(deInterlaceL5)(uint8_t src[], int stride, uint8_t *tmp, uint8_t *tmp2)$/;"	f	file:
deInterlaceMedian	libpostproc/postprocess_template.c	/^static inline void RENAME(deInterlaceMedian)(uint8_t src[], int stride)$/;"	f	file:
deNoise	libavfilter/libmpcodecs/vf_denoise3d.c	/^static void deNoise(unsigned char *Frame,        \/\/ mpi->planes[x]$/;"	f	file:
deNoise	libavfilter/libmpcodecs/vf_hqdn3d.c	/^static void deNoise(unsigned char *Frame,        \/\/ mpi->planes[x]$/;"	f	file:
deNoise	libavfilter/vf_hqdn3d.c	/^static void deNoise(unsigned char *Frame,$/;"	f	file:
deNoiseSpacial	libavfilter/libmpcodecs/vf_hqdn3d.c	/^static void deNoiseSpacial($/;"	f	file:
deNoiseSpacial	libavfilter/vf_hqdn3d.c	/^static void deNoiseSpacial(unsigned char *Frame,$/;"	f	file:
deNoiseTemporal	libavfilter/libmpcodecs/vf_hqdn3d.c	/^static void deNoiseTemporal($/;"	f	file:
deNoiseTemporal	libavfilter/vf_hqdn3d.c	/^static void deNoiseTemporal(unsigned char *FrameSrc,$/;"	f	file:
de_emphasis	libavcodec/amrwbdec.c	/^static void de_emphasis(float *out, float *in, float m, float mem[1])$/;"	f	file:
deadline	libavcodec/libvpxenc.c	/^    int deadline; \/\/i.e., RT\/GOOD\/BEST$/;"	m	struct:VP8EncoderContext	file:
deblock_coefs	libavcodec/rv34.h	/^    int      *deblock_coefs; \/\/\/< deblock coefficients for each macroblock$/;"	m	struct:RV34DecContext
deblock_filter	libavcodec/vp8.h	/^    uint8_t deblock_filter;$/;"	m	struct:__anon182
deblock_filtering	libavcodec/vp56.h	/^    int deblock_filtering;$/;"	m	struct:vp56_context
deblockalpha	libavcodec/avcodec.h	/^    int deblockalpha;$/;"	m	struct:AVCodecContext
deblockbeta	libavcodec/avcodec.h	/^    int deblockbeta;$/;"	m	struct:AVCodecContext
deblocking_filter	libavcodec/h264.h	/^    int deblocking_filter;         \/\/\/< disable_deblocking_filter_idc with 1<->0$/;"	m	struct:H264Context
deblocking_filter_parameters_present	libavcodec/h264.h	/^    int deblocking_filter_parameters_present; \/\/\/< deblocking_filter_parameters_present_flag$/;"	m	struct:PPS
debug	libavcodec/avcodec.h	/^    int debug;$/;"	m	struct:AVCodecContext
debug	libavformat/avformat.h	/^    int debug;$/;"	m	struct:AVFormatContext
debug_flag	libavcodec/dca.c	/^    int debug_flag;             \/\/\/< used for suppressing repeated error messages output$/;"	m	struct:__anon93	file:
debug_mv	libavcodec/avcodec.h	/^    int debug_mv;$/;"	m	struct:AVCodecContext
dec	libavcodec/libcelt_dec.c	/^    CELTDecoder *dec;$/;"	m	struct:libcelt_context	file:
decTable1	libavcodec/atrac3data.h	/^static const int8_t decTable1[18] = {0,0, 0,1, 0,-1, 1,0, -1,0, 1,1, 1,-1, -1,1, -1,-1};$/;"	v
dec_2dvlc	libavcodec/cavs.h	/^struct dec_2dvlc {$/;"	s
dec_bark_env	libavcodec/twinvq.c	/^static void dec_bark_env(TwinContext *tctx, const uint8_t *in, int use_hist,$/;"	f	file:
dec_delay3_1st	libavcodec/sipr16k.c	/^static int dec_delay3_1st(int index)$/;"	f	file:
dec_delay3_2nd	libavcodec/sipr16k.c	/^static int dec_delay3_2nd(int index, int pit_min, int pit_max,$/;"	f	file:
dec_frame_queue	libavcodec/libschroedingerdec.c	/^    FfmpegDiracSchroQueue dec_frame_queue;$/;"	m	struct:FfmpegSchroDecoderParams	file:
dec_gain	libavcodec/twinvq.c	/^static void dec_gain(TwinContext *tctx, GetBitContext *gb, enum FrameType ftype,$/;"	f	file:
dec_lpc_spectrum_inv	libavcodec/twinvq.c	/^static void dec_lpc_spectrum_inv(TwinContext *tctx, float *lsp,$/;"	f	file:
dec_multbl	libavutil/aes.c	/^static uint32_t dec_multbl[1][256];$/;"	v	file:
dec_multbl	libavutil/aes.c	/^static uint32_t dec_multbl[4][256];$/;"	v	file:
dec_params	libavcodec/libopenjpeg.c	/^    opj_dparameters_t dec_params;$/;"	m	struct:__anon285	file:
dec_pic	libavcodec/libschroedingerdec.c	/^    AVPicture dec_pic;$/;"	m	struct:FfmpegSchroDecoderParams	file:
dec_state	libavcodec/libopencore-amr.c	/^    void *dec_state;$/;"	m	struct:AMRContext	file:
dec_state	libavcodec/libspeexdec.c	/^    void *dec_state;$/;"	m	struct:__anon228	file:
dec_temp	libavcodec/adx.h	/^    unsigned char dec_temp[18*2];$/;"	m	struct:__anon159
decay	libavcodec/ratecontrol.h	/^    double decay;$/;"	m	struct:Predictor
decide_ac_pred	libavcodec/mpeg4videoenc.c	/^static inline int decide_ac_pred(MpegEncContext * s, DCTELEM block[6][64], const int dir[6], uint8_t *st[6], int zigzag_last_index[6])$/;"	f	file:
decide_frame_length	libavfilter/libmpcodecs/pullup.c	/^static int decide_frame_length(struct pullup_context *c)$/;"	f	file:
decimal_unit_prefixes	ffprobe.c	/^static const char *decimal_unit_prefixes[] = { "", "K" , "M" , "G" , "T" , "P"  };$/;"	v	file:
declare_idct	libavcodec/x86/idct_mmx.c	591;"	d	file:
decode	libavcodec/avcodec.h	/^    int (*decode)(AVCodecContext *, void *outdata, int *outdata_size, AVPacket *avpkt);$/;"	m	struct:AVCodec
decode	libavcodec/crystalhd.c	/^static int decode(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
decode	libavcodec/mimic.c	/^static int decode(MimicContext *ctx, int quality, int num_coeffs,$/;"	f	file:
decode	libavcodec/mpegvideo.h	/^    int decode;                 \/\/\/< if 0 then decoding will be skipped (for encoding b frames for example)$/;"	m	struct:MpegEncContext
decode	libavcodec/pgssubdec.c	/^static int decode(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
decode	libavcodec/ra288.c	/^static void decode(RA288Context *ractx, float gain, int cb_coef)$/;"	f	file:
decode	libavcodec/vorbisdec.c	/^    vorbis_floor_decode_func decode;$/;"	m	struct:__anon259	file:
decode012	libavcodec/get_bits.h	/^static inline int decode012(GetBitContext *gb){$/;"	f
decode210	libavcodec/get_bits.h	/^static inline int decode210(GetBitContext *gb){$/;"	f
decode2x2	libavcodec/jvdec.c	/^static inline void decode2x2(GetBitContext *gb, uint8_t *dst, int linesize)$/;"	f	file:
decode4x4	libavcodec/jvdec.c	/^static inline void decode4x4(GetBitContext *gb, uint8_t *dst, int linesize)$/;"	f	file:
decode8x8	libavcodec/jvdec.c	/^static inline void decode8x8(GetBitContext *gb, uint8_t *dst, int linesize, DSPContext *dsp)$/;"	f	file:
decodeChannelSoundUnit	libavcodec/atrac3.c	/^static int decodeChannelSoundUnit (ATRAC3Context *q, GetBitContext *gb, channel_unit *pSnd, float *pOut, int channelNum, int codingMode)$/;"	f	file:
decodeFrame	libavcodec/atrac3.c	/^static int decodeFrame(ATRAC3Context *q, const uint8_t* databuf)$/;"	f	file:
decodeGainControl	libavcodec/atrac3.c	/^static int decodeGainControl (GetBitContext *gb, gain_block *pGb, int numBands)$/;"	f	file:
decodeSpectrum	libavcodec/atrac3.c	/^static int decodeSpectrum (GetBitContext *gb, float *pOut)$/;"	f	file:
decodeTonalComponents	libavcodec/atrac3.c	/^static int decodeTonalComponents (GetBitContext *gb, tonal_component *pComponent, int numBands)$/;"	f	file:
decode_10bit_pulse	libavcodec/amrnbdec.c	/^static void decode_10bit_pulse(int code, int pulse_position[8],$/;"	f	file:
decode_13	libavcodec/dxa.c	/^static int decode_13(AVCodecContext *avctx, DxaDecContext *c, uint8_t* dst, uint8_t *src, uint8_t *ref)$/;"	f	file:
decode_1p_track	libavcodec/amrwbdec.c	/^static inline void decode_1p_track(int *out, int code, int m, int off)$/;"	f	file:
decode_2p_track	libavcodec/amrwbdec.c	/^static inline void decode_2p_track(int *out, int code, int m, int off) \/\/\/code: 2m+1 bits$/;"	f	file:
decode_3p_track	libavcodec/amrwbdec.c	/^static void decode_3p_track(int *out, int code, int m, int off) \/\/\/code: 3m+1 bits$/;"	f	file:
decode_422_bitstream	libavcodec/huffyuv.c	/^static void decode_422_bitstream(HYuvContext *s, int count){$/;"	f	file:
decode_4p_track	libavcodec/amrwbdec.c	/^static void decode_4p_track(int *out, int code, int m, int off) \/\/\/code: 4m bits$/;"	f	file:
decode_5p_track	libavcodec/amrwbdec.c	/^static void decode_5p_track(int *out, int code, int m, int off) \/\/\/code: 5m bits$/;"	f	file:
decode_6p_track	libavcodec/amrwbdec.c	/^static void decode_6p_track(int *out, int code, int m, int off) \/\/\/code: 6m-2 bits$/;"	f	file:
decode_8_pulses_31bits	libavcodec/amrnbdec.c	/^static void decode_8_pulses_31bits(const int16_t *fixed_index,$/;"	f	file:
decode_audio_block	libavcodec/ac3dec.c	/^static int decode_audio_block(AC3DecodeContext *s, int blk)$/;"	f	file:
decode_audio_specific_config	libavcodec/aacdec.c	/^static int decode_audio_specific_config(AACContext *ac,$/;"	f	file:
decode_band	libavcodec/indeo5.c	/^static int decode_band(IVI5DecContext *ctx, int plane_num,$/;"	f	file:
decode_band_hdr	libavcodec/indeo5.c	/^static int decode_band_hdr(IVI5DecContext *ctx, IVIBandDesc *band,$/;"	f	file:
decode_band_structure	libavcodec/ac3dec.c	/^static void decode_band_structure(GetBitContext *gbc, int blk, int eac3,$/;"	f	file:
decode_band_types	libavcodec/aacdec.c	/^static int decode_band_types(AACContext *ac, enum BandType band_type[120],$/;"	f	file:
decode_bdlt	libavcodec/dfa.c	/^static int decode_bdlt(uint8_t *frame, int width, int height,$/;"	f	file:
decode_bgr_1	libavcodec/huffyuv.c	/^static av_always_inline void decode_bgr_1(HYuvContext *s, int count, int decorrelate, int alpha){$/;"	f	file:
decode_bgr_bitstream	libavcodec/huffyuv.c	/^static void decode_bgr_bitstream(HYuvContext *s, int count){$/;"	f	file:
decode_blck	libavcodec/dfa.c	/^static int decode_blck(uint8_t *frame, int width, int height,$/;"	f	file:
decode_block	libavcodec/alsdec.c	/^static int decode_block(ALSDecContext *ctx, ALSBlockData *bd)$/;"	f	file:
decode_block	libavcodec/binkaudio.c	/^static int decode_block(BinkAudioContext *s, short *out, int use_dct)$/;"	f	file:
decode_block	libavcodec/mjpegdec.c	/^static int decode_block(MJpegDecodeContext *s, DCTELEM *block,$/;"	f	file:
decode_block_coeffs	libavcodec/vp8.c	/^int decode_block_coeffs(VP56RangeCoder *c, DCTELEM block[16],$/;"	f	file:
decode_block_coeffs_internal	libavcodec/arm/vp8.h	23;"	d
decode_block_coeffs_internal	libavcodec/vp8.c	/^static int decode_block_coeffs_internal(VP56RangeCoder *c, DCTELEM block[16],$/;"	f	file:
decode_block_intra	libavcodec/eamad.c	/^static inline void decode_block_intra(MadContext * t, DCTELEM * block)$/;"	f	file:
decode_block_progressive	libavcodec/mjpegdec.c	/^static int decode_block_progressive(MJpegDecodeContext *s, DCTELEM *block, uint8_t *last_nnz,$/;"	f	file:
decode_block_refinement	libavcodec/mjpegdec.c	/^static int decode_block_refinement(MJpegDecodeContext *s, DCTELEM *block, uint8_t *last_nnz,$/;"	f	file:
decode_blockcode	libavcodec/dca.c	/^static int decode_blockcode(int code, int levels, int *values)$/;"	f	file:
decode_blocks	libavcodec/alsdec.c	/^static int decode_blocks(ALSDecContext *ctx, unsigned int ra_frame,$/;"	f	file:
decode_blocks	libavcodec/snow.c	/^static void decode_blocks(SnowContext *s){$/;"	f	file:
decode_blocks_ind	libavcodec/alsdec.c	/^static int decode_blocks_ind(ALSDecContext *ctx, unsigned int ra_frame,$/;"	f	file:
decode_buffer	libavcodec/tta.c	/^    int32_t *decode_buffer;$/;"	m	struct:TTAContext	file:
decode_buffer	libavcodec/vqavideo.c	/^    unsigned char *decode_buffer;$/;"	m	struct:VqaContext	file:
decode_buffer_0	libavcodec/cook.c	/^    float               decode_buffer_0[1060]; \/* static allocation for joint decode *\/$/;"	m	struct:cook	file:
decode_buffer_1	libavcodec/cook.c	/^    float               decode_buffer_1[1024];$/;"	m	struct:cook	file:
decode_buffer_2	libavcodec/cook.c	/^    float               decode_buffer_2[1024];$/;"	m	struct:cook	file:
decode_buffer_size	libavcodec/vqavideo.c	/^    int decode_buffer_size;$/;"	m	struct:VqaContext	file:
decode_buffering_period	libavcodec/h264_sei.c	/^static int decode_buffering_period(H264Context *h){$/;"	f	file:
decode_byterun	libavcodec/iff.c	/^static int decode_byterun(uint8_t *dst, int dst_size,$/;"	f	file:
decode_bytes	libavcodec/atrac3.c	/^static int decode_bytes(const uint8_t* inbuffer, uint8_t* out, int bytes){$/;"	f	file:
decode_bytes	libavcodec/cook.c	/^static inline int decode_bytes(const uint8_t* inbuffer, uint8_t* out, int bytes){$/;"	f	file:
decode_bytes_and_gain	libavcodec/cook.c	/^decode_bytes_and_gain(COOKContext *q, COOKSubpacket *p, const uint8_t *inbuffer,$/;"	f	file:
decode_cabac_b_mb_sub_type	libavcodec/h264_cabac.c	/^static int decode_cabac_b_mb_sub_type( H264Context *h ) {$/;"	f	file:
decode_cabac_field_decoding_flag	libavcodec/h264_cabac.c	/^static int decode_cabac_field_decoding_flag(H264Context *h) {$/;"	f	file:
decode_cabac_intra_mb_type	libavcodec/h264_cabac.c	/^static int decode_cabac_intra_mb_type(H264Context *h, int ctx_base, int intra_slice) {$/;"	f	file:
decode_cabac_luma_residual	libavcodec/h264_cabac.c	/^static av_always_inline void decode_cabac_luma_residual( H264Context *h, const uint8_t *scan, const uint8_t *scan8x8, int pixel_shift, int mb_type, int cbp, int p )$/;"	f	file:
decode_cabac_mb_cbp_chroma	libavcodec/h264_cabac.c	/^static int decode_cabac_mb_cbp_chroma( H264Context *h) {$/;"	f	file:
decode_cabac_mb_cbp_luma	libavcodec/h264_cabac.c	/^static int decode_cabac_mb_cbp_luma( H264Context *h) {$/;"	f	file:
decode_cabac_mb_chroma_pre_mode	libavcodec/h264_cabac.c	/^static int decode_cabac_mb_chroma_pre_mode( H264Context *h) {$/;"	f	file:
decode_cabac_mb_intra4x4_pred_mode	libavcodec/h264_cabac.c	/^static int decode_cabac_mb_intra4x4_pred_mode( H264Context *h, int pred_mode ) {$/;"	f	file:
decode_cabac_mb_mvd	libavcodec/h264_cabac.c	/^static int decode_cabac_mb_mvd( H264Context *h, int ctxbase, int amvd, int *mvda) {$/;"	f	file:
decode_cabac_mb_ref	libavcodec/h264_cabac.c	/^static int decode_cabac_mb_ref( H264Context *h, int list, int n ) {$/;"	f	file:
decode_cabac_mb_skip	libavcodec/h264_cabac.c	/^static int decode_cabac_mb_skip( H264Context *h, int mb_x, int mb_y ) {$/;"	f	file:
decode_cabac_p_mb_sub_type	libavcodec/h264_cabac.c	/^static int decode_cabac_p_mb_sub_type( H264Context *h ) {$/;"	f	file:
decode_cabac_residual_dc	libavcodec/h264_cabac.c	/^static av_always_inline void decode_cabac_residual_dc( H264Context *h, DCTELEM *block, int cat, int n, const uint8_t *scantable, int max_coeff ) {$/;"	f	file:
decode_cabac_residual_dc_internal	libavcodec/h264_cabac.c	/^static void decode_cabac_residual_dc_internal( H264Context *h, DCTELEM *block, int cat, int n, const uint8_t *scantable, int max_coeff ) {$/;"	f	file:
decode_cabac_residual_internal	libavcodec/h264_cabac.c	/^static av_always_inline void decode_cabac_residual_internal( H264Context *h, DCTELEM *block, int cat, int n, const uint8_t *scantable, const uint32_t *qmul, int max_coeff, int is_dc ) {$/;"	f	file:
decode_cabac_residual_nondc	libavcodec/h264_cabac.c	/^static av_always_inline void decode_cabac_residual_nondc( H264Context *h, DCTELEM *block, int cat, int n, const uint8_t *scantable, const uint32_t *qmul, int max_coeff ) {$/;"	f	file:
decode_cabac_residual_nondc_internal	libavcodec/h264_cabac.c	/^static void decode_cabac_residual_nondc_internal( H264Context *h, DCTELEM *block, int cat, int n, const uint8_t *scantable, const uint32_t *qmul, int max_coeff ) {$/;"	f	file:
decode_cblk	libavcodec/j2kdec.c	/^static int decode_cblk(J2kDecoderContext *s, J2kCodingStyle *codsty, J2kT1Context *t1, J2kCblk *cblk,$/;"	f	file:
decode_cce	libavcodec/aacdec.c	/^static int decode_cce(AACContext *ac, GetBitContext *gb, ChannelElement *che)$/;"	f	file:
decode_channel_map	libavcodec/aacdec.c	/^static void decode_channel_map(enum ChannelPosition *cpe_map,$/;"	f	file:
decode_channel_transform	libavcodec/wmaprodec.c	/^static int decode_channel_transform(WMAProDecodeCtx* s)$/;"	f	file:
decode_chunks	libavcodec/mpeg12.c	/^static int decode_chunks(AVCodecContext *avctx,$/;"	f	file:
decode_clnpass	libavcodec/j2kdec.c	/^static void decode_clnpass(J2kDecoderContext *s, J2kT1Context *t1, int width, int height,$/;"	f	file:
decode_close	libavcodec/ansi.c	/^static av_cold int decode_close(AVCodecContext *avctx)$/;"	f	file:
decode_close	libavcodec/frwu.c	/^static av_cold int decode_close(AVCodecContext *avctx)$/;"	f	file:
decode_close	libavcodec/indeo5.c	/^static av_cold int decode_close(AVCodecContext *avctx)$/;"	f	file:
decode_close	libavcodec/jvdec.c	/^static av_cold int decode_close(AVCodecContext *avctx)$/;"	f	file:
decode_close	libavcodec/r210dec.c	/^static av_cold int decode_close(AVCodecContext *avctx)$/;"	f	file:
decode_close	libavcodec/v210dec.c	/^static av_cold int decode_close(AVCodecContext *avctx)$/;"	f	file:
decode_close	libavcodec/v210x.c	/^static av_cold int decode_close(AVCodecContext *avctx)$/;"	f	file:
decode_close_mp3on4	libavcodec/mpegaudiodec.c	/^static av_cold int decode_close_mp3on4(AVCodecContext * avctx)$/;"	f	file:
decode_codestream	libavcodec/j2kdec.c	/^static int decode_codestream(J2kDecoderContext *s)$/;"	f	file:
decode_coeff	libavcodec/rv34.c	/^static inline void decode_coeff(DCTELEM *dst, int coef, int esc, GetBitContext *gb, VLC* vlc)$/;"	f	file:
decode_coeffs	libavcodec/wmaprodec.c	/^static int decode_coeffs(WMAProDecodeCtx *s, int c)$/;"	f	file:
decode_colskip	libavcodec/vc1.c	/^static void decode_colskip(uint8_t* plane, int width, int height, int stride, GetBitContext *gb){$/;"	f	file:
decode_const_block_data	libavcodec/alsdec.c	/^static void decode_const_block_data(ALSDecContext *ctx, ALSBlockData *bd)$/;"	f	file:
decode_copy	libavcodec/dfa.c	/^static int decode_copy(uint8_t *frame, int width, int height,$/;"	f	file:
decode_cpe	libavcodec/aacdec.c	/^static int decode_cpe(AACContext *ac, GetBitContext *gb, ChannelElement *cpe)$/;"	f	file:
decode_dc	libavcodec/mpeg12.h	/^static inline int decode_dc(GetBitContext *gb, int component)$/;"	f
decode_dc_progressive	libavcodec/mjpegdec.c	/^static int decode_dc_progressive(MJpegDecodeContext *s, DCTELEM *block, int component,$/;"	f	file:
decode_dds1	libavcodec/dfa.c	/^static int decode_dds1(uint8_t *frame, int width, int height,$/;"	f	file:
decode_decorrelation_matrix	libavcodec/wmaprodec.c	/^static void decode_decorrelation_matrix(WMAProDecodeCtx *s,$/;"	f	file:
decode_delay	libavformat/nut.h	/^    int decode_delay; \/\/FIXME duplicate of has_b_frames$/;"	m	struct:__anon492
decode_delta	libavcodec/indeo2.c	/^    int decode_delta;$/;"	m	struct:Ir2Context	file:
decode_drc_channel_exclusions	libavcodec/aacdec.c	/^static int decode_drc_channel_exclusions(DynamicRangeControl *che_drc,$/;"	f	file:
decode_dsw1	libavcodec/dfa.c	/^static int decode_dsw1(uint8_t *frame, int width, int height,$/;"	f	file:
decode_dvd_subtitles	libavcodec/dvdsubdec.c	/^static int decode_dvd_subtitles(AVSubtitle *sub_header,$/;"	f	file:
decode_dynamic_range	libavcodec/aacdec.c	/^static int decode_dynamic_range(DynamicRangeControl *che_drc,$/;"	f	file:
decode_end	libavcodec/4xm.c	/^static av_cold int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/8bps.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/alsdec.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/anm.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/asv1.c	/^static av_cold int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/bink.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/binkaudio.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/c93.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/cscd.c	/^static av_cold int decode_end(AVCodecContext *avctx) {$/;"	f	file:
decode_end	libavcodec/dpx.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/dxa.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/eamad.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/fraps.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/huffyuv.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/iff.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/j2kdec.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/kgv1dec.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/kmvc.c	/^static av_cold int decode_end(AVCodecContext * avctx)$/;"	f	file:
decode_end	libavcodec/lcldec.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/loco.c	/^static av_cold int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/mdec.c	/^static av_cold int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/nellymoserdec.c	/^static av_cold int decode_end(AVCodecContext * avctx) {$/;"	f	file:
decode_end	libavcodec/nuv.c	/^static av_cold int decode_end(AVCodecContext *avctx) {$/;"	f	file:
decode_end	libavcodec/pictordec.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/qdrw.c	/^static av_cold int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/qpeg.c	/^static av_cold int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/smacker.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/snow.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/truemotion2.c	/^static av_cold int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/tscc.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/vb.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/vcr1.c	/^static av_cold int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/vmnc.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/wmaprodec.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_end	libavcodec/wnv1.c	/^static av_cold int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/xl.c	/^static av_cold int decode_end(AVCodecContext *avctx){$/;"	f	file:
decode_end	libavcodec/zmbv.c	/^static av_cold int decode_end(AVCodecContext *avctx)$/;"	f	file:
decode_envelope	libavcodec/cook.c	/^static void decode_envelope(COOKContext *q, COOKSubpacket *p, int* quant_index_table) {$/;"	f	file:
decode_exp_lsp	libavcodec/wmadec.c	/^static void decode_exp_lsp(WMACodecContext *s, int ch)$/;"	f	file:
decode_exp_vlc	libavcodec/wmadec.c	/^static int decode_exp_vlc(WMACodecContext *s, int ch)$/;"	f	file:
decode_exponents	libavcodec/ac3dec.c	/^static int decode_exponents(GetBitContext *gbc, int exp_strategy, int ngrps,$/;"	f	file:
decode_ext_header	libavcodec/wmv2dec.c	/^static int decode_ext_header(Wmv2Context *w){$/;"	f	file:
decode_extension_payload	libavcodec/aacdec.c	/^static int decode_extension_payload(AACContext *ac, GetBitContext *gb, int cnt,$/;"	f	file:
decode_finish_row	libavcodec/h264.c	/^static void decode_finish_row(H264Context *h){$/;"	f	file:
decode_fixed_sparse	libavcodec/amrnbdec.c	/^static void decode_fixed_sparse(AMRFixed *fixed_sparse, const uint16_t *pulses,$/;"	f	file:
decode_fixed_sparse	libavcodec/sipr.c	/^static void decode_fixed_sparse(AMRFixed *fixed_sparse, const int16_t *pulses,$/;"	f	file:
decode_fixed_vector	libavcodec/amrwbdec.c	/^static void decode_fixed_vector(float *fixed_vector, const uint16_t *pulse_hi,$/;"	f	file:
decode_flags	libavcodec/wmaprodec.c	/^    uint32_t         decode_flags;                  \/\/\/< used compression features$/;"	m	struct:WMAProDecodeCtx	file:
decode_format80	libavcodec/vqavideo.c	/^static void decode_format80(const unsigned char *src, int src_size,$/;"	f	file:
decode_frame	libavcodec/4xm.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/8bps.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
decode_frame	libavcodec/alsdec.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/anm.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/ansi.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/asv1.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/bink.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *pkt)$/;"	f	file:
decode_frame	libavcodec/binkaudio.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/c93.c	/^static int decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
decode_frame	libavcodec/cljr.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/cscd.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
decode_frame	libavcodec/dpx.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/dxa.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
decode_frame	libavcodec/eamad.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/ffv1.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt){$/;"	f	file:
decode_frame	libavcodec/flacdec.c	/^static int decode_frame(FLACContext *s)$/;"	f	file:
decode_frame	libavcodec/fraps.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/frwu.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
decode_frame	libavcodec/g729dec.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
decode_frame	libavcodec/h264.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/huffyuv.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt){$/;"	f	file:
decode_frame	libavcodec/indeo5.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
decode_frame	libavcodec/j2kdec.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/jvdec.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/kgv1dec.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
decode_frame	libavcodec/kmvc.c	/^static int decode_frame(AVCodecContext * avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
decode_frame	libavcodec/lcldec.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
decode_frame	libavcodec/loco.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/mdec.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/mpegaudiodec.c	/^static int decode_frame(AVCodecContext * avctx,$/;"	f	file:
decode_frame	libavcodec/nuv.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
decode_frame	libavcodec/pictordec.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/pngdec.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/qdrw.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/qpeg.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/r210dec.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
decode_frame	libavcodec/sgidec.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/sipr.c	/^static void decode_frame(SiprContext *ctx, SiprParameters *params,$/;"	f	file:
decode_frame	libavcodec/smacker.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
decode_frame	libavcodec/snow.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt){$/;"	f	file:
decode_frame	libavcodec/targa.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/tiff.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/truemotion2.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/tscc.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
decode_frame	libavcodec/v210dec.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
decode_frame	libavcodec/v210x.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
decode_frame	libavcodec/vb.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
decode_frame	libavcodec/vcr1.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/vmnc.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
decode_frame	libavcodec/wmaprodec.c	/^static int decode_frame(WMAProDecodeCtx *s)$/;"	f	file:
decode_frame	libavcodec/wnv1.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/xl.c	/^static int decode_frame(AVCodecContext *avctx,$/;"	f	file:
decode_frame	libavcodec/xsubdec.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
decode_frame	libavcodec/zmbv.c	/^static int decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
decode_frame	libavformat/nutdec.c	/^static int decode_frame(NUTContext *nut, AVPacket *pkt, int frame_code){$/;"	f	file:
decode_frame_adu	libavcodec/mpegaudiodec.c	/^static int decode_frame_adu(AVCodecContext * avctx,$/;"	f	file:
decode_frame_byterun1	libavcodec/iff.c	/^static int decode_frame_byterun1(AVCodecContext *avctx,$/;"	f	file:
decode_frame_header	libavcodec/vp8.c	/^static int decode_frame_header(VP8Context *s, const uint8_t *buf, int buf_size)$/;"	f	file:
decode_frame_header	libavformat/nutdec.c	/^static int decode_frame_header(NUTContext *nut, int64_t *pts, int *stream_id, uint8_t *header_idx, int frame_code){$/;"	f	file:
decode_frame_ilbm	libavcodec/iff.c	/^static int decode_frame_ilbm(AVCodecContext *avctx,$/;"	f	file:
decode_frame_mp3on4	libavcodec/mpegaudiodec.c	/^static int decode_frame_mp3on4(AVCodecContext * avctx,$/;"	f	file:
decode_ga_specific_config	libavcodec/aacdec.c	/^static int decode_ga_specific_config(AACContext *ac, AVCodecContext *avctx,$/;"	f	file:
decode_gain_and_index	libavcodec/qcelpdec.c	/^static void decode_gain_and_index(QCELPContext  *q,$/;"	f	file:
decode_gain_info	libavcodec/cook.c	/^static void decode_gain_info(GetBitContext *gb, int *gaininfo)$/;"	f	file:
decode_gains	libavcodec/amrnbdec.c	/^static void decode_gains(AMRContext *p, const AMRNBSubframe *amr_subframe,$/;"	f	file:
decode_gains	libavcodec/amrwbdec.c	/^static void decode_gains(const uint8_t vq_gain, const enum Mode mode,$/;"	f	file:
decode_gop_header	libavcodec/indeo5.c	/^static int decode_gop_header(IVI5DecContext *ctx, AVCodecContext *avctx)$/;"	f	file:
decode_gray_bitstream	libavcodec/huffyuv.c	/^static void decode_gray_bitstream(HYuvContext *s, int count){$/;"	f	file:
decode_group3_1d_line	libavcodec/faxcompr.c	/^static int decode_group3_1d_line(AVCodecContext *avctx, GetBitContext *gb,$/;"	f	file:
decode_group3_2d_line	libavcodec/faxcompr.c	/^static int decode_group3_2d_line(AVCodecContext *avctx, GetBitContext *gb,$/;"	f	file:
decode_ham_plane32	libavcodec/iff.c	/^static void decode_ham_plane32(uint32_t *dst, const uint8_t  *buf,$/;"	f	file:
decode_header	libavcodec/snow.c	/^static int decode_header(SnowContext *s){$/;"	f	file:
decode_header_trees	libavcodec/smacker.c	/^static int decode_header_trees(SmackVContext *smk) {$/;"	f	file:
decode_hextile	libavcodec/vmnc.c	/^static int decode_hextile(VmncContext *c, uint8_t* dst, const uint8_t* src, int ssize, int w, int h, int stride)$/;"	f	file:
decode_hrd_parameters	libavcodec/h264_ps.c	/^static inline int decode_hrd_parameters(H264Context *h, SPS *sps){$/;"	f	file:
decode_i2_frame	libavcodec/4xm.c	/^static int decode_i2_frame(FourXContext *f, const uint8_t *buf, int length){$/;"	f	file:
decode_i_block	libavcodec/4xm.c	/^static int decode_i_block(FourXContext *f, DCTELEM *block){$/;"	f	file:
decode_i_frame	libavcodec/4xm.c	/^static int decode_i_frame(FourXContext *f, const uint8_t *buf, int length){$/;"	f	file:
decode_i_mb	libavcodec/4xm.c	/^static int decode_i_mb(FourXContext *f){$/;"	f	file:
decode_ics	libavcodec/aacdec.c	/^static int decode_ics(AACContext *ac, SingleChannelElement *sce,$/;"	f	file:
decode_ics_info	libavcodec/aacdec.c	/^static int decode_ics_info(AACContext *ac, IndividualChannelStream *ics,$/;"	f	file:
decode_info_header	libavformat/nutdec.c	/^static int decode_info_header(NUTContext *nut){$/;"	f	file:
decode_init	libavcodec/4xm.c	/^static av_cold int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/8bps.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/alsdec.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/anm.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/ansi.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/asv1.c	/^static av_cold int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/bink.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/binkaudio.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/c93.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/cljr.c	/^static av_cold int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/cscd.c	/^static av_cold int decode_init(AVCodecContext *avctx) {$/;"	f	file:
decode_init	libavcodec/dpx.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/dxa.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/eamad.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/ffv1.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/fraps.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/frwu.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/huffyuv.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/iff.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/indeo5.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/jvdec.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/kgv1dec.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/kmvc.c	/^static av_cold int decode_init(AVCodecContext * avctx)$/;"	f	file:
decode_init	libavcodec/lcldec.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/loco.c	/^static av_cold int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/mdec.c	/^static av_cold int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/mpeg4videodec.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/mpegaudiodec.c	/^static av_cold int decode_init(AVCodecContext * avctx)$/;"	f	file:
decode_init	libavcodec/nellymoserdec.c	/^static av_cold int decode_init(AVCodecContext * avctx) {$/;"	f	file:
decode_init	libavcodec/nuv.c	/^static av_cold int decode_init(AVCodecContext *avctx) {$/;"	f	file:
decode_init	libavcodec/pictordec.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/qdrw.c	/^static av_cold int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/qpeg.c	/^static av_cold int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/r210dec.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/smacker.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/snow.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/truemotion2.c	/^static av_cold int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/tscc.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/v210dec.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/v210x.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/vb.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/vcr1.c	/^static av_cold int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/vmnc.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/wmaprodec.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init	libavcodec/wnv1.c	/^static av_cold int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/xl.c	/^static av_cold int decode_init(AVCodecContext *avctx){$/;"	f	file:
decode_init	libavcodec/xsubdec.c	/^static av_cold int decode_init(AVCodecContext *avctx) {$/;"	f	file:
decode_init	libavcodec/zmbv.c	/^static av_cold int decode_init(AVCodecContext *avctx)$/;"	f	file:
decode_init_mp3on4	libavcodec/mpegaudiodec.c	/^static int decode_init_mp3on4(AVCodecContext * avctx)$/;"	f	file:
decode_init_thread_copy	libavcodec/h264.c	/^static int decode_init_thread_copy(AVCodecContext *avctx){$/;"	f	file:
decode_init_thread_copy	libavcodec/huffyuv.c	/^static av_cold int decode_init_thread_copy(AVCodecContext *avctx)$/;"	f	file:
decode_init_thread_copy	libavcodec/mdec.c	/^static av_cold int decode_init_thread_copy(AVCodecContext *avctx){$/;"	f	file:
decode_interrupt_cb	ffmpeg.c	/^static int decode_interrupt_cb(void)$/;"	f	file:
decode_interrupt_cb	ffmpeg/ffmpeg.c	/^static int decode_interrupt_cb(void)$/;"	f	file:
decode_interrupt_cb	ffplay.c	/^static int decode_interrupt_cb(void)$/;"	f	file:
decode_intra	libavcodec/zmbv.c	/^    int (*decode_intra)(struct ZmbvContext *c);$/;"	m	struct:ZmbvContext	file:
decode_intra4x4_modes	libavcodec/vp8.c	/^void decode_intra4x4_modes(VP8Context *s, VP56RangeCoder *c,$/;"	f	file:
decode_intra_types	libavcodec/rv34.h	/^    int (*decode_intra_types)(struct RV34DecContext *r, GetBitContext *gb, int8_t *dst);$/;"	m	struct:RV34DecContext
decode_isf_indices_36b	libavcodec/amrwbdec.c	/^static void decode_isf_indices_36b(uint16_t *ind, float *isf_q)$/;"	f	file:
decode_isf_indices_46b	libavcodec/amrwbdec.c	/^static void decode_isf_indices_46b(uint16_t *ind, float *isf_q)$/;"	f	file:
decode_line	libavcodec/ffv1.c	/^static av_always_inline void decode_line(FFV1Context *s, int w,$/;"	f	file:
decode_log_area	libavcodec/gsmdec_template.c	/^static inline int decode_log_area(int coded, int factor, int offset)$/;"	f	file:
decode_lsp	libavcodec/twinvq.c	/^static void decode_lsp(TwinContext *tctx, int lpc_idx1, uint8_t *lpc_idx2,$/;"	f	file:
decode_lspf	libavcodec/qcelpdec.c	/^static int decode_lspf(QCELPContext *q, float *lspf)$/;"	f	file:
decode_ltp	libavcodec/aacdec.c	/^static void decode_ltp(AACContext *ac, LongTermPrediction *ltp,$/;"	f	file:
decode_luma_residual	libavcodec/h264_cavlc.c	/^static av_always_inline int decode_luma_residual(H264Context *h, GetBitContext *gb, const uint8_t *scan, const uint8_t *scan8x8, int pixel_shift, int mb_type, int cbp, int p){$/;"	f	file:
decode_macroblock	libavcodec/escape124.c	/^static MacroBlock decode_macroblock(Escape124Context* s, GetBitContext* gb,$/;"	f	file:
decode_main_header	libavformat/nutdec.c	/^static int decode_main_header(NUTContext *nut){$/;"	f	file:
decode_map_chunk_offset	libavformat/ipmovie.c	/^    int64_t decode_map_chunk_offset;$/;"	m	struct:IPMVEContext	file:
decode_map_chunk_size	libavformat/ipmovie.c	/^    int decode_map_chunk_size;$/;"	m	struct:IPMVEContext	file:
decode_mb	libavcodec/asv1.c	/^static inline int decode_mb(ASV1Context *a, DCTELEM block[6][64]){$/;"	f	file:
decode_mb	libavcodec/eamad.c	/^static void decode_mb(MadContext *t, int inter)$/;"	f	file:
decode_mb	libavcodec/error_resilience.c	/^static void decode_mb(MpegEncContext *s, int ref){$/;"	f	file:
decode_mb	libavcodec/mdec.c	/^static inline int decode_mb(MDECContext *a, DCTELEM block[6][64]){$/;"	f	file:
decode_mb	libavcodec/mpegvideo.h	/^    int (*decode_mb)(struct MpegEncContext *s, DCTELEM block[6][64]); \/\/ used by some codecs to avoid a switch()$/;"	m	struct:MpegEncContext
decode_mb_b	libavcodec/cavsdec.c	/^static void decode_mb_b(AVSContext *h, enum cavs_mb mb_type) {$/;"	f	file:
decode_mb_coeffs	libavcodec/vp8.c	/^void decode_mb_coeffs(VP8Context *s, VP56RangeCoder *c, VP8Macroblock *mb,$/;"	f	file:
decode_mb_i	libavcodec/cavsdec.c	/^static int decode_mb_i(AVSContext *h, int cbp_code) {$/;"	f	file:
decode_mb_info	libavcodec/indeo5.c	/^static int decode_mb_info(IVI5DecContext *ctx, IVIBandDesc *band,$/;"	f	file:
decode_mb_info	libavcodec/rv34.h	/^    int (*decode_mb_info)(struct RV34DecContext *r);$/;"	m	struct:RV34DecContext
decode_mb_mode	libavcodec/vp8.c	/^void decode_mb_mode(VP8Context *s, VP8Macroblock *mb, int mb_x, int mb_y, uint8_t *segment, uint8_t *ref)$/;"	f	file:
decode_mb_p	libavcodec/cavsdec.c	/^static void decode_mb_p(AVSContext *h, enum cavs_mb mb_type) {$/;"	f	file:
decode_mb_skip	libavcodec/h264.h	/^static void av_unused decode_mb_skip(H264Context *h){$/;"	f
decode_mid_side_stereo	libavcodec/aacdec.c	/^static void decode_mid_side_stereo(ChannelElement *cpe, GetBitContext *gb,$/;"	f	file:
decode_mime_header	libavcodec/amrwbdec.c	/^static int decode_mime_header(AMRWBContext *ctx, const uint8_t *buf)$/;"	f	file:
decode_motion	libavcodec/eamad.c	/^static int decode_motion(GetBitContext *gb)$/;"	f	file:
decode_mv_component	libavcodec/h261dec.c	/^static int decode_mv_component(GetBitContext *gb, int v){$/;"	f	file:
decode_mvs	libavcodec/vp8.c	/^void decode_mvs(VP8Context *s, VP8Macroblock *mb, int mb_x, int mb_y)$/;"	f	file:
decode_nal_units	libavcodec/h264.c	/^static int decode_nal_units(H264Context *h, const uint8_t *buf, int buf_size){$/;"	f	file:
decode_p_block	libavcodec/4xm.c	/^static void decode_p_block(FourXContext *f, uint16_t *dst, uint16_t *src, int log2w, int log2h, int stride){$/;"	f	file:
decode_p_frame	libavcodec/4xm.c	/^static int decode_p_frame(FourXContext *f, const uint8_t *buf, int length){$/;"	f	file:
decode_packet	libavcodec/j2kdec.c	/^static int decode_packet(J2kDecoderContext *s, J2kCodingStyle *codsty, J2kResLevel *rlevel, int precno,$/;"	f	file:
decode_packet	libavcodec/wmaprodec.c	/^static int decode_packet(AVCodecContext *avctx,$/;"	f	file:
decode_packets	libavcodec/j2kdec.c	/^static int decode_packets(J2kDecoderContext *s, J2kTile *tile)$/;"	f	file:
decode_parameters	libavcodec/sipr.c	/^static void decode_parameters(SiprParameters* parms, GetBitContext *pgb,$/;"	f	file:
decode_pce	libavcodec/aacdec.c	/^static int decode_pce(AVCodecContext *avctx, MPEG4AudioConfig *m4ac,$/;"	f	file:
decode_pic	libavcodec/cavsdec.c	/^static int decode_pic(AVSContext *h) {$/;"	f	file:
decode_pic_hdr	libavcodec/indeo5.c	/^static int decode_pic_hdr(IVI5DecContext *ctx, AVCodecContext *avctx)$/;"	f	file:
decode_picture_timing	libavcodec/h264_sei.c	/^static int decode_picture_timing(H264Context *h){$/;"	f	file:
decode_pitch_lag_1_6	libavcodec/amrnbdec.c	/^static void decode_pitch_lag_1_6(int *lag_int, int *lag_frac, int pitch_index,$/;"	f	file:
decode_pitch_lag_high	libavcodec/amrwbdec.c	/^static void decode_pitch_lag_high(int *lag_int, int *lag_frac, int pitch_index,$/;"	f	file:
decode_pitch_lag_low	libavcodec/amrwbdec.c	/^static void decode_pitch_lag_low(int *lag_int, int *lag_frac, int pitch_index,$/;"	f	file:
decode_pitch_vector	libavcodec/amrnbdec.c	/^static void decode_pitch_vector(AMRContext *p,$/;"	f	file:
decode_pitch_vector	libavcodec/amrwbdec.c	/^static void decode_pitch_vector(AMRWBContext *ctx,$/;"	f	file:
decode_plane	libavcodec/ffv1.c	/^static void decode_plane(FFV1Context *s, uint8_t *src, int w, int h, int stride, int plane_index){$/;"	f	file:
decode_postinit	libavcodec/h264.c	/^static void decode_postinit(H264Context *h, int setup_finished){$/;"	f	file:
decode_ppc	libavcodec/twinvq.c	/^static void decode_ppc(TwinContext *tctx, int period_coef, const float *shape,$/;"	f	file:
decode_prediction	libavcodec/aacdec.c	/^static int decode_prediction(AACContext *ac, IndividualChannelStream *ics,$/;"	f	file:
decode_pulses	libavcodec/aacdec.c	/^static int decode_pulses(Pulse *pulse, GetBitContext *gb,$/;"	f	file:
decode_q_branch	libavcodec/snow.c	/^static void decode_q_branch(SnowContext *s, int level, int x, int y){$/;"	f	file:
decode_qlogs	libavcodec/snow.c	/^static void decode_qlogs(SnowContext *s){$/;"	f	file:
decode_recovery_point	libavcodec/h264_sei.c	/^static int decode_recovery_point(H264Context *h){$/;"	f	file:
decode_refpass	libavcodec/j2kdec.c	/^static void decode_refpass(J2kT1Context *t1, int width, int height, int bpno)$/;"	f	file:
decode_residual	libavcodec/h264_cavlc.c	/^static int decode_residual(H264Context *h, GetBitContext *gb, DCTELEM *block, int n, const uint8_t *scantable, const uint32_t *qmul, int max_coeff){$/;"	f	file:
decode_residual_block	libavcodec/cavsdec.c	/^static int decode_residual_block(AVSContext *h, GetBitContext *gb,$/;"	f	file:
decode_residual_chroma	libavcodec/cavsdec.c	/^static inline void decode_residual_chroma(AVSContext *h) {$/;"	f	file:
decode_residual_inter	libavcodec/cavsdec.c	/^static inline int decode_residual_inter(AVSContext *h) {$/;"	f	file:
decode_residuals	libavcodec/flacdec.c	/^static int decode_residuals(FLACContext *s, int channel, int pred_order)$/;"	f	file:
decode_rgb_frame	libavcodec/ffv1.c	/^static void decode_rgb_frame(FFV1Context *s, uint32_t *src, int w, int h, int stride){$/;"	f	file:
decode_rice	libavcodec/alsdec.c	/^static int32_t decode_rice(GetBitContext *gb, unsigned int k)$/;"	f	file:
decode_rle	libavcodec/dvdsubdec.c	/^static int decode_rle(uint8_t *bitmap, int linesize, int w, int h,$/;"	f	file:
decode_rle	libavcodec/pgssubdec.c	/^static int decode_rle(AVCodecContext *avctx, AVSubtitle *sub,$/;"	f	file:
decode_rowskip	libavcodec/vc1.c	/^static void decode_rowskip(uint8_t* plane, int width, int height, int stride, GetBitContext *gb){$/;"	f	file:
decode_run_2bit	libavcodec/dvdsubdec.c	/^static int decode_run_2bit(GetBitContext *gb, int *color)$/;"	f	file:
decode_run_8bit	libavcodec/dvdsubdec.c	/^static int decode_run_8bit(GetBitContext *gb, int *color)$/;"	f	file:
decode_scalar	libavcodec/alac.c	/^static inline int decode_scalar(GetBitContext *gb, int k, int limit, int readsamplesize){$/;"	f	file:
decode_scale_factors	libavcodec/wmaprodec.c	/^static int decode_scale_factors(WMAProDecodeCtx* s)$/;"	f	file:
decode_scalefactors	libavcodec/aacdec.c	/^static int decode_scalefactors(AACContext *ac, float sf[120], GetBitContext *gb,$/;"	f	file:
decode_scaling_list	libavcodec/h264_ps.c	/^static void decode_scaling_list(H264Context *h, uint8_t *factors, int size,$/;"	f	file:
decode_scaling_matrices	libavcodec/h264_ps.c	/^static void decode_scaling_matrices(H264Context *h, SPS *sps, PPS *pps, int is_sps,$/;"	f	file:
decode_seq_header	libavcodec/cavsdec.c	/^static int decode_seq_header(AVSContext *h) {$/;"	f	file:
decode_sequence_header_adv	libavcodec/vc1.c	/^static int decode_sequence_header_adv(VC1Context *v, GetBitContext *gb)$/;"	f	file:
decode_significance_8x8_x86	libavcodec/x86/h264_i386.h	/^static int decode_significance_8x8_x86(CABACContext *c,$/;"	f
decode_significance_x86	libavcodec/x86/h264_i386.h	/^static int decode_significance_x86(CABACContext *c, int max_coeff,$/;"	f
decode_sigpass	libavcodec/j2kdec.c	/^static void decode_sigpass(J2kT1Context *t1, int width, int height, int bpno, int bandno, int bpass_csty_symbol,$/;"	f	file:
decode_skip_count	libavcodec/escape124.c	/^static unsigned decode_skip_count(GetBitContext* gb)$/;"	f	file:
decode_slice	libavcodec/avcodec.h	/^    int (*decode_slice)(AVCodecContext *avctx, const uint8_t *buf, uint32_t buf_size);$/;"	m	struct:AVHWAccel
decode_slice	libavcodec/dxva2_h264.c	/^static int decode_slice(AVCodecContext *avctx,$/;"	f	file:
decode_slice	libavcodec/dxva2_mpeg2.c	/^static int decode_slice(AVCodecContext *avctx,$/;"	f	file:
decode_slice	libavcodec/dxva2_vc1.c	/^static int decode_slice(AVCodecContext *avctx,$/;"	f	file:
decode_slice	libavcodec/ffv1.c	/^static int decode_slice(AVCodecContext *c, void *arg){$/;"	f	file:
decode_slice	libavcodec/h263dec.c	/^static int decode_slice(MpegEncContext *s){$/;"	f	file:
decode_slice	libavcodec/h264.c	/^static int decode_slice(struct AVCodecContext *avctx, void *arg){$/;"	f	file:
decode_slice	libavcodec/vaapi_h264.c	/^static int decode_slice(AVCodecContext *avctx,$/;"	f	file:
decode_slice_header	libavcodec/cavsdec.c	/^static inline int decode_slice_header(AVSContext *h, GetBitContext *gb) {$/;"	f	file:
decode_slice_header	libavcodec/h264.c	/^static int decode_slice_header(H264Context *h, H264Context *h0){$/;"	f	file:
decode_spectrum_and_dequant	libavcodec/aacdec.c	/^static int decode_spectrum_and_dequant(AACContext *ac, float coef[1024],$/;"	f	file:
decode_splitmvs	libavcodec/vp8.c	/^int decode_splitmvs(VP8Context *s, VP56RangeCoder *c, VP8Macroblock *mb)$/;"	f	file:
decode_stream_header	libavformat/nutdec.c	/^static int decode_stream_header(NUTContext *nut){$/;"	f	file:
decode_subband_slice_buffered	libavcodec/snow.c	/^static inline void decode_subband_slice_buffered(SnowContext *s, SubBand *b, slice_buffer * sb, int start_y, int h, int save_state[1]){$/;"	f	file:
decode_subblock	libavcodec/rv34.c	/^static inline void decode_subblock(DCTELEM *dst, int code, const int is_block2, GetBitContext *gb, VLC *vlc)$/;"	f	file:
decode_subframe	libavcodec/flacdec.c	/^static inline int decode_subframe(FLACContext *s, int channel)$/;"	f	file:
decode_subframe	libavcodec/wmaprodec.c	/^static int decode_subframe(WMAProDecodeCtx *s)$/;"	f	file:
decode_subframe_fixed	libavcodec/flacdec.c	/^static int decode_subframe_fixed(FLACContext *s, int channel, int pred_order)$/;"	f	file:
decode_subframe_length	libavcodec/wmaprodec.c	/^static int decode_subframe_length(WMAProDecodeCtx *s, int offset)$/;"	f	file:
decode_subframe_lpc	libavcodec/flacdec.c	/^static int decode_subframe_lpc(FLACContext *s, int channel, int pred_order)$/;"	f	file:
decode_subframe_lpc	libavcodec/shorten.c	/^static void decode_subframe_lpc(ShortenContext *s, int channel, int residual_size, int pred_order)$/;"	f	file:
decode_subpacket	libavcodec/cook.c	/^static void decode_subpacket(COOKContext *q, COOKSubpacket* p, const uint8_t *inbuffer, int16_t *outbuffer) {$/;"	f	file:
decode_syncpoint	libavformat/nutdec.c	/^static int decode_syncpoint(NUTContext *nut, int64_t *ts, int64_t *back_ptr){$/;"	f	file:
decode_tag	libavcodec/nellymoserdec.c	/^static int decode_tag(AVCodecContext * avctx,$/;"	f	file:
decode_tile	libavcodec/j2kdec.c	/^static int decode_tile(J2kDecoderContext *s, J2kTile *tile)$/;"	f	file:
decode_tilehdr	libavcodec/wmaprodec.c	/^static int decode_tilehdr(WMAProDecodeCtx *s)$/;"	f	file:
decode_time	libavfilter/libmpcodecs/vf_filmdint.c	/^    double diff_time, merge_time, decode_time, vo_time, filter_time;$/;"	m	struct:vf_priv_s	file:
decode_tns	libavcodec/aacdec.c	/^static int decode_tns(AACContext *ac, TemporalNoiseShaping *tns,$/;"	f	file:
decode_transform_coeffs	libavcodec/ac3dec.c	/^static void decode_transform_coeffs(AC3DecodeContext *s, int blk)$/;"	f	file:
decode_transform_coeffs_ch	libavcodec/ac3dec.c	/^static void decode_transform_coeffs_ch(AC3DecodeContext *s, int blk, int ch,$/;"	f	file:
decode_tsw1	libavcodec/dfa.c	/^static int decode_tsw1(uint8_t *frame, int width, int height,$/;"	f	file:
decode_unk6	libavcodec/dfa.c	/^static int decode_unk6(uint8_t *frame, int width, int height,$/;"	f	file:
decode_unregistered_user_data	libavcodec/h264_sei.c	/^static int decode_unregistered_user_data(H264Context *h, int size){$/;"	f	file:
decode_update_thread_context	libavcodec/h264.c	/^static int decode_update_thread_context(AVCodecContext *dst, const AVCodecContext *src){$/;"	f	file:
decode_user_data	libavcodec/mpeg4videodec.c	/^static int decode_user_data(MpegEncContext *s, GetBitContext *gb){$/;"	f	file:
decode_var_block_data	libavcodec/alsdec.c	/^static int decode_var_block_data(ALSDecContext *ctx, ALSBlockData *bd)$/;"	f	file:
decode_vbmtree	libavcodec/wmavoice.c	/^static av_cold int decode_vbmtree(GetBitContext *gb, int8_t vbm_tree[25])$/;"	f	file:
decode_vectors	libavcodec/cook.c	/^static void decode_vectors(COOKContext* q, COOKSubpacket* p, int* category,$/;"	f	file:
decode_vol_header	libavcodec/mpeg4videodec.c	/^static int decode_vol_header(MpegEncContext *s, GetBitContext *gb){$/;"	f	file:
decode_vop_header	libavcodec/mpeg4videodec.c	/^static int decode_vop_header(MpegEncContext *s, GetBitContext *gb){$/;"	f	file:
decode_vui_parameters	libavcodec/h264_ps.c	/^static inline int decode_vui_parameters(H264Context *h, SPS *sps){$/;"	f	file:
decode_wait	libavcodec/crystalhd.c	/^    uint64_t decode_wait;$/;"	m	struct:__anon268	file:
decode_wave_header	libavcodec/shorten.c	/^static int decode_wave_header(AVCodecContext *avctx, uint8_t *header, int header_size)$/;"	f	file:
decode_wdlt	libavcodec/dfa.c	/^static int decode_wdlt(uint8_t *frame, int width, int height,$/;"	f	file:
decode_xor	libavcodec/zmbv.c	/^    int (*decode_xor)(struct ZmbvContext *c);$/;"	m	struct:ZmbvContext	file:
decoded	libavcodec/flacdec.c	/^    int32_t *decoded[FLAC_MAX_CHANNELS];    \/\/\/< decoded samples$/;"	m	struct:FLACContext	file:
decoded	libavcodec/shorten.c	/^    int32_t *decoded[MAX_CHANNELS];$/;"	m	struct:ShortenContext	file:
decoded0	libavcodec/apedec.c	/^    int32_t decoded0[BLOCKS_PER_LOOP];       \/\/\/< decoded data for the first channel$/;"	m	struct:APEContext	file:
decoded1	libavcodec/apedec.c	/^    int32_t decoded1[BLOCKS_PER_LOOP];       \/\/\/< decoded data for the second channel$/;"	m	struct:APEContext	file:
decoded_bytes_buffer	libavcodec/atrac3.c	/^    uint8_t*            decoded_bytes_buffer;$/;"	m	struct:__anon131	file:
decoded_bytes_buffer	libavcodec/cook.c	/^    uint8_t*            decoded_bytes_buffer;$/;"	m	struct:cook	file:
decoded_samples	libavcodec/wmaprodec.c	/^    uint16_t decoded_samples;                         \/\/\/< number of already processed samples$/;"	m	struct:__anon82	file:
decodeplane32	libavcodec/iff.c	/^static void decodeplane32(uint32_t *dst, const uint8_t *buf, int buf_size, int plane)$/;"	f	file:
decodeplane8	libavcodec/iff.c	/^static void decodeplane8(uint8_t *dst, const uint8_t *buf, int buf_size, int plane)$/;"	f	file:
decoder	libavcodec/dfa.c	/^static const chunk_decoder decoder[8] = {$/;"	v	file:
decoder	libavcodec/dxva2.h	/^    IDirectXVideoDecoder *decoder;$/;"	m	struct:dxva_context
decoder	libavcodec/libschroedingerdec.c	/^    SchroDecoder* decoder;$/;"	m	struct:FfmpegSchroDecoderParams	file:
decoder	libavcodec/libvpxdec.c	/^    struct vpx_codec_ctx decoder;$/;"	m	struct:VP8DecoderContext	typeref:struct:VP8DecoderContext::vpx_codec_ctx	file:
decoder_init	libavcodec/g729dec.c	/^static av_cold int decoder_init(AVCodecContext * avctx)$/;"	f	file:
decoder_reorder_pts	ffplay.c	/^static int decoder_reorder_pts= -1;$/;"	v	file:
decoder_reset	libavcodec/imc.c	/^    int decoder_reset;$/;"	m	struct:__anon90	file:
decoding_map	libavcodec/interplayvideo.c	/^    const unsigned char *decoding_map;$/;"	m	struct:IpvideoContext	file:
decoding_map_size	libavcodec/interplayvideo.c	/^    int decoding_map_size;$/;"	m	struct:IpvideoContext	file:
decoding_needed	ffmpeg.c	/^    int decoding_needed;     \/* true if the packets must be decoded in 'raw_fifo' *\/$/;"	m	struct:AVInputStream	file:
decoding_needed	ffmpeg/ffmpeg.c	/^    int decoding_needed;     \/* true if the packets must be decoded in 'raw_fifo' *\/$/;"	m	struct:AVInputStream	file:
decomp_buf	libavcodec/cscd.c	/^    unsigned char* decomp_buf;$/;"	m	struct:__anon232	file:
decomp_buf	libavcodec/dxa.c	/^    uint8_t *decomp_buf;$/;"	m	struct:DxaDecContext	file:
decomp_buf	libavcodec/lcldec.c	/^    unsigned char* decomp_buf;$/;"	m	struct:LclDecContext	file:
decomp_buf	libavcodec/nuv.c	/^    unsigned char* decomp_buf;$/;"	m	struct:__anon100	file:
decomp_buf	libavcodec/tscc.c	/^    unsigned char* decomp_buf;$/;"	m	struct:TsccContext	file:
decomp_buf	libavcodec/zmbv.c	/^    uint8_t* decomp_buf;$/;"	m	struct:ZmbvContext	file:
decomp_len	libavcodec/zmbv.c	/^    int decomp_len;$/;"	m	struct:ZmbvContext	file:
decomp_size	libavcodec/cscd.c	/^    unsigned int decomp_size;$/;"	m	struct:__anon232	file:
decomp_size	libavcodec/lcldec.c	/^    unsigned int decomp_size;$/;"	m	struct:LclDecContext	file:
decomp_size	libavcodec/nuv.c	/^    unsigned int decomp_size;$/;"	m	struct:__anon100	file:
decomp_size	libavcodec/tscc.c	/^    unsigned int decomp_size;$/;"	m	struct:TsccContext	file:
decomp_size	libavcodec/zmbv.c	/^    unsigned int decomp_size;$/;"	m	struct:ZmbvContext	file:
decompose	libavfilter/libmpcodecs/vf_ow.c	/^static inline void decompose(float *dstL, float *dstH, float *src, int stride, int w){$/;"	f	file:
decompose2D	libavfilter/libmpcodecs/vf_ow.c	/^static inline void decompose2D(float *dstL, float *dstH, float *src, int xstride, int ystride, int step, int w, int h){$/;"	f	file:
decompose2D2	libavfilter/libmpcodecs/vf_ow.c	/^static void decompose2D2(float *dst[4], float *src, float *temp[2], int stride, int step, int w, int h){$/;"	f	file:
decorr	libavcodec/wavpack.c	/^    Decorr decorr[MAX_TERMS];$/;"	m	struct:WavpackFrameContext	file:
decorrelate	libavcodec/huffyuv.c	/^    int decorrelate;$/;"	m	struct:HYuvContext	file:
decorrelate	libavcodec/snow.c	/^static void decorrelate(SnowContext *s, SubBand *b, IDWTELEM *src, int stride, int inverse, int use_median){$/;"	f	file:
decorrelate_stereo_24	libavcodec/alac.c	/^static void decorrelate_stereo_24(int32_t *buffer[MAX_CHANNELS],$/;"	f	file:
decorrelation	libavcodec/aacps.c	/^static void decorrelation(PSContext *ps, float (*out)[32][2], const float (*s)[32][2], int is34)$/;"	f	file:
decorrelation	libavcodec/sonic.c	/^    int lossless, decorrelation;$/;"	m	struct:SonicContext	file:
decorrelation_matrix	libavcodec/wmaprodec.c	/^    float   decorrelation_matrix[WMAPRO_MAX_CHANNELS*WMAPRO_MAX_CHANNELS];$/;"	m	struct:__anon83	file:
decouple	libavcodec/cook.c	/^    void (* decouple) (struct cook *q,$/;"	m	struct:cook	file:
decouple_float	libavcodec/cook.c	/^static void decouple_float (COOKContext *q,$/;"	f	file:
decouple_info	libavcodec/cook.c	/^static void decouple_info(COOKContext *q, COOKSubpacket *p, int* decouple_tab){$/;"	f	file:
def	libavformat/matroskadec.c	/^    uint64_t def;$/;"	m	struct:__anon366	file:
def	libavformat/matroskadec.c	/^    } def;$/;"	m	struct:EbmlSyntax	typeref:union:EbmlSyntax::__anon351	file:
default_caps	libavfilter/libmpcodecs/vf.h	/^    unsigned int default_caps; \/\/ used by default query_format()$/;"	m	struct:vf_instance
default_clut	libavcodec/dvbsubdec.c	/^static DVBSubCLUT default_clut;$/;"	v	file:
default_decorrelation	libavcodec/wmaprodata.h	/^static const float * const default_decorrelation[] = {$/;"	v
default_decorrelation_matrices	libavcodec/wmaprodata.h	/^static const float default_decorrelation_matrices[] = {$/;"	v
default_duration	libavformat/matroskadec.c	/^    uint64_t default_duration;$/;"	m	struct:__anon361	file:
default_fcode_tab	libavcodec/mpegvideo_enc.c	/^static uint8_t default_fcode_tab[MAX_MV*2+1];$/;"	v	file:
default_interrupt_cb	libavformat/avio.c	/^static int default_interrupt_cb(void)$/;"	f	file:
default_ip	libavformat/rtsp.c	/^    struct sockaddr_storage default_ip;$/;"	m	struct:SDPParseState	typeref:struct:SDPParseState::sockaddr_storage	file:
default_models_init	libavcodec/vp56.h	/^    VP56DefaultModelsInit default_models_init;$/;"	m	struct:vp56_context
default_mv_penalty	libavcodec/mpegvideo_enc.c	/^static uint8_t default_mv_penalty[MAX_FCODE+1][MAX_MV*2+1];$/;"	v	file:
default_ref_list	libavcodec/h264.h	/^    Picture default_ref_list[2][32]; \/\/\/< base reference list for all slices of a coded picture$/;"	m	struct:H264Context
default_reqs	libavfilter/libmpcodecs/vf.h	/^    unsigned int default_reqs; \/\/ used by default config()$/;"	m	struct:vf_instance
default_scaling4	libavcodec/h264_ps.c	/^static const uint8_t default_scaling4[2][16]={$/;"	v	file:
default_scaling8	libavcodec/h264_ps.c	/^static const uint8_t default_scaling8[2][64]={$/;"	v	file:
default_screen_video_v2_palette	libavcodec/flashsv2enc.c	/^static const unsigned int default_screen_video_v2_palette[128] = {$/;"	v	file:
default_ttl	libavformat/rtsp.c	/^    int            default_ttl;$/;"	m	struct:SDPParseState	file:
default_val	libavutil/opt.h	/^    } default_val;$/;"	m	struct:AVOption	typeref:union:AVOption::__anon304
deghost	libavfilter/libmpcodecs/vf_divtc.c	/^   int deghost, pass, phase, window, fcount, bcount, frameno, misscount,$/;"	m	struct:vf_priv_s	file:
deghost_plane	libavfilter/libmpcodecs/vf_divtc.c	/^static int deghost_plane(unsigned char *d, unsigned char *s,$/;"	f	file:
deinit	libavfilter/vf_frei0r.c	/^    f0r_deinit_f          deinit;$/;"	m	struct:Frei0rContext	file:
deintTemp	libpostproc/postprocess_internal.h	/^    uint8_t *deintTemp;$/;"	m	struct:PPContext
deint_id	libavformat/rmdec.c	/^    int32_t deint_id;  \/\/\/< deinterleaver used in audio stream$/;"	m	struct:RMStream	file:
deinterlace_bottom_field	libavcodec/imgconvert.c	/^static void deinterlace_bottom_field(uint8_t *dst, int dst_wrap,$/;"	f	file:
deinterlace_bottom_field_inplace	libavcodec/imgconvert.c	/^static void deinterlace_bottom_field_inplace(uint8_t *src1, int src_wrap,$/;"	f	file:
deinterlace_line	libavcodec/imgconvert.c	59;"	d	file:
deinterlace_line	libavcodec/imgconvert.c	62;"	d	file:
deinterlace_line_c	libavcodec/imgconvert.c	/^static void deinterlace_line_c(uint8_t *dst,$/;"	f	file:
deinterlace_line_inplace	libavcodec/imgconvert.c	58;"	d	file:
deinterlace_line_inplace	libavcodec/imgconvert.c	61;"	d	file:
deinterlace_line_inplace_c	libavcodec/imgconvert.c	/^static void deinterlace_line_inplace_c(uint8_t *lum_m4, uint8_t *lum_m3,$/;"	f	file:
deinterleave	libavcodec/resample.c	/^static void deinterleave(short **output, short *input, int channels, int samples)$/;"	f	file:
deinterleave_input_samples	libavcodec/ac3enc.h	/^    void (*deinterleave_input_samples)(struct AC3EncodeContext *s,$/;"	m	struct:AC3EncodeContext
deinterleave_input_samples	libavcodec/ac3enc_template.c	/^void AC3_NAME(deinterleave_input_samples)(AC3EncodeContext *s,$/;"	f
delay	libavcodec/aacps.h	/^    float  delay[PS_MAX_SSB][PS_QMF_TIME_SLOTS + PS_MAX_DELAY][2];$/;"	m	struct:__anon257
delay	libavcodec/apedec.c	/^    int16_t *delay;         \/\/\/< filtered values$/;"	m	struct:APEFilter	file:
delay	libavcodec/atrac3.c	/^    int                 delay;$/;"	m	struct:__anon131	file:
delay	libavcodec/avcodec.h	/^    int delay;$/;"	m	struct:AVCodecContext
delay	libavformat/flvenc.c	/^    int delay; \/\/\/< first dts delay for AVC$/;"	m	struct:FLVContext	file:
delayBuf1	libavcodec/atrac3.c	/^    float             delayBuf1[46]; \/\/\/<qmf delay buffers$/;"	m	struct:__anon130	file:
delayBuf2	libavcodec/atrac3.c	/^    float             delayBuf2[46];$/;"	m	struct:__anon130	file:
delayBuf3	libavcodec/atrac3.c	/^    float             delayBuf3[46];$/;"	m	struct:__anon130	file:
delayed_pic	libavcodec/h264.h	/^    Picture *delayed_pic[MAX_DELAYED_PIC_COUNT+2]; \/\/FIXME size?$/;"	m	struct:H264Context
delaying	libavcodec/pthread.c	/^    int delaying;                  \/**<$/;"	m	struct:FrameThreadContext	file:
delete_cluts	libavcodec/dvbsubdec.c	/^static void delete_cluts(DVBSubContext *ctx)$/;"	f	file:
delete_objects	libavcodec/dvbsubdec.c	/^static void delete_objects(DVBSubContext *ctx)$/;"	f	file:
delete_region_display_list	libavcodec/dvbsubdec.c	/^static void delete_region_display_list(DVBSubContext *ctx, DVBSubRegion *region)$/;"	f	file:
delete_regions	libavcodec/dvbsubdec.c	/^static void delete_regions(DVBSubContext *ctx)$/;"	f	file:
deloco_rgb24	libavcodec/pngdec.c	/^static void deloco_rgb24(uint8_t *dst, int size)$/;"	f	file:
delogo	libavfilter/libmpcodecs/vf_delogo.c	/^static void delogo(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int width, int height,$/;"	f	file:
delta	libavcodec/cljr.c	/^    int delta[16];$/;"	m	struct:CLJRContext	file:
delta	libavcodec/dsicinav.c	/^    int delta;$/;"	m	struct:CinAudioContext	file:
delta	libavcodec/motionpixels.c	/^    uint8_t delta;$/;"	m	struct:HuffCode	file:
delta	libavcodec/vcr1.c	/^    int delta[16];$/;"	m	struct:VCR1Context	file:
delta	libavcodec/vorbis_enc_data.h	/^    float delta;$/;"	m	struct:__anon273
delta	libavcodec/vorbisenc.c	/^    float delta;$/;"	m	struct:__anon188	file:
delta	libavcodec/wavpack.c	/^    int delta;$/;"	m	struct:Decorr	file:
delta	libavfilter/libmpcodecs/vf_ow.c	/^    float delta;$/;"	m	struct:vf_priv_s	file:
delta	libavfilter/libmpcodecs/vf_tile.c	/^    int  delta;$/;"	m	struct:vf_priv_s	file:
delta_decode	libavcodec/8svx.c	/^static int delta_decode(int8_t *dst, const uint8_t *src, int src_size,$/;"	f	file:
delta_pic_order_always_zero_flag	libavcodec/h264.h	/^    int delta_pic_order_always_zero_flag;$/;"	m	struct:SPS
delta_poc	libavcodec/h264.h	/^    int delta_poc[2];$/;"	m	struct:H264Context
delta_poc_bottom	libavcodec/h264.h	/^    int delta_poc_bottom;$/;"	m	struct:H264Context
deltas	libavcodec/truemotion2.c	/^    int deltas[TM2_NUM_STREAMS][TM2_DELTAS];$/;"	m	struct:TM2Context	file:
deltaset	libavcodec/truemotion1.c	/^    uint8_t deltaset;$/;"	m	struct:frame_header	file:
demph_mem	libavcodec/amrwbdec.c	/^    float                           demph_mem[1]; \/\/\/< previous value in the de-emphasis filter$/;"	m	struct:__anon64	file:
demux_u	libswscale/ppc/yuv2rgb_altivec.c	/^    demux_u = {0x10,0x00,0x10,0x00,$/;"	v	file:
demux_v	libswscale/ppc/yuv2rgb_altivec.c	/^    demux_v = {0x10,0x02,0x10,0x02,$/;"	v	file:
demux_y	libswscale/ppc/yuv2rgb_altivec.c	/^    demux_y = {0x10,0x01,0x10,0x03,$/;"	v	file:
demuxer_class	libavformat/avidec.c	/^static const AVClass demuxer_class = {$/;"	v	file:
den	libavformat/avformat.h	/^    int64_t val, num, den;$/;"	m	struct:AVFrac
den	libavutil/rational.h	/^    int den; \/\/\/< denominator$/;"	m	struct:AVRational
denoise_dct	libavcodec/mpegvideo.h	/^    void (*denoise_dct)(struct MpegEncContext *s, DCTELEM *block);$/;"	m	struct:MpegEncContext
denoise_dct_c	libavcodec/mpegvideo_enc.c	/^static void denoise_dct_c(MpegEncContext *s, DCTELEM *block){$/;"	f	file:
denoise_dct_mmx	libavcodec/x86/mpegvideo_mmx.c	/^static void  denoise_dct_mmx(MpegEncContext *s, DCTELEM *block){$/;"	f	file:
denoise_dct_sse2	libavcodec/x86/mpegvideo_mmx.c	/^static void  denoise_dct_sse2(MpegEncContext *s, DCTELEM *block){$/;"	f	file:
denoise_filter_cache	libavcodec/wmavoice.c	/^    float denoise_filter_cache[MAX_FRAMESIZE];$/;"	m	struct:__anon157	file:
denoise_filter_cache_size	libavcodec/wmavoice.c	/^    int   denoise_filter_cache_size; \/\/\/< samples in #denoise_filter_cache$/;"	m	struct:__anon157	file:
denoise_strength	libavcodec/wmavoice.c	/^    int denoise_strength;         \/\/\/< strength of denoising in Wiener filter$/;"	m	struct:__anon157	file:
denoise_tilt_corr	libavcodec/wmavoice.c	/^    int denoise_tilt_corr;        \/\/\/< Whether to apply tilt correction to the$/;"	m	struct:__anon157	file:
deplanarize	libavformat/lxfdec.c	/^static void deplanarize(LXFDemuxContext *lxf, AVStream *ast, uint8_t *out, int bytes)$/;"	f	file:
depth	libavcodec/dvbsubdec.c	/^    int depth;$/;"	m	struct:DVBSubRegion	file:
depth	libavcodec/escape124.c	/^    unsigned depth;$/;"	m	struct:CodeBook	file:
depth	libavcodec/imgconvert.c	/^    uint8_t depth;           \/**< bit depth of the color components *\/$/;"	m	struct:PixFmtInfo	file:
depth	libavcodec/sgidec.c	/^    unsigned int depth;$/;"	m	struct:SgiState	file:
depth	libavdevice/v4l.c	/^    int depth;$/;"	m	struct:__anon317	file:
depth	libavfilter/libmpcodecs/vf_ow.c	/^    int depth;$/;"	m	struct:vf_priv_s	file:
depth_minus1	libavutil/pixdesc.h	/^    uint16_t depth_minus1 :4;            \/\/\/< number of bits in the component minus 1$/;"	m	struct:AVComponentDescriptor
dequant	libavcodec/bink.c	/^static inline DCTELEM dequant(DCTELEM in, uint32_t quant, int dc)$/;"	f	file:
dequant	libavcodec/cavs.h	/^static inline int dequant(AVSContext *h, DCTELEM *level_buf, uint8_t *run_buf,$/;"	f
dequant	libavcodec/sipr.c	/^static void dequant(float *out, const int *idx, const float *cbs[])$/;"	f	file:
dequant	libavcodec/sipr16k.c	/^static void dequant(float *out, const int *idx, const float *cbs[])$/;"	f	file:
dequant	libavcodec/twinvq.c	/^static void dequant(TwinContext *tctx, GetBitContext *gb, float *out,$/;"	f	file:
dequant4_buffer	libavcodec/h264.h	/^    uint32_t dequant4_buffer[6][QP_MAX_NUM+1][16]; \/\/FIXME should these be moved down?$/;"	m	struct:H264Context
dequant4_coeff	libavcodec/h264.h	/^    uint32_t (*dequant4_coeff[6])[16];$/;"	m	struct:H264Context
dequant4_coeff_init	libavcodec/h264data.h	/^static const uint8_t dequant4_coeff_init[6][3]={$/;"	v
dequant8_buffer	libavcodec/h264.h	/^    uint32_t dequant8_buffer[6][QP_MAX_NUM+1][64];$/;"	m	struct:H264Context
dequant8_coeff	libavcodec/h264.h	/^    uint32_t (*dequant8_coeff[6])[64];$/;"	m	struct:H264Context
dequant8_coeff_init	libavcodec/h264data.h	/^static const uint8_t dequant8_coeff_init[6][6]={$/;"	v
dequant8_coeff_init_scan	libavcodec/h264data.h	/^static const uint8_t dequant8_coeff_init_scan[16] = {$/;"	v
dequant_1bit	libavcodec/qdm2data.h	/^static const float dequant_1bit[2][3] = {$/;"	v
dequant_ac	libavcodec/vp56.h	/^    uint16_t dequant_ac;$/;"	m	struct:vp56_context
dequant_coeff_pps	libavcodec/h264.h	/^    int dequant_coeff_pps;     \/\/\/< reinit tables when pps changes$/;"	m	struct:H264Context
dequant_dc	libavcodec/vp56.h	/^    uint16_t dequant_dc;$/;"	m	struct:vp56_context
dequant_lsp10i	libavcodec/wmavoice.c	/^static void dequant_lsp10i(GetBitContext *gb, double *lsps)$/;"	f	file:
dequant_lsp10r	libavcodec/wmavoice.c	/^static void dequant_lsp10r(GetBitContext *gb,$/;"	f	file:
dequant_lsp16i	libavcodec/wmavoice.c	/^static void dequant_lsp16i(GetBitContext *gb, double *lsps)$/;"	f	file:
dequant_lsp16r	libavcodec/wmavoice.c	/^static void dequant_lsp16r(GetBitContext *gb,$/;"	f	file:
dequant_lsps	libavcodec/wmavoice.c	/^static void dequant_lsps(double *lsps, int num,$/;"	f	file:
dequant_table	libavcodec/4xm.c	/^static const uint8_t dequant_table[64]={$/;"	v	file:
dequant_table	libavcodec/qdm2data.h	/^static const uint32_t dequant_table[3][10][30] = {$/;"	v
dequantize	libavcodec/snow.c	/^static void dequantize(SnowContext *s, SubBand *b, IDWTELEM *src, int stride){$/;"	f	file:
dequantize_all	libavcodec/snow.c	/^static void dequantize_all(SnowContext *s, Plane *p, IDWTELEM *buffer, int width, int height){$/;"	f	file:
dequantize_slice_buffered	libavcodec/snow.c	/^static void dequantize_slice_buffered(SnowContext *s, slice_buffer * sb, SubBand *b, IDWTELEM *src, int stride, int start_y, int end_y){$/;"	f	file:
dering	libpostproc/postprocess_template.c	/^static inline void RENAME(dering)(uint8_t src[], int stride, PPContext *c)$/;"	f	file:
dering_altivec	libpostproc/postprocess_altivec_template.c	/^static inline void dering_altivec(uint8_t src[], int stride, PPContext *c) {$/;"	f	file:
des_encdec	libavutil/des.c	/^static uint64_t des_encdec(uint64_t in, uint64_t K[16], int decrypt) {$/;"	f	file:
describe_payload	libavformat/movenchint.c	/^static void describe_payload(const uint8_t *data, int size,$/;"	f	file:
description	libavfilter/avfilter.h	/^    const char *description;$/;"	m	struct:AVFilter
descriptor	libavcodec/dpxenc.c	/^    int descriptor;$/;"	m	struct:DPXContext	file:
descriptor	libavformat/mxfdec.c	/^    MXFDescriptor *descriptor; \/* only one *\/$/;"	m	struct:__anon445	file:
descriptor_ref	libavformat/mxfdec.c	/^    UID descriptor_ref;$/;"	m	struct:__anon445	file:
descriptorlength	libavformat/ape.c	/^    uint32_t descriptorlength;$/;"	m	struct:__anon335	file:
desired_video_buffers	libavdevice/v4l2.c	/^static const int desired_video_buffers = 256;$/;"	v	file:
dest	libavcodec/mpegvideo.h	/^    uint8_t *dest[3];$/;"	m	struct:MpegEncContext
dest_addr	libavformat/udp.c	/^    struct sockaddr_storage dest_addr;$/;"	m	struct:__anon320	typeref:struct:__anon320::sockaddr_storage	file:
dest_addr_len	libavformat/udp.c	/^    int dest_addr_len;$/;"	m	struct:__anon320	file:
destination	libavformat/rtsp.h	/^    struct sockaddr_storage destination; \/**< destination IP address *\/$/;"	m	struct:RTSPTransportField	typeref:struct:RTSPTransportField::sockaddr_storage
destroy_buffers	libavcodec/vaapi.c	/^static void destroy_buffers(VADisplay display, VABufferID *buffers, unsigned int n_buffers)$/;"	f	file:
destroy_masks	libavfilter/libmpcodecs/vf_remove_logo.c	/^static void destroy_masks(vf_instance_t * vf)$/;"	f	file:
destroy_pgm	libavfilter/libmpcodecs/vf_remove_logo.c	/^static void destroy_pgm(pgm_structure * to_be_destroyed)$/;"	f	file:
destruct	libavcodec/avcodec.h	/^    void  (*destruct)(struct AVPacket *);$/;"	m	struct:AVPacket
destruct	libavfilter/vf_frei0r.c	/^    f0r_destruct_f        destruct;$/;"	m	struct:Frei0rContext	file:
determine_bitrate	libavcodec/qcelpdec.c	/^static qcelp_packet_rate determine_bitrate(AVCodecContext *avctx, const int buf_size,$/;"	f	file:
dev	libavcodec/crystalhd.c	/^    HANDLE dev;$/;"	m	struct:__anon268	file:
device_filter	libavdevice/dshow.c	/^    IBaseFilter *device_filter[2];$/;"	m	struct:dshow_ctx	file:
device_init	libavdevice/v4l2.c	/^static int device_init(AVFormatContext *ctx, int *width, int *height, uint32_t pix_fmt)$/;"	f	file:
device_name	libavdevice/dshow.c	/^    char *device_name[2];$/;"	m	struct:dshow_ctx	file:
device_open	libavdevice/v4l2.c	/^static int device_open(AVFormatContext *ctx, uint32_t *capabilities)$/;"	f	file:
device_pin	libavdevice/dshow.c	/^    IPin        *device_pin[2];$/;"	m	struct:dshow_ctx	file:
device_try_init	libavdevice/v4l2.c	/^static uint32_t device_try_init(AVFormatContext *s1,$/;"	f	file:
dexps	libavcodec/ac3dec.h	/^    int8_t dexps[AC3_MAX_CHANNELS][AC3_MAX_COEFS];  \/\/\/< decoded exponents$/;"	m	struct:__anon88
dfa_decode_end	libavcodec/dfa.c	/^static av_cold int dfa_decode_end(AVCodecContext *avctx)$/;"	f	file:
dfa_decode_frame	libavcodec/dfa.c	/^static int dfa_decode_frame(AVCodecContext *avctx,$/;"	f	file:
dfa_decode_init	libavcodec/dfa.c	/^static av_cold int dfa_decode_init(AVCodecContext *avctx)$/;"	f	file:
dfa_probe	libavformat/dfa.c	/^static int dfa_probe(AVProbeData *p)$/;"	f	file:
dfa_read_header	libavformat/dfa.c	/^static int dfa_read_header(AVFormatContext *s,$/;"	f	file:
dfa_read_packet	libavformat/dfa.c	/^static int dfa_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
dh	libavfilter/libmpcodecs/vf_screenshot.c	/^    int dw, dh, stride;$/;"	m	struct:vf_priv_s	file:
dht_segment_frag	libavcodec/mjpeg2jpeg_bsf.c	/^static const uint8_t dht_segment_frag[] = {$/;"	v	file:
dht_segment_head	libavcodec/mjpeg2jpeg_bsf.c	/^static const uint8_t dht_segment_head[] = { 0xFF, 0xC4, 0x01, 0xA2, 0x00 };$/;"	v	file:
dht_segment_size	libavcodec/mjpeg2jpeg_bsf.c	/^static const int dht_segment_size = 420;$/;"	v	file:
dia_size	libavcodec/avcodec.h	/^    int dia_size;$/;"	m	struct:AVCodecContext
dia_size	libavcodec/mpegvideo.h	/^    int dia_size;$/;"	m	struct:MotionEstContext
diag_mc	libavcodec/snow.c	/^    int diag_mc;$/;"	m	struct:Plane	file:
dialog_norm	libavcodec/dca.c	/^    int dialog_norm;            \/\/\/< dialog normalisation parameter$/;"	m	struct:__anon93	file:
dialog_start	libavcodec/srtenc.c	/^    char *dialog_start;$/;"	m	struct:__anon139	file:
dialogs	libavcodec/ass_split.h	/^    ASSDialog    *dialogs;       \/**< array of split out dialogs *\/$/;"	m	struct:__anon251
dialogs_count	libavcodec/ass_split.h	/^    int           dialogs_count; \/**< number of ASSDialog in the dialogs array*\/$/;"	m	struct:__anon251
dialogue_level	libavcodec/ac3.h	/^    int dialogue_level;$/;"	m	struct:AC3EncOptions
diamond_search	libavcodec/motion_est_template.c	/^static av_always_inline int diamond_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
dico1_isf	libavcodec/amrwbdata.h	/^static const int16_t dico1_isf[256][9] = {$/;"	v
dico21_isf	libavcodec/amrwbdata.h	/^static const int16_t dico21_isf[64][3] = {$/;"	v
dico21_isf_36b	libavcodec/amrwbdata.h	/^static const int16_t dico21_isf_36b[128][5] = {$/;"	v
dico22_isf	libavcodec/amrwbdata.h	/^static const int16_t dico22_isf[128][3] = {$/;"	v
dico22_isf_36b	libavcodec/amrwbdata.h	/^static const int16_t dico22_isf_36b[128][4] = {$/;"	v
dico23_isf	libavcodec/amrwbdata.h	/^static const int16_t dico23_isf[128][3] = {$/;"	v
dico23_isf_36b	libavcodec/amrwbdata.h	/^static const int16_t dico23_isf_36b[64][7] = {$/;"	v
dico24_isf	libavcodec/amrwbdata.h	/^static const int16_t dico24_isf[32][3] = {$/;"	v
dico25_isf	libavcodec/amrwbdata.h	/^static const int16_t dico25_isf[32][4] = {$/;"	v
dico2_isf	libavcodec/amrwbdata.h	/^static const int16_t dico2_isf[256][7] = {$/;"	v
die	configure	/^die(){$/;"	f
die	libavcodec/pthread.c	/^    int die;                       \/\/\/< Set when threads should exit.$/;"	m	struct:FrameThreadContext	file:
die	tests/fate.sh	/^die(){$/;"	f
die_license_disabled	configure	/^die_license_disabled() {$/;"	f
die_unknown	configure	/^die_unknown(){$/;"	f
diff	libavfilter/libmpcodecs/pullup.h	/^    int (*diff)(unsigned char *, unsigned char *, int);$/;"	m	struct:pullup_context
diff	libavfilter/libmpcodecs/vf_decimate.c	/^static int (*diff)(unsigned char *, unsigned char *, int, int);$/;"	v	file:
diff	libavfilter/libmpcodecs/vf_dint.c	/^  int diff;$/;"	m	struct:vf_priv_s	file:
diff	libavfilter/libmpcodecs/vf_divtc.c	/^static int (*diff)(unsigned char *, unsigned char *, int, int);$/;"	v	file:
diff	libavfilter/libmpcodecs/vf_phase.c	80;"	d	file:
diff_C	libavfilter/libmpcodecs/vf_decimate.c	/^static int diff_C(unsigned char *old, unsigned char *new, int os, int ns)$/;"	f	file:
diff_C	libavfilter/libmpcodecs/vf_divtc.c	/^static int diff_C(unsigned char *old, unsigned char *new, int os, int ns)$/;"	f	file:
diff_MMX	libavfilter/libmpcodecs/vf_decimate.c	/^static int diff_MMX(unsigned char *old, unsigned char *new, int os, int ns)$/;"	f	file:
diff_MMX	libavfilter/libmpcodecs/vf_divtc.c	/^static int diff_MMX(unsigned char *old, unsigned char *new, int os, int ns)$/;"	f	file:
diff_blocks	libavcodec/flashsv2enc.c	/^    double diff_blocks;         \/\/\/< blocks that were different since last keyframe$/;"	m	struct:FlashSV2Context	file:
diff_bytes	libavcodec/dsputil.h	/^    void (*diff_bytes)(uint8_t *dst\/*align 16*\/, uint8_t *src1\/*align 16*\/, uint8_t *src2\/*align 1*\/,int w);$/;"	m	struct:DSPContext
diff_bytes_c	libavcodec/dsputil.c	/^static void diff_bytes_c(uint8_t *dst, uint8_t *src1, uint8_t *src2, int w){$/;"	f	file:
diff_bytes_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static void diff_bytes_mmx(uint8_t *dst, uint8_t *src1, uint8_t *src2, int w){$/;"	f	file:
diff_count	libavcodec/amrnbdec.c	/^    uint8_t                      diff_count; \/\/\/< the number of subframes for which diff has been above 0.65$/;"	m	struct:AMRContext	file:
diff_fields	libavfilter/libmpcodecs/vf_detc.c	/^static void diff_fields(struct metrics *metr, mp_image_t *old, mp_image_t *new)$/;"	f	file:
diff_fields	libavfilter/libmpcodecs/vf_filmdint.c	/^static void diff_fields(struct vf_priv_s *p, struct frame_stats *s,$/;"	f	file:
diff_fields	libavfilter/libmpcodecs/vf_ivtc.c	/^static void diff_fields(struct frameinfo *fi, mp_image_t *old, mp_image_t *new)$/;"	f	file:
diff_lines	libavcodec/flashsv2enc.c	/^    double diff_lines;          \/\/\/< scanlines that were different since last keyframe$/;"	m	struct:FlashSV2Context	file:
diff_lt_altivec	libavcodec/ppc/h264_altivec.c	/^static inline vec_u8 diff_lt_altivec ( register vec_u8 x,$/;"	f	file:
diff_mem	libavcodec/g722.c	/^        int32_t diff_mem[6];         \/\/\/< quantizer difference signal memory$/;"	m	struct:__anon140::G722Band	file:
diff_pixels	libavcodec/dsputil.h	/^    void (*diff_pixels)(DCTELEM *block\/*align 16*\/, const uint8_t *s1\/*align 8*\/, const uint8_t *s2\/*align 8*\/, int stride);$/;"	m	struct:DSPContext
diff_pixels_altivec	libavcodec/ppc/dsputil_altivec.c	/^static void diff_pixels_altivec(DCTELEM *restrict block, const uint8_t *s1,$/;"	f	file:
diff_pixels_c	libavcodec/dsputil.c	/^static void diff_pixels_c(DCTELEM *restrict block, const uint8_t *s1,$/;"	f	file:
diff_pixels_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void diff_pixels_mlib(DCTELEM *restrict block, const uint8_t *s1, const uint8_t *s2, int line_size)$/;"	f	file:
diff_pixels_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static inline void diff_pixels_mmx(DCTELEM *block, const uint8_t *s1, const uint8_t *s2, int stride)$/;"	f	file:
diff_pixels_mvi	libavcodec/alpha/motion_est_alpha.c	/^void diff_pixels_mvi(DCTELEM *block, const uint8_t *s1, const uint8_t *s2,$/;"	f
diff_plane	libavfilter/libmpcodecs/vf_divtc.c	/^static int diff_plane(unsigned char *old, unsigned char *new,$/;"	f	file:
diff_planes	libavfilter/libmpcodecs/vf_detc.c	/^static void diff_planes(struct metrics *m, unsigned char *old, unsigned char *new, int w, int h, int os, int ns)$/;"	f	file:
diff_planes	libavfilter/libmpcodecs/vf_filmdint.c	/^static void diff_planes(struct vf_priv_s *p, struct frame_stats *s,$/;"	f	file:
diff_planes	libavfilter/libmpcodecs/vf_ivtc.c	/^static void diff_planes(struct frameinfo *fi,$/;"	f	file:
diff_time	libavfilter/libmpcodecs/vf_filmdint.c	/^    double diff_time, merge_time, decode_time, vo_time, filter_time;$/;"	m	struct:vf_priv_s	file:
diff_to_drop	libavfilter/libmpcodecs/vf_decimate.c	/^static int diff_to_drop(int hi, int lo, float frac, mp_image_t *old, mp_image_t *new)$/;"	f	file:
diff_to_drop_plane	libavfilter/libmpcodecs/vf_decimate.c	/^static int diff_to_drop_plane(int hi, int lo, float frac, unsigned char *old, unsigned char *new, int w, int h, int os, int ns)$/;"	f	file:
diff_y	libavfilter/libmpcodecs/pullup.c	/^static int diff_y(unsigned char *a, unsigned char *b, int s)$/;"	f	file:
diff_y_mmx	libavfilter/libmpcodecs/pullup.c	/^static int diff_y_mmx(unsigned char *a, unsigned char *b, int s)$/;"	f	file:
diffs	libavfilter/libmpcodecs/pullup.h	/^    int *diffs;$/;"	m	struct:pullup_field
difseg_size	libavcodec/dvdata.h	/^    int              difseg_size;           \/* number of DIF segments per DIF channel *\/$/;"	m	struct:DVprofile
digest_len	libavutil/sha.c	/^    uint8_t  digest_len;  \/\/\/< digest length in 32-bit words$/;"	m	struct:AVSHA	file:
digest_params	libavformat/httpauth.h	/^    DigestParams digest_params;$/;"	m	struct:__anon405
dilate_end_frame_filter	libavfilter/vf_libopencv.c	/^static void dilate_end_frame_filter(AVFilterContext *ctx, IplImage *inimg, IplImage *outimg)$/;"	f	file:
dilate_init	libavfilter/vf_libopencv.c	/^static av_cold int dilate_init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
dilate_uninit	libavfilter/vf_libopencv.c	/^static av_cold void dilate_uninit(AVFilterContext *ctx)$/;"	f	file:
dim	libavcodec/elbg.c	/^    int dim;$/;"	m	struct:__anon247	file:
dim	libavcodec/vorbis_enc_data.h	/^    int dim;$/;"	m	struct:__anon273
dim	libavcodec/vorbis_enc_data.h	/^    int dim;$/;"	m	struct:__anon274
dim	libavcodec/vorbisenc.c	/^    int dim;$/;"	m	struct:__anon189	file:
dimensions	libavcodec/vorbisdec.c	/^    uint8_t      dimensions;$/;"	m	struct:__anon258	file:
dimentions	libavcodec/vorbisenc.c	/^    float *dimentions;$/;"	m	struct:__anon188	file:
dint_copy_line	libavfilter/libmpcodecs/vf_filmdint.c	/^dint_copy_line(unsigned char *dst, unsigned char *a, long bos,$/;"	f	file:
dint_copy_line_mmx2	libavfilter/libmpcodecs/vf_filmdint.c	/^dint_copy_line_mmx2(unsigned char *dst, unsigned char *a, long bos,$/;"	f	file:
dint_copy_plane	libavfilter/libmpcodecs/vf_filmdint.c	/^dint_copy_plane(unsigned char *d, unsigned char *a, unsigned char *b,$/;"	f	file:
dint_thres	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long dint_thres;$/;"	m	struct:vf_priv_s	file:
dir	libavfilter/vf_transpose.c	/^    int dir;$/;"	m	struct:__anon45	file:
dir	libavformat/isom.h	/^    char *dir;$/;"	m	struct:__anon466
dirac_color_presets	libavcodec/dirac.c	/^} dirac_color_presets[] = {$/;"	v	typeref:struct:__anon95	file:
dirac_combine_frame	libavcodec/dirac_parser.c	/^static int dirac_combine_frame(AVCodecParserContext *s, AVCodecContext *avctx,$/;"	f	file:
dirac_frame_rate	libavcodec/dirac.c	/^static const AVRational dirac_frame_rate[] = {$/;"	v	file:
dirac_get_se_golomb	libavcodec/golomb.h	/^static inline int dirac_get_se_golomb(GetBitContext *gb){$/;"	f
dirac_gptopts	libavformat/oggparsedirac.c	/^static uint64_t dirac_gptopts(AVFormatContext *s, int idx, uint64_t granule,$/;"	f	file:
dirac_header	libavformat/oggparsedirac.c	/^static int dirac_header(AVFormatContext *s, int idx)$/;"	f	file:
dirac_parse	libavcodec/dirac_parser.c	/^static int dirac_parse(AVCodecParserContext *s, AVCodecContext *avctx,$/;"	f	file:
dirac_parse_close	libavcodec/dirac_parser.c	/^static void dirac_parse_close(AVCodecParserContext *s)$/;"	f	file:
dirac_pix_fmt	libavcodec/dirac.c	/^static const enum PixelFormat dirac_pix_fmt[2][3] = {$/;"	v	typeref:enum:PixelFormat	file:
dirac_pix_fmt	libavcodec/libdirac.h	/^    dirac_chroma_t dirac_pix_fmt;$/;"	m	struct:__anon161
dirac_preset_aspect_ratios	libavcodec/dirac.c	/^static const AVRational dirac_preset_aspect_ratios[] = {$/;"	v	file:
dirac_primaries	libavcodec/dirac.c	/^static const enum AVColorPrimaries dirac_primaries[] = {$/;"	v	typeref:enum:AVColorPrimaries	file:
dirac_probe	libavformat/diracdec.c	/^static int dirac_probe(AVProbeData *p)$/;"	f	file:
dirac_source_parameters_defaults	libavcodec/dirac.c	/^static const dirac_source_params dirac_source_parameters_defaults[] = {$/;"	v	file:
dirac_source_params	libavcodec/dirac.h	/^} dirac_source_params;$/;"	t	typeref:struct:__anon227
dirac_unit	libavcodec/dirac_parser.c	/^    uint8_t *dirac_unit;$/;"	m	struct:DiracParseContext	file:
dirac_unit_size	libavcodec/dirac_parser.c	/^    int dirac_unit_size;$/;"	m	struct:DiracParseContext	file:
direct_8x8_inference_flag	libavcodec/h264.h	/^    int direct_8x8_inference_flag;$/;"	m	struct:SPS
direct_basis_mv	libavcodec/mpegvideo.h	/^    int direct_basis_mv[4][2];$/;"	m	struct:MotionEstContext
direct_cache	libavcodec/h264.h	/^    uint8_t     direct_cache[5*8];$/;"	m	struct:H264Context
direct_den	libavcodec/cavs.h	/^    int direct_den[2]; \/\/\/< for scaling in direct B block$/;"	m	struct:__anon207
direct_mb_plane	libavcodec/vc1.h	/^    uint8_t* direct_mb_plane;     \/\/\/< bitplane for "direct" MBs$/;"	m	struct:VC1Context
direct_scale_mv	libavcodec/mpegvideo.h	/^    int16_t direct_scale_mv[2][64];   \/\/\/< precomputed to avoid divisions in ff_mpeg4_set_direct_mv$/;"	m	struct:MpegEncContext
direct_search	libavcodec/motion_est.c	/^static inline int direct_search(MpegEncContext * s, int mb_x, int mb_y)$/;"	f	file:
direct_spatial_mv_pred	libavcodec/h264.h	/^    int direct_spatial_mv_pred;$/;"	m	struct:H264Context
direct_table	libavcodec/h264.h	/^    uint8_t     *direct_table;$/;"	m	struct:H264Context
direction	libavcodec/aac.h	/^    int direction[8][4];$/;"	m	struct:__anon240
direction	libavfilter/libmpcodecs/vf_rotate.c	/^    int direction;$/;"	m	struct:vf_priv_s	file:
directpred	libavcodec/avcodec.h	/^    int directpred;$/;"	m	struct:AVCodecContext
dirty	libavcodec/flashsv2enc.c	/^    uint8_t dirty;$/;"	m	struct:Block	file:
disable	configure	/^disable(){$/;"	f
disable_safe	configure	/^disable_safe(){$/;"	f
disable_weak	configure	/^disable_weak(){$/;"	f
disabled	configure	/^disabled(){$/;"	f
disabled_all	configure	/^disabled_all(){$/;"	f
disabled_any	configure	/^disabled_any(){$/;"	f
discard	ffmpeg.c	/^    int discard;             \/* true if stream data should be discarded *\/$/;"	m	struct:AVInputStream	file:
discard	ffmpeg/ffmpeg.c	/^    int discard;             \/* true if stream data should be discarded *\/$/;"	m	struct:AVInputStream	file:
discard	libavcodec/libcelt_dec.c	/^    int discard;$/;"	m	struct:libcelt_context	file:
discard	libavformat/avformat.h	/^    enum AVDiscard discard;        \/\/\/< selects which program to discard and which to feed to the caller$/;"	m	struct:AVProgram	typeref:enum:AVProgram::AVDiscard
discard	libavformat/avformat.h	/^    enum AVDiscard discard; \/\/\/< Selects which packets can be discarded at will and do not need to be demuxed.$/;"	m	struct:AVStream	typeref:enum:AVStream::AVDiscard
discard_pid	libavformat/mpegts.c	/^static int discard_pid(MpegTSContext *ts, unsigned int pid)$/;"	f	file:
display	libavcodec/vaapi.h	/^    void *display;$/;"	m	struct:vaapi_context
display_definition	libavcodec/dvbsubdec.c	/^    DVBSubDisplayDefinition *display_definition;$/;"	m	struct:DVBSubContext	file:
display_disable	ffplay.c	/^static int display_disable;$/;"	v	file:
display_end_segment	libavcodec/pgssubdec.c	/^static int display_end_segment(AVCodecContext *avctx, void *data,$/;"	f	file:
display_height	libavformat/matroskadec.c	/^    uint64_t display_height;$/;"	m	struct:__anon357	file:
display_list	libavcodec/dvbsubdec.c	/^    DVBSubObjectDisplay *display_list;$/;"	m	struct:DVBSubObject	file:
display_list	libavcodec/dvbsubdec.c	/^    DVBSubObjectDisplay *display_list;$/;"	m	struct:DVBSubRegion	file:
display_list	libavcodec/dvbsubdec.c	/^    DVBSubRegionDisplay *display_list;$/;"	m	struct:DVBSubContext	file:
display_list_size	libavcodec/dvbsubdec.c	/^    int display_list_size;$/;"	m	struct:DVBSubContext	file:
display_width	libavformat/matroskadec.c	/^    uint64_t display_width;$/;"	m	struct:__anon357	file:
disposition	libavformat/avformat.h	/^    int disposition; \/**< AV_DISPOSITION_* bit field *\/$/;"	m	struct:AVStream
dist	libavcodec/cavs.h	/^    int dist[2];     \/\/\/< temporal distances from current frame to ref frames$/;"	m	struct:__anon207
dist	libavcodec/flashsv2enc.c	/^    int use15_7, dist, comp;$/;"	m	struct:FlashSV2Context	file:
distCoeff	libavfilter/libmpcodecs/vf_sab.c	/^    int *distCoeff;$/;"	m	struct:FilterParam	file:
distStride	libavfilter/libmpcodecs/vf_sab.c	/^    int distStride;$/;"	m	struct:FilterParam	file:
distWidth	libavfilter/libmpcodecs/vf_sab.c	/^    int distWidth;$/;"	m	struct:FilterParam	file:
dist_scale_factor	libavcodec/h264.h	/^    int dist_scale_factor[16];$/;"	m	struct:H264Context
dist_scale_factor_field	libavcodec/h264.h	/^    int dist_scale_factor_field[2][32];$/;"	m	struct:H264Context
distance	libavcodec/nellymoserenc.c	/^static inline float distance(float x, float y, int band)$/;"	f	file:
distance_limited	libavcodec/elbg.c	/^static inline int distance_limited(int *a, int *b, int dim, int limit)$/;"	f	file:
disto	libavcodec/j2k.h	/^    int64_t disto;$/;"	m	struct:__anon212
distortion	libavcodec/psymodel.h	/^    float distortion;$/;"	m	struct:FFPsyBand
dith_state	libavcodec/ac3dec.h	/^    AVLFG dith_state;                       \/\/\/< for dither generation$/;"	m	struct:__anon88
dither	libavfilter/libmpcodecs/vf_fspp.c	/^static const uint8_t  __attribute__((aligned(32))) dither[8][8]={$/;"	v	file:
dither	libavfilter/libmpcodecs/vf_gradfun.c	/^static const uint16_t __attribute__((aligned(16))) dither[8][8] = {$/;"	v	file:
dither	libavfilter/libmpcodecs/vf_ow.c	/^static const uint8_t  __attribute__((aligned(8))) dither[8][8]={$/;"	v	file:
dither	libavfilter/libmpcodecs/vf_pp7.c	/^static const uint8_t  __attribute__((aligned(8))) dither[8][8]={$/;"	v	file:
dither	libavfilter/libmpcodecs/vf_spp.c	/^static const uint8_t  __attribute__((aligned(8))) dither[8][8]={$/;"	v	file:
dither	libavfilter/libmpcodecs/vf_uspp.c	/^static const uint8_t  __attribute__((aligned(8))) dither[8][8]={$/;"	v	file:
dither16	libswscale/swscale_internal.h	/^    uint16_t dither16[8];$/;"	m	struct:SwsContext
dither32	libswscale/swscale_internal.h	/^    uint32_t dither32[8];$/;"	m	struct:SwsContext
dither_flag	libavcodec/ac3dec.h	/^    int dither_flag[AC3_MAX_CHANNELS];      \/\/\/< dither flags                           (dithflg)$/;"	m	struct:__anon88
dither_flag_syntax	libavcodec/ac3dec.h	/^    int dither_flag_syntax;                 \/\/\/< dither flag syntax enabled             (dithflage)$/;"	m	struct:__anon88
dither_scale	libswscale/swscale.c	/^const uint16_t dither_scale[15][16]={$/;"	v
dither_state	libavcodec/mpegaudiodec.c	/^    int dither_state;$/;"	m	struct:MPADecodeContext	file:
dither_tab	libavcodec/cookdata.h	/^static const float dither_tab[8] = {$/;"	v
div6	libavcodec/h264.c	/^static const uint8_t div6[QP_MAX_NUM+1]={$/;"	v	file:
divide	libavcodec/sonic.c	/^static inline int divide(int a, int b)$/;"	f	file:
divide_quant_dc_chroma	libavcodec/intrax8.h	/^    int divide_quant_dc_chroma;$/;"	m	struct:__anon134
divide_quant_dc_luma	libavcodec/intrax8.h	/^    int divide_quant_dc_luma;$/;"	m	struct:__anon134
division_tab3	libavcodec/mpegaudiodec.c	/^static int16_t division_tab3[1<<6 ];$/;"	v	file:
division_tab5	libavcodec/mpegaudiodec.c	/^static int16_t division_tab5[1<<8 ];$/;"	v	file:
division_tab9	libavcodec/mpegaudiodec.c	/^static int16_t division_tab9[1<<11];$/;"	v	file:
division_tabs	libavcodec/mpegaudiodec.c	/^static int16_t * const division_tabs[4] = {$/;"	v	file:
divx_build	libavcodec/mpegvideo.h	/^    int divx_build;$/;"	m	struct:MpegEncContext
divx_packed	libavcodec/mpegvideo.h	/^    int divx_packed;$/;"	m	struct:MpegEncContext
divx_version	libavcodec/mpegvideo.h	/^    int divx_version;$/;"	m	struct:MpegEncContext
dl	libavcodec/tta.c	/^    int32_t dl[MAX_ORDER];$/;"	m	struct:TTAFilter	file:
dl_handle	libavfilter/vf_frei0r.c	/^    void *dl_handle;            \/* dynamic library handle   *\/$/;"	m	struct:Frei0rContext	file:
dmb_is_raw	libavcodec/vc1.h	/^    int dmb_is_raw;               \/\/\/< direct mb plane is raw$/;"	m	struct:VC1Context
dml	libavcodec/g726.c	/^    int dml;            \/**< long average magnitude of F[i] *\/$/;"	m	struct:G726Context	file:
dmpi	libavfilter/libmpcodecs/vf.h	/^    mp_image_t *dmpi;$/;"	m	struct:vf_instance
dmpi	libavfilter/libmpcodecs/vf_ivtc.c	/^    mp_image_t *dmpi;$/;"	m	struct:vf_priv_s	file:
dmpi	libavfilter/libmpcodecs/vf_tinterlace.c	/^    mp_image_t *dmpi;$/;"	m	struct:vf_priv_s	file:
dms	libavcodec/g726.c	/^    int dms;            \/**< short average magnitude of F[i] *\/$/;"	m	struct:G726Context	file:
dmv	libavcodec/rv34.h	/^    int dmv[4][2];           \/\/\/< differential motion vectors for the current macroblock$/;"	m	struct:RV34DecContext
dnxhd_1235_1238_1241_run_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1235_1238_1241_run_bits[62] = {$/;"	v	file:
dnxhd_1235_1238_1241_run_codes	libavcodec/dnxhddata.c	/^static const uint16_t dnxhd_1235_1238_1241_run_codes[62] = {$/;"	v	file:
dnxhd_1235_1241_ac_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1235_1241_ac_bits[257] = {$/;"	v	file:
dnxhd_1235_1241_ac_codes	libavcodec/dnxhddata.c	/^static const uint16_t dnxhd_1235_1241_ac_codes[257] = {$/;"	v	file:
dnxhd_1235_1241_ac_index_flag	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1235_1241_ac_index_flag[257] = {$/;"	v	file:
dnxhd_1235_1241_ac_level	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1235_1241_ac_level[257] = {$/;"	v	file:
dnxhd_1235_1241_ac_run_flag	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1235_1241_ac_run_flag[257] = {$/;"	v	file:
dnxhd_1235_1241_dc_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1235_1241_dc_bits[14] = {$/;"	v	file:
dnxhd_1235_1241_dc_codes	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1235_1241_dc_codes[14] = {$/;"	v	file:
dnxhd_1235_1241_run	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1235_1241_run[62] = {$/;"	v	file:
dnxhd_1237_ac_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1237_ac_bits[257] = {$/;"	v	file:
dnxhd_1237_ac_codes	libavcodec/dnxhddata.c	/^static const uint16_t dnxhd_1237_ac_codes[257] = {$/;"	v	file:
dnxhd_1237_ac_index_flag	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1237_ac_index_flag[257] = {$/;"	v	file:
dnxhd_1237_ac_level	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1237_ac_level[257] = {$/;"	v	file:
dnxhd_1237_ac_run_flag	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1237_ac_run_flag[257] = {$/;"	v	file:
dnxhd_1237_chroma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1237_chroma_weight[] = {$/;"	v	file:
dnxhd_1237_dc_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1237_dc_bits[12] = {$/;"	v	file:
dnxhd_1237_dc_codes	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1237_dc_codes[12] = {$/;"	v	file:
dnxhd_1237_luma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1237_luma_weight[] = {$/;"	v	file:
dnxhd_1237_run	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1237_run[62] = {$/;"	v	file:
dnxhd_1237_run_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1237_run_bits[62] = {$/;"	v	file:
dnxhd_1237_run_codes	libavcodec/dnxhddata.c	/^static const uint16_t dnxhd_1237_run_codes[62] = {$/;"	v	file:
dnxhd_1238_ac_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1238_ac_bits[257] = {$/;"	v	file:
dnxhd_1238_ac_codes	libavcodec/dnxhddata.c	/^static const uint16_t dnxhd_1238_ac_codes[257] = {$/;"	v	file:
dnxhd_1238_ac_index_flag	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1238_ac_index_flag[257] = {$/;"	v	file:
dnxhd_1238_ac_level	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1238_ac_level[257] = {$/;"	v	file:
dnxhd_1238_ac_run_flag	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1238_ac_run_flag[257] = {$/;"	v	file:
dnxhd_1238_chroma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1238_chroma_weight[] = {$/;"	v	file:
dnxhd_1238_dc_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1238_dc_bits[12] = {$/;"	v	file:
dnxhd_1238_dc_codes	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1238_dc_codes[12] = {$/;"	v	file:
dnxhd_1238_luma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1238_luma_weight[] = {$/;"	v	file:
dnxhd_1238_run	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1238_run[62] = {$/;"	v	file:
dnxhd_1241_chroma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1241_chroma_weight[] = {$/;"	v	file:
dnxhd_1241_luma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1241_luma_weight[] = {$/;"	v	file:
dnxhd_1242_chroma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1242_chroma_weight[] = {$/;"	v	file:
dnxhd_1242_luma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1242_luma_weight[] = {$/;"	v	file:
dnxhd_1243_chroma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1243_chroma_weight[] = {$/;"	v	file:
dnxhd_1243_luma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1243_luma_weight[] = {$/;"	v	file:
dnxhd_1251_ac_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1251_ac_bits[257] = {$/;"	v	file:
dnxhd_1251_ac_codes	libavcodec/dnxhddata.c	/^static const uint16_t dnxhd_1251_ac_codes[257] = {$/;"	v	file:
dnxhd_1251_ac_index_flag	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1251_ac_index_flag[257] = {$/;"	v	file:
dnxhd_1251_ac_level	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1251_ac_level[257] = {$/;"	v	file:
dnxhd_1251_ac_run_flag	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1251_ac_run_flag[257] = {$/;"	v	file:
dnxhd_1251_chroma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1251_chroma_weight[] = {$/;"	v	file:
dnxhd_1251_dc_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1251_dc_bits[12] = {$/;"	v	file:
dnxhd_1251_dc_codes	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1251_dc_codes[12] = {$/;"	v	file:
dnxhd_1251_luma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1251_luma_weight[] = {$/;"	v	file:
dnxhd_1251_run	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1251_run[62] = {$/;"	v	file:
dnxhd_1251_run_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1251_run_bits[62] = {$/;"	v	file:
dnxhd_1251_run_codes	libavcodec/dnxhddata.c	/^static const uint16_t dnxhd_1251_run_codes[62] = {$/;"	v	file:
dnxhd_1252_ac_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1252_ac_bits[257] = {$/;"	v	file:
dnxhd_1252_ac_codes	libavcodec/dnxhddata.c	/^static const uint16_t dnxhd_1252_ac_codes[257] = {$/;"	v	file:
dnxhd_1252_ac_index_flag	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1252_ac_index_flag[257] = {$/;"	v	file:
dnxhd_1252_ac_level	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1252_ac_level[257] = {$/;"	v	file:
dnxhd_1252_ac_run_flag	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1252_ac_run_flag[257] = {$/;"	v	file:
dnxhd_1252_chroma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1252_chroma_weight[] = {$/;"	v	file:
dnxhd_1252_dc_bits	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1252_dc_bits[12] = {$/;"	v	file:
dnxhd_1252_dc_codes	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1252_dc_codes[12] = {$/;"	v	file:
dnxhd_1252_luma_weight	libavcodec/dnxhddata.c	/^static const uint8_t dnxhd_1252_luma_weight[] = {$/;"	v	file:
dnxhd_calc_ac_bits	libavcodec/dnxhdenc.c	/^static av_always_inline int dnxhd_calc_ac_bits(DNXHDEncContext *ctx, DCTELEM *block, int last_index)$/;"	f	file:
dnxhd_calc_bits_thread	libavcodec/dnxhdenc.c	/^static int dnxhd_calc_bits_thread(AVCodecContext *avctx, void *arg, int jobnr, int threadnr)$/;"	f	file:
dnxhd_decode_close	libavcodec/dnxhddec.c	/^static av_cold int dnxhd_decode_close(AVCodecContext *avctx)$/;"	f	file:
dnxhd_decode_dc	libavcodec/dnxhddec.c	/^static int dnxhd_decode_dc(DNXHDContext *ctx)$/;"	f	file:
dnxhd_decode_dct_block	libavcodec/dnxhddec.c	/^static void dnxhd_decode_dct_block(DNXHDContext *ctx, DCTELEM *block, int n, int qscale)$/;"	f	file:
dnxhd_decode_frame	libavcodec/dnxhddec.c	/^static int dnxhd_decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
dnxhd_decode_header	libavcodec/dnxhddec.c	/^static int dnxhd_decode_header(DNXHDContext *ctx, const uint8_t *buf, int buf_size, int first_field)$/;"	f	file:
dnxhd_decode_init	libavcodec/dnxhddec.c	/^static av_cold int dnxhd_decode_init(AVCodecContext *avctx)$/;"	f	file:
dnxhd_decode_macroblock	libavcodec/dnxhddec.c	/^static int dnxhd_decode_macroblock(DNXHDContext *ctx, int x, int y)$/;"	f	file:
dnxhd_decode_macroblocks	libavcodec/dnxhddec.c	/^static int dnxhd_decode_macroblocks(DNXHDContext *ctx, const uint8_t *buf, int buf_size)$/;"	f	file:
dnxhd_encode_block	libavcodec/dnxhdenc.c	/^static av_always_inline void dnxhd_encode_block(DNXHDEncContext *ctx, DCTELEM *block, int last_index, int n)$/;"	f	file:
dnxhd_encode_dc	libavcodec/dnxhdenc.c	/^static av_always_inline void dnxhd_encode_dc(DNXHDEncContext *ctx, int diff)$/;"	f	file:
dnxhd_encode_end	libavcodec/dnxhdenc.c	/^static int dnxhd_encode_end(AVCodecContext *avctx)$/;"	f	file:
dnxhd_encode_fast	libavcodec/dnxhdenc.c	/^static int dnxhd_encode_fast(AVCodecContext *avctx, DNXHDEncContext *ctx)$/;"	f	file:
dnxhd_encode_init	libavcodec/dnxhdenc.c	/^static int dnxhd_encode_init(AVCodecContext *avctx)$/;"	f	file:
dnxhd_encode_picture	libavcodec/dnxhdenc.c	/^static int dnxhd_encode_picture(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data)$/;"	f	file:
dnxhd_encode_rdo	libavcodec/dnxhdenc.c	/^static int dnxhd_encode_rdo(AVCodecContext *avctx, DNXHDEncContext *ctx)$/;"	f	file:
dnxhd_encode_thread	libavcodec/dnxhdenc.c	/^static int dnxhd_encode_thread(AVCodecContext *avctx, void *arg, int jobnr, int threadnr)$/;"	f	file:
dnxhd_find_frame_end	libavcodec/dnxhd_parser.c	/^static int dnxhd_find_frame_end(ParseContext *pc,$/;"	f	file:
dnxhd_find_qscale	libavcodec/dnxhdenc.c	/^static int dnxhd_find_qscale(DNXHDEncContext *ctx)$/;"	f	file:
dnxhd_get_blocks	libavcodec/dnxhdenc.c	/^static av_always_inline void dnxhd_get_blocks(DNXHDEncContext *ctx, int mb_x, int mb_y)$/;"	f	file:
dnxhd_get_pixels_8x4	libavcodec/dnxhdenc.c	/^static av_always_inline void dnxhd_get_pixels_8x4(DCTELEM *restrict block, const uint8_t *pixels, int line_size)$/;"	f	file:
dnxhd_init_qmat	libavcodec/dnxhdenc.c	/^static int dnxhd_init_qmat(DNXHDEncContext *ctx, int lbias, int cbias)$/;"	f	file:
dnxhd_init_rc	libavcodec/dnxhdenc.c	/^static int dnxhd_init_rc(DNXHDEncContext *ctx)$/;"	f	file:
dnxhd_init_vlc	libavcodec/dnxhddec.c	/^static int dnxhd_init_vlc(DNXHDContext *ctx, int cid)$/;"	f	file:
dnxhd_init_vlc	libavcodec/dnxhdenc.c	/^static int dnxhd_init_vlc(DNXHDEncContext *ctx)$/;"	f	file:
dnxhd_load_picture	libavcodec/dnxhdenc.c	/^static void dnxhd_load_picture(DNXHDEncContext *ctx, const AVFrame *frame)$/;"	f	file:
dnxhd_mb_var_thread	libavcodec/dnxhdenc.c	/^static int dnxhd_mb_var_thread(AVCodecContext *avctx, void *arg, int jobnr, int threadnr)$/;"	f	file:
dnxhd_parse	libavcodec/dnxhd_parser.c	/^static int dnxhd_parse(AVCodecParserContext *s,$/;"	f	file:
dnxhd_probe	libavformat/dnxhddec.c	/^static int dnxhd_probe(AVProbeData *p)$/;"	f	file:
dnxhd_setup_threads_slices	libavcodec/dnxhdenc.c	/^static void dnxhd_setup_threads_slices(DNXHDEncContext *ctx)$/;"	f	file:
dnxhd_ssd_block	libavcodec/dnxhdenc.c	/^static av_always_inline int dnxhd_ssd_block(DCTELEM *qblock, DCTELEM *block)$/;"	f	file:
dnxhd_switch_matrix	libavcodec/dnxhdenc.c	/^static av_always_inline int dnxhd_switch_matrix(DNXHDEncContext *ctx, int i)$/;"	f	file:
dnxhd_unquantize_c	libavcodec/dnxhdenc.c	/^static av_always_inline void dnxhd_unquantize_c(DNXHDEncContext *ctx, DCTELEM *block, int n, int qscale, int last_index)$/;"	f	file:
dnxhd_write_header	libavcodec/dnxhdenc.c	/^static int dnxhd_write_header(AVCodecContext *avctx, uint8_t *buf)$/;"	f	file:
doHorizDefFilter_C	libpostproc/postprocess.c	/^static inline void doHorizDefFilter_C(uint8_t dst[], int stride, PPContext *c)$/;"	f	file:
doHorizDefFilter_altivec	libpostproc/postprocess_altivec_template.c	829;"	d	file:
doHorizLowPass_C	libpostproc/postprocess.c	/^static inline void doHorizLowPass_C(uint8_t dst[], int stride, PPContext *c)$/;"	f	file:
doHorizLowPass_altivec	libpostproc/postprocess_altivec_template.c	828;"	d	file:
doTest	libswscale/swscale-test.c	/^static int doTest(uint8_t *ref[4], int refStride[4], int w, int h,$/;"	f	file:
doVertDefFilter	libpostproc/postprocess_template.c	/^static inline void RENAME(doVertDefFilter)(uint8_t src[], int stride, PPContext *c)$/;"	f	file:
doVertDefFilter_altivec	libpostproc/postprocess_altivec_template.c	/^static inline void doVertDefFilter_altivec(uint8_t src[], int stride, PPContext *c) {$/;"	f	file:
doVertLowPass	libpostproc/postprocess_template.c	/^static inline void RENAME(doVertLowPass)(uint8_t *src, int stride, PPContext *c)$/;"	f	file:
doVertLowPass_altivec	libpostproc/postprocess_altivec_template.c	/^static inline void doVertLowPass_altivec(uint8_t *src, int stride, PPContext *c) {$/;"	f	file:
do_a_deblock	libpostproc/postprocess_template.c	/^static av_always_inline void RENAME(do_a_deblock)(uint8_t *src, int step, int stride, PPContext *c){$/;"	f	file:
do_a_deblock_C	libpostproc/postprocess.c	/^static av_always_inline void do_a_deblock_C(uint8_t *src, int step, int stride, PPContext *c){$/;"	f	file:
do_a_deblock_altivec	libpostproc/postprocess_altivec_template.c	830;"	d	file:
do_adaptive_prediction	libavcodec/g722.c	/^static void do_adaptive_prediction(struct G722Band *band, const int cur_diff)$/;"	f	file:
do_apf	libavcodec/wmavoice.c	/^    int do_apf;                   \/\/\/< whether to apply the averaged$/;"	m	struct:__anon157	file:
do_apply_filter	libavcodec/apedec.c	/^static void do_apply_filter(APEContext * ctx, int version, APEFilter *f, int32_t *data, int count, int order, int fracbits)$/;"	f	file:
do_audio_decoding	tests/regression-funcs.sh	/^do_audio_decoding()$/;"	f
do_audio_enc_dec	tests/codec-regression.sh	/^do_audio_enc_dec() {$/;"	f
do_audio_encoding	tests/regression-funcs.sh	/^do_audio_encoding()$/;"	f
do_audio_only	tests/lavf-regression.sh	/^do_audio_only()$/;"	f
do_audio_out	ffmpeg.c	/^static void do_audio_out(AVFormatContext *s,$/;"	f	file:
do_audio_out	ffmpeg/ffmpeg.c	/^static void do_audio_out(AVFormatContext *s,$/;"	f	file:
do_benchmark	ffmpeg.c	/^static int do_benchmark = 0;$/;"	v	file:
do_benchmark	ffmpeg/ffmpeg.c	/^static int do_benchmark = 0;$/;"	v	file:
do_deinterlace	ffmpeg.c	/^static int do_deinterlace = 0;$/;"	v	file:
do_deinterlace	ffmpeg/ffmpeg.c	/^static int do_deinterlace = 0;$/;"	v	file:
do_deinterlace	libavfilter/libmpcodecs/vf_kerndeint.c	/^    int    do_deinterlace;$/;"	m	struct:vf_priv_s	file:
do_enable_deep	configure	/^do_enable_deep(){$/;"	f
do_exit	ffplay.c	/^static void do_exit(void)$/;"	f	file:
do_ffmpeg	tests/regression-funcs.sh	/^do_ffmpeg()$/;"	f
do_ffmpeg_crc	tests/regression-funcs.sh	/^do_ffmpeg_crc()$/;"	f
do_ffmpeg_nomd5	tests/regression-funcs.sh	/^do_ffmpeg_nomd5()$/;"	f
do_hex_dump	ffmpeg.c	/^static int do_hex_dump = 0;$/;"	v	file:
do_hex_dump	ffmpeg/ffmpeg.c	/^static int do_hex_dump = 0;$/;"	v	file:
do_hybrid_window	libavcodec/ra288.c	/^static void do_hybrid_window(int order, int n, int non_rec, float *out,$/;"	f	file:
do_image_formats	tests/lavf-regression.sh	/^do_image_formats()$/;"	f
do_imdct	libavcodec/ac3dec.c	/^static inline void do_imdct(AC3DecodeContext *s, int channels)$/;"	f	file:
do_init_filter	libavcodec/apedec.c	/^static void do_init_filter(APEFilter *f, int16_t * buf, int order)$/;"	f	file:
do_lavf	tests/lavf-regression.sh	/^do_lavf()$/;"	f
do_lavfi	tests/lavfi-regression.sh	/^do_lavfi() {$/;"	f
do_lavfi_pixfmts	tests/lavfi-regression.sh	/^do_lavfi_pixfmts(){$/;"	f
do_md5sum	tests/md5.sh	/^    do_md5sum() { \/sbin\/md5 -r $1 | sed 's# \\**\\.\/# *.\/#'; }$/;"	f
do_md5sum	tests/md5.sh	/^    do_md5sum() { echo No md5sum program found; }$/;"	f
do_md5sum	tests/md5.sh	/^    do_md5sum() { md5 $1 | sed 's#MD5 (\\(.*\\)) = \\(.*\\)#\\2 *\\1#'; }$/;"	f
do_md5sum	tests/md5.sh	/^    do_md5sum() { md5sum -b $1; }$/;"	f
do_md5sum	tests/md5.sh	/^    do_md5sum() { openssl md5 $1 | sed 's\/MD5(\\(.*\\))= \\(.*\\)\/\\2 *\\1\/'; }$/;"	f
do_output_subblock	libavcodec/ra144dec.c	/^static void do_output_subblock(RA144Context *ractx, const uint16_t  *lpc_coefs,$/;"	f	file:
do_padding	libavcodec/mpegaudioenc.c	/^    int frame_frac, frame_frac_incr, do_padding;$/;"	m	struct:MpegAudioContext	file:
do_pass	ffmpeg.c	/^static int do_pass = 0;$/;"	v	file:
do_pass	ffmpeg/ffmpeg.c	/^static int do_pass = 0;$/;"	v	file:
do_pitchfilter	libavcodec/qcelpdec.c	/^static const float *do_pitchfilter(float memory[303], const float v_in[160],$/;"	f	file:
do_pkt_dump	ffmpeg.c	/^static int do_pkt_dump = 0;$/;"	v	file:
do_pkt_dump	ffmpeg/ffmpeg.c	/^static int do_pkt_dump = 0;$/;"	v	file:
do_plane	libavfilter/libmpcodecs/vf_phase.c	/^static void do_plane(unsigned char *to, unsigned char *from,$/;"	f	file:
do_psnr	ffmpeg.c	/^static int do_psnr = 0;$/;"	v	file:
do_psnr	ffmpeg/ffmpeg.c	/^static int do_psnr = 0;$/;"	v	file:
do_put_image	libavfilter/libmpcodecs/vf_detc.c	/^static int do_put_image(struct vf_instance *vf, mp_image_t *dmpi)$/;"	f	file:
do_put_image	libavfilter/libmpcodecs/vf_ivtc.c	/^static int do_put_image(struct vf_instance *vf, mp_image_t *dmpi)$/;"	f	file:
do_rematrixing	libavcodec/ac3dec.c	/^static void do_rematrixing(AC3DecodeContext *s)$/;"	f	file:
do_shiftings	libavcodec/elbg.c	/^static void do_shiftings(elbg_data *elbg)$/;"	f	file:
do_show_format	ffprobe.c	/^static int do_show_format  = 0;$/;"	v	file:
do_show_packets	ffprobe.c	/^static int do_show_packets = 0;$/;"	v	file:
do_show_streams	ffprobe.c	/^static int do_show_streams = 0;$/;"	v	file:
do_sql	tests/fate-update.sh	/^do_sql(){$/;"	f
do_streamed_images	tests/lavf-regression.sh	/^do_streamed_images()$/;"	f
do_subtitle_out	ffmpeg.c	/^static void do_subtitle_out(AVFormatContext *s,$/;"	f	file:
do_subtitle_out	ffmpeg/ffmpeg.c	/^static void do_subtitle_out(AVFormatContext *s,$/;"	f	file:
do_synth_filter	libavcodec/qdm2.c	/^    int do_synth_filter;    \/\/\/< used to perform or skip synthesis filter$/;"	m	struct:__anon200	file:
do_tiny_psnr	tests/fate-run.sh	/^do_tiny_psnr(){$/;"	f
do_video_decoding	tests/regression-funcs.sh	/^do_video_decoding()$/;"	f
do_video_encoding	tests/regression-funcs.sh	/^do_video_encoding()$/;"	f
do_video_filter	tests/lavfi-regression.sh	/^do_video_filter() {$/;"	f
do_video_out	ffmpeg.c	/^static void do_video_out(AVFormatContext *s,$/;"	f	file:
do_video_out	ffmpeg/ffmpeg.c	/^static void do_video_out(AVFormatContext *s,$/;"	f	file:
do_video_stats	ffmpeg.c	/^static void do_video_stats(AVFormatContext *os, AVOutputStream *ost,$/;"	f	file:
do_video_stats	ffmpeg/ffmpeg.c	/^static void do_video_stats(AVFormatContext *os, AVOutputStream *ost,$/;"	f	file:
doctype	libavformat/matroskadec.c	/^    char    *doctype;$/;"	m	struct:__anon354	file:
doctype_version	libavformat/matroskadec.c	/^    uint64_t doctype_version;$/;"	m	struct:__anon354	file:
does_clip	libavfilter/vf_pad.c	/^static int does_clip(PadContext *pad, AVFilterBufferRef *outpicref, int plane, int hsub, int vsub, int x, int y)$/;"	f	file:
dolby_headphone_mode	libavcodec/ac3.h	/^    int dolby_headphone_mode;$/;"	m	struct:AC3EncOptions
dolby_surround_ex_mode	libavcodec/ac3.h	/^    int dolby_surround_ex_mode;$/;"	m	struct:AC3EncOptions
dolby_surround_mode	libavcodec/ac3.h	/^    int dolby_surround_mode;$/;"	m	struct:AC3EncOptions
done	libavcodec/pthread.c	/^    int done;$/;"	m	struct:ThreadContext	file:
done	libavdevice/dv1394.c	/^    int done;   \/* Number of completed frames *\/$/;"	m	struct:dv1394_data	file:
done	libavformat/matroskadec.c	/^    int done;$/;"	m	struct:__anon371	file:
done_sem	libavcodec/w32thread.c	/^    HANDLE done_sem;$/;"	m	struct:ThreadContext	file:
downgrade_exponents	libavcodec/ac3enc.c	/^static int downgrade_exponents(AC3EncodeContext *s)$/;"	f	file:
downmix	libavcodec/dca.c	/^    int downmix;                \/\/\/< embedded downmix enabled$/;"	m	struct:__anon93	file:
downmix_coef	libavcodec/dca.c	/^    int downmix_coef[DCA_PRIM_CHANNELS_MAX][2];                  \/\/\/< stereo downmix coefficients$/;"	m	struct:__anon93	file:
downmix_coeffs	libavcodec/ac3dec.h	/^    float downmix_coeffs[AC3_MAX_CHANNELS][2];  \/\/\/< stereo downmix coefficients$/;"	m	struct:__anon88
downmixed	libavcodec/ac3dec.h	/^    int downmixed;                              \/\/\/< indicates if coeffs are currently downmixed$/;"	m	struct:__anon88
downsampling	libavcodec/sonic.c	/^    int num_taps, downsampling;$/;"	m	struct:SonicContext	file:
dpb_add	libavcodec/vaapi_h264.c	/^static int dpb_add(DPB *dpb, Picture *pic)$/;"	f	file:
dpb_output_delay_length	libavcodec/h264.h	/^    int dpb_output_delay_length;       \/\/\/< dpb_output_delay_length_minus1 + 1$/;"	m	struct:SPS
dpcm_decode_frame	libavcodec/dpcm.c	/^static int dpcm_decode_frame(AVCodecContext *avctx,$/;"	f	file:
dpcm_decode_init	libavcodec/dpcm.c	/^static av_cold int dpcm_decode_init(AVCodecContext *avctx)$/;"	f	file:
dpcm_predict	libavcodec/roqaudioenc.c	/^static unsigned char dpcm_predict(short *previous, short current)$/;"	f	file:
dprint_compression_options	libavcodec/flacenc.c	/^static av_cold void dprint_compression_options(FlacEncodeContext *s)$/;"	f	file:
dprint_options	libavcodec/ac3enc.c	/^static void dprint_options(AVCodecContext *avctx)$/;"	f	file:
dprint_specific_config	libavcodec/alsdec.c	/^static av_cold void dprint_specific_config(ALSDecContext *ctx)$/;"	f	file:
dpy	libavdevice/x11grab.c	/^    Display *dpy;            \/**< X11 display from which x11grab grabs frames *\/$/;"	m	struct:x11_grab	file:
dq	libavcodec/g726.c	/^    Float11 dq[6];      \/**< prev. difference *\/$/;"	m	struct:G726Context	file:
dqbilevel	libavcodec/vc1.h	/^    uint8_t dqbilevel;$/;"	m	struct:VC1Context
dqprofile	libavcodec/vc1.h	/^    uint8_t dqprofile;$/;"	m	struct:VC1Context
dqsbedge	libavcodec/vc1.h	/^    uint8_t dqsbedge;$/;"	m	struct:VC1Context
dquant	libavcodec/intrax8.h	/^    int dquant;$/;"	m	struct:__anon134
dquant	libavcodec/mpegvideo.h	/^    int dquant;                 \/\/\/< qscale difference to prev qscale$/;"	m	struct:MpegEncContext
dquant	libavcodec/vc1.h	/^    int dquant;           \/\/\/< How qscale varies with MBs, 2bits (not in Simple)$/;"	m	struct:VC1Context
dquant_code	libavcodec/ituh263enc.c	/^static const int dquant_code[5]= {1,0,9,2,3};$/;"	v	file:
dquant_code	libavcodec/mpeg4videoenc.c	/^static const int dquant_code[5]= {1,0,9,2,3};$/;"	v	file:
dquantfrm	libavcodec/vc1.h	/^    uint8_t dquantfrm;$/;"	m	struct:VC1Context
drawBasis	libavfilter/libmpcodecs/vf_test.c	/^static void drawBasis(uint8_t *dst, int stride, int amp, int freq, int dc)$/;"	f	file:
drawCbp	libavfilter/libmpcodecs/vf_test.c	/^static void drawCbp(uint8_t *dst[3], int stride[3], int cbp, int amp, int dc)$/;"	f	file:
drawDc	libavfilter/libmpcodecs/vf_test.c	/^static void drawDc(uint8_t *dst, int stride, int color, int w, int h)$/;"	f	file:
draw_arrow	libavcodec/mpegvideo.c	/^static void draw_arrow(uint8_t *buf, int sx, int sy, int ex, int ey, int w, int h, int stride, int color){$/;"	f	file:
draw_box	libavfilter/vf_drawtext.c	/^    short int draw_box;             \/\/\/< draw box around text - true or false$/;"	m	struct:__anon24	file:
draw_char	libavcodec/ansi.c	/^static void draw_char(AVCodecContext *avctx, int c)$/;"	f	file:
draw_edges	libavcodec/dsputil.h	/^    void (*draw_edges)(uint8_t *buf, int wrap, int width, int height, int w, int h, int sides);$/;"	m	struct:DSPContext
draw_edges	libavcodec/dsputil_template.c	/^static void FUNCC(draw_edges)(uint8_t *p_buf, int p_wrap, int width, int height, int w, int h, int sides)$/;"	f	file:
draw_edges_mmx	libavcodec/x86/dsputil_mmx.c	/^static void draw_edges_mmx(uint8_t *buf, int wrap, int width, int height, int w, int h, int sides)$/;"	f	file:
draw_frame	libavfilter/libmpcodecs/libvo/video_out.h	/^    int (*draw_frame)(uint8_t *src[]);$/;"	m	struct:vo_functions_s
draw_glyph_rgb	libavfilter/vf_drawtext.c	/^static inline int draw_glyph_rgb(AVFilterBufferRef *picref, FT_Bitmap *bitmap,$/;"	f	file:
draw_glyph_yuv	libavfilter/vf_drawtext.c	/^static inline int draw_glyph_yuv(AVFilterBufferRef *picref, FT_Bitmap *bitmap, unsigned int x,$/;"	f	file:
draw_glyphs	libavfilter/vf_drawtext.c	/^static int draw_glyphs(DrawTextContext *dtext, AVFilterBufferRef *picref,$/;"	f	file:
draw_horiz_band	libavcodec/avcodec.h	/^    void (*draw_horiz_band)(struct AVCodecContext *s,$/;"	m	struct:AVCodecContext
draw_line	libavcodec/mpegvideo.c	/^static void draw_line(uint8_t *buf, int sx, int sy, int ex, int ey, int w, int h, int stride, int color){$/;"	f	file:
draw_n_color	libavcodec/c93.c	/^static inline void draw_n_color(uint8_t *out, int stride, int width,$/;"	f	file:
draw_osd	libavfilter/libmpcodecs/libvo/video_out.h	/^    void (*draw_osd)(void);$/;"	m	struct:vo_functions_s
draw_send_bar_slice	libavfilter/vf_pad.c	/^static void draw_send_bar_slice(AVFilterLink *link, int y, int h, int slice_dir, int before_slice)$/;"	f	file:
draw_slice	libavcodec/huffyuv.c	/^static void draw_slice(HYuvContext *s, int y){$/;"	f	file:
draw_slice	libavfilter/avfilter.h	/^    void (*draw_slice)(AVFilterLink *link, int y, int height, int slice_dir);$/;"	m	struct:AVFilterPad
draw_slice	libavfilter/libmpcodecs/libvo/video_out.h	/^    int (*draw_slice)(uint8_t *src[], int stride[], int w,int h, int x,int y);$/;"	m	struct:vo_functions_s
draw_slice	libavfilter/libmpcodecs/vf.h	/^    void (*draw_slice)(struct vf_instance *vf,$/;"	m	struct:vf_instance
draw_slice	libavfilter/libmpcodecs/vf_screenshot.c	/^static void draw_slice(struct vf_instance *vf, unsigned char** src,$/;"	f	file:
draw_slice	libavfilter/vf_blackframe.c	/^static void draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_crop.c	/^static void draw_slice(AVFilterLink *link, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_drawbox.c	/^static void draw_slice(AVFilterLink *inlink, int y0, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_fade.c	/^static void draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_fieldorder.c	/^static void draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_fifo.c	/^static void draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir) { }$/;"	f	file:
draw_slice	libavfilter/vf_hflip.c	/^static void draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_lut.c	/^static void draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_overlay.c	/^static void draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_pad.c	/^static void draw_slice(AVFilterLink *link, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_pixdesctest.c	/^static void draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_scale.c	/^static void draw_slice(AVFilterLink *link, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_select.c	/^static void draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_slicify.c	/^static void draw_slice(AVFilterLink *link, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_split.c	/^static void draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_unsharp.c	/^static void draw_slice(AVFilterLink *link, int y, int h, int slice_dir)$/;"	f	file:
draw_slice	libavfilter/vf_vflip.c	/^static void draw_slice(AVFilterLink *link, int y, int h, int slice_dir)$/;"	f	file:
draw_text	libavfilter/vf_drawtext.c	/^static int draw_text(AVFilterContext *ctx, AVFilterBufferRef *picref,$/;"	f	file:
drawbox	libavfilter/vf_drawtext.c	/^static inline void drawbox(AVFilterBufferRef *picref, unsigned int x, unsigned int y,$/;"	f	file:
drawtext_class	libavfilter/vf_drawtext.c	/^static const AVClass drawtext_class = {$/;"	v	file:
drawtext_get_name	libavfilter/vf_drawtext.c	/^static const char *drawtext_get_name(void *ctx)$/;"	f	file:
drawtext_options	libavfilter/vf_drawtext.c	/^static const AVOption drawtext_options[]= {$/;"	v	file:
drc_gain	libavcodec/wmaprodec.c	/^    uint8_t          drc_gain;                      \/\/\/< gain for the DRC tool$/;"	m	struct:WMAProDecodeCtx	file:
drc_scale	libavcodec/avcodec.h	/^    float drc_scale;$/;"	m	struct:AVCodecContext
dref_id	libavformat/isom.h	/^    int dref_id;$/;"	m	struct:MOVStreamContext
drefs	libavformat/isom.h	/^    MOVDref *drefs;$/;"	m	struct:MOVStreamContext
drefs_count	libavformat/isom.h	/^    unsigned drefs_count;$/;"	m	struct:MOVStreamContext
drift	libavcodec/ffv1.c	/^    int16_t drift;$/;"	m	struct:VlcState	file:
drop	libavfilter/libmpcodecs/vf_detc.c	/^        int drop, lastdrop;$/;"	m	struct:vf_priv_s	file:
drop	libavfilter/libmpcodecs/vf_ivtc.c	/^    int drop, lastdrop, dropnext;$/;"	m	struct:vf_priv_s	file:
dropable	libavcodec/mpegvideo.h	/^    int dropable;$/;"	m	struct:MpegEncContext
dropnext	libavfilter/libmpcodecs/vf_ivtc.c	/^    int drop, lastdrop, dropnext;$/;"	m	struct:vf_priv_s	file:
dropped_frames	libavdevice/dv1394.h	/^        unsigned int dropped_frames;$/;"	m	struct:dv1394_status
dry_run_qscale	libavcodec/ratecontrol.h	/^    float dry_run_qscale;         \/\/\/< for xvid rc$/;"	m	struct:RateControlContext
ds_chunk_size	libavformat/asf.h	/^    int ds_chunk_size;$/;"	m	struct:__anon399
ds_packet_size	libavformat/asf.h	/^    int ds_packet_size;$/;"	m	struct:__anon399
ds_span	libavformat/asf.h	/^    int ds_span;                \/* descrambling  *\/$/;"	m	struct:__anon399
dscf_vlc	libavcodec/mpc7.c	/^static VLC scfi_vlc, dscf_vlc, hdr_vlc, quant_vlc[MPC7_QUANT_VLC_TABLES][2];$/;"	v	file:
dscf_vlc	libavcodec/mpc8.c	/^static VLC band_vlc, scfi_vlc[2], dscf_vlc[2], res_vlc[2];$/;"	v	file:
dsf	libavcodec/dvdata.h	/^    int              dsf;                   \/* value of the dsf in the DV header *\/$/;"	m	struct:DVprofile
dshowDeviceType	libavdevice/dshow.h	/^enum dshowDeviceType {$/;"	g
dshow_add_device	libavdevice/dshow.c	/^dshow_add_device(AVFormatContext *avctx, AVFormatParameters *ap,$/;"	f	file:
dshow_block_align	libavformat/avidec.c	/^    int dshow_block_align;            \/\/\/< block align variable used to emulate bugs in the MS dshow demuxer$/;"	m	struct:AVIStream	file:
dshow_codecid	libavdevice/dshow.c	/^static enum CodecID dshow_codecid(DWORD biCompression)$/;"	f	file:
dshow_context_to_name	libavdevice/dshow_common.c	/^static const char *dshow_context_to_name(void *ptr)$/;"	f	file:
dshow_ctx	libavdevice/dshow.c	/^struct dshow_ctx {$/;"	s	file:
dshow_open_device	libavdevice/dshow.c	/^dshow_open_device(AVFormatContext *avctx, ICreateDevEnum *devenum,$/;"	f	file:
dshow_pixfmt	libavdevice/dshow.c	/^static enum PixelFormat dshow_pixfmt(DWORD biCompression, WORD biBitCount)$/;"	f	file:
dshow_read_close	libavdevice/dshow.c	/^dshow_read_close(AVFormatContext *s)$/;"	f	file:
dshow_read_header	libavdevice/dshow.c	/^static int dshow_read_header(AVFormatContext *avctx, AVFormatParameters *ap)$/;"	f	file:
dshow_read_packet	libavdevice/dshow.c	/^static int dshow_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
dshowdebug	libavdevice/dshow.h	37;"	d
dshowdebug	libavdevice/dshow.h	39;"	d
dsize	libavcodec/dxa.c	/^    int dsize;$/;"	m	struct:DxaDecContext	file:
dsp	libavcodec/4xm.c	/^    DSPContext dsp;$/;"	m	struct:FourXContext	file:
dsp	libavcodec/aac.h	/^    DSPContext dsp;$/;"	m	struct:__anon246
dsp	libavcodec/aacenc.h	/^    DSPContext  dsp;$/;"	m	struct:AACEncContext
dsp	libavcodec/ac3dec.h	/^    DSPContext dsp;                         \/\/\/< for optimization$/;"	m	struct:__anon88
dsp	libavcodec/ac3enc.h	/^    DSPContext dsp;$/;"	m	struct:AC3EncodeContext
dsp	libavcodec/alsdec.c	/^    DSPContext dsp;$/;"	m	struct:__anon152	file:
dsp	libavcodec/apedec.c	/^    DSPContext dsp;$/;"	m	struct:APEContext	file:
dsp	libavcodec/asv1.c	/^    DSPContext dsp;$/;"	m	struct:ASV1Context	file:
dsp	libavcodec/atrac1.c	/^    DSPContext          dsp;$/;"	m	struct:__anon120	file:
dsp	libavcodec/atrac3.c	/^static DSPContext       dsp;$/;"	v	file:
dsp	libavcodec/bink.c	/^    DSPContext     dsp;$/;"	m	struct:BinkContext	file:
dsp	libavcodec/binkaudio.c	/^    DSPContext dsp;$/;"	m	struct:__anon136	file:
dsp	libavcodec/dca.c	/^    DSPContext dsp;$/;"	m	struct:__anon93	file:
dsp	libavcodec/dnxhddec.c	/^    DSPContext dsp;$/;"	m	struct:__anon154	file:
dsp	libavcodec/eatgq.c	/^    DSPContext dsp;$/;"	m	struct:TgqContext	file:
dsp	libavcodec/ffv1.c	/^    DSPContext dsp;$/;"	m	struct:FFV1Context	file:
dsp	libavcodec/fraps.c	/^    DSPContext dsp;$/;"	m	struct:FrapsContext	file:
dsp	libavcodec/huffyuv.c	/^    DSPContext dsp;$/;"	m	struct:HYuvContext	file:
dsp	libavcodec/imc.c	/^    DSPContext dsp;$/;"	m	struct:__anon90	file:
dsp	libavcodec/interplayvideo.c	/^    DSPContext dsp;$/;"	m	struct:IpvideoContext	file:
dsp	libavcodec/jvdec.c	/^    DSPContext dsp;$/;"	m	struct:JvContext	file:
dsp	libavcodec/lagarith.c	/^    DSPContext dsp;$/;"	m	struct:LagarithContext	file:
dsp	libavcodec/mdec.c	/^    DSPContext dsp;$/;"	m	struct:MDECContext	file:
dsp	libavcodec/mimic.c	/^    DSPContext      dsp;$/;"	m	struct:__anon282	file:
dsp	libavcodec/mjpegdec.h	/^    DSPContext dsp;$/;"	m	struct:MJpegDecodeContext
dsp	libavcodec/mlpdec.c	/^    DSPContext  dsp;$/;"	m	struct:MLPDecodeContext	file:
dsp	libavcodec/motionpixels.c	/^    DSPContext dsp;$/;"	m	struct:MotionPixelsContext	file:
dsp	libavcodec/mpc.h	/^    DSPContext dsp;$/;"	m	struct:__anon179
dsp	libavcodec/mpegvideo.h	/^    DSPContext dsp;             \/\/\/< pointers for accelerated dsp functions$/;"	m	struct:MpegEncContext
dsp	libavcodec/nellymoserdec.c	/^    DSPContext      dsp;$/;"	m	struct:NellyMoserDecodeContext	file:
dsp	libavcodec/nellymoserenc.c	/^    DSPContext      dsp;$/;"	m	struct:NellyMoserEncodeContext	file:
dsp	libavcodec/nuv.c	/^    DSPContext dsp;$/;"	m	struct:__anon100	file:
dsp	libavcodec/pngenc.c	/^    DSPContext dsp;$/;"	m	struct:PNGEncContext	file:
dsp	libavcodec/roqvideo.h	/^    DSPContext dsp;$/;"	m	struct:RoqContext
dsp	libavcodec/rtjpeg.h	/^    DSPContext *dsp;$/;"	m	struct:__anon172
dsp	libavcodec/snow.c	/^    DSPContext dsp;$/;"	m	struct:SnowContext	file:
dsp	libavcodec/svq1enc.c	/^    DSPContext dsp;$/;"	m	struct:SVQ1Context	file:
dsp	libavcodec/truemotion2.c	/^    DSPContext dsp;$/;"	m	struct:TM2Context	file:
dsp	libavcodec/twinvq.c	/^    DSPContext      dsp;$/;"	m	struct:TwinContext	file:
dsp	libavcodec/vorbisdec.c	/^    DSPContext dsp;$/;"	m	struct:vorbis_context_s	file:
dsp	libavcodec/vp3.c	/^    DSPContext dsp;$/;"	m	struct:Vp3DecodeContext	file:
dsp	libavcodec/vp56.h	/^    DSPContext dsp;$/;"	m	struct:vp56_context
dsp	libavcodec/vp8.h	/^    DSPContext dsp;$/;"	m	struct:__anon182
dsp	libavcodec/wma.h	/^    DSPContext dsp;$/;"	m	struct:WMACodecContext
dsp	libavcodec/wmaprodec.c	/^    DSPContext       dsp;                           \/\/\/< accelerated DSP functions$/;"	m	struct:WMAProDecodeCtx	file:
dsp	libavfilter/libmpcodecs/vf_spp.c	/^        DSPContext dsp;$/;"	m	struct:vf_priv_s	file:
dsp_mask	libavcodec/avcodec.h	/^    unsigned dsp_mask;$/;"	m	struct:AVCodecContext
dsp_x8_put_solidcolor	libavcodec/intrax8.c	/^static void dsp_x8_put_solidcolor(uint8_t const pix, uint8_t * dst, int const linesize){$/;"	f	file:
dspfunc	libavcodec/cavsdsp.c	520;"	d	file:
dspfunc	libavcodec/dsputil.c	2978;"	d	file:
dspfunc	libavcodec/dsputil.c	3008;"	d	file:
dspfunc	libavcodec/ppc/h264_altivec.c	977;"	d	file:
dspfunc	libavcodec/ppc/h264_altivec.c	997;"	d	file:
dspfunc	libavcodec/sh4/dsputil_align.c	378;"	d	file:
dspfunc	libavcodec/sh4/dsputil_align.c	417;"	d	file:
dspfunc	libavcodec/x86/cavsdsp_mmx.c	443;"	d	file:
dspfunc	libavcodec/x86/cavsdsp_mmx.c	454;"	d	file:
dspfunc	libavcodec/x86/cavsdsp_mmx.c	459;"	d	file:
dspfunc	libavcodec/x86/cavsdsp_mmx.c	470;"	d	file:
dspfunc1	libavcodec/dsputil.c	3134;"	d	file:
dspfunc2	libavcodec/dsputil.c	3140;"	d	file:
dsputil_h264_init_ppc	libavcodec/ppc/h264_altivec.c	/^void dsputil_h264_init_ppc(DSPContext* c, AVCodecContext *avctx) {$/;"	f
dsputil_init	libavcodec/dsputil.c	/^av_cold void dsputil_init(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_align	libavcodec/sh4/dsputil_align.c	/^void dsputil_init_align(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_alpha	libavcodec/alpha/dsputil_alpha.c	/^void dsputil_init_alpha(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_altivec	libavcodec/ppc/dsputil_altivec.c	/^void dsputil_init_altivec(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_arm	libavcodec/arm/dsputil_init_arm.c	/^void dsputil_init_arm(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_bfin	libavcodec/bfin/dsputil_bfin.c	/^void dsputil_init_bfin( DSPContext* c, AVCodecContext *avctx )$/;"	f
dsputil_init_mlib	libavcodec/mlib/dsputil_mlib.c	/^void dsputil_init_mlib(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_mmi	libavcodec/ps2/dsputil_mmi.c	/^void dsputil_init_mmi(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_mmx	libavcodec/x86/dsputil_mmx.c	/^void dsputil_init_mmx(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_ppc	libavcodec/ppc/dsputil_ppc.c	/^void dsputil_init_ppc(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_sh4	libavcodec/sh4/dsputil_sh4.c	/^void dsputil_init_sh4(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_init_vis	libavcodec/sparc/dsputil_vis.c	/^void dsputil_init_vis(DSPContext* c, AVCodecContext *avctx)$/;"	f
dsputil_static_init	libavcodec/dsputil.c	/^av_cold void dsputil_static_init(void)$/;"	f
dsputilenc_init_mmx	libavcodec/x86/dsputilenc_mmx.c	/^void dsputilenc_init_mmx(DSPContext* c, AVCodecContext *avctx)$/;"	f
dst	libavcodec/bfi.c	/^    uint8_t *dst;$/;"	m	struct:BFIContext	file:
dst	libavcodec/wmavoice.c	/^    DCTContext dct, dst;          \/\/\/< contexts for phase shift (in Hilbert$/;"	m	struct:__anon157	file:
dst	libavfilter/avfilter.h	/^    AVFilterContext *dst;       \/\/\/< dest filter$/;"	m	struct:AVFilterLink
dstByte	libswscale/colorspace-test.c	32;"	d	file:
dstColorspaceTable	libswscale/swscale_internal.h	/^    int dstColorspaceTable[4];$/;"	m	struct:SwsContext
dstFormat	libswscale/swscale_internal.h	/^    enum PixelFormat dstFormat;   \/\/\/< Destination pixel format.$/;"	m	struct:SwsContext	typeref:enum:SwsContext::PixelFormat
dstFormatBpp	libswscale/swscale_internal.h	/^    int dstFormatBpp;             \/\/\/< Number of bits per pixel of the destination pixel format.$/;"	m	struct:SwsContext
dstH	libswscale/swscale_internal.h	/^    int dstH;                     \/\/\/< Height of destination luma\/alpha planes.$/;"	m	struct:SwsContext
dstRange	libswscale/swscale_internal.h	/^    int dstRange;                 \/\/\/< 0 = MPG YUV range, 1 = JPG YUV range (destination image).$/;"	m	struct:SwsContext
dstW	libswscale/swscale_internal.h	/^    int dstW;                     \/\/\/< Width  of destination luma\/alpha planes.$/;"	m	struct:SwsContext
dstY	libswscale/swscale_internal.h	/^    int dstY;                     \/\/\/< Last destination vertical line output from last slice.$/;"	m	struct:SwsContext
dst_addr	libavformat/sdp.c	/^    const char *dst_addr; \/**< destination IP address (can be multicast) *\/$/;"	m	struct:sdp_session_level	file:
dst_buf	libavcodec/indeo5.c	/^    int             dst_buf;         \/\/\/< buffer index for the currently decoded frame$/;"	m	struct:__anon203	file:
dst_incr	libavcodec/resample2.c	/^    int dst_incr;$/;"	m	struct:AVResampleContext	file:
dst_tff	libavfilter/vf_fieldorder.c	/^    unsigned int dst_tff;      \/\/\/< output bff\/tff$/;"	m	struct:__anon53	file:
dst_type	libavformat/sdp.c	/^    const char *dst_type; \/**< destination IP address type *\/$/;"	m	struct:sdp_session_level	file:
dstbuf	libavcodec/yop.c	/^    uint8_t *dstbuf;$/;"	m	struct:YopDecContext	file:
dstpad	libavfilter/avfilter.h	/^    AVFilterPad *dstpad;        \/\/\/< input pad on the dest filter$/;"	m	struct:AVFilterLink
dstptr	libavcodec/yop.c	/^    uint8_t *dstptr;$/;"	m	struct:YopDecContext	file:
dstruct	libavdevice/dshow_common.c	62;"	d	file:
dstruct	libavdevice/vfwcap.c	87;"	d	file:
dtg_active_format	libavcodec/avcodec.h	/^    int dtg_active_format;$/;"	m	struct:AVCodecContext
dts	libavcodec/avcodec.h	/^    int64_t dts;     \/* dts of the current frame *\/$/;"	m	struct:AVCodecParserContext
dts	libavcodec/avcodec.h	/^    int64_t dts;$/;"	m	struct:AVPacket
dts	libavformat/audiointerleave.h	/^    uint64_t dts;                 \/\/\/< current dts$/;"	m	struct:__anon342
dts	libavformat/ffm.h	/^    int64_t dts;$/;"	m	struct:FFMContext
dts	libavformat/movenc.h	/^    int64_t      dts;$/;"	m	struct:MOVIentry
dts	libavformat/mpegenc.c	/^    int64_t dts;$/;"	m	struct:PacketDesc	file:
dts	libavformat/mpegts.c	/^    int64_t pts, dts;$/;"	m	struct:PESContext	file:
dts	libavformat/mxg.c	/^    int64_t dts;$/;"	m	struct:MXGContext	file:
dts	libavformat/rtpdec_mpeg4.c	/^        int dts;$/;"	m	struct:PayloadContext::AUHeaders	file:
dts_delta_threshold	ffmpeg.c	/^static float dts_delta_threshold = 10;$/;"	v	file:
dts_delta_threshold	ffmpeg/ffmpeg.c	/^static float dts_delta_threshold = 10;$/;"	v	file:
dts_flag	libavformat/rtpdec_mpeg4.c	/^        int dts_flag;$/;"	m	struct:PayloadContext::AUHeaders	file:
dts_probe	libavformat/dtsdec.c	/^static int dts_probe(AVProbeData *p)$/;"	f	file:
dts_ref_dts_delta	libavcodec/avcodec.h	/^    int dts_ref_dts_delta;$/;"	m	struct:AVCodecParserContext
dts_shift	libavformat/isom.h	/^    int dts_shift;        \/\/\/< dts shift when ctts is negative$/;"	m	struct:MOVStreamContext
dts_sync_point	libavcodec/avcodec.h	/^    int dts_sync_point;$/;"	m	struct:AVCodecParserContext
dtshd_fallback	libavformat/spdifenc.c	/^    int dtshd_fallback;$/;"	m	struct:IEC61937Context	file:
dtshd_rate	libavformat/spdifenc.c	/^    int dtshd_rate;$/;"	m	struct:IEC61937Context	file:
dtshd_skip	libavformat/spdifenc.c	/^    int dtshd_skip;                 \/\/\/< counter used for skipping DTS-HD frames$/;"	m	struct:IEC61937Context	file:
dummy	libavcodec/motion-test.c	/^int dummy;$/;"	v
dummy	libavcodec/svq1enc.c	/^    uint32_t *dummy;$/;"	m	struct:SVQ1Context	file:
dummy	libavformat/avformat.h	/^    void *dummy;$/;"	m	struct:AVOutputFormat
dump_bih	libavdevice/dshow_common.c	/^static void dump_bih(void *s, BITMAPINFOHEADER *bih)$/;"	f	file:
dump_bih	libavdevice/vfwcap.c	/^static void dump_bih(AVFormatContext *s, BITMAPINFOHEADER *bih)$/;"	f	file:
dump_captureparms	libavdevice/vfwcap.c	/^static void dump_captureparms(AVFormatContext *s, CAPTUREPARMS *cparms)$/;"	f	file:
dump_context	libavcodec/wmaprodec.c	/^static void av_cold dump_context(WMAProDecodeCtx *s)$/;"	f	file:
dump_cook_context	libavcodec/cook.c	/^static void dump_cook_context(COOKContext *q)$/;"	f	file:
dump_enc_cfg	libavcodec/libvpxenc.c	/^static av_cold void dump_enc_cfg(AVCodecContext *avctx,$/;"	f	file:
dump_extradata	libavcodec/dump_extradata_bsf.c	/^static int dump_extradata(AVBitStreamFilterContext *bsfc, AVCodecContext *avctx, const char *args,$/;"	f	file:
dump_floats	libavcodec/wmadec.c	/^static void dump_floats(WMACodecContext *s, const char *name, int prec, const float *tab, int n)$/;"	f	file:
dump_format	libavformat/utils.c	/^void dump_format(AVFormatContext *ic,$/;"	f
dump_headers	libavcodec/flacdec.c	/^static void dump_headers(AVCodecContext *avctx, FLACStreaminfo *s)$/;"	f	file:
dump_iframe	libavfilter/libmpcodecs/vf_framestep.c	/^    int  dump_iframe;$/;"	m	struct:vf_priv_s	file:
dump_metadata	libavformat/utils.c	/^static void dump_metadata(void *ctx, AVDictionary *m, const char *indent)$/;"	f	file:
dump_shorts	libavcodec/wmadec.c	/^static void dump_shorts(WMACodecContext *s, const char *name, const short *tab, int n)$/;"	f	file:
dump_stream_format	libavformat/utils.c	/^static void dump_stream_format(AVFormatContext *ic, int i, int index, int is_output)$/;"	f	file:
dump_videohdr	libavdevice/vfwcap.c	/^static void dump_videohdr(AVFormatContext *s, VIDEOHDR *vhdr)$/;"	f	file:
dup_wchar_to_utf8	libavdevice/dshow.c	/^static char *dup_wchar_to_utf8(wchar_t *w)$/;"	f	file:
duplicate	libpostproc/postprocess_template.c	/^static inline void RENAME(duplicate)(uint8_t src[], int stride)$/;"	f	file:
duration	ffplay.c	/^static int64_t duration = AV_NOPTS_VALUE;$/;"	v	file:
duration	libavcodec/avcodec.h	/^    int   duration;$/;"	m	struct:AVPacket
duration	libavcodec/libvpxenc.c	/^    unsigned long duration;          \/**< duration to show frame$/;"	m	struct:FrameListData	file:
duration	libavcodec/qdm2.c	/^    int   duration;$/;"	m	struct:__anon197	file:
duration	libavformat/applehttp.c	/^    int duration;$/;"	m	struct:segment	file:
duration	libavformat/applehttpproto.c	/^    int duration;$/;"	m	struct:segment	file:
duration	libavformat/asf.h	/^    int64_t duration;$/;"	m	struct:__anon399
duration	libavformat/asfenc.c	/^    int64_t duration;                    \/\/\/< in 100ns units$/;"	m	struct:__anon470	file:
duration	libavformat/avformat.h	/^    int64_t duration;$/;"	m	struct:AVFormatContext
duration	libavformat/avformat.h	/^    int64_t duration;$/;"	m	struct:AVStream
duration	libavformat/flvenc.c	/^    int64_t duration;$/;"	m	struct:FLVContext	file:
duration	libavformat/isom.h	/^    int duration;$/;"	m	struct:__anon464
duration	libavformat/isom.h	/^    int64_t duration;     \/\/\/< duration of the longest track$/;"	m	struct:MOVContext
duration	libavformat/isom.h	/^    unsigned duration;$/;"	m	struct:__anon468
duration	libavformat/isom.h	/^    unsigned duration;$/;"	m	struct:__anon469
duration	libavformat/matroskadec.c	/^    double   duration;$/;"	m	struct:__anon371	file:
duration	libavformat/matroskadec.c	/^    uint64_t duration;$/;"	m	struct:__anon372	file:
duration	libavformat/matroskaenc.c	/^    int64_t         duration;$/;"	m	struct:MatroskaMuxContext	file:
duration	libavformat/mxfdec.c	/^    int64_t duration;$/;"	m	struct:__anon440	file:
duration	libavformat/mxfdec.c	/^    int64_t duration;$/;"	m	struct:__anon441	file:
duration	libavformat/mxfenc.c	/^    uint64_t duration;$/;"	m	struct:MXFContext	file:
duration	libavformat/nsvdec.c	/^    int64_t duration;$/;"	m	struct:__anon345	file:
duration_count	libavformat/avformat.h	/^        int duration_count;$/;"	m	struct:AVStream::__anon480
duration_error	libavformat/avformat.h	/^        double duration_error[MAX_STD_TIMEBASES];$/;"	m	struct:AVStream::__anon480
duration_gcd	libavformat/avformat.h	/^        int64_t duration_gcd;$/;"	m	struct:AVStream::__anon480
duration_offset	libavformat/flvenc.c	/^    int64_t duration_offset;$/;"	m	struct:FLVContext	file:
duration_offset	libavformat/matroskaenc.c	/^    int64_t         duration_offset;$/;"	m	struct:MatroskaMuxContext	file:
duration_pos	libavformat/swf.h	/^    int64_t duration_pos;$/;"	m	struct:__anon336
dv100_qstep	libavcodec/dvdata.h	/^static const uint8_t dv100_qstep[16] = {$/;"	v
dv1394_class	libavdevice/dv1394.c	/^static const AVClass dv1394_class = {$/;"	v	file:
dv1394_close	libavdevice/dv1394.c	/^static int dv1394_close(AVFormatContext * context)$/;"	f	file:
dv1394_data	libavdevice/dv1394.c	/^struct dv1394_data {$/;"	s	file:
dv1394_init	libavdevice/dv1394.h	/^struct dv1394_init {$/;"	s
dv1394_read_header	libavdevice/dv1394.c	/^static int dv1394_read_header(AVFormatContext * context, AVFormatParameters * ap)$/;"	f	file:
dv1394_read_packet	libavdevice/dv1394.c	/^static int dv1394_read_packet(AVFormatContext *context, AVPacket *pkt)$/;"	f	file:
dv1394_reset	libavdevice/dv1394.c	/^static int dv1394_reset(struct dv1394_data *dv)$/;"	f	file:
dv1394_start	libavdevice/dv1394.c	/^static int dv1394_start(struct dv1394_data *dv)$/;"	f	file:
dv1394_status	libavdevice/dv1394.h	/^struct dv1394_status {$/;"	s
dv_aaux_packs_dist	libavformat/dvenc.c	/^static const int dv_aaux_packs_dist[12][9] = {$/;"	v	file:
dv_assemble_frame	libavformat/dvenc.c	/^static int dv_assemble_frame(DVMuxContext *c, AVStream* st,$/;"	f	file:
dv_audio_12to16	libavformat/dv.c	/^static inline uint16_t dv_audio_12to16(uint16_t sample)$/;"	f	file:
dv_audio_container	libavformat/isom.h	/^    int dv_audio_container;$/;"	m	struct:MOVStreamContext
dv_audio_control	libavcodec/dvdata.h	/^     dv_audio_control = 0x51,$/;"	e	enum:dv_pack_type
dv_audio_frame_size	libavformat/dvenc.c	/^static int dv_audio_frame_size(const DVprofile* sys, int frame)$/;"	f	file:
dv_audio_frequency	libavcodec/dvdata.h	/^static const av_unused int dv_audio_frequency[3] = {$/;"	v
dv_audio_recdate	libavcodec/dvdata.h	/^     dv_audio_recdate = 0x52,$/;"	e	enum:dv_pack_type
dv_audio_rectime	libavcodec/dvdata.h	/^     dv_audio_rectime = 0x53,$/;"	e	enum:dv_pack_type
dv_audio_shuffle525	libavcodec/dvdata.h	/^static const uint8_t dv_audio_shuffle525[10][9] = {$/;"	v
dv_audio_shuffle625	libavcodec/dvdata.h	/^static const uint8_t dv_audio_shuffle625[12][9] = {$/;"	v
dv_audio_source	libavcodec/dvdata.h	/^     dv_audio_source  = 0x50,$/;"	e	enum:dv_pack_type
dv_calc_mb_coordinates	libavcodec/dv.c	/^static inline void dv_calc_mb_coordinates(const DVprofile *d, int chan, int seq, int slot,$/;"	f	file:
dv_calculate_mb_xy	libavcodec/dv.c	/^static inline void dv_calculate_mb_xy(DVVideoContext *s, DVwork_chunk *work_chunk, int m, int *mb_x, int *mb_y)$/;"	f	file:
dv_decode_ac	libavcodec/dv.c	/^static void dv_decode_ac(GetBitContext *gb, BlockInfo *mb, DCTELEM *block)$/;"	f	file:
dv_decode_video_segment	libavcodec/dv.c	/^static int dv_decode_video_segment(AVCodecContext *avctx, void *arg)$/;"	f	file:
dv_delete_mux	libavformat/dvenc.c	/^static void dv_delete_mux(DVMuxContext *c)$/;"	f	file:
dv_demux	libavdevice/dv1394.c	/^    DVDemuxContext* dv_demux; \/* Generic DV muxing\/demuxing context *\/$/;"	m	struct:dv1394_data	file:
dv_demux	libavformat/avidec.c	/^    DVDemuxContext* dv_demux;$/;"	m	struct:__anon451	file:
dv_demux	libavformat/dv.c	/^    DVDemuxContext* dv_demux;$/;"	m	struct:RawDVContext	file:
dv_demux	libavformat/isom.h	/^    DVDemuxContext *dv_demux;$/;"	m	struct:MOVContext
dv_encode_ac	libavcodec/dv.c	/^static av_always_inline PutBitContext* dv_encode_ac(EncBlockInfo* bi,$/;"	f	file:
dv_encode_video_segment	libavcodec/dv.c	/^static int dv_encode_video_segment(AVCodecContext *avctx, void *arg)$/;"	f	file:
dv_extract_audio	libavformat/dv.c	/^static int dv_extract_audio(uint8_t* frame, uint8_t* ppcm[4],$/;"	f	file:
dv_extract_audio_info	libavformat/dv.c	/^static int dv_extract_audio_info(DVDemuxContext* c, uint8_t* frame)$/;"	f	file:
dv_extract_pack	libavformat/dv.c	/^static const uint8_t* dv_extract_pack(uint8_t* frame, enum dv_pack_type t)$/;"	f	file:
dv_extract_video_info	libavformat/dv.c	/^static int dv_extract_video_info(DVDemuxContext *c, uint8_t* frame)$/;"	f	file:
dv_fctx	libavformat/isom.h	/^    AVFormatContext *dv_fctx;$/;"	m	struct:MOVContext
dv_format_frame	libavcodec/dv.c	/^static void dv_format_frame(DVVideoContext* c, uint8_t* buf)$/;"	f	file:
dv_frame_offset	libavformat/dv.c	/^static int64_t dv_frame_offset(AVFormatContext *s, DVDemuxContext *c,$/;"	f	file:
dv_get_packet	libavformat/dv.c	/^int dv_get_packet(DVDemuxContext *c, AVPacket *pkt)$/;"	f
dv_guess_dct_mode	libavcodec/dv.c	/^static av_always_inline int dv_guess_dct_mode(DVVideoContext *s, uint8_t *data, int linesize) {$/;"	f	file:
dv_guess_qnos	libavcodec/dv.c	/^static inline void dv_guess_qnos(EncBlockInfo* blks, int* qnos)$/;"	f	file:
dv_header525	libavcodec/dvdata.h	/^     dv_header525     = 0x3f, \/* see dv_write_pack for important details on *\/$/;"	e	enum:dv_pack_type
dv_header625	libavcodec/dvdata.h	/^     dv_header625     = 0xbf, \/* these two packs *\/$/;"	e	enum:dv_pack_type
dv_idct_factor_hd1080	libavcodec/dvdata.c	/^static uint32_t dv_idct_factor_hd1080[2*4*16*64];$/;"	v	file:
dv_idct_factor_hd720	libavcodec/dvdata.c	/^static uint32_t dv_idct_factor_hd720 [2*4*16*64];$/;"	v	file:
dv_idct_factor_sd	libavcodec/dvdata.c	/^static uint32_t dv_idct_factor_sd    [2*2*22*64];$/;"	v	file:
dv_init_demux	libavformat/dv.c	/^DVDemuxContext* dv_init_demux(AVFormatContext *s)$/;"	f
dv_init_dynamic_tables	libavcodec/dv.c	/^static int dv_init_dynamic_tables(const DVprofile *d)$/;"	f	file:
dv_init_enc_block	libavcodec/dv.c	/^static av_always_inline int dv_init_enc_block(EncBlockInfo* bi, uint8_t *data, int linesize, DVVideoContext *s, int bias)$/;"	f	file:
dv_init_mux	libavformat/dvenc.c	/^static DVMuxContext* dv_init_mux(AVFormatContext* s)$/;"	f	file:
dv_inject_audio	libavformat/dvenc.c	/^static void dv_inject_audio(DVMuxContext *c, int channel, uint8_t* frame_ptr)$/;"	f	file:
dv_inject_metadata	libavformat/dvenc.c	/^static void dv_inject_metadata(DVMuxContext *c, uint8_t* frame)$/;"	f	file:
dv_iweight_1080_c	libavcodec/dvdata.h	/^static const int dv_iweight_1080_c[64] = {$/;"	v
dv_iweight_1080_y	libavcodec/dvdata.h	/^static const int dv_iweight_1080_y[64] = {$/;"	v
dv_iweight_248	libavcodec/dvdata.h	/^static const int dv_iweight_248[64] = {$/;"	v
dv_iweight_720_c	libavcodec/dvdata.h	/^static const int dv_iweight_720_c[64] = {$/;"	v
dv_iweight_720_y	libavcodec/dvdata.h	/^static const int dv_iweight_720_y[64] = {$/;"	v
dv_iweight_88	libavcodec/dvdata.h	/^static const int dv_iweight_88[64] = {$/;"	v
dv_iweight_bits	libavcodec/dvdata.h	/^static const int dv_iweight_bits = 14;$/;"	v
dv_offset_reset	libavformat/dv.c	/^void dv_offset_reset(DVDemuxContext *c, int64_t frame_offset)$/;"	f
dv_pack_type	libavcodec/dvdata.h	/^enum dv_pack_type {$/;"	g
dv_probe	libavformat/dv.c	/^static int dv_probe(AVProbeData *p)$/;"	f	file:
dv_produce_packet	libavformat/dv.c	/^int dv_produce_packet(DVDemuxContext *c, AVPacket *pkt,$/;"	f
dv_profiles	libavcodec/dvdata.c	/^static const DVprofile dv_profiles[] = {$/;"	v	file:
dv_quant_areas	libavcodec/dvdata.h	/^static const uint8_t dv_quant_areas[4]  = { 6, 21, 43, 64 };$/;"	v
dv_quant_offset	libavcodec/dvdata.h	/^static const uint8_t dv_quant_offset[4] = { 6,  3,  0,  1 };$/;"	v
dv_quant_shifts	libavcodec/dvdata.h	/^static const uint8_t dv_quant_shifts[22][4] = {$/;"	v
dv_read_close	libavformat/dv.c	/^static int dv_read_close(AVFormatContext *s)$/;"	f	file:
dv_read_header	libavformat/dv.c	/^static int dv_read_header(AVFormatContext *s,$/;"	f	file:
dv_read_packet	libavformat/dv.c	/^static int dv_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
dv_read_seek	libavformat/dv.c	/^static int dv_read_seek(AVFormatContext *s, int stream_index,$/;"	f	file:
dv_rl2vlc	libavcodec/dv.c	/^static av_always_inline int dv_rl2vlc(int run, int l, int sign, uint32_t* vlc)$/;"	f	file:
dv_rl2vlc	libavcodec/dv.c	/^static av_always_inline int dv_rl2vlc(int run, int level, int sign, uint32_t* vlc)$/;"	f	file:
dv_rl2vlc_size	libavcodec/dv.c	/^static av_always_inline int dv_rl2vlc_size(int run, int l)$/;"	f	file:
dv_rl2vlc_size	libavcodec/dv.c	/^static av_always_inline int dv_rl2vlc_size(int run, int level)$/;"	f	file:
dv_rl_vlc	libavcodec/dv.c	/^static RL_VLC_ELEM dv_rl_vlc[1184];$/;"	v	file:
dv_sect_audio	libavcodec/dvdata.h	/^     dv_sect_audio   = 0x76,$/;"	e	enum:dv_section_type
dv_sect_header	libavcodec/dvdata.h	/^     dv_sect_header  = 0x1f,$/;"	e	enum:dv_section_type
dv_sect_subcode	libavcodec/dvdata.h	/^     dv_sect_subcode = 0x3f,$/;"	e	enum:dv_section_type
dv_sect_vaux	libavcodec/dvdata.h	/^     dv_sect_vaux    = 0x56,$/;"	e	enum:dv_section_type
dv_sect_video	libavcodec/dvdata.h	/^     dv_sect_video   = 0x96,$/;"	e	enum:dv_section_type
dv_section_type	libavcodec/dvdata.h	/^enum dv_section_type {$/;"	g
dv_timecode	libavcodec/dvdata.h	/^     dv_timecode      = 0x13,$/;"	e	enum:dv_pack_type
dv_unknown_pack	libavcodec/dvdata.h	/^     dv_unknown_pack  = 0xff,$/;"	e	enum:dv_pack_type
dv_video_control	libavcodec/dvdata.h	/^     dv_video_control = 0x61,$/;"	e	enum:dv_pack_type
dv_video_recdate	libavcodec/dvdata.h	/^     dv_video_recdate = 0x62,$/;"	e	enum:dv_pack_type
dv_video_rectime	libavcodec/dvdata.h	/^     dv_video_rectime = 0x63,$/;"	e	enum:dv_pack_type
dv_video_source	libavcodec/dvdata.h	/^     dv_video_source  = 0x60,$/;"	e	enum:dv_pack_type
dv_vlc_bits	libavcodec/dv_vlc_data.h	/^static const uint16_t dv_vlc_bits[409] = {$/;"	v
dv_vlc_len	libavcodec/dv_vlc_data.h	/^static const uint8_t dv_vlc_len[409] = {$/;"	v
dv_vlc_level	libavcodec/dv_vlc_data.h	/^static const uint8_t dv_vlc_level[409] = {$/;"	v
dv_vlc_map	libavcodec/dv_tablegen.h	/^static struct dv_vlc_pair dv_vlc_map[DV_VLC_MAP_RUN_SIZE][DV_VLC_MAP_LEV_SIZE];$/;"	v	typeref:struct:dv_vlc_pair
dv_vlc_map_tableinit	libavcodec/dv_tablegen.h	/^static void dv_vlc_map_tableinit(void)$/;"	f
dv_vlc_map_tableinit	libavcodec/dv_tablegen.h	44;"	d
dv_vlc_pair	libavcodec/dv_tablegen.h	/^typedef struct dv_vlc_pair {$/;"	s
dv_vlc_pair	libavcodec/dv_tablegen.h	/^} dv_vlc_pair;$/;"	t	typeref:struct:dv_vlc_pair
dv_vlc_run	libavcodec/dv_vlc_data.h	/^static const uint8_t dv_vlc_run[409] = {$/;"	v
dv_weight_248	libavcodec/dvdata.h	/^static const int dv_weight_248[64] = {$/;"	v
dv_weight_88	libavcodec/dvdata.h	/^static const int dv_weight_88[64] = {$/;"	v
dv_weight_bits	libavcodec/dvdata.h	/^static const int dv_weight_bits = 18;$/;"	v
dv_work_pool_size	libavcodec/dv.c	/^static inline int dv_work_pool_size(const DVprofile *d)$/;"	f	file:
dv_write_dif_id	libavcodec/dvdata.h	/^static inline int dv_write_dif_id(enum dv_section_type t, uint8_t chan_num,$/;"	f
dv_write_header	libavformat/dvenc.c	/^static int dv_write_header(AVFormatContext *s)$/;"	f	file:
dv_write_pack	libavcodec/dv.c	/^static inline int dv_write_pack(enum dv_pack_type pack_id, DVVideoContext *c,$/;"	f	file:
dv_write_pack	libavformat/dvenc.c	/^static int dv_write_pack(enum dv_pack_type pack_id, DVMuxContext *c, uint8_t* buf, ...)$/;"	f	file:
dv_write_packet	libavformat/dvenc.c	/^static int dv_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
dv_write_ssyb_id	libavcodec/dvdata.h	/^static inline int dv_write_ssyb_id(uint8_t syb_num, uint8_t fr, uint8_t* buf)$/;"	f
dv_write_trailer	libavformat/dvenc.c	/^static int dv_write_trailer(struct AVFormatContext *s)$/;"	f	file:
dv_zigzag	libavcodec/dv.c	/^    uint8_t  dv_zigzag[2][64];$/;"	m	struct:DVVideoContext	file:
dvb_encode_rle2	libavcodec/dvbsub.c	/^static void dvb_encode_rle2(uint8_t **pq,$/;"	f	file:
dvb_encode_rle4	libavcodec/dvbsub.c	/^static void dvb_encode_rle4(uint8_t **pq,$/;"	f	file:
dvbsub_close_decoder	libavcodec/dvbsubdec.c	/^static av_cold int dvbsub_close_decoder(AVCodecContext *avctx)$/;"	f	file:
dvbsub_decode	libavcodec/dvbsubdec.c	/^static int dvbsub_decode(AVCodecContext *avctx,$/;"	f	file:
dvbsub_display_end_segment	libavcodec/dvbsubdec.c	/^static int dvbsub_display_end_segment(AVCodecContext *avctx, const uint8_t *buf,$/;"	f	file:
dvbsub_encode	libavcodec/dvbsub.c	/^static int dvbsub_encode(AVCodecContext *avctx,$/;"	f	file:
dvbsub_init_decoder	libavcodec/dvbsubdec.c	/^static av_cold int dvbsub_init_decoder(AVCodecContext *avctx)$/;"	f	file:
dvbsub_parse	libavcodec/dvbsub_parser.c	/^static int dvbsub_parse(AVCodecParserContext *s,$/;"	f	file:
dvbsub_parse_close	libavcodec/dvbsub_parser.c	/^static av_cold void dvbsub_parse_close(AVCodecParserContext *s)$/;"	f	file:
dvbsub_parse_clut_segment	libavcodec/dvbsubdec.c	/^static void dvbsub_parse_clut_segment(AVCodecContext *avctx,$/;"	f	file:
dvbsub_parse_display_definition_segment	libavcodec/dvbsubdec.c	/^static void dvbsub_parse_display_definition_segment(AVCodecContext *avctx,$/;"	f	file:
dvbsub_parse_init	libavcodec/dvbsub_parser.c	/^static av_cold int dvbsub_parse_init(AVCodecParserContext *s)$/;"	f	file:
dvbsub_parse_object_segment	libavcodec/dvbsubdec.c	/^static void dvbsub_parse_object_segment(AVCodecContext *avctx,$/;"	f	file:
dvbsub_parse_page_segment	libavcodec/dvbsubdec.c	/^static void dvbsub_parse_page_segment(AVCodecContext *avctx,$/;"	f	file:
dvbsub_parse_pixel_data_block	libavcodec/dvbsubdec.c	/^static void dvbsub_parse_pixel_data_block(AVCodecContext *avctx, DVBSubObjectDisplay *display,$/;"	f	file:
dvbsub_parse_region_segment	libavcodec/dvbsubdec.c	/^static void dvbsub_parse_region_segment(AVCodecContext *avctx,$/;"	f	file:
dvbsub_read_2bit_string	libavcodec/dvbsubdec.c	/^static int dvbsub_read_2bit_string(uint8_t *destbuf, int dbuf_len,$/;"	f	file:
dvbsub_read_4bit_string	libavcodec/dvbsubdec.c	/^static int dvbsub_read_4bit_string(uint8_t *destbuf, int dbuf_len,$/;"	f	file:
dvbsub_read_8bit_string	libavcodec/dvbsubdec.c	/^static int dvbsub_read_8bit_string(uint8_t *destbuf, int dbuf_len,$/;"	f	file:
dvd_encode_rle	libavcodec/dvdsubenc.c	/^static void dvd_encode_rle(uint8_t **pq,$/;"	f	file:
dvdsub_decode	libavcodec/dvdsubdec.c	/^static int dvdsub_decode(AVCodecContext *avctx,$/;"	f	file:
dvdsub_encode	libavcodec/dvdsubenc.c	/^static int dvdsub_encode(AVCodecContext *avctx,$/;"	f	file:
dvdsub_parse	libavcodec/dvdsub_parser.c	/^static int dvdsub_parse(AVCodecParserContext *s,$/;"	f	file:
dvdsub_parse_close	libavcodec/dvdsub_parser.c	/^static av_cold void dvdsub_parse_close(AVCodecParserContext *s)$/;"	f	file:
dvdsub_parse_init	libavcodec/dvdsub_parser.c	/^static av_cold int dvdsub_parse_init(AVCodecParserContext *s)$/;"	f	file:
dvvideo_close	libavcodec/dv.c	/^static int dvvideo_close(AVCodecContext *c)$/;"	f	file:
dvvideo_decode_frame	libavcodec/dv.c	/^static int dvvideo_decode_frame(AVCodecContext *avctx,$/;"	f	file:
dvvideo_encode_frame	libavcodec/dv.c	/^static int dvvideo_encode_frame(AVCodecContext *c, uint8_t *buf, int buf_size,$/;"	f	file:
dvvideo_init	libavcodec/dv.c	/^static av_cold int dvvideo_init(AVCodecContext *avctx)$/;"	f	file:
dvvideo_init_encoder	libavcodec/dv.c	/^static av_cold int dvvideo_init_encoder(AVCodecContext *avctx)$/;"	f	file:
dw	libavfilter/libmpcodecs/vf_screenshot.c	/^    int dw, dh, stride;$/;"	m	struct:vf_priv_s	file:
dwt	libavcodec/j2k.h	/^   DWTContext dwt;$/;"	m	struct:__anon217
dwt	libavcodec/snow.c	/^    DWTContext dwt;$/;"	m	struct:SnowContext	file:
dwt_decode53	libavcodec/j2k_dwt.c	/^static void dwt_decode53(DWTContext *s, int *t)$/;"	f	file:
dwt_decode97	libavcodec/j2k_dwt.c	/^static void dwt_decode97(DWTContext *s, int *t)$/;"	f	file:
dwt_encode53	libavcodec/j2k_dwt.c	/^static void dwt_encode53(DWTContext *s, int *t)$/;"	f	file:
dwt_encode97	libavcodec/j2k_dwt.c	/^static void dwt_encode97(DWTContext *s, int *t)$/;"	f	file:
dwt_norms	libavcodec/j2kenc.c	/^static const int dwt_norms[2][4][10] = { \/\/ [dwt_type][band][rlevel] (multiplied by 10000)$/;"	v	file:
dwt_quantize	libavcodec/snow.c	/^static void dwt_quantize(SnowContext *s, Plane *p, DWTELEM *buffer, int width, int height, int stride, int type){$/;"	f	file:
dx	libavcodec/tta.c	/^    int32_t dx[MAX_ORDER];$/;"	m	struct:TTAFilter	file:
dxa_probe	libavformat/dxa.c	/^static int dxa_probe(AVProbeData *p)$/;"	f	file:
dxa_read_header	libavformat/dxa.c	/^static int dxa_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
dxa_read_packet	libavformat/dxa.c	/^static int dxa_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
dxt1_decode_pixels	libavcodec/s3tc.c	/^static inline void dxt1_decode_pixels(const uint8_t *s, uint32_t *d,$/;"	f	file:
dxva2_picture_context	libavcodec/dxva2_h264.c	/^struct dxva2_picture_context {$/;"	s	file:
dxva2_picture_context	libavcodec/dxva2_mpeg2.c	/^struct dxva2_picture_context {$/;"	s	file:
dxva2_picture_context	libavcodec/dxva2_vc1.c	/^struct dxva2_picture_context {$/;"	s	file:
dxva_context	libavcodec/dxva2.h	/^struct dxva_context {$/;"	s
dyn_bc	libavformat/matroskaenc.c	/^    AVIOContext   *dyn_bc;$/;"	m	struct:MatroskaMuxContext	file:
dyn_buf	libavformat/rtpdec_latm.c	/^    AVIOContext *dyn_buf;$/;"	m	struct:PayloadContext	file:
dyn_buf_seek	libavformat/aviobuf.c	/^static int64_t dyn_buf_seek(void *opaque, int64_t offset, int whence)$/;"	f	file:
dyn_buf_write	libavformat/aviobuf.c	/^static int dyn_buf_write(void *opaque, uint8_t *buf, int buf_size)$/;"	f	file:
dyn_packet_buf_write	libavformat/aviobuf.c	/^static int dyn_packet_buf_write(void *opaque, uint8_t *buf, int buf_size)$/;"	f	file:
dyn_rng_ctl	libavcodec/aac.h	/^    int dyn_rng_ctl[17];                            \/\/\/< DRC magnitude information$/;"	m	struct:__anon241
dyn_rng_sgn	libavcodec/aac.h	/^    int dyn_rng_sgn[17];                            \/\/\/< DRC sign information; 0 - positive, 1 - negative$/;"	m	struct:__anon241
dynamic_acl	ffserver.c	/^    char dynamic_acl[1024];$/;"	m	struct:FFStream	file:
dynamic_handler	libavformat/rtsp.h	/^    RTPDynamicProtocolHandler *dynamic_handler;$/;"	m	struct:RTSPStream
dynamic_protocol_context	libavformat/rdt.c	/^    void *dynamic_protocol_context;$/;"	m	struct:RDTDemuxContext	file:
dynamic_protocol_context	libavformat/rtpdec.h	/^    PayloadContext *dynamic_protocol_context;        \/\/\/< This is a copy from the values setup from the sdp parsing, in rtsp.c don't free me.$/;"	m	struct:RTPDemuxContext
dynamic_protocol_context	libavformat/rtsp.h	/^    PayloadContext *dynamic_protocol_context;$/;"	m	struct:RTSPStream
dynamic_range	libavcodec/ac3dec.h	/^    float dynamic_range[2];                 \/\/\/< dynamic range$/;"	m	struct:__anon88
dynamic_range_compression	libavcodec/wmaprodec.c	/^    uint8_t          dynamic_range_compression;     \/\/\/< frame contains DRC data$/;"	m	struct:WMAProDecodeCtx	file:
dynamic_range_tab	libavcodec/ac3dec.c	/^static float dynamic_range_tab[256];$/;"	v	file:
dynarray_add	libavformat/internal.h	41;"	d
dynarray_add	libavformat/internal.h	49;"	d
dynrange	libavcodec/dca.c	/^    int dynrange;               \/\/\/< embedded dynamic range flag$/;"	m	struct:__anon93	file:
dynrange_coef	libavcodec/dca.c	/^    int dynrange_coef;                                           \/\/\/< dynamic range coefficient$/;"	m	struct:__anon93	file:
e	libavfilter/libmpcodecs/vf_geq.c	/^    AVExpr * e[3];$/;"	m	struct:vf_priv_s	file:
e	libavfilter/libmpcodecs/vf_ivtc.c	/^    int d, e, o;$/;"	m	struct:metrics	file:
e$16	libavcodec/bfin/pixels_bfin.S	/^e$16:   SAA (R1:0,R3:2) (R)  || R0 = [I0++]    || R2 = [I1++];$/;"	l
e$8	libavcodec/bfin/pixels_bfin.S	/^e$8:    DISALGNEXCPT         || R1 = [I0++]   || R3 = [I1++];$/;"	l
e_a	libavcodec/sbr.h	/^    int                e_a[2];$/;"	m	struct:__anon56
e_add	libavutil/eval.c	/^        e_pow, e_mul, e_div, e_add,$/;"	e	enum:AVExpr::__anon305	file:
e_ceil	libavutil/eval.c	/^        e_last, e_st, e_while, e_floor, e_ceil, e_trunc,$/;"	e	enum:AVExpr::__anon305	file:
e_const	libavutil/eval.c	/^        e_value, e_const, e_func0, e_func1, e_func2,$/;"	e	enum:AVExpr::__anon305	file:
e_curr	libavcodec/sbr.h	/^    float              e_curr[7][48];$/;"	m	struct:__anon57
e_div	libavutil/eval.c	/^        e_pow, e_mul, e_div, e_add,$/;"	e	enum:AVExpr::__anon305	file:
e_eq	libavutil/eval.c	/^        e_mod, e_max, e_min, e_eq, e_gt, e_gte,$/;"	e	enum:AVExpr::__anon305	file:
e_floor	libavutil/eval.c	/^        e_last, e_st, e_while, e_floor, e_ceil, e_trunc,$/;"	e	enum:AVExpr::__anon305	file:
e_func0	libavutil/eval.c	/^        e_value, e_const, e_func0, e_func1, e_func2,$/;"	e	enum:AVExpr::__anon305	file:
e_func1	libavutil/eval.c	/^        e_value, e_const, e_func0, e_func1, e_func2,$/;"	e	enum:AVExpr::__anon305	file:
e_func2	libavutil/eval.c	/^        e_value, e_const, e_func0, e_func1, e_func2,$/;"	e	enum:AVExpr::__anon305	file:
e_gauss	libavutil/eval.c	/^        e_squish, e_gauss, e_ld, e_isnan,$/;"	e	enum:AVExpr::__anon305	file:
e_gt	libavutil/eval.c	/^        e_mod, e_max, e_min, e_eq, e_gt, e_gte,$/;"	e	enum:AVExpr::__anon305	file:
e_gte	libavutil/eval.c	/^        e_mod, e_max, e_min, e_eq, e_gt, e_gte,$/;"	e	enum:AVExpr::__anon305	file:
e_isnan	libavutil/eval.c	/^        e_squish, e_gauss, e_ld, e_isnan,$/;"	e	enum:AVExpr::__anon305	file:
e_last	libavutil/eval.c	/^        e_last, e_st, e_while, e_floor, e_ceil, e_trunc,$/;"	e	enum:AVExpr::__anon305	file:
e_ld	libavutil/eval.c	/^        e_squish, e_gauss, e_ld, e_isnan,$/;"	e	enum:AVExpr::__anon305	file:
e_max	libavutil/eval.c	/^        e_mod, e_max, e_min, e_eq, e_gt, e_gte,$/;"	e	enum:AVExpr::__anon305	file:
e_min	libavutil/eval.c	/^        e_mod, e_max, e_min, e_eq, e_gt, e_gte,$/;"	e	enum:AVExpr::__anon305	file:
e_mod	libavutil/eval.c	/^        e_mod, e_max, e_min, e_eq, e_gt, e_gte,$/;"	e	enum:AVExpr::__anon305	file:
e_mul	libavutil/eval.c	/^        e_pow, e_mul, e_div, e_add,$/;"	e	enum:AVExpr::__anon305	file:
e_not	libavutil/eval.c	/^        e_sqrt, e_not,$/;"	e	enum:AVExpr::__anon305	file:
e_origmapped	libavcodec/sbr.h	/^    float              e_origmapped[7][48];$/;"	m	struct:__anon57
e_pow	libavutil/eval.c	/^        e_pow, e_mul, e_div, e_add,$/;"	e	enum:AVExpr::__anon305	file:
e_sqrt	libavutil/eval.c	/^        e_sqrt, e_not,$/;"	e	enum:AVExpr::__anon305	file:
e_squish	libavutil/eval.c	/^        e_squish, e_gauss, e_ld, e_isnan,$/;"	e	enum:AVExpr::__anon305	file:
e_st	libavutil/eval.c	/^        e_last, e_st, e_while, e_floor, e_ceil, e_trunc,$/;"	e	enum:AVExpr::__anon305	file:
e_trunc	libavutil/eval.c	/^        e_last, e_st, e_while, e_floor, e_ceil, e_trunc,$/;"	e	enum:AVExpr::__anon305	file:
e_value	libavutil/eval.c	/^        e_value, e_const, e_func0, e_func1, e_func2,$/;"	e	enum:AVExpr::__anon305	file:
e_while	libavutil/eval.c	/^        e_last, e_st, e_while, e_floor, e_ceil, e_trunc,$/;"	e	enum:AVExpr::__anon305	file:
ea_adpcm_table	libavcodec/adpcm.c	/^static const int ea_adpcm_table[] = {$/;"	v	file:
ea_idct_col	libavcodec/eaidct.c	/^static inline void ea_idct_col(DCTELEM *dest, const DCTELEM *src) {$/;"	f	file:
ea_probe	libavformat/electronicarts.c	/^static int ea_probe(AVProbeData *p)$/;"	f	file:
ea_read_header	libavformat/electronicarts.c	/^static int ea_read_header(AVFormatContext *s,$/;"	f	file:
ea_read_packet	libavformat/electronicarts.c	/^static int ea_read_packet(AVFormatContext *s,$/;"	f	file:
eac3	libavcodec/ac3dec.h	/^    int eac3;                               \/\/\/< indicates if current frame is E-AC-3$/;"	m	struct:__anon88
eac3	libavcodec/ac3enc.h	/^    int eac3;                               \/\/\/< indicates if this is E-AC-3 vs. AC-3$/;"	m	struct:AC3EncodeContext
eac3_blocks	libavcodec/ac3_parser.c	/^static const uint8_t eac3_blocks[4] = {$/;"	v	file:
eac3_probe	libavformat/ac3dec.c	/^static int eac3_probe(AVProbeData *p)$/;"	f	file:
eac3enc_class	libavcodec/eac3enc.c	/^static AVClass eac3enc_class = { "E-AC-3 Encoder", av_default_item_name,$/;"	v	file:
ebml_free	libavformat/matroskadec.c	/^static void ebml_free(EbmlSyntax *syntax, void *data)$/;"	f	file:
ebml_header	libavformat/matroskadec.c	/^static EbmlSyntax ebml_header[] = {$/;"	v	file:
ebml_id_size	libavformat/matroskaenc.c	/^static int ebml_id_size(unsigned int id)$/;"	f	file:
ebml_level_end	libavformat/matroskadec.c	/^static int ebml_level_end(MatroskaDemuxContext *matroska)$/;"	f	file:
ebml_master	libavformat/matroskaenc.c	/^typedef struct ebml_master {$/;"	s	file:
ebml_master	libavformat/matroskaenc.c	/^} ebml_master;$/;"	t	typeref:struct:ebml_master	file:
ebml_num_size	libavformat/matroskaenc.c	/^static int ebml_num_size(uint64_t num)$/;"	f	file:
ebml_parse	libavformat/matroskadec.c	/^static int ebml_parse(MatroskaDemuxContext *matroska, EbmlSyntax *syntax,$/;"	f	file:
ebml_parse_elem	libavformat/matroskadec.c	/^static int ebml_parse_elem(MatroskaDemuxContext *matroska,$/;"	f	file:
ebml_parse_id	libavformat/matroskadec.c	/^static int ebml_parse_id(MatroskaDemuxContext *matroska, EbmlSyntax *syntax,$/;"	f	file:
ebml_parse_nest	libavformat/matroskadec.c	/^static int ebml_parse_nest(MatroskaDemuxContext *matroska, EbmlSyntax *syntax,$/;"	f	file:
ebml_read_ascii	libavformat/matroskadec.c	/^static int ebml_read_ascii(AVIOContext *pb, int size, char **str)$/;"	f	file:
ebml_read_binary	libavformat/matroskadec.c	/^static int ebml_read_binary(AVIOContext *pb, int length, EbmlBin *bin)$/;"	f	file:
ebml_read_float	libavformat/matroskadec.c	/^static int ebml_read_float(AVIOContext *pb, int size, double *num)$/;"	f	file:
ebml_read_length	libavformat/matroskadec.c	/^static int ebml_read_length(MatroskaDemuxContext *matroska, AVIOContext *pb,$/;"	f	file:
ebml_read_master	libavformat/matroskadec.c	/^static int ebml_read_master(MatroskaDemuxContext *matroska, uint64_t length)$/;"	f	file:
ebml_read_num	libavformat/matroskadec.c	/^static int ebml_read_num(MatroskaDemuxContext *matroska, AVIOContext *pb,$/;"	f	file:
ebml_read_uint	libavformat/matroskadec.c	/^static int ebml_read_uint(AVIOContext *pb, int size, uint64_t *num)$/;"	f	file:
ebml_syntax	libavformat/matroskadec.c	/^static EbmlSyntax ebml_syntax[] = {$/;"	v	file:
ebuf	libavcodec/lzw.c	/^    const uint8_t *pbuf, *ebuf;$/;"	m	struct:LZWState	file:
echolog	configure	/^echolog(){$/;"	f
echov	tests/regression-funcs.sh	/^echov(){$/;"	f
edge_emu_buffer	libavcodec/mpegvideo.h	/^    uint8_t *edge_emu_buffer;     \/\/\/< points into the middle of allocated_edge_emu_buffer$/;"	m	struct:MpegEncContext
edge_emu_buffer	libavcodec/vp3.c	/^    uint8_t *edge_emu_buffer;$/;"	m	struct:Vp3DecodeContext	file:
edge_emu_buffer	libavcodec/vp56.h	/^    uint8_t *edge_emu_buffer;$/;"	m	struct:vp56_context
edge_emu_buffer	libavcodec/vp8.h	/^    uint8_t *edge_emu_buffer;$/;"	m	struct:__anon182
edge_emu_buffer_alloc	libavcodec/vp56.h	/^    uint8_t *edge_emu_buffer_alloc;$/;"	m	struct:vp56_context
edge_filter_hor	libavcodec/vp56dsp.h	/^    void (*edge_filter_hor)(uint8_t *yuv, int stride, int t);$/;"	m	struct:VP56DSPContext
edge_filter_ver	libavcodec/vp56dsp.h	/^    void (*edge_filter_ver)(uint8_t *yuv, int stride, int t);$/;"	m	struct:VP56DSPContext
edges	libavcodec/intrax8.h	/^    int edges;$/;"	m	struct:__anon134
edit_rate	libavformat/mxfdec.c	/^    AVRational edit_rate;$/;"	m	struct:__anon442	file:
edit_unit_byte_count	libavformat/mxfenc.c	/^    int edit_unit_byte_count; \/\/\/< fixed edit unit byte count$/;"	m	struct:MXFContext	file:
edit_units_count	libavformat/mxfenc.c	/^    unsigned edit_units_count;$/;"	m	struct:MXFContext	file:
efi_read	libavformat/tty.c	/^static int efi_read(AVFormatContext *avctx, uint64_t start_pos)$/;"	f	file:
eightsvx_decode_close	libavcodec/8svx.c	/^static av_cold int eightsvx_decode_close(AVCodecContext *avctx)$/;"	f	file:
eightsvx_decode_frame	libavcodec/8svx.c	/^static int eightsvx_decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
eightsvx_decode_init	libavcodec/8svx.c	/^static av_cold int eightsvx_decode_init(AVCodecContext *avctx)$/;"	f	file:
elbg_data	libavcodec/elbg.c	/^} elbg_data;$/;"	t	typeref:struct:__anon247	file:
elem	libavformat/matroskadec.c	/^    void *elem;$/;"	m	struct:__anon352	file:
elem	libavutil/tree.c	/^    void *elem;$/;"	m	struct:AVTreeNode	file:
element_ul	libavformat/mxfenc.c	/^    UID element_ul;$/;"	m	struct:__anon459	file:
elementid	libavformat/matroskaenc.c	/^    unsigned int    elementid;$/;"	m	struct:mkv_seekhead_entry	file:
elems	libavutil/internal.h	/^    AVDictionaryEntry *elems;$/;"	m	struct:AVDictionary
emms_c	libavutil/internal.h	/^static av_always_inline void emms_c(void)$/;"	f
emms_c	libavutil/internal.h	242;"	d
empty_buffer	libavcodec/qdm2.c	/^static uint8_t empty_buffer[FF_INPUT_BUFFER_PADDING_SIZE];$/;"	v	file:
empty_odd_column	libavcodec/arm/jrevdct_arm.S	/^empty_odd_column:$/;"	l
empty_row	libavcodec/arm/jrevdct_arm.S	/^empty_row:$/;"	l
emu_edge	libavcodec/x86/dsputil_yasm.asm	/^emu_edge mmx$/;"	l
emu_edge	libavcodec/x86/dsputil_yasm.asm	/^emu_edge sse$/;"	l
emu_edge_core_func	libavcodec/x86/dsputil_mmx.c	/^typedef void emu_edge_core_func (uint8_t *buf, const uint8_t *src,$/;"	t	file:
emu_edge_height	libavcodec/h264.h	/^    int emu_edge_height;$/;"	m	struct:H264Context
emu_edge_width	libavcodec/h264.h	/^    int emu_edge_width;$/;"	m	struct:H264Context
emulated_edge_mc	libavcodec/dsputil.h	/^    void (*emulated_edge_mc)(uint8_t *buf, const uint8_t *src, int linesize,$/;"	m	struct:DSPContext
emulated_edge_mc	libavcodec/x86/dsputil_mmx.c	/^void emulated_edge_mc(uint8_t *buf, const uint8_t *src, int linesize,$/;"	f	file:
emulated_edge_mc_func	libavcodec/x86/dsputil_mmx.c	/^typedef void emulated_edge_mc_func (uint8_t *dst, const uint8_t *src,$/;"	t	file:
emulated_edge_mc_mmx	libavcodec/x86/dsputil_mmx.c	/^void emulated_edge_mc_mmx(uint8_t *buf, const uint8_t *src, int linesize,$/;"	f	file:
emulated_edge_mc_sse	libavcodec/x86/dsputil_mmx.c	/^void emulated_edge_mc_sse(uint8_t *buf, const uint8_t *src, int linesize,$/;"	f	file:
enable	configure	/^enable(){$/;"	f
enable_deep	configure	/^enable_deep(){$/;"	f
enable_deep_weak	configure	/^enable_deep_weak(){$/;"	f
enable_ext	libavcodec/aacps.h	/^    int    enable_ext;$/;"	m	struct:__anon257
enable_icc	libavcodec/aacps.h	/^    int    enable_icc;$/;"	m	struct:__anon257
enable_iid	libavcodec/aacps.h	/^    int    enable_iid;$/;"	m	struct:__anon257
enable_ipdopd	libavcodec/aacps.h	/^    int    enable_ipdopd;$/;"	m	struct:__anon257
enable_pic	configure	/^enable_pic() {$/;"	f
enable_safe	configure	/^enable_safe(){$/;"	f
enable_weak	configure	/^enable_weak(){$/;"	f
enabled	configure	/^enabled(){$/;"	f
enabled	libavcodec/vp8.h	/^        uint8_t enabled;    \/\/\/< whether each mb can have a different strength based on mode\/ref$/;"	m	struct:__anon182::__anon186
enabled	libavcodec/vp8.h	/^        uint8_t enabled;$/;"	m	struct:__anon182::__anon183
enabled_all	configure	/^enabled_all(){$/;"	f
enabled_any	configure	/^enabled_any(){$/;"	f
enc	ffmpeg.c	/^    AVCodec *enc;$/;"	m	struct:AVOutputStream	file:
enc	ffmpeg/ffmpeg.c	/^    AVCodec *enc;$/;"	m	struct:AVOutputStream	file:
enc	libavcodec/flashsv2enc.c	/^    uint8_t *enc;$/;"	m	struct:Block	file:
enc	libavcodec/libx264.c	/^    x264_t         *enc;$/;"	m	struct:X264Context	file:
enc	libavcodec/libxavs.c	/^    xavs_t         *enc;$/;"	m	struct:XavsContext	file:
enc	libavcodec/parser.h	/^    struct MpegEncContext *enc;$/;"	m	struct:ParseContext1	typeref:struct:ParseContext1::MpegEncContext
enc	libavformat/movenc.h	/^    AVCodecContext *enc;$/;"	m	struct:MOVIndex
enc	libavformat/rmenc.c	/^    AVCodecContext *enc;$/;"	m	struct:__anon382	file:
enc_bitrate	libavcodec/libopencore-amr.c	/^    int   enc_bitrate;$/;"	m	struct:AMRContext	file:
enc_buf	libavcodec/libdiracenc.c	/^    unsigned char *enc_buf;$/;"	m	struct:FfmpegDiracEncoderParams	file:
enc_buf	libavcodec/libschroedingerenc.c	/^    unsigned char *enc_buf;$/;"	m	struct:FfmpegSchroEncoderParams	file:
enc_buf_size	libavcodec/libdiracenc.c	/^    int enc_buf_size;$/;"	m	struct:FfmpegDiracEncoderParams	file:
enc_buf_size	libavcodec/libschroedingerenc.c	/^    int enc_buf_size;$/;"	m	struct:FfmpegSchroEncoderParams	file:
enc_ctx	libavcodec/libdiracenc.c	/^    dirac_encoder_context_t enc_ctx;$/;"	m	struct:FfmpegDiracEncoderParams	file:
enc_dtx	libavcodec/libopencore-amr.c	/^    int   enc_dtx;$/;"	m	struct:AMRContext	file:
enc_frame_queue	libavcodec/libdiracenc.c	/^    FfmpegDiracSchroQueue enc_frame_queue;$/;"	m	struct:FfmpegDiracEncoderParams	file:
enc_frame_queue	libavcodec/libschroedingerenc.c	/^    FfmpegDiracSchroQueue enc_frame_queue;$/;"	m	struct:FfmpegSchroEncoderParams	file:
enc_mode	libavcodec/libopencore-amr.c	/^    int   enc_mode;$/;"	m	struct:AMRContext	file:
enc_multbl	libavutil/aes.c	/^static uint32_t enc_multbl[1][256];$/;"	v	file:
enc_multbl	libavutil/aes.c	/^static uint32_t enc_multbl[4][256];$/;"	v	file:
enc_name	libavformat/rtp.c	/^    const char enc_name[6];$/;"	m	struct:__anon392	file:
enc_name	libavformat/rtpdec.h	/^    const char enc_name[50];    \/* XXX: still why 50 ? ;-) *\/$/;"	m	struct:RTPDynamicProtocolHandler_s
enc_size	libavcodec/flashsv2enc.c	/^    int enc_size;$/;"	m	struct:Block	file:
enc_state	libavcodec/libopencore-amr.c	/^    void *enc_state;$/;"	m	struct:AMRContext	file:
enc_state	libavcodec/libspeexenc.c	/^    void *enc_state;$/;"	m	struct:__anon135	file:
encbuffer	libavcodec/flashsv2enc.c	/^    uint8_t *encbuffer;$/;"	m	struct:FlashSV2Context	file:
encbuffer	libavcodec/flashsvenc.c	/^    uint8_t        *encbuffer;$/;"	m	struct:FlashSVContext	file:
encode	libavcodec/avcodec.h	/^    int (*encode)(AVCodecContext *, uint8_t *buf, int buf_size, void *data);$/;"	m	struct:AVCodec
encode_15_7	libavcodec/flashsv2enc.c	/^static int encode_15_7(Palette * palette, Block * b, const uint8_t * src,$/;"	f	file:
encode_15_7_sl	libavcodec/flashsv2enc.c	/^static inline int encode_15_7_sl(Palette * palette, uint8_t * dest,$/;"	f	file:
encode_422_bitstream	libavcodec/huffyuv.c	/^static int encode_422_bitstream(HYuvContext *s, int offset, int count){$/;"	f	file:
encode_all_blocks	libavcodec/flashsv2enc.c	/^static int encode_all_blocks(FlashSV2Context * s, int keyframe)$/;"	f	file:
encode_band_info	libavcodec/aacenc.c	/^static void encode_band_info(AACEncContext *s, SingleChannelElement *sce)$/;"	f	file:
encode_bgr	libavcodec/flashsv2enc.c	/^static int encode_bgr(Block * b, const uint8_t * src, int stride)$/;"	f	file:
encode_bgr_bitstream	libavcodec/huffyuv.c	/^static int encode_bgr_bitstream(HYuvContext *s, int count){$/;"	f	file:
encode_bitstream	libavcodec/flashsvenc.c	/^static int encode_bitstream(FlashSVContext *s, AVFrame *p, uint8_t *buf,$/;"	f	file:
encode_block	libavcodec/flashsv2enc.c	/^static int encode_block(Palette * palette, Block * b, Block * prev,$/;"	f	file:
encode_block	libavcodec/mjpegenc.c	/^static void encode_block(MpegEncContext *s, DCTELEM *block, int n)$/;"	f	file:
encode_block	libavcodec/nellymoserenc.c	/^static void encode_block(NellyMoserEncodeContext *s, unsigned char *output, int output_size)$/;"	f	file:
encode_block	libavcodec/svq1enc.c	/^static int encode_block(SVQ1Context *s, uint8_t *src, uint8_t *ref, uint8_t *decoded, int stride, int level, int threshold, int lambda, int intra){$/;"	f	file:
encode_block	libavcodec/wmaenc.c	/^static int encode_block(WMACodecContext *s, float (*src_coefs)[BLOCK_MAX_SIZE], int total_gain){$/;"	f	file:
encode_blocks	libavcodec/snow.c	/^static void encode_blocks(SnowContext *s, int search){$/;"	f	file:
encode_cblk	libavcodec/j2kenc.c	/^static void encode_cblk(J2kEncoderContext *s, J2kT1Context *t1, J2kCblk *cblk, J2kTile *tile,$/;"	f	file:
encode_clnpass	libavcodec/j2kenc.c	/^static void encode_clnpass(J2kT1Context *t1, int width, int height, int bandno, int *nmsedec, int bpno)$/;"	f	file:
encode_close	libavcodec/ac3enc_combined.c	/^static av_cold int encode_close(AVCodecContext *avctx)$/;"	f	file:
encode_close	libavcodec/libtheoraenc.c	/^static av_cold int encode_close(AVCodecContext* avc_context)$/;"	f	file:
encode_close	libavcodec/v210enc.c	/^static av_cold int encode_close(AVCodecContext *avctx)$/;"	f	file:
encode_dc	libavcodec/mpeg12enc.c	/^static inline void encode_dc(MpegEncContext *s, int diff, int component)$/;"	f	file:
encode_dvb_subtitles	libavcodec/dvbsub.c	/^static int encode_dvb_subtitles(DVBSubtitleContext *s,$/;"	f	file:
encode_dvd_subtitles	libavcodec/dvdsubenc.c	/^static int encode_dvd_subtitles(uint8_t *outbuf, int outbuf_size,$/;"	f	file:
encode_end	libavcodec/huffyuv.c	/^static av_cold int encode_end(AVCodecContext *avctx)$/;"	f	file:
encode_end	libavcodec/lclenc.c	/^static av_cold int encode_end(AVCodecContext *avctx)$/;"	f	file:
encode_end	libavcodec/msvideo1enc.c	/^static av_cold int encode_end(AVCodecContext *avctx)$/;"	f	file:
encode_end	libavcodec/nellymoserenc.c	/^static av_cold int encode_end(AVCodecContext *avctx)$/;"	f	file:
encode_end	libavcodec/snow.c	/^static av_cold int encode_end(AVCodecContext *avctx)$/;"	f	file:
encode_end	libavcodec/zmbvenc.c	/^static av_cold int encode_end(AVCodecContext *avctx)$/;"	f	file:
encode_exp_vlc	libavcodec/wmaenc.c	/^static void encode_exp_vlc(WMACodecContext *s, int ch, const int *exp_param){$/;"	f	file:
encode_exponents	libavcodec/ac3enc.c	/^static void encode_exponents(AC3EncodeContext *s)$/;"	f	file:
encode_exponents_blk_ch	libavcodec/ac3enc.c	/^static void encode_exponents_blk_ch(uint8_t *exp, int nb_exps, int exp_strategy,$/;"	f	file:
encode_ext_header	libavcodec/wmv2enc.c	/^static int encode_ext_header(Wmv2Context *w){$/;"	f	file:
encode_frame	libavcodec/ac3enc_combined.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *frame,$/;"	f	file:
encode_frame	libavcodec/asv1.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_frame	libavcodec/cljr.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_frame	libavcodec/dcaenc.c	/^static int encode_frame(AVCodecContext *avctx, uint8_t *frame,$/;"	f	file:
encode_frame	libavcodec/dpxenc.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data)$/;"	f	file:
encode_frame	libavcodec/ffv1.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_frame	libavcodec/flacenc.c	/^static int encode_frame(FlacEncodeContext *s)$/;"	f	file:
encode_frame	libavcodec/huffyuv.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_frame	libavcodec/j2kenc.c	/^static int encode_frame(AVCodecContext *avctx,$/;"	f	file:
encode_frame	libavcodec/lclenc.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_frame	libavcodec/libtheoraenc.c	/^static int encode_frame(AVCodecContext* avc_context, uint8_t *outbuf,$/;"	f	file:
encode_frame	libavcodec/mpegaudioenc.c	/^static void encode_frame(MpegAudioContext *s,$/;"	f	file:
encode_frame	libavcodec/msvideo1enc.c	/^static int encode_frame(AVCodecContext *avctx, uint8_t *buf, int buf_size, void *data)$/;"	f	file:
encode_frame	libavcodec/nellymoserenc.c	/^static int encode_frame(AVCodecContext *avctx, uint8_t *frame, int buf_size, void *data)$/;"	f	file:
encode_frame	libavcodec/pngenc.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_frame	libavcodec/qtrleenc.c	/^static int encode_frame(QtrleEncContext *s, AVFrame *p, uint8_t *buf)$/;"	f	file:
encode_frame	libavcodec/sgienc.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf,$/;"	f	file:
encode_frame	libavcodec/snow.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_frame	libavcodec/tiffenc.c	/^static int encode_frame(AVCodecContext * avctx, unsigned char *buf,$/;"	f	file:
encode_frame	libavcodec/v210enc.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf,$/;"	f	file:
encode_frame	libavcodec/vcr1.c	/^static int encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_frame	libavcodec/wmaenc.c	/^static int encode_frame(WMACodecContext *s, float (*src_coefs)[BLOCK_MAX_SIZE], uint8_t *buf, int buf_size, int total_gain){$/;"	f	file:
encode_frame	libavcodec/zmbvenc.c	/^static int encode_frame(AVCodecContext *avctx, uint8_t *buf, int buf_size, void *data)$/;"	f	file:
encode_gray_bitstream	libavcodec/huffyuv.c	/^static int encode_gray_bitstream(HYuvContext *s, int count){$/;"	f	file:
encode_header	libavcodec/snow.c	/^static void encode_header(SnowContext *s){$/;"	f	file:
encode_high	libavcodec/g722.c	/^static inline int encode_high(const struct G722Band *state, int xhigh)$/;"	f	file:
encode_individual_channel	libavcodec/aacenc.c	/^static int encode_individual_channel(AVCodecContext *avctx, AACEncContext *s,$/;"	f	file:
encode_init	libavcodec/ac3enc_combined.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/asv1.c	/^static av_cold int encode_init(AVCodecContext *avctx){$/;"	f	file:
encode_init	libavcodec/cljr.c	/^static av_cold int encode_init(AVCodecContext *avctx){$/;"	f	file:
encode_init	libavcodec/dcaenc.c	/^static int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/dpxenc.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/ffv1.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/huffyuv.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/lclenc.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/libtheoraenc.c	/^static av_cold int encode_init(AVCodecContext* avc_context)$/;"	f	file:
encode_init	libavcodec/mpeg12enc.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/mpeg4videoenc.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/msvideo1enc.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/nellymoserenc.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/sgienc.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/snow.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/v210enc.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init	libavcodec/vcr1.c	/^static av_cold int encode_init(AVCodecContext *avctx){$/;"	f	file:
encode_init	libavcodec/wmaenc.c	/^static int encode_init(AVCodecContext * avctx){$/;"	f	file:
encode_init	libavcodec/zmbvenc.c	/^static av_cold int encode_init(AVCodecContext *avctx)$/;"	f	file:
encode_init_ls	libavcodec/jpeglsenc.c	/^static av_cold int encode_init_ls(AVCodecContext *ctx) {$/;"	f	file:
encode_line	libavcodec/ffv1.c	/^static av_always_inline int encode_line(FFV1Context *s, int w,$/;"	f	file:
encode_low	libavcodec/g722.c	/^static inline int encode_low(const struct G722Band* state, int xlow)$/;"	f	file:
encode_mb	libavcodec/asv1.c	/^static inline int encode_mb(ASV1Context *a, DCTELEM block[6][64]){$/;"	f	file:
encode_mb	libavcodec/mpegvideo_enc.c	/^static av_always_inline void encode_mb(MpegEncContext *s, int motion_x, int motion_y)$/;"	f	file:
encode_mb_hq	libavcodec/mpegvideo_enc.c	/^static inline void encode_mb_hq(MpegEncContext *s, MpegEncContext *backup, MpegEncContext *best, int type,$/;"	f	file:
encode_mb_internal	libavcodec/mpegvideo_enc.c	/^static av_always_inline void encode_mb_internal(MpegEncContext *s, int motion_x, int motion_y, int mb_block_height, int mb_block_count)$/;"	f	file:
encode_mb_skip_run	libavcodec/mpeg12enc.c	/^static inline void encode_mb_skip_run(MpegEncContext *s, int run){$/;"	f	file:
encode_ms_info	libavcodec/aacenc.c	/^static void encode_ms_info(PutBitContext *pb, ChannelElement *cpe)$/;"	f	file:
encode_nals	libavcodec/libx264.c	/^static int encode_nals(AVCodecContext *ctx, uint8_t *buf, int size,$/;"	f	file:
encode_nals	libavcodec/libxavs.c	/^static int encode_nals(AVCodecContext *ctx, uint8_t *buf,$/;"	f	file:
encode_packet	libavcodec/j2kenc.c	/^static int encode_packet(J2kEncoderContext *s, J2kResLevel *rlevel, int precno,$/;"	f	file:
encode_packets	libavcodec/j2kenc.c	/^static int encode_packets(J2kEncoderContext *s, J2kTile *tile, int tileno)$/;"	f	file:
encode_picture	libavcodec/mpegvideo_enc.c	/^static int encode_picture(MpegEncContext *s, int picture_number)$/;"	f	file:
encode_picture_lossless	libavcodec/ljpegenc.c	/^static int encode_picture_lossless(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_picture_ls	libavcodec/jpeglsenc.c	/^static int encode_picture_ls(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data){$/;"	f	file:
encode_plane	libavcodec/ffv1.c	/^static void encode_plane(FFV1Context *s, uint8_t *src, int w, int h, int stride, int plane_index){$/;"	f	file:
encode_pulses	libavcodec/aacenc.c	/^static void encode_pulses(AACEncContext *s, Pulse *pulse)$/;"	f	file:
encode_q_branch	libavcodec/snow.c	/^static int encode_q_branch(SnowContext *s, int level, int x, int y){$/;"	f	file:
encode_q_branch2	libavcodec/snow.c	/^static void encode_q_branch2(SnowContext *s, int level, int x, int y){$/;"	f	file:
encode_qlogs	libavcodec/snow.c	/^static void encode_qlogs(SnowContext *s){$/;"	f	file:
encode_refpass	libavcodec/j2kenc.c	/^static void encode_refpass(J2kT1Context *t1, int width, int height, int *nmsedec, int bpno)$/;"	f	file:
encode_residual_ch	libavcodec/flacenc.c	/^static int encode_residual_ch(FlacEncodeContext *s, int ch)$/;"	f	file:
encode_residual_fixed	libavcodec/flacenc.c	/^static void encode_residual_fixed(int32_t *res, const int32_t *smp, int n,$/;"	f	file:
encode_residual_lpc	libavcodec/flacenc.c	/^static void encode_residual_lpc(int32_t *res, const int32_t *smp, int n,$/;"	f	file:
encode_residual_lpc_unrolled	libavcodec/flacenc.c	/^static av_always_inline void encode_residual_lpc_unrolled(int32_t *res,$/;"	f	file:
encode_rgb48_10bit	libavcodec/dpxenc.c	/^static void encode_rgb48_10bit(AVCodecContext *avctx, const AVPicture *pic, uint8_t *dst)$/;"	f	file:
encode_rgb_frame	libavcodec/ffv1.c	/^static void encode_rgb_frame(FFV1Context *s, uint32_t *src, int w, int h, int stride){$/;"	f	file:
encode_scalar	libavcodec/alacenc.c	/^static void encode_scalar(AlacEncodeContext *s, int x, int k, int write_sample_size)$/;"	f	file:
encode_scale_factors	libavcodec/aacenc.c	/^static void encode_scale_factors(AVCodecContext *avctx, AACEncContext *s,$/;"	f	file:
encode_sigpass	libavcodec/j2kenc.c	/^static void encode_sigpass(J2kT1Context *t1, int width, int height, int bandno, int *nmsedec, int bpno)$/;"	f	file:
encode_slice	libavcodec/ffv1.c	/^static int encode_slice(AVCodecContext *c, void *arg){$/;"	f	file:
encode_spectral_coeffs	libavcodec/aacenc.c	/^static void encode_spectral_coeffs(AACEncContext *s, SingleChannelElement *sce)$/;"	f	file:
encode_strip	libavcodec/tiffenc.c	/^static int encode_strip(TiffEncoderContext * s, const int8_t * src,$/;"	f	file:
encode_subband	libavcodec/snow.c	/^static int encode_subband(SnowContext *s, SubBand *b, IDWTELEM *src, IDWTELEM *parent, int stride, int orientation){$/;"	f	file:
encode_subband_c0run	libavcodec/snow.c	/^static int encode_subband_c0run(SnowContext *s, SubBand *b, IDWTELEM *src, IDWTELEM *parent, int stride, int orientation){$/;"	f	file:
encode_superframe	libavcodec/wmaenc.c	/^static int encode_superframe(AVCodecContext *avctx,$/;"	f	file:
encode_thread	libavcodec/mpegvideo_enc.c	/^static int encode_thread(AVCodecContext *c, void *arg){$/;"	f	file:
encode_tile	libavcodec/j2kenc.c	/^static int encode_tile(J2kEncoderContext *s, J2kTile *tile, int tileno)$/;"	f	file:
encode_window_bands_info	libavcodec/aaccoder.c	/^static void encode_window_bands_info(AACEncContext *s, SingleChannelElement *sce,$/;"	f	file:
encode_window_bands_info	libavcodec/aacenc.h	/^    void (*encode_window_bands_info)(struct AACEncContext *s, SingleChannelElement *sce,$/;"	m	struct:AACCoefficientsEncoder
encode_zlib	libavcodec/flashsv2enc.c	/^static int encode_zlib(Block * b, uint8_t * buf, unsigned long *buf_size, int comp)$/;"	f	file:
encode_zlibprime	libavcodec/flashsv2enc.c	/^static int encode_zlibprime(Block * b, Block * prime, uint8_t * buf,$/;"	f	file:
encoded_picture	libavcodec/libxvidff.c	/^    AVFrame encoded_picture;       \/**< Encoded frame information *\/$/;"	m	struct:xvid_context	file:
encoder	libavcodec/libschroedingerenc.c	/^    SchroEncoder* encoder;$/;"	m	struct:FfmpegSchroEncoderParams	file:
encoder	libavcodec/libvpxenc.c	/^    struct vpx_codec_ctx encoder;$/;"	m	struct:VP8EncoderContext	typeref:struct:VP8EncoderContext::vpx_codec_ctx	file:
encoder_handle	libavcodec/libxvidff.c	/^    void *encoder_handle;          \/**< Handle for Xvid encoder *\/$/;"	m	struct:xvid_context	file:
encoding	libavcodec/mpegvideo.h	/^    int encoding;     \/\/\/< true if we are encoding (vs decoding)$/;"	m	struct:MpegEncContext
encoding_needed	ffmpeg.c	/^    int encoding_needed;     \/* true if encoding needed for this stream *\/$/;"	m	struct:AVOutputStream	file:
encoding_needed	ffmpeg/ffmpeg.c	/^    int encoding_needed;     \/* true if encoding needed for this stream *\/$/;"	m	struct:AVOutputStream	file:
encodings	libavformat/matroskadec.c	/^    EbmlList encodings;$/;"	m	struct:__anon361	file:
end	libavcodec/ass_split.h	/^    int   end;      \/**< end time of the dialog in centiseconds *\/$/;"	m	struct:__anon250
end	libavcodec/ass_split.h	/^    void (*end)(void *priv);$/;"	m	struct:__anon252
end	libavcodec/psymodel.h	/^    void (*end)    (FFPsyContext *apc);$/;"	m	struct:FFPsyModel
end	libavcodec/rv34.h	/^    int start, end;        \/\/\/< start and end macroblocks of the slice$/;"	m	struct:SliceInfo
end	libavcodec/srtenc.c	/^    char *end;$/;"	m	struct:__anon139	file:
end	libavcodec/vorbisdec.c	/^    uint32_t      end;$/;"	m	struct:__anon260	file:
end	libavcodec/vorbisenc.c	/^    int end;$/;"	m	struct:__anon191	file:
end	libavcodec/vp56.h	/^    const uint8_t *end;$/;"	m	struct:__anon220
end	libavformat/avformat.h	/^    int64_t start, end;     \/\/\/< chapter start\/end time in time_base units$/;"	m	struct:AVChapter
end	libavformat/matroskadec.c	/^    uint64_t end;$/;"	m	struct:__anon363	file:
end	libavutil/fifo.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:AVFifoBuffer
end_code	libavcodec/lzw.c	/^    int end_code;$/;"	m	struct:LZWState	file:
end_code	libavcodec/lzwenc.c	/^    int end_code;            \/\/\/< Value of end code$/;"	m	struct:LZWEncodeState	file:
end_display_time	libavcodec/avcodec.h	/^    uint32_t end_display_time; \/* relative to packet pts, in ms *\/$/;"	m	struct:AVSubtitle
end_ebml_master	libavformat/matroskaenc.c	/^static void end_ebml_master(AVIOContext *pb, ebml_master master)$/;"	f	file:
end_frame	libavcodec/avcodec.h	/^    int (*end_frame)(AVCodecContext *avctx);$/;"	m	struct:AVHWAccel
end_frame	libavcodec/avcodec.h	/^    int end_frame;$/;"	m	struct:RcOverride
end_frame	libavcodec/dxva2_h264.c	/^static int end_frame(AVCodecContext *avctx)$/;"	f	file:
end_frame	libavcodec/dxva2_mpeg2.c	/^static int end_frame(AVCodecContext *avctx)$/;"	f	file:
end_frame	libavcodec/dxva2_vc1.c	/^static int end_frame(AVCodecContext *avctx)$/;"	f	file:
end_frame	libavcodec/vaapi_h264.c	/^static int end_frame(AVCodecContext *avctx)$/;"	f	file:
end_frame	libavfilter/avfilter.h	/^    void (*end_frame)(AVFilterLink *link);$/;"	m	struct:AVFilterPad
end_frame	libavfilter/vf_blackframe.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_crop.c	/^static void end_frame(AVFilterLink *link)$/;"	f	file:
end_frame	libavfilter/vf_cropdetect.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_drawtext.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_fade.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_fieldorder.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_fifo.c	/^static void end_frame(AVFilterLink *inlink) { }$/;"	f	file:
end_frame	libavfilter/vf_frei0r.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_gradfun.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_hqdn3d.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_libopencv.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_mp.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_overlay.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_pad.c	/^static void end_frame(AVFilterLink *link)$/;"	f	file:
end_frame	libavfilter/vf_select.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_showinfo.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_split.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_transpose.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vf_unsharp.c	/^static void end_frame(AVFilterLink *link)$/;"	f	file:
end_frame	libavfilter/vf_yadif.c	/^static void end_frame(AVFilterLink *link)$/;"	f	file:
end_frame	libavfilter/vsink_buffer.c	/^static void end_frame(AVFilterLink *inlink)$/;"	f	file:
end_frame	libavfilter/vsink_nullsink.c	/^static void end_frame(AVFilterLink *link)$/;"	f	file:
end_frame_filter	libavfilter/vf_libopencv.c	/^    void (*end_frame_filter)(AVFilterContext *ctx, IplImage *inimg, IplImage *outimg);$/;"	m	struct:__anon13	file:
end_frame_filter	libavfilter/vf_libopencv.c	/^    void (*end_frame_filter)(AVFilterContext *ctx, IplImage *inimg, IplImage *outimg);$/;"	m	struct:__anon16	file:
end_freq	libavcodec/ac3dec.h	/^    int end_freq[AC3_MAX_CHANNELS];         \/\/\/< end frequency bin                      (endmant)$/;"	m	struct:__anon88
end_freq	libavcodec/ac3enc.h	/^    int      end_freq[AC3_MAX_CHANNELS];        \/\/\/< end frequency bin                  (endmant)$/;"	m	struct:AC3Block
end_header	libavformat/asfenc.c	/^static void end_header(AVIOContext *pb, int64_t pos)$/;"	f	file:
end_mb_y	libavcodec/mpegvideo.h	/^    int end_mb_y;              \/\/\/< end   mb_y of this thread (so current thread should process start_mb_y <= row < end_mb_y)$/;"	m	struct:MpegEncContext
end_of_row_loop	libavcodec/arm/jrevdct_arm.S	/^end_of_row_loop:$/;"	l
end_of_section_reached	libavformat/mpegts.c	/^    unsigned int end_of_section_reached:1;$/;"	m	struct:MpegTSSectionFilter	file:
end_of_segment	libavformat/applehttp.c	/^    int end_of_segment;$/;"	m	struct:AppleHTTPContext	file:
end_of_stream	libavcodec/libxavs.c	/^    int             end_of_stream;$/;"	m	struct:XavsContext	file:
end_padded	libavcodec/flac_parser.c	/^    int end_padded;                \/**< specifies if fifo_buf's end is padded *\/$/;"	m	struct:FLACParseContext	file:
end_tag_be	libavformat/mmf.c	/^static void end_tag_be(AVIOContext *pb, int64_t start)$/;"	f	file:
end_time	libavformat/sdp.c	/^    int end_time;         \/**< session end time (NTP time, in seconds),$/;"	m	struct:sdp_session_level	file:
end_timecode	libavformat/matroskadec.c	/^    int64_t end_timecode;$/;"	m	struct:__anon361	file:
endconst	libavcodec/arm/fft_fixed_neon.S	/^endconst$/;"	l
endconst	libavcodec/arm/jrevdct_arm.S	/^endconst$/;"	l
endconst	libavcodec/arm/vp8dsp_neon.S	/^endconst$/;"	l
endfunc	libavcodec/arm/ac3dsp_arm.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/ac3dsp_armv6.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/ac3dsp_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/dcadsp_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/dsputil_arm.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/dsputil_armv6.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/dsputil_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/dsputil_vfp.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/fft_fixed_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/fft_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/fmtconvert_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/fmtconvert_vfp.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/h264dsp_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/h264idct_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/h264pred_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/int_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/jrevdct_arm.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/mdct_fixed_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/mdct_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/mpegaudiodsp_fixed_armv6.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/mpegvideo_armv5te_s.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/mpegvideo_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/rdft_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/simple_idct_armv5te.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/simple_idct_armv6.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/simple_idct_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/synth_filter_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/vp3dsp_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/vp56dsp_neon.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/vp8_armv6.S	/^endfunc$/;"	l
endfunc	libavcodec/arm/vp8dsp_neon.S	/^endfunc$/;"	l
endstruc	libavcodec/x86/fft_mmx.asm	/^endstruc$/;"	l
energy	libavcodec/aacpsy.c	/^    float energy;       \/\/\/< band energy$/;"	m	struct:AacPsyBand	file:
energy	libavcodec/psymodel.h	/^    float energy;$/;"	m	struct:FFPsyBand
energy_history	libavcodec/sipr.h	/^    float energy_history[4];$/;"	m	struct:__anon235
energy_mean	libavcodec/amrnbdata.h	/^static const float energy_mean[8] = {$/;"	v
energy_pred_fac	libavcodec/amrnbdata.h	/^static const float energy_pred_fac[4] = { 0.19, 0.34, 0.58, 0.68 };$/;"	v
energy_pred_fac	libavcodec/amrwbdata.h	/^static const float energy_pred_fac[4] = { 0.2, 0.3, 0.4, 0.5 };$/;"	v
enhancement_type	libavcodec/mpegvideo.h	/^    int enhancement_type;$/;"	m	struct:MpegEncContext
enlarge_roq_mb4	libavcodec/roqvideoenc.c	/^static void enlarge_roq_mb4(uint8_t base[3*16], uint8_t u[3*64])$/;"	f	file:
enqueue_packet	libavformat/rtpdec.c	/^static void enqueue_packet(RTPDemuxContext *s, uint8_t *buf, int len)$/;"	f	file:
entangled_thread_counter	libavcodec/utils.c	/^static int volatile entangled_thread_counter=0;$/;"	v	file:
entries	libavcodec/tiffenc.c	/^    uint8_t entries[TIFF_MAX_ENTRY*12]; \/\/\/< entires in header$/;"	m	struct:TiffEncoderContext	file:
entries	libavcodec/vp3.c	/^    int entries;$/;"	m	struct:Vp3DecodeContext	file:
entries	libavformat/matroskaenc.c	/^    mkv_cuepoint    *entries;$/;"	m	struct:__anon477	file:
entries	libavformat/matroskaenc.c	/^    mkv_seekhead_entry      *entries;$/;"	m	struct:mkv_seekhead	file:
entries	libavformat/movenc.h	/^    unsigned int entries;$/;"	m	struct:MOVIentry
entropy_decode	libavcodec/apedec.c	/^static void entropy_decode(APEContext * ctx, int blockstodecode, int stereo)$/;"	f	file:
entry	libavcodec/ratecontrol.h	/^    RateControlEntry *entry;$/;"	m	struct:RateControlContext
entry	libavformat/avienc.c	/^    int         entry;$/;"	m	struct:AVIIndex	file:
entry	libavformat/avienc.c	/^    int entry;$/;"	m	struct:__anon344	file:
entry	libavformat/movenc.h	/^    int         entry;$/;"	m	struct:MOVIndex
ents_allocated	libavformat/avienc.c	/^    int         ents_allocated;$/;"	m	struct:AVIIndex	file:
enu_free	libavformat/nut.c	/^static int enu_free(void *opaque, void *elem)$/;"	f	file:
env_facs	libavcodec/sbr.h	/^    float              env_facs[6][48];$/;"	m	struct:__anon56
envelope_quant_index	libavcodec/cook.c	/^    VLC                 envelope_quant_index[13];$/;"	m	struct:cook	file:
envelope_quant_index_huffbits	libavcodec/cookdata.h	/^static const uint8_t envelope_quant_index_huffbits[13][24] = {$/;"	v
envelope_quant_index_huffcodes	libavcodec/cookdata.h	/^static const uint16_t envelope_quant_index_huffcodes[13][24] = {$/;"	v
eob_run_base	libavcodec/vp3data.h	/^static const int eob_run_base[7] = {$/;"	v
eob_run_get_bits	libavcodec/vp3data.h	/^static const int eob_run_get_bits[7] = {$/;"	v
eob_sym	libavcodec/ivi_common.h	/^    uint8_t     eob_sym; \/\/\/< end of block symbol$/;"	m	struct:__anon104
eof	libavcodec/libvorbis.c	/^    int eof;$/;"	m	struct:OggVorbisContext	file:
eof	libavformat/crypto.c	/^    int eof;$/;"	m	struct:__anon432	file:
eof	libavformat/sapdec.c	/^    int eof;$/;"	m	struct:SAPState	file:
eof_reached	ffmpeg.c	/^    int eof_reached;      \/* true if eof reached *\/$/;"	m	struct:AVInputFile	file:
eof_reached	ffmpeg/ffmpeg.c	/^    int eof_reached;      \/* true if eof reached *\/$/;"	m	struct:AVInputFile	file:
eof_reached	libavformat/avio.h	/^    int eof_reached;        \/**< true if eof reached *\/$/;"	m	struct:__anon396
eos	libavformat/oggenc.c	/^    int eos;$/;"	m	struct:__anon380	file:
eos_pulled	libavcodec/libdiracenc.c	/^    int eos_pulled;$/;"	m	struct:FfmpegDiracEncoderParams	file:
eos_pulled	libavcodec/libschroedingerdec.c	/^    int eos_pulled;$/;"	m	struct:FfmpegSchroDecoderParams	file:
eos_pulled	libavcodec/libschroedingerenc.c	/^    int eos_pulled;$/;"	m	struct:FfmpegSchroEncoderParams	file:
eos_signalled	libavcodec/libdiracenc.c	/^    int eos_signalled;$/;"	m	struct:FfmpegDiracEncoderParams	file:
eos_signalled	libavcodec/libschroedingerdec.c	/^    int eos_signalled;$/;"	m	struct:FfmpegSchroDecoderParams	file:
eos_signalled	libavcodec/libschroedingerenc.c	/^    int eos_signalled;$/;"	m	struct:FfmpegSchroEncoderParams	file:
epoch	libavformat/wtvdec.c	/^    int64_t epoch;$/;"	m	struct:__anon323	file:
epzs_motion_search2	libavcodec/motion_est_template.c	/^static int epzs_motion_search2(MpegEncContext * s,$/;"	f	file:
epzs_motion_search4	libavcodec/motion_est_template.c	/^static int epzs_motion_search4(MpegEncContext * s,$/;"	f	file:
epzs_motion_search_internal	libavcodec/motion_est_template.c	/^static av_always_inline int epzs_motion_search_internal(MpegEncContext * s, int *mx_ptr, int *my_ptr,$/;"	f	file:
eq	libavfilter/libmpcodecs/vf_qp.c	/^        char eq[200];$/;"	m	struct:vf_priv_s	file:
eq2_param_t	libavfilter/libmpcodecs/vf_eq2.c	/^typedef struct eq2_param_t {$/;"	s	file:
eq2_param_t	libavfilter/libmpcodecs/vf_eq2.c	/^} eq2_param_t;$/;"	t	typeref:struct:eq2_param_t	file:
erase_line	libavcodec/ansi.c	/^static void erase_line(AVCodecContext * avctx, int xoffset, int xlength)$/;"	f	file:
erase_screen	libavcodec/ansi.c	/^static void erase_screen(AVCodecContext *avctx)$/;"	f	file:
erasure_count	libavcodec/qcelpdec.c	/^    uint8_t  erasure_count;$/;"	m	struct:__anon225	file:
erode_end_frame_filter	libavfilter/vf_libopencv.c	/^static void erode_end_frame_filter(AVFilterContext *ctx, IplImage *inimg, IplImage *outimg)$/;"	f	file:
err	libavfilter/vf_drawtext.c	/^    int err;$/;"	m	struct:ft_error	file:
err_msg	libavfilter/vf_drawtext.c	/^    const char *err_msg;$/;"	m	struct:ft_error	file:
error	libavcodec/apedec.c	/^    int error;$/;"	m	struct:APEContext	file:
error	libavcodec/avcodec.h	/^    uint64_t error[4];$/;"	m	struct:AVCodecContext
error	libavcodec/elbg.c	/^    int error;$/;"	m	struct:__anon247	file:
error	libavcodec/tta.c	/^    int32_t shift, round, error, mode;$/;"	m	struct:TTAFilter	file:
error	libavformat/avio.h	/^    int error;              \/**< contains the error code or 0 if no error happened *\/$/;"	m	struct:__anon396
error	libavformat/wtvdec.c	/^    int error;$/;"	m	struct:__anon321	file:
error	libavutil/lzo.c	/^    int error;$/;"	m	struct:LZOContext	file:
error	libpostproc/postprocess_internal.h	/^    int error;                      \/\/\/< non zero on error$/;"	m	struct:PPMode
error_concealment	ffplay.c	/^static int error_concealment = 3;$/;"	v	file:
error_concealment	libavcodec/avcodec.h	/^    int error_concealment;$/;"	m	struct:AVCodecContext
error_count	libavcodec/mpegvideo.h	/^    int error_count, error_occurred;$/;"	m	struct:MpegEncContext
error_limit	libavcodec/wavpack.c	/^    int slow_level, error_limit;$/;"	m	struct:WvChannel	file:
error_occurred	libavcodec/mpegvideo.h	/^    int error_count, error_occurred;$/;"	m	struct:MpegEncContext
error_rate	libavcodec/avcodec.h	/^    int error_rate;$/;"	m	struct:AVCodecContext
error_recognition	ffplay.c	/^static int error_recognition = FF_ER_CAREFUL;$/;"	v	file:
error_recognition	libavcodec/avcodec.h	/^    int error_recognition;$/;"	m	struct:AVCodecContext
error_recognition	libavcodec/mpegaudiodec.c	/^    int error_recognition;$/;"	m	struct:MPADecodeContext	file:
error_recognition	libavcodec/mpegvideo.h	/^    int error_recognition;$/;"	m	struct:MpegEncContext
error_status_table	libavcodec/mpegvideo.h	/^    uint8_t *error_status_table;       \/\/\/< table of the error status of each MB$/;"	m	struct:MpegEncContext
error_sum	libavcodec/ffv1.c	/^    uint16_t error_sum;$/;"	m	struct:VlcState	file:
esc3_level_length	libavcodec/mpegvideo.h	/^    int esc3_level_length;$/;"	m	struct:MpegEncContext
esc3_run_length	libavcodec/mpegvideo.h	/^    int esc3_run_length;$/;"	m	struct:MpegEncContext
esc_len	libavcodec/wmaprodec.c	/^    int8_t           esc_len;                       \/\/\/< length of escaped coefficients$/;"	m	struct:WMAProDecodeCtx	file:
esc_sym	libavcodec/ivi_common.h	/^    uint8_t     esc_sym; \/\/\/< escape symbol$/;"	m	struct:__anon104
escape124_decode_close	libavcodec/escape124.c	/^static av_cold int escape124_decode_close(AVCodecContext *avctx)$/;"	f	file:
escape124_decode_frame	libavcodec/escape124.c	/^static int escape124_decode_frame(AVCodecContext *avctx,$/;"	f	file:
escape124_decode_init	libavcodec/escape124.c	/^static av_cold int escape124_decode_init(AVCodecContext *avctx)$/;"	f	file:
escape_FF	libavcodec/mjpegenc.c	/^static void escape_FF(MpegEncContext *s, int start)$/;"	f	file:
escapes	libavcodec/smacker.c	/^    int escapes[3];$/;"	m	struct:DBCtx	file:
essence_codec_ul	libavformat/mxfdec.c	/^    UID essence_codec_ul;$/;"	m	struct:__anon443	file:
essence_container_count	libavformat/mxfenc.c	/^    int essence_container_count;$/;"	m	struct:MXFContext	file:
essence_container_ul	libavformat/mxfdec.c	/^    UID essence_container_ul;$/;"	m	struct:__anon443	file:
est_run	libavcodec/intrax8.h	/^    int est_run;$/;"	m	struct:__anon134
estimate_best_b_count	libavcodec/mpegvideo_enc.c	/^static int estimate_best_b_count(MpegEncContext *s){$/;"	f	file:
estimate_best_order	libavcodec/lpc.c	/^static int estimate_best_order(double *ref, int min_order, int max_order)$/;"	f	file:
estimate_motion_thread	libavcodec/mpegvideo_enc.c	/^static int estimate_motion_thread(AVCodecContext *c, void *arg){$/;"	f	file:
estimate_qp	libavcodec/mpegvideo_enc.c	/^static int estimate_qp(MpegEncContext *s, int dry_run){$/;"	f	file:
estimate_stereo_mode	libavcodec/alacenc.c	/^static int estimate_stereo_mode(int32_t *left_ch, int32_t *right_ch, int n)$/;"	f	file:
estimate_stereo_mode	libavcodec/flacenc.c	/^static int estimate_stereo_mode(int32_t *left_ch, int32_t *right_ch, int n)$/;"	f	file:
eval_dist	libavcodec/roqvideoenc.c	/^    int eval_dist[4];$/;"	m	struct:__anon72	file:
eval_dist	libavcodec/roqvideoenc.c	/^    int eval_dist[4];$/;"	m	struct:__anon73	file:
eval_error_cell	libavcodec/elbg.c	/^static int eval_error_cell(elbg_data *elbg, int *centroid, cell *cells)$/;"	f	file:
eval_expr	libavutil/eval.c	/^static double eval_expr(Parser *p, AVExpr *e)$/;"	f	file:
eval_ir	libavcodec/sipr.c	/^static void eval_ir(const float *Az, int pitch_lag, float *freq,$/;"	f	file:
eval_lpc_spectrum	libavcodec/twinvq.c	/^static float eval_lpc_spectrum(const float *lsp, float cos_val, int order)$/;"	f	file:
eval_lpcenv	libavcodec/twinvq.c	/^static void eval_lpcenv(TwinContext *tctx, const float *cos_vals, float *lpc)$/;"	f	file:
eval_lpcenv_2parts	libavcodec/twinvq.c	/^static void eval_lpcenv_2parts(TwinContext *tctx, enum FrameType ftype,$/;"	f	file:
eval_lpcenv_or_interp	libavcodec/twinvq.c	/^static inline void eval_lpcenv_or_interp(TwinContext *tctx,$/;"	f	file:
eval_motion_dist	libavcodec/roqvideoenc.c	/^static int eval_motion_dist(RoqContext *enc, int x, int y, motion_vect vect,$/;"	f	file:
eval_sse	libavcodec/roqvideoenc.c	/^static inline int eval_sse(uint8_t *a, uint8_t *b, int count)$/;"	f	file:
evaluate_utility_inc	libavcodec/elbg.c	/^static void evaluate_utility_inc(elbg_data *elbg)$/;"	f	file:
even	libavfilter/libmpcodecs/vf_detc.c	/^        int even;$/;"	m	struct:metrics	file:
even	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct { unsigned int even, odd, noise, temp; } sad;$/;"	m	struct:frame_stats::__anon35	file:
even	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned short int even;$/;"	m	struct:metrics	file:
even_table	libavcodec/sh4/idct_sh4.c	/^static const float even_table[] __attribute__ ((aligned(8))) = {$/;"	v	file:
event	libavdevice/dshow.c	/^    HANDLE event;$/;"	m	struct:dshow_ctx	file:
event	libavdevice/vfwcap.c	/^    HANDLE event;$/;"	m	struct:vfw_ctx	file:
event	libavformat/assdec.c	/^    uint8_t **event;$/;"	m	struct:ASSContext	file:
event_buffer	libavformat/assdec.c	/^    uint8_t *event_buffer;$/;"	m	struct:ASSContext	file:
event_cmp	libavformat/assdec.c	/^static int event_cmp(uint8_t **a, uint8_t **b)$/;"	f	file:
event_count	libavformat/assdec.c	/^    unsigned int event_count;$/;"	m	struct:ASSContext	file:
event_index	libavformat/assdec.c	/^    unsigned int event_index;$/;"	m	struct:ASSContext	file:
event_loop	ffplay.c	/^static void event_loop(void)$/;"	f	file:
events	libavformat/avio.h	/^    int events;$/;"	m	struct:URLPollEntry
events	libavformat/os_support.h	/^    short events;  \/* events to look for *\/$/;"	m	struct:pollfd
exchange	libavcodec/mqcdec.c	/^static int exchange(MqcState *mqc, uint8_t *cxstate, int lps)$/;"	f	file:
exchange_uv	libavcodec/mpeg12.c	/^static void exchange_uv(MpegEncContext *s){$/;"	f	file:
excitation	libavcodec/amrnbdec.c	/^    float                       *excitation; \/\/\/< pointer to the current excitation vector in excitation_buf$/;"	m	struct:AMRContext	file:
excitation	libavcodec/amrwbdec.c	/^    float                            *excitation; \/\/\/< points to current excitation in excitation_buf[]$/;"	m	struct:__anon64	file:
excitation	libavcodec/sipr.h	/^    float excitation[L_INTERPOL + PITCH_MAX + 2 * L_SUBFR_16k];$/;"	m	struct:__anon235
excitation_buf	libavcodec/amrnbdec.c	/^    float excitation_buf[PITCH_DELAY_MAX + LP_FILTER_ORDER + 1 + AMR_SUBFRAME_SIZE]; \/\/\/< current excitation and all necessary excitation history$/;"	m	struct:AMRContext	file:
excitation_buf	libavcodec/amrwbdec.c	/^    float excitation_buf[AMRWB_P_DELAY_MAX + LP_ORDER + 2 + AMRWB_SFR_SIZE]; \/\/\/< current excitation and all necessary excitation history$/;"	m	struct:__anon64	file:
excitation_history	libavcodec/wmavoice.c	/^    float excitation_history[MAX_SIGNAL_HISTORY];$/;"	m	struct:__anon157	file:
exclude_mask	libavcodec/aac.h	/^    int exclude_mask[MAX_CHANNELS];                 \/\/\/< Channels to be excluded from DRC processing.$/;"	m	struct:__anon241
execute	libavcodec/avcodec.h	/^    int (*execute)(struct AVCodecContext *c, int (*func)(struct AVCodecContext *c2, void *arg), void *arg2, int *ret, int count, int size);$/;"	m	struct:AVCodecContext
execute2	libavcodec/avcodec.h	/^    int (*execute2)(struct AVCodecContext *c, int (*func)(struct AVCodecContext *c2, void *arg, int jobnr, int threadnr), void *arg2, int *ret, int count);$/;"	m	struct:AVCodecContext
execute_code	libavcodec/ansi.c	/^static int execute_code(AVCodecContext * avctx, int c)$/;"	f	file:
execute_decode_slices	libavcodec/h264.c	/^static void execute_decode_slices(H264Context *h, int context_count){$/;"	f	file:
exesuf	configure	/^exesuf() {$/;"	f
exit	doc/examples/muxing-example.c	37;"	d	file:
exit	libavcodec/dvdsubdec.c	436;"	d	file:
exit	libavcodec/fft-test.c	40;"	d	file:
exit	libavcodec/motion-test.c	36;"	d	file:
exit	libavutil/internal.h	149;"	d
exit	libavutil/internal.h	150;"	d
exit	tests/seek_test.c	30;"	d	file:
exit_on_error	ffmpeg.c	/^static int exit_on_error = 0;$/;"	v	file:
exit_on_error	ffmpeg/ffmpeg.c	/^static int exit_on_error = 0;$/;"	v	file:
exit_on_keydown	ffplay.c	/^static int exit_on_keydown;$/;"	v	file:
exit_on_mousedown	ffplay.c	/^static int exit_on_mousedown;$/;"	v	file:
exp	libavcodec/ac3enc.h	/^    uint8_t  **exp;                             \/\/\/< original exponents$/;"	m	struct:AC3Block
exp	libavcodec/g726.c	/^    uint8_t exp;    \/**< 4bit exponent *\/$/;"	m	struct:Float11	file:
exp	libavcodec/qdm2.c	/^    int16_t exp;$/;"	m	struct:__anon198	file:
exp	libavutil/softfloat.h	/^    int32_t  exp;$/;"	m	struct:SoftFloat
exp16_table	tests/tiny_psnr.c	/^uint64_t exp16_table[21]={$/;"	v
exp2	libavutil/libm.h	32;"	d
exp2	libavutil/libm.h	33;"	d
exp2a	libavcodec/celp_math.c	/^static const uint16_t exp2a[]=$/;"	v	file:
exp2b	libavcodec/celp_math.c	/^static const uint16_t exp2b[]=$/;"	v	file:
exp2f	libavutil/libm.h	37;"	d
exp2f	libavutil/libm.h	38;"	d
exp_buffer	libavcodec/ac3enc.h	/^    uint8_t *exp_buffer;$/;"	m	struct:AC3EncodeContext
exp_ref_block	libavcodec/ac3enc.h	/^    uint8_t exp_ref_block[AC3_MAX_CHANNELS][AC3_MAX_BLOCKS]; \/\/\/< reference blocks for EXP_REUSE$/;"	m	struct:AC3EncodeContext
exp_strategy	libavcodec/ac3dec.h	/^    int exp_strategy[AC3_MAX_BLOCKS][AC3_MAX_CHANNELS]; \/\/\/< exponent strategies        (expstr)$/;"	m	struct:__anon88
exp_strategy	libavcodec/ac3enc.h	/^    uint8_t exp_strategy[AC3_MAX_CHANNELS][AC3_MAX_BLOCKS]; \/\/\/< exponent strategies$/;"	m	struct:AC3EncodeContext
exp_table_fixed	libavcodec/mpegaudio_tablegen.h	/^static uint32_t exp_table_fixed[512];$/;"	v
exp_table_float	libavcodec/mpegaudio_tablegen.h	/^static float exp_table_float[512];$/;"	v
exp_vlc	libavcodec/wma.h	/^    VLC exp_vlc;$/;"	m	struct:WMACodecContext
expand_category	libavcodec/cook.c	/^static inline void expand_category(COOKContext *q, int* category,$/;"	f	file:
expand_rle_row	libavcodec/sgidec.c	/^static int expand_rle_row(const uint8_t *in_buf, const uint8_t* in_end,$/;"	f	file:
expanded_text	libavfilter/vf_drawtext.c	/^    uint8_t *expanded_text;         \/\/\/< used to contain the strftime()-expanded text$/;"	m	struct:__anon24	file:
expanded_text_size	libavfilter/vf_drawtext.c	/^    size_t   expanded_text_size;    \/\/\/< size in bytes of the expanded_text buffer$/;"	m	struct:__anon24	file:
expbits_tab	libavcodec/cookdata.h	/^static const int expbits_tab[8] = {$/;"	v
expected_bits	libavcodec/ratecontrol.h	/^    uint64_t expected_bits;$/;"	m	struct:RateControlEntry
expected_prior	libavformat/rtpdec.h	/^    int expected_prior;         \/\/\/< packets expected in last interval$/;"	m	struct:__anon333
expn	libavcodec/j2k.h	/^    uint8_t  expn[32 * 3]; \/\/\/< quantization exponent$/;"	m	struct:__anon211
exponent	libavutil/intfloat_readwrite.h	/^    uint8_t exponent[2];$/;"	m	struct:AVExtFloat
exponent_band_22050	libavcodec/wmadata.h	/^static const uint8_t exponent_band_22050[3][25] = {$/;"	v
exponent_band_32000	libavcodec/wmadata.h	/^static const uint8_t exponent_band_32000[3][25] = {$/;"	v
exponent_band_44100	libavcodec/wmadata.h	/^static const uint8_t exponent_band_44100[3][25] = {$/;"	v
exponent_bands	libavcodec/wma.h	/^    uint16_t exponent_bands[BLOCK_NB_SIZES][25];$/;"	m	struct:WMACodecContext
exponent_bits	libavcodec/ac3enc.h	/^    int exponent_bits;                      \/\/\/< number of bits used for exponents$/;"	m	struct:AC3EncodeContext
exponent_group_tab	libavcodec/ac3enc.c	/^static uint8_t exponent_group_tab[2][3][256];$/;"	v	file:
exponent_high_bands	libavcodec/wma.h	/^    int exponent_high_bands[BLOCK_NB_SIZES][HIGH_BAND_MAX_SIZE];$/;"	m	struct:WMACodecContext
exponent_high_sizes	libavcodec/wma.h	/^    int exponent_high_sizes[BLOCK_NB_SIZES];$/;"	m	struct:WMACodecContext
exponent_init	libavcodec/ac3enc.c	/^static av_cold void exponent_init(AC3EncodeContext *s)$/;"	f	file:
exponent_sizes	libavcodec/wma.h	/^    int exponent_sizes[BLOCK_NB_SIZES];$/;"	m	struct:WMACodecContext
exponential	libavcodec/8svx.c	/^static const int8_t exponential[16] = { -128, -64, -32, -16, -8, -4, -2, -1, 0, 1, 2, 4, 8, 16, 32, 64 };$/;"	v	file:
exponents_bsize	libavcodec/wma.h	/^    int exponents_bsize[MAX_CHANNELS];      \/\/\/< log2 ratio frame\/exp. length$/;"	m	struct:WMACodecContext
exponents_from_scale_factors	libavcodec/mpegaudiodec.c	/^static void exponents_from_scale_factors(MPADecodeContext *s,$/;"	f	file:
export_count	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long export_count, merge_count;$/;"	m	struct:vf_priv_s	file:
export_images	libavfilter/libmpcodecs/vf.h	/^    mp_image_t* export_images[1];$/;"	m	struct:vf_image_context_s
expr	libavfilter/vf_select.c	/^    AVExpr *expr;$/;"	m	struct:__anon10	file:
expr	libavfilter/vf_setpts.c	/^    AVExpr *expr;$/;"	m	struct:__anon40	file:
exptab	libavcodec/fft-test.c	/^} *exptab;$/;"	v	typeref:struct:__anon275
expval_table_fixed	libavcodec/mpegaudio_tablegen.h	/^static uint32_t expval_table_fixed[512][16];$/;"	v
expval_table_float	libavcodec/mpegaudio_tablegen.h	/^static float expval_table_float[512][16];$/;"	v
ext_chan_config	libavcodec/mpeg4audio.h	/^    int ext_chan_config;$/;"	m	struct:__anon208
ext_coding	libavcodec/dca.c	/^    int ext_coding;             \/\/\/< extended coding flag$/;"	m	struct:__anon93	file:
ext_descr	libavcodec/dca.c	/^    int ext_descr;              \/\/\/< extension audio descriptor flag$/;"	m	struct:__anon93	file:
ext_object_type	libavcodec/mpeg4audio.h	/^    int ext_object_type;$/;"	m	struct:__anon208
ext_sample_rate	libavcodec/mpeg4audio.h	/^    int ext_sample_rate;$/;"	m	struct:__anon208
ext_sampling_index	libavcodec/mpeg4audio.h	/^    int ext_sampling_index;$/;"	m	struct:__anon208
extend53	libavcodec/j2k_dwt.c	/^static inline void extend53(int *p, int i0, int i1)$/;"	f	file:
extend97	libavcodec/j2k_dwt.c	/^static inline void extend97(float *p, int i0, int i1)$/;"	f	file:
extended_bsi_1	libavcodec/ac3.h	/^    int extended_bsi_1;$/;"	m	struct:AC3EncOptions
extended_bsi_2	libavcodec/ac3.h	/^    int extended_bsi_2;$/;"	m	struct:AC3EncOptions
extended_dmv	libavcodec/vc1.h	/^    int extended_dmv;     \/\/\/< Additional extended dmv range at P\/B frame-level$/;"	m	struct:VC1Context
extended_mv	libavcodec/vc1.h	/^    int extended_mv;      \/\/\/< Ext MV in P\/B (not in Simple)$/;"	m	struct:VC1Context
extended_stream_id	libavformat/mpegts.c	/^    int extended_stream_id;$/;"	m	struct:PESContext	file:
extensions	libavformat/avformat.h	/^    const char *extensions; \/**< comma-separated filename extensions *\/$/;"	m	struct:AVOutputFormat
extensions	libavformat/avformat.h	/^    const char *extensions;$/;"	m	struct:AVInputFormat
external_clock	ffplay.c	/^    double external_clock; \/* external clock base *\/$/;"	m	struct:VideoState	file:
external_clock_time	ffplay.c	/^    int64_t external_clock_time;$/;"	m	struct:VideoState	file:
extfunc	libavcodec/ppc/fft_altivec_s.S	/^extfunc ff_fft_calc\\interleave\\()_altivec$/;"	l
extmixlev_options	libavcodec/ac3enc.c	/^static const float extmixlev_options[EXTMIXLEV_NUM_OPTIONS] = {$/;"	v	file:
extqh	libavcodec/alpha/asm.h	110;"	d
extqh	libavcodec/alpha/asm.h	161;"	d
extqh	libavcodec/alpha/asm.h	96;"	d
extql	libavcodec/alpha/asm.h	108;"	d
extql	libavcodec/alpha/asm.h	159;"	d
extql	libavcodec/alpha/asm.h	94;"	d
extra	libavformat/rtmppkt.h	/^    uint32_t       extra;      \/\/\/< probably an additional channel ID used during streaming data$/;"	m	struct:RTMPPacket
extra	libavformat/wv.c	/^    uint8_t extra[WV_EXTRA_SIZE];$/;"	m	struct:__anon327	file:
extra_bits	libavcodec/intrax8.c	150;"	d	file:
extra_bits	libavcodec/intrax8.c	192;"	d	file:
extra_bits	libavcodec/wavpack.c	/^    int extra_bits;$/;"	m	struct:WavpackFrameContext	file:
extra_bswap	libavformat/spdifenc.c	/^    int extra_bswap;                \/\/\/< extra bswap for payload (for LE DTS => standard BE DTS)$/;"	m	struct:IEC61937Context	file:
extra_headers_left	libavformat/oggparsecelt.c	/^    int extra_headers_left;$/;"	m	struct:oggcelt_private	file:
extra_index	libavformat/assenc.c	/^    unsigned int extra_index;$/;"	m	struct:ASSContext	file:
extra_level	libavcodec/intrax8.c	152;"	d	file:
extra_level	libavcodec/intrax8.c	194;"	d	file:
extra_run	libavcodec/intrax8.c	151;"	d	file:
extra_run	libavcodec/intrax8.c	193;"	d	file:
extra_sc	libavcodec/wavpack.c	/^    SavedContext sc, extra_sc;$/;"	m	struct:WavpackFrameContext	file:
extra_size	ffmpeg.c	/^static int64_t extra_size = 0;$/;"	v	file:
extra_size	ffmpeg/ffmpeg.c	/^static int64_t extra_size = 0;$/;"	v	file:
extra_slot	libavcodec/lzw.c	/^    int extra_slot;$/;"	m	struct:LZWState	file:
extract_even	libswscale/x86/rgb2rgb_template.c	/^static void RENAME(extract_even)(const uint8_t *src, uint8_t *dst, x86_reg count)$/;"	f	file:
extract_even2	libswscale/x86/rgb2rgb_template.c	/^static void RENAME(extract_even2)(const uint8_t *src, uint8_t *dst0, uint8_t *dst1, x86_reg count)$/;"	f	file:
extract_even2_c	libswscale/rgb2rgb_template.c	/^static void extract_even2_c(const uint8_t *src, uint8_t *dst0, uint8_t *dst1,$/;"	f	file:
extract_even2avg	libswscale/x86/rgb2rgb_template.c	/^static void RENAME(extract_even2avg)(const uint8_t *src0, const uint8_t *src1, uint8_t *dst0, uint8_t *dst1, x86_reg count)$/;"	f	file:
extract_even2avg_c	libswscale/rgb2rgb_template.c	/^static void extract_even2avg_c(const uint8_t *src0, const uint8_t *src1,$/;"	f	file:
extract_even_c	libswscale/rgb2rgb_template.c	/^static void extract_even_c(const uint8_t *src, uint8_t *dst, int count)$/;"	f	file:
extract_exponents	libavcodec/ac3dsp.h	/^    void (*extract_exponents)(uint8_t *exp, int32_t *coef, int nb_coefs);$/;"	m	struct:AC3DSPContext
extract_exponents	libavcodec/ac3enc.c	/^static void extract_exponents(AC3EncodeContext *s)$/;"	f	file:
extract_header	libavcodec/iff.c	/^static int extract_header(AVCodecContext *const avctx,$/;"	f	file:
extract_inout	libavfilter/graphparser.c	/^static AVFilterInOut *extract_inout(const char *label, AVFilterInOut **links)$/;"	f	file:
extract_mpeg4_header	ffserver.c	/^static void extract_mpeg4_header(AVFormatContext *infile)$/;"	f	file:
extract_odd2	libswscale/x86/rgb2rgb_template.c	/^static void RENAME(extract_odd2)(const uint8_t *src, uint8_t *dst0, uint8_t *dst1, x86_reg count)$/;"	f	file:
extract_odd2_c	libswscale/rgb2rgb_template.c	/^static void extract_odd2_c(const uint8_t *src, uint8_t *dst0, uint8_t *dst1,$/;"	f	file:
extract_odd2avg	libswscale/x86/rgb2rgb_template.c	/^static void RENAME(extract_odd2avg)(const uint8_t *src0, const uint8_t *src1, uint8_t *dst0, uint8_t *dst1, x86_reg count)$/;"	f	file:
extract_odd2avg_c	libswscale/rgb2rgb_template.c	/^static void extract_odd2avg_c(const uint8_t *src0, const uint8_t *src1,$/;"	f	file:
extract_rates	ffserver.c	/^static int extract_rates(char *rates, int ratelen, const char *request)$/;"	f	file:
extradata	libavcodec/avcodec.h	/^    uint8_t *extradata;$/;"	m	struct:AVCodecContext
extradata	libavformat/mxfdec.c	/^    uint8_t *extradata;$/;"	m	struct:__anon443	file:
extradata2config	libavformat/sdp.c	/^static char *extradata2config(AVCodecContext *c)$/;"	f	file:
extradata2psets	libavformat/sdp.c	/^static char *extradata2psets(AVCodecContext *c)$/;"	f	file:
extradata_parsed	libavcodec/h264_mp4toannexb_bsf.c	/^    int      extradata_parsed;$/;"	m	struct:H264BSFContext	file:
extradata_size	libavcodec/avcodec.h	/^    int extradata_size;$/;"	m	struct:AVCodecContext
extradata_size	libavformat/mxfdec.c	/^    int extradata_size;$/;"	m	struct:__anon443	file:
extrapolate_isf	libavcodec/amrwbdec.c	/^static void extrapolate_isf(float out[LP_ORDER_16k], float isf[LP_ORDER])$/;"	f	file:
extwl	libavcodec/alpha/asm.h	109;"	d
extwl	libavcodec/alpha/asm.h	160;"	d
extwl	libavcodec/alpha/asm.h	95;"	d
f	libavcodec/aacdec.c	/^    float f;$/;"	m	union:float754	file:
f	libavcodec/ppc/regs.h	29;"	d
f	libavcodec/ppc/regs.h	33;"	d
f	libavformat/matroskadec.c	/^        double      f;$/;"	m	union:EbmlSyntax::__anon351	file:
f0r_construct_f	libavfilter/vf_frei0r.c	/^typedef f0r_instance_t (*f0r_construct_f)(unsigned int width, unsigned int height);$/;"	t	file:
f0r_deinit_f	libavfilter/vf_frei0r.c	/^typedef void (*f0r_deinit_f)(void);$/;"	t	file:
f0r_destruct_f	libavfilter/vf_frei0r.c	/^typedef void (*f0r_destruct_f)(f0r_instance_t instance);$/;"	t	file:
f0r_get_param_info_f	libavfilter/vf_frei0r.c	/^typedef void (*f0r_get_param_info_f)(f0r_param_info_t *info, int param_index);$/;"	t	file:
f0r_get_param_value_f	libavfilter/vf_frei0r.c	/^typedef void (*f0r_get_param_value_f)(f0r_instance_t instance, f0r_param_t param, int param_index);$/;"	t	file:
f0r_get_plugin_info_f	libavfilter/vf_frei0r.c	/^typedef void (*f0r_get_plugin_info_f)(f0r_plugin_info_t *info);$/;"	t	file:
f0r_init_f	libavfilter/vf_frei0r.c	/^typedef int (*f0r_init_f)(void);$/;"	t	file:
f0r_set_param_value_f	libavfilter/vf_frei0r.c	/^typedef void (*f0r_set_param_value_f)(f0r_instance_t instance, f0r_param_t param, int param_index);$/;"	t	file:
f0r_update2_f	libavfilter/vf_frei0r.c	/^typedef void (*f0r_update2_f)(f0r_instance_t instance, double time, const uint32_t *inframe1, const uint32_t *inframe2, const uint32_t *inframe3, uint32_t *outframe);$/;"	t	file:
f0r_update_f	libavfilter/vf_frei0r.c	/^typedef void (*f0r_update_f)(f0r_instance_t instance, double time, const uint32_t *inframe, uint32_t *outframe);$/;"	t	file:
f20_0_8	libavcodec/aacps_tablegen.h	/^static float f20_0_8 [ 8][7][2];$/;"	v
f2i2	libavcodec/roqvideoenc.c	/^    int f2i2[MAX_CBS_2x2];$/;"	m	struct:RoqTempData	file:
f2i4	libavcodec/roqvideoenc.c	/^    int f2i4[MAX_CBS_4x4];$/;"	m	struct:RoqTempData	file:
f32	libavutil/intreadwrite.h	/^    float    f32;$/;"	m	union:__anon299
f32	libavutil/intreadwrite.h	/^    float    f32[2];$/;"	m	union:__anon298
f34_0_12	libavcodec/aacps_tablegen.h	/^static float f34_0_12[12][7][2];$/;"	v
f34_1_8	libavcodec/aacps_tablegen.h	/^static float f34_1_8 [ 8][7][2];$/;"	v
f34_2_4	libavcodec/aacps_tablegen.h	/^static float f34_2_4 [ 4][7][2];$/;"	v
f64	libavutil/intreadwrite.h	/^    double   f64;$/;"	m	union:__anon298
fVGT_TAG	libavformat/electronicarts.c	47;"	d	file:
f_code	libavcodec/mpegvideo.h	/^    int f_code;                 \/\/\/< forward MV resolution$/;"	m	struct:MpegEncContext
f_code	libavcodec/ratecontrol.h	/^    int f_code;$/;"	m	struct:RateControlEntry
f_count	libavcodec/mpegvideo.h	/^    int f_count;$/;"	m	struct:MpegEncContext
f_func	libavutil/des.c	/^static uint32_t f_func(uint32_t r, uint64_t k) {$/;"	f	file:
f_huffman_env_1_5dB_bits	libavcodec/aacsbrdata.h	/^static const uint8_t f_huffman_env_1_5dB_bits[121] = {$/;"	v
f_huffman_env_1_5dB_codes	libavcodec/aacsbrdata.h	/^static const uint32_t f_huffman_env_1_5dB_codes[121] = {$/;"	v
f_huffman_env_3_0dB_bits	libavcodec/aacsbrdata.h	/^static const uint8_t f_huffman_env_3_0dB_bits[63] = {$/;"	v
f_huffman_env_3_0dB_codes	libavcodec/aacsbrdata.h	/^static const uint32_t f_huffman_env_3_0dB_codes[63] = {$/;"	v
f_huffman_env_bal_1_5dB_bits	libavcodec/aacsbrdata.h	/^static const uint8_t f_huffman_env_bal_1_5dB_bits[49] = {$/;"	v
f_huffman_env_bal_1_5dB_codes	libavcodec/aacsbrdata.h	/^static const uint32_t f_huffman_env_bal_1_5dB_codes[49] = {$/;"	v
f_huffman_env_bal_3_0dB_bits	libavcodec/aacsbrdata.h	/^static const uint8_t f_huffman_env_bal_3_0dB_bits[25] = {$/;"	v
f_huffman_env_bal_3_0dB_codes	libavcodec/aacsbrdata.h	/^static const uint16_t f_huffman_env_bal_3_0dB_codes[25] = {$/;"	v
f_indexnoise	libavcodec/sbr.h	/^    unsigned           f_indexnoise;$/;"	m	struct:__anon56
f_indexsine	libavcodec/sbr.h	/^    unsigned           f_indexsine;$/;"	m	struct:__anon56
f_master	libavcodec/sbr.h	/^    uint16_t           f_master[49];$/;"	m	struct:__anon57
f_tablehigh	libavcodec/sbr.h	/^    uint16_t           f_tablehigh[49];$/;"	m	struct:__anon57
f_tablelim	libavcodec/sbr.h	/^    uint16_t           f_tablelim[29];$/;"	m	struct:__anon57
f_tablelow	libavcodec/sbr.h	/^    uint16_t           f_tablelow[25];$/;"	m	struct:__anon57
f_tablenoise	libavcodec/sbr.h	/^    uint16_t           f_tablenoise[6];$/;"	m	struct:__anon57
faac_handle	libavcodec/libfaac.c	/^    faacEncHandle faac_handle;$/;"	m	struct:FaacAudioContext	file:
face	libavfilter/vf_drawtext.c	/^    FT_Face face;                   \/\/\/< freetype font face handle$/;"	m	struct:__anon24	file:
factor	libavcodec/mace.c	/^    int16_t index, factor, prev2, previous, level;$/;"	m	struct:ChannelData	file:
factor	libavfilter/libmpcodecs/vf_pp7.c	/^static const int factor[16]={$/;"	v	file:
factor	libavfilter/vf_fade.c	/^    int factor, fade_per_frame;$/;"	m	struct:__anon11	file:
factor_table	libavcodec/dv.c	/^    const uint32_t *factor_table;$/;"	m	struct:BlockInfo	file:
fade_per_frame	libavfilter/vf_fade.c	/^    int factor, fade_per_frame;$/;"	m	struct:__anon11	file:
fail	tests/fate.sh	/^fail(){$/;"	f
failures	tools/probetest.c	/^static int failures = 0;$/;"	v	file:
fake_timestamp	libavcodec/crystalhd.c	/^    uint64_t fake_timestamp;$/;"	m	struct:OpaqueList	file:
fakecount	libavfilter/libmpcodecs/vf_pullup.c	/^    int fakecount;$/;"	m	struct:vf_priv_s	file:
fakegot	libavcodec/x86/x86inc.asm	/^        fakegot:$/;"	l
fallback_cquant	libavcodec/nuv.c	/^static const uint8_t fallback_cquant[] = {$/;"	v	file:
fallback_lquant	libavcodec/nuv.c	/^static const uint8_t fallback_lquant[] = {$/;"	v	file:
fast	ffplay.c	/^static int fast = 0;$/;"	v	file:
fast	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned fast;$/;"	m	struct:vf_priv_s	file:
fast_dct_quantize	libavcodec/mpegvideo.h	/^    int (*fast_dct_quantize)(struct MpegEncContext *s, DCTELEM *block\/*align 16*\/, int n, int qscale, int *overflow);$/;"	m	struct:MpegEncContext
fast_decay	libavcodec/ac3.h	/^    int slow_gain, slow_decay, fast_decay, db_per_bit, floor;$/;"	m	struct:AC3BitAllocParameters
fast_decay_code	libavcodec/ac3enc.h	/^    int fast_decay_code;                    \/\/\/< fast decay code                        (fdcycod)$/;"	m	struct:AC3EncodeContext
fast_gain	libavcodec/ac3dec.h	/^    int fast_gain[AC3_MAX_CHANNELS];                \/\/\/< fast gain values\/SMR's         (fgain)$/;"	m	struct:__anon88
fast_gain_code	libavcodec/ac3enc.h	/^    int fast_gain_code[AC3_MAX_CHANNELS];   \/\/\/< fast gain codes (signal-to-mask ratio) (fgaincod)$/;"	m	struct:AC3EncodeContext
fast_gain_syntax	libavcodec/ac3dec.h	/^    int fast_gain_syntax;                   \/\/\/< fast gain codes enabled                (frmfgaincode)$/;"	m	struct:__anon88
fast_mc	libavcodec/snow.c	/^    int fast_mc;$/;"	m	struct:Plane	file:
fast_memcpy	libavfilter/libmpcodecs/libvo/fastmemcpy.h	31;"	d
fastfirstpass	libavcodec/libx264.c	/^    int fastfirstpass;$/;"	m	struct:X264Context	file:
fastuvmc	libavcodec/vc1.h	/^    int fastuvmc;         \/\/\/< Rounding of qpel vector to hpel ? (not in Simple)$/;"	m	struct:VC1Context
fat_c_predictor_table	libavcodec/truemotion1.c	/^    uint32_t fat_c_predictor_table[1024];$/;"	m	struct:TrueMotion1Context	file:
fat_cdt	libavcodec/truemotion1.c	/^    int16_t fat_cdt[8];$/;"	m	struct:TrueMotion1Context	file:
fat_cdt2	libavcodec/truemotion1data.h	/^static const int16_t fat_cdt2[8] = { 0, -20, 15, -80, 100, -160, 180, -160 };$/;"	v
fat_cdts	libavcodec/truemotion1data.h	/^static const int16_t * const fat_cdts[] = { fat_cdt2, fat_cdt2, fat_cdt2, fat_ydt4, NULL };$/;"	v
fat_y_predictor_table	libavcodec/truemotion1.c	/^    uint32_t fat_y_predictor_table[1024];$/;"	m	struct:TrueMotion1Context	file:
fat_ydt	libavcodec/truemotion1.c	/^    int16_t fat_ydt[8];$/;"	m	struct:TrueMotion1Context	file:
fat_ydt3	libavcodec/truemotion1data.h	/^static const int16_t fat_ydt3[8] = { 0, -15, 50, -50, 115, -115, 235, -235 };$/;"	v
fat_ydt4	libavcodec/truemotion1data.h	/^static const int16_t fat_ydt4[8] = { 0, 40, 80, -76, 160, -154, 236, -236 };$/;"	v
fat_ydts	libavcodec/truemotion1data.h	/^static const int16_t * const fat_ydts[] = { fat_ydt3, fat_ydt3, fat_ydt3, fat_ydt4, NULL };$/;"	v
fate	tests/fate.sh	/^fate()($/;"	f
fax_opts	libavcodec/tiff.c	/^    int fax_opts;$/;"	m	struct:TiffContext	file:
fbdev_class	libavdevice/fbdev.c	/^static const AVClass fbdev_class = {$/;"	v	file:
fbdev_read_close	libavdevice/fbdev.c	/^av_cold static int fbdev_read_close(AVFormatContext *avctx)$/;"	f	file:
fbdev_read_header	libavdevice/fbdev.c	/^av_cold static int fbdev_read_header(AVFormatContext *avctx,$/;"	f	file:
fbdev_read_packet	libavdevice/fbdev.c	/^static int fbdev_read_packet(AVFormatContext *avctx, AVPacket *pkt)$/;"	f	file:
fbw_channels	libavcodec/ac3dec.h	/^    int fbw_channels;                           \/\/\/< number of full-bandwidth channels$/;"	m	struct:__anon88
fbw_channels	libavcodec/ac3enc.h	/^    int fbw_channels;                       \/\/\/< number of full-bandwidth channels      (nfchans)$/;"	m	struct:AC3EncodeContext
fc	libavcodec/lzw.c	/^    int fc, oc;$/;"	m	struct:LZWState	file:
fc	libavformat/isom.h	/^    AVFormatContext *fc;$/;"	m	struct:MOVContext
fc	libavformat/mxfdec.c	/^    AVFormatContext *fc;$/;"	m	struct:__anon447	file:
fc_index_bits	libavcodec/sipr.c	/^    uint8_t fc_index_bits[10]; \/\/\/< size in bits of the fixed codebook indexes$/;"	m	struct:__anon112	file:
fc_indexes	libavcodec/sipr.h	/^    int16_t fc_indexes[5][10]; \/\/\/< fixed-codebook indexes$/;"	m	struct:__anon236
fc_indexes_bits	libavcodec/g729dec.c	/^    uint8_t fc_indexes_bits;    \/\/\/< size (in bits) of fixed-codebook index entry$/;"	m	struct:__anon271	file:
fc_signs_bits	libavcodec/g729dec.c	/^    uint8_t fc_signs_bits;      \/\/\/< number of pulses in fixed-codebook vector$/;"	m	struct:__anon271	file:
fcb08l	libavcodec/twinvq_data.h	/^    int16_t fcb08l[640];$/;"	m	struct:__anon263
fcb08m	libavcodec/twinvq_data.h	/^    int16_t fcb08m[320];$/;"	m	struct:__anon263
fcb08s	libavcodec/twinvq_data.h	/^    int16_t fcb08s[320];$/;"	m	struct:__anon263
fcb11l	libavcodec/twinvq_data.h	/^    int16_t fcb11l[640];$/;"	m	struct:__anon263
fcb11m	libavcodec/twinvq_data.h	/^    int16_t fcb11m[320];$/;"	m	struct:__anon263
fcb11s	libavcodec/twinvq_data.h	/^    int16_t fcb11s[320];$/;"	m	struct:__anon263
fcb16l	libavcodec/twinvq_data.h	/^    int16_t fcb16l[640];$/;"	m	struct:__anon263
fcb16m	libavcodec/twinvq_data.h	/^    int16_t fcb16m[320];$/;"	m	struct:__anon263
fcb16s	libavcodec/twinvq_data.h	/^    int16_t fcb16s[320];$/;"	m	struct:__anon263
fcb22l_1	libavcodec/twinvq_data.h	/^    int16_t fcb22l_1[512];$/;"	m	struct:__anon263
fcb22l_2	libavcodec/twinvq_data.h	/^    int16_t fcb22l_2[512];$/;"	m	struct:__anon263
fcb22m_1	libavcodec/twinvq_data.h	/^    int16_t fcb22m_1[640];$/;"	m	struct:__anon263
fcb22m_2	libavcodec/twinvq_data.h	/^    int16_t fcb22m_2[640];$/;"	m	struct:__anon263
fcb22s_1	libavcodec/twinvq_data.h	/^    int16_t fcb22s_1[640];$/;"	m	struct:__anon263
fcb22s_2	libavcodec/twinvq_data.h	/^    int16_t fcb22s_2[640];$/;"	m	struct:__anon263
fcb44l	libavcodec/twinvq_data.h	/^    int16_t fcb44l[640];$/;"	m	struct:__anon263
fcb44m	libavcodec/twinvq_data.h	/^    int16_t fcb44m[640];$/;"	m	struct:__anon263
fcb44s	libavcodec/twinvq_data.h	/^    int16_t fcb44s[640];$/;"	m	struct:__anon263
fcb_type	libavcodec/wmavoice.c	/^    uint8_t fcb_type;     \/\/\/< Fixed codebook type (FCB_TYPE_*)$/;"	m	struct:frame_type_desc	file:
fcm	libavcodec/vc1.h	/^    uint8_t fcm; \/\/\/< 0->Progressive, 2->Frame-Interlace, 3->Field-Interlace$/;"	m	struct:VC1Context
fcode_tab	libavcodec/ituh263enc.c	/^static uint8_t fcode_tab[MAX_MV*2+1];$/;"	v	file:
fcode_tab	libavcodec/mpeg12enc.c	/^static uint8_t fcode_tab[MAX_MV*2+1];$/;"	v	file:
fcode_tab	libavcodec/mpegvideo.h	/^    uint8_t *fcode_tab;               \/\/\/< smallest fcode needed for each MV$/;"	m	struct:MpegEncContext
fcoeffs	libavcodec/psymodel.c	/^    struct FFIIRFilterCoeffs *fcoeffs;$/;"	m	struct:FFPsyPreprocessContext	typeref:struct:FFPsyPreprocessContext::FFIIRFilterCoeffs	file:
fcount	libavfilter/libmpcodecs/vf_divtc.c	/^   int deghost, pass, phase, window, fcount, bcount, frameno, misscount,$/;"	m	struct:vf_priv_s	file:
fcount	libavformat/mpc.c	/^    uint32_t fcount;$/;"	m	struct:__anon376	file:
fctx	libavformat/dv.c	/^    AVFormatContext*  fctx;$/;"	m	struct:DVDemuxContext	file:
fd	ffserver.c	/^    int fd; \/* socket file descriptor *\/$/;"	m	struct:HTTPContext	file:
fd	libavdevice/dv1394.c	/^    int fd;$/;"	m	struct:dv1394_data	file:
fd	libavdevice/fbdev.c	/^    int fd;                  \/\/\/< framebuffer device file descriptor$/;"	m	struct:__anon314	file:
fd	libavdevice/oss_audio.c	/^    int fd;$/;"	m	struct:__anon311	file:
fd	libavdevice/v4l.c	/^    int fd;$/;"	m	struct:__anon316	file:
fd	libavdevice/v4l2.c	/^    int fd;$/;"	m	struct:buff_data	file:
fd	libavdevice/v4l2.c	/^    int fd;$/;"	m	struct:video_data	file:
fd	libavformat/os_support.h	/^    int fd;$/;"	m	struct:pollfd
fd	libavformat/tcp.c	/^    int fd;$/;"	m	struct:TCPContext	file:
fdct	libavcodec/dsputil.h	/^    void (*fdct)(DCTELEM *block\/* align 16*\/);$/;"	m	struct:DSPContext
fdct	libavcodec/dv.c	/^    void (*fdct[2])(DCTELEM *block);$/;"	m	struct:DVVideoContext	file:
fdct248	libavcodec/dsputil.h	/^    void (*fdct248)(DCTELEM *block\/* align 16*\/);$/;"	m	struct:DSPContext
fdct_altivec	libavcodec/ppc/fdct_altivec.c	/^void fdct_altivec(int16_t *block)$/;"	f
fdct_ifast	libavcodec/jfdctfst.c	/^fdct_ifast (DCTELEM * data)$/;"	f
fdct_ifast248	libavcodec/jfdctfst.c	/^fdct_ifast248 (DCTELEM * data)$/;"	f
fdct_r_row_sse2	libavcodec/x86/fdct_mmx.c	/^} fdct_r_row_sse2 =$/;"	v	typeref:struct:__anon58	file:
fdct_row_mmx	libavcodec/x86/fdct_mmx.c	/^static av_always_inline void fdct_row_mmx(const int16_t *in, int16_t *out, const int16_t *table)$/;"	f	file:
fdct_row_mmx2	libavcodec/x86/fdct_mmx.c	/^static av_always_inline void fdct_row_mmx2(const int16_t *in, int16_t *out, const int16_t *table)$/;"	f	file:
fdct_row_sse2	libavcodec/x86/fdct_mmx.c	/^static av_always_inline void fdct_row_sse2(const int16_t *in, int16_t *out)$/;"	f	file:
fdctconsts	libavcodec/ppc/fdct_altivec.c	/^static vector float fdctconsts[3] = {$/;"	v	file:
fdec	libavcodec/wavpack.c	/^    WavpackFrameContext *fdec[WV_MAX_FRAME_DECODERS];$/;"	m	struct:WavpackContext	file:
fdec_num	libavcodec/wavpack.c	/^    int fdec_num;$/;"	m	struct:WavpackContext	file:
feed	ffserver.c	/^    struct FFStream *feed;   \/* feed we are using (can be null if$/;"	m	struct:FFStream	typeref:struct:FFStream::FFStream	file:
feed_fd	ffserver.c	/^    int feed_fd;$/;"	m	struct:HTTPContext	file:
feed_filename	ffserver.c	/^    char feed_filename[1024]; \/* file name of the feed storage, or$/;"	m	struct:FFStream	file:
feed_max_size	ffserver.c	/^    int64_t feed_max_size;      \/* maximum storage size, zero means unlimited *\/$/;"	m	struct:FFStream	file:
feed_opened	ffserver.c	/^    int feed_opened;     \/* true if someone is writing to the feed *\/$/;"	m	struct:FFStream	file:
feed_size	ffserver.c	/^    int64_t feed_size;          \/* current size of feed *\/$/;"	m	struct:FFStream	file:
feed_streams	ffserver.c	/^    int feed_streams[MAX_STREAMS]; \/* index of streams in the feed *\/$/;"	m	struct:FFStream	file:
feed_streams	ffserver.c	/^    int feed_streams[MAX_STREAMS]; \/* index of streams in the feed *\/$/;"	m	struct:HTTPContext	file:
feed_write_index	ffserver.c	/^    int64_t feed_write_index;   \/* current write position in feed (it wraps around) *\/$/;"	m	struct:FFStream	file:
feedback2_factor	libavformat/timefilter.c	/^    double feedback2_factor;$/;"	m	struct:TimeFilter	file:
feedback3_factor	libavformat/timefilter.c	/^    double feedback3_factor;$/;"	m	struct:TimeFilter	file:
fetch_diagonal_mv	libavcodec/h264_mvpred.h	/^static inline int fetch_diagonal_mv(H264Context *h, const int16_t **C, int i, int list, int part_width){$/;"	f
fetch_timestamp	libavcodec/avcodec.h	/^    int fetch_timestamp;$/;"	m	struct:AVCodecParserContext
fexists	libavfilter/libmpcodecs/vf_screenshot.c	/^static int fexists(char *fname)$/;"	f	file:
ff_a64_muxer	libavformat/a64.c	/^AVOutputFormat ff_a64_muxer = {$/;"	v
ff_a64multi5_encoder	libavcodec/a64multienc.c	/^AVCodec ff_a64multi5_encoder = {$/;"	v
ff_a64multi_encoder	libavcodec/a64multienc.c	/^AVCodec ff_a64multi_encoder = {$/;"	v
ff_aac_ac3_parse	libavcodec/aac_ac3_parser.c	/^int ff_aac_ac3_parse(AVCodecParserContext *s1,$/;"	f
ff_aac_adtstoasc_bsf	libavcodec/aac_adtstoasc_bsf.c	/^AVBitStreamFilter ff_aac_adtstoasc_bsf = {$/;"	v
ff_aac_codebook_vector_idx	libavcodec/aactab.c	/^const uint16_t *const ff_aac_codebook_vector_idx[] = {$/;"	v
ff_aac_codebook_vector_vals	libavcodec/aactab.c	/^const float *const ff_aac_codebook_vector_vals[] = {$/;"	v
ff_aac_codebook_vectors	libavcodec/aactab.c	/^const float * const ff_aac_codebook_vectors[] = {$/;"	v
ff_aac_coders	libavcodec/aaccoder.c	/^AACCoefficientsEncoder ff_aac_coders[] = {$/;"	v
ff_aac_decoder	libavcodec/aacdec.c	/^AVCodec ff_aac_decoder = {$/;"	v
ff_aac_demuxer	libavformat/aacdec.c	/^AVInputFormat ff_aac_demuxer = {$/;"	v
ff_aac_encoder	libavcodec/aacenc.c	/^AVCodec ff_aac_encoder = {$/;"	v
ff_aac_latm_decoder	libavcodec/aacdec.c	/^AVCodec ff_aac_latm_decoder = {$/;"	v
ff_aac_latm_parser	libavcodec/latm_parser.c	/^AVCodecParser ff_aac_latm_parser = {$/;"	v
ff_aac_num_swb_1024	libavcodec/aactab.c	/^const uint8_t ff_aac_num_swb_1024[] = {$/;"	v
ff_aac_num_swb_128	libavcodec/aactab.c	/^const uint8_t ff_aac_num_swb_128[] = {$/;"	v
ff_aac_parse_header	libavcodec/aacadtsdec.c	/^int ff_aac_parse_header(GetBitContext *gbc, AACADTSHeaderInfo *hdr)$/;"	f
ff_aac_parser	libavcodec/aac_parser.c	/^AVCodecParser ff_aac_parser = {$/;"	v
ff_aac_pow2sf_tab	libavcodec/aac_tablegen.h	/^float ff_aac_pow2sf_tab[428];$/;"	v
ff_aac_pred_sfb_max	libavcodec/aactab.c	/^const uint8_t ff_aac_pred_sfb_max[] = {$/;"	v
ff_aac_psy_model	libavcodec/aacpsy.c	/^const FFPsyModel ff_aac_psy_model =$/;"	v
ff_aac_sbr_ctx_close	libavcodec/aacsbr.c	/^av_cold void ff_aac_sbr_ctx_close(SpectralBandReplication *sbr)$/;"	f
ff_aac_sbr_ctx_init	libavcodec/aacsbr.c	/^av_cold void ff_aac_sbr_ctx_init(AACContext *ac, SpectralBandReplication *sbr)$/;"	f
ff_aac_sbr_init	libavcodec/aacsbr.c	/^av_cold void ff_aac_sbr_init(void)$/;"	f
ff_aac_scalefactor_bits	libavcodec/aactab.c	/^const uint8_t ff_aac_scalefactor_bits[121] = {$/;"	v
ff_aac_scalefactor_code	libavcodec/aactab.c	/^const uint32_t ff_aac_scalefactor_code[121] = {$/;"	v
ff_aac_spectral_bits	libavcodec/aactab.c	/^const uint8_t * const ff_aac_spectral_bits[11] = {$/;"	v
ff_aac_spectral_codes	libavcodec/aactab.c	/^const uint16_t * const ff_aac_spectral_codes[11] = {$/;"	v
ff_aac_spectral_sizes	libavcodec/aactab.c	/^const uint16_t ff_aac_spectral_sizes[11] = {$/;"	v
ff_aac_tableinit	libavcodec/aac_tablegen.h	/^void ff_aac_tableinit(void)$/;"	f
ff_aac_tableinit	libavcodec/aac_tablegen_decl.h	27;"	d
ff_aanscales	libavcodec/aandcttab.c	/^const uint16_t ff_aanscales[64] = {$/;"	v
ff_aasc_decoder	libavcodec/aasc.c	/^AVCodec ff_aasc_decoder = {$/;"	v
ff_ac3_band_start_tab	libavcodec/ac3.c	/^const uint8_t ff_ac3_band_start_tab[AC3_CRITICAL_BANDS+1] = {$/;"	v
ff_ac3_bap_tab	libavcodec/ac3tab.c	/^const uint8_t ff_ac3_bap_tab[64]= {$/;"	v
ff_ac3_bin_to_band_tab	libavcodec/ac3.c	/^const uint8_t ff_ac3_bin_to_band_tab[253] = {$/;"	v
ff_ac3_bin_to_band_tab	libavcodec/ac3.c	/^uint8_t ff_ac3_bin_to_band_tab[253];$/;"	v
ff_ac3_bit_alloc_calc_mask	libavcodec/ac3.c	/^int ff_ac3_bit_alloc_calc_mask(AC3BitAllocParameters *s, int16_t *band_psd,$/;"	f
ff_ac3_bit_alloc_calc_psd	libavcodec/ac3.c	/^void ff_ac3_bit_alloc_calc_psd(int8_t *exp, int start, int end, int16_t *psd,$/;"	f
ff_ac3_bitrate_tab	libavcodec/ac3tab.c	/^const uint16_t ff_ac3_bitrate_tab[19] = {$/;"	v
ff_ac3_channel_layout_tab	libavcodec/ac3tab.c	/^const uint16_t ff_ac3_channel_layout_tab[8] = {$/;"	v
ff_ac3_channel_layouts	libavcodec/ac3enc.c	/^const int64_t ff_ac3_channel_layouts[19] = {$/;"	v
ff_ac3_channels_tab	libavcodec/ac3tab.c	/^const uint8_t ff_ac3_channels_tab[8] = {$/;"	v
ff_ac3_common_init	libavcodec/ac3.c	/^av_cold void ff_ac3_common_init(void)$/;"	f
ff_ac3_db_per_bit_tab	libavcodec/ac3tab.c	/^const uint16_t ff_ac3_db_per_bit_tab[4]= {$/;"	v
ff_ac3_dec_channel_map	libavcodec/ac3tab.c	/^const uint8_t ff_ac3_dec_channel_map[8][2][6] = {$/;"	v
ff_ac3_decoder	libavcodec/ac3dec.c	/^AVCodec ff_ac3_decoder = {$/;"	v
ff_ac3_demuxer	libavformat/ac3dec.c	/^AVInputFormat ff_ac3_demuxer = {$/;"	v
ff_ac3_downmix_c	libavcodec/ac3dec.c	/^void ff_ac3_downmix_c(float (*samples)[256], float (*matrix)[2], int out_ch, int in_ch, int len)$/;"	f
ff_ac3_enc_channel_map	libavcodec/ac3tab.c	/^const uint8_t ff_ac3_enc_channel_map[8][2][6] = {$/;"	v
ff_ac3_encode_close	libavcodec/ac3enc.c	/^av_cold int ff_ac3_encode_close(AVCodecContext *avctx)$/;"	f
ff_ac3_encode_frame	libavcodec/ac3enc.c	/^int ff_ac3_encode_frame(AVCodecContext *avctx, unsigned char *frame,$/;"	f
ff_ac3_encode_init	libavcodec/ac3enc.c	/^av_cold int ff_ac3_encode_init(AVCodecContext *avctx)$/;"	f
ff_ac3_encoder	libavcodec/ac3enc_combined.c	/^AVCodec ff_ac3_encoder = {$/;"	v
ff_ac3_fast_decay_tab	libavcodec/ac3tab.c	/^const uint8_t ff_ac3_fast_decay_tab[4]={$/;"	v
ff_ac3_fast_gain_tab	libavcodec/ac3tab.c	/^const uint16_t ff_ac3_fast_gain_tab[8]= {$/;"	v
ff_ac3_fixed_encoder	libavcodec/ac3enc_fixed.c	/^AVCodec ff_ac3_fixed_encoder = {$/;"	v
ff_ac3_float_apply_window	libavcodec/ac3enc_float.c	/^void ff_ac3_float_apply_window(DSPContext *dsp, float *output,$/;"	f
ff_ac3_float_encoder	libavcodec/ac3enc_float.c	/^AVCodec ff_ac3_float_encoder = {$/;"	v
ff_ac3_float_mdct_end	libavcodec/ac3enc_float.c	/^av_cold void ff_ac3_float_mdct_end(AC3MDCTContext *mdct)$/;"	f
ff_ac3_float_mdct_init	libavcodec/ac3enc_float.c	/^av_cold int ff_ac3_float_mdct_init(AVCodecContext *avctx, AC3MDCTContext *mdct,$/;"	f
ff_ac3_float_scale_coefficients	libavcodec/ac3enc_float.c	/^void ff_ac3_float_scale_coefficients(AC3EncodeContext *s)$/;"	f
ff_ac3_floor_tab	libavcodec/ac3tab.c	/^const int16_t ff_ac3_floor_tab[8]= {$/;"	v
ff_ac3_frame_size_tab	libavcodec/ac3tab.c	/^const uint16_t ff_ac3_frame_size_tab[38][3] = {$/;"	v
ff_ac3_hearing_threshold_tab	libavcodec/ac3tab.c	/^const uint16_t ff_ac3_hearing_threshold_tab[AC3_CRITICAL_BANDS][3]= {$/;"	v
ff_ac3_log_add_tab	libavcodec/ac3tab.c	/^const uint8_t ff_ac3_log_add_tab[260]= {$/;"	v
ff_ac3_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_ac3_muxer = {$/;"	v
ff_ac3_parse_header	libavcodec/ac3_parser.c	/^int ff_ac3_parse_header(GetBitContext *gbc, AC3HeaderInfo *hdr)$/;"	f
ff_ac3_parser	libavcodec/ac3_parser.c	/^AVCodecParser ff_ac3_parser = {$/;"	v
ff_ac3_rematrix_band_tab	libavcodec/ac3tab.c	/^const uint8_t ff_ac3_rematrix_band_tab[5] = { 13, 25, 37, 61, 253 };$/;"	v
ff_ac3_sample_rate_tab	libavcodec/ac3tab.c	/^const uint16_t ff_ac3_sample_rate_tab[3] = { 48000, 44100, 32000 };$/;"	v
ff_ac3_slow_decay_tab	libavcodec/ac3tab.c	/^const uint8_t ff_ac3_slow_decay_tab[4]={$/;"	v
ff_ac3_slow_gain_tab	libavcodec/ac3tab.c	/^const uint16_t ff_ac3_slow_gain_tab[4]= {$/;"	v
ff_ac3_ungroup_3_in_5_bits_tab	libavcodec/ac3dec_data.c	/^const uint8_t ff_ac3_ungroup_3_in_5_bits_tab[32][3] = {$/;"	v
ff_ac3dsp_init	libavcodec/ac3dsp.c	/^av_cold void ff_ac3dsp_init(AC3DSPContext *c, int bit_exact)$/;"	f
ff_ac3dsp_init_arm	libavcodec/arm/ac3dsp_init_arm.c	/^av_cold void ff_ac3dsp_init_arm(AC3DSPContext *c, int bit_exact)$/;"	f
ff_ac3dsp_init_x86	libavcodec/x86/ac3dsp_mmx.c	/^av_cold void ff_ac3dsp_init_x86(AC3DSPContext *c, int bit_exact)$/;"	f
ff_acelp_apply_order_2_transfer_function	libavcodec/acelp_filters.c	/^void ff_acelp_apply_order_2_transfer_function(float *out, const float *in,$/;"	f
ff_acelp_decode_4bit_to_2nd_delay3	libavcodec/acelp_pitch_delay.c	/^int ff_acelp_decode_4bit_to_2nd_delay3($/;"	f
ff_acelp_decode_5_6_bit_to_2nd_delay3	libavcodec/acelp_pitch_delay.c	/^int ff_acelp_decode_5_6_bit_to_2nd_delay3($/;"	f
ff_acelp_decode_6bit_to_2nd_delay6	libavcodec/acelp_pitch_delay.c	/^int ff_acelp_decode_6bit_to_2nd_delay6($/;"	f
ff_acelp_decode_8bit_to_1st_delay3	libavcodec/acelp_pitch_delay.c	/^int ff_acelp_decode_8bit_to_1st_delay3(int ac_index)$/;"	f
ff_acelp_decode_9bit_to_1st_delay6	libavcodec/acelp_pitch_delay.c	/^int ff_acelp_decode_9bit_to_1st_delay6(int ac_index)$/;"	f
ff_acelp_decode_gain_code	libavcodec/acelp_pitch_delay.c	/^int16_t ff_acelp_decode_gain_code($/;"	f
ff_acelp_fc_pulse_per_track	libavcodec/acelp_vectors.c	/^void ff_acelp_fc_pulse_per_track($/;"	f
ff_acelp_high_pass_filter	libavcodec/acelp_filters.c	/^void ff_acelp_high_pass_filter(int16_t* out, int hpf_f[2],$/;"	f
ff_acelp_interp_filter	libavcodec/acelp_filters.c	/^const int16_t ff_acelp_interp_filter[61] = { \/* (0.15) *\/$/;"	v
ff_acelp_interpolate	libavcodec/acelp_filters.c	/^void ff_acelp_interpolate(int16_t* out, const int16_t* in,$/;"	f
ff_acelp_interpolatef	libavcodec/acelp_filters.c	/^void ff_acelp_interpolatef(float *out, const float *in,$/;"	f
ff_acelp_lp_decode	libavcodec/lsp.c	/^void ff_acelp_lp_decode(int16_t* lp_1st, int16_t* lp_2nd, const int16_t* lsp_2nd, const int16_t* lsp_prev, int lp_order)$/;"	f
ff_acelp_lsf2lsp	libavcodec/lsp.c	/^void ff_acelp_lsf2lsp(int16_t *lsp, const int16_t *lsf, int lp_order)$/;"	f
ff_acelp_lsf2lspd	libavcodec/lsp.c	/^void ff_acelp_lsf2lspd(double *lsp, const float *lsf, int lp_order)$/;"	f
ff_acelp_lsp2lpc	libavcodec/lsp.c	/^void ff_acelp_lsp2lpc(int16_t* lp, const int16_t* lsp, int lp_half_order)$/;"	f
ff_acelp_lspd2lpc	libavcodec/lsp.c	/^void ff_acelp_lspd2lpc(const double *lsp, float *lpc, int lp_half_order)$/;"	f
ff_acelp_reorder_lsf	libavcodec/lsp.c	/^void ff_acelp_reorder_lsf(int16_t* lsfq, int lsfq_min_distance, int lsfq_min, int lsfq_max, int lp_order)$/;"	f
ff_acelp_update_past_gain	libavcodec/acelp_pitch_delay.c	/^void ff_acelp_update_past_gain($/;"	f
ff_acelp_weighted_vector_sum	libavcodec/acelp_vectors.c	/^void ff_acelp_weighted_vector_sum($/;"	f
ff_adaptive_gain_control	libavcodec/acelp_vectors.c	/^void ff_adaptive_gain_control(float *out, const float *in, float speech_energ,$/;"	f
ff_add_index_entry	libavformat/utils.c	/^int ff_add_index_entry(AVIndexEntry **index_entries,$/;"	f
ff_add_pixels_clamped	libavcodec/arm/dsputil_init_arm.c	/^static void (*ff_add_pixels_clamped)(const DCTELEM *block, uint8_t *pixels, int line_size);$/;"	v	file:
ff_add_pixels_clamped_c	libavcodec/dsputil.c	/^void ff_add_pixels_clamped_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f
ff_add_pixels_clamped_mmx	libavcodec/x86/dsputil_mmx.c	/^void ff_add_pixels_clamped_mmx(const DCTELEM *block, uint8_t *pixels, int line_size)$/;"	f
ff_add_wav	libavcodec/ra144.c	/^static void ff_add_wav(int16_t *dest, int n, int skip_first, int *m, const int16_t *s1,$/;"	f	file:
ff_adpcm_adx_decoder	libavcodec/adxdec.c	/^AVCodec ff_adpcm_adx_decoder = {$/;"	v
ff_adpcm_adx_encoder	libavcodec/adxenc.c	/^AVCodec ff_adpcm_adx_encoder = {$/;"	v
ff_adpcm_g722_decoder	libavcodec/g722.c	/^AVCodec ff_adpcm_g722_decoder = {$/;"	v
ff_adpcm_g722_encoder	libavcodec/g722.c	/^AVCodec ff_adpcm_g722_encoder = {$/;"	v
ff_adpcm_g726_decoder	libavcodec/g726.c	/^AVCodec ff_adpcm_g726_decoder = {$/;"	v
ff_adpcm_g726_encoder	libavcodec/g726.c	/^AVCodec ff_adpcm_g726_encoder = {$/;"	v
ff_adts_decode_extradata	libavformat/adtsenc.c	/^int ff_adts_decode_extradata(AVFormatContext *s, ADTSContext *adts, uint8_t *buf, int size)$/;"	f
ff_adts_muxer	libavformat/adtsenc.c	/^AVOutputFormat ff_adts_muxer = {$/;"	v
ff_adts_write_frame_header	libavformat/adtsenc.c	/^int ff_adts_write_frame_header(ADTSContext *ctx,$/;"	f
ff_aea_demuxer	libavformat/aea.c	/^AVInputFormat ff_aea_demuxer = {$/;"	v
ff_aic_dc_scale_table	libavcodec/h263data.h	/^const uint8_t ff_aic_dc_scale_table[32]={$/;"	v
ff_aiff_demuxer	libavformat/aiffdec.c	/^AVInputFormat ff_aiff_demuxer = {$/;"	v
ff_aiff_muxer	libavformat/aiffenc.c	/^AVOutputFormat ff_aiff_muxer = {$/;"	v
ff_alac_decoder	libavcodec/alac.c	/^AVCodec ff_alac_decoder = {$/;"	v
ff_alac_encoder	libavcodec/alacenc.c	/^AVCodec ff_alac_encoder = {$/;"	v
ff_alloc_picture	libavcodec/mpegvideo.c	/^int ff_alloc_picture(MpegEncContext *s, Picture *pic, int shared){$/;"	f
ff_als_decoder	libavcodec/alsdec.c	/^AVCodec ff_als_decoder = {$/;"	v
ff_alsa_close	libavdevice/alsa-audio-common.c	/^av_cold int ff_alsa_close(AVFormatContext *s1)$/;"	f
ff_alsa_demuxer	libavdevice/alsa-audio-dec.c	/^AVInputFormat ff_alsa_demuxer = {$/;"	v
ff_alsa_extend_reorder_buf	libavdevice/alsa-audio-common.c	/^int ff_alsa_extend_reorder_buf(AlsaData *s, int min_size)$/;"	f
ff_alsa_muxer	libavdevice/alsa-audio-enc.c	/^AVOutputFormat ff_alsa_muxer = {$/;"	v
ff_alsa_open	libavdevice/alsa-audio-common.c	/^av_cold int ff_alsa_open(AVFormatContext *ctx, snd_pcm_stream_t mode,$/;"	f
ff_alsa_xrun_recover	libavdevice/alsa-audio-common.c	/^int ff_alsa_xrun_recover(AVFormatContext *s1, int err)$/;"	f
ff_alternate_horizontal_scan	libavcodec/dsputil.c	/^const uint8_t ff_alternate_horizontal_scan[64] = {$/;"	v
ff_alternate_vertical_scan	libavcodec/dsputil.c	/^const uint8_t ff_alternate_vertical_scan[64] = {$/;"	v
ff_amf_get_field_value	libavformat/rtmppkt.c	/^int ff_amf_get_field_value(const uint8_t *data, const uint8_t *data_end,$/;"	f
ff_amf_tag_contents	libavformat/rtmppkt.c	/^static void ff_amf_tag_contents(void *ctx, const uint8_t *data, const uint8_t *data_end)$/;"	f	file:
ff_amf_tag_size	libavformat/rtmppkt.c	/^int ff_amf_tag_size(const uint8_t *data, const uint8_t *data_end)$/;"	f
ff_amf_write_bool	libavformat/rtmppkt.c	/^void ff_amf_write_bool(uint8_t **dst, int val)$/;"	f
ff_amf_write_field_name	libavformat/rtmppkt.c	/^void ff_amf_write_field_name(uint8_t **dst, const char *str)$/;"	f
ff_amf_write_null	libavformat/rtmppkt.c	/^void ff_amf_write_null(uint8_t **dst)$/;"	f
ff_amf_write_number	libavformat/rtmppkt.c	/^void ff_amf_write_number(uint8_t **dst, double val)$/;"	f
ff_amf_write_object_end	libavformat/rtmppkt.c	/^void ff_amf_write_object_end(uint8_t **dst)$/;"	f
ff_amf_write_object_start	libavformat/rtmppkt.c	/^void ff_amf_write_object_start(uint8_t **dst)$/;"	f
ff_amf_write_string	libavformat/rtmppkt.c	/^void ff_amf_write_string(uint8_t **dst, const char *str)$/;"	f
ff_amr_bit_reorder	libavcodec/amr.h	/^static inline void ff_amr_bit_reorder(uint16_t *out, int size,$/;"	f
ff_amr_demuxer	libavformat/amr.c	/^AVInputFormat ff_amr_demuxer = {$/;"	v
ff_amr_muxer	libavformat/amr.c	/^AVOutputFormat ff_amr_muxer = {$/;"	v
ff_amr_nb_dynamic_handler	libavformat/rtpdec_amr.c	/^RTPDynamicProtocolHandler ff_amr_nb_dynamic_handler = {$/;"	v
ff_amr_set_fixed_gain	libavcodec/acelp_pitch_delay.c	/^float ff_amr_set_fixed_gain(float fixed_gain_factor, float fixed_mean_energy,$/;"	f
ff_amr_wb_dynamic_handler	libavformat/rtpdec_amr.c	/^RTPDynamicProtocolHandler ff_amr_wb_dynamic_handler = {$/;"	v
ff_amrnb_decoder	libavcodec/amrnbdec.c	/^AVCodec ff_amrnb_decoder = {$/;"	v
ff_amrwb_decoder	libavcodec/amrwbdec.c	/^AVCodec ff_amrwb_decoder = {$/;"	v
ff_amrwb_lsp2lpc	libavcodec/lsp.c	/^void ff_amrwb_lsp2lpc(const double *lsp, float *lp, int lp_order)$/;"	f
ff_amv_decoder	libavcodec/sp5xdec.c	/^AVCodec ff_amv_decoder = {$/;"	v
ff_anm_decoder	libavcodec/anm.c	/^AVCodec ff_anm_decoder = {$/;"	v
ff_anm_demuxer	libavformat/anm.c	/^AVInputFormat ff_anm_demuxer = {$/;"	v
ff_ansi_decoder	libavcodec/ansi.c	/^AVCodec ff_ansi_decoder = {$/;"	v
ff_apc_demuxer	libavformat/apc.c	/^AVInputFormat ff_apc_demuxer = {$/;"	v
ff_ape_decoder	libavcodec/apedec.c	/^AVCodec ff_ape_decoder = {$/;"	v
ff_ape_demuxer	libavformat/ape.c	/^AVInputFormat ff_ape_demuxer = {$/;"	v
ff_ape_parse_tag	libavformat/apetag.c	/^void ff_ape_parse_tag(AVFormatContext *s)$/;"	f
ff_applehttp_demuxer	libavformat/applehttp.c	/^AVInputFormat ff_applehttp_demuxer = {$/;"	v
ff_applehttp_protocol	libavformat/applehttpproto.c	/^URLProtocol ff_applehttp_protocol = {$/;"	v
ff_apply_motion_4x4	libavcodec/roqvideo.c	/^void ff_apply_motion_4x4(RoqContext *ri, int x, int y,$/;"	f
ff_apply_motion_8x8	libavcodec/roqvideo.c	/^void ff_apply_motion_8x8(RoqContext *ri, int x, int y,$/;"	f
ff_apply_vector_2x2	libavcodec/roqvideo.c	/^void ff_apply_vector_2x2(RoqContext *ri, int x, int y, roq_cell *cell)$/;"	f
ff_apply_vector_4x4	libavcodec/roqvideo.c	/^void ff_apply_vector_4x4(RoqContext *ri, int x, int y, roq_cell *cell)$/;"	f
ff_asf_audio_conceal_none	libavformat/asf.c	/^const ff_asf_guid ff_asf_audio_conceal_none = {$/;"	v
ff_asf_audio_conceal_spread	libavformat/asf.c	/^const ff_asf_guid ff_asf_audio_conceal_spread = {$/;"	v
ff_asf_audio_stream	libavformat/asf.c	/^const ff_asf_guid ff_asf_audio_stream = {$/;"	v
ff_asf_codec_comment1_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_codec_comment1_header = {$/;"	v
ff_asf_codec_comment_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_codec_comment_header = {$/;"	v
ff_asf_command_stream	libavformat/asf.c	/^const ff_asf_guid ff_asf_command_stream = {$/;"	v
ff_asf_comment_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_comment_header = {$/;"	v
ff_asf_content_encryption	libavformat/asf.c	/^const ff_asf_guid ff_asf_content_encryption = {$/;"	v
ff_asf_data_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_data_header = {$/;"	v
ff_asf_demuxer	libavformat/asfdec.c	/^AVInputFormat ff_asf_demuxer = {$/;"	v
ff_asf_digital_signature	libavformat/asf.c	/^const ff_asf_guid ff_asf_digital_signature = {$/;"	v
ff_asf_ext_content_encryption	libavformat/asf.c	/^const ff_asf_guid ff_asf_ext_content_encryption = {$/;"	v
ff_asf_ext_stream_audio_stream	libavformat/asf.c	/^const ff_asf_guid ff_asf_ext_stream_audio_stream = {$/;"	v
ff_asf_ext_stream_embed_stream_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_ext_stream_embed_stream_header = {$/;"	v
ff_asf_ext_stream_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_ext_stream_header = {$/;"	v
ff_asf_extended_content_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_extended_content_header = {$/;"	v
ff_asf_file_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_file_header = {$/;"	v
ff_asf_get_packet	libavformat/asfdec.c	/^static int ff_asf_get_packet(AVFormatContext *s, AVIOContext *pb)$/;"	f	file:
ff_asf_guid	libavformat/riff.h	/^typedef uint8_t ff_asf_guid[16];$/;"	t
ff_asf_head1_guid	libavformat/asf.c	/^const ff_asf_guid ff_asf_head1_guid = {$/;"	v
ff_asf_head2_guid	libavformat/asf.c	/^const ff_asf_guid ff_asf_head2_guid = {$/;"	v
ff_asf_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_header = {$/;"	v
ff_asf_jfif_media	libavformat/asf.c	/^const ff_asf_guid ff_asf_jfif_media = {$/;"	v
ff_asf_language_guid	libavformat/asf.c	/^const ff_asf_guid ff_asf_language_guid = {$/;"	v
ff_asf_marker_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_marker_header = {$/;"	v
ff_asf_metadata_conv	libavformat/asf.c	/^const AVMetadataConv ff_asf_metadata_conv[] = {$/;"	v
ff_asf_metadata_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_metadata_header = {$/;"	v
ff_asf_muxer	libavformat/asfenc.c	/^AVOutputFormat ff_asf_muxer = {$/;"	v
ff_asf_my_guid	libavformat/asf.c	/^const ff_asf_guid ff_asf_my_guid = {$/;"	v
ff_asf_parse_packet	libavformat/asfdec.c	/^static int ff_asf_parse_packet(AVFormatContext *s, AVIOContext *pb, AVPacket *pkt)$/;"	f	file:
ff_asf_simple_index_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_simple_index_header = {$/;"	v
ff_asf_stream_header	libavformat/asf.c	/^const ff_asf_guid ff_asf_stream_header = {$/;"	v
ff_asf_stream_muxer	libavformat/asfenc.c	/^AVOutputFormat ff_asf_stream_muxer = {$/;"	v
ff_asf_video_conceal_none	libavformat/asf.c	/^const ff_asf_guid ff_asf_video_conceal_none = {$/;"	v
ff_asf_video_stream	libavformat/asf.c	/^const ff_asf_guid ff_asf_video_stream = {$/;"	v
ff_asfcrypt_dec	libavformat/asfcrypt.c	/^void ff_asfcrypt_dec(const uint8_t key[20], uint8_t *data, int len) {$/;"	f
ff_ass_add_rect	libavcodec/ass.c	/^int ff_ass_add_rect(AVSubtitle *sub, const char *dialog,$/;"	f
ff_ass_decoder	libavcodec/assdec.c	/^AVCodec ff_ass_decoder = {$/;"	v
ff_ass_demuxer	libavformat/assdec.c	/^AVInputFormat ff_ass_demuxer = {$/;"	v
ff_ass_encoder	libavcodec/assenc.c	/^AVCodec ff_ass_encoder = {$/;"	v
ff_ass_muxer	libavformat/assenc.c	/^AVOutputFormat ff_ass_muxer = {$/;"	v
ff_ass_split	libavcodec/ass_split.c	/^ASSSplitContext *ff_ass_split(const char *buf)$/;"	f
ff_ass_split_dialog	libavcodec/ass_split.c	/^ASSDialog *ff_ass_split_dialog(ASSSplitContext *ctx, const char *buf,$/;"	f
ff_ass_split_free	libavcodec/ass_split.c	/^void ff_ass_split_free(ASSSplitContext *ctx)$/;"	f
ff_ass_split_override_codes	libavcodec/ass_split.c	/^int ff_ass_split_override_codes(const ASSCodesCallbacks *callbacks, void *priv,$/;"	f
ff_ass_subtitle_header	libavcodec/ass.c	/^int ff_ass_subtitle_header(AVCodecContext *avctx,$/;"	f
ff_ass_subtitle_header_default	libavcodec/ass.c	/^int ff_ass_subtitle_header_default(AVCodecContext *avctx)$/;"	f
ff_asv1_decoder	libavcodec/asv1.c	/^AVCodec ff_asv1_decoder = {$/;"	v
ff_asv1_encoder	libavcodec/asv1.c	/^AVCodec ff_asv1_encoder = {$/;"	v
ff_asv2_decoder	libavcodec/asv1.c	/^AVCodec ff_asv2_decoder = {$/;"	v
ff_asv2_encoder	libavcodec/asv1.c	/^AVCodec ff_asv2_encoder = {$/;"	v
ff_atrac1_decoder	libavcodec/atrac1.c	/^AVCodec ff_atrac1_decoder = {$/;"	v
ff_atrac3_decoder	libavcodec/atrac3.c	/^AVCodec ff_atrac3_decoder =$/;"	v
ff_atrac_sf_table	libavcodec/atrac.c	/^float ff_atrac_sf_table[64];$/;"	v
ff_au_demuxer	libavformat/au.c	/^AVInputFormat ff_au_demuxer = {$/;"	v
ff_au_muxer	libavformat/au.c	/^AVOutputFormat ff_au_muxer = {$/;"	v
ff_audio_interleave_close	libavformat/audiointerleave.c	/^void ff_audio_interleave_close(AVFormatContext *s)$/;"	f
ff_audio_interleave_init	libavformat/audiointerleave.c	/^int ff_audio_interleave_init(AVFormatContext *s,$/;"	f
ff_audio_rechunk_interleave	libavformat/audiointerleave.c	/^int ff_audio_rechunk_interleave(AVFormatContext *s, AVPacket *out, AVPacket *pkt, int flush,$/;"	f
ff_aura2_decoder	libavcodec/aura.c	/^AVCodec ff_aura2_decoder = {$/;"	v
ff_aura_decoder	libavcodec/cyuv.c	/^AVCodec ff_aura_decoder = {$/;"	v
ff_avc_find_startcode	libavformat/avc.c	/^const uint8_t *ff_avc_find_startcode(const uint8_t *p, const uint8_t *end){$/;"	f
ff_avc_find_startcode_internal	libavformat/avc.c	/^static const uint8_t *ff_avc_find_startcode_internal(const uint8_t *p, const uint8_t *end)$/;"	f	file:
ff_avc_parse_nal_units	libavformat/avc.c	/^int ff_avc_parse_nal_units(AVIOContext *pb, const uint8_t *buf_in, int size)$/;"	f
ff_avc_parse_nal_units_buf	libavformat/avc.c	/^int ff_avc_parse_nal_units_buf(const uint8_t *buf_in, uint8_t **buf, int *size)$/;"	f
ff_avfilter_default_free_buffer	libavfilter/defaults.c	/^void ff_avfilter_default_free_buffer(AVFilterBuffer *ptr)$/;"	f
ff_avfilter_graph_check_validity	libavfilter/avfiltergraph.c	/^int ff_avfilter_graph_check_validity(AVFilterGraph *graph, AVClass *log_ctx)$/;"	f
ff_avfilter_graph_config_formats	libavfilter/avfiltergraph.c	/^int ff_avfilter_graph_config_formats(AVFilterGraph *graph, AVClass *log_ctx)$/;"	f
ff_avfilter_graph_config_links	libavfilter/avfiltergraph.c	/^int ff_avfilter_graph_config_links(AVFilterGraph *graph, AVClass *log_ctx)$/;"	f
ff_avg_cavs_qpel16_mc00_c	libavcodec/cavsdsp.c	517;"	d	file:
ff_avg_cavs_qpel16_mc00_mmx2	libavcodec/x86/dsputil_mmx.c	/^void ff_avg_cavs_qpel16_mc00_mmx2(uint8_t *dst, uint8_t *src, int stride) {$/;"	f
ff_avg_cavs_qpel8_mc00_c	libavcodec/cavsdsp.c	515;"	d	file:
ff_avg_cavs_qpel8_mc00_mmx2	libavcodec/x86/dsputil_mmx.c	/^void ff_avg_cavs_qpel8_mc00_mmx2(uint8_t *dst, uint8_t *src, int stride) {$/;"	f
ff_avg_h264_chroma_mc8_mmx2_rnd	libavcodec/x86/dsputil_mmx.c	/^void ff_avg_h264_chroma_mc8_mmx2_rnd  (uint8_t *dst, uint8_t *src,$/;"	v
ff_avg_pixels16x16	libavcodec/dsputil_template.c	/^void FUNCC(ff_avg_pixels16x16)(uint8_t *dst, uint8_t *src, int stride) {$/;"	f
ff_avg_pixels16x16_c	libavcodec/dsputil.h	103;"	d
ff_avg_pixels8x8	libavcodec/dsputil_template.c	/^void FUNCC(ff_avg_pixels8x8)(uint8_t *dst, uint8_t *src, int stride) {$/;"	f
ff_avg_pixels8x8_c	libavcodec/dsputil.h	101;"	d
ff_avg_vc1_mspel_mc00_mmx2	libavcodec/x86/dsputil_mmx.c	/^void ff_avg_vc1_mspel_mc00_mmx2(uint8_t *dst, const uint8_t *src, int stride, int rnd) {$/;"	f
ff_avi_demuxer	libavformat/avidec.c	/^AVInputFormat ff_avi_demuxer = {$/;"	v
ff_avi_metadata_conv	libavformat/avi.c	/^const AVMetadataConv ff_avi_metadata_conv[] = {$/;"	v
ff_avi_muxer	libavformat/avienc.c	/^AVOutputFormat ff_avi_muxer = {$/;"	v
ff_avi_tags	libavformat/avi.c	/^const char ff_avi_tags[][5] = {$/;"	v
ff_avisynth_demuxer	libavformat/avisynth.c	/^AVInputFormat ff_avisynth_demuxer = {$/;"	v
ff_avm2_muxer	libavformat/swfenc.c	/^AVOutputFormat ff_avm2_muxer = {$/;"	v
ff_avs_decoder	libavcodec/avs.c	/^AVCodec ff_avs_decoder = {$/;"	v
ff_avs_demuxer	libavformat/avs.c	/^AVInputFormat ff_avs_demuxer = {$/;"	v
ff_b60_sinc	libavcodec/acelp_vectors.c	/^const float ff_b60_sinc[61] = {$/;"	v
ff_bethsoftvid_decoder	libavcodec/bethsoftvideo.c	/^AVCodec ff_bethsoftvid_decoder = {$/;"	v
ff_bethsoftvid_demuxer	libavformat/bethsoftvid.c	/^AVInputFormat ff_bethsoftvid_demuxer = {$/;"	v
ff_bfi_decoder	libavcodec/bfi.c	/^AVCodec ff_bfi_decoder = {$/;"	v
ff_bfi_demuxer	libavformat/bfi.c	/^AVInputFormat ff_bfi_demuxer = {$/;"	v
ff_bfin_get_unscaled_swscale	libswscale/bfin/swscale_bfin.c	/^void ff_bfin_get_unscaled_swscale(SwsContext *c)$/;"	f
ff_bfin_vp3_idct_add	libavcodec/bfin/vp3_bfin.c	/^void ff_bfin_vp3_idct_add (uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_bfin_vp3_idct_put	libavcodec/bfin/vp3_bfin.c	/^void ff_bfin_vp3_idct_put (uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_bgmc_decode	libavcodec/bgmc.c	/^void ff_bgmc_decode(GetBitContext *gb, unsigned int num, int32_t *dst,$/;"	f
ff_bgmc_decode_end	libavcodec/bgmc.c	/^void ff_bgmc_decode_end(GetBitContext *gb)$/;"	f
ff_bgmc_decode_init	libavcodec/bgmc.c	/^void ff_bgmc_decode_init(GetBitContext *gb,$/;"	f
ff_bgmc_end	libavcodec/bgmc.c	/^void ff_bgmc_end(uint8_t **cf_lut, int **cf_lut_status)$/;"	f
ff_bgmc_init	libavcodec/bgmc.c	/^int ff_bgmc_init(AVCodecContext *avctx, uint8_t **cf_lut, int **cf_lut_status)$/;"	f
ff_bink_decoder	libavcodec/bink.c	/^AVCodec ff_bink_decoder = {$/;"	v
ff_bink_demuxer	libavformat/bink.c	/^AVInputFormat ff_bink_demuxer = {$/;"	v
ff_bink_idct_add_c	libavcodec/binkidct.c	/^void ff_bink_idct_add_c(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f
ff_bink_idct_c	libavcodec/binkidct.c	/^void ff_bink_idct_c(DCTELEM *block)$/;"	f
ff_bink_idct_put_c	libavcodec/binkidct.c	/^void ff_bink_idct_put_c(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f
ff_binkaudio_dct_decoder	libavcodec/binkaudio.c	/^AVCodec ff_binkaudio_dct_decoder = {$/;"	v
ff_binkaudio_rdft_decoder	libavcodec/binkaudio.c	/^AVCodec ff_binkaudio_rdft_decoder = {$/;"	v
ff_bktr_demuxer	libavdevice/bktr.c	/^AVInputFormat ff_bktr_demuxer = {$/;"	v
ff_block_permute	libavcodec/dsputil.c	/^void ff_block_permute(DCTELEM *block, uint8_t *permutation, const uint8_t *scantable, int last)$/;"	f
ff_bmp_decoder	libavcodec/bmp.c	/^AVCodec ff_bmp_decoder = {$/;"	v
ff_bmp_encoder	libavcodec/bmpenc.c	/^AVCodec ff_bmp_encoder = {$/;"	v
ff_build_rac_states	libavcodec/rangecoder.c	/^void ff_build_rac_states(RangeCoder *c, int factor, int max_p){$/;"	f
ff_c93_decoder	libavcodec/c93.c	/^AVCodec ff_c93_decoder = {$/;"	v
ff_c93_demuxer	libavformat/c93.c	/^AVInputFormat ff_c93_demuxer = {$/;"	v
ff_caf_demuxer	libavformat/cafdec.c	/^AVInputFormat ff_caf_demuxer = {$/;"	v
ff_caf_muxer	libavformat/cafenc.c	/^AVOutputFormat ff_caf_muxer = {$/;"	v
ff_cavs_chroma_dec	libavcodec/cavsdata.h	/^const struct dec_2dvlc ff_cavs_chroma_dec[5] = {$/;"	v	typeref:struct:dec_2dvlc
ff_cavs_chroma_qp	libavcodec/cavsdata.h	/^const uint8_t ff_cavs_chroma_qp[64] = {$/;"	v
ff_cavs_decoder	libavcodec/cavsdec.c	/^AVCodec ff_cavs_decoder = {$/;"	v
ff_cavs_dequant_mul	libavcodec/cavsdata.h	/^const uint16_t ff_cavs_dequant_mul[64] = {$/;"	v
ff_cavs_dequant_shift	libavcodec/cavsdata.h	/^const uint8_t ff_cavs_dequant_shift[64] = {$/;"	v
ff_cavs_dir_mv	libavcodec/cavsdata.h	/^const cavs_vector ff_cavs_dir_mv   = {0,0,1,REF_DIR};$/;"	v
ff_cavs_end	libavcodec/cavs.c	/^av_cold int ff_cavs_end(AVCodecContext *avctx) {$/;"	f
ff_cavs_filter	libavcodec/cavs.c	/^void ff_cavs_filter(AVSContext *h, enum cavs_mb mb_type) {$/;"	f
ff_cavs_init	libavcodec/cavs.c	/^av_cold int ff_cavs_init(AVCodecContext *avctx) {$/;"	f
ff_cavs_init_mb	libavcodec/cavs.c	/^void ff_cavs_init_mb(AVSContext *h) {$/;"	f
ff_cavs_init_pic	libavcodec/cavs.c	/^void ff_cavs_init_pic(AVSContext *h) {$/;"	f
ff_cavs_init_top_lines	libavcodec/cavs.c	/^void ff_cavs_init_top_lines(AVSContext *h) {$/;"	f
ff_cavs_inter	libavcodec/cavs.c	/^void ff_cavs_inter(AVSContext *h, enum cavs_mb mb_type) {$/;"	f
ff_cavs_inter_dec	libavcodec/cavsdata.h	/^const struct dec_2dvlc ff_cavs_inter_dec[7] = {$/;"	v	typeref:struct:dec_2dvlc
ff_cavs_intra_dec	libavcodec/cavsdata.h	/^const struct dec_2dvlc ff_cavs_intra_dec[7] = {$/;"	v	typeref:struct:dec_2dvlc
ff_cavs_intra_mv	libavcodec/cavsdata.h	/^const cavs_vector ff_cavs_intra_mv = {0,0,1,REF_INTRA};$/;"	v
ff_cavs_load_intra_pred_chroma	libavcodec/cavs.c	/^void ff_cavs_load_intra_pred_chroma(AVSContext *h) {$/;"	f
ff_cavs_load_intra_pred_luma	libavcodec/cavs.c	/^void ff_cavs_load_intra_pred_luma(AVSContext *h, uint8_t *top,$/;"	f
ff_cavs_modify_mb_i	libavcodec/cavs.c	/^void ff_cavs_modify_mb_i(AVSContext *h, int *pred_mode_uv) {$/;"	f
ff_cavs_mv	libavcodec/cavs.c	/^void ff_cavs_mv(AVSContext *h, enum cavs_mv_loc nP, enum cavs_mv_loc nC,$/;"	f
ff_cavs_next_mb	libavcodec/cavs.c	/^int ff_cavs_next_mb(AVSContext *h) {$/;"	f
ff_cavs_partition_flags	libavcodec/cavsdata.h	/^const uint8_t ff_cavs_partition_flags[30] = {$/;"	v
ff_cavs_scan3x3	libavcodec/cavsdata.h	/^const uint8_t ff_cavs_scan3x3[4] = {4,5,7,8};$/;"	v
ff_cavs_un_mv	libavcodec/cavsdata.h	/^const cavs_vector ff_cavs_un_mv    = {0,0,1,NOT_AVAIL};$/;"	v
ff_cavsdsp_init	libavcodec/cavsdsp.c	/^av_cold void ff_cavsdsp_init(CAVSDSPContext* c, AVCodecContext *avctx) {$/;"	f
ff_cavsdsp_init_3dnow	libavcodec/x86/cavsdsp_mmx.c	/^static void ff_cavsdsp_init_3dnow(CAVSDSPContext* c, AVCodecContext *avctx) {$/;"	f	file:
ff_cavsdsp_init_mmx	libavcodec/x86/cavsdsp_mmx.c	/^void ff_cavsdsp_init_mmx(CAVSDSPContext *c, AVCodecContext *avctx)$/;"	f
ff_cavsdsp_init_mmx2	libavcodec/x86/cavsdsp_mmx.c	/^static void ff_cavsdsp_init_mmx2(CAVSDSPContext* c, AVCodecContext *avctx) {$/;"	f	file:
ff_cavsvideo_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_cavsvideo_muxer = {$/;"	v
ff_cavsvideo_parser	libavcodec/cavs_parser.c	/^AVCodecParser ff_cavsvideo_parser = {$/;"	v
ff_cb1_base	libavcodec/ra144.c	/^const uint16_t ff_cb1_base[128]={$/;"	v
ff_cb1_vects	libavcodec/ra144.c	/^const int8_t ff_cb1_vects[128][40]={$/;"	v
ff_cb2_base	libavcodec/ra144.c	/^const uint16_t ff_cb2_base[128]={$/;"	v
ff_cb2_vects	libavcodec/ra144.c	/^const int8_t ff_cb2_vects[128][40]={$/;"	v
ff_ccitt_unpack	libavcodec/faxcompr.c	/^int ff_ccitt_unpack(AVCodecContext *avctx,$/;"	f
ff_ccitt_unpack_init	libavcodec/faxcompr.c	/^av_cold void ff_ccitt_unpack_init(void)$/;"	f
ff_cdg_demuxer	libavformat/cdg.c	/^AVInputFormat ff_cdg_demuxer = {$/;"	v
ff_cdgraphics_decoder	libavcodec/cdgraphics.c	/^AVCodec ff_cdgraphics_decoder = {$/;"	v
ff_celp_circ_addf	libavcodec/celp_filters.c	/^void ff_celp_circ_addf(float *out, const float *in,$/;"	f
ff_celp_convolve_circ	libavcodec/celp_filters.c	/^void ff_celp_convolve_circ(int16_t* fc_out, const int16_t* fc_in,$/;"	f
ff_celp_lp_synthesis_filter	libavcodec/celp_filters.c	/^int ff_celp_lp_synthesis_filter(int16_t *out, const int16_t *filter_coeffs,$/;"	f
ff_celp_lp_synthesis_filterf	libavcodec/celp_filters.c	/^void ff_celp_lp_synthesis_filterf(float *out, const float *filter_coeffs,$/;"	f
ff_celp_lp_zero_synthesis_filterf	libavcodec/celp_filters.c	/^void ff_celp_lp_zero_synthesis_filterf(float *out, const float *filter_coeffs,$/;"	f
ff_celt_bitstream_version_hack	libavcodec/libcelt_dec.c	/^static int ff_celt_bitstream_version_hack(CELTMode *mode)$/;"	f	file:
ff_celt_codec	libavformat/oggparsecelt.c	/^const struct ogg_codec ff_celt_codec = {$/;"	v	typeref:struct:ogg_codec
ff_celt_error_to_averror	libavcodec/libcelt_dec.c	/^static int ff_celt_error_to_averror(int err)$/;"	f	file:
ff_cga_font	libavcodec/cga_data.c	/^const uint8_t ff_cga_font[2048] = {$/;"	v
ff_cga_palette	libavcodec/cga_data.c	/^const uint32_t ff_cga_palette[16] = {$/;"	v
ff_check_alignment	libavcodec/dsputil.c	/^int ff_check_alignment(void){$/;"	f
ff_chomp_bsf	libavcodec/chomp_bsf.c	/^AVBitStreamFilter ff_chomp_bsf = {$/;"	v
ff_chroma_inter_body_mmxext	libavcodec/x86/h264_deblock.asm	/^ff_chroma_inter_body_mmxext:$/;"	l
ff_chroma_intra_body_mmxext	libavcodec/x86/h264_deblock.asm	/^ff_chroma_intra_body_mmxext:$/;"	l
ff_cinepak_decoder	libavcodec/cinepak.c	/^AVCodec ff_cinepak_decoder = {$/;"	v
ff_clean_h263_qscales	libavcodec/ituh263enc.c	/^void ff_clean_h263_qscales(MpegEncContext *s){$/;"	f
ff_clean_intra_table_entries	libavcodec/mpegvideo.c	/^void ff_clean_intra_table_entries(MpegEncContext *s)$/;"	f
ff_clean_mpeg4_qscales	libavcodec/mpeg4videoenc.c	/^void ff_clean_mpeg4_qscales(MpegEncContext *s){$/;"	f
ff_clear_fixed_vector	libavcodec/acelp_vectors.c	/^void ff_clear_fixed_vector(float *out, const AMRFixed *in, int size)$/;"	f
ff_cljr_decoder	libavcodec/cljr.c	/^AVCodec ff_cljr_decoder = {$/;"	v
ff_cljr_encoder	libavcodec/cljr.c	/^AVCodec ff_cljr_encoder = {$/;"	v
ff_cmap_read_palette	libavcodec/iff.c	/^static int ff_cmap_read_palette(AVCodecContext *avctx, uint32_t *pal)$/;"	f	file:
ff_codec_aiff_tags	libavformat/aiff.h	/^static const AVCodecTag ff_codec_aiff_tags[] = {$/;"	v
ff_codec_bmp_tags	libavformat/riff.c	/^const AVCodecTag ff_codec_bmp_tags[] = {$/;"	v
ff_codec_caf_tags	libavformat/caf.c	/^const AVCodecTag ff_codec_caf_tags[] = {$/;"	v
ff_codec_get_id	libavformat/utils.c	/^enum CodecID ff_codec_get_id(const AVCodecTag *tags, unsigned int tag)$/;"	f
ff_codec_get_tag	libavformat/utils.c	/^unsigned int ff_codec_get_tag(const AVCodecTag *tags, enum CodecID id)$/;"	f
ff_codec_guid_get_id	libavformat/riff.c	/^enum CodecID ff_codec_guid_get_id(const AVCodecGuid *guids, ff_asf_guid guid)$/;"	f
ff_codec_movsubtitle_tags	libavformat/isom.c	/^const AVCodecTag ff_codec_movsubtitle_tags[] = {$/;"	v
ff_codec_rso_tags	libavformat/rso.c	/^const AVCodecTag ff_codec_rso_tags[] = {$/;"	v
ff_codec_wav_guids	libavformat/riff.c	/^const AVCodecGuid ff_codec_wav_guids[] = {$/;"	v
ff_codec_wav_tags	libavformat/riff.c	/^const AVCodecTag ff_codec_wav_tags[] = {$/;"	v
ff_combine_frame	libavcodec/parser.c	/^int ff_combine_frame(ParseContext *pc, int next, const uint8_t **buf, int *buf_size)$/;"	f
ff_compute_band_indexes	libavcodec/mpegaudiodec.c	/^static void ff_compute_band_indexes(MPADecodeContext *s, GranuleDef *g){$/;"	f	file:
ff_concat_protocol	libavformat/concat.c	/^URLProtocol ff_concat_protocol = {$/;"	v
ff_convert_matrix	libavcodec/mpegvideo_enc.c	/^void ff_convert_matrix(DSPContext *dsp, int (*qmat)[64], uint16_t (*qmat16)[2][64],$/;"	f
ff_cook_decoder	libavcodec/cook.c	/^AVCodec ff_cook_decoder =$/;"	v
ff_copy_and_dup	libavcodec/ra144.c	/^void ff_copy_and_dup(int16_t *target, const int16_t *source, int offset)$/;"	f
ff_copy_bits	libavcodec/bitstream.c	/^void ff_copy_bits(PutBitContext *pb, const uint8_t *src, int length)$/;"	f
ff_copy_bits	libavcodec/put_bits.h	125;"	d
ff_copy_dshow_media_type	libavdevice/dshow_common.c	/^long ff_copy_dshow_media_type(AM_MEDIA_TYPE *dst, const AM_MEDIA_TYPE *src)$/;"	f
ff_copy_pce_data	libavcodec/mpeg4audio.c	/^int ff_copy_pce_data(PutBitContext *pb, GetBitContext *gb)$/;"	f
ff_copy_picture	libavcodec/mpegvideo.c	/^void ff_copy_picture(Picture *dst, Picture *src){$/;"	f
ff_copy_rectangle	libavfilter/drawutils.c	/^void ff_copy_rectangle(uint8_t *dst[4], int dst_linesize[4],$/;"	f
ff_cos	libavcodec/celp_math.c	/^int16_t ff_cos(uint16_t arg)$/;"	f
ff_crc04C11DB7_update	libavformat/aviobuf.c	/^unsigned long ff_crc04C11DB7_update(unsigned long checksum, const uint8_t *buf,$/;"	f
ff_crc_muxer	libavformat/crcenc.c	/^AVOutputFormat ff_crc_muxer = {$/;"	v
ff_create_schro_frame	libavcodec/libschroedinger.c	/^SchroFrame *ff_create_schro_frame(AVCodecContext *avccontext,$/;"	f
ff_cropTbl	libavcodec/dsputil.c	/^uint8_t ff_cropTbl[256 + 2 * MAX_NEG_CROP] = {0, };$/;"	v
ff_cropTbl	libavcodec/motionpixels_tablegen.c	26;"	d	file:
ff_crypto_protocol	libavformat/crypto.c	/^URLProtocol ff_crypto_protocol = {$/;"	v
ff_cscd_decoder	libavcodec/cscd.c	/^AVCodec ff_cscd_decoder = {$/;"	v
ff_cyuv_decoder	libavcodec/cyuv.c	/^AVCodec ff_cyuv_decoder = {$/;"	v
ff_data_guid	libavformat/wtv.c	/^const ff_asf_guid ff_data_guid =$/;"	v
ff_data_to_hex	libavformat/utils.c	/^char *ff_data_to_hex(char *buff, const uint8_t *src, int s, int lowercase)$/;"	f
ff_daud_demuxer	libavformat/daud.c	/^AVInputFormat ff_daud_demuxer = {$/;"	v
ff_daud_muxer	libavformat/daud.c	/^AVOutputFormat ff_daud_muxer =$/;"	v
ff_dc_chroma_vlc	libavcodec/mpeg12.c	/^VLC ff_dc_chroma_vlc;$/;"	v
ff_dc_lum_vlc	libavcodec/mpeg12.c	/^VLC ff_dc_lum_vlc;$/;"	v
ff_dca_decoder	libavcodec/dca.c	/^AVCodec ff_dca_decoder = {$/;"	v
ff_dca_encoder	libavcodec/dcaenc.c	/^AVCodec ff_dca_encoder = {$/;"	v
ff_dca_parser	libavcodec/dca_parser.c	/^AVCodecParser ff_dca_parser = {$/;"	v
ff_dcadsp_init	libavcodec/dcadsp.c	/^void ff_dcadsp_init(DCADSPContext *s)$/;"	f
ff_dcadsp_init_arm	libavcodec/arm/dcadsp_init_arm.c	/^void av_cold ff_dcadsp_init_arm(DCADSPContext *s)$/;"	f
ff_dct_calc_III_c	libavcodec/dct.c	/^static void ff_dct_calc_III_c(DCTContext *ctx, FFTSample *data)$/;"	f	file:
ff_dct_calc_II_c	libavcodec/dct.c	/^static void ff_dct_calc_II_c(DCTContext *ctx, FFTSample *data)$/;"	f	file:
ff_dct_calc_I_c	libavcodec/dct.c	/^static void ff_dct_calc_I_c(DCTContext *ctx, FFTSample *data)$/;"	f	file:
ff_dct_common_init	libavcodec/mpegvideo.c	/^av_cold int ff_dct_common_init(MpegEncContext *s)$/;"	f
ff_dct_end	libavcodec/dct.c	/^av_cold void ff_dct_end(DCTContext *s)$/;"	f
ff_dct_init	libavcodec/dct.c	/^av_cold int ff_dct_init(DCTContext *s, int nbits, enum DCTTransformType inverse)$/;"	f
ff_dct_init_mmx	libavcodec/x86/fft.c	/^av_cold void ff_dct_init_mmx(DCTContext *s)$/;"	f
ff_deblock_v_luma_8_mmxext	libavcodec/x86/h264dsp_mmx.c	/^static void ff_deblock_v_luma_8_mmxext(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
ff_deblock_v_luma_intra_8_mmxext	libavcodec/x86/h264dsp_mmx.c	/^static void ff_deblock_v_luma_intra_8_mmxext(uint8_t *pix, int stride, int alpha, int beta)$/;"	f	file:
ff_decode_10_pulses_35bits	libavcodec/acelp_vectors.c	/^void ff_decode_10_pulses_35bits(const int16_t *fixed_index,$/;"	f
ff_decode_dxt1	libavcodec/s3tc.c	/^void ff_decode_dxt1(const uint8_t *s, uint8_t *dst,$/;"	f
ff_decode_dxt3	libavcodec/s3tc.c	/^void ff_decode_dxt3(const uint8_t *s, uint8_t *dst,$/;"	f
ff_decode_pitch_lag	libavcodec/acelp_pitch_delay.c	/^void ff_decode_pitch_lag(int *lag_int, int *lag_frac, int pitch_index,$/;"	f
ff_decode_sbr_extension	libavcodec/aacsbr.c	/^int ff_decode_sbr_extension(AACContext *ac, SpectralBandReplication *sbr,$/;"	f
ff_default_chroma_qscale_table	libavcodec/mpegvideo.c	/^static const uint8_t ff_default_chroma_qscale_table[32]={$/;"	v	file:
ff_dfa_decoder	libavcodec/dfa.c	/^AVCodec ff_dfa_decoder = {$/;"	v
ff_dfa_demuxer	libavformat/dfa.c	/^AVInputFormat ff_dfa_demuxer = {$/;"	v
ff_dir_entry_guid	libavformat/wtv.c	/^const ff_asf_guid ff_dir_entry_guid =$/;"	v
ff_dirac_codec	libavformat/oggparsedirac.c	/^const struct ogg_codec ff_dirac_codec = {$/;"	v	typeref:struct:ogg_codec
ff_dirac_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_dirac_muxer = {$/;"	v
ff_dirac_parse_sequence_header	libavcodec/dirac.c	/^int ff_dirac_parse_sequence_header(AVCodecContext *avctx, GetBitContext *gb,$/;"	f
ff_dirac_parser	libavcodec/dirac_parser.c	/^AVCodecParser ff_dirac_parser = {$/;"	v
ff_dirac_schro_get_video_format_idx	libavcodec/libdirac_libschro.c	/^unsigned int ff_dirac_schro_get_video_format_idx(AVCodecContext *avccontext)$/;"	f
ff_dirac_schro_queue_free	libavcodec/libdirac_libschro.c	/^void ff_dirac_schro_queue_free(FfmpegDiracSchroQueue *queue,$/;"	f
ff_dirac_schro_queue_init	libavcodec/libdirac_libschro.c	/^void ff_dirac_schro_queue_init(FfmpegDiracSchroQueue *queue)$/;"	f
ff_dirac_schro_queue_pop	libavcodec/libdirac_libschro.c	/^void *ff_dirac_schro_queue_pop(FfmpegDiracSchroQueue *queue)$/;"	f
ff_dirac_schro_queue_push_back	libavcodec/libdirac_libschro.c	/^int ff_dirac_schro_queue_push_back(FfmpegDiracSchroQueue *queue, void *p_data)$/;"	f
ff_dirac_schro_video_format_info	libavcodec/libdirac_libschro.c	/^static const FfmpegDiracSchroVideoFormatInfo ff_dirac_schro_video_format_info[] = {$/;"	v	file:
ff_dirac_video_formats	libavcodec/libdiracenc.c	/^static const VideoFormat ff_dirac_video_formats[]={$/;"	v	file:
ff_dlog_link	libavfilter/avfilter.c	/^static void ff_dlog_link(void *ctx, AVFilterLink *link, int end)$/;"	f	file:
ff_dlog_ref	libavfilter/avfilter.c	/^static void ff_dlog_ref(void *ctx, AVFilterBufferRef *ref, int end)$/;"	f	file:
ff_dnxhd_cid_table	libavcodec/dnxhddata.c	/^const CIDEntry ff_dnxhd_cid_table[] = {$/;"	v
ff_dnxhd_decoder	libavcodec/dnxhddec.c	/^AVCodec ff_dnxhd_decoder = {$/;"	v
ff_dnxhd_encoder	libavcodec/dnxhdenc.c	/^AVCodec ff_dnxhd_encoder = {$/;"	v
ff_dnxhd_find_cid	libavcodec/dnxhddata.c	/^int ff_dnxhd_find_cid(AVCodecContext *avctx)$/;"	f
ff_dnxhd_get_cid_table	libavcodec/dnxhddata.c	/^int ff_dnxhd_get_cid_table(int cid)$/;"	f
ff_dnxhd_init_mmx	libavcodec/x86/dnxhd_mmx.c	/^void ff_dnxhd_init_mmx(DNXHDEncContext *ctx)$/;"	f
ff_dnxhd_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_dnxhd_muxer = {$/;"	v
ff_dnxhd_parser	libavcodec/dnxhd_parser.c	/^AVCodecParser ff_dnxhd_parser = {$/;"	v
ff_do_elbg	libavcodec/elbg.c	/^void ff_do_elbg(int *points, int dim, int numpoints, int *codebook,$/;"	f
ff_dot_productf	libavcodec/celp_math.c	/^float ff_dot_productf(const float* a, const float* b, int length)$/;"	f
ff_dpx_decoder	libavcodec/dpx.c	/^AVCodec ff_dpx_decoder = {$/;"	v
ff_dpx_encoder	libavcodec/dpxenc.c	/^AVCodec ff_dpx_encoder = {$/;"	v
ff_draw_horiz_band	libavcodec/mpegvideo.c	/^void ff_draw_horiz_band(MpegEncContext *s, int y, int h){$/;"	f
ff_draw_pc_font	libavcodec/cga_data.c	/^void ff_draw_pc_font(uint8_t *dst, int linesize, const uint8_t *font, int font_height, int ch, int fg, int bg)$/;"	f
ff_draw_rectangle	libavfilter/drawutils.c	/^void ff_draw_rectangle(uint8_t *dst[4], int dst_linesize[4],$/;"	f
ff_dshow_context_class	libavdevice/dshow_common.c	/^static const AVClass ff_dshow_context_class = { "DirectShow", dshow_context_to_name };$/;"	v	file:
ff_dshow_context_class_ptr	libavdevice/dshow_common.c	/^const AVClass *ff_dshow_context_class_ptr = &ff_dshow_context_class;$/;"	v
ff_dshow_demuxer	libavdevice/dshow.c	/^AVInputFormat ff_dshow_demuxer = {$/;"	v
ff_dsicin_demuxer	libavformat/dsicin.c	/^AVInputFormat ff_dsicin_demuxer = {$/;"	v
ff_dsicinaudio_decoder	libavcodec/dsicinav.c	/^AVCodec ff_dsicinaudio_decoder = {$/;"	v
ff_dsicinvideo_decoder	libavcodec/dsicinav.c	/^AVCodec ff_dsicinvideo_decoder = {$/;"	v
ff_dsputil_init_armv5te	libavcodec/arm/dsputil_init_armv5te.c	/^void av_cold ff_dsputil_init_armv5te(DSPContext* c, AVCodecContext *avctx)$/;"	f
ff_dsputil_init_armv6	libavcodec/arm/dsputil_init_armv6.c	/^void av_cold ff_dsputil_init_armv6(DSPContext* c, AVCodecContext *avctx)$/;"	f
ff_dsputil_init_dwt	libavcodec/dwt.c	/^void ff_dsputil_init_dwt(DSPContext *c)$/;"	f
ff_dsputil_init_iwmmxt	libavcodec/arm/dsputil_iwmmxt.c	/^void ff_dsputil_init_iwmmxt(DSPContext* c, AVCodecContext *avctx)$/;"	f
ff_dsputil_init_neon	libavcodec/arm/dsputil_init_neon.c	/^void ff_dsputil_init_neon(DSPContext *c, AVCodecContext *avctx)$/;"	f
ff_dsputil_init_vfp	libavcodec/arm/dsputil_init_vfp.c	/^void ff_dsputil_init_vfp(DSPContext* c, AVCodecContext *avctx)$/;"	f
ff_dst_calc_I_c	libavcodec/dct.c	/^static void ff_dst_calc_I_c(DCTContext *ctx, FFTSample *data)$/;"	f	file:
ff_dts_demuxer	libavformat/dtsdec.c	/^AVInputFormat ff_dts_demuxer = {$/;"	v
ff_dts_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_dts_muxer = {$/;"	v
ff_dump_extradata_bsf	libavcodec/dump_extradata_bsf.c	/^AVBitStreamFilter ff_dump_extradata_bsf={$/;"	v
ff_dv1394_demuxer	libavdevice/dv1394.c	/^AVInputFormat ff_dv1394_demuxer = {$/;"	v
ff_dv_codec_profile	libavcodec/dvdata.c	/^const DVprofile* ff_dv_codec_profile(AVCodecContext* codec)$/;"	f
ff_dv_demuxer	libavformat/dv.c	/^AVInputFormat ff_dv_demuxer = {$/;"	v
ff_dv_frame_profile	libavcodec/dvdata.c	/^const DVprofile* ff_dv_frame_profile(const DVprofile *sys,$/;"	f
ff_dv_muxer	libavformat/dvenc.c	/^AVOutputFormat ff_dv_muxer = {$/;"	v
ff_dvbsub_decoder	libavcodec/dvbsubdec.c	/^AVCodec ff_dvbsub_decoder = {$/;"	v
ff_dvbsub_encoder	libavcodec/dvbsub.c	/^AVCodec ff_dvbsub_encoder = {$/;"	v
ff_dvbsub_parser	libavcodec/dvbsub_parser.c	/^AVCodecParser ff_dvbsub_parser = {$/;"	v
ff_dvdsub_decoder	libavcodec/dvdsubdec.c	/^AVCodec ff_dvdsub_decoder = {$/;"	v
ff_dvdsub_encoder	libavcodec/dvdsubenc.c	/^AVCodec ff_dvdsub_encoder = {$/;"	v
ff_dvdsub_parser	libavcodec/dvdsub_parser.c	/^AVCodecParser ff_dvdsub_parser = {$/;"	v
ff_dvvideo_decoder	libavcodec/dv.c	/^AVCodec ff_dvvideo_decoder = {$/;"	v
ff_dvvideo_encoder	libavcodec/dv.c	/^AVCodec ff_dvvideo_encoder = {$/;"	v
ff_dwt_init	libavcodec/dwt.c	/^void ff_dwt_init(DWTContext *c)$/;"	f
ff_dwt_init_x86	libavcodec/x86/snowdsp_mmx.c	/^void ff_dwt_init_x86(DWTContext *c)$/;"	f
ff_dxa_decoder	libavcodec/dxa.c	/^AVCodec ff_dxa_decoder = {$/;"	v
ff_dxa_demuxer	libavformat/dxa.c	/^AVInputFormat ff_dxa_demuxer = {$/;"	v
ff_dxva2_commit_buffer	libavcodec/dxva2.c	/^int ff_dxva2_commit_buffer(AVCodecContext *avctx,$/;"	f
ff_dxva2_common_end_frame	libavcodec/dxva2.c	/^int ff_dxva2_common_end_frame(AVCodecContext *avctx, MpegEncContext *s,$/;"	f
ff_dxva2_get_surface	libavcodec/dxva2.c	/^void *ff_dxva2_get_surface(const Picture *picture)$/;"	f
ff_dxva2_get_surface_index	libavcodec/dxva2.c	/^unsigned ff_dxva2_get_surface_index(const struct dxva_context *ctx,$/;"	f
ff_ea_cdata_demuxer	libavformat/eacdata.c	/^AVInputFormat ff_ea_cdata_demuxer = {$/;"	v
ff_ea_demuxer	libavformat/electronicarts.c	/^AVInputFormat ff_ea_demuxer = {$/;"	v
ff_ea_idct_put_c	libavcodec/eaidct.c	/^void ff_ea_idct_put_c(uint8_t *dest, int linesize, DCTELEM *block) {$/;"	f
ff_eac3_apply_spectral_extension	libavcodec/eac3dec.c	/^void ff_eac3_apply_spectral_extension(AC3DecodeContext *s)$/;"	f
ff_eac3_bits_vs_hebap	libavcodec/eac3dec_data.c	/^const uint8_t ff_eac3_bits_vs_hebap[20] = {$/;"	v
ff_eac3_decode_transform_coeffs_aht_ch	libavcodec/eac3dec.c	/^void ff_eac3_decode_transform_coeffs_aht_ch(AC3DecodeContext *s, int ch)$/;"	f
ff_eac3_decoder	libavcodec/ac3dec.c	/^AVCodec ff_eac3_decoder = {$/;"	v
ff_eac3_default_chmap	libavcodec/ac3tab.c	/^const uint16_t ff_eac3_default_chmap[8] = {$/;"	v
ff_eac3_default_cpl_band_struct	libavcodec/ac3tab.c	/^const uint8_t ff_eac3_default_cpl_band_struct[18] = {$/;"	v
ff_eac3_default_spx_band_struct	libavcodec/ac3dec_data.c	/^const uint8_t ff_eac3_default_spx_band_struct[17] =$/;"	v
ff_eac3_demuxer	libavformat/ac3dec.c	/^AVInputFormat ff_eac3_demuxer = {$/;"	v
ff_eac3_encoder	libavcodec/eac3enc.c	/^AVCodec ff_eac3_encoder = {$/;"	v
ff_eac3_frm_expstr	libavcodec/eac3dec_data.c	/^const uint8_t ff_eac3_frm_expstr[32][6] = {$/;"	v
ff_eac3_gaq_remap_1	libavcodec/eac3dec_data.c	/^const int16_t ff_eac3_gaq_remap_1[12] = {$/;"	v
ff_eac3_gaq_remap_2_4_a	libavcodec/eac3dec_data.c	/^const int16_t ff_eac3_gaq_remap_2_4_a[9][2] = {$/;"	v
ff_eac3_gaq_remap_2_4_b	libavcodec/eac3dec_data.c	/^const int16_t ff_eac3_gaq_remap_2_4_b[9][2] = {$/;"	v
ff_eac3_hebap_tab	libavcodec/ac3dec_data.c	/^const uint8_t ff_eac3_hebap_tab[64] = {$/;"	v
ff_eac3_mantissa_vq	libavcodec/eac3dec_data.c	/^const int16_t (* const ff_eac3_mantissa_vq[8])[6] = {$/;"	v
ff_eac3_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_eac3_muxer = {$/;"	v
ff_eac3_output_frame_header	libavcodec/eac3enc.c	/^void ff_eac3_output_frame_header(AC3EncodeContext *s)$/;"	f
ff_eac3_parse_header	libavcodec/eac3dec.c	/^int ff_eac3_parse_header(AC3DecodeContext *s)$/;"	f
ff_eac3_set_cpl_states	libavcodec/eac3enc.c	/^void ff_eac3_set_cpl_states(AC3EncodeContext *s)$/;"	f
ff_eac3_spx_atten_tab	libavcodec/eac3dec_data.c	/^const float ff_eac3_spx_atten_tab[32][3] = {$/;"	v
ff_eacmv_decoder	libavcodec/eacmv.c	/^AVCodec ff_eacmv_decoder = {$/;"	v
ff_eamad_decoder	libavcodec/eamad.c	/^AVCodec ff_eamad_decoder = {$/;"	v
ff_eatgq_decoder	libavcodec/eatgq.c	/^AVCodec ff_eatgq_decoder = {$/;"	v
ff_eatgv_decoder	libavcodec/eatgv.c	/^AVCodec ff_eatgv_decoder = {$/;"	v
ff_eatqi_decoder	libavcodec/eatqi.c	/^AVCodec ff_eatqi_decoder = {$/;"	v
ff_ega_palette	libavcodec/cga_data.c	/^const uint32_t ff_ega_palette[64] = {$/;"	v
ff_eightbps_decoder	libavcodec/8bps.c	/^AVCodec ff_eightbps_decoder = {$/;"	v
ff_eightsvx_exp_decoder	libavcodec/8svx.c	/^AVCodec ff_eightsvx_exp_decoder = {$/;"	v
ff_eightsvx_fib_decoder	libavcodec/8svx.c	/^AVCodec ff_eightsvx_fib_decoder = {$/;"	v
ff_eightsvx_raw_decoder	libavcodec/8svx.c	/^AVCodec ff_eightsvx_raw_decoder = {$/;"	v
ff_emulated_edge_mc	libavcodec/dsputil.h	214;"	d
ff_emulated_edge_mc	libavcodec/dsputil_template.c	/^void FUNC(ff_emulated_edge_mc)(uint8_t *buf, const uint8_t *src, int linesize, int block_w, int block_h,$/;"	f
ff_end_tag	libavformat/riff.c	/^void ff_end_tag(AVIOContext *pb, int64_t start)$/;"	f
ff_energy_tab	libavcodec/ra144.c	/^const int16_t ff_energy_tab[32]={$/;"	v
ff_epzs_motion_search	libavcodec/motion_est_template.c	/^inline int ff_epzs_motion_search(MpegEncContext * s, int *mx_ptr, int *my_ptr,$/;"	f
ff_er_add_slice	libavcodec/error_resilience.c	/^void ff_er_add_slice(MpegEncContext *s, int startx, int starty, int endx, int endy, int status){$/;"	f
ff_er_frame_end	libavcodec/error_resilience.c	/^void ff_er_frame_end(MpegEncContext *s){$/;"	f
ff_er_frame_start	libavcodec/error_resilience.c	/^void ff_er_frame_start(MpegEncContext *s){$/;"	f
ff_escape124_decoder	libavcodec/escape124.c	/^AVCodec ff_escape124_decoder = {$/;"	v
ff_estimate_b_frame_motion	libavcodec/motion_est.c	/^void ff_estimate_b_frame_motion(MpegEncContext * s,$/;"	f
ff_estimate_motion_b	libavcodec/motion_est.c	/^static int ff_estimate_motion_b(MpegEncContext * s,$/;"	f	file:
ff_estimate_p_frame_motion	libavcodec/motion_est.c	/^void ff_estimate_p_frame_motion(MpegEncContext * s,$/;"	f
ff_eval_coefs	libavcodec/ra144.c	/^void ff_eval_coefs(int *coefs, const int *refl)$/;"	f
ff_eval_refl	libavcodec/ra144.c	/^int ff_eval_refl(int *refl, const int16_t *coefs, AVCodecContext *avctx)$/;"	f
ff_exp2	libavcodec/celp_math.c	/^int ff_exp2(uint16_t power)$/;"	f
ff_faandct	libavcodec/faandct.c	/^void ff_faandct(DCTELEM * data)$/;"	f
ff_faandct248	libavcodec/faandct.c	/^void ff_faandct248(DCTELEM * data)$/;"	f
ff_faanidct	libavcodec/faanidct.c	/^void ff_faanidct(DCTELEM block[64]){$/;"	f
ff_faanidct_add	libavcodec/faanidct.c	/^void ff_faanidct_add(uint8_t *dest, int line_size, DCTELEM block[64]){$/;"	f
ff_faanidct_put	libavcodec/faanidct.c	/^void ff_faanidct_put(uint8_t *dest, int line_size, DCTELEM block[64]){$/;"	f
ff_fbdev_demuxer	libavdevice/fbdev.c	/^AVInputFormat ff_fbdev_demuxer = {$/;"	v
ff_fc_2pulses_9bits_track1	libavcodec/acelp_vectors.c	/^const uint8_t ff_fc_2pulses_9bits_track1[16] =$/;"	v
ff_fc_2pulses_9bits_track1_gray	libavcodec/acelp_vectors.c	/^const uint8_t ff_fc_2pulses_9bits_track1_gray[16] =$/;"	v
ff_fc_2pulses_9bits_track2_gray	libavcodec/acelp_vectors.c	/^const uint8_t ff_fc_2pulses_9bits_track2_gray[32] =$/;"	v
ff_fc_4pulses_8bits_track_4	libavcodec/acelp_vectors.c	/^const uint8_t ff_fc_4pulses_8bits_track_4[32] =$/;"	v
ff_fc_4pulses_8bits_tracks_13	libavcodec/acelp_vectors.c	/^const uint8_t ff_fc_4pulses_8bits_tracks_13[16] =$/;"	v
ff_fdct248_islow	libavcodec/jfdctint.c	/^ff_fdct248_islow (DCTELEM * data)$/;"	f
ff_fdct_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void ff_fdct_mlib(DCTELEM *data)$/;"	f	file:
ff_fdct_mmx	libavcodec/x86/fdct_mmx.c	/^void ff_fdct_mmx(int16_t *block)$/;"	f
ff_fdct_mmx2	libavcodec/x86/fdct_mmx.c	/^void ff_fdct_mmx2(int16_t *block)$/;"	f
ff_fdct_sse2	libavcodec/x86/fdct_mmx.c	/^void ff_fdct_sse2(int16_t *block)$/;"	f
ff_fetch_timestamp	libavcodec/parser.c	/^void ff_fetch_timestamp(AVCodecParserContext *s, int off, int remove){$/;"	f
ff_ffm_demuxer	libavformat/ffmdec.c	/^AVInputFormat ff_ffm_demuxer = {$/;"	v
ff_ffm_muxer	libavformat/ffmenc.c	/^AVOutputFormat ff_ffm_muxer = {$/;"	v
ff_ffmetadata_demuxer	libavformat/ffmetadec.c	/^AVInputFormat ff_ffmetadata_demuxer = {$/;"	v
ff_ffmetadata_muxer	libavformat/ffmetaenc.c	/^AVOutputFormat ff_ffmetadata_muxer = {$/;"	v
ff_fft_calc_3dn2	libavcodec/x86/fft_3dn2.c	/^void ff_fft_calc_3dn2(FFTContext *s, FFTComplex *z)$/;"	f
ff_fft_calc_3dn2	libavcodec/x86/fft_3dn2.c	33;"	d	file:
ff_fft_calc_avx	libavcodec/x86/fft_sse.c	/^void ff_fft_calc_avx(FFTContext *s, FFTComplex *z)$/;"	f
ff_fft_calc_c	libavcodec/fft.c	/^static void ff_fft_calc_c(FFTContext *s, FFTComplex *z)$/;"	f	file:
ff_fft_calc_neon	libavcodec/arm/mdct_neon.S	/^#define ff_fft_calc_neon X(ff_fft_calc_neon)$/;"	d
ff_fft_calc_sse	libavcodec/x86/fft_sse.c	/^void ff_fft_calc_sse(FFTContext *s, FFTComplex *z)$/;"	f
ff_fft_dispatch_3dn2	libavcodec/x86/fft_3dn2.c	34;"	d	file:
ff_fft_dispatch_interleave_3dn2	libavcodec/x86/fft_3dn2.c	35;"	d	file:
ff_fft_end	libavcodec/fft.c	/^av_cold void ff_fft_end(FFTContext *s)$/;"	f
ff_fft_end	libavcodec/fft.h	127;"	d
ff_fft_fixed_init_arm	libavcodec/arm/fft_fixed_init_arm.c	/^av_cold void ff_fft_fixed_init_arm(FFTContext *s)$/;"	f
ff_fft_init	libavcodec/fft.c	/^av_cold int ff_fft_init(FFTContext *s, int nbits, int inverse)$/;"	f
ff_fft_init	libavcodec/fft.h	126;"	d
ff_fft_init_altivec	libavcodec/ppc/fft_altivec.c	/^av_cold void ff_fft_init_altivec(FFTContext *s)$/;"	f
ff_fft_init_arm	libavcodec/arm/fft_init_arm.c	/^av_cold void ff_fft_init_arm(FFTContext *s)$/;"	f
ff_fft_init_mmx	libavcodec/x86/fft.c	/^av_cold void ff_fft_init_mmx(FFTContext *s)$/;"	f
ff_fft_permute_c	libavcodec/fft.c	/^static void ff_fft_permute_c(FFTContext *s, FFTComplex *z)$/;"	f	file:
ff_fft_permute_sse	libavcodec/x86/fft_sse.c	/^void ff_fft_permute_sse(FFTContext *s, FFTComplex *z)$/;"	f
ff_ffv1_decoder	libavcodec/ffv1.c	/^AVCodec ff_ffv1_decoder = {$/;"	v
ff_ffv1_encoder	libavcodec/ffv1.c	/^AVCodec ff_ffv1_encoder = {$/;"	v
ff_ffvhuff_decoder	libavcodec/huffyuv.c	/^AVCodec ff_ffvhuff_decoder = {$/;"	v
ff_ffvhuff_encoder	libavcodec/huffyuv.c	/^AVCodec ff_ffvhuff_encoder = {$/;"	v
ff_file_protocol	libavformat/file.c	/^URLProtocol ff_file_protocol = {$/;"	v
ff_fill_line_with_color	libavfilter/drawutils.c	/^int ff_fill_line_with_color(uint8_t *line[4], int pixel_step[4], int w, uint8_t dst_color[4],$/;"	f
ff_filmstrip_demuxer	libavformat/filmstripdec.c	/^AVInputFormat ff_filmstrip_demuxer = {$/;"	v
ff_filmstrip_muxer	libavformat/filmstripenc.c	/^AVOutputFormat ff_filmstrip_muxer = {$/;"	v
ff_find_hwaccel	libavcodec/utils.c	/^AVHWAccel *ff_find_hwaccel(enum CodecID codec_id, enum PixelFormat pix_fmt)$/;"	f
ff_find_pix_fmt	libavcodec/rawdec.c	/^enum PixelFormat ff_find_pix_fmt(const PixelFormatTag *tags, unsigned int fourcc)$/;"	f
ff_find_start_code	libavcodec/mpegvideo.c	/^const uint8_t *ff_find_start_code(const uint8_t * restrict p, const uint8_t *end, uint32_t * restrict state){$/;"	f
ff_find_stream_index	libavformat/utils.c	/^int ff_find_stream_index(AVFormatContext *s, int id)$/;"	f
ff_find_unused_picture	libavcodec/mpegvideo.c	/^int ff_find_unused_picture(MpegEncContext *s, int shared){$/;"	f
ff_fix_long_mvs	libavcodec/motion_est.c	/^void ff_fix_long_mvs(MpegEncContext * s, uint8_t *field_select_table, int field_select,$/;"	f
ff_fix_long_p_mvs	libavcodec/motion_est.c	/^void ff_fix_long_p_mvs(MpegEncContext * s)$/;"	f
ff_flac_blocksize_table	libavcodec/flacdata.c	/^const int16_t ff_flac_blocksize_table[16] = {$/;"	v
ff_flac_codec	libavformat/oggparseflac.c	/^const struct ogg_codec ff_flac_codec = {$/;"	v	typeref:struct:ogg_codec
ff_flac_decode_frame_header	libavcodec/flac.c	/^int ff_flac_decode_frame_header(AVCodecContext *avctx, GetBitContext *gb,$/;"	f
ff_flac_decoder	libavcodec/flacdec.c	/^AVCodec ff_flac_decoder = {$/;"	v
ff_flac_demuxer	libavformat/flacdec.c	/^AVInputFormat ff_flac_demuxer = {$/;"	v
ff_flac_encoder	libavcodec/flacenc.c	/^AVCodec ff_flac_encoder = {$/;"	v
ff_flac_get_max_frame_size	libavcodec/flac.c	/^int ff_flac_get_max_frame_size(int blocksize, int ch, int bps)$/;"	f
ff_flac_is_extradata_valid	libavcodec/flacdec.c	/^int ff_flac_is_extradata_valid(AVCodecContext *avctx,$/;"	f
ff_flac_muxer	libavformat/flacenc.c	/^AVOutputFormat ff_flac_muxer = {$/;"	v
ff_flac_parse_block_header	libavcodec/flacdec.c	/^void ff_flac_parse_block_header(const uint8_t *block_header,$/;"	f
ff_flac_parse_streaminfo	libavcodec/flacdec.c	/^void ff_flac_parse_streaminfo(AVCodecContext *avctx, struct FLACStreaminfo *s,$/;"	f
ff_flac_parser	libavcodec/flac_parser.c	/^AVCodecParser ff_flac_parser = {$/;"	v
ff_flac_sample_rate_table	libavcodec/flacdata.c	/^const int ff_flac_sample_rate_table[16] =$/;"	v
ff_flac_write_header	libavformat/flacenc_header.c	/^int ff_flac_write_header(AVIOContext *pb, AVCodecContext *codec,$/;"	f
ff_flashsv2_encoder	libavcodec/flashsv2enc.c	/^AVCodec ff_flashsv2_encoder = {$/;"	v
ff_flashsv_decoder	libavcodec/flashsv.c	/^AVCodec ff_flashsv_decoder = {$/;"	v
ff_flashsv_encoder	libavcodec/flashsvenc.c	/^AVCodec ff_flashsv_encoder = {$/;"	v
ff_flic_decoder	libavcodec/flicvideo.c	/^AVCodec ff_flic_decoder = {$/;"	v
ff_flic_demuxer	libavformat/flic.c	/^AVInputFormat ff_flic_demuxer = {$/;"	v
ff_float_interleave_c	libavcodec/fmtconvert.c	/^void ff_float_interleave_c(float *dst, const float **src, unsigned int len,$/;"	f
ff_float_to_int16_interleave6_3dn2	libavcodec/x86/fmtconvert_mmx.c	145;"	d	file:
ff_float_to_int16_interleave6_3dnow	libavcodec/x86/fmtconvert_mmx.c	144;"	d	file:
ff_float_to_int16_interleave6_sse	libavcodec/x86/fmtconvert_mmx.c	143;"	d	file:
ff_float_to_int16_interleave6_sse2	libavcodec/x86/fmtconvert_mmx.c	147;"	d	file:
ff_flv2_decode_ac_esc	libavcodec/flvdec.c	/^void ff_flv2_decode_ac_esc(GetBitContext *gb, int *level, int *run, int *last){$/;"	f
ff_flv2_encode_ac_esc	libavcodec/flvenc.c	/^void ff_flv2_encode_ac_esc(PutBitContext *pb, int slevel, int level, int run, int last){$/;"	f
ff_flv_decode_picture_header	libavcodec/flvdec.c	/^int ff_flv_decode_picture_header(MpegEncContext *s)$/;"	f
ff_flv_decoder	libavcodec/flvdec.c	/^AVCodec ff_flv_decoder = {$/;"	v
ff_flv_demuxer	libavformat/flvdec.c	/^AVInputFormat ff_flv_demuxer = {$/;"	v
ff_flv_encode_picture_header	libavcodec/flvenc.c	/^void ff_flv_encode_picture_header(MpegEncContext * s, int picture_number)$/;"	f
ff_flv_encoder	libavcodec/flvenc.c	/^AVCodec ff_flv_encoder = {$/;"	v
ff_flv_muxer	libavformat/flvenc.c	/^AVOutputFormat ff_flv_muxer = {$/;"	v
ff_fmt	libavdevice/v4l2.c	/^    enum PixelFormat ff_fmt;$/;"	m	struct:fmt_map	typeref:enum:fmt_map::PixelFormat	file:
ff_fmt_convert_init	libavcodec/fmtconvert.c	/^av_cold void ff_fmt_convert_init(FmtConvertContext *c, AVCodecContext *avctx)$/;"	f
ff_fmt_convert_init_altivec	libavcodec/ppc/fmtconvert_altivec.c	/^void ff_fmt_convert_init_altivec(FmtConvertContext *c, AVCodecContext *avctx)$/;"	f
ff_fmt_convert_init_arm	libavcodec/arm/fmtconvert_init_arm.c	/^void ff_fmt_convert_init_arm(FmtConvertContext *c, AVCodecContext *avctx)$/;"	f
ff_fmt_convert_init_x86	libavcodec/x86/fmtconvert_mmx.c	/^void ff_fmt_convert_init_x86(FmtConvertContext *c, AVCodecContext *avctx)$/;"	f
ff_format_none	libavformat/wtv.c	/^const ff_asf_guid ff_format_none =$/;"	v
ff_fourxm_decoder	libavcodec/4xm.c	/^AVCodec ff_fourxm_decoder = {$/;"	v
ff_fourxm_demuxer	libavformat/4xm.c	/^AVInputFormat ff_fourxm_demuxer = {$/;"	v
ff_frame_rate_tab	libavcodec/mpeg12data.c	/^const AVRational ff_frame_rate_tab[] = {$/;"	v
ff_framecrc_muxer	libavformat/framecrcenc.c	/^AVOutputFormat ff_framecrc_muxer = {$/;"	v
ff_framemd5_muxer	libavformat/md5enc.c	/^AVOutputFormat ff_framemd5_muxer = {$/;"	v
ff_framenum_to_12m_time_code	libavformat/mxfenc.c	/^static uint32_t ff_framenum_to_12m_time_code(unsigned frame, int drop, int fps)$/;"	f	file:
ff_fraps_decoder	libavcodec/fraps.c	/^AVCodec ff_fraps_decoder = {$/;"	v
ff_free_parser_state	libavformat/seek.c	/^void ff_free_parser_state(AVFormatContext *s, AVParserState *state)$/;"	f
ff_freeaddrinfo	libavformat/os_support.c	/^void ff_freeaddrinfo(struct addrinfo *res)$/;"	f
ff_frwu_decoder	libavcodec/frwu.c	/^AVCodec ff_frwu_decoder = {$/;"	v
ff_g722_demuxer	libavformat/rawdec.c	/^AVInputFormat ff_g722_demuxer = {$/;"	v
ff_g722_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_g722_muxer = {$/;"	v
ff_g726_16_dynamic_handler	libavformat/rtpdec_g726.c	/^RTPDynamicProtocolHandler ff_g726_16_dynamic_handler = {$/;"	v
ff_g726_24_dynamic_handler	libavformat/rtpdec_g726.c	/^RTPDynamicProtocolHandler ff_g726_24_dynamic_handler = {$/;"	v
ff_g726_32_dynamic_handler	libavformat/rtpdec_g726.c	/^RTPDynamicProtocolHandler ff_g726_32_dynamic_handler = {$/;"	v
ff_g726_40_dynamic_handler	libavformat/rtpdec_g726.c	/^RTPDynamicProtocolHandler ff_g726_40_dynamic_handler = {$/;"	v
ff_gai_strerror	libavformat/os_support.c	/^const char *ff_gai_strerror(int ecode)$/;"	f
ff_gain_exp_tab	libavcodec/ra144.c	/^const uint8_t ff_gain_exp_tab[256] = {$/;"	v
ff_gain_val_tab	libavcodec/ra144.c	/^const int16_t ff_gain_val_tab[256][3] = {$/;"	v
ff_gen_syncpoint_search	libavformat/seek.c	/^int64_t ff_gen_syncpoint_search(AVFormatContext *s,$/;"	f
ff_generate_sliding_window_mmcos	libavcodec/h264_refs.c	/^void ff_generate_sliding_window_mmcos(H264Context *h) {$/;"	f
ff_get_2pass_fcode	libavcodec/ratecontrol.c	/^void ff_get_2pass_fcode(MpegEncContext *s){$/;"	f
ff_get_best_fcode	libavcodec/motion_est.c	/^int ff_get_best_fcode(MpegEncContext * s, int16_t (*mv_table)[2], int type)$/;"	f
ff_get_bmp_header	libavformat/riff.c	/^int ff_get_bmp_header(AVIOContext *pb, AVStream *st)$/;"	f
ff_get_cpu_flags_arm	libavutil/arm/cpu.c	/^int ff_get_cpu_flags_arm(void)$/;"	f
ff_get_cpu_flags_ppc	libavutil/ppc/cpu.c	/^int ff_get_cpu_flags_ppc(void)$/;"	f
ff_get_cpu_flags_x86	libavutil/x86/cpu.c	/^int ff_get_cpu_flags_x86(void)$/;"	f
ff_get_guid	libavformat/riff.c	/^void ff_get_guid(AVIOContext *s, ff_asf_guid *g)$/;"	f
ff_get_line	libavformat/aviobuf.c	/^int ff_get_line(AVIOContext *s, char *buf, int maxlen)$/;"	f
ff_get_mb_score	libavcodec/motion_est_template.c	/^inline int ff_get_mb_score(MpegEncContext * s, int mx, int my, int src_index,$/;"	f
ff_get_ref_perms_string	libavfilter/avfilter.c	/^static char *ff_get_ref_perms_string(char *buf, size_t buf_size, int perms)$/;"	f	file:
ff_get_schro_frame_format	libavcodec/libschroedinger.c	/^int ff_get_schro_frame_format (SchroChromaFormat schro_pix_fmt,$/;"	f
ff_get_schro_video_format_preset	libavcodec/libschroedinger.c	/^SchroVideoFormatEnum ff_get_schro_video_format_preset(AVCodecContext *avccontext)$/;"	f
ff_get_unscaled_swscale	libswscale/swscale_unscaled.c	/^void ff_get_unscaled_swscale(SwsContext *c)$/;"	f
ff_get_v_length	libavformat/aviobuf.c	/^int ff_get_v_length(uint64_t val){$/;"	f
ff_get_wav_header	libavformat/riff.c	/^int ff_get_wav_header(AVIOContext *pb, AVCodecContext *codec, int size)$/;"	f
ff_getaddrinfo	libavformat/os_support.c	/^int ff_getaddrinfo(const char *node, const char *service,$/;"	f
ff_getnameinfo	libavformat/os_support.c	/^int ff_getnameinfo(const struct sockaddr *sa, int salen,$/;"	f
ff_gif_decoder	libavcodec/gifdec.c	/^AVCodec ff_gif_decoder = {$/;"	v
ff_gif_encoder	libavcodec/gif.c	/^AVCodec ff_gif_encoder = {$/;"	v
ff_gif_muxer	libavformat/gif.c	/^AVOutputFormat ff_gif_muxer = {$/;"	v
ff_gmc_c	libavcodec/dsputil.c	/^void ff_gmc_c(uint8_t *dst, uint8_t *src, int stride, int h, int ox, int oy,$/;"	f
ff_golomb_vlc_len	libavcodec/golomb.c	/^const uint8_t ff_golomb_vlc_len[512]={$/;"	v
ff_gopher_protocol	libavformat/gopher.c	/^URLProtocol ff_gopher_protocol = {$/;"	v
ff_gradfun_blur_line_c	libavfilter/vf_gradfun.c	/^void ff_gradfun_blur_line_c(uint16_t *dc, uint16_t *buf, const uint16_t *buf1, const uint8_t *src, int src_linesize, int width)$/;"	f
ff_gradfun_blur_line_sse2	libavfilter/x86/gradfun.c	/^void ff_gradfun_blur_line_sse2(uint16_t *dc, uint16_t *buf, const uint16_t *buf1, const uint8_t *src, int src_linesize, int width)$/;"	f
ff_gradfun_filter_line_c	libavfilter/vf_gradfun.c	/^void ff_gradfun_filter_line_c(uint8_t *dst, const uint8_t *src, const uint16_t *dc, int width, int thresh, const uint16_t *dithers)$/;"	f
ff_gradfun_filter_line_mmx2	libavfilter/x86/gradfun.c	/^void ff_gradfun_filter_line_mmx2(uint8_t *dst, const uint8_t *src, const uint16_t *dc, int width, int thresh, const uint16_t *dithers)$/;"	f
ff_gradfun_filter_line_ssse3	libavfilter/x86/gradfun.c	/^void ff_gradfun_filter_line_ssse3(uint8_t *dst, const uint8_t *src, const uint16_t *dc, int width, int thresh, const uint16_t *dithers)$/;"	f
ff_gsm_decoder	libavcodec/gsmdec.c	/^AVCodec ff_gsm_decoder = {$/;"	v
ff_gsm_demuxer	libavformat/rawdec.c	/^AVInputFormat ff_gsm_demuxer = {$/;"	v
ff_gsm_dequant_tab	libavcodec/gsmdec_data.c	/^const int16_t ff_gsm_dequant_tab[64][8] = {$/;"	v
ff_gsm_long_term_gain_tab	libavcodec/gsmdec_data.c	/^const uint16_t ff_gsm_long_term_gain_tab[4] = {$/;"	v
ff_gsm_ms_decoder	libavcodec/gsmdec.c	/^AVCodec ff_gsm_ms_decoder = {$/;"	v
ff_guess_image2_codec	libavformat/img2.c	/^enum CodecID ff_guess_image2_codec(const char *filename)$/;"	f
ff_guidcmp	libavformat/riff.h	/^static av_always_inline int ff_guidcmp(const void *g1, const void *g2)$/;"	f
ff_gxf_demuxer	libavformat/gxf.c	/^AVInputFormat ff_gxf_demuxer = {$/;"	v
ff_gxf_muxer	libavformat/gxfenc.c	/^AVOutputFormat ff_gxf_muxer = {$/;"	v
ff_h261_decoder	libavcodec/h261dec.c	/^AVCodec ff_h261_decoder = {$/;"	v
ff_h261_encode_init	libavcodec/h261enc.c	/^void ff_h261_encode_init(MpegEncContext *s){$/;"	f
ff_h261_encode_mb	libavcodec/h261enc.c	/^void ff_h261_encode_mb(MpegEncContext * s,$/;"	f
ff_h261_encode_picture_header	libavcodec/h261enc.c	/^void ff_h261_encode_picture_header(MpegEncContext * s, int picture_number){$/;"	f
ff_h261_encoder	libavcodec/h261enc.c	/^AVCodec ff_h261_encoder = {$/;"	v
ff_h261_get_picture_format	libavcodec/h261enc.c	/^int ff_h261_get_picture_format(int width, int height){$/;"	f
ff_h261_loop_filter	libavcodec/h261.c	/^void ff_h261_loop_filter(MpegEncContext *s){$/;"	f
ff_h261_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_h261_muxer = {$/;"	v
ff_h261_parser	libavcodec/h261_parser.c	/^AVCodecParser ff_h261_parser = {$/;"	v
ff_h261_reorder_mb_index	libavcodec/h261enc.c	/^void ff_h261_reorder_mb_index(MpegEncContext* s){$/;"	f
ff_h261_resync	libavcodec/h261dec.c	/^static int ff_h261_resync(H261Context *h){$/;"	f	file:
ff_h261_rl_table_store	libavcodec/h261.c	/^uint8_t ff_h261_rl_table_store[2][2*MAX_RUN + MAX_LEVEL + 3];$/;"	v
ff_h263_1998_dynamic_handler	libavformat/rtpdec_h263.c	/^RTPDynamicProtocolHandler ff_h263_1998_dynamic_handler = {$/;"	v
ff_h263_2000_dynamic_handler	libavformat/rtpdec_h263.c	/^RTPDynamicProtocolHandler ff_h263_2000_dynamic_handler = {$/;"	v
ff_h263_aspect_to_info	libavcodec/ituh263enc.c	/^av_const int ff_h263_aspect_to_info(AVRational aspect){$/;"	f
ff_h263_cbpy_tab	libavcodec/h263data.h	/^const uint8_t ff_h263_cbpy_tab[16][2] =$/;"	v
ff_h263_cbpy_vlc	libavcodec/ituh263dec.c	/^VLC ff_h263_cbpy_vlc;$/;"	v
ff_h263_chroma_qscale_table	libavcodec/h263data.h	/^const uint8_t ff_h263_chroma_qscale_table[32]={$/;"	v
ff_h263_decode_end	libavcodec/h263dec.c	/^av_cold int ff_h263_decode_end(AVCodecContext *avctx)$/;"	f
ff_h263_decode_frame	libavcodec/h263dec.c	/^int ff_h263_decode_frame(AVCodecContext *avctx,$/;"	f
ff_h263_decode_init	libavcodec/h263dec.c	/^av_cold int ff_h263_decode_init(AVCodecContext *avctx)$/;"	f
ff_h263_decode_mb	libavcodec/ituh263dec.c	/^int ff_h263_decode_mb(MpegEncContext *s,$/;"	f
ff_h263_decode_mba	libavcodec/ituh263dec.c	/^int ff_h263_decode_mba(MpegEncContext *s)$/;"	f
ff_h263_decoder	libavcodec/h263dec.c	/^AVCodec ff_h263_decoder = {$/;"	v
ff_h263_encode_mba	libavcodec/ituh263enc.c	/^void ff_h263_encode_mba(MpegEncContext *s)$/;"	f
ff_h263_encode_motion	libavcodec/ituh263enc.c	/^void ff_h263_encode_motion(MpegEncContext * s, int val, int f_code)$/;"	f
ff_h263_encode_motion_vector	libavcodec/h263.h	/^static inline void ff_h263_encode_motion_vector(MpegEncContext * s, int x, int y, int f_code){$/;"	f
ff_h263_encoder	libavcodec/mpegvideo_enc.c	/^AVCodec ff_h263_encoder = {$/;"	v
ff_h263_find_frame_end	libavcodec/h263_parser.c	/^int ff_h263_find_frame_end(ParseContext *pc, const uint8_t *buf, int buf_size){$/;"	f
ff_h263_find_resync_marker	libavcodec/ituh263dec.c	/^const uint8_t *ff_h263_find_resync_marker(const uint8_t *restrict p, const uint8_t * restrict end)$/;"	f
ff_h263_get_gob_height	libavcodec/h263.c	/^int ff_h263_get_gob_height(MpegEncContext *s){$/;"	f
ff_h263_inter_MCBPC_bits	libavcodec/h263data.h	/^const uint8_t ff_h263_inter_MCBPC_bits[28] = {$/;"	v
ff_h263_inter_MCBPC_code	libavcodec/h263data.h	/^const uint8_t ff_h263_inter_MCBPC_code[28] = {$/;"	v
ff_h263_inter_MCBPC_vlc	libavcodec/ituh263dec.c	/^VLC ff_h263_inter_MCBPC_vlc;$/;"	v
ff_h263_intra_MCBPC_bits	libavcodec/h263data.h	/^const uint8_t ff_h263_intra_MCBPC_bits[9] = { 1, 3, 3, 3, 4, 6, 6, 6, 9 };$/;"	v
ff_h263_intra_MCBPC_code	libavcodec/h263data.h	/^const uint8_t ff_h263_intra_MCBPC_code[9] = { 1, 1, 2, 3, 1, 1, 2, 3, 1 };$/;"	v
ff_h263_intra_MCBPC_vlc	libavcodec/ituh263dec.c	/^VLC ff_h263_intra_MCBPC_vlc;$/;"	v
ff_h263_loop_filter	libavcodec/h263.c	/^void ff_h263_loop_filter(MpegEncContext * s){$/;"	f
ff_h263_loop_filter_strength	libavcodec/h263data.h	/^const uint8_t ff_h263_loop_filter_strength[32]={$/;"	v
ff_h263_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_h263_muxer = {$/;"	v
ff_h263_parser	libavcodec/h263_parser.c	/^AVCodecParser ff_h263_parser = {$/;"	v
ff_h263_pixel_aspect	libavcodec/h263data.h	/^const AVRational ff_h263_pixel_aspect[16]={$/;"	v
ff_h263_resync	libavcodec/ituh263dec.c	/^int ff_h263_resync(MpegEncContext *s){$/;"	f
ff_h263_rl_inter	libavcodec/h263data.h	/^RLTable ff_h263_rl_inter = {$/;"	v
ff_h263_round_chroma	libavcodec/mpegvideo.h	/^static inline int ff_h263_round_chroma(int x){$/;"	f
ff_h263_show_pict_info	libavcodec/ituh263dec.c	/^void ff_h263_show_pict_info(MpegEncContext *s){$/;"	f
ff_h263_static_rl_table_store	libavcodec/h263.c	/^uint8_t ff_h263_static_rl_table_store[2][2][2*MAX_RUN + MAX_LEVEL + 3];$/;"	v
ff_h263_update_motion_val	libavcodec/h263.c	/^void ff_h263_update_motion_val(MpegEncContext * s){$/;"	f
ff_h263_vaapi_hwaccel	libavcodec/vaapi_mpeg4.c	/^AVHWAccel ff_h263_vaapi_hwaccel = {$/;"	v
ff_h263i_decoder	libavcodec/intelh263dec.c	/^AVCodec ff_h263i_decoder = {$/;"	v
ff_h263p_encoder	libavcodec/mpegvideo_enc.c	/^AVCodec ff_h263p_encoder = {$/;"	v
ff_h264_alloc_tables	libavcodec/h264.c	/^int ff_h264_alloc_tables(H264Context *h){$/;"	f
ff_h264_check_intra16x16_pred_mode	libavcodec/h264.c	/^int ff_h264_check_intra16x16_pred_mode(H264Context *h, int mode)$/;"	f
ff_h264_check_intra4x4_pred_mode	libavcodec/h264.c	/^int ff_h264_check_intra4x4_pred_mode(H264Context *h){$/;"	f
ff_h264_check_intra_chroma_pred_mode	libavcodec/h264.c	/^int ff_h264_check_intra_chroma_pred_mode(H264Context *h, int mode)$/;"	f
ff_h264_chroma_dc_dequant_idct	libavcodec/h264idct_template.c	/^void FUNCC(ff_h264_chroma_dc_dequant_idct)(DCTELEM *p_block, int qmul){$/;"	f
ff_h264_chroma_qp	libavcodec/h264_ps.c	/^const uint8_t ff_h264_chroma_qp[5][QP_MAX_NUM+1] = {$/;"	v
ff_h264_crystalhd_decoder	libavcodec/crystalhd.c	/^AVCodec ff_h264_crystalhd_decoder = {$/;"	v
ff_h264_decode_end	libavcodec/h264.c	/^av_cold int ff_h264_decode_end(AVCodecContext *avctx)$/;"	f
ff_h264_decode_extradata	libavcodec/h264.c	/^int ff_h264_decode_extradata(H264Context *h, const uint8_t *buf, int size)$/;"	f
ff_h264_decode_init	libavcodec/h264.c	/^av_cold int ff_h264_decode_init(AVCodecContext *avctx){$/;"	f
ff_h264_decode_init_vlc	libavcodec/h264_cavlc.c	/^av_cold void ff_h264_decode_init_vlc(void){$/;"	f
ff_h264_decode_mb_cabac	libavcodec/h264_cabac.c	/^int ff_h264_decode_mb_cabac(H264Context *h) {$/;"	f
ff_h264_decode_mb_cavlc	libavcodec/h264_cavlc.c	/^int ff_h264_decode_mb_cavlc(H264Context *h){$/;"	f
ff_h264_decode_nal	libavcodec/h264.c	/^const uint8_t *ff_h264_decode_nal(H264Context *h, const uint8_t *src, int *dst_length, int *consumed, int length){$/;"	f
ff_h264_decode_picture_parameter_set	libavcodec/h264_ps.c	/^int ff_h264_decode_picture_parameter_set(H264Context *h, int bit_length){$/;"	f
ff_h264_decode_rbsp_trailing	libavcodec/h264.c	/^static int ff_h264_decode_rbsp_trailing(H264Context *h, const uint8_t *src){$/;"	f	file:
ff_h264_decode_ref_pic_list_reordering	libavcodec/h264_refs.c	/^int ff_h264_decode_ref_pic_list_reordering(H264Context *h){$/;"	f
ff_h264_decode_ref_pic_marking	libavcodec/h264_refs.c	/^int ff_h264_decode_ref_pic_marking(H264Context *h, GetBitContext *gb){$/;"	f
ff_h264_decode_sei	libavcodec/h264_sei.c	/^int ff_h264_decode_sei(H264Context *h){$/;"	f
ff_h264_decode_seq_parameter_set	libavcodec/h264_ps.c	/^int ff_h264_decode_seq_parameter_set(H264Context *h){$/;"	f
ff_h264_decoder	libavcodec/h264.c	/^AVCodec ff_h264_decoder = {$/;"	v
ff_h264_direct_dist_scale_factor	libavcodec/h264_direct.c	/^void ff_h264_direct_dist_scale_factor(H264Context * const h){$/;"	f
ff_h264_direct_ref_list_init	libavcodec/h264_direct.c	/^void ff_h264_direct_ref_list_init(H264Context * const h){$/;"	f
ff_h264_dxva2_hwaccel	libavcodec/dxva2_h264.c	/^AVHWAccel ff_h264_dxva2_hwaccel = {$/;"	v
ff_h264_dynamic_handler	libavformat/rtpdec_h264.c	/^RTPDynamicProtocolHandler ff_h264_dynamic_handler = {$/;"	v
ff_h264_execute_ref_pic_marking	libavcodec/h264_refs.c	/^int ff_h264_execute_ref_pic_marking(H264Context *h, MMCO *mmco, int mmco_count){$/;"	f
ff_h264_fill_default_ref_list	libavcodec/h264_refs.c	/^int ff_h264_fill_default_ref_list(H264Context *h){$/;"	f
ff_h264_fill_mbaff_ref_list	libavcodec/h264_refs.c	/^void ff_h264_fill_mbaff_ref_list(H264Context *h){$/;"	f
ff_h264_filter_mb	libavcodec/h264_loopfilter.c	/^void ff_h264_filter_mb( H264Context *h, int mb_x, int mb_y, uint8_t *img_y, uint8_t *img_cb, uint8_t *img_cr, unsigned int linesize, unsigned int uvlinesize) {$/;"	f
ff_h264_filter_mb_fast	libavcodec/h264_loopfilter.c	/^void ff_h264_filter_mb_fast( H264Context *h, int mb_x, int mb_y, uint8_t *img_y, uint8_t *img_cb, uint8_t *img_cr, unsigned int linesize, unsigned int uvlinesize) {$/;"	f
ff_h264_find_frame_end	libavcodec/h264_parser.c	/^static int ff_h264_find_frame_end(H264Context *h, const uint8_t *buf, int buf_size)$/;"	f	file:
ff_h264_frame_start	libavcodec/h264.c	/^int ff_h264_frame_start(H264Context *h){$/;"	f
ff_h264_free_context	libavcodec/h264.c	/^av_cold void ff_h264_free_context(H264Context *h)$/;"	f
ff_h264_get_profile	libavcodec/h264.c	/^int ff_h264_get_profile(SPS *sps)$/;"	f
ff_h264_get_slice_type	libavcodec/h264.c	/^int ff_h264_get_slice_type(const H264Context *h)$/;"	f
ff_h264_hl_decode_mb	libavcodec/h264.c	/^void ff_h264_hl_decode_mb(H264Context *h){$/;"	f
ff_h264_idct8_add	libavcodec/h264idct_template.c	/^void FUNCC(ff_h264_idct8_add)(uint8_t *p_dst, DCTELEM *p_block, int stride){$/;"	f
ff_h264_idct8_add4	libavcodec/h264idct_template.c	/^void FUNCC(ff_h264_idct8_add4)(uint8_t *dst, const int *block_offset, DCTELEM *block, int stride, const uint8_t nnzc[15*8]){$/;"	f
ff_h264_idct8_add4_altivec	libavcodec/ppc/h264_altivec.c	/^static void ff_h264_idct8_add4_altivec(uint8_t *dst, const int *block_offset, DCTELEM *block, int stride, const uint8_t nnzc[15*8]){$/;"	f	file:
ff_h264_idct8_add_altivec	libavcodec/ppc/h264_altivec.c	/^static void ff_h264_idct8_add_altivec( uint8_t *dst, DCTELEM *dct, int stride ) {$/;"	f	file:
ff_h264_idct8_dc_add	libavcodec/h264idct_template.c	/^void FUNCC(ff_h264_idct8_dc_add)(uint8_t *p_dst, DCTELEM *block, int stride){$/;"	f
ff_h264_idct8_dc_add_altivec	libavcodec/ppc/h264_altivec.c	/^static void ff_h264_idct8_dc_add_altivec(uint8_t *dst, DCTELEM *block, int stride)$/;"	f	file:
ff_h264_idct_add	libavcodec/h264idct_template.c	/^void FUNCC(ff_h264_idct_add)(uint8_t *dst, DCTELEM *block, int stride){$/;"	f
ff_h264_idct_add16	libavcodec/h264idct_template.c	/^void FUNCC(ff_h264_idct_add16)(uint8_t *dst, const int *block_offset, DCTELEM *block, int stride, const uint8_t nnzc[15*8]){$/;"	f
ff_h264_idct_add16_altivec	libavcodec/ppc/h264_altivec.c	/^static void ff_h264_idct_add16_altivec(uint8_t *dst, const int *block_offset, DCTELEM *block, int stride, const uint8_t nnzc[15*8]){$/;"	f	file:
ff_h264_idct_add16intra	libavcodec/h264idct_template.c	/^void FUNCC(ff_h264_idct_add16intra)(uint8_t *dst, const int *block_offset, DCTELEM *block, int stride, const uint8_t nnzc[15*8]){$/;"	f
ff_h264_idct_add16intra_altivec	libavcodec/ppc/h264_altivec.c	/^static void ff_h264_idct_add16intra_altivec(uint8_t *dst, const int *block_offset, DCTELEM *block, int stride, const uint8_t nnzc[15*8]){$/;"	f	file:
ff_h264_idct_add8	libavcodec/h264idct_template.c	/^void FUNCC(ff_h264_idct_add8)(uint8_t **dest, const int *block_offset, DCTELEM *block, int stride, const uint8_t nnzc[15*8]){$/;"	f
ff_h264_idct_add8_altivec	libavcodec/ppc/h264_altivec.c	/^static void ff_h264_idct_add8_altivec(uint8_t **dest, const int *block_offset, DCTELEM *block, int stride, const uint8_t nnzc[15*8]){$/;"	f	file:
ff_h264_idct_add_altivec	libavcodec/ppc/h264_altivec.c	/^static void ff_h264_idct_add_altivec(uint8_t *dst, DCTELEM *block, int stride)$/;"	f	file:
ff_h264_idct_dc_add	libavcodec/h264idct_template.c	/^void FUNCC(ff_h264_idct_dc_add)(uint8_t *p_dst, DCTELEM *block, int stride){$/;"	f
ff_h264_init_cabac_states	libavcodec/h264_cabac.c	/^void ff_h264_init_cabac_states(H264Context *h) {$/;"	f
ff_h264_lowres_idct_add	libavcodec/h264idct_template.c	/^void FUNCC(ff_h264_lowres_idct_add)(uint8_t *dst, int stride, DCTELEM *block){$/;"	f
ff_h264_lowres_idct_put	libavcodec/h264idct_template.c	/^void FUNCC(ff_h264_lowres_idct_put)(uint8_t *dst, int stride, DCTELEM *block){$/;"	f
ff_h264_lps_range	libavcodec/cabac.c	/^uint8_t ff_h264_lps_range[4*2*64];$/;"	v
ff_h264_lps_state	libavcodec/cabac.c	/^uint8_t ff_h264_lps_state[2*64];$/;"	v
ff_h264_luma_dc_dequant_idct	libavcodec/h264idct_template.c	/^void FUNCC(ff_h264_luma_dc_dequant_idct)(DCTELEM *p_output, DCTELEM *p_input, int qmul){$/;"	f
ff_h264_mlps_state	libavcodec/cabac.c	/^uint8_t ff_h264_mlps_state[4*64];$/;"	v
ff_h264_mp4toannexb_bsf	libavcodec/h264_mp4toannexb_bsf.c	/^AVBitStreamFilter ff_h264_mp4toannexb_bsf = {$/;"	v
ff_h264_mps_state	libavcodec/cabac.c	/^uint8_t ff_h264_mps_state[2*64];$/;"	v
ff_h264_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_h264_muxer = {$/;"	v
ff_h264_norm_shift	libavcodec/cabac.c	/^const uint8_t ff_h264_norm_shift[512]= {$/;"	v
ff_h264_parser	libavcodec/h264_parser.c	/^AVCodecParser ff_h264_parser = {$/;"	v
ff_h264_pred_direct_motion	libavcodec/h264_direct.c	/^void ff_h264_pred_direct_motion(H264Context * const h, int *mb_type){$/;"	f
ff_h264_pred_init	libavcodec/h264pred.c	/^void ff_h264_pred_init(H264PredContext *h, int codec_id, const int bit_depth){$/;"	f
ff_h264_pred_init_arm	libavcodec/arm/h264pred_init_arm.c	/^void ff_h264_pred_init_arm(H264PredContext *h, int codec_id, int bit_depth)$/;"	f
ff_h264_pred_init_neon	libavcodec/arm/h264pred_init_arm.c	/^static void ff_h264_pred_init_neon(H264PredContext *h, int codec_id, const int bit_depth)$/;"	f	file:
ff_h264_pred_init_x86	libavcodec/x86/h264_intrapred_init.c	/^void ff_h264_pred_init_x86(H264PredContext *h, int codec_id, const int bit_depth)$/;"	f
ff_h264_remove_all_refs	libavcodec/h264_refs.c	/^void ff_h264_remove_all_refs(H264Context *h){$/;"	f
ff_h264_reset_sei	libavcodec/h264_sei.c	/^void ff_h264_reset_sei(H264Context *h) {$/;"	f
ff_h264_vaapi_hwaccel	libavcodec/vaapi_h264.c	/^AVHWAccel ff_h264_vaapi_hwaccel = {$/;"	v
ff_h264_vdpau_decoder	libavcodec/h264.c	/^AVCodec ff_h264_vdpau_decoder = {$/;"	v
ff_h264_write_back_intra_pred_mode	libavcodec/h264.c	/^void ff_h264_write_back_intra_pred_mode(H264Context *h){$/;"	f
ff_h264dsp_init	libavcodec/h264dsp.c	/^void ff_h264dsp_init(H264DSPContext *c, const int bit_depth)$/;"	f
ff_h264dsp_init_arm	libavcodec/arm/h264dsp_init_arm.c	/^void ff_h264dsp_init_arm(H264DSPContext *c, const int bit_depth)$/;"	f
ff_h264dsp_init_neon	libavcodec/arm/h264dsp_init_arm.c	/^static void ff_h264dsp_init_neon(H264DSPContext *c, const int bit_depth)$/;"	f	file:
ff_h264dsp_init_ppc	libavcodec/ppc/h264_altivec.c	/^void ff_h264dsp_init_ppc(H264DSPContext *c, const int bit_depth)$/;"	f
ff_h264dsp_init_x86	libavcodec/x86/h264dsp_mmx.c	/^void ff_h264dsp_init_x86(H264DSPContext *c, const int bit_depth)$/;"	f
ff_hex_to_data	libavformat/utils.c	/^int ff_hex_to_data(uint8_t *data, const char *p)$/;"	f
ff_http_auth_create_response	libavformat/httpauth.c	/^char *ff_http_auth_create_response(HTTPAuthState *state, const char *auth,$/;"	f
ff_http_auth_handle_header	libavformat/httpauth.c	/^void ff_http_auth_handle_header(HTTPAuthState *state, const char *key,$/;"	f
ff_http_init_auth_state	libavformat/http.c	/^void ff_http_init_auth_state(URLContext *dest, const URLContext *src)$/;"	f
ff_http_protocol	libavformat/http.c	/^URLProtocol ff_http_protocol = {$/;"	v
ff_http_set_chunked_transfer_encoding	libavformat/http.c	/^void ff_http_set_chunked_transfer_encoding(URLContext *h, int is_chunked)$/;"	f
ff_http_set_headers	libavformat/http.c	/^void ff_http_set_headers(URLContext *h, const char *headers)$/;"	f
ff_huff_build_tree	libavcodec/huffman.c	/^int ff_huff_build_tree(AVCodecContext *avctx, VLC *vlc, int nb_codes,$/;"	f
ff_huffyuv_decoder	libavcodec/huffyuv.c	/^AVCodec ff_huffyuv_decoder = {$/;"	v
ff_huffyuv_encoder	libavcodec/huffyuv.c	/^AVCodec ff_huffyuv_encoder = {$/;"	v
ff_hwaccel_pixfmt_list_420	libavcodec/mpegvideo.c	/^const enum PixelFormat ff_hwaccel_pixfmt_list_420[] = {$/;"	v	typeref:enum:PixelFormat
ff_id3v1_genre_str	libavformat/id3v1.c	/^const char * const ff_id3v1_genre_str[ID3v1_GENRE_MAX + 1] = {$/;"	v
ff_id3v1_read	libavformat/id3v1.c	/^void ff_id3v1_read(AVFormatContext *s)$/;"	f
ff_id3v2_2_metadata_conv	libavformat/id3v2.c	/^const AVMetadataConv ff_id3v2_2_metadata_conv[] = {$/;"	v
ff_id3v2_34_metadata_conv	libavformat/id3v2.c	/^const AVMetadataConv ff_id3v2_34_metadata_conv[] = {$/;"	v
ff_id3v2_3_tags	libavformat/id3v2.c	/^const char ff_id3v2_3_tags[][4] = {$/;"	v
ff_id3v2_4_metadata_conv	libavformat/id3v2.c	/^const AVMetadataConv ff_id3v2_4_metadata_conv[] = {$/;"	v
ff_id3v2_4_tags	libavformat/id3v2.c	/^const char ff_id3v2_4_tags[][4] = {$/;"	v
ff_id3v2_match	libavformat/id3v2.c	/^int ff_id3v2_match(const uint8_t *buf, const char * magic)$/;"	f
ff_id3v2_parse	libavformat/id3v2.c	/^static void ff_id3v2_parse(AVFormatContext *s, int len, uint8_t version, uint8_t flags)$/;"	f	file:
ff_id3v2_read	libavformat/id3v2.c	/^void ff_id3v2_read(AVFormatContext *s, const char *magic)$/;"	f
ff_id3v2_tag_len	libavformat/id3v2.c	/^int ff_id3v2_tag_len(const uint8_t * buf)$/;"	f
ff_id3v2_tags	libavformat/id3v2.c	/^const char ff_id3v2_tags[][4] = {$/;"	v
ff_idcin_decoder	libavcodec/idcinvideo.c	/^AVCodec ff_idcin_decoder = {$/;"	v
ff_idcin_demuxer	libavformat/idcin.c	/^AVInputFormat ff_idcin_demuxer = {$/;"	v
ff_idct_add_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void ff_idct_add_mlib(uint8_t *dest, int line_size, DCTELEM *data)$/;"	f	file:
ff_idct_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void ff_idct_mlib(DCTELEM *data)$/;"	f	file:
ff_idct_put_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void ff_idct_put_mlib(uint8_t *dest, int line_size, DCTELEM *data)$/;"	f	file:
ff_idct_xvid_mmx	libavcodec/x86/idct_mmx_xvid.c	/^void ff_idct_xvid_mmx(short *block){$/;"	f
ff_idct_xvid_mmx2	libavcodec/x86/idct_mmx_xvid.c	/^void ff_idct_xvid_mmx2(short *block){$/;"	f
ff_idct_xvid_mmx2_add	libavcodec/x86/dsputil_mmx.c	/^static void ff_idct_xvid_mmx2_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_idct_xvid_mmx2_put	libavcodec/x86/dsputil_mmx.c	/^static void ff_idct_xvid_mmx2_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_idct_xvid_mmx_add	libavcodec/x86/dsputil_mmx.c	/^static void ff_idct_xvid_mmx_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_idct_xvid_mmx_put	libavcodec/x86/dsputil_mmx.c	/^static void ff_idct_xvid_mmx_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_idct_xvid_sse2	libavcodec/x86/idct_sse2_xvid.c	/^inline void ff_idct_xvid_sse2(short *block)$/;"	f
ff_idct_xvid_sse2_add	libavcodec/x86/idct_sse2_xvid.c	/^void ff_idct_xvid_sse2_add(uint8_t *dest, int line_size, short *block)$/;"	f
ff_idct_xvid_sse2_put	libavcodec/x86/idct_sse2_xvid.c	/^void ff_idct_xvid_sse2_put(uint8_t *dest, int line_size, short *block)$/;"	f
ff_iff_byterun1_decoder	libavcodec/iff.c	/^AVCodec ff_iff_byterun1_decoder = {$/;"	v
ff_iff_demuxer	libavformat/iff.c	/^AVInputFormat ff_iff_demuxer = {$/;"	v
ff_iff_ilbm_decoder	libavcodec/iff.c	/^AVCodec ff_iff_ilbm_decoder = {$/;"	v
ff_iir_filter	libavcodec/iirfilter.c	/^void ff_iir_filter(const struct FFIIRFilterCoeffs *c,$/;"	f
ff_iir_filter_flt	libavcodec/iirfilter.c	/^void ff_iir_filter_flt(const struct FFIIRFilterCoeffs *c,$/;"	f
ff_iir_filter_free_coeffs	libavcodec/iirfilter.c	/^av_cold void ff_iir_filter_free_coeffs(struct FFIIRFilterCoeffs *coeffs)$/;"	f
ff_iir_filter_free_state	libavcodec/iirfilter.c	/^av_cold void ff_iir_filter_free_state(struct FFIIRFilterState *state)$/;"	f
ff_iir_filter_init_coeffs	libavcodec/iirfilter.c	/^av_cold struct FFIIRFilterCoeffs* ff_iir_filter_init_coeffs(void *avc,$/;"	f
ff_iir_filter_init_state	libavcodec/iirfilter.c	/^av_cold struct FFIIRFilterState* ff_iir_filter_init_state(int order)$/;"	f
ff_image2_demuxer	libavformat/img2.c	/^AVInputFormat ff_image2_demuxer = {$/;"	v
ff_image2_muxer	libavformat/img2.c	/^AVOutputFormat ff_image2_muxer = {$/;"	v
ff_image2pipe_demuxer	libavformat/img2.c	/^AVInputFormat ff_image2pipe_demuxer = {$/;"	v
ff_image2pipe_muxer	libavformat/img2.c	/^AVOutputFormat ff_image2pipe_muxer = {$/;"	v
ff_imc_decoder	libavcodec/imc.c	/^AVCodec ff_imc_decoder = {$/;"	v
ff_imdct_calc_3dn2	libavcodec/x86/fft_3dn2.c	/^void ff_imdct_calc_3dn2(FFTContext *s, FFTSample *output, const FFTSample *input)$/;"	f
ff_imdct_calc_3dn2	libavcodec/x86/fft_3dn2.c	36;"	d	file:
ff_imdct_calc_altivec	libavcodec/ppc/fft_altivec.c	/^static void ff_imdct_calc_altivec(FFTContext *s, FFTSample *output, const FFTSample *input)$/;"	f	file:
ff_imdct_calc_c	libavcodec/fft-internal.h	67;"	d
ff_imdct_calc_c	libavcodec/mdct.c	/^void ff_imdct_calc_c(FFTContext *s, FFTSample *output, const FFTSample *input)$/;"	f
ff_imdct_calc_sse	libavcodec/x86/fft_sse.c	/^void ff_imdct_calc_sse(FFTContext *s, FFTSample *output, const FFTSample *input)$/;"	f
ff_imdct_half_3dn2	libavcodec/x86/fft_3dn2.c	/^void ff_imdct_half_3dn2(FFTContext *s, FFTSample *output, const FFTSample *input)$/;"	f
ff_imdct_half_3dn2	libavcodec/x86/fft_3dn2.c	37;"	d	file:
ff_imdct_half_altivec	libavcodec/ppc/fft_altivec.c	/^static void ff_imdct_half_altivec(FFTContext *s, FFTSample *output, const FFTSample *input)$/;"	f	file:
ff_imdct_half_c	libavcodec/fft-internal.h	68;"	d
ff_imdct_half_c	libavcodec/mdct.c	/^void ff_imdct_half_c(FFTContext *s, FFTSample *output, const FFTSample *input)$/;"	f
ff_imx_dump_header_bsf	libavcodec/imx_dump_header_bsf.c	/^AVBitStreamFilter ff_imx_dump_header_bsf = {$/;"	v
ff_indeo2_decoder	libavcodec/indeo2.c	/^AVCodec ff_indeo2_decoder = {$/;"	v
ff_indeo3_decoder	libavcodec/indeo3.c	/^AVCodec ff_indeo3_decoder = {$/;"	v
ff_indeo5_decoder	libavcodec/indeo5.c	/^AVCodec ff_indeo5_decoder = {$/;"	v
ff_index_search_timestamp	libavformat/utils.c	/^int ff_index_search_timestamp(const AVIndexEntry *entries, int nb_entries,$/;"	f
ff_inet_aton	libavformat/os_support.c	/^int ff_inet_aton (const char * str, struct in_addr * add)$/;"	f
ff_ingenient_demuxer	libavformat/ingenientdec.c	/^AVInputFormat ff_ingenient_demuxer = {$/;"	v
ff_init_block_index	libavcodec/mpegvideo.c	/^void ff_init_block_index(MpegEncContext *s){ \/\/FIXME maybe rename$/;"	f
ff_init_cabac_decoder	libavcodec/cabac.c	/^void ff_init_cabac_decoder(CABACContext *c, const uint8_t *buf, int buf_size){$/;"	f
ff_init_cabac_encoder	libavcodec/cabac.c	/^void ff_init_cabac_encoder(CABACContext *c, uint8_t *buf, int buf_size){$/;"	f
ff_init_cabac_states	libavcodec/cabac.c	/^void ff_init_cabac_states(CABACContext *c){$/;"	f
ff_init_elbg	libavcodec/elbg.c	/^void ff_init_elbg(int *points, int dim, int numpoints, int *codebook,$/;"	f
ff_init_ff_cos_tabs	libavcodec/fft.c	/^av_cold void ff_init_ff_cos_tabs(int index)$/;"	f
ff_init_ff_cos_tabs	libavcodec/fft.h	118;"	d
ff_init_ff_sine_windows	libavcodec/sinewin_tablegen.h	/^av_cold void ff_init_ff_sine_windows(int index) {$/;"	f
ff_init_long_region	libavcodec/mpegaudiodec.c	/^static void ff_init_long_region(MPADecodeContext *s, GranuleDef *g, int ra1, int ra2){$/;"	f	file:
ff_init_me	libavcodec/motion_est.c	/^int ff_init_me(MpegEncContext *s){$/;"	f
ff_init_qscale_tab	libavcodec/mpegvideo_enc.c	/^void ff_init_qscale_tab(MpegEncContext *s){$/;"	f
ff_init_range_decoder	libavcodec/rangecoder.c	/^void ff_init_range_decoder(RangeCoder *c, const uint8_t *buf, int buf_size){$/;"	f
ff_init_range_encoder	libavcodec/rangecoder.c	/^void ff_init_range_encoder(RangeCoder *c, uint8_t *buf, int buf_size){$/;"	f
ff_init_scantable	libavcodec/dsputil.c	/^void ff_init_scantable(uint8_t *permutation, ScanTable *st, const uint8_t *src_scantable){$/;"	f
ff_init_short_region	libavcodec/mpegaudiodec.c	/^static void ff_init_short_region(MPADecodeContext *s, GranuleDef *g){$/;"	f	file:
ff_int_to_int16	libavcodec/ra144.c	/^void ff_int_to_int16(int16_t *out, const int *inp)$/;"	f
ff_intel_h263_decode_picture_header	libavcodec/intelh263dec.c	/^int ff_intel_h263_decode_picture_header(MpegEncContext *s)$/;"	f
ff_inter_intra_vlc	libavcodec/msmpeg4.c	/^VLC ff_inter_intra_vlc;$/;"	v
ff_interleave_add_packet	libavformat/utils.c	/^void ff_interleave_add_packet(AVFormatContext *s, AVPacket *pkt,$/;"	f
ff_interleave_compare_dts	libavformat/utils.c	/^static int ff_interleave_compare_dts(AVFormatContext *s, AVPacket *next, AVPacket *pkt)$/;"	f	file:
ff_interleave_new_audio_packet	libavformat/audiointerleave.c	/^static int ff_interleave_new_audio_packet(AVFormatContext *s, AVPacket *pkt,$/;"	f	file:
ff_interleaved_dirac_golomb_vlc_code	libavcodec/golomb.c	/^const uint8_t ff_interleaved_dirac_golomb_vlc_code[256]={$/;"	v
ff_interleaved_golomb_vlc_len	libavcodec/golomb.c	/^const uint8_t ff_interleaved_golomb_vlc_len[256]={$/;"	v
ff_interleaved_se_golomb_vlc_code	libavcodec/golomb.c	/^const int8_t ff_interleaved_se_golomb_vlc_code[256]={$/;"	v
ff_interleaved_ue_golomb_vlc_code	libavcodec/golomb.c	/^const uint8_t ff_interleaved_ue_golomb_vlc_code[256]={$/;"	v
ff_interp	libavcodec/ra144.c	/^int ff_interp(RA144Context *ractx, int16_t *out, int a, int copyold, int energy)$/;"	f
ff_interplay_video_decoder	libavcodec/interplayvideo.c	/^AVCodec ff_interplay_video_decoder = {$/;"	v
ff_intrax8_common_end	libavcodec/intrax8.c	/^av_cold void ff_intrax8_common_end(IntraX8Context * w)$/;"	f
ff_intrax8_common_init	libavcodec/intrax8.c	/^av_cold void ff_intrax8_common_init(IntraX8Context * w, MpegEncContext * const s){$/;"	f
ff_intrax8_decode_picture	libavcodec/intrax8.c	/^int ff_intrax8_decode_picture(IntraX8Context * const w, int dquant, int quant_offset){$/;"	f
ff_intrax8dsp_init	libavcodec/intrax8dsp.c	/^av_cold void ff_intrax8dsp_init(DSPContext* dsp, AVCodecContext *avctx) {$/;"	f
ff_inv_aanscales	libavcodec/aandcttab.c	/^const uint16_t ff_inv_aanscales[64] = {$/;"	v
ff_inverse	libavutil/inverse.c	/^const uint32_t ff_inverse[257]={$/;"	v
ff_ipmovie_demuxer	libavformat/ipmovie.c	/^AVInputFormat ff_ipmovie_demuxer = {$/;"	v
ff_ipod_muxer	libavformat/movenc.c	/^AVOutputFormat ff_ipod_muxer = {$/;"	v
ff_irms	libavcodec/ra144.c	/^int ff_irms(const int16_t *data)$/;"	f
ff_is_hwaccel_pix_fmt	libavcodec/imgconvert.c	/^int ff_is_hwaccel_pix_fmt(enum PixelFormat pix_fmt)$/;"	f
ff_is_multicast_address	libavformat/network.h	/^static inline int ff_is_multicast_address(struct sockaddr *addr)$/;"	f
ff_isom_write_avcc	libavformat/avc.c	/^int ff_isom_write_avcc(AVIOContext *pb, const uint8_t *data, int len)$/;"	f
ff_iss_demuxer	libavformat/iss.c	/^AVInputFormat ff_iss_demuxer = {$/;"	v
ff_iv8_demuxer	libavformat/iv8.c	/^AVInputFormat ff_iv8_demuxer = {$/;"	v
ff_ivf_demuxer	libavformat/ivfdec.c	/^AVInputFormat ff_ivf_demuxer = {$/;"	v
ff_ivf_muxer	libavformat/ivfenc.c	/^AVOutputFormat ff_ivf_muxer = {$/;"	v
ff_ivi_blk_huff_desc	libavcodec/ivi_common.c	/^const IVIHuffDesc ff_ivi_blk_huff_desc[8] = {$/;"	v
ff_ivi_blk_vlc_tabs	libavcodec/ivi_common.c	/^VLC ff_ivi_blk_vlc_tabs[8];$/;"	v
ff_ivi_col_slant8	libavcodec/ivi_dsp.c	/^void ff_ivi_col_slant8(const int32_t *in, int16_t *out, uint32_t pitch, const uint8_t *flags)$/;"	f
ff_ivi_create_huff_from_desc	libavcodec/ivi_common.c	/^int ff_ivi_create_huff_from_desc(const IVIHuffDesc *cb, VLC *vlc, int flag)$/;"	f
ff_ivi_dc_col_slant	libavcodec/ivi_dsp.c	/^void ff_ivi_dc_col_slant(const int32_t *in, int16_t *out, uint32_t pitch, int blk_size)$/;"	f
ff_ivi_dc_row_slant	libavcodec/ivi_dsp.c	/^void ff_ivi_dc_row_slant(const int32_t *in, int16_t *out, uint32_t pitch, int blk_size)$/;"	f
ff_ivi_dc_slant_2d	libavcodec/ivi_dsp.c	/^void ff_ivi_dc_slant_2d(const int32_t *in, int16_t *out, uint32_t pitch, int blk_size)$/;"	f
ff_ivi_dec_huff_desc	libavcodec/ivi_common.c	/^int ff_ivi_dec_huff_desc(GetBitContext *gb, int desc_coded, int which_tab,$/;"	f
ff_ivi_dec_tile_data_size	libavcodec/ivi_common.c	/^int ff_ivi_dec_tile_data_size(GetBitContext *gb)$/;"	f
ff_ivi_decode_blocks	libavcodec/ivi_common.c	/^int ff_ivi_decode_blocks(GetBitContext *gb, IVIBandDesc *band, IVITile *tile)$/;"	f
ff_ivi_direct_scan_4x4	libavcodec/ivi_common.c	/^const uint8_t ff_ivi_direct_scan_4x4[16] = {$/;"	v
ff_ivi_free_buffers	libavcodec/ivi_common.c	/^void av_cold ff_ivi_free_buffers(IVIPlaneDesc *planes)$/;"	f
ff_ivi_horizontal_scan_8x8	libavcodec/ivi_common.c	/^const uint8_t ff_ivi_horizontal_scan_8x8[64] = {$/;"	v
ff_ivi_huff_desc_cmp	libavcodec/ivi_common.c	/^int ff_ivi_huff_desc_cmp(const IVIHuffDesc *desc1, const IVIHuffDesc *desc2)$/;"	f
ff_ivi_huff_desc_copy	libavcodec/ivi_common.c	/^void ff_ivi_huff_desc_copy(IVIHuffDesc *dst, const IVIHuffDesc *src)$/;"	f
ff_ivi_init_planes	libavcodec/ivi_common.c	/^int av_cold ff_ivi_init_planes(IVIPlaneDesc *planes, const IVIPicConfig *cfg)$/;"	f
ff_ivi_init_static_vlc	libavcodec/ivi_common.c	/^void ff_ivi_init_static_vlc(void)$/;"	f
ff_ivi_init_tiles	libavcodec/ivi_common.c	/^int av_cold ff_ivi_init_tiles(IVIPlaneDesc *planes, int tile_width, int tile_height)$/;"	f
ff_ivi_inverse_slant_4x4	libavcodec/ivi_dsp.c	/^void ff_ivi_inverse_slant_4x4(const int32_t *in, int16_t *out, uint32_t pitch, const uint8_t *flags)$/;"	f
ff_ivi_inverse_slant_8x8	libavcodec/ivi_dsp.c	/^void ff_ivi_inverse_slant_8x8(const int32_t *in, int16_t *out, uint32_t pitch, const uint8_t *flags)$/;"	f
ff_ivi_mb_huff_desc	libavcodec/ivi_common.c	/^const IVIHuffDesc ff_ivi_mb_huff_desc[8] = {$/;"	v
ff_ivi_mb_vlc_tabs	libavcodec/ivi_common.c	/^VLC ff_ivi_mb_vlc_tabs [8];$/;"	v
ff_ivi_output_plane	libavcodec/ivi_common.c	/^void ff_ivi_output_plane(IVIPlaneDesc *plane, uint8_t *dst, int dst_pitch)$/;"	f
ff_ivi_process_empty_tile	libavcodec/ivi_common.c	/^void ff_ivi_process_empty_tile(AVCodecContext *avctx, IVIBandDesc *band,$/;"	f
ff_ivi_put_dc_pixel_8x8	libavcodec/ivi_dsp.c	/^void ff_ivi_put_dc_pixel_8x8(const int32_t *in, int16_t *out, uint32_t pitch,$/;"	f
ff_ivi_put_pixels_8x8	libavcodec/ivi_dsp.c	/^void ff_ivi_put_pixels_8x8(const int32_t *in, int16_t *out, uint32_t pitch,$/;"	f
ff_ivi_recompose53	libavcodec/ivi_dsp.c	/^void ff_ivi_recompose53(const IVIPlaneDesc *plane, uint8_t *dst,$/;"	f
ff_ivi_row_slant8	libavcodec/ivi_dsp.c	/^void ff_ivi_row_slant8(const int32_t *in, int16_t *out, uint32_t pitch, const uint8_t *flags)$/;"	f
ff_ivi_rvmap_tabs	libavcodec/ivi_common.c	/^const RVMapDesc ff_ivi_rvmap_tabs[9] = {$/;"	v
ff_ivi_vertical_scan_8x8	libavcodec/ivi_common.c	/^const uint8_t ff_ivi_vertical_scan_8x8[64] = {$/;"	v
ff_j2k_ceildiv	libavcodec/j2k.h	/^static inline int ff_j2k_ceildiv(int a, int b)$/;"	f
ff_j2k_ceildivpow2	libavcodec/j2k.h	/^static inline int ff_j2k_ceildivpow2(int a, int b)$/;"	f
ff_j2k_cleanup	libavcodec/j2k.c	/^void ff_j2k_cleanup(J2kComponent *comp, J2kCodingStyle *codsty)$/;"	f
ff_j2k_dwt_decode	libavcodec/j2k_dwt.c	/^int ff_j2k_dwt_decode(DWTContext *s, int *t)$/;"	f
ff_j2k_dwt_destroy	libavcodec/j2k_dwt.c	/^void ff_j2k_dwt_destroy(DWTContext *s)$/;"	f
ff_j2k_dwt_encode	libavcodec/j2k_dwt.c	/^int ff_j2k_dwt_encode(DWTContext *s, int *t)$/;"	f
ff_j2k_dwt_init	libavcodec/j2k_dwt.c	/^int ff_j2k_dwt_init(DWTContext *s, uint16_t border[2][2], int decomp_levels, int type)$/;"	f
ff_j2k_getnbctxno	libavcodec/j2k.h	/^static inline int ff_j2k_getnbctxno(int flag, int bandno, int vert_causal_ctx_csty_symbol)$/;"	f
ff_j2k_getrefctxno	libavcodec/j2k.h	/^static inline int ff_j2k_getrefctxno(int flag)$/;"	f
ff_j2k_getsgnctxno	libavcodec/j2k.h	/^static inline int ff_j2k_getsgnctxno(int flag, int *xorbit)$/;"	f
ff_j2k_init_component	libavcodec/j2k.c	/^int ff_j2k_init_component(J2kComponent *comp, J2kCodingStyle *codsty, J2kQuantStyle *qntsty, int cbps, int dx, int dy)$/;"	f
ff_j2k_init_tier1_luts	libavcodec/j2k.c	/^void ff_j2k_init_tier1_luts(void)$/;"	f
ff_j2k_nbctxno_lut	libavcodec/j2k.c	/^uint8_t ff_j2k_nbctxno_lut[256][4];$/;"	v
ff_j2k_reinit	libavcodec/j2k.c	/^void ff_j2k_reinit(J2kComponent *comp, J2kCodingStyle *codsty)$/;"	f
ff_j2k_set_significant	libavcodec/j2k.c	/^void ff_j2k_set_significant(J2kT1Context *t1, int x, int y, int negative)$/;"	f
ff_j2k_sgnctxno_lut	libavcodec/j2k.c	/^uint8_t ff_j2k_sgnctxno_lut[16][16], ff_j2k_xorbit_lut[16][16];$/;"	v
ff_j2k_tag_tree_init	libavcodec/j2k.c	/^J2kTgtNode *ff_j2k_tag_tree_init(int w, int h)$/;"	f
ff_j2k_xorbit_lut	libavcodec/j2k.c	/^uint8_t ff_j2k_sgnctxno_lut[16][16], ff_j2k_xorbit_lut[16][16];$/;"	v
ff_jack_demuxer	libavdevice/jack_audio.c	/^AVInputFormat ff_jack_demuxer = {$/;"	v
ff_jpeg2000_decoder	libavcodec/j2kdec.c	/^AVCodec ff_jpeg2000_decoder = {$/;"	v
ff_jpeg_fdct_islow	libavcodec/jfdctint.c	/^ff_jpeg_fdct_islow (DCTELEM * data)$/;"	f
ff_jpegls_decode_lse	libavcodec/jpeglsdec.c	/^int ff_jpegls_decode_lse(MJpegDecodeContext *s)$/;"	f
ff_jpegls_decode_picture	libavcodec/jpeglsdec.c	/^int ff_jpegls_decode_picture(MJpegDecodeContext *s, int near, int point_transform, int ilv){$/;"	f
ff_jpegls_decoder	libavcodec/jpeglsdec.c	/^AVCodec ff_jpegls_decoder = {$/;"	v
ff_jpegls_downscale_state	libavcodec/jpegls.h	/^static inline void ff_jpegls_downscale_state(JLSState *state, int Q){$/;"	f
ff_jpegls_encoder	libavcodec/jpeglsenc.c	/^AVCodec ff_jpegls_encoder = { \/\/FIXME avoid MPV_* lossless JPEG should not need them$/;"	v
ff_jpegls_init_state	libavcodec/jpegls.c	/^void ff_jpegls_init_state(JLSState *state){$/;"	f
ff_jpegls_quantize	libavcodec/jpegls.h	/^static inline int ff_jpegls_quantize(JLSState *s, int v){ \/\/FIXME optimize$/;"	f
ff_jpegls_reset_coding_parameters	libavcodec/jpegls.c	/^void ff_jpegls_reset_coding_parameters(JLSState *s, int reset_all){$/;"	f
ff_jpegls_update_state_regular	libavcodec/jpegls.h	/^static inline int ff_jpegls_update_state_regular(JLSState *state, int Q, int err){$/;"	f
ff_jref_idct1_add	libavcodec/dsputil.c	/^static void ff_jref_idct1_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct1_put	libavcodec/dsputil.c	/^static void ff_jref_idct1_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct2_add	libavcodec/dsputil.c	/^static void ff_jref_idct2_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct2_put	libavcodec/dsputil.c	/^static void ff_jref_idct2_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct4_add	libavcodec/dsputil.c	/^static void ff_jref_idct4_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct4_put	libavcodec/dsputil.c	/^static void ff_jref_idct4_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct_add	libavcodec/dsputil.c	/^static void ff_jref_idct_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jref_idct_put	libavcodec/dsputil.c	/^static void ff_jref_idct_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_jv_decoder	libavcodec/jvdec.c	/^AVCodec ff_jv_decoder = {$/;"	v
ff_jv_demuxer	libavformat/jvdec.c	/^AVInputFormat ff_jv_demuxer = {$/;"	v
ff_kbd_window_init	libavcodec/kbdwin.c	/^av_cold void ff_kbd_window_init(float *window, float alpha, int n)$/;"	f
ff_kgv1_decoder	libavcodec/kgv1dec.c	/^AVCodec ff_kgv1_decoder = {$/;"	v
ff_kmvc_decoder	libavcodec/kmvc.c	/^AVCodec ff_kmvc_decoder = {$/;"	v
ff_lagarith_decoder	libavcodec/lagarith.c	/^AVCodec ff_lagarith_decoder = {$/;"	v
ff_left_modifier_c	libavcodec/cavsdata.h	/^const int8_t ff_left_modifier_c[7] = {  5, -1,  2, -1,  6, 5, 6 };$/;"	v
ff_left_modifier_l	libavcodec/cavsdata.h	/^const int8_t ff_left_modifier_l[8] = {  0, -1,  6, -1, -1, 7, 6, 7 };$/;"	v
ff_libaacplus_encoder	libavcodec/libaacplus.c	/^AVCodec ff_libaacplus_encoder = {$/;"	v
ff_libcelt_decoder	libavcodec/libcelt_dec.c	/^AVCodec ff_libcelt_decoder = {$/;"	v
ff_libdc1394_demuxer	libavdevice/libdc1394.c	/^AVInputFormat ff_libdc1394_demuxer = {$/;"	v
ff_libdirac_decoder	libavcodec/libdiracdec.c	/^AVCodec ff_libdirac_decoder = {$/;"	v
ff_libdirac_encoder	libavcodec/libdiracenc.c	/^AVCodec ff_libdirac_encoder = {$/;"	v
ff_libfaac_encoder	libavcodec/libfaac.c	/^AVCodec ff_libfaac_encoder = {$/;"	v
ff_libgsm_decoder	libavcodec/libgsm.c	/^AVCodec ff_libgsm_decoder = {$/;"	v
ff_libgsm_encoder	libavcodec/libgsm.c	/^AVCodec ff_libgsm_encoder = {$/;"	v
ff_libgsm_ms_decoder	libavcodec/libgsm.c	/^AVCodec ff_libgsm_ms_decoder = {$/;"	v
ff_libgsm_ms_encoder	libavcodec/libgsm.c	/^AVCodec ff_libgsm_ms_encoder = {$/;"	v
ff_libmp3lame_encoder	libavcodec/libmp3lame.c	/^AVCodec ff_libmp3lame_encoder = {$/;"	v
ff_libmpeg2mmx2_idct_add	libavcodec/x86/dsputil_mmx.c	/^static void ff_libmpeg2mmx2_idct_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_libmpeg2mmx2_idct_put	libavcodec/x86/dsputil_mmx.c	/^static void ff_libmpeg2mmx2_idct_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_libmpeg2mmx_idct_add	libavcodec/x86/dsputil_mmx.c	/^static void ff_libmpeg2mmx_idct_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_libmpeg2mmx_idct_put	libavcodec/x86/dsputil_mmx.c	/^static void ff_libmpeg2mmx_idct_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_libnut_demuxer	libavformat/libnut.c	/^AVInputFormat ff_libnut_demuxer = {$/;"	v
ff_libnut_muxer	libavformat/libnut.c	/^AVOutputFormat ff_libnut_muxer = {$/;"	v
ff_libopencore_amrnb_decoder	libavcodec/libopencore-amr.c	/^AVCodec ff_libopencore_amrnb_decoder = {$/;"	v
ff_libopencore_amrnb_encoder	libavcodec/libopencore-amr.c	/^AVCodec ff_libopencore_amrnb_encoder = {$/;"	v
ff_libopencore_amrwb_decoder	libavcodec/libopencore-amr.c	/^AVCodec ff_libopencore_amrwb_decoder = {$/;"	v
ff_libopenjpeg_decoder	libavcodec/libopenjpeg.c	/^AVCodec ff_libopenjpeg_decoder = {$/;"	v
ff_libschroedinger_decoder	libavcodec/libschroedingerdec.c	/^AVCodec ff_libschroedinger_decoder = {$/;"	v
ff_libschroedinger_encoder	libavcodec/libschroedingerenc.c	/^AVCodec ff_libschroedinger_encoder = {$/;"	v
ff_libspeex_decoder	libavcodec/libspeexdec.c	/^AVCodec ff_libspeex_decoder = {$/;"	v
ff_libspeex_encoder	libavcodec/libspeexenc.c	/^AVCodec ff_libspeex_encoder = {$/;"	v
ff_libtheora_encoder	libavcodec/libtheoraenc.c	/^AVCodec ff_libtheora_encoder = {$/;"	v
ff_libvo_aacenc_encoder	libavcodec/libvo-aacenc.c	/^AVCodec ff_libvo_aacenc_encoder = {$/;"	v
ff_libvo_amrwbenc_encoder	libavcodec/libvo-amrwbenc.c	/^AVCodec ff_libvo_amrwbenc_encoder = {$/;"	v
ff_libvorbis_encoder	libavcodec/libvorbis.c	/^AVCodec ff_libvorbis_encoder = {$/;"	v
ff_libvpx_decoder	libavcodec/libvpxdec.c	/^AVCodec ff_libvpx_decoder = {$/;"	v
ff_libvpx_encoder	libavcodec/libvpxenc.c	/^AVCodec ff_libvpx_encoder = {$/;"	v
ff_libx264_encoder	libavcodec/libx264.c	/^AVCodec ff_libx264_encoder = {$/;"	v
ff_libxavs_encoder	libavcodec/libxavs.c	/^AVCodec ff_libxavs_encoder = {$/;"	v
ff_libxvid_encoder	libavcodec/libxvidff.c	/^AVCodec ff_libxvid_encoder = {$/;"	v
ff_ljpeg_encoder	libavcodec/ljpegenc.c	/^AVCodec ff_ljpeg_encoder = { \/\/FIXME avoid MPV_* lossless JPEG should not need them$/;"	v
ff_lmlm4_demuxer	libavformat/lmlm4.c	/^AVInputFormat ff_lmlm4_demuxer = {$/;"	v
ff_lockmgr_cb	libavcodec/utils.c	/^static int (*ff_lockmgr_cb)(void **mutex, enum AVLockOp op);$/;"	v	file:
ff_loco_decoder	libavcodec/loco.c	/^AVCodec ff_loco_decoder = {$/;"	v
ff_log2	libavcodec/celp_math.c	/^int ff_log2(uint32_t value)$/;"	f
ff_log2_run	libavcodec/bitstream.c	/^const uint8_t ff_log2_run[41]={$/;"	v
ff_log2_tab	libavutil/integer.c	/^const uint8_t ff_log2_tab[256]={$/;"	v
ff_log2_tab	libavutil/mathematics.c	/^const uint8_t ff_log2_tab[256]={$/;"	v
ff_lpc_calc_coefs	libavcodec/lpc.c	/^int ff_lpc_calc_coefs(LPCContext *s,$/;"	f
ff_lpc_end	libavcodec/lpc.c	/^av_cold void ff_lpc_end(LPCContext *s)$/;"	f
ff_lpc_init	libavcodec/lpc.c	/^av_cold int ff_lpc_init(LPCContext *s, int blocksize, int max_order,$/;"	f
ff_lpc_init_x86	libavcodec/x86/lpc_mmx.c	/^av_cold void ff_lpc_init_x86(LPCContext *c)$/;"	f
ff_lpc_refl_cb	libavcodec/ra144.c	/^const int16_t * const ff_lpc_refl_cb[10]={$/;"	v
ff_lsb2full	libavformat/nut.c	/^int64_t ff_lsb2full(StreamContext *stream, int64_t lsb){$/;"	f
ff_lsp2polyf	libavcodec/lsp.c	/^void ff_lsp2polyf(const double *lsp, double *f, int lp_half_order)$/;"	f
ff_lxf_demuxer	libavformat/lxfdec.c	/^AVInputFormat ff_lxf_demuxer = {$/;"	v
ff_lzw_cur_ptr	libavcodec/lzw.c	/^const uint8_t* ff_lzw_cur_ptr(LZWState *p)$/;"	f
ff_lzw_decode	libavcodec/lzw.c	/^int ff_lzw_decode(LZWState *p, uint8_t *buf, int len){$/;"	f
ff_lzw_decode_close	libavcodec/lzw.c	/^av_cold void ff_lzw_decode_close(LZWState **p)$/;"	f
ff_lzw_decode_init	libavcodec/lzw.c	/^int ff_lzw_decode_init(LZWState *p, int csize, const uint8_t *buf, int buf_size, int mode)$/;"	f
ff_lzw_decode_open	libavcodec/lzw.c	/^av_cold void ff_lzw_decode_open(LZWState **p)$/;"	f
ff_lzw_decode_tail	libavcodec/lzw.c	/^void ff_lzw_decode_tail(LZWState *p)$/;"	f
ff_lzw_encode	libavcodec/lzwenc.c	/^int ff_lzw_encode(LZWEncodeState * s, const uint8_t * inbuf, int insize)$/;"	f
ff_lzw_encode_flush	libavcodec/lzwenc.c	/^int ff_lzw_encode_flush(LZWEncodeState *s,$/;"	f
ff_lzw_encode_init	libavcodec/lzwenc.c	/^void ff_lzw_encode_init(LZWEncodeState *s, uint8_t *outbuf, int outsize,$/;"	f
ff_lzw_encode_state_size	libavcodec/lzwenc.c	/^const int ff_lzw_encode_state_size = sizeof(LZWEncodeState);$/;"	v
ff_m4v_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_m4v_muxer = {$/;"	v
ff_mace3_decoder	libavcodec/mace.c	/^AVCodec ff_mace3_decoder = {$/;"	v
ff_mace6_decoder	libavcodec/mace.c	/^AVCodec ff_mace6_decoder = {$/;"	v
ff_make_absolute_url	libavformat/utils.c	/^void ff_make_absolute_url(char *buf, int size, const char *base,$/;"	f
ff_match_2uint16	libavcodec/utils.c	/^int ff_match_2uint16(const uint16_t (*tab)[2], int size, int a, int b){$/;"	f
ff_matroska_audio_muxer	libavformat/matroskaenc.c	/^AVOutputFormat ff_matroska_audio_muxer = {$/;"	v
ff_matroska_demuxer	libavformat/matroskadec.c	/^AVInputFormat ff_matroska_demuxer = {$/;"	v
ff_matroska_muxer	libavformat/matroskaenc.c	/^AVOutputFormat ff_matroska_muxer = {$/;"	v
ff_mb_non_intra_vlc	libavcodec/msmpeg4.c	/^VLC ff_mb_non_intra_vlc[4];$/;"	v
ff_mba_length	libavcodec/h263data.h	/^uint8_t ff_mba_length[7]={$/;"	v
ff_mba_max	libavcodec/h263data.h	/^uint16_t ff_mba_max[6]={$/;"	v
ff_md5_muxer	libavformat/md5enc.c	/^AVOutputFormat ff_md5_muxer = {$/;"	v
ff_md5_protocol	libavformat/md5proto.c	/^URLProtocol ff_md5_protocol = {$/;"	v
ff_mdct_calc_c	libavcodec/fft-internal.h	69;"	d
ff_mdct_calc_c	libavcodec/mdct.c	/^void ff_mdct_calc_c(FFTContext *s, FFTSample *out, const FFTSample *input)$/;"	f
ff_mdct_calcw_c	libavcodec/mdct_fixed.c	/^void ff_mdct_calcw_c(FFTContext *s, FFTDouble *out, const FFTSample *input)$/;"	f
ff_mdct_end	libavcodec/fft.h	147;"	d
ff_mdct_end	libavcodec/mdct.c	/^av_cold void ff_mdct_end(FFTContext *s)$/;"	f
ff_mdct_init	libavcodec/fft.h	146;"	d
ff_mdct_init	libavcodec/mdct.c	/^av_cold int ff_mdct_init(FFTContext *s, int nbits, int inverse, double scale)$/;"	f
ff_mdec_decoder	libavcodec/mdec.c	/^AVCodec ff_mdec_decoder = {$/;"	v
ff_mediatype_audio	libavformat/wtv.c	/^const ff_asf_guid ff_mediatype_audio =$/;"	v
ff_mediatype_video	libavformat/wtv.c	/^const ff_asf_guid ff_mediatype_video =$/;"	v
ff_metadata_conv	libavformat/metadata.c	/^void ff_metadata_conv(AVDictionary **pm, const AVMetadataConv *d_conv,$/;"	f
ff_metadata_conv_ctx	libavformat/metadata.c	/^void ff_metadata_conv_ctx(AVFormatContext *ctx, const AVMetadataConv *d_conv,$/;"	f
ff_microdvd_demuxer	libavformat/microdvddec.c	/^AVInputFormat ff_microdvd_demuxer = {$/;"	v
ff_microdvd_muxer	libavformat/microdvdenc.c	/^AVOutputFormat ff_microdvd_muxer = {$/;"	v
ff_mimic_decoder	libavcodec/mimic.c	/^AVCodec ff_mimic_decoder = {$/;"	v
ff_mjpeg2jpeg_bsf	libavcodec/mjpeg2jpeg_bsf.c	/^AVBitStreamFilter ff_mjpeg2jpeg_bsf = {$/;"	v
ff_mjpeg_bits_ac_chrominance	libavcodec/mjpeg.c	/^const uint8_t ff_mjpeg_bits_ac_chrominance[17] =$/;"	v
ff_mjpeg_bits_ac_luminance	libavcodec/mjpeg.c	/^const uint8_t ff_mjpeg_bits_ac_luminance[17] =$/;"	v
ff_mjpeg_bits_dc_chrominance	libavcodec/mjpeg.c	/^const uint8_t ff_mjpeg_bits_dc_chrominance[17] =$/;"	v
ff_mjpeg_bits_dc_luminance	libavcodec/mjpeg.c	/^const uint8_t ff_mjpeg_bits_dc_luminance[17] =$/;"	v
ff_mjpeg_build_huffman_codes	libavcodec/mjpeg.c	/^void ff_mjpeg_build_huffman_codes(uint8_t *huff_size, uint16_t *huff_code,$/;"	f
ff_mjpeg_decode_dht	libavcodec/mjpegdec.c	/^int ff_mjpeg_decode_dht(MJpegDecodeContext *s)$/;"	f
ff_mjpeg_decode_dqt	libavcodec/mjpegdec.c	/^int ff_mjpeg_decode_dqt(MJpegDecodeContext *s)$/;"	f
ff_mjpeg_decode_end	libavcodec/mjpegdec.c	/^av_cold int ff_mjpeg_decode_end(AVCodecContext *avctx)$/;"	f
ff_mjpeg_decode_frame	libavcodec/mjpegdec.c	/^int ff_mjpeg_decode_frame(AVCodecContext *avctx,$/;"	f
ff_mjpeg_decode_init	libavcodec/mjpegdec.c	/^av_cold int ff_mjpeg_decode_init(AVCodecContext *avctx)$/;"	f
ff_mjpeg_decode_sof	libavcodec/mjpegdec.c	/^int ff_mjpeg_decode_sof(MJpegDecodeContext *s)$/;"	f
ff_mjpeg_decode_sos	libavcodec/mjpegdec.c	/^int ff_mjpeg_decode_sos(MJpegDecodeContext *s,$/;"	f
ff_mjpeg_decoder	libavcodec/mjpegdec.c	/^AVCodec ff_mjpeg_decoder = {$/;"	v
ff_mjpeg_encode_close	libavcodec/mjpegenc.c	/^void ff_mjpeg_encode_close(MpegEncContext *s)$/;"	f
ff_mjpeg_encode_dc	libavcodec/mjpegenc.c	/^void ff_mjpeg_encode_dc(MpegEncContext *s, int val,$/;"	f
ff_mjpeg_encode_init	libavcodec/mjpegenc.c	/^av_cold int ff_mjpeg_encode_init(MpegEncContext *s)$/;"	f
ff_mjpeg_encode_mb	libavcodec/mjpegenc.c	/^void ff_mjpeg_encode_mb(MpegEncContext *s, DCTELEM block[6][64])$/;"	f
ff_mjpeg_encode_picture_header	libavcodec/mjpegenc.c	/^void ff_mjpeg_encode_picture_header(MpegEncContext *s)$/;"	f
ff_mjpeg_encode_picture_trailer	libavcodec/mjpegenc.c	/^void ff_mjpeg_encode_picture_trailer(MpegEncContext *s)$/;"	f
ff_mjpeg_encode_stuffing	libavcodec/mjpegenc.c	/^void ff_mjpeg_encode_stuffing(PutBitContext * pbc)$/;"	f
ff_mjpeg_encoder	libavcodec/mjpegenc.c	/^AVCodec ff_mjpeg_encoder = {$/;"	v
ff_mjpeg_find_marker	libavcodec/mjpegdec.c	/^int ff_mjpeg_find_marker(MJpegDecodeContext *s,$/;"	f
ff_mjpeg_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_mjpeg_muxer = {$/;"	v
ff_mjpeg_parser	libavcodec/mjpeg_parser.c	/^AVCodecParser ff_mjpeg_parser = {$/;"	v
ff_mjpeg_val_ac_chrominance	libavcodec/mjpeg.c	/^const uint8_t ff_mjpeg_val_ac_chrominance[] =$/;"	v
ff_mjpeg_val_ac_luminance	libavcodec/mjpeg.c	/^const uint8_t ff_mjpeg_val_ac_luminance[] =$/;"	v
ff_mjpeg_val_dc	libavcodec/mjpeg.c	/^const uint8_t ff_mjpeg_val_dc[12] =$/;"	v
ff_mjpega_dump_header_bsf	libavcodec/mjpega_dump_header_bsf.c	/^AVBitStreamFilter ff_mjpega_dump_header_bsf = {$/;"	v
ff_mjpegb_decoder	libavcodec/mjpegbdec.c	/^AVCodec ff_mjpegb_decoder = {$/;"	v
ff_mkv_codec_tags	libavformat/matroska.c	/^const CodecTags ff_mkv_codec_tags[]={$/;"	v
ff_mkv_metadata_conv	libavformat/matroska.c	/^const AVMetadataConv ff_mkv_metadata_conv[] = {$/;"	v
ff_mkv_mime_tags	libavformat/matroska.c	/^const CodecMime ff_mkv_mime_tags[] = {$/;"	v
ff_mlp_calculate_parity	libavcodec/mlp.c	/^uint8_t ff_mlp_calculate_parity(const uint8_t *buf, unsigned int buf_size)$/;"	f
ff_mlp_checksum16	libavcodec/mlp.c	/^uint16_t ff_mlp_checksum16(const uint8_t *buf, unsigned int buf_size)$/;"	f
ff_mlp_checksum8	libavcodec/mlp.c	/^uint8_t ff_mlp_checksum8(const uint8_t *buf, unsigned int buf_size)$/;"	f
ff_mlp_decoder	libavcodec/mlpdec.c	/^AVCodec ff_mlp_decoder = {$/;"	v
ff_mlp_demuxer	libavformat/rawdec.c	/^AVInputFormat ff_mlp_demuxer = {$/;"	v
ff_mlp_filter_channel	libavcodec/mlpdsp.c	/^static void ff_mlp_filter_channel(int32_t *state, const int32_t *coeff,$/;"	f	file:
ff_mlp_huffman_tables	libavcodec/mlp.c	/^const uint8_t ff_mlp_huffman_tables[3][18][2] = {$/;"	v
ff_mlp_init	libavcodec/mlpdsp.c	/^void ff_mlp_init(DSPContext* c, AVCodecContext *avctx)$/;"	f
ff_mlp_init_crc	libavcodec/mlp.c	/^av_cold void ff_mlp_init_crc(void)$/;"	f
ff_mlp_init_x86	libavcodec/x86/mlpdsp.c	/^void ff_mlp_init_x86(DSPContext* c, AVCodecContext *avctx)$/;"	f
ff_mlp_layout	libavcodec/mlp_parser.c	/^const uint64_t ff_mlp_layout[32] = {$/;"	v
ff_mlp_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_mlp_muxer = {$/;"	v
ff_mlp_parser	libavcodec/mlp_parser.c	/^AVCodecParser ff_mlp_parser = {$/;"	v
ff_mlp_read_major_sync	libavcodec/mlp_parser.c	/^int ff_mlp_read_major_sync(void *log, MLPHeaderInfo *mh, GetBitContext *gb)$/;"	f
ff_mlp_restart_checksum	libavcodec/mlp.c	/^uint8_t ff_mlp_restart_checksum(const uint8_t *buf, unsigned int bit_size)$/;"	f
ff_mm_demuxer	libavformat/mm.c	/^AVInputFormat ff_mm_demuxer = {$/;"	v
ff_mmf_demuxer	libavformat/mmf.c	/^AVInputFormat ff_mmf_demuxer = {$/;"	v
ff_mmf_muxer	libavformat/mmf.c	/^AVOutputFormat ff_mmf_muxer = {$/;"	v
ff_mmi_idct	libavcodec/ps2/idct_mmi.c	/^void ff_mmi_idct(int16_t * block)$/;"	f
ff_mmi_idct_add	libavcodec/ps2/idct_mmi.c	/^void ff_mmi_idct_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_mmi_idct_put	libavcodec/ps2/idct_mmi.c	/^void ff_mmi_idct_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_mms_asf_header_parser	libavformat/mms.c	/^int ff_mms_asf_header_parser(MMSContext *mms)$/;"	f
ff_mms_read_data	libavformat/mms.c	/^int ff_mms_read_data(MMSContext *mms, uint8_t *buf, const int size)$/;"	f
ff_mms_read_header	libavformat/mms.c	/^int ff_mms_read_header(MMSContext *mms, uint8_t *buf, const int size)$/;"	f
ff_mmsh_protocol	libavformat/mmsh.c	/^URLProtocol ff_mmsh_protocol = {$/;"	v
ff_mmst_protocol	libavformat/mmst.c	/^URLProtocol ff_mmst_protocol = {$/;"	v
ff_mmvideo_decoder	libavcodec/mmvideo.c	/^AVCodec ff_mmvideo_decoder = {$/;"	v
ff_mngsig	libavcodec/png.c	/^const uint8_t ff_mngsig[8] = {138, 77, 78, 71, 13, 10, 26, 10};$/;"	v
ff_motionpixels_decoder	libavcodec/motionpixels.c	/^AVCodec ff_motionpixels_decoder = {$/;"	v
ff_mov2textsub_bsf	libavcodec/movsub_bsf.c	/^AVBitStreamFilter ff_mov2textsub_bsf={$/;"	v
ff_mov_add_hinted_packet	libavformat/movenchint.c	/^int ff_mov_add_hinted_packet(AVFormatContext *s, AVPacket *pkt,$/;"	f
ff_mov_close_hinting	libavformat/movenchint.c	/^void ff_mov_close_hinting(MOVTrack *track) {$/;"	f
ff_mov_demuxer	libavformat/mov.c	/^AVInputFormat ff_mov_demuxer = {$/;"	v
ff_mov_get_lpcm_codec_id	libavformat/mov.c	/^enum CodecID ff_mov_get_lpcm_codec_id(int bps, int flags)$/;"	f
ff_mov_init_hinting	libavformat/movenchint.c	/^int ff_mov_init_hinting(AVFormatContext *s, int index, int src_index)$/;"	f
ff_mov_iso639_to_lang	libavformat/isom.c	/^int ff_mov_iso639_to_lang(const char lang[4], int mp4)$/;"	f
ff_mov_lang_to_iso639	libavformat/isom.c	/^int ff_mov_lang_to_iso639(unsigned code, char to[4])$/;"	f
ff_mov_muxer	libavformat/movenc.c	/^AVOutputFormat ff_mov_muxer = {$/;"	v
ff_mov_read_chan	libavformat/isom.c	/^void ff_mov_read_chan(AVFormatContext *s, int64_t size, AVCodecContext *codec)$/;"	f
ff_mov_read_esds	libavformat/mov.c	/^int ff_mov_read_esds(AVFormatContext *fc, AVIOContext *pb, MOVAtom atom)$/;"	f
ff_mov_read_stsd_entries	libavformat/mov.c	/^int ff_mov_read_stsd_entries(MOVContext *c, AVIOContext *pb, int entries)$/;"	f
ff_mov_write_chan	libavformat/isom.c	/^void ff_mov_write_chan(AVIOContext *pb, int64_t channel_layout)$/;"	f
ff_mov_write_packet	libavformat/movenc.c	/^int ff_mov_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f
ff_mp1_decoder	libavcodec/mpegaudiodec.c	/^AVCodec ff_mp1_decoder =$/;"	v
ff_mp1float_decoder	libavcodec/mpegaudiodec_float.c	/^AVCodec ff_mp1float_decoder =$/;"	v
ff_mp2_decoder	libavcodec/mpegaudiodec.c	/^AVCodec ff_mp2_decoder =$/;"	v
ff_mp2_encoder	libavcodec/mpegaudioenc.c	/^AVCodec ff_mp2_encoder = {$/;"	v
ff_mp2_muxer	libavformat/mp3enc.c	/^AVOutputFormat ff_mp2_muxer = {$/;"	v
ff_mp2float_decoder	libavcodec/mpegaudiodec_float.c	/^AVCodec ff_mp2float_decoder =$/;"	v
ff_mp3_decoder	libavcodec/mpegaudiodec.c	/^AVCodec ff_mp3_decoder =$/;"	v
ff_mp3_demuxer	libavformat/mp3dec.c	/^AVInputFormat ff_mp3_demuxer = {$/;"	v
ff_mp3_header_compress_bsf	libavcodec/mp3_header_compress_bsf.c	/^AVBitStreamFilter ff_mp3_header_compress_bsf={$/;"	v
ff_mp3_header_decompress_bsf	libavcodec/mp3_header_decompress_bsf.c	/^AVBitStreamFilter ff_mp3_header_decompress_bsf={$/;"	v
ff_mp3_muxer	libavformat/mp3enc.c	/^AVOutputFormat ff_mp3_muxer = {$/;"	v
ff_mp3adu_decoder	libavcodec/mpegaudiodec.c	/^AVCodec ff_mp3adu_decoder =$/;"	v
ff_mp3adufloat_decoder	libavcodec/mpegaudiodec_float.c	/^AVCodec ff_mp3adufloat_decoder =$/;"	v
ff_mp3float_decoder	libavcodec/mpegaudiodec_float.c	/^AVCodec ff_mp3float_decoder =$/;"	v
ff_mp3on4_decoder	libavcodec/mpegaudiodec.c	/^AVCodec ff_mp3on4_decoder =$/;"	v
ff_mp3on4float_decoder	libavcodec/mpegaudiodec_float.c	/^AVCodec ff_mp3on4float_decoder =$/;"	v
ff_mp4_muxer	libavformat/movenc.c	/^AVOutputFormat ff_mp4_muxer = {$/;"	v
ff_mp4_obj_type	libavformat/isom.c	/^const AVCodecTag ff_mp4_obj_type[] = {$/;"	v
ff_mp4_read_dec_config_descr	libavformat/isom.c	/^int ff_mp4_read_dec_config_descr(AVFormatContext *fc, AVStream *st, AVIOContext *pb)$/;"	f
ff_mp4_read_descr	libavformat/isom.c	/^int ff_mp4_read_descr(AVFormatContext *fc, AVIOContext *pb, int *tag)$/;"	f
ff_mp4_read_descr_len	libavformat/isom.c	/^int ff_mp4_read_descr_len(AVIOContext *pb)$/;"	f
ff_mp4a_latm_dynamic_handler	libavformat/rtpdec_latm.c	/^RTPDynamicProtocolHandler ff_mp4a_latm_dynamic_handler = {$/;"	v
ff_mp4v_es_dynamic_handler	libavformat/rtpdec_mpeg4.c	/^RTPDynamicProtocolHandler ff_mp4v_es_dynamic_handler = {$/;"	v
ff_mpa_alloc_tables	libavcodec/mpegaudiodata.c	/^const unsigned char * const ff_mpa_alloc_tables[5] =$/;"	v
ff_mpa_bitrate_tab	libavcodec/mpegaudiodata.c	/^const uint16_t ff_mpa_bitrate_tab[2][3][15] = {$/;"	v
ff_mpa_check_header	libavcodec/mpegaudiodecheader.h	/^static inline int ff_mpa_check_header(uint32_t header){$/;"	f
ff_mpa_decode_header	libavcodec/mpegaudiodecheader.c	/^int ff_mpa_decode_header(AVCodecContext *avctx, uint32_t head, int *sample_rate, int *channels, int *frame_size, int *bit_rate)$/;"	f
ff_mpa_enwindow	libavcodec/mpegaudiodata.c	/^const int32_t ff_mpa_enwindow[257] = {$/;"	v
ff_mpa_freq_tab	libavcodec/mpegaudiodata.c	/^const uint16_t ff_mpa_freq_tab[3] = { 44100, 48000, 32000 };$/;"	v
ff_mpa_l2_select_table	libavcodec/mpegaudio.c	/^int ff_mpa_l2_select_table(int bitrate, int nb_channels, int freq, int lsf)$/;"	f
ff_mpa_quant_bits	libavcodec/mpegaudiodata.c	/^const int ff_mpa_quant_bits[17] = {$/;"	v
ff_mpa_quant_steps	libavcodec/mpegaudiodata.c	/^const int ff_mpa_quant_steps[17] = {$/;"	v
ff_mpa_sblimit_table	libavcodec/mpegaudiodata.c	/^const int ff_mpa_sblimit_table[5] = { 27 , 30 , 8, 12 , 30 };$/;"	v
ff_mpa_synth_filter	libavcodec/mpegaudiodsp_template.c	/^void RENAME(ff_mpa_synth_filter)(MPADSPContext *s, MPA_INT *synth_buf_ptr,$/;"	f
ff_mpa_synth_init	libavcodec/mpegaudiodsp_template.c	/^void av_cold RENAME(ff_mpa_synth_init)(MPA_INT *window)$/;"	f
ff_mpadsp_apply_window	libavcodec/mpegaudiodsp_template.c	/^void RENAME(ff_mpadsp_apply_window)(MPA_INT *synth_buf, MPA_INT *window,$/;"	f
ff_mpadsp_init	libavcodec/mpegaudiodsp.c	/^void ff_mpadsp_init(MPADSPContext *s)$/;"	f
ff_mpadsp_init_altivec	libavcodec/ppc/mpegaudiodec_altivec.c	/^void ff_mpadsp_init_altivec(MPADSPContext *s)$/;"	f
ff_mpadsp_init_arm	libavcodec/arm/mpegaudiodsp_init_arm.c	/^void ff_mpadsp_init_arm(MPADSPContext *s)$/;"	f
ff_mpadsp_init_mmx	libavcodec/x86/mpegaudiodec_mmx.c	/^void ff_mpadsp_init_mmx(MPADSPContext *s)$/;"	f
ff_mpc7_decoder	libavcodec/mpc7.c	/^AVCodec ff_mpc7_decoder = {$/;"	v
ff_mpc8_decoder	libavcodec/mpc8.c	/^AVCodec ff_mpc8_decoder = {$/;"	v
ff_mpc8_demuxer	libavformat/mpc8.c	/^AVInputFormat ff_mpc8_demuxer = {$/;"	v
ff_mpc_demuxer	libavformat/mpc.c	/^AVInputFormat ff_mpc_demuxer = {$/;"	v
ff_mpc_dequantize_and_synth	libavcodec/mpc.c	/^void ff_mpc_dequantize_and_synth(MPCContext * c, int maxband, void *data, int channels)$/;"	f
ff_mpc_init	libavcodec/mpc.c	/^void ff_mpc_init(void)$/;"	f
ff_mpeg12_common_init	libavcodec/mpeg12.c	/^void ff_mpeg12_common_init(MpegEncContext *s)$/;"	f
ff_mpeg12_init_vlcs	libavcodec/mpeg12.c	/^av_cold void ff_mpeg12_init_vlcs(void)$/;"	f
ff_mpeg12_mbAddrIncrTable	libavcodec/mpeg12data.c	/^const uint8_t ff_mpeg12_mbAddrIncrTable[36][2] = {$/;"	v
ff_mpeg12_mbMotionVectorTable	libavcodec/mpeg12data.c	/^const uint8_t ff_mpeg12_mbMotionVectorTable[17][2] = {$/;"	v
ff_mpeg12_mbPatTable	libavcodec/mpeg12data.c	/^const uint8_t ff_mpeg12_mbPatTable[64][2] = {$/;"	v
ff_mpeg12_static_rl_table_store	libavcodec/mpeg12.c	/^uint8_t ff_mpeg12_static_rl_table_store[2][2][2*MAX_RUN + MAX_LEVEL + 3];$/;"	v
ff_mpeg12_vlc_dc_chroma_bits	libavcodec/mpeg12data.c	/^const unsigned char ff_mpeg12_vlc_dc_chroma_bits[12] = {$/;"	v
ff_mpeg12_vlc_dc_chroma_code	libavcodec/mpeg12data.c	/^const uint16_t ff_mpeg12_vlc_dc_chroma_code[12] = {$/;"	v
ff_mpeg12_vlc_dc_lum_bits	libavcodec/mpeg12data.c	/^const unsigned char ff_mpeg12_vlc_dc_lum_bits[12] = {$/;"	v
ff_mpeg12_vlc_dc_lum_code	libavcodec/mpeg12data.c	/^const uint16_t ff_mpeg12_vlc_dc_lum_code[12] = {$/;"	v
ff_mpeg1_aspect	libavcodec/mpeg12data.c	/^const float ff_mpeg1_aspect[16]={$/;"	v
ff_mpeg1_clean_buffers	libavcodec/mpeg12.c	/^void ff_mpeg1_clean_buffers(MpegEncContext *s){$/;"	f
ff_mpeg1_dc_scale_table	libavcodec/mpegvideo.c	/^const uint8_t ff_mpeg1_dc_scale_table[128]={$/;"	v
ff_mpeg1_decode_block_intra	libavcodec/mpeg12.c	/^int ff_mpeg1_decode_block_intra(MpegEncContext *s,$/;"	f
ff_mpeg1_default_intra_matrix	libavcodec/mpeg12data.c	/^const uint16_t ff_mpeg1_default_intra_matrix[64] = {$/;"	v
ff_mpeg1_default_non_intra_matrix	libavcodec/mpeg12data.c	/^const uint16_t ff_mpeg1_default_non_intra_matrix[64] = {$/;"	v
ff_mpeg1_encode_init	libavcodec/mpeg12enc.c	/^void ff_mpeg1_encode_init(MpegEncContext *s)$/;"	f
ff_mpeg1_encode_slice_header	libavcodec/mpeg12enc.c	/^void ff_mpeg1_encode_slice_header(MpegEncContext *s){$/;"	f
ff_mpeg1_find_frame_end	libavcodec/mpeg12.c	/^int ff_mpeg1_find_frame_end(ParseContext *pc, const uint8_t *buf, int buf_size, AVCodecParserContext *s)$/;"	f
ff_mpeg1_vdpau_decoder	libavcodec/mpeg12.c	/^AVCodec ff_mpeg1_vdpau_decoder = {$/;"	v
ff_mpeg1_vdpau_hwaccel	libavcodec/vdpau.c	/^AVHWAccel ff_mpeg1_vdpau_hwaccel = {$/;"	v
ff_mpeg1system_muxer	libavformat/mpegenc.c	/^AVOutputFormat ff_mpeg1system_muxer = {$/;"	v
ff_mpeg1vcd_muxer	libavformat/mpegenc.c	/^AVOutputFormat ff_mpeg1vcd_muxer = {$/;"	v
ff_mpeg1video_decoder	libavcodec/mpeg12.c	/^AVCodec ff_mpeg1video_decoder = {$/;"	v
ff_mpeg1video_encoder	libavcodec/mpeg12enc.c	/^AVCodec ff_mpeg1video_encoder = {$/;"	v
ff_mpeg1video_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_mpeg1video_muxer = {$/;"	v
ff_mpeg2_aspect	libavcodec/mpeg12data.c	/^const AVRational ff_mpeg2_aspect[16]={$/;"	v
ff_mpeg2_crystalhd_decoder	libavcodec/crystalhd.c	/^AVCodec ff_mpeg2_crystalhd_decoder = {$/;"	v
ff_mpeg2_dc_scale_table	libavcodec/mpegvideo.c	/^const uint8_t * const ff_mpeg2_dc_scale_table[4]={$/;"	v
ff_mpeg2_dxva2_hwaccel	libavcodec/dxva2_mpeg2.c	/^AVHWAccel ff_mpeg2_dxva2_hwaccel = {$/;"	v
ff_mpeg2_vaapi_hwaccel	libavcodec/vaapi_mpeg2.c	/^AVHWAccel ff_mpeg2_vaapi_hwaccel = {$/;"	v
ff_mpeg2_vdpau_hwaccel	libavcodec/vdpau.c	/^AVHWAccel ff_mpeg2_vdpau_hwaccel = {$/;"	v
ff_mpeg2dvd_muxer	libavformat/mpegenc.c	/^AVOutputFormat ff_mpeg2dvd_muxer = {$/;"	v
ff_mpeg2svcd_muxer	libavformat/mpegenc.c	/^AVOutputFormat ff_mpeg2svcd_muxer = {$/;"	v
ff_mpeg2video_decoder	libavcodec/mpeg12.c	/^AVCodec ff_mpeg2video_decoder = {$/;"	v
ff_mpeg2video_encoder	libavcodec/mpeg12enc.c	/^AVCodec ff_mpeg2video_encoder = {$/;"	v
ff_mpeg2video_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_mpeg2video_muxer = {$/;"	v
ff_mpeg2vob_muxer	libavformat/mpegenc.c	/^AVOutputFormat ff_mpeg2vob_muxer = {$/;"	v
ff_mpeg4_DCtab_chrom	libavcodec/mpeg4data.h	/^const uint8_t ff_mpeg4_DCtab_chrom[13][2] =$/;"	v
ff_mpeg4_DCtab_lum	libavcodec/mpeg4data.h	/^const uint8_t ff_mpeg4_DCtab_lum[13][2] =$/;"	v
ff_mpeg4_c_dc_scale_table	libavcodec/mpeg4data.h	/^const uint8_t ff_mpeg4_c_dc_scale_table[32]={$/;"	v
ff_mpeg4_clean_buffers	libavcodec/mpeg4video.c	/^void ff_mpeg4_clean_buffers(MpegEncContext *s)$/;"	f
ff_mpeg4_crystalhd_decoder	libavcodec/crystalhd.c	/^AVCodec ff_mpeg4_crystalhd_decoder = {$/;"	v
ff_mpeg4_decode_partitions	libavcodec/mpeg4videodec.c	/^int ff_mpeg4_decode_partitions(MpegEncContext *s)$/;"	f
ff_mpeg4_decode_picture_header	libavcodec/mpeg4videodec.c	/^int ff_mpeg4_decode_picture_header(MpegEncContext * s, GetBitContext *gb)$/;"	f
ff_mpeg4_decoder	libavcodec/mpeg4videodec.c	/^AVCodec ff_mpeg4_decoder = {$/;"	v
ff_mpeg4_default_intra_matrix	libavcodec/mpeg4data.h	/^const int16_t ff_mpeg4_default_intra_matrix[64] = {$/;"	v
ff_mpeg4_default_non_intra_matrix	libavcodec/mpeg4data.h	/^const int16_t ff_mpeg4_default_non_intra_matrix[64] = {$/;"	v
ff_mpeg4_encode_video_packet_header	libavcodec/mpeg4videoenc.c	/^void ff_mpeg4_encode_video_packet_header(MpegEncContext *s)$/;"	f
ff_mpeg4_encoder	libavcodec/mpeg4videoenc.c	/^AVCodec ff_mpeg4_encoder = {$/;"	v
ff_mpeg4_find_frame_end	libavcodec/mpeg4video_parser.c	/^int ff_mpeg4_find_frame_end(ParseContext *pc, const uint8_t *buf, int buf_size){$/;"	f
ff_mpeg4_generic_dynamic_handler	libavformat/rtpdec_mpeg4.c	/^RTPDynamicProtocolHandler ff_mpeg4_generic_dynamic_handler = {$/;"	v
ff_mpeg4_get_video_packet_prefix_length	libavcodec/mpeg4video.c	/^int ff_mpeg4_get_video_packet_prefix_length(MpegEncContext *s){$/;"	f
ff_mpeg4_init_direct_mv	libavcodec/mpeg4video.c	/^void ff_mpeg4_init_direct_mv(MpegEncContext *s){$/;"	f
ff_mpeg4_init_partitions	libavcodec/mpeg4videoenc.c	/^void ff_mpeg4_init_partitions(MpegEncContext *s)$/;"	f
ff_mpeg4_intra_level	libavcodec/mpeg4data.h	/^const int8_t ff_mpeg4_intra_level[102] = {$/;"	v
ff_mpeg4_intra_run	libavcodec/mpeg4data.h	/^const int8_t ff_mpeg4_intra_run[102] = {$/;"	v
ff_mpeg4_intra_vlc	libavcodec/mpeg4data.h	/^const uint16_t ff_mpeg4_intra_vlc[103][2] = {$/;"	v
ff_mpeg4_merge_partitions	libavcodec/mpeg4videoenc.c	/^void ff_mpeg4_merge_partitions(MpegEncContext *s)$/;"	f
ff_mpeg4_pred_dc	libavcodec/mpeg4video.h	/^static inline int ff_mpeg4_pred_dc(MpegEncContext * s, int n, int level, int *dir_ptr, int encoding)$/;"	f
ff_mpeg4_resync_prefix	libavcodec/mpeg4data.h	/^const uint16_t ff_mpeg4_resync_prefix[8]={$/;"	v
ff_mpeg4_rl_intra	libavcodec/mpeg4data.h	/^RLTable ff_mpeg4_rl_intra = {$/;"	v
ff_mpeg4_set_direct_mv	libavcodec/mpeg4video.c	/^int ff_mpeg4_set_direct_mv(MpegEncContext *s, int mx, int my){$/;"	f
ff_mpeg4_set_one_direct_mv	libavcodec/mpeg4video.c	/^static inline void ff_mpeg4_set_one_direct_mv(MpegEncContext *s, int mx, int my, int i){$/;"	f	file:
ff_mpeg4_static_rl_table_store	libavcodec/mpeg4video.c	/^uint8_t ff_mpeg4_static_rl_table_store[3][2][2*MAX_RUN + MAX_LEVEL + 3];$/;"	v
ff_mpeg4_stuffing	libavcodec/mpeg4videoenc.c	/^void ff_mpeg4_stuffing(PutBitContext * pbc)$/;"	f
ff_mpeg4_vaapi_hwaccel	libavcodec/vaapi_mpeg4.c	/^AVHWAccel ff_mpeg4_vaapi_hwaccel = {$/;"	v
ff_mpeg4_vdpau_decoder	libavcodec/mpeg4videodec.c	/^AVCodec ff_mpeg4_vdpau_decoder = {$/;"	v
ff_mpeg4_y_dc_scale_table	libavcodec/mpeg4data.h	/^const uint8_t ff_mpeg4_y_dc_scale_table[32]={$/;"	v
ff_mpeg4audio_channels	libavcodec/mpeg4audio.c	/^const uint8_t ff_mpeg4audio_channels[8] = {$/;"	v
ff_mpeg4audio_get_config	libavcodec/mpeg4audio.c	/^int ff_mpeg4audio_get_config(MPEG4AudioConfig *c, const uint8_t *buf, int buf_size)$/;"	f
ff_mpeg4audio_sample_rates	libavcodec/mpeg4audio.c	/^const int ff_mpeg4audio_sample_rates[16] = {$/;"	v
ff_mpeg4video_parser	libavcodec/mpeg4video_parser.c	/^AVCodecParser ff_mpeg4video_parser = {$/;"	v
ff_mpeg4video_split	libavcodec/parser.c	/^int ff_mpeg4video_split(AVCodecContext *avctx,$/;"	f
ff_mpeg_flush	libavcodec/mpegvideo.c	/^void ff_mpeg_flush(AVCodecContext *avctx){$/;"	f
ff_mpeg_update_thread_context	libavcodec/mpegvideo.c	/^int ff_mpeg_update_thread_context(AVCodecContext *dst, const AVCodecContext *src)$/;"	f
ff_mpeg_vdpau_decoder	libavcodec/mpeg12.c	/^AVCodec ff_mpeg_vdpau_decoder = {$/;"	v
ff_mpeg_xvmc_decoder	libavcodec/mpeg12.c	/^AVCodec ff_mpeg_xvmc_decoder = {$/;"	v
ff_mpegaudio_decode_header	libavcodec/mpegaudiodecheader.c	/^int ff_mpegaudio_decode_header(MPADecodeHeader *s, uint32_t header)$/;"	f
ff_mpegaudio_parser	libavcodec/mpegaudio_parser.c	/^AVCodecParser ff_mpegaudio_parser = {$/;"	v
ff_mpegps_demuxer	libavformat/mpeg.c	/^AVInputFormat ff_mpegps_demuxer = {$/;"	v
ff_mpegts_demuxer	libavformat/mpegts.c	/^AVInputFormat ff_mpegts_demuxer = {$/;"	v
ff_mpegts_muxer	libavformat/mpegtsenc.c	/^AVOutputFormat ff_mpegts_muxer = {$/;"	v
ff_mpegts_parse_close	libavformat/mpegts.c	/^void ff_mpegts_parse_close(MpegTSContext *ts)$/;"	f
ff_mpegts_parse_open	libavformat/mpegts.c	/^MpegTSContext *ff_mpegts_parse_open(AVFormatContext *s)$/;"	f
ff_mpegts_parse_packet	libavformat/mpegts.c	/^int ff_mpegts_parse_packet(MpegTSContext *ts, AVPacket *pkt,$/;"	f
ff_mpegtsraw_demuxer	libavformat/mpegts.c	/^AVInputFormat ff_mpegtsraw_demuxer = {$/;"	v
ff_mpegvideo_decoder	libavcodec/mpeg12.c	/^AVCodec ff_mpegvideo_decoder = {$/;"	v
ff_mpegvideo_parser	libavcodec/mpegvideo_parser.c	/^AVCodecParser ff_mpegvideo_parser = {$/;"	v
ff_mpjpeg_muxer	libavformat/mpjpeg.c	/^AVOutputFormat ff_mpjpeg_muxer = {$/;"	v
ff_mqc_decode	libavcodec/mqcdec.c	/^int ff_mqc_decode(MqcState *mqc, uint8_t *cxstate)$/;"	f
ff_mqc_encode	libavcodec/mqcenc.c	/^void ff_mqc_encode(MqcState *mqc, uint8_t *cxstate, int d)$/;"	f
ff_mqc_flush	libavcodec/mqcenc.c	/^int ff_mqc_flush(MqcState *mqc)$/;"	f
ff_mqc_init_contexts	libavcodec/mqc.c	/^void ff_mqc_init_contexts(MqcState *mqc)$/;"	f
ff_mqc_initdec	libavcodec/mqcdec.c	/^void ff_mqc_initdec(MqcState *mqc, uint8_t *bp)$/;"	f
ff_mqc_initenc	libavcodec/mqcenc.c	/^void ff_mqc_initenc(MqcState *mqc, uint8_t *bp)$/;"	f
ff_mqc_length	libavcodec/mqcenc.c	/^int ff_mqc_length(MqcState *mqc)$/;"	f
ff_mqc_nlps	libavcodec/mqc.c	/^uint8_t ff_mqc_nlps[2*47];$/;"	v
ff_mqc_nmps	libavcodec/mqc.c	/^uint8_t ff_mqc_nmps[2*47];$/;"	v
ff_mqc_qe	libavcodec/mqc.c	/^uint16_t ff_mqc_qe [2*47];$/;"	v
ff_msgsm_decode_block	libavcodec/msgsmdec.c	/^int ff_msgsm_decode_block(AVCodecContext *avctx, int16_t *samples,$/;"	f
ff_msmp4_dc_chroma_vlc	libavcodec/msmpeg4data.c	/^VLC ff_msmp4_dc_chroma_vlc[2];$/;"	v
ff_msmp4_dc_luma_vlc	libavcodec/msmpeg4data.c	/^VLC ff_msmp4_dc_luma_vlc[2];$/;"	v
ff_msmp4_mb_i_table	libavcodec/msmpeg4data.c	/^const uint16_t ff_msmp4_mb_i_table[64][2] = {$/;"	v
ff_msmp4_mb_i_vlc	libavcodec/msmpeg4data.c	/^VLC ff_msmp4_mb_i_vlc;$/;"	v
ff_msmpeg4_code012	libavcodec/msmpeg4.c	/^void ff_msmpeg4_code012(PutBitContext *pb, int n)$/;"	f
ff_msmpeg4_coded_block_pred	libavcodec/msmpeg4.c	/^int ff_msmpeg4_coded_block_pred(MpegEncContext * s, int n, uint8_t **coded_block_ptr)$/;"	f
ff_msmpeg4_crystalhd_decoder	libavcodec/crystalhd.c	/^AVCodec ff_msmpeg4_crystalhd_decoder = {$/;"	v
ff_msmpeg4_decode_block	libavcodec/msmpeg4.c	/^int ff_msmpeg4_decode_block(MpegEncContext * s, DCTELEM * block,$/;"	f
ff_msmpeg4_decode_init	libavcodec/msmpeg4.c	/^av_cold int ff_msmpeg4_decode_init(AVCodecContext *avctx)$/;"	f
ff_msmpeg4_decode_motion	libavcodec/msmpeg4.c	/^int ff_msmpeg4_decode_motion(MpegEncContext * s,$/;"	f
ff_msmpeg4_encode_block	libavcodec/msmpeg4.c	/^void ff_msmpeg4_encode_block(MpegEncContext * s, DCTELEM * block, int n)$/;"	f
ff_msmpeg4_encode_init	libavcodec/msmpeg4.c	/^av_cold void ff_msmpeg4_encode_init(MpegEncContext *s)$/;"	f
ff_msmpeg4_encode_motion	libavcodec/msmpeg4.c	/^void ff_msmpeg4_encode_motion(MpegEncContext * s,$/;"	f
ff_msmpeg4_handle_slices	libavcodec/msmpeg4.c	/^void ff_msmpeg4_handle_slices(MpegEncContext *s){$/;"	f
ff_msmpeg4v1_decoder	libavcodec/msmpeg4.c	/^AVCodec ff_msmpeg4v1_decoder = {$/;"	v
ff_msmpeg4v2_decoder	libavcodec/msmpeg4.c	/^AVCodec ff_msmpeg4v2_decoder = {$/;"	v
ff_msmpeg4v2_encoder	libavcodec/mpegvideo_enc.c	/^AVCodec ff_msmpeg4v2_encoder = {$/;"	v
ff_msmpeg4v3_decoder	libavcodec/msmpeg4.c	/^AVCodec ff_msmpeg4v3_decoder = {$/;"	v
ff_msmpeg4v3_encoder	libavcodec/mpegvideo_enc.c	/^AVCodec ff_msmpeg4v3_encoder = {$/;"	v
ff_msnwc_tcp_demuxer	libavformat/msnwc_tcp.c	/^AVInputFormat ff_msnwc_tcp_demuxer = {$/;"	v
ff_mspel_motion	libavcodec/wmv2.c	/^void ff_mspel_motion(MpegEncContext *s,$/;"	f
ff_msrle_decode	libavcodec/msrledec.c	/^int ff_msrle_decode(AVCodecContext *avctx, AVPicture *pic, int depth,$/;"	f
ff_msrle_decoder	libavcodec/msrle.c	/^AVCodec ff_msrle_decoder = {$/;"	v
ff_msvideo1_decoder	libavcodec/msvideo1.c	/^AVCodec ff_msvideo1_decoder = {$/;"	v
ff_msvideo1_encoder	libavcodec/msvideo1enc.c	/^AVCodec ff_msvideo1_encoder = {$/;"	v
ff_mszh_decoder	libavcodec/lcldec.c	/^AVCodec ff_mszh_decoder = {$/;"	v
ff_mtv_demuxer	libavformat/mtv.c	/^AVInputFormat ff_mtv_demuxer = {$/;"	v
ff_mvi_demuxer	libavformat/mvi.c	/^AVInputFormat ff_mvi_demuxer = {$/;"	v
ff_mxf_codec_uls	libavformat/mxf.c	/^const MXFCodecUL ff_mxf_codec_uls[] = {$/;"	v
ff_mxf_d10_muxer	libavformat/mxfenc.c	/^AVOutputFormat ff_mxf_d10_muxer = {$/;"	v
ff_mxf_data_definition_uls	libavformat/mxf.c	/^const MXFCodecUL ff_mxf_data_definition_uls[] = {$/;"	v
ff_mxf_decode_pixel_layout	libavformat/mxf.c	/^int ff_mxf_decode_pixel_layout(const char pixel_layout[16], enum PixelFormat *pix_fmt)$/;"	f
ff_mxf_demuxer	libavformat/mxfdec.c	/^AVInputFormat ff_mxf_demuxer = {$/;"	v
ff_mxf_muxer	libavformat/mxfenc.c	/^AVOutputFormat ff_mxf_muxer = {$/;"	v
ff_mxf_pixel_layouts	libavformat/mxf.c	/^} ff_mxf_pixel_layouts[] = {$/;"	v	typeref:struct:__anon329	file:
ff_mxg_demuxer	libavformat/mxg.c	/^AVInputFormat ff_mxg_demuxer = {$/;"	v
ff_mxpeg_decoder	libavcodec/mxpegdec.c	/^AVCodec ff_mxpeg_decoder = {$/;"	v
ff_nc_demuxer	libavformat/ncdec.c	/^AVInputFormat ff_nc_demuxer = {$/;"	v
ff_nelly_band_sizes_table	libavcodec/nellymoser.c	/^const uint8_t ff_nelly_band_sizes_table[NELLY_BANDS] = {$/;"	v
ff_nelly_delta_table	libavcodec/nellymoser.c	/^const int16_t ff_nelly_delta_table[32] = {$/;"	v
ff_nelly_dequantization_table	libavcodec/nellymoser.c	/^const float ff_nelly_dequantization_table[127] = {$/;"	v
ff_nelly_get_sample_bits	libavcodec/nellymoser.c	/^void ff_nelly_get_sample_bits(const float *buf, int *bits)$/;"	f
ff_nelly_init_table	libavcodec/nellymoser.c	/^const uint16_t ff_nelly_init_table[64] = {$/;"	v
ff_nellymoser_decoder	libavcodec/nellymoserdec.c	/^AVCodec ff_nellymoser_decoder = {$/;"	v
ff_nellymoser_encoder	libavcodec/nellymoserenc.c	/^AVCodec ff_nellymoser_encoder = {$/;"	v
ff_neterrno	libavformat/network.h	/^static inline int ff_neterrno(void)$/;"	f
ff_neterrno	libavformat/network.h	56;"	d
ff_network_close	libavformat/network.h	/^static inline void ff_network_close(void)$/;"	f
ff_network_init	libavformat/network.h	/^static inline int ff_network_init(void)$/;"	f
ff_network_wait_fd	libavformat/network.h	/^static inline int ff_network_wait_fd(int fd, int write)$/;"	f
ff_new_chapter	libavformat/utils.c	/^AVChapter *ff_new_chapter(AVFormatContext *s, int id, AVRational time_base, int64_t start, int64_t end, const char *title)$/;"	f
ff_noise_bsf	libavcodec/noise_bsf.c	/^AVBitStreamFilter ff_noise_bsf={$/;"	v
ff_nsv_demuxer	libavformat/nsvdec.c	/^AVInputFormat ff_nsv_demuxer = {$/;"	v
ff_ntp_time	libavformat/utils.c	/^uint64_t ff_ntp_time(void)$/;"	f
ff_null_muxer	libavformat/nullenc.c	/^AVOutputFormat ff_null_muxer = {$/;"	v
ff_nut_add_sp	libavformat/nut.c	/^void ff_nut_add_sp(NUTContext *nut, int64_t pos, int64_t back_ptr, int64_t ts){$/;"	f
ff_nut_demuxer	libavformat/nutdec.c	/^AVInputFormat ff_nut_demuxer = {$/;"	v
ff_nut_dispositions	libavformat/nut.c	/^const Dispositions ff_nut_dispositions[] = {$/;"	v
ff_nut_free_sp	libavformat/nut.c	/^void ff_nut_free_sp(NUTContext *nut)$/;"	f
ff_nut_metadata_conv	libavformat/nut.c	/^const AVMetadataConv ff_nut_metadata_conv[] = {$/;"	v
ff_nut_muxer	libavformat/nutenc.c	/^AVOutputFormat ff_nut_muxer = {$/;"	v
ff_nut_reset_ts	libavformat/nut.c	/^void ff_nut_reset_ts(NUTContext *nut, AVRational time_base, int64_t val){$/;"	f
ff_nut_sp_pos_cmp	libavformat/nut.c	/^int ff_nut_sp_pos_cmp(const Syncpoint *a, const Syncpoint *b){$/;"	f
ff_nut_sp_pts_cmp	libavformat/nut.c	/^int ff_nut_sp_pts_cmp(const Syncpoint *a, const Syncpoint *b){$/;"	f
ff_nut_subtitle_tags	libavformat/nut.c	/^const AVCodecTag ff_nut_subtitle_tags[] = {$/;"	v
ff_nut_video_tags	libavformat/nut.c	/^const AVCodecTag ff_nut_video_tags[] = {$/;"	v
ff_nuv_decoder	libavcodec/nuv.c	/^AVCodec ff_nuv_decoder = {$/;"	v
ff_nuv_demuxer	libavformat/nuv.c	/^AVInputFormat ff_nuv_demuxer = {$/;"	v
ff_ogg_demuxer	libavformat/oggdec.c	/^AVInputFormat ff_ogg_demuxer = {$/;"	v
ff_ogg_muxer	libavformat/oggenc.c	/^AVOutputFormat ff_ogg_muxer = {$/;"	v
ff_ogm_audio_codec	libavformat/oggparseogm.c	/^const struct ogg_codec ff_ogm_audio_codec = {$/;"	v	typeref:struct:ogg_codec
ff_ogm_old_codec	libavformat/oggparseogm.c	/^const struct ogg_codec ff_ogm_old_codec = {$/;"	v	typeref:struct:ogg_codec
ff_ogm_text_codec	libavformat/oggparseogm.c	/^const struct ogg_codec ff_ogm_text_codec = {$/;"	v	typeref:struct:ogg_codec
ff_ogm_video_codec	libavformat/oggparseogm.c	/^const struct ogg_codec ff_ogm_video_codec = {$/;"	v	typeref:struct:ogg_codec
ff_old_dirac_codec	libavformat/oggparsedirac.c	/^const struct ogg_codec ff_old_dirac_codec = {$/;"	v	typeref:struct:ogg_codec
ff_old_flac_codec	libavformat/oggparseflac.c	/^const struct ogg_codec ff_old_flac_codec = {$/;"	v	typeref:struct:ogg_codec
ff_oma_demuxer	libavformat/oma.c	/^AVInputFormat ff_oma_demuxer = {$/;"	v
ff_oss_demuxer	libavdevice/oss_audio.c	/^AVInputFormat ff_oss_demuxer = {$/;"	v
ff_oss_muxer	libavdevice/oss_audio.c	/^AVOutputFormat ff_oss_muxer = {$/;"	v
ff_pam_decoder	libavcodec/pnmdec.c	/^AVCodec ff_pam_decoder = {$/;"	v
ff_pam_encoder	libavcodec/pamenc.c	/^AVCodec ff_pam_encoder = {$/;"	v
ff_parse1_close	libavcodec/parser.c	/^void ff_parse1_close(AVCodecParserContext *s)$/;"	f
ff_parse_close	libavcodec/parser.c	/^void ff_parse_close(AVCodecParserContext *s)$/;"	f
ff_parse_fmtp	libavformat/rtpdec.c	/^int ff_parse_fmtp(AVStream *stream, PayloadContext *data, const char *p,$/;"	f
ff_parse_key_val_cb	libavformat/internal.h	/^typedef void (*ff_parse_key_val_cb)(void *context, const char *key,$/;"	t
ff_parse_key_value	libavformat/utils.c	/^void ff_parse_key_value(const char *str, ff_parse_key_val_cb callback_get_buf,$/;"	f
ff_parse_mpeg2_descriptor	libavformat/mpegts.c	/^int ff_parse_mpeg2_descriptor(AVFormatContext *fc, AVStream *st, int stream_type,$/;"	f
ff_parse_pes_pts	libavformat/mpeg.h	/^static inline int64_t ff_parse_pes_pts(const uint8_t *buf) {$/;"	f
ff_parse_specific_params	libavformat/riff.c	/^void ff_parse_specific_params(AVCodecContext *stream, int *au_rate, int *au_ssize, int *au_scale)$/;"	f
ff_pbm_decoder	libavcodec/pnmdec.c	/^AVCodec ff_pbm_decoder = {$/;"	v
ff_pbm_encoder	libavcodec/pnmenc.c	/^AVCodec ff_pbm_encoder = {$/;"	v
ff_pca	libavutil/pca.c	/^int ff_pca(PCA *pca, double *eigenvector, double *eigenvalue){$/;"	f
ff_pca_add	libavutil/pca.c	/^void ff_pca_add(PCA *pca, double *v){$/;"	f
ff_pca_free	libavutil/pca.c	/^void ff_pca_free(PCA *pca){$/;"	f
ff_pca_init	libavutil/pca.c	/^PCA *ff_pca_init(int n){$/;"	f
ff_pcm_bluray_decoder	libavcodec/pcm-mpeg.c	/^AVCodec ff_pcm_bluray_decoder = {$/;"	v
ff_pcx_decoder	libavcodec/pcx.c	/^AVCodec ff_pcx_decoder = {$/;"	v
ff_pcx_encoder	libavcodec/pcxenc.c	/^AVCodec ff_pcx_encoder = {$/;"	v
ff_pgm_decoder	libavcodec/pnmdec.c	/^AVCodec ff_pgm_decoder = {$/;"	v
ff_pgm_encoder	libavcodec/pnmenc.c	/^AVCodec ff_pgm_encoder = {$/;"	v
ff_pgmyuv_decoder	libavcodec/pnmdec.c	/^AVCodec ff_pgmyuv_decoder = {$/;"	v
ff_pgmyuv_encoder	libavcodec/pnmenc.c	/^AVCodec ff_pgmyuv_encoder = {$/;"	v
ff_pgssub_decoder	libavcodec/pgssubdec.c	/^AVCodec ff_pgssub_decoder = {$/;"	v
ff_pictor_decoder	libavcodec/pictordec.c	/^AVCodec ff_pictor_decoder = {$/;"	v
ff_pipe_protocol	libavformat/file.c	/^URLProtocol ff_pipe_protocol = {$/;"	v
ff_pix_fmt	libavcodec/libdirac.h	/^    enum PixelFormat ff_pix_fmt;$/;"	m	struct:__anon161	typeref:enum:__anon161::PixelFormat
ff_pix_fmt	libavcodec/libschroedinger.h	/^    enum PixelFormat  ff_pix_fmt;$/;"	m	struct:__anon133	typeref:enum:__anon133::PixelFormat
ff_pixfmt_list_420	libavcodec/mpegvideo.c	/^const enum PixelFormat ff_pixfmt_list_420[] = {$/;"	v	typeref:enum:PixelFormat
ff_pmp_demuxer	libavformat/pmpdec.c	/^AVInputFormat ff_pmp_demuxer = {$/;"	v
ff_png_decoder	libavcodec/pngdec.c	/^AVCodec ff_png_decoder = {$/;"	v
ff_png_encoder	libavcodec/pngenc.c	/^AVCodec ff_png_encoder = {$/;"	v
ff_png_get_nb_channels	libavcodec/png.c	/^int ff_png_get_nb_channels(int color_type)$/;"	f
ff_png_pass_mask	libavcodec/png.c	/^const uint8_t ff_png_pass_mask[NB_PASSES] = {$/;"	v
ff_png_pass_row_size	libavcodec/png.c	/^int ff_png_pass_row_size(int pass, int bits_per_pixel, int width)$/;"	f
ff_png_pass_xmin	libavcodec/png.c	/^static const uint8_t ff_png_pass_xmin[NB_PASSES] = {$/;"	v	file:
ff_png_pass_xshift	libavcodec/png.c	/^static const uint8_t ff_png_pass_xshift[NB_PASSES] = {$/;"	v	file:
ff_png_pass_ymask	libavcodec/png.c	/^const uint8_t ff_png_pass_ymask[NB_PASSES] = {$/;"	v
ff_png_zalloc	libavcodec/png.c	/^void *ff_png_zalloc(void *opaque, unsigned int items, unsigned int size)$/;"	f
ff_png_zfree	libavcodec/png.c	/^void ff_png_zfree(void *opaque, void *ptr)$/;"	f
ff_pngsig	libavcodec/png.c	/^const uint8_t ff_pngsig[8] = {137, 80, 78, 71, 13, 10, 26, 10};$/;"	v
ff_pnm_decode_header	libavcodec/pnm.c	/^int ff_pnm_decode_header(AVCodecContext *avctx, PNMContext * const s)$/;"	f
ff_pnm_end	libavcodec/pnm.c	/^av_cold int ff_pnm_end(AVCodecContext *avctx)$/;"	f
ff_pnm_init	libavcodec/pnm.c	/^av_cold int ff_pnm_init(AVCodecContext *avctx)$/;"	f
ff_pnm_parser	libavcodec/pnm_parser.c	/^AVCodecParser ff_pnm_parser = {$/;"	v
ff_pow_0_5	libavcodec/sipr.c	/^const float ff_pow_0_5[] = {$/;"	v
ff_pow_0_55	libavcodec/acelp_vectors.c	/^const float ff_pow_0_55[10] = {$/;"	v
ff_pow_0_7	libavcodec/acelp_vectors.c	/^const float ff_pow_0_7[10] = {$/;"	v
ff_pow_0_75	libavcodec/acelp_vectors.c	/^const float ff_pow_0_75[10] = {$/;"	v
ff_ppm_decoder	libavcodec/pnmdec.c	/^AVCodec ff_ppm_decoder = {$/;"	v
ff_ppm_encoder	libavcodec/pnmenc.c	/^AVCodec ff_ppm_encoder = {$/;"	v
ff_pre_estimate_p_frame_motion	libavcodec/motion_est.c	/^int ff_pre_estimate_p_frame_motion(MpegEncContext * s,$/;"	f
ff_printGUID	libavdevice/dshow_common.c	/^void ff_printGUID(const GUID *g)$/;"	f
ff_print_AM_MEDIA_TYPE	libavdevice/dshow_common.c	/^void ff_print_AM_MEDIA_TYPE(const AM_MEDIA_TYPE *type)$/;"	f
ff_print_debug_info	libavcodec/mpegvideo.c	/^void ff_print_debug_info(MpegEncContext *s, AVFrame *pict){$/;"	f
ff_program_add_stream_index	libavformat/utils.c	/^void ff_program_add_stream_index(AVFormatContext *ac, int progid, unsigned int idx)$/;"	f
ff_ps_apply	libavcodec/aacps.c	/^int ff_ps_apply(AVCodecContext *avctx, PSContext *ps, float L[2][38][64], float R[2][38][64], int top)$/;"	f
ff_ps_ctx_init	libavcodec/aacps.c	/^av_cold void ff_ps_ctx_init(PSContext *ps)$/;"	f
ff_ps_init	libavcodec/aacps.c	/^av_cold void ff_ps_init(void) {$/;"	f
ff_ps_read_data	libavcodec/aacps.c	/^int ff_ps_read_data(AVCodecContext *avctx, GetBitContext *gb_host, PSContext *ps, int bits_left)$/;"	f
ff_psp_muxer	libavformat/movenc.c	/^AVOutputFormat ff_psp_muxer = {$/;"	v
ff_psy_end	libavcodec/psymodel.c	/^av_cold void ff_psy_end(FFPsyContext *ctx)$/;"	f
ff_psy_init	libavcodec/psymodel.c	/^av_cold int ff_psy_init(FFPsyContext *ctx, AVCodecContext *avctx,$/;"	f
ff_psy_preprocess	libavcodec/psymodel.c	/^void ff_psy_preprocess(struct FFPsyPreprocessContext *ctx,$/;"	f
ff_psy_preprocess_end	libavcodec/psymodel.c	/^av_cold void ff_psy_preprocess_end(struct FFPsyPreprocessContext *ctx)$/;"	f
ff_psy_preprocess_init	libavcodec/psymodel.c	/^av_cold struct FFPsyPreprocessContext* ff_psy_preprocess_init(AVCodecContext *avctx)$/;"	f
ff_ptx_decoder	libavcodec/ptx.c	/^AVCodec ff_ptx_decoder = {$/;"	v
ff_put_bmp_header	libavformat/riff.c	/^void ff_put_bmp_header(AVIOContext *pb, AVCodecContext *enc, const AVCodecTag *tags, int for_asf)$/;"	f
ff_put_cavs_qpel16_mc00_c	libavcodec/cavsdsp.c	516;"	d	file:
ff_put_cavs_qpel16_mc00_mmx2	libavcodec/x86/dsputil_mmx.c	/^void ff_put_cavs_qpel16_mc00_mmx2(uint8_t *dst, uint8_t *src, int stride) {$/;"	f
ff_put_cavs_qpel8_mc00_c	libavcodec/cavsdsp.c	514;"	d	file:
ff_put_cavs_qpel8_mc00_mmx2	libavcodec/x86/dsputil_mmx.c	/^void ff_put_cavs_qpel8_mc00_mmx2(uint8_t *dst, uint8_t *src, int stride) {$/;"	f
ff_put_pixels16x16	libavcodec/dsputil_template.c	/^void FUNCC(ff_put_pixels16x16)(uint8_t *dst, uint8_t *src, int stride) {$/;"	f
ff_put_pixels16x16_c	libavcodec/dsputil.h	102;"	d
ff_put_pixels8x8_c	libavcodec/dsputil.h	100;"	d
ff_put_pixels_clamped	libavcodec/arm/dsputil_init_arm.c	/^static void (*ff_put_pixels_clamped)(const DCTELEM *block, uint8_t *pixels, int line_size);$/;"	v	file:
ff_put_pixels_clamped_c	libavcodec/dsputil.c	/^void ff_put_pixels_clamped_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f
ff_put_pixels_clamped_mmx	libavcodec/x86/dsputil_mmx.c	/^void ff_put_pixels_clamped_mmx(const DCTELEM *block, uint8_t *pixels, int line_size)$/;"	f
ff_put_signed_pixels_clamped_c	libavcodec/dsputil.c	/^void ff_put_signed_pixels_clamped_c(const DCTELEM *block,$/;"	f
ff_put_signed_pixels_clamped_mmx	libavcodec/x86/dsputil_mmx.c	/^void ff_put_signed_pixels_clamped_mmx(const DCTELEM *block, uint8_t *pixels, int line_size)$/;"	f
ff_put_string	libavcodec/bitstream.c	/^void ff_put_string(PutBitContext *pb, const char *string, int terminate_string)$/;"	f
ff_put_string	libavcodec/put_bits.h	124;"	d
ff_put_v	libavformat/aviobuf.c	/^void ff_put_v(AVIOContext *bc, uint64_t val){$/;"	f
ff_put_v	libavformat/nutenc.c	278;"	d	file:
ff_put_v_trace	libavformat/nutenc.c	/^static inline void ff_put_v_trace(AVIOContext *bc, uint64_t v, char *file, char *func, int line){$/;"	f	file:
ff_put_vc1_mspel_mc00_mmx	libavcodec/x86/dsputil_mmx.c	/^void ff_put_vc1_mspel_mc00_mmx(uint8_t *dst, const uint8_t *src, int stride, int rnd) {$/;"	f
ff_put_wav_header	libavformat/riff.c	/^int ff_put_wav_header(AVIOContext *pb, AVCodecContext *enc)$/;"	f
ff_pva_demuxer	libavformat/pva.c	/^AVInputFormat ff_pva_demuxer = {$/;"	v
ff_qcelp_decoder	libavcodec/qcelpdec.c	/^AVCodec ff_qcelp_decoder =$/;"	v
ff_qcelp_dynamic_handler	libavformat/rtpdec_qcelp.c	/^RTPDynamicProtocolHandler ff_qcelp_dynamic_handler = {$/;"	v
ff_qcp_demuxer	libavformat/qcp.c	/^AVInputFormat ff_qcp_demuxer = {$/;"	v
ff_qdm2_decoder	libavcodec/qdm2.c	/^AVCodec ff_qdm2_decoder =$/;"	v
ff_qdm2_dynamic_handler	libavformat/rtpdec_qdm2.c	/^RTPDynamicProtocolHandler ff_qdm2_dynamic_handler = {$/;"	v
ff_qdraw_decoder	libavcodec/qdrw.c	/^AVCodec ff_qdraw_decoder = {$/;"	v
ff_qpeg_decoder	libavcodec/qpeg.c	/^AVCodec ff_qpeg_decoder = {$/;"	v
ff_qt_default_palette_16	libavformat/qtpalette.h	/^static const uint8_t ff_qt_default_palette_16[16 * 3] = {$/;"	v
ff_qt_default_palette_256	libavformat/qtpalette.h	/^static const uint8_t ff_qt_default_palette_256[256 * 3] = {$/;"	v
ff_qt_default_palette_4	libavformat/qtpalette.h	/^static const uint8_t ff_qt_default_palette_4[4 * 3] = {$/;"	v
ff_qtrle_decoder	libavcodec/qtrle.c	/^AVCodec ff_qtrle_decoder = {$/;"	v
ff_qtrle_encoder	libavcodec/qtrleenc.c	/^AVCodec ff_qtrle_encoder = {$/;"	v
ff_r10k_decoder	libavcodec/r210dec.c	/^AVCodec ff_r10k_decoder = {$/;"	v
ff_r210_decoder	libavcodec/r210dec.c	/^AVCodec ff_r210_decoder = {$/;"	v
ff_r3d_demuxer	libavformat/r3d.c	/^AVInputFormat ff_r3d_demuxer = {$/;"	v
ff_ra_144_decoder	libavcodec/ra144dec.c	/^AVCodec ff_ra_144_decoder =$/;"	v
ff_ra_144_encoder	libavcodec/ra144enc.c	/^AVCodec ff_ra_144_encoder =$/;"	v
ff_ra_288_decoder	libavcodec/ra288.c	/^AVCodec ff_ra_288_decoder =$/;"	v
ff_rac_terminate	libavcodec/rangecoder.c	/^int ff_rac_terminate(RangeCoder *c){$/;"	f
ff_rate_control_init	libavcodec/ratecontrol.c	/^int ff_rate_control_init(MpegEncContext *s)$/;"	f
ff_rate_control_uninit	libavcodec/ratecontrol.c	/^void ff_rate_control_uninit(MpegEncContext *s)$/;"	f
ff_rate_estimate_qscale	libavcodec/ratecontrol.c	/^float ff_rate_estimate_qscale(MpegEncContext *s, int dry_run)$/;"	f
ff_raw_audio_read_header	libavformat/rawdec.c	/^int ff_raw_audio_read_header(AVFormatContext *s,$/;"	f
ff_raw_pix_fmt_tags	libavcodec/raw.c	/^const PixelFormatTag ff_raw_pix_fmt_tags[] = {$/;"	v
ff_raw_read_header	libavformat/rawdec.c	/^int ff_raw_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f
ff_raw_read_partial_packet	libavformat/rawdec.c	/^int ff_raw_read_partial_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f
ff_raw_video_read_header	libavformat/rawdec.c	/^int ff_raw_video_read_header(AVFormatContext *s,$/;"	f
ff_raw_write_packet	libavformat/rawenc.c	/^int ff_raw_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f
ff_rawaudio_demuxer_class	libavformat/rawdec.c	/^const AVClass ff_rawaudio_demuxer_class = {$/;"	v
ff_rawvideo_decoder	libavcodec/rawdec.c	/^AVCodec ff_rawvideo_decoder = {$/;"	v
ff_rawvideo_demuxer	libavformat/rawvideodec.c	/^AVInputFormat ff_rawvideo_demuxer = {$/;"	v
ff_rawvideo_demuxer_class	libavformat/rawdec.c	/^const AVClass ff_rawvideo_demuxer_class = {$/;"	v
ff_rawvideo_encoder	libavcodec/rawenc.c	/^AVCodec ff_rawvideo_encoder = {$/;"	v
ff_rawvideo_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_rawvideo_muxer = {$/;"	v
ff_rdft_calc_c	libavcodec/rdft.c	/^static void ff_rdft_calc_c(RDFTContext* s, FFTSample* data)$/;"	f	file:
ff_rdft_end	libavcodec/rdft.c	/^av_cold void ff_rdft_end(RDFTContext *s)$/;"	f
ff_rdft_init	libavcodec/rdft.c	/^av_cold int ff_rdft_init(RDFTContext *s, int nbits, enum RDFTransformType trans)$/;"	f
ff_rdft_init_arm	libavcodec/arm/fft_init_arm.c	/^av_cold void ff_rdft_init_arm(RDFTContext *s)$/;"	f
ff_rdt_calc_response_and_checksum	libavformat/rdt.c	/^ff_rdt_calc_response_and_checksum(char response[41], char chksum[9],$/;"	f
ff_rdt_demuxer	libavformat/rmdec.c	/^AVInputFormat ff_rdt_demuxer = {$/;"	v
ff_rdt_parse_close	libavformat/rdt.c	/^ff_rdt_parse_close(RDTDemuxContext *s)$/;"	f
ff_rdt_parse_header	libavformat/rdt.c	/^ff_rdt_parse_header(const uint8_t *buf, int len,$/;"	f
ff_rdt_parse_open	libavformat/rdt.c	/^ff_rdt_parse_open(AVFormatContext *ic, int first_stream_of_set_idx,$/;"	f
ff_rdt_parse_packet	libavformat/rdt.c	/^ff_rdt_parse_packet(RDTDemuxContext *s, AVPacket *pkt,$/;"	f
ff_rdt_subscribe_rule	libavformat/rdt.c	/^ff_rdt_subscribe_rule (char *cmd, int size,$/;"	f
ff_read_frame_flush	libavformat/utils.c	/^void ff_read_frame_flush(AVFormatContext *s)$/;"	f
ff_real_parse_sdp_a_line	libavformat/rdt.c	/^ff_real_parse_sdp_a_line (AVFormatContext *s, int stream_index,$/;"	f
ff_realmedia_mp3_dynamic_handler	libavformat/rtpdec.c	/^static RTPDynamicProtocolHandler ff_realmedia_mp3_dynamic_handler = {$/;"	v	file:
ff_reduce_index	libavformat/utils.c	/^void ff_reduce_index(AVFormatContext *s, int stream_index)$/;"	f
ff_ref_dct_init	libavcodec/dctref.c	/^av_cold void ff_ref_dct_init(void)$/;"	f
ff_ref_fdct	libavcodec/dctref.c	/^void ff_ref_fdct(short *block)$/;"	f
ff_ref_idct	libavcodec/dctref.c	/^void ff_ref_idct(short *block)$/;"	f
ff_region_offset2size	libavcodec/mpegaudiodec.c	/^static void ff_region_offset2size(GranuleDef *g){$/;"	f	file:
ff_register_dynamic_payload_handler	libavformat/rtpdec.c	/^void ff_register_dynamic_payload_handler(RTPDynamicProtocolHandler *handler)$/;"	f
ff_release_unused_pictures	libavcodec/mpegvideo.c	/^void ff_release_unused_pictures(MpegEncContext *s, int remove_current)$/;"	f
ff_remove_extradata_bsf	libavcodec/remove_extradata_bsf.c	/^AVBitStreamFilter ff_remove_extradata_bsf={$/;"	v
ff_reorder_func	libavdevice/alsa-audio.h	/^typedef void (*ff_reorder_func)(const void *, void *, int);$/;"	t
ff_rescale_rms	libavcodec/ra144.c	/^unsigned int ff_rescale_rms(unsigned int rms, unsigned int energy)$/;"	f
ff_restore_parser_state	libavformat/seek.c	/^void ff_restore_parser_state(AVFormatContext *s, AVParserState *state)$/;"	f
ff_rl2_decoder	libavcodec/rl2.c	/^AVCodec ff_rl2_decoder = {$/;"	v
ff_rl2_demuxer	libavformat/rl2.c	/^AVInputFormat ff_rl2_demuxer = {$/;"	v
ff_rl_mpeg1	libavcodec/mpeg12data.c	/^RLTable ff_rl_mpeg1 = {$/;"	v
ff_rl_mpeg2	libavcodec/mpeg12data.c	/^RLTable ff_rl_mpeg2 = {$/;"	v
ff_rle_encode	libavcodec/rle.c	/^int ff_rle_encode(uint8_t *outbuf, int out_size, const uint8_t *ptr , int bpp, int w,$/;"	f
ff_rm_alloc_rmstream	libavformat/rmdec.c	/^RMStream *ff_rm_alloc_rmstream (void)$/;"	f
ff_rm_codec_tags	libavformat/rm.c	/^const AVCodecTag ff_rm_codec_tags[] = {$/;"	v
ff_rm_demuxer	libavformat/rmdec.c	/^AVInputFormat ff_rm_demuxer = {$/;"	v
ff_rm_free_rmstream	libavformat/rmdec.c	/^void ff_rm_free_rmstream (RMStream *rms)$/;"	f
ff_rm_metadata	libavformat/rm.c	/^const char * const ff_rm_metadata[4] = {$/;"	v
ff_rm_muxer	libavformat/rmenc.c	/^AVOutputFormat ff_rm_muxer = {$/;"	v
ff_rm_parse_packet	libavformat/rmdec.c	/^ff_rm_parse_packet (AVFormatContext *s, AVIOContext *pb,$/;"	f
ff_rm_read_mdpr_codecdata	libavformat/rmdec.c	/^ff_rm_read_mdpr_codecdata (AVFormatContext *s, AVIOContext *pb,$/;"	f
ff_rm_reorder_sipr_data	libavformat/rmdec.c	/^void ff_rm_reorder_sipr_data(uint8_t *buf, int sub_packet_h, int framesize)$/;"	f
ff_rm_retrieve_cache	libavformat/rmdec.c	/^ff_rm_retrieve_cache (AVFormatContext *s, AVIOContext *pb,$/;"	f
ff_rms	libavcodec/ra144.c	/^unsigned int ff_rms(const int *data)$/;"	f
ff_roq_decoder	libavcodec/roqvideodec.c	/^AVCodec ff_roq_decoder = {$/;"	v
ff_roq_demuxer	libavformat/idroqdec.c	/^AVInputFormat ff_roq_demuxer = {$/;"	v
ff_roq_dpcm_encoder	libavcodec/roqaudioenc.c	/^AVCodec ff_roq_dpcm_encoder = {$/;"	v
ff_roq_encoder	libavcodec/roqvideoenc.c	/^AVCodec ff_roq_encoder =$/;"	v
ff_roq_muxer	libavformat/idroqenc.c	/^AVOutputFormat ff_roq_muxer =$/;"	v
ff_rpl_demuxer	libavformat/rpl.c	/^AVInputFormat ff_rpl_demuxer = {$/;"	v
ff_rpza_decoder	libavcodec/rpza.c	/^AVCodec ff_rpza_decoder = {$/;"	v
ff_rso_demuxer	libavformat/rsodec.c	/^AVInputFormat ff_rso_demuxer = {$/;"	v
ff_rso_muxer	libavformat/rsoenc.c	/^AVOutputFormat ff_rso_muxer = {$/;"	v
ff_rtmp_packet_create	libavformat/rtmppkt.c	/^int ff_rtmp_packet_create(RTMPPacket *pkt, int channel_id, RTMPPacketType type,$/;"	f
ff_rtmp_packet_destroy	libavformat/rtmppkt.c	/^void ff_rtmp_packet_destroy(RTMPPacket *pkt)$/;"	f
ff_rtmp_packet_dump	libavformat/rtmppkt.c	/^void ff_rtmp_packet_dump(void *ctx, RTMPPacket *p)$/;"	f
ff_rtmp_packet_read	libavformat/rtmppkt.c	/^int ff_rtmp_packet_read(URLContext *h, RTMPPacket *p,$/;"	f
ff_rtmp_packet_write	libavformat/rtmppkt.c	/^int ff_rtmp_packet_write(URLContext *h, RTMPPacket *pkt,$/;"	f
ff_rtmp_protocol	libavformat/librtmp.c	/^URLProtocol ff_rtmp_protocol = {$/;"	v
ff_rtmp_protocol	libavformat/rtmpproto.c	/^URLProtocol ff_rtmp_protocol = {$/;"	v
ff_rtmpe_protocol	libavformat/librtmp.c	/^URLProtocol ff_rtmpe_protocol = {$/;"	v
ff_rtmps_protocol	libavformat/librtmp.c	/^URLProtocol ff_rtmps_protocol = {$/;"	v
ff_rtmpt_protocol	libavformat/librtmp.c	/^URLProtocol ff_rtmpt_protocol = {$/;"	v
ff_rtmpte_protocol	libavformat/librtmp.c	/^URLProtocol ff_rtmpte_protocol = {$/;"	v
ff_rtp_chain_mux_open	libavformat/rtpenc_chain.c	/^AVFormatContext *ff_rtp_chain_mux_open(AVFormatContext *s, AVStream *st,$/;"	f
ff_rtp_codec_id	libavformat/rtp.c	/^enum CodecID ff_rtp_codec_id(const char *buf, enum AVMediaType codec_type)$/;"	f
ff_rtp_demuxer	libavformat/rtsp.c	/^AVInputFormat ff_rtp_demuxer = {$/;"	v
ff_rtp_enc_name	libavformat/rtp.c	/^const char *ff_rtp_enc_name(int payload_type)$/;"	f
ff_rtp_get_codec_info	libavformat/rtp.c	/^int ff_rtp_get_codec_info(AVCodecContext *codec, int payload_type)$/;"	f
ff_rtp_get_payload_type	libavformat/rtp.c	/^int ff_rtp_get_payload_type(AVCodecContext *codec)$/;"	f
ff_rtp_handler_find_by_id	libavformat/rtpdec.c	/^RTPDynamicProtocolHandler *ff_rtp_handler_find_by_id(int id,$/;"	f
ff_rtp_handler_find_by_name	libavformat/rtpdec.c	/^RTPDynamicProtocolHandler *ff_rtp_handler_find_by_name(const char *name,$/;"	f
ff_rtp_muxer	libavformat/rtpenc.c	/^AVOutputFormat ff_rtp_muxer = {$/;"	v
ff_rtp_protocol	libavformat/rtpproto.c	/^URLProtocol ff_rtp_protocol = {$/;"	v
ff_rtp_queued_packet_time	libavformat/rtpdec.c	/^int64_t ff_rtp_queued_packet_time(RTPDemuxContext *s)$/;"	f
ff_rtp_reset_packet_queue	libavformat/rtpdec.c	/^void ff_rtp_reset_packet_queue(RTPDemuxContext *s)$/;"	f
ff_rtp_send_aac	libavformat/rtpenc_aac.c	/^void ff_rtp_send_aac(AVFormatContext *s1, const uint8_t *buff, int size)$/;"	f
ff_rtp_send_amr	libavformat/rtpenc_amr.c	/^void ff_rtp_send_amr(AVFormatContext *s1, const uint8_t *buff, int size)$/;"	f
ff_rtp_send_data	libavformat/rtpenc.c	/^void ff_rtp_send_data(AVFormatContext *s1, const uint8_t *buf1, int len, int m)$/;"	f
ff_rtp_send_h263	libavformat/rtpenc_h263.c	/^void ff_rtp_send_h263(AVFormatContext *s1, const uint8_t *buf1, int size)$/;"	f
ff_rtp_send_h264	libavformat/rtpenc_h264.c	/^void ff_rtp_send_h264(AVFormatContext *s1, const uint8_t *buf1, int size)$/;"	f
ff_rtp_send_latm	libavformat/rtpenc_latm.c	/^void ff_rtp_send_latm(AVFormatContext *s1, const uint8_t *buff, int size)$/;"	f
ff_rtp_send_mpegvideo	libavformat/rtpenc_mpv.c	/^void ff_rtp_send_mpegvideo(AVFormatContext *s1, const uint8_t *buf1, int size)$/;"	f
ff_rtp_send_vp8	libavformat/rtpenc_vp8.c	/^void ff_rtp_send_vp8(AVFormatContext *s1, const uint8_t *buf, int size)$/;"	f
ff_rtp_send_xiph	libavformat/rtpenc_xiph.c	/^void ff_rtp_send_xiph(AVFormatContext *s1, const uint8_t *buff, int size)$/;"	f
ff_rtsp_close_connections	libavformat/rtsp.c	/^void ff_rtsp_close_connections(AVFormatContext *s)$/;"	f
ff_rtsp_close_streams	libavformat/rtsp.c	/^void ff_rtsp_close_streams(AVFormatContext *s)$/;"	f
ff_rtsp_connect	libavformat/rtsp.c	/^int ff_rtsp_connect(AVFormatContext *s)$/;"	f
ff_rtsp_demuxer	libavformat/rtspdec.c	/^AVInputFormat ff_rtsp_demuxer = {$/;"	v
ff_rtsp_fetch_packet	libavformat/rtsp.c	/^int ff_rtsp_fetch_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f
ff_rtsp_make_setup_request	libavformat/rtsp.c	/^int ff_rtsp_make_setup_request(AVFormatContext *s, const char *host, int port,$/;"	f
ff_rtsp_muxer	libavformat/rtspenc.c	/^AVOutputFormat ff_rtsp_muxer = {$/;"	v
ff_rtsp_next_attr_and_value	libavformat/rtsp.c	/^int ff_rtsp_next_attr_and_value(const char **p, char *attr, int attr_size,$/;"	f
ff_rtsp_parse_line	libavformat/rtsp.c	/^void ff_rtsp_parse_line(RTSPMessageHeader *reply, const char *buf,$/;"	f
ff_rtsp_read_reply	libavformat/rtsp.c	/^int ff_rtsp_read_reply(AVFormatContext *s, RTSPMessageHeader *reply,$/;"	f
ff_rtsp_send_cmd	libavformat/rtsp.c	/^int ff_rtsp_send_cmd(AVFormatContext *s, const char *method, const char *url,$/;"	f
ff_rtsp_send_cmd_async	libavformat/rtsp.c	/^int ff_rtsp_send_cmd_async(AVFormatContext *s, const char *method,$/;"	f
ff_rtsp_send_cmd_with_content	libavformat/rtsp.c	/^int ff_rtsp_send_cmd_with_content(AVFormatContext *s,$/;"	f
ff_rtsp_send_cmd_with_content_async	libavformat/rtsp.c	/^static int ff_rtsp_send_cmd_with_content_async(AVFormatContext *s,$/;"	f	file:
ff_rtsp_setup_input_streams	libavformat/rtspdec.c	/^int ff_rtsp_setup_input_streams(AVFormatContext *s, RTSPMessageHeader *reply)$/;"	f
ff_rtsp_setup_output_streams	libavformat/rtspenc.c	/^int ff_rtsp_setup_output_streams(AVFormatContext *s, const char *addr)$/;"	f
ff_rtsp_skip_packet	libavformat/rtsp.c	/^void ff_rtsp_skip_packet(AVFormatContext *s)$/;"	f
ff_rtsp_tcp_read_packet	libavformat/rtspdec.c	/^int ff_rtsp_tcp_read_packet(AVFormatContext *s, RTSPStream **prtsp_st,$/;"	f
ff_rtsp_undo_setup	libavformat/rtsp.c	/^void ff_rtsp_undo_setup(AVFormatContext *s)$/;"	f
ff_rv10_decoder	libavcodec/rv10.c	/^AVCodec ff_rv10_decoder = {$/;"	v
ff_rv10_encoder	libavcodec/rv10enc.c	/^AVCodec ff_rv10_encoder = {$/;"	v
ff_rv20_decoder	libavcodec/rv10.c	/^AVCodec ff_rv20_decoder = {$/;"	v
ff_rv20_encoder	libavcodec/rv20enc.c	/^AVCodec ff_rv20_encoder = {$/;"	v
ff_rv30_decoder	libavcodec/rv30.c	/^AVCodec ff_rv30_decoder = {$/;"	v
ff_rv34_decode_end	libavcodec/rv34.c	/^av_cold int ff_rv34_decode_end(AVCodecContext *avctx)$/;"	f
ff_rv34_decode_frame	libavcodec/rv34.c	/^int ff_rv34_decode_frame(AVCodecContext *avctx,$/;"	f
ff_rv34_decode_init	libavcodec/rv34.c	/^av_cold int ff_rv34_decode_init(AVCodecContext *avctx)$/;"	f
ff_rv34_get_start_offset	libavcodec/rv34.c	/^int ff_rv34_get_start_offset(GetBitContext *gb, int mb_size)$/;"	f
ff_rv40_decoder	libavcodec/rv40.c	/^AVCodec ff_rv40_decoder = {$/;"	v
ff_s302m_decoder	libavcodec/s302m.c	/^AVCodec ff_s302m_decoder = {$/;"	v
ff_sap_demuxer	libavformat/sapdec.c	/^AVInputFormat ff_sap_demuxer = {$/;"	v
ff_sap_muxer	libavformat/sapenc.c	/^AVOutputFormat ff_sap_muxer = {$/;"	v
ff_sauce_read	libavformat/sauce.c	/^int ff_sauce_read(AVFormatContext *avctx, uint64_t *fsize, int *got_width, int get_height)$/;"	f
ff_sbr_apply	libavcodec/aacsbr.c	/^void ff_sbr_apply(AACContext *ac, SpectralBandReplication *sbr, int id_aac,$/;"	f
ff_scale_vector_to_given_sum_of_squares	libavcodec/acelp_vectors.c	/^void ff_scale_vector_to_given_sum_of_squares(float *out, const float *in,$/;"	f
ff_schro_video_formats	libavcodec/libschroedinger.c	/^static const SchroVideoFormatEnum ff_schro_video_formats[]={$/;"	v	file:
ff_sdl_muxer	libavdevice/sdl.c	/^AVOutputFormat ff_sdl_muxer = {$/;"	v
ff_sdp_demuxer	libavformat/rtsp.c	/^AVInputFormat ff_sdp_demuxer = {$/;"	v
ff_sdp_parse	libavformat/rtsp.c	/^int ff_sdp_parse(AVFormatContext *s, const char *content)$/;"	f
ff_sdp_write_media	libavformat/sdp.c	/^void ff_sdp_write_media(char *buff, int size, AVCodecContext *c, const char *dest_addr, const char *dest_type, int port, int ttl, AVFormatContext *fmt)$/;"	f
ff_se_golomb_vlc_code	libavcodec/golomb.c	/^const int8_t ff_se_golomb_vlc_code[512]={$/;"	v
ff_segafilm_demuxer	libavformat/segafilm.c	/^AVInputFormat ff_segafilm_demuxer = {$/;"	v
ff_set_cmp	libavcodec/dsputil.c	/^void ff_set_cmp(DSPContext* c, me_cmp_func *cmp, int type){$/;"	f
ff_set_fixed_vector	libavcodec/acelp_vectors.c	/^void ff_set_fixed_vector(float *out, const AMRFixed *in, float scale, int size)$/;"	f
ff_set_min_dist_lsf	libavcodec/lsp.c	/^void ff_set_min_dist_lsf(float *lsf, double min_spacing, int size)$/;"	f
ff_set_mpeg4_time	libavcodec/mpeg4videoenc.c	/^void ff_set_mpeg4_time(MpegEncContext * s){$/;"	f
ff_set_qscale	libavcodec/mpegvideo.c	/^void ff_set_qscale(MpegEncContext * s, int qscale)$/;"	f
ff_set_systematic_pal2	libavutil/imgutils.c	/^int ff_set_systematic_pal2(uint32_t pal[256], enum PixelFormat pix_fmt)$/;"	f
ff_sgi_decoder	libavcodec/sgidec.c	/^AVCodec ff_sgi_decoder = {$/;"	v
ff_sgi_encoder	libavcodec/sgienc.c	/^AVCodec ff_sgi_encoder = {$/;"	v
ff_shorten_decoder	libavcodec/shorten.c	/^AVCodec ff_shorten_decoder = {$/;"	v
ff_shorten_demuxer	libavformat/rawdec.c	/^AVInputFormat ff_shorten_demuxer = {$/;"	v
ff_shrink22	libavcodec/imgconvert.c	/^void ff_shrink22(uint8_t *dst, int dst_wrap,$/;"	f
ff_shrink44	libavcodec/imgconvert.c	/^void ff_shrink44(uint8_t *dst, int dst_wrap,$/;"	f
ff_shrink88	libavcodec/imgconvert.c	/^void ff_shrink88(uint8_t *dst, int dst_wrap,$/;"	f
ff_siff_demuxer	libavformat/siff.c	/^AVInputFormat ff_siff_demuxer = {$/;"	v
ff_simple_idct	libavcodec/simple_idct.c	/^void ff_simple_idct(DCTELEM *block)$/;"	f
ff_simple_idct248_put	libavcodec/simple_idct.c	/^void ff_simple_idct248_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_simple_idct44_add	libavcodec/simple_idct.c	/^void ff_simple_idct44_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_simple_idct48_add	libavcodec/simple_idct.c	/^void ff_simple_idct48_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_simple_idct84_add	libavcodec/simple_idct.c	/^void ff_simple_idct84_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_simple_idct_add	libavcodec/simple_idct.c	/^void ff_simple_idct_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_simple_idct_add_axp	libavcodec/alpha/simple_idct_alpha.c	/^void ff_simple_idct_add_axp(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_simple_idct_add_mmx	libavcodec/x86/simple_idct_mmx.c	/^void ff_simple_idct_add_mmx(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_simple_idct_add_vis	libavcodec/sparc/simple_idct_vis.c	/^void ff_simple_idct_add_vis(uint8_t *dest, int line_size, DCTELEM *data) {$/;"	f
ff_simple_idct_axp	libavcodec/alpha/simple_idct_alpha.c	/^void ff_simple_idct_axp(DCTELEM *block)$/;"	f
ff_simple_idct_mmx	libavcodec/x86/simple_idct_mmx.c	/^void ff_simple_idct_mmx(int16_t *block)$/;"	f
ff_simple_idct_put	libavcodec/simple_idct.c	/^void ff_simple_idct_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_simple_idct_put_axp	libavcodec/alpha/simple_idct_alpha.c	/^void ff_simple_idct_put_axp(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_simple_idct_put_mmx	libavcodec/x86/simple_idct_mmx.c	/^void ff_simple_idct_put_mmx(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f
ff_simple_idct_put_vis	libavcodec/sparc/simple_idct_vis.c	/^void ff_simple_idct_put_vis(uint8_t *dest, int line_size, DCTELEM *data) {$/;"	f
ff_simple_idct_vis	libavcodec/sparc/simple_idct_vis.c	/^void ff_simple_idct_vis(DCTELEM *data) {$/;"	f
ff_sin_tabs	libavcodec/rdft.c	/^static SINTABLE_CONST FFTSample * const ff_sin_tabs[] = {$/;"	v	file:
ff_sine_window_init	libavcodec/sinewin_tablegen.h	/^av_cold void ff_sine_window_init(float *window, int n) {$/;"	f
ff_sine_windows	libavcodec/sinewin_tablegen.h	/^SINETABLE_CONST float * const ff_sine_windows[] = {$/;"	v
ff_sipr_decode_frame_16k	libavcodec/sipr16k.c	/^void ff_sipr_decode_frame_16k(SiprContext *ctx, SiprParameters *params,$/;"	f
ff_sipr_decoder	libavcodec/sipr.c	/^AVCodec ff_sipr_decoder = {$/;"	v
ff_sipr_init_16k	libavcodec/sipr16k.c	/^void ff_sipr_init_16k(SiprContext *ctx)$/;"	f
ff_sipr_subpk_size	libavformat/rmdec.c	/^const unsigned char ff_sipr_subpk_size[4] = { 29, 19, 37, 20 };$/;"	v
ff_skeleton_codec	libavformat/oggparseskeleton.c	/^const struct ogg_codec ff_skeleton_codec = {$/;"	v	typeref:struct:ogg_codec
ff_slice_buffer_destroy	libavcodec/dwt.c	/^void ff_slice_buffer_destroy(slice_buffer * buf)$/;"	f
ff_slice_buffer_flush	libavcodec/dwt.c	/^void ff_slice_buffer_flush(slice_buffer * buf)$/;"	f
ff_slice_buffer_init	libavcodec/dwt.c	/^void ff_slice_buffer_init(slice_buffer * buf, int line_count, int max_allocated_lines, int line_width, IDWTELEM * base_buffer)$/;"	f
ff_slice_buffer_load_line	libavcodec/dwt.c	/^IDWTELEM * ff_slice_buffer_load_line(slice_buffer * buf, int line)$/;"	f
ff_slice_buffer_release	libavcodec/dwt.c	/^void ff_slice_buffer_release(slice_buffer * buf, int line)$/;"	f
ff_smackaud_decoder	libavcodec/smacker.c	/^AVCodec ff_smackaud_decoder = {$/;"	v
ff_smacker_decoder	libavcodec/smacker.c	/^AVCodec ff_smacker_decoder = {$/;"	v
ff_smacker_demuxer	libavformat/smacker.c	/^AVInputFormat ff_smacker_demuxer = {$/;"	v
ff_smc_decoder	libavcodec/smc.c	/^AVCodec ff_smc_decoder = {$/;"	v
ff_sndio_close	libavdevice/sndio_common.c	/^int ff_sndio_close(SndioData *s)$/;"	f
ff_sndio_demuxer	libavdevice/sndio_dec.c	/^AVInputFormat ff_sndio_demuxer = {$/;"	v
ff_sndio_muxer	libavdevice/sndio_enc.c	/^AVOutputFormat ff_sndio_muxer = {$/;"	v
ff_sndio_open	libavdevice/sndio_common.c	/^av_cold int ff_sndio_open(AVFormatContext *s1, int is_output,$/;"	f
ff_snow_decoder	libavcodec/snow.c	/^AVCodec ff_snow_decoder = {$/;"	v
ff_snow_encoder	libavcodec/snow.c	/^AVCodec ff_snow_encoder = {$/;"	v
ff_snow_horizontal_compose97i	libavcodec/dwt.c	/^void ff_snow_horizontal_compose97i(IDWTELEM *b, int width){$/;"	f
ff_snow_horizontal_compose97i_mmx	libavcodec/x86/snowdsp_mmx.c	/^static void ff_snow_horizontal_compose97i_mmx(IDWTELEM *b, int width){$/;"	f	file:
ff_snow_horizontal_compose97i_sse2	libavcodec/x86/snowdsp_mmx.c	/^static void ff_snow_horizontal_compose97i_sse2(IDWTELEM *b, int width){$/;"	f	file:
ff_snow_inner_add_yblock	libavcodec/snow.c	/^void ff_snow_inner_add_yblock(const uint8_t *obmc, const int obmc_stride, uint8_t * * block, int b_w, int b_h,$/;"	f
ff_snow_inner_add_yblock_mmx	libavcodec/x86/snowdsp_mmx.c	/^static void ff_snow_inner_add_yblock_mmx(const uint8_t *obmc, const int obmc_stride, uint8_t * * block, int b_w, int b_h,$/;"	f	file:
ff_snow_inner_add_yblock_sse2	libavcodec/x86/snowdsp_mmx.c	/^static void ff_snow_inner_add_yblock_sse2(const uint8_t *obmc, const int obmc_stride, uint8_t * * block, int b_w, int b_h,$/;"	f	file:
ff_snow_vertical_compose97i	libavcodec/dwt.c	/^void ff_snow_vertical_compose97i(IDWTELEM *b0, IDWTELEM *b1, IDWTELEM *b2, IDWTELEM *b3, IDWTELEM *b4, IDWTELEM *b5, int width){$/;"	f
ff_snow_vertical_compose97i_mmx	libavcodec/x86/snowdsp_mmx.c	/^static void ff_snow_vertical_compose97i_mmx(IDWTELEM *b0, IDWTELEM *b1, IDWTELEM *b2, IDWTELEM *b3, IDWTELEM *b4, IDWTELEM *b5, int width){$/;"	f	file:
ff_snow_vertical_compose97i_sse2	libavcodec/x86/snowdsp_mmx.c	/^static void ff_snow_vertical_compose97i_sse2(IDWTELEM *b0, IDWTELEM *b1, IDWTELEM *b2, IDWTELEM *b3, IDWTELEM *b4, IDWTELEM *b5, int width){$/;"	f	file:
ff_socket_nonblock	libavformat/os_support.c	/^int ff_socket_nonblock(int socket, int enable)$/;"	f
ff_sol_demuxer	libavformat/sol.c	/^AVInputFormat ff_sol_demuxer = {$/;"	v
ff_sonic_decoder	libavcodec/sonic.c	/^AVCodec ff_sonic_decoder = {$/;"	v
ff_sonic_encoder	libavcodec/sonic.c	/^AVCodec ff_sonic_encoder = {$/;"	v
ff_sonic_ls_encoder	libavcodec/sonic.c	/^AVCodec ff_sonic_ls_encoder = {$/;"	v
ff_sort_nearly_sorted_floats	libavcodec/lsp.c	/^void ff_sort_nearly_sorted_floats(float *vals, int len)$/;"	f
ff_sox_demuxer	libavformat/soxdec.c	/^AVInputFormat ff_sox_demuxer = {$/;"	v
ff_sox_muxer	libavformat/soxenc.c	/^AVOutputFormat ff_sox_muxer = {$/;"	v
ff_sp5x_decoder	libavcodec/sp5xdec.c	/^AVCodec ff_sp5x_decoder = {$/;"	v
ff_spatial_dwt	libavcodec/dwt.c	/^void ff_spatial_dwt(DWTELEM *buffer, int width, int height, int stride, int type, int decomposition_count){$/;"	f
ff_spatial_idwt	libavcodec/dwt.c	/^void ff_spatial_idwt(IDWTELEM *buffer, int width, int height, int stride, int type, int decomposition_count){$/;"	f
ff_spatial_idwt_buffered_init	libavcodec/dwt.c	/^void ff_spatial_idwt_buffered_init(DWTCompose *cs, slice_buffer * sb, int width, int height, int stride_line, int type, int decomposition_count){$/;"	f
ff_spatial_idwt_buffered_slice	libavcodec/dwt.c	/^void ff_spatial_idwt_buffered_slice(DWTContext *dsp, DWTCompose *cs, slice_buffer * slice_buf, int width, int height, int stride_line, int type, int decomposition_count, int y){$/;"	f
ff_spatial_idwt_init	libavcodec/dwt.c	/^static void ff_spatial_idwt_init(DWTCompose *cs, IDWTELEM *buffer, int width, int height, int stride, int type, int decomposition_count){$/;"	f	file:
ff_spatial_idwt_slice	libavcodec/dwt.c	/^static void ff_spatial_idwt_slice(DWTCompose *cs, IDWTELEM *buffer, int width, int height, int stride, int type, int decomposition_count, int y){$/;"	f	file:
ff_spdif_bswap_buf16	libavformat/spdif.c	/^void ff_spdif_bswap_buf16(uint16_t *dst, const uint16_t *src, int w)$/;"	f
ff_spdif_demuxer	libavformat/spdifdec.c	/^AVInputFormat ff_spdif_demuxer = {$/;"	v
ff_spdif_muxer	libavformat/spdifenc.c	/^AVOutputFormat ff_spdif_muxer = {$/;"	v
ff_speex_codec	libavformat/oggparsespeex.c	/^const struct ogg_codec ff_speex_codec = {$/;"	v	typeref:struct:ogg_codec
ff_split_xiph_headers	libavcodec/xiph.c	/^int ff_split_xiph_headers(uint8_t *extradata, int extradata_size,$/;"	f
ff_sqrt	libavutil/intmath.h	/^static inline av_const unsigned int ff_sqrt(unsigned int a)$/;"	f
ff_sqrt_tab	libavutil/mathematics.c	/^const uint8_t ff_sqrt_tab[256]={$/;"	v
ff_squareTbl	libavcodec/dsputil.c	/^uint32_t ff_squareTbl[512] = {0, };$/;"	v
ff_srt_decoder	libavcodec/srtdec.c	/^AVCodec ff_srt_decoder = {$/;"	v
ff_srt_demuxer	libavformat/srtdec.c	/^AVInputFormat ff_srt_demuxer = {$/;"	v
ff_srt_encoder	libavcodec/srtenc.c	/^AVCodec ff_srt_encoder = {$/;"	v
ff_srt_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_srt_muxer = {$/;"	v
ff_start_tag	libavformat/riff.c	/^int64_t ff_start_tag(AVIOContext *pb, const char *tag)$/;"	f
ff_store_parser_state	libavformat/seek.c	/^AVParserState *ff_store_parser_state(AVFormatContext *s)$/;"	f
ff_str_demuxer	libavformat/psxstr.c	/^AVInputFormat ff_str_demuxer = {$/;"	v
ff_stream_guid	libavformat/wtv.c	/^const ff_asf_guid ff_stream_guid =$/;"	v
ff_subblock_synthesis	libavcodec/ra144.c	/^void ff_subblock_synthesis(RA144Context *ractx, const uint16_t *lpc_coefs,$/;"	f
ff_sunrast_decoder	libavcodec/sunrast.c	/^AVCodec ff_sunrast_decoder = {$/;"	v
ff_svq1_block_type_vlc	libavcodec/svq1_vlc.h	/^const uint8_t ff_svq1_block_type_vlc[4][2] = {$/;"	v
ff_svq1_decoder	libavcodec/svq1dec.c	/^AVCodec ff_svq1_decoder = {$/;"	v
ff_svq1_encoder	libavcodec/svq1enc.c	/^AVCodec ff_svq1_encoder = {$/;"	v
ff_svq1_frame_size_table	libavcodec/svq1.c	/^const struct svq1_frame_size ff_svq1_frame_size_table[7] = {$/;"	v	typeref:struct:svq1_frame_size
ff_svq1_inter_codebooks	libavcodec/svq1_cb.h	/^const int8_t* const ff_svq1_inter_codebooks[6] = {$/;"	v
ff_svq1_inter_mean_vlc	libavcodec/svq1_vlc.h	/^const uint16_t ff_svq1_inter_mean_vlc[512][2] = {$/;"	v
ff_svq1_inter_multistage_vlc	libavcodec/svq1_vlc.h	/^const uint8_t ff_svq1_inter_multistage_vlc[6][8][2] = {$/;"	v
ff_svq1_intra_codebooks	libavcodec/svq1_cb.h	/^const int8_t* const ff_svq1_intra_codebooks[6] = {$/;"	v
ff_svq1_intra_mean_vlc	libavcodec/svq1_vlc.h	/^const uint16_t ff_svq1_intra_mean_vlc[256][2] = {$/;"	v
ff_svq1_intra_multistage_vlc	libavcodec/svq1_vlc.h	/^const uint8_t ff_svq1_intra_multistage_vlc[6][8][2] = {$/;"	v
ff_svq1_packet_checksum	libavcodec/svq1dec.c	/^uint16_t ff_svq1_packet_checksum (const uint8_t *data, const int length, int value) {$/;"	f
ff_svq3_add_idct_c	libavcodec/svq3.c	/^void ff_svq3_add_idct_c(uint8_t *dst, DCTELEM *block, int stride, int qp,$/;"	f
ff_svq3_decoder	libavcodec/svq3.c	/^AVCodec ff_svq3_decoder = {$/;"	v
ff_svq3_dynamic_handler	libavformat/rtpdec_svq3.c	/^RTPDynamicProtocolHandler ff_svq3_dynamic_handler = {$/;"	v
ff_svq3_luma_dc_dequant_idct_c	libavcodec/svq3.c	/^void ff_svq3_luma_dc_dequant_idct_c(DCTELEM *output, DCTELEM *input, int qp){$/;"	f
ff_swb_offset_1024	libavcodec/aactab.c	/^const uint16_t * const ff_swb_offset_1024[] = {$/;"	v
ff_swb_offset_128	libavcodec/aactab.c	/^const uint16_t * const ff_swb_offset_128[] = {$/;"	v
ff_swf_demuxer	libavformat/swfdec.c	/^AVInputFormat ff_swf_demuxer = {$/;"	v
ff_swf_muxer	libavformat/swfenc.c	/^AVOutputFormat ff_swf_muxer = {$/;"	v
ff_sws_init_swScale_altivec	libswscale/ppc/swscale_altivec.c	/^void ff_sws_init_swScale_altivec(SwsContext *c)$/;"	f
ff_sws_init_swScale_mmx	libswscale/x86/swscale_mmx.c	/^void ff_sws_init_swScale_mmx(SwsContext *c)$/;"	f
ff_swscale_get_unscaled_altivec	libswscale/ppc/yuv2yuv_altivec.c	/^void ff_swscale_get_unscaled_altivec(SwsContext *c)$/;"	f
ff_synth_filter_init	libavcodec/synth_filter.c	/^av_cold void ff_synth_filter_init(SynthFilterContext *c)$/;"	f
ff_synth_filter_init_arm	libavcodec/arm/fft_init_arm.c	/^av_cold void ff_synth_filter_init_arm(SynthFilterContext *s)$/;"	f
ff_t_sqrt	libavcodec/ra144.c	/^int ff_t_sqrt(unsigned int x)$/;"	f
ff_table0_dc_chroma	libavcodec/msmpeg4data.c	/^const uint32_t ff_table0_dc_chroma[120][2] = {$/;"	v
ff_table0_dc_lum	libavcodec/msmpeg4data.c	/^const uint32_t ff_table0_dc_lum[120][2] = {$/;"	v
ff_table1_dc_chroma	libavcodec/msmpeg4data.c	/^const uint32_t ff_table1_dc_chroma[120][2] = {$/;"	v
ff_table1_dc_lum	libavcodec/msmpeg4data.c	/^const uint32_t ff_table1_dc_lum[120][2] = {$/;"	v
ff_targa_decoder	libavcodec/targa.c	/^AVCodec ff_targa_decoder = {$/;"	v
ff_targa_encoder	libavcodec/targaenc.c	/^AVCodec ff_targa_encoder = {$/;"	v
ff_tcp_protocol	libavformat/tcp.c	/^URLProtocol ff_tcp_protocol = {$/;"	v
ff_tempfile	libavcodec/libxvidff.c	/^int ff_tempfile(const char *prefix, char **filename) {$/;"	f
ff_text2movsub_bsf	libavcodec/movsub_bsf.c	/^AVBitStreamFilter ff_text2movsub_bsf={$/;"	v
ff_tg2_muxer	libavformat/movenc.c	/^AVOutputFormat ff_tg2_muxer = {$/;"	v
ff_tgp_muxer	libavformat/movenc.c	/^AVOutputFormat ff_tgp_muxer = {$/;"	v
ff_theora_codec	libavformat/oggparsetheora.c	/^const struct ogg_codec ff_theora_codec = {$/;"	v	typeref:struct:ogg_codec
ff_theora_decoder	libavcodec/vp3.c	/^AVCodec ff_theora_decoder = {$/;"	v
ff_theora_dynamic_handler	libavformat/rtpdec_xiph.c	/^RTPDynamicProtocolHandler ff_theora_dynamic_handler = {$/;"	v
ff_thp_decoder	libavcodec/mjpegdec.c	/^AVCodec ff_thp_decoder = {$/;"	v
ff_thp_demuxer	libavformat/thp.c	/^AVInputFormat ff_thp_demuxer = {$/;"	v
ff_thread_await_progress	libavcodec/pthread.c	/^void ff_thread_await_progress(AVFrame *f, int n, int field)$/;"	f
ff_thread_await_progress	libavcodec/utils.c	/^void ff_thread_await_progress(AVFrame *f, int progress, int field)$/;"	f
ff_thread_decode_frame	libavcodec/pthread.c	/^int ff_thread_decode_frame(AVCodecContext *avctx,$/;"	f
ff_thread_finish_setup	libavcodec/pthread.c	/^void ff_thread_finish_setup(AVCodecContext *avctx) {$/;"	f
ff_thread_finish_setup	libavcodec/utils.c	/^void ff_thread_finish_setup(AVCodecContext *avctx)$/;"	f
ff_thread_flush	libavcodec/pthread.c	/^void ff_thread_flush(AVCodecContext *avctx)$/;"	f
ff_thread_free	libavcodec/pthread.c	/^void ff_thread_free(AVCodecContext *avctx)$/;"	f
ff_thread_free	libavcodec/w32thread.c	/^void ff_thread_free(AVCodecContext *s){$/;"	f
ff_thread_get_buffer	libavcodec/pthread.c	/^int ff_thread_get_buffer(AVCodecContext *avctx, AVFrame *f)$/;"	f
ff_thread_get_buffer	libavcodec/utils.c	/^int ff_thread_get_buffer(AVCodecContext *avctx, AVFrame *f)$/;"	f
ff_thread_init	libavcodec/pthread.c	/^int ff_thread_init(AVCodecContext *avctx)$/;"	f
ff_thread_init	libavcodec/utils.c	/^int ff_thread_init(AVCodecContext *s){$/;"	f
ff_thread_init	libavcodec/w32thread.c	/^int ff_thread_init(AVCodecContext *s){$/;"	f
ff_thread_release_buffer	libavcodec/pthread.c	/^void ff_thread_release_buffer(AVCodecContext *avctx, AVFrame *f)$/;"	f
ff_thread_release_buffer	libavcodec/utils.c	/^void ff_thread_release_buffer(AVCodecContext *avctx, AVFrame *f)$/;"	f
ff_thread_report_progress	libavcodec/pthread.c	/^void ff_thread_report_progress(AVFrame *f, int n, int field)$/;"	f
ff_thread_report_progress	libavcodec/utils.c	/^void ff_thread_report_progress(AVFrame *f, int progress, int field)$/;"	f
ff_tiertexseq_demuxer	libavformat/tiertexseq.c	/^AVInputFormat ff_tiertexseq_demuxer = {$/;"	v
ff_tiertexseqvideo_decoder	libavcodec/tiertexseqv.c	/^AVCodec ff_tiertexseqvideo_decoder = {$/;"	v
ff_tiff_decoder	libavcodec/tiff.c	/^AVCodec ff_tiff_decoder = {$/;"	v
ff_tiff_encoder	libavcodec/tiffenc.c	/^AVCodec ff_tiff_encoder = {$/;"	v
ff_tilt_compensation	libavcodec/acelp_filters.c	/^void ff_tilt_compensation(float *mem, float tilt, float *samples, int size)$/;"	f
ff_timefilter_destroy	libavformat/timefilter.c	/^void ff_timefilter_destroy(TimeFilter *self)$/;"	f
ff_timefilter_new	libavformat/timefilter.c	/^TimeFilter * ff_timefilter_new(double clock_period, double feedback2_factor, double feedback3_factor)$/;"	f
ff_timefilter_reset	libavformat/timefilter.c	/^void ff_timefilter_reset(TimeFilter *self)$/;"	f
ff_timefilter_update	libavformat/timefilter.c	/^double ff_timefilter_update(TimeFilter *self, double system_time, double period)$/;"	f
ff_timestamp_guid	libavformat/wtv.c	/^const ff_asf_guid ff_timestamp_guid =$/;"	v
ff_tmv_decoder	libavcodec/tmv.c	/^AVCodec ff_tmv_decoder = {$/;"	v
ff_tmv_demuxer	libavformat/tmv.c	/^AVInputFormat ff_tmv_demuxer = {$/;"	v
ff_tns_max_bands_1024	libavcodec/aactab.c	/^const uint8_t ff_tns_max_bands_1024[] = {$/;"	v
ff_tns_max_bands_128	libavcodec/aactab.c	/^const uint8_t ff_tns_max_bands_128[] = {$/;"	v
ff_top_modifier_c	libavcodec/cavsdata.h	/^const int8_t ff_top_modifier_c[7]  = {  4,  1, -1, -1,  4, 6, 6 };$/;"	v
ff_top_modifier_l	libavcodec/cavsdata.h	/^const int8_t ff_top_modifier_l[8]  = { -1,  1,  5, -1, -1, 5, 7, 7 };$/;"	v
ff_toupper4	libavcodec/utils.c	/^unsigned int ff_toupper4(unsigned int x)$/;"	f
ff_truehd_decoder	libavcodec/mlpdec.c	/^AVCodec ff_truehd_decoder = {$/;"	v
ff_truehd_demuxer	libavformat/rawdec.c	/^AVInputFormat ff_truehd_demuxer = {$/;"	v
ff_truehd_layout	libavcodec/mlp_parser.c	/^int64_t ff_truehd_layout(int chanmap)$/;"	f
ff_truehd_muxer	libavformat/rawenc.c	/^AVOutputFormat ff_truehd_muxer = {$/;"	v
ff_truemotion1_decoder	libavcodec/truemotion1.c	/^AVCodec ff_truemotion1_decoder = {$/;"	v
ff_truemotion2_decoder	libavcodec/truemotion2.c	/^AVCodec ff_truemotion2_decoder = {$/;"	v
ff_truespeech_decoder	libavcodec/truespeech.c	/^AVCodec ff_truespeech_decoder = {$/;"	v
ff_tscc_decoder	libavcodec/tscc.c	/^AVCodec ff_tscc_decoder = {$/;"	v
ff_tta_decoder	libavcodec/tta.c	/^AVCodec ff_tta_decoder = {$/;"	v
ff_tta_demuxer	libavformat/tta.c	/^AVInputFormat ff_tta_demuxer = {$/;"	v
ff_tty_demuxer	libavformat/tty.c	/^AVInputFormat ff_tty_demuxer = {$/;"	v
ff_twinvq_decoder	libavcodec/twinvq.c	/^AVCodec ff_twinvq_decoder =$/;"	v
ff_txd_decoder	libavcodec/txd.c	/^AVCodec ff_txd_decoder = {$/;"	v
ff_txd_demuxer	libavformat/txd.c	/^AVInputFormat ff_txd_demuxer =$/;"	v
ff_udp_get_local_port	libavformat/udp.c	/^int ff_udp_get_local_port(URLContext *h)$/;"	f
ff_udp_protocol	libavformat/udp.c	/^URLProtocol ff_udp_protocol = {$/;"	v
ff_udp_set_remote_url	libavformat/udp.c	/^int ff_udp_set_remote_url(URLContext *h, const char *uri)$/;"	f
ff_ue_golomb_len	libavcodec/golomb.c	/^const uint8_t ff_ue_golomb_len[256]={$/;"	v
ff_ue_golomb_vlc_code	libavcodec/golomb.c	/^const uint8_t ff_ue_golomb_vlc_code[512]={$/;"	v
ff_ulti_decoder	libavcodec/ulti.c	/^AVCodec ff_ulti_decoder = {$/;"	v
ff_update_block_index	libavcodec/mpegvideo.h	/^static inline void ff_update_block_index(MpegEncContext *s){$/;"	f
ff_update_duplicate_context	libavcodec/mpegvideo.c	/^void ff_update_duplicate_context(MpegEncContext *dst, MpegEncContext *src){$/;"	f
ff_url_join	libavformat/utils.c	/^int ff_url_join(char *str, int size, const char *proto,$/;"	f
ff_v210_decoder	libavcodec/v210dec.c	/^AVCodec ff_v210_decoder = {$/;"	v
ff_v210_encoder	libavcodec/v210enc.c	/^AVCodec ff_v210_encoder = {$/;"	v
ff_v210x_decoder	libavcodec/v210x.c	/^AVCodec ff_v210x_decoder = {$/;"	v
ff_v4l2_demuxer	libavdevice/v4l2.c	/^AVInputFormat ff_v4l2_demuxer = {$/;"	v
ff_v4l_demuxer	libavdevice/v4l.c	/^AVInputFormat ff_v4l_demuxer = {$/;"	v
ff_vaapi_alloc_bitplane	libavcodec/vaapi.c	/^uint8_t *ff_vaapi_alloc_bitplane(struct vaapi_context *vactx, uint32_t size)$/;"	f
ff_vaapi_alloc_iq_matrix	libavcodec/vaapi.c	/^void *ff_vaapi_alloc_iq_matrix(struct vaapi_context *vactx, unsigned int size)$/;"	f
ff_vaapi_alloc_pic_param	libavcodec/vaapi.c	/^void *ff_vaapi_alloc_pic_param(struct vaapi_context *vactx, unsigned int size)$/;"	f
ff_vaapi_alloc_slice	libavcodec/vaapi.c	/^VASliceParameterBufferBase *ff_vaapi_alloc_slice(struct vaapi_context *vactx, const uint8_t *buffer, uint32_t size)$/;"	f
ff_vaapi_common_end_frame	libavcodec/vaapi.c	/^int ff_vaapi_common_end_frame(MpegEncContext *s)$/;"	f
ff_vaapi_get_surface_id	libavcodec/vaapi_internal.h	/^static inline VASurfaceID ff_vaapi_get_surface_id(Picture *pic)$/;"	f
ff_vb_decoder	libavcodec/vb.c	/^AVCodec ff_vb_decoder = {$/;"	v
ff_vbv_update	libavcodec/ratecontrol.c	/^int ff_vbv_update(MpegEncContext *s, int frame_size){$/;"	f
ff_vc1_4mv_block_pattern_bits	libavcodec/vc1data.c	/^const uint8_t ff_vc1_4mv_block_pattern_bits[4][16] = {$/;"	v
ff_vc1_4mv_block_pattern_codes	libavcodec/vc1data.c	/^const uint8_t ff_vc1_4mv_block_pattern_codes[4][16] = {$/;"	v
ff_vc1_4mv_block_pattern_vlc	libavcodec/vc1data.c	/^VLC ff_vc1_4mv_block_pattern_vlc[4];$/;"	v
ff_vc1_ac_coeff_table	libavcodec/vc1data.c	/^VLC ff_vc1_ac_coeff_table[8];$/;"	v
ff_vc1_adv_interlaced_4x4_zz	libavcodec/vc1data.c	/^const int8_t ff_vc1_adv_interlaced_4x4_zz [16] = \/* Table 238 *\/$/;"	v
ff_vc1_adv_interlaced_4x8_zz	libavcodec/vc1data.c	/^const int8_t ff_vc1_adv_interlaced_4x8_zz [32] = \/* Table 237 *\/$/;"	v
ff_vc1_adv_interlaced_8x4_zz	libavcodec/vc1data.c	/^const int8_t ff_vc1_adv_interlaced_8x4_zz [32] = \/* Table 236 *\/$/;"	v
ff_vc1_adv_interlaced_8x8_zz	libavcodec/vc1data.c	/^const int8_t ff_vc1_adv_interlaced_8x8_zz [64] = \/* Table 235 *\/$/;"	v
ff_vc1_adv_progressive_4x8_zz	libavcodec/vc1data.c	/^const int8_t ff_vc1_adv_progressive_4x8_zz [32] = \/* Table 234 *\/$/;"	v
ff_vc1_adv_progressive_8x4_zz	libavcodec/vc1data.c	/^const int8_t ff_vc1_adv_progressive_8x4_zz [32] = \/* Table 233 *\/$/;"	v
ff_vc1_bfraction_bits	libavcodec/vc1data.c	/^const uint8_t ff_vc1_bfraction_bits[23] = {$/;"	v
ff_vc1_bfraction_codes	libavcodec/vc1data.c	/^const uint8_t ff_vc1_bfraction_codes[23] = {$/;"	v
ff_vc1_bfraction_lut	libavcodec/vc1data.c	/^const int16_t ff_vc1_bfraction_lut[23] = {$/;"	v
ff_vc1_bfraction_vlc	libavcodec/vc1data.c	/^VLC ff_vc1_bfraction_vlc;$/;"	v
ff_vc1_cbpcy_p_bits	libavcodec/vc1data.c	/^const uint8_t ff_vc1_cbpcy_p_bits[4][64] = {$/;"	v
ff_vc1_cbpcy_p_codes	libavcodec/vc1data.c	/^const uint16_t ff_vc1_cbpcy_p_codes[4][64] = {$/;"	v
ff_vc1_cbpcy_p_vlc	libavcodec/vc1data.c	/^VLC ff_vc1_cbpcy_p_vlc[4];$/;"	v
ff_vc1_crystalhd_decoder	libavcodec/crystalhd.c	/^AVCodec ff_vc1_crystalhd_decoder = {$/;"	v
ff_vc1_decoder	libavcodec/vc1dec.c	/^AVCodec ff_vc1_decoder = {$/;"	v
ff_vc1_dqscale	libavcodec/vc1data.c	/^const int32_t ff_vc1_dqscale[63] = {$/;"	v
ff_vc1_dxva2_hwaccel	libavcodec/dxva2_vc1.c	/^AVHWAccel ff_vc1_dxva2_hwaccel = {$/;"	v
ff_vc1_fps_dr	libavcodec/vc1data.c	/^  ff_vc1_fps_dr[2] = { 1000, 1001 };$/;"	v
ff_vc1_fps_nr	libavcodec/vc1data.c	/^const int ff_vc1_fps_nr[5] = { 24, 25, 30, 50, 60 },$/;"	v
ff_vc1_imode_bits	libavcodec/vc1data.c	/^const uint8_t ff_vc1_imode_bits[7] = {$/;"	v
ff_vc1_imode_codes	libavcodec/vc1data.c	/^const uint8_t ff_vc1_imode_codes[7] = {$/;"	v
ff_vc1_imode_vlc	libavcodec/vc1data.c	/^VLC ff_vc1_imode_vlc;$/;"	v
ff_vc1_mv_diff_bits	libavcodec/vc1data.c	/^const uint8_t ff_vc1_mv_diff_bits[4][73] = {$/;"	v
ff_vc1_mv_diff_codes	libavcodec/vc1data.c	/^const uint16_t ff_vc1_mv_diff_codes[4][73] = {$/;"	v
ff_vc1_mv_diff_vlc	libavcodec/vc1data.c	/^VLC ff_vc1_mv_diff_vlc[4];$/;"	v
ff_vc1_mv_pmode_table	libavcodec/vc1data.c	/^const uint8_t ff_vc1_mv_pmode_table[2][5] = {$/;"	v
ff_vc1_mv_pmode_table2	libavcodec/vc1data.c	/^const uint8_t ff_vc1_mv_pmode_table2[2][4] = {$/;"	v
ff_vc1_norm2_bits	libavcodec/vc1data.c	/^const uint8_t ff_vc1_norm2_bits[4] = {$/;"	v
ff_vc1_norm2_codes	libavcodec/vc1data.c	/^const uint8_t ff_vc1_norm2_codes[4] = {$/;"	v
ff_vc1_norm2_vlc	libavcodec/vc1data.c	/^VLC ff_vc1_norm2_vlc;$/;"	v
ff_vc1_norm6_bits	libavcodec/vc1data.c	/^const uint8_t ff_vc1_norm6_bits[64] = {$/;"	v
ff_vc1_norm6_codes	libavcodec/vc1data.c	/^const uint16_t ff_vc1_norm6_codes[64] = {$/;"	v
ff_vc1_norm6_vlc	libavcodec/vc1data.c	/^VLC ff_vc1_norm6_vlc;$/;"	v
ff_vc1_parser	libavcodec/vc1_parser.c	/^AVCodecParser ff_vc1_parser = {$/;"	v
ff_vc1_pixel_aspect	libavcodec/vc1data.c	/^const AVRational ff_vc1_pixel_aspect[16]={$/;"	v
ff_vc1_pquant_table	libavcodec/vc1data.c	/^const uint8_t ff_vc1_pquant_table[3][32] = {$/;"	v
ff_vc1_simple_progressive_4x4_zz	libavcodec/vc1data.c	/^const int8_t ff_vc1_simple_progressive_4x4_zz [16] =$/;"	v
ff_vc1_subblkpat_bits	libavcodec/vc1data.c	/^const uint8_t ff_vc1_subblkpat_bits[3][15] = {$/;"	v
ff_vc1_subblkpat_codes	libavcodec/vc1data.c	/^const uint8_t ff_vc1_subblkpat_codes[3][15] = {$/;"	v
ff_vc1_subblkpat_vlc	libavcodec/vc1data.c	/^VLC ff_vc1_subblkpat_vlc[3];$/;"	v
ff_vc1_ttblk_bits	libavcodec/vc1data.c	/^const uint8_t ff_vc1_ttblk_bits[3][8] = {$/;"	v
ff_vc1_ttblk_codes	libavcodec/vc1data.c	/^const uint8_t ff_vc1_ttblk_codes[3][8] = {$/;"	v
ff_vc1_ttblk_to_tt	libavcodec/vc1data.c	/^const int ff_vc1_ttblk_to_tt[3][8] = {$/;"	v
ff_vc1_ttblk_vlc	libavcodec/vc1data.c	/^VLC ff_vc1_ttblk_vlc[3];$/;"	v
ff_vc1_ttfrm_to_tt	libavcodec/vc1data.c	/^const int ff_vc1_ttfrm_to_tt[4] = { TT_8X8, TT_8X4, TT_4X8, TT_4X4 };$/;"	v
ff_vc1_ttmb_bits	libavcodec/vc1data.c	/^const uint8_t ff_vc1_ttmb_bits[3][16] = {$/;"	v
ff_vc1_ttmb_codes	libavcodec/vc1data.c	/^const uint16_t ff_vc1_ttmb_codes[3][16] = {$/;"	v
ff_vc1_ttmb_vlc	libavcodec/vc1data.c	/^VLC ff_vc1_ttmb_vlc[3];$/;"	v
ff_vc1_vaapi_hwaccel	libavcodec/vaapi_vc1.c	/^AVHWAccel ff_vc1_vaapi_hwaccel = {$/;"	v
ff_vc1_vdpau_decoder	libavcodec/vc1dec.c	/^AVCodec ff_vc1_vdpau_decoder = {$/;"	v
ff_vc1dsp_init	libavcodec/vc1dsp.c	/^av_cold void ff_vc1dsp_init(VC1DSPContext* dsp) {$/;"	f
ff_vc1dsp_init_altivec	libavcodec/ppc/vc1dsp_altivec.c	/^void ff_vc1dsp_init_altivec(VC1DSPContext* dsp)$/;"	f
ff_vc1dsp_init_mmx	libavcodec/x86/vc1dsp_mmx.c	/^void ff_vc1dsp_init_mmx(VC1DSPContext *dsp)$/;"	f
ff_vc1t_demuxer	libavformat/vc1test.c	/^AVInputFormat ff_vc1t_demuxer = {$/;"	v
ff_vc1t_muxer	libavformat/vc1testenc.c	/^AVOutputFormat ff_vc1t_muxer = {$/;"	v
ff_vcr1_decoder	libavcodec/vcr1.c	/^AVCodec ff_vcr1_decoder = {$/;"	v
ff_vcr1_encoder	libavcodec/vcr1.c	/^AVCodec ff_vcr1_encoder = {$/;"	v
ff_vdpau_add_data_chunk	libavcodec/vdpau.c	/^void ff_vdpau_add_data_chunk(MpegEncContext *s,$/;"	f
ff_vdpau_h264_picture_complete	libavcodec/vdpau.c	/^void ff_vdpau_h264_picture_complete(MpegEncContext *s)$/;"	f
ff_vdpau_h264_picture_start	libavcodec/vdpau.c	/^void ff_vdpau_h264_picture_start(MpegEncContext *s)$/;"	f
ff_vdpau_h264_set_reference_frames	libavcodec/vdpau.c	/^void ff_vdpau_h264_set_reference_frames(MpegEncContext *s)$/;"	f
ff_vdpau_mpeg4_decode_picture	libavcodec/vdpau.c	/^void ff_vdpau_mpeg4_decode_picture(MpegEncContext *s, const uint8_t *buf,$/;"	f
ff_vdpau_mpeg_picture_complete	libavcodec/vdpau.c	/^void ff_vdpau_mpeg_picture_complete(MpegEncContext *s, const uint8_t *buf,$/;"	f
ff_vdpau_vc1_decode_picture	libavcodec/vdpau.c	/^void ff_vdpau_vc1_decode_picture(MpegEncContext *s, const uint8_t *buf,$/;"	f
ff_vfwcap_demuxer	libavdevice/vfwcap.c	/^AVInputFormat ff_vfwcap_demuxer = {$/;"	v
ff_vga16_font	libavcodec/cga_data.c	/^const uint8_t ff_vga16_font[4096] = {$/;"	v
ff_video_guids	libavformat/wtv.c	/^const AVCodecGuid ff_video_guids[] = {$/;"	v
ff_vmd_demuxer	libavformat/sierravmd.c	/^AVInputFormat ff_vmd_demuxer = {$/;"	v
ff_vmdaudio_decoder	libavcodec/vmdav.c	/^AVCodec ff_vmdaudio_decoder = {$/;"	v
ff_vmdvideo_decoder	libavcodec/vmdav.c	/^AVCodec ff_vmdvideo_decoder = {$/;"	v
ff_vmnc_decoder	libavcodec/vmnc.c	/^AVCodec ff_vmnc_decoder = {$/;"	v
ff_voc_codec_tags	libavformat/voc.c	/^const AVCodecTag ff_voc_codec_tags[] = {$/;"	v
ff_voc_demuxer	libavformat/vocdec.c	/^AVInputFormat ff_voc_demuxer = {$/;"	v
ff_voc_magic	libavformat/voc.c	/^const unsigned char ff_voc_magic[21] = "Creative Voice File\\x1A";$/;"	v
ff_voc_muxer	libavformat/vocenc.c	/^AVOutputFormat ff_voc_muxer = {$/;"	v
ff_vorbis_channel_layout_offsets	libavcodec/vorbis_data.c	/^const uint8_t ff_vorbis_channel_layout_offsets[8][8] = {$/;"	v
ff_vorbis_channel_layouts	libavcodec/vorbis_data.c	/^const int64_t ff_vorbis_channel_layouts[9] = {$/;"	v
ff_vorbis_codec	libavformat/oggparsevorbis.c	/^const struct ogg_codec ff_vorbis_codec = {$/;"	v	typeref:struct:ogg_codec
ff_vorbis_comment	libavformat/oggparsevorbis.c	/^ff_vorbis_comment(AVFormatContext * as, AVDictionary **m, const uint8_t *buf, int size)$/;"	f
ff_vorbis_decoder	libavcodec/vorbisdec.c	/^AVCodec ff_vorbis_decoder = {$/;"	v
ff_vorbis_dynamic_handler	libavformat/rtpdec_xiph.c	/^RTPDynamicProtocolHandler ff_vorbis_dynamic_handler = {$/;"	v
ff_vorbis_encoder	libavcodec/vorbisenc.c	/^AVCodec ff_vorbis_encoder = {$/;"	v
ff_vorbis_encoding_channel_layout_offsets	libavcodec/vorbis_data.c	/^const uint8_t ff_vorbis_encoding_channel_layout_offsets[8][8] = {$/;"	v
ff_vorbis_floor1_inverse_db_table	libavcodec/vorbis_data.c	/^const float ff_vorbis_floor1_inverse_db_table[256]={$/;"	v
ff_vorbis_floor1_render_list	libavcodec/vorbis.c	/^void ff_vorbis_floor1_render_list(vorbis_floor1_entry * list, int values,$/;"	f
ff_vorbis_len2vlc	libavcodec/vorbis.c	/^int ff_vorbis_len2vlc(uint8_t *bits, uint32_t *codes, unsigned num)$/;"	f
ff_vorbis_nth_root	libavcodec/vorbis.c	/^unsigned int ff_vorbis_nth_root(unsigned int x, unsigned int n)$/;"	f
ff_vorbis_ready_floor1_list	libavcodec/vorbis.c	/^void ff_vorbis_ready_floor1_list(vorbis_floor1_entry * list, int values)$/;"	f
ff_vorbis_vwin	libavcodec/vorbis_data.c	/^const float * const ff_vorbis_vwin[8] = {$/;"	v
ff_vorbiscomment_length	libavformat/vorbiscomment.c	/^int ff_vorbiscomment_length(AVDictionary *m, const char *vendor_string,$/;"	f
ff_vorbiscomment_metadata_conv	libavformat/vorbiscomment.c	/^const AVMetadataConv ff_vorbiscomment_metadata_conv[] = {$/;"	v
ff_vorbiscomment_write	libavformat/vorbiscomment.c	/^int ff_vorbiscomment_write(uint8_t **p, AVDictionary **m,$/;"	f
ff_vp3_decoder	libavcodec/vp3.c	/^AVCodec ff_vp3_decoder = {$/;"	v
ff_vp3_h_loop_filter_c	libavcodec/vp3dsp.c	/^void ff_vp3_h_loop_filter_c(uint8_t *first_pixel, int stride, int *bounding_values)$/;"	f
ff_vp3_idct_add_altivec	libavcodec/ppc/vp3dsp_altivec.c	/^void ff_vp3_idct_add_altivec(uint8_t *dst, int stride, DCTELEM block[64])$/;"	f
ff_vp3_idct_add_c	libavcodec/vp3dsp.c	/^void ff_vp3_idct_add_c(uint8_t *dest\/*align 8*\/, int line_size, DCTELEM *block\/*align 16*\/){$/;"	f
ff_vp3_idct_altivec	libavcodec/ppc/vp3dsp_altivec.c	/^void ff_vp3_idct_altivec(DCTELEM block[64])$/;"	f
ff_vp3_idct_c	libavcodec/vp3dsp.c	/^void ff_vp3_idct_c(DCTELEM *block\/* align 16*\/){$/;"	f
ff_vp3_idct_dc_add_c	libavcodec/vp3dsp.c	/^void ff_vp3_idct_dc_add_c(uint8_t *dest\/*align 8*\/, int line_size, const DCTELEM *block\/*align 16*\/){$/;"	f
ff_vp3_idct_put_altivec	libavcodec/ppc/vp3dsp_altivec.c	/^void ff_vp3_idct_put_altivec(uint8_t *dst, int stride, DCTELEM block[64])$/;"	f
ff_vp3_idct_put_c	libavcodec/vp3dsp.c	/^void ff_vp3_idct_put_c(uint8_t *dest\/*align 8*\/, int line_size, DCTELEM *block\/*align 16*\/){$/;"	f
ff_vp3_parser	libavcodec/vp3_parser.c	/^AVCodecParser ff_vp3_parser = {$/;"	v
ff_vp3_v_loop_filter_c	libavcodec/vp3dsp.c	/^void ff_vp3_v_loop_filter_c(uint8_t *first_pixel, int stride, int *bounding_values)$/;"	f
ff_vp56_decode_frame	libavcodec/vp56.c	/^int ff_vp56_decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f
ff_vp56_free	libavcodec/vp56.c	/^av_cold int ff_vp56_free(AVCodecContext *avctx)$/;"	f
ff_vp56_init	libavcodec/vp56.c	/^av_cold void ff_vp56_init(AVCodecContext *avctx, int flip, int has_alpha)$/;"	f
ff_vp56_init_dequant	libavcodec/vp56.c	/^void ff_vp56_init_dequant(VP56Context *s, int quantizer)$/;"	f
ff_vp56_init_range_decoder	libavcodec/vp56rac.c	/^void ff_vp56_init_range_decoder(VP56RangeCoder *c, const uint8_t *buf, int buf_size)$/;"	f
ff_vp56_norm_shift	libavcodec/vp56rac.c	/^const uint8_t ff_vp56_norm_shift[256]= {$/;"	v
ff_vp56dsp_init	libavcodec/vp56dsp.c	/^void ff_vp56dsp_init(VP56DSPContext *s, enum CodecID codec)$/;"	f
ff_vp56dsp_init_arm	libavcodec/arm/vp56dsp_init_arm.c	/^void ff_vp56dsp_init_arm(VP56DSPContext *s, enum CodecID codec)$/;"	f
ff_vp56dsp_init_x86	libavcodec/x86/vp56dsp_init.c	/^av_cold void ff_vp56dsp_init_x86(VP56DSPContext* c, enum CodecID codec)$/;"	f
ff_vp5_decoder	libavcodec/vp5.c	/^AVCodec ff_vp5_decoder = {$/;"	v
ff_vp6_decoder	libavcodec/vp6.c	/^AVCodec ff_vp6_decoder = {$/;"	v
ff_vp6_filter_diag4_c	libavcodec/vp6dsp.c	/^void ff_vp6_filter_diag4_c(uint8_t *dst, uint8_t *src, int stride,$/;"	f
ff_vp6a_decoder	libavcodec/vp6.c	/^AVCodec ff_vp6a_decoder = {$/;"	v
ff_vp6f_decoder	libavcodec/vp6.c	/^AVCodec ff_vp6f_decoder = {$/;"	v
ff_vp8_dct_cat_prob	libavcodec/vp8data.h	/^const uint8_t * const ff_vp8_dct_cat_prob[] =$/;"	v
ff_vp8_decoder	libavcodec/vp8.c	/^AVCodec ff_vp8_decoder = {$/;"	v
ff_vp8_dynamic_handler	libavformat/rtpdec_vp8.c	/^RTPDynamicProtocolHandler ff_vp8_dynamic_handler = {$/;"	v
ff_vp8_parser	libavcodec/vp8_parser.c	/^AVCodecParser ff_vp8_parser = {$/;"	v
ff_vp8dsp_init	libavcodec/vp8dsp.c	/^av_cold void ff_vp8dsp_init(VP8DSPContext *dsp)$/;"	f
ff_vp8dsp_init_altivec	libavcodec/ppc/vp8dsp_altivec.c	/^av_cold void ff_vp8dsp_init_altivec(VP8DSPContext *c)$/;"	f
ff_vp8dsp_init_arm	libavcodec/arm/vp8dsp_init_arm.c	/^av_cold void ff_vp8dsp_init_arm(VP8DSPContext *dsp)$/;"	f
ff_vqa_decoder	libavcodec/vqavideo.c	/^AVCodec ff_vqa_decoder = {$/;"	v
ff_vqf_demuxer	libavformat/vqf.c	/^AVInputFormat ff_vqf_demuxer = {$/;"	v
ff_w53_32_c	libavcodec/dwt.c	/^int ff_w53_32_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h){$/;"	f
ff_w64_demuxer	libavformat/wav.c	/^AVInputFormat ff_w64_demuxer = {$/;"	v
ff_w97_32_c	libavcodec/dwt.c	/^int ff_w97_32_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h){$/;"	f
ff_wav_codec_get_id	libavformat/riff.c	/^enum CodecID ff_wav_codec_get_id(unsigned int tag, int bps)$/;"	f
ff_wav_demuxer	libavformat/wav.c	/^AVInputFormat ff_wav_demuxer = {$/;"	v
ff_wav_muxer	libavformat/wav.c	/^AVOutputFormat ff_wav_muxer = {$/;"	v
ff_wavpack_decoder	libavcodec/wavpack.c	/^AVCodec ff_wavpack_decoder = {$/;"	v
ff_wc3_demuxer	libavformat/wc3movie.c	/^AVInputFormat ff_wc3_demuxer = {$/;"	v
ff_webm_muxer	libavformat/matroskaenc.c	/^AVOutputFormat ff_webm_muxer = {$/;"	v
ff_weighted_vector_sumf	libavcodec/acelp_vectors.c	/^void ff_weighted_vector_sumf(float *out, const float *in_a, const float *in_b,$/;"	f
ff_win32_open	libavformat/os_support.c	/^int ff_win32_open(const char *filename_utf8, int oflag, int pmode)$/;"	f
ff_wma_critical_freqs	libavcodec/wmadata.h	/^const uint16_t ff_wma_critical_freqs[25] = {$/;"	v
ff_wma_end	libavcodec/wma.c	/^int ff_wma_end(AVCodecContext *avctx)$/;"	f
ff_wma_get_frame_len_bits	libavcodec/wma.c	/^int av_cold ff_wma_get_frame_len_bits(int sample_rate, int version,$/;"	f
ff_wma_get_large_val	libavcodec/wma.c	/^unsigned int ff_wma_get_large_val(GetBitContext* gb)$/;"	f
ff_wma_hgain_huffbits	libavcodec/wmadata.h	/^const uint8_t ff_wma_hgain_huffbits[37] = {$/;"	v
ff_wma_hgain_huffcodes	libavcodec/wmadata.h	/^const uint16_t ff_wma_hgain_huffcodes[37] = {$/;"	v
ff_wma_init	libavcodec/wma.c	/^int ff_wma_init(AVCodecContext *avctx, int flags2)$/;"	f
ff_wma_lsp_codebook	libavcodec/wmadata.h	/^const float ff_wma_lsp_codebook[NB_LSP_COEFS][16] = {$/;"	v
ff_wma_run_level_decode	libavcodec/wma.c	/^int ff_wma_run_level_decode(AVCodecContext* avctx, GetBitContext* gb,$/;"	f
ff_wma_total_gain_to_bits	libavcodec/wma.c	/^int ff_wma_total_gain_to_bits(int total_gain)$/;"	f
ff_wmapro_decoder	libavcodec/wmaprodec.c	/^AVCodec ff_wmapro_decoder = {$/;"	v
ff_wmav1_decoder	libavcodec/wmadec.c	/^AVCodec ff_wmav1_decoder =$/;"	v
ff_wmav1_encoder	libavcodec/wmaenc.c	/^AVCodec ff_wmav1_encoder =$/;"	v
ff_wmav2_decoder	libavcodec/wmadec.c	/^AVCodec ff_wmav2_decoder =$/;"	v
ff_wmav2_encoder	libavcodec/wmaenc.c	/^AVCodec ff_wmav2_encoder =$/;"	v
ff_wmavoice_decoder	libavcodec/wmavoice.c	/^AVCodec ff_wmavoice_decoder = {$/;"	v
ff_wms_parse_sdp_a_line	libavformat/rtpdec_asf.c	/^int ff_wms_parse_sdp_a_line(AVFormatContext *s, const char *p)$/;"	f
ff_wmv1_decoder	libavcodec/msmpeg4.c	/^AVCodec ff_wmv1_decoder = {$/;"	v
ff_wmv1_encoder	libavcodec/mpegvideo_enc.c	/^AVCodec ff_wmv1_encoder = {$/;"	v
ff_wmv2_add_mb	libavcodec/wmv2.c	/^void ff_wmv2_add_mb(MpegEncContext *s, DCTELEM block1[6][64], uint8_t *dest_y, uint8_t *dest_cb, uint8_t *dest_cr){$/;"	f
ff_wmv2_common_init	libavcodec/wmv2.c	/^av_cold void ff_wmv2_common_init(Wmv2Context * w){$/;"	f
ff_wmv2_decode_mb	libavcodec/wmv2dec.c	/^int ff_wmv2_decode_mb(MpegEncContext *s, DCTELEM block[6][64])$/;"	f
ff_wmv2_decode_picture_header	libavcodec/wmv2dec.c	/^int ff_wmv2_decode_picture_header(MpegEncContext * s)$/;"	f
ff_wmv2_decode_secondary_picture_header	libavcodec/wmv2dec.c	/^int ff_wmv2_decode_secondary_picture_header(MpegEncContext * s)$/;"	f
ff_wmv2_decoder	libavcodec/wmv2dec.c	/^AVCodec ff_wmv2_decoder = {$/;"	v
ff_wmv2_encode_mb	libavcodec/wmv2enc.c	/^void ff_wmv2_encode_mb(MpegEncContext * s,$/;"	f
ff_wmv2_encode_picture_header	libavcodec/wmv2enc.c	/^int ff_wmv2_encode_picture_header(MpegEncContext * s, int picture_number)$/;"	f
ff_wmv2_encoder	libavcodec/wmv2enc.c	/^AVCodec ff_wmv2_encoder = {$/;"	v
ff_wmv2_idct_add_c	libavcodec/dsputil.c	/^static void ff_wmv2_idct_add_c(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_wmv2_idct_c	libavcodec/dsputil.c	/^void ff_wmv2_idct_c(short * block){$/;"	f
ff_wmv2_idct_put_c	libavcodec/dsputil.c	/^static void ff_wmv2_idct_put_c(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
ff_wmv3_crystalhd_decoder	libavcodec/crystalhd.c	/^AVCodec ff_wmv3_crystalhd_decoder = {$/;"	v
ff_wmv3_decoder	libavcodec/vc1dec.c	/^AVCodec ff_wmv3_decoder = {$/;"	v
ff_wmv3_dxva2_hwaccel	libavcodec/dxva2_vc1.c	/^AVHWAccel ff_wmv3_dxva2_hwaccel = {$/;"	v
ff_wmv3_vaapi_hwaccel	libavcodec/vaapi_vc1.c	/^AVHWAccel ff_wmv3_vaapi_hwaccel = {$/;"	v
ff_wmv3_vdpau_decoder	libavcodec/vc1dec.c	/^AVCodec ff_wmv3_vdpau_decoder = {$/;"	v
ff_wnv1_decoder	libavcodec/wnv1.c	/^AVCodec ff_wnv1_decoder = {$/;"	v
ff_write_chained	libavformat/utils.c	/^int ff_write_chained(AVFormatContext *dst, int dst_stream, AVPacket *pkt,$/;"	f
ff_write_pass1_stats	libavcodec/ratecontrol.c	/^void ff_write_pass1_stats(MpegEncContext *s){$/;"	f
ff_write_quant_matrix	libavcodec/mpegvideo_enc.c	/^void ff_write_quant_matrix(PutBitContext *pb, uint16_t *matrix){$/;"	f
ff_ws_snd1_decoder	libavcodec/ws-snd1.c	/^AVCodec ff_ws_snd1_decoder = {$/;"	v
ff_wsaud_demuxer	libavformat/westwood.c	/^AVInputFormat ff_wsaud_demuxer = {$/;"	v
ff_wsvqa_demuxer	libavformat/westwood.c	/^AVInputFormat ff_wsvqa_demuxer = {$/;"	v
ff_wtv_demuxer	libavformat/wtvdec.c	/^AVInputFormat ff_wtv_demuxer = {$/;"	v
ff_wtv_guid	libavformat/wtv.c	/^const ff_asf_guid ff_wtv_guid =$/;"	v
ff_wv_demuxer	libavformat/wv.c	/^AVInputFormat ff_wv_demuxer = {$/;"	v
ff_x11_grab_device_demuxer	libavdevice/x11grab.c	/^AVInputFormat ff_x11_grab_device_demuxer =$/;"	v
ff_xa_demuxer	libavformat/xa.c	/^AVInputFormat ff_xa_demuxer = {$/;"	v
ff_xan_wc3_decoder	libavcodec/xan.c	/^AVCodec ff_xan_wc3_decoder = {$/;"	v
ff_xan_wc4_decoder	libavcodec/xxan.c	/^AVCodec ff_xan_wc4_decoder = {$/;"	v
ff_xl_decoder	libavcodec/xl.c	/^AVCodec ff_xl_decoder = {$/;"	v
ff_xsub_decoder	libavcodec/xsubdec.c	/^AVCodec ff_xsub_decoder = {$/;"	v
ff_xsub_encoder	libavcodec/xsubenc.c	/^AVCodec ff_xsub_encoder = {$/;"	v
ff_xvid_rate_control_init	libavcodec/libxvid_rc.c	/^int ff_xvid_rate_control_init(MpegEncContext *s){$/;"	f
ff_xvid_rate_control_uninit	libavcodec/libxvid_rc.c	/^void ff_xvid_rate_control_uninit(MpegEncContext *s){$/;"	f
ff_xvid_rate_estimate_qscale	libavcodec/libxvid_rc.c	/^float ff_xvid_rate_estimate_qscale(MpegEncContext *s, int dry_run){$/;"	f
ff_xvmc_decode_mb	libavcodec/mpegvideo_xvmc.c	/^void ff_xvmc_decode_mb(MpegEncContext *s)$/;"	f
ff_xvmc_field_end	libavcodec/mpegvideo_xvmc.c	/^void ff_xvmc_field_end(MpegEncContext *s)$/;"	f
ff_xvmc_field_start	libavcodec/mpegvideo_xvmc.c	/^int ff_xvmc_field_start(MpegEncContext *s, AVCodecContext *avctx)$/;"	f
ff_xvmc_init_block	libavcodec/mpegvideo_xvmc.c	/^void ff_xvmc_init_block(MpegEncContext *s)$/;"	f
ff_xvmc_pack_pblocks	libavcodec/mpegvideo_xvmc.c	/^void ff_xvmc_pack_pblocks(MpegEncContext *s, int cbp)$/;"	f
ff_xwma_demuxer	libavformat/xwma.c	/^AVInputFormat ff_xwma_demuxer = {$/;"	v
ff_yadif_filter_line	libavfilter/x86/yadif_template.c	/^void RENAME(ff_yadif_filter_line)(uint8_t *dst,$/;"	f
ff_yop_decoder	libavcodec/yop.c	/^AVCodec ff_yop_decoder = {$/;"	v
ff_yop_demuxer	libavformat/yop.c	/^AVInputFormat ff_yop_demuxer = {$/;"	v
ff_yuv2packedX_altivec	libswscale/ppc/yuv2rgb_altivec.c	/^ff_yuv2packedX_altivec(SwsContext *c, const int16_t *lumFilter,$/;"	f
ff_yuv2rgb_c_init_tables	libswscale/yuv2rgb.c	/^av_cold int ff_yuv2rgb_c_init_tables(SwsContext *c, const int inv_table[4], int fullRange,$/;"	f
ff_yuv2rgb_coeffs	libswscale/yuv2rgb.c	/^const int32_t ff_yuv2rgb_coeffs[8][4] = {$/;"	v
ff_yuv2rgb_get_func_ptr	libswscale/yuv2rgb.c	/^SwsFunc ff_yuv2rgb_get_func_ptr(SwsContext *c)$/;"	f
ff_yuv2rgb_get_func_ptr_bfin	libswscale/bfin/yuv2rgb_bfin.c	/^SwsFunc ff_yuv2rgb_get_func_ptr_bfin(SwsContext *c)$/;"	f
ff_yuv2rgb_init_altivec	libswscale/ppc/yuv2rgb_altivec.c	/^SwsFunc ff_yuv2rgb_init_altivec(SwsContext *c)$/;"	f
ff_yuv2rgb_init_mlib	libswscale/mlib/yuv2rgb_mlib.c	/^SwsFunc ff_yuv2rgb_init_mlib(SwsContext *c)$/;"	f
ff_yuv2rgb_init_mmx	libswscale/x86/yuv2rgb_mmx.c	/^SwsFunc ff_yuv2rgb_init_mmx(SwsContext *c)$/;"	f
ff_yuv2rgb_init_tables_altivec	libswscale/ppc/yuv2rgb_altivec.c	/^void ff_yuv2rgb_init_tables_altivec(SwsContext *c, const int inv_table[4], int brightness, int contrast, int saturation)$/;"	f
ff_yuv2rgb_init_vis	libswscale/sparc/yuv2rgb_vis.c	/^SwsFunc ff_yuv2rgb_init_vis(SwsContext *c)$/;"	f
ff_yuv4mpegpipe_demuxer	libavformat/yuv4mpeg.c	/^AVInputFormat ff_yuv4mpegpipe_demuxer = {$/;"	v
ff_yuv4mpegpipe_muxer	libavformat/yuv4mpeg.c	/^AVOutputFormat ff_yuv4mpegpipe_muxer = {$/;"	v
ff_zigzag248_direct	libavcodec/dsputil.c	/^const uint8_t ff_zigzag248_direct[64] = {$/;"	v
ff_zigzag_direct	libavcodec/dsputil.c	/^const uint8_t ff_zigzag_direct[64] = {$/;"	v
ff_zlib_decoder	libavcodec/lcldec.c	/^AVCodec ff_zlib_decoder = {$/;"	v
ff_zlib_encoder	libavcodec/lclenc.c	/^AVCodec ff_zlib_encoder = {$/;"	v
ff_zmbv_decoder	libavcodec/zmbv.c	/^AVCodec ff_zmbv_decoder = {$/;"	v
ff_zmbv_encoder	libavcodec/zmbvenc.c	/^AVCodec ff_zmbv_encoder = {$/;"	v
ffindex	libavformat/isom.h	/^    int ffindex;          \/\/\/< AVStream index$/;"	m	struct:MOVStreamContext
ffio_fdopen	libavformat/aviobuf.c	/^int ffio_fdopen(AVIOContext **s, URLContext *h)$/;"	f
ffio_fill	libavformat/aviobuf.c	/^void ffio_fill(AVIOContext *s, int b, int count)$/;"	f
ffio_get_checksum	libavformat/aviobuf.c	/^unsigned long ffio_get_checksum(AVIOContext *s)$/;"	f
ffio_init_checksum	libavformat/aviobuf.c	/^void ffio_init_checksum(AVIOContext *s,$/;"	f
ffio_init_context	libavformat/aviobuf.c	/^int ffio_init_context(AVIOContext *s,$/;"	f
ffio_open_dyn_packet_buf	libavformat/aviobuf.c	/^int ffio_open_dyn_packet_buf(AVIOContext **s, int max_packet_size)$/;"	f
ffio_read_partial	libavformat/aviobuf.c	/^int ffio_read_partial(AVIOContext *s, unsigned char *buf, int size)$/;"	f
ffio_read_varlen	libavformat/aviobuf.c	/^uint64_t ffio_read_varlen(AVIOContext *bc){$/;"	f
ffio_read_varlen	libavformat/nutdec.c	91;"	d	file:
ffio_rewind_with_probe_data	libavformat/aviobuf.c	/^int ffio_rewind_with_probe_data(AVIOContext *s, unsigned char *buf, int buf_size)$/;"	f
ffio_set_buf_size	libavformat/aviobuf.c	/^int ffio_set_buf_size(AVIOContext *s, int buf_size)$/;"	f
ffio_wfourcc	libavformat/avio_internal.h	/^static av_always_inline void ffio_wfourcc(AVIOContext *pb, const uint8_t *s)$/;"	f
ffm_close	libavformat/ffmdec.c	/^static int ffm_close(AVFormatContext *s)$/;"	f	file:
ffm_is_avail_data	libavformat/ffmdec.c	/^static int ffm_is_avail_data(AVFormatContext *s, int size)$/;"	f	file:
ffm_probe	libavformat/ffmdec.c	/^static int ffm_probe(AVProbeData *p)$/;"	f	file:
ffm_read_data	libavformat/ffmdec.c	/^static int ffm_read_data(AVFormatContext *s,$/;"	f	file:
ffm_read_header	libavformat/ffmdec.c	/^static int ffm_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
ffm_read_packet	libavformat/ffmdec.c	/^static int ffm_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
ffm_read_write_index	libavformat/ffmdec.c	/^int64_t ffm_read_write_index(int fd)$/;"	f
ffm_resync	libavformat/ffmdec.c	/^static int ffm_resync(AVFormatContext *s, int state)$/;"	f	file:
ffm_seek	libavformat/ffmdec.c	/^static int ffm_seek(AVFormatContext *s, int stream_index, int64_t wanted_pts, int flags)$/;"	f	file:
ffm_seek1	libavformat/ffmdec.c	/^static void ffm_seek1(AVFormatContext *s, int64_t pos1)$/;"	f	file:
ffm_set_write_index	libavformat/ffmdec.c	/^void ffm_set_write_index(AVFormatContext *s, int64_t pos, int64_t file_size)$/;"	f
ffm_write_data	libavformat/ffmenc.c	/^static void ffm_write_data(AVFormatContext *s,$/;"	f	file:
ffm_write_header	libavformat/ffmenc.c	/^static int ffm_write_header(AVFormatContext *s)$/;"	f	file:
ffm_write_packet	libavformat/ffmenc.c	/^static int ffm_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
ffm_write_trailer	libavformat/ffmenc.c	/^static int ffm_write_trailer(AVFormatContext *s)$/;"	f	file:
ffm_write_write_index	libavformat/ffmdec.c	/^int ffm_write_write_index(int fd, int64_t pos)$/;"	f
ffmpeg	tests/fate-run.sh	/^ffmpeg(){$/;"	f
ffmpeg_dirac_pixel_format_map	libavcodec/libdirac.h	/^} ffmpeg_dirac_pixel_format_map[] = {$/;"	v	typeref:struct:__anon161
ffmpeg_exit	ffmpeg.c	/^static int ffmpeg_exit(int ret)$/;"	f	file:
ffmpeg_exit	ffmpeg/ffmpeg.c	/^static int ffmpeg_exit(int ret)$/;"	f	file:
ffmpeg_schro_pixel_format_map	libavcodec/libschroedinger.h	/^} ffmpeg_schro_pixel_format_map[] = {$/;"	v	typeref:struct:__anon133
ffserver_daemon	ffserver.c	/^static int ffserver_daemon;$/;"	v	file:
ffserver_debug	ffserver.c	/^static int ffserver_debug;$/;"	v	file:
ffserver_guess_format	ffserver.c	/^static AVOutputFormat *ffserver_guess_format(const char *short_name, const char *filename,$/;"	f	file:
ffserver_opt_default	ffserver.c	/^static int ffserver_opt_default(const char *opt, const char *arg,$/;"	f	file:
ffserver_opt_preset	ffserver.c	/^static int ffserver_opt_preset(const char *arg,$/;"	f	file:
fft	libavcodec/ac3enc.h	/^    FFTContext fft;                     \/\/\/< FFT context for MDCT calculation$/;"	m	struct:AC3MDCTContext
fft	libavcodec/imc.c	/^    FFTContext fft;$/;"	m	struct:__anon90	file:
fft	libavcodec/qdm2.c	/^    QDM2FFT fft;$/;"	m	struct:__anon200	file:
fft	libavcodec/rdft.h	/^    FFTContext fft;$/;"	m	struct:RDFTContext
fft	libavcodec/x86/fft_mmx.asm	/^fft %+ n %+ %3%2:$/;"	l
fft16	libavcodec/fft.c	/^static void fft16(FFTComplex *z)$/;"	f	file:
fft16_avx	libavcodec/x86/fft_mmx.asm	/^fft16_avx:$/;"	l
fft16_sse	libavcodec/x86/fft_mmx.asm	/^fft16_sse:$/;"	l
fft32_avx	libavcodec/x86/fft_mmx.asm	/^fft32_avx:$/;"	l
fft32_interleave_avx	libavcodec/x86/fft_mmx.asm	/^fft32_interleave_avx:$/;"	l
fft4	libavcodec/fft.c	/^static void fft4(FFTComplex *z)$/;"	f	file:
fft4_avx	libavcodec/x86/fft_mmx.asm	/^fft4_avx:$/;"	l
fft4_sse	libavcodec/x86/fft_mmx.asm	/^fft4_sse:$/;"	l
fft8	libavcodec/fft.c	/^static void fft8(FFTComplex *z)$/;"	f	file:
fft8_avx	libavcodec/x86/fft_mmx.asm	/^fft8_avx:$/;"	l
fft8_sse	libavcodec/x86/fft_mmx.asm	/^fft8_sse:$/;"	l
fft_calc	libavcodec/fft.h	/^    void (*fft_calc)(struct FFTContext *s, FFTComplex *z);$/;"	m	struct:FFTContext
fft_coefs	libavcodec/qdm2.c	/^    FFTCoefficient fft_coefs[1000];$/;"	m	struct:__anon200	file:
fft_coefs_index	libavcodec/qdm2.c	/^    int fft_coefs_index;$/;"	m	struct:__anon200	file:
fft_coefs_max_index	libavcodec/qdm2.c	/^    int fft_coefs_max_index[5];$/;"	m	struct:__anon200	file:
fft_coefs_min_index	libavcodec/qdm2.c	/^    int fft_coefs_min_index[5];$/;"	m	struct:__anon200	file:
fft_cutoff_index_table	libavcodec/qdm2data.h	/^static const int fft_cutoff_index_table[4][2] = {$/;"	v
fft_data	libavcodec/ppc/fft_altivec_s.S	/^fft_data:$/;"	l
fft_dispatch	libavcodec/fft.c	/^static void (* const fft_dispatch[])(FFTComplex*) = {$/;"	v	file:
fft_frame_size	libavcodec/qdm2.c	/^    int fft_frame_size;      \/\/\/< size of fft frame, in components (1 comples = re + im)$/;"	m	struct:__anon200	file:
fft_level_exp	libavcodec/qdm2.c	/^    int fft_level_exp[6];$/;"	m	struct:__anon200	file:
fft_level_exp_alt_huffbits	libavcodec/qdm2data.h	/^static const uint8_t fft_level_exp_alt_huffbits[28] = {$/;"	v
fft_level_exp_alt_huffcodes	libavcodec/qdm2data.h	/^static const uint16_t fft_level_exp_alt_huffcodes[28] = {$/;"	v
fft_level_exp_alt_vlc	libavcodec/qdm2.c	/^static VLC fft_level_exp_alt_vlc;$/;"	v	file:
fft_level_exp_huffbits	libavcodec/qdm2data.h	/^static const uint8_t fft_level_exp_huffbits[20] = {$/;"	v
fft_level_exp_huffcodes	libavcodec/qdm2data.h	/^static const uint16_t fft_level_exp_huffcodes[20] = {$/;"	v
fft_level_exp_vlc	libavcodec/qdm2.c	/^static VLC fft_level_exp_vlc;$/;"	v	file:
fft_level_index_table	libavcodec/qdm2data.h	/^static const int16_t fft_level_index_table[256] = {$/;"	v
fft_order	libavcodec/qdm2.c	/^    int fft_order;           \/\/\/< order of FFT (actually fftorder+1)$/;"	m	struct:__anon200	file:
fft_perm_avx	libavcodec/fft.c	/^static av_cold void fft_perm_avx(FFTContext *s)$/;"	f	file:
fft_permutation	libavcodec/fft.h	/^    int fft_permutation;$/;"	m	struct:FFTContext
fft_permute	libavcodec/fft.h	/^    void (*fft_permute)(struct FFTContext *s, FFTComplex *z);$/;"	m	struct:FFTContext
fft_ref	libavcodec/fft-test.c	/^static void fft_ref(FFTComplex *tabr, FFTComplex *tab, int nbits)$/;"	f	file:
fft_ref_init	libavcodec/fft-test.c	/^static void fft_ref_init(int nbits, int inverse)$/;"	f	file:
fft_size	libavcodec/qdm2.c	/^    int fft_size;            \/\/\/< size of FFT, in complex numbers$/;"	m	struct:__anon200	file:
fft_stereo_exp_huffbits	libavcodec/qdm2data.h	/^static const uint8_t fft_stereo_exp_huffbits[7] = {$/;"	v
fft_stereo_exp_huffcodes	libavcodec/qdm2data.h	/^static const uint8_t fft_stereo_exp_huffcodes[7] = {$/;"	v
fft_stereo_exp_vlc	libavcodec/qdm2.c	/^static VLC fft_stereo_exp_vlc;$/;"	v	file:
fft_stereo_phase_huffbits	libavcodec/qdm2data.h	/^static const uint8_t fft_stereo_phase_huffbits[9] = {$/;"	v
fft_stereo_phase_huffcodes	libavcodec/qdm2data.h	/^static const uint8_t fft_stereo_phase_huffcodes[9] = {$/;"	v
fft_stereo_phase_vlc	libavcodec/qdm2.c	/^static VLC fft_stereo_phase_vlc;$/;"	v	file:
fft_subpackets	libavcodec/qdm2data.h	/^static const uint8_t fft_subpackets[32] = {$/;"	v
fft_tab_neon	libavcodec/arm/fft_neon.S	/^fft_tab_neon:$/;"	l
fft_tone_end	libavcodec/qdm2.c	/^    int fft_tone_end;$/;"	m	struct:__anon200	file:
fft_tone_envelope_table	libavcodec/qdm2data.h	/^static const float fft_tone_envelope_table[4][31] = {$/;"	v
fft_tone_level_table	libavcodec/qdm2data.h	/^static const float fft_tone_level_table[2][64] = { {$/;"	v
fft_tone_sample_table	libavcodec/qdm2data.h	/^static const float fft_tone_sample_table[4][16][5] = {$/;"	v
fft_tone_start	libavcodec/qdm2.c	/^    int fft_tone_start;$/;"	m	struct:__anon200	file:
fft_tones	libavcodec/qdm2.c	/^    FFTTone fft_tones[1000];$/;"	m	struct:__anon200	file:
ffurl_alloc	libavformat/avio.c	/^int ffurl_alloc(URLContext **puc, const char *filename, int flags)$/;"	f
ffurl_close	libavformat/avio.c	/^int ffurl_close(URLContext *h)$/;"	f
ffurl_connect	libavformat/avio.c	/^int ffurl_connect(URLContext* uc)$/;"	f
ffurl_get_file_handle	libavformat/avio.c	/^int ffurl_get_file_handle(URLContext *h)$/;"	f
ffurl_open	libavformat/avio.c	/^int ffurl_open(URLContext **puc, const char *filename, int flags)$/;"	f
ffurl_read	libavformat/avio.c	/^int ffurl_read(URLContext *h, unsigned char *buf, int size)$/;"	f
ffurl_read_complete	libavformat/avio.c	/^int ffurl_read_complete(URLContext *h, unsigned char *buf, int size)$/;"	f
ffurl_register_protocol	libavformat/avio.c	/^int ffurl_register_protocol(URLProtocol *protocol, int size)$/;"	f
ffurl_seek	libavformat/avio.c	/^int64_t ffurl_seek(URLContext *h, int64_t pos, int whence)$/;"	f
ffurl_size	libavformat/avio.c	/^int64_t ffurl_size(URLContext *h)$/;"	f
ffurl_write	libavformat/avio.c	/^int ffurl_write(URLContext *h, const unsigned char *buf, int size)$/;"	f
fg	libavcodec/ansi.c	/^    int fg;               \/**< foreground color *\/$/;"	m	struct:__anon173	file:
fgcolor	libavcodec/dvbsubdec.c	/^    int fgcolor;$/;"	m	struct:DVBSubObjectDisplay	file:
fi	libavcodec/flac_parser.c	/^    FLACFrameInfo fi; \/**< decoded frame header info                          *\/$/;"	m	struct:FLACHeaderMarker	file:
fi	libavfilter/libmpcodecs/vf_ivtc.c	/^    struct frameinfo fi[2];$/;"	m	struct:vf_priv_s	typeref:struct:vf_priv_s::frameinfo	file:
fibonacci	libavcodec/8svx.c	/^static const int8_t fibonacci[16]   = { -34,  -21, -13,  -8, -5, -3, -2, -1, 0, 1, 2, 3, 5, 8,  13, 21 };$/;"	v	file:
field	libavfilter/libmpcodecs/vf_field.c	/^    int field;$/;"	m	struct:vf_priv_s	file:
field_end	libavcodec/h264.c	/^static void field_end(H264Context *h, int in_setup){$/;"	f	file:
field_number	libavcodec/ass_split.c	/^    int field_number[FF_ARRAY_ELEMS(ass_sections)];$/;"	m	struct:ASSSplitContext	file:
field_order	libavcodec/ass_split.c	/^    int *field_order[FF_ARRAY_ELEMS(ass_sections)];$/;"	m	struct:ASSSplitContext	file:
field_picture	libavcodec/mpegvideo.h	/^    int field_picture;          \/\/\/< whether or not the picture was encoded in seperate fields$/;"	m	struct:Picture
field_poc	libavcodec/mpegvideo.h	/^    int field_poc[2];           \/\/\/< h264 top\/bottom POC$/;"	m	struct:Picture
field_scan	libavcodec/h264.h	/^    uint8_t field_scan[16];$/;"	m	struct:H264Context
field_scan	libavcodec/h264data.h	/^static const uint8_t field_scan[16]={$/;"	v
field_scan8x8	libavcodec/h264.h	/^    uint8_t field_scan8x8[64];$/;"	m	struct:H264Context
field_scan8x8	libavcodec/h264data.h	/^static const uint8_t field_scan8x8[64]={$/;"	v
field_scan8x8_cavlc	libavcodec/h264.h	/^    uint8_t field_scan8x8_cavlc[64];$/;"	m	struct:H264Context
field_scan8x8_cavlc	libavcodec/h264data.h	/^static const uint8_t field_scan8x8_cavlc[64]={$/;"	v
field_scan8x8_cavlc_q0	libavcodec/h264.h	/^    const uint8_t *field_scan8x8_cavlc_q0;$/;"	m	struct:H264Context
field_scan8x8_q0	libavcodec/h264.h	/^    const uint8_t *field_scan8x8_q0;$/;"	m	struct:H264Context
field_scan_q0	libavcodec/h264.h	/^    const uint8_t *field_scan_q0;$/;"	m	struct:H264Context
field_select	libavcodec/mpegvideo.h	/^    int field_select[2][2];$/;"	m	struct:MpegEncContext
fields	libavcodec/ass_split.c	/^    ASSFields   fields[10];$/;"	m	struct:__anon145	file:
fields	libavfilter/libmpcodecs/mp_image.h	/^    int fields;$/;"	m	struct:mp_image
fields	libavformat/gxfenc.c	/^    int fields;$/;"	m	struct:GXFStreamContext	file:
fields_header	libavcodec/ass_split.c	/^    const char *fields_header;$/;"	m	struct:__anon145	file:
fields_per_frame	libavformat/gxf.c	/^    int32_t fields_per_frame;$/;"	m	struct:gxf_stream_info	file:
fifo	ffmpeg.c	/^    AVFifoBuffer *fifo;     \/* for compression: one audio fifo per codec *\/$/;"	m	struct:AVOutputStream	file:
fifo	ffmpeg/ffmpeg.c	/^    AVFifoBuffer *fifo;     \/* for compression: one audio fifo per codec *\/$/;"	m	struct:AVOutputStream	file:
fifo	libavformat/audiointerleave.h	/^    AVFifoBuffer *fifo;$/;"	m	struct:__anon342
fifo	libavformat/mpegenc.c	/^    AVFifoBuffer *fifo;$/;"	m	struct:__anon428	file:
fifo	libavformat/udp.c	/^    AVFifoBuffer *fifo;$/;"	m	struct:__anon320	file:
fifo_buf	libavcodec/flac_parser.c	/^    AVFifoBuffer *fifo_buf;        \/**< buffer to store all data until headers$/;"	m	struct:FLACParseContext	file:
fifo_size	libavformat/audiointerleave.h	/^    unsigned fifo_size;           \/\/\/< size of currently allocated FIFO$/;"	m	struct:__anon342
file	ffmpeg.c	/^    int  file;      \/\/< file index$/;"	m	struct:AVMetaDataMap	file:
file	ffmpeg/ffmpeg.c	/^    int  file;      \/\/< file index$/;"	m	struct:AVMetaDataMap	file:
file	libavfilter/libmpcodecs/vf_divtc.c	/^   FILE *file;$/;"	m	struct:vf_priv_s	file:
file	libavformat/avisynth.c	/^  PAVIFILE file;$/;"	m	struct:__anon475	file:
fileTest	libswscale/swscale-test.c	/^static int fileTest(uint8_t *ref[4], int refStride[4], int w, int h, FILE *fp,$/;"	f	file:
file_check	libavformat/file.c	/^static int file_check(URLContext *h, int mask)$/;"	f	file:
file_close	libavformat/file.c	/^static int file_close(URLContext *h)$/;"	f	file:
file_get_handle	libavformat/file.c	/^static int file_get_handle(URLContext *h)$/;"	f	file:
file_header	libavformat/dsicin.c	/^    CinFileHeader file_header;$/;"	m	struct:CinDemuxContext	file:
file_iformat	ffplay.c	/^static AVInputFormat *file_iformat;$/;"	v	file:
file_index	ffmpeg.c	/^    int file_index;          \/* file index *\/$/;"	m	struct:AVOutputStream	file:
file_index	ffmpeg.c	/^    int file_index;$/;"	m	struct:AVInputStream	file:
file_index	ffmpeg.c	/^    int file_index;$/;"	m	struct:AVStreamMap	file:
file_index	ffmpeg/ffmpeg.c	/^    int file_index;          \/* file index *\/$/;"	m	struct:AVOutputStream	file:
file_index	ffmpeg/ffmpeg.c	/^    int file_index;$/;"	m	struct:AVInputStream	file:
file_index	ffmpeg/ffmpeg.c	/^    int file_index;$/;"	m	struct:AVStreamMap	file:
file_log_ctx_class	libavutil/file.c	/^static const AVClass file_log_ctx_class = {$/;"	v	file:
file_name	libavfilter/vsrc_movie.c	/^    char *file_name;$/;"	m	struct:__anon38	file:
file_open	libavformat/file.c	/^static int file_open(URLContext *h, const char *filename, int flags)$/;"	f	file:
file_overwrite	ffmpeg.c	/^static int file_overwrite = 0;$/;"	v	file:
file_overwrite	ffmpeg/ffmpeg.c	/^static int file_overwrite = 0;$/;"	v	file:
file_read	libavformat/file.c	/^static int file_read(URLContext *h, unsigned char *buf, int size)$/;"	f	file:
file_seek	libavformat/file.c	/^static int64_t file_seek(URLContext *h, int64_t pos, int whence)$/;"	f	file:
file_size	libavformat/asf.h	/^    uint64_t file_size;         \/**< in bytes$/;"	m	struct:__anon400
file_size	libavformat/avformat.h	/^    int64_t file_size;$/;"	m	struct:AVFormatContext
file_size	libavformat/bink.c	/^    uint32_t file_size;$/;"	m	struct:__anon403	file:
file_size	libavformat/ffm.h	/^    int64_t write_index, file_size;$/;"	m	struct:FFMContext
file_size	libavformat/mtv.c	/^    unsigned int file_size;         \/\/\/< filesize, not always right$/;"	m	struct:MTVDemuxContext	file:
file_time	libavformat/gif.c	/^    int64_t time, file_time;$/;"	m	struct:__anon385	file:
file_write	libavformat/file.c	/^static int file_write(URLContext *h, const unsigned char *buf, int size)$/;"	f	file:
filename	ffplay.c	/^    char filename[1024];$/;"	m	struct:VideoState	file:
filename	ffserver.c	/^    char filename[1024];     \/* stream filename *\/$/;"	m	struct:FFStream	file:
filename	libavformat/avformat.h	/^    char filename[1024]; \/**< input or output filename *\/$/;"	m	struct:AVFormatContext
filename	libavformat/avformat.h	/^    const char *filename;$/;"	m	struct:AVProbeData
filename	libavformat/avio.h	/^    char *filename; \/**< specified URL *\/$/;"	m	struct:URLContext
filename	libavformat/isom.h	/^    char filename[64];$/;"	m	struct:__anon466
filename	libavformat/matroskadec.c	/^    char *filename;$/;"	m	struct:__anon362	file:
filename	libavformat/url.h	/^    char *filename;             \/**< specified URL *\/$/;"	m	struct:URLContext
filepos	libavformat/matroskaenc.c	/^    int64_t                 filepos;$/;"	m	struct:mkv_seekhead	file:
filesize	libavformat/http.c	/^    int64_t off, filesize;$/;"	m	struct:__anon462	file:
filesize_offset	libavformat/flvenc.c	/^    int64_t filesize_offset;$/;"	m	struct:FLVContext	file:
filetime_to_iso8601	libavformat/wtvdec.c	/^static void filetime_to_iso8601(char *buf, int buf_size, int64_t value)$/;"	f	file:
fileversion	libavcodec/apedec.c	/^    int fileversion;                         \/\/\/< codec version, very important in decoding process$/;"	m	struct:APEContext	file:
fileversion	libavformat/ape.c	/^    int16_t fileversion;$/;"	m	struct:__anon335	file:
fillPlane	libswscale/swscale_unscaled.c	/^static void fillPlane(uint8_t* plane, int stride, int width, int height, int y, uint8_t val)$/;"	f	file:
fill_all_stream_timings	libavformat/utils.c	/^static void fill_all_stream_timings(AVFormatContext *ic)$/;"	f	file:
fill_block16_c	libavcodec/dsputil.c	/^static void fill_block16_c(uint8_t *block, uint8_t value, int line_size, int h)$/;"	f	file:
fill_block8_c	libavcodec/dsputil.c	/^static void fill_block8_c(uint8_t *block, uint8_t value, int line_size, int h)$/;"	f	file:
fill_block_tab	libavcodec/dsputil.h	/^    op_fill_func fill_block_tab[2];$/;"	m	struct:DSPContext
fill_buffer	libavformat/aviobuf.c	/^static void fill_buffer(AVIOContext *s)$/;"	f	file:
fill_coding_method_array	libavcodec/qdm2.c	/^static void fill_coding_method_array (sb_int8_array tone_level_idx, sb_int8_array tone_level_idx_temp,$/;"	f	file:
fill_colmap	libavcodec/h264_direct.c	/^static void fill_colmap(H264Context *h, int map[2][16+32], int list, int field, int colfield, int mbafi){$/;"	f	file:
fill_decode_caches	libavcodec/h264.h	/^static void fill_decode_caches(H264Context *h, int mb_type){$/;"	f
fill_decode_neighbors	libavcodec/h264.h	/^static void fill_decode_neighbors(H264Context *h, int mb_type){$/;"	f
fill_filter_caches	libavcodec/h264.c	/^static int fill_filter_caches(H264Context *h, int mb_type){$/;"	f	file:
fill_gv_table	libswscale/yuv2rgb.c	/^static void fill_gv_table(int table[256], const int elemsize, const int inc)$/;"	f	file:
fill_iplimage_from_picref	libavfilter/vf_libopencv.c	/^static void fill_iplimage_from_picref(IplImage *img, const AVFilterBufferRef *picref, enum PixelFormat pixfmt)$/;"	f	file:
fill_level	libavcodec/aacpsy.c	/^    int fill_level;       \/\/\/< bit reservoir fill level$/;"	m	struct:AacPsyContext	file:
fill_noise_buffer	libavcodec/mlpdec.c	/^static void fill_noise_buffer(MLPDecodeContext *m, unsigned int substr)$/;"	f	file:
fill_order	libavcodec/tiff.c	/^    int fill_order;$/;"	m	struct:TiffContext	file:
fill_picref_from_iplimage	libavfilter/vf_libopencv.c	/^static void fill_picref_from_iplimage(AVFilterBufferRef *picref, const IplImage *img, enum PixelFormat pixfmt)$/;"	f	file:
fill_picture_entry	libavcodec/dxva2_h264.c	/^static void fill_picture_entry(DXVA_PicEntry_H264 *pic,$/;"	f	file:
fill_picture_parameters	libavcodec/dxva2_h264.c	/^static void fill_picture_parameters(struct dxva_context *ctx, const H264Context *h,$/;"	f	file:
fill_picture_parameters	libavcodec/dxva2_mpeg2.c	/^static void fill_picture_parameters(AVCodecContext *avctx,$/;"	f	file:
fill_picture_parameters	libavcodec/dxva2_vc1.c	/^static void fill_picture_parameters(AVCodecContext *avctx,$/;"	f	file:
fill_quantization_matrices	libavcodec/dxva2_mpeg2.c	/^static void fill_quantization_matrices(AVCodecContext *avctx,$/;"	f	file:
fill_random	libavcodec/motion-test.c	/^static void fill_random(uint8_t *tab, int size)$/;"	f	file:
fill_rectangle	ffplay.c	/^static inline void fill_rectangle(SDL_Surface *screen,$/;"	f	file:
fill_rectangle	libavcodec/rectangle.h	/^static av_always_inline void fill_rectangle(void *vp, int w, int h, int stride, uint32_t val, int size){$/;"	f
fill_scaling_lists	libavcodec/dxva2_h264.c	/^static void fill_scaling_lists(const H264Context *h, DXVA_Qmatrix_H264 *qm)$/;"	f	file:
fill_size	libavformat/tiertexseq.c	/^    int fill_size;$/;"	m	struct:TiertexSeqFrameBuffer	file:
fill_slice	libavcodec/dxva2_mpeg2.c	/^static void fill_slice(AVCodecContext *avctx,$/;"	f	file:
fill_slice	libavcodec/dxva2_vc1.c	/^static void fill_slice(AVCodecContext *avctx, DXVA_SliceInfo *slice,$/;"	f	file:
fill_slice_long	libavcodec/dxva2_h264.c	/^static void fill_slice_long(AVCodecContext *avctx, DXVA_Slice_H264_Long *slice,$/;"	f	file:
fill_slice_short	libavcodec/dxva2_h264.c	/^static void fill_slice_short(DXVA_Slice_H264_Short *slice,$/;"	f	file:
fill_table	libswscale/yuv2rgb.c	/^static void fill_table(uint8_t* table[256], const int elemsize, const int inc, void *y_tab)$/;"	f	file:
fill_tone_level_array	libavcodec/qdm2.c	/^static void fill_tone_level_array (QDM2Context *q, int flag)$/;"	f	file:
fill_vaapi_RefPicList	libavcodec/vaapi_h264.c	/^static void fill_vaapi_RefPicList(VAPictureH264 RefPicList[32],$/;"	f	file:
fill_vaapi_ReferenceFrames	libavcodec/vaapi_h264.c	/^static int fill_vaapi_ReferenceFrames(VAPictureParameterBufferH264 *pic_param,$/;"	f	file:
fill_vaapi_pic	libavcodec/vaapi_h264.c	/^static void fill_vaapi_pic(VAPictureH264 *va_pic,$/;"	f	file:
fill_vaapi_plain_pred_weight_table	libavcodec/vaapi_h264.c	/^static void fill_vaapi_plain_pred_weight_table(H264Context   *h,$/;"	f	file:
fill_yuv_image	doc/examples/muxing-example.c	/^static void fill_yuv_image(AVFrame *pict, int frame_index, int width, int height)$/;"	f	file:
filled_mv_blocks_num	libavcodec/xvmc.h	/^    int             filled_mv_blocks_num;$/;"	m	struct:xvmc_pix_fmt
filled_pkts	libavdevice/jack_audio.c	/^    AVFifoBuffer *  filled_pkts;$/;"	m	struct:__anon315	file:
film_probe	libavformat/segafilm.c	/^static int film_probe(AVProbeData *p)$/;"	f	file:
film_read_close	libavformat/segafilm.c	/^static int film_read_close(AVFormatContext *s)$/;"	f	file:
film_read_header	libavformat/segafilm.c	/^static int film_read_header(AVFormatContext *s,$/;"	f	file:
film_read_packet	libavformat/segafilm.c	/^static int film_read_packet(AVFormatContext *s,$/;"	f	file:
film_sample	libavformat/segafilm.c	/^} film_sample;$/;"	t	typeref:struct:__anon328	file:
filt_buf	libavcodec/sipr.h	/^    float filt_buf[2][LP_FILTER_ORDER_16k+1];$/;"	m	struct:__anon235
filt_mem	libavcodec/sipr.h	/^    float *filt_mem[2];$/;"	m	struct:__anon235
filtbuf	libavcodec/truespeech.c	/^    int filtbuf[146];   \/\/ some big vector used for storing filters$/;"	m	struct:__anon160	file:
filter	configure	/^filter(){$/;"	f
filter	libavcodec/avcodec.h	/^    int (*filter)(AVBitStreamFilterContext *bsfc,$/;"	m	struct:AVBitStreamFilter
filter	libavcodec/avcodec.h	/^    struct AVBitStreamFilter *filter;$/;"	m	struct:AVBitStreamFilterContext	typeref:struct:AVBitStreamFilterContext::AVBitStreamFilter
filter	libavcodec/mpegaudioenc.c	/^static void filter(MpegAudioContext *s, int ch, const short *samples, int incr)$/;"	f	file:
filter	libavcodec/tta.c	/^    TTAFilter filter;$/;"	m	struct:TTAChannel	file:
filter	libavcodec/vp56.h	/^    VP56Filter filter;$/;"	m	struct:vp56_context
filter	libavcodec/vp8.h	/^    } filter;$/;"	m	struct:__anon182	typeref:struct:__anon182::__anon184
filter	libavdevice/dshow.h	/^    libAVFilter *filter;$/;"	m	struct:libAVEnumPins
filter	libavdevice/dshow.h	/^    libAVFilter *filter;$/;"	m	struct:libAVPin
filter	libavfilter/avfilter.h	/^    AVFilter *filter;               \/\/\/< the AVFilter of which this is an instance$/;"	m	struct:AVFilterContext
filter	libavfilter/libmpcodecs/vf_fspp.c	/^static void filter(struct vf_priv_s *p, uint8_t *dst, uint8_t *src,$/;"	f	file:
filter	libavfilter/libmpcodecs/vf_gradfun.c	/^static void filter(struct vf_priv_s *ctx, uint8_t *dst, uint8_t *src,$/;"	f	file:
filter	libavfilter/libmpcodecs/vf_mcdeint.c	/^static void filter(struct vf_priv_s *p, uint8_t *dst[3], uint8_t *src[3], int dst_stride[3], int src_stride[3], int width, int height){$/;"	f	file:
filter	libavfilter/libmpcodecs/vf_ow.c	/^static void filter(struct vf_priv_s *p, uint8_t *dst, uint8_t *src, int dst_stride, int src_stride, int width, int height, int is_luma){$/;"	f	file:
filter	libavfilter/libmpcodecs/vf_pp7.c	/^static void filter(struct vf_priv_s *p, uint8_t *dst, uint8_t *src, int dst_stride, int src_stride, int width, int height, uint8_t *qp_store, int qp_stride, int is_luma){$/;"	f	file:
filter	libavfilter/libmpcodecs/vf_remove_logo.c	/^  pgm_structure * filter; \/* Stores the full-size filter image. This is used to tell what pixels are in the logo or not in the luma plane. *\/$/;"	m	struct:vf_priv_s	file:
filter	libavfilter/libmpcodecs/vf_spp.c	/^static void filter(struct vf_priv_s *p, uint8_t *dst, uint8_t *src, int dst_stride, int src_stride, int width, int height, uint8_t *qp_store, int qp_stride, int is_luma){$/;"	f	file:
filter	libavfilter/libmpcodecs/vf_uspp.c	/^static void filter(struct vf_priv_s *p, uint8_t *dst[3], uint8_t *src[3], int dst_stride[3], int src_stride[3], int width, int height, uint8_t *qp_store, int qp_stride){$/;"	f	file:
filter	libavfilter/vf_gradfun.c	/^static void filter(GradFunContext *ctx, uint8_t *dst, const uint8_t *src, int width, int height, int dst_linesize, int src_linesize, int r)$/;"	f	file:
filter	libavfilter/vf_yadif.c	/^static void filter(AVFilterContext *ctx, AVFilterBufferRef *dstpic,$/;"	f	file:
filter181	libavcodec/error_resilience.c	/^static void filter181(int16_t *data, int width, int height, int stride){$/;"	f	file:
filterA	libavcodec/apedec.c	/^    int32_t filterA[2];$/;"	m	struct:APEPredictor	file:
filterB	libavcodec/apedec.c	/^    int32_t filterB[2];$/;"	m	struct:APEPredictor	file:
filterContext	libavfilter/libmpcodecs/vf_smartblur.c	/^    struct SwsContext *filterContext;$/;"	m	struct:FilterParam	typeref:struct:FilterParam::SwsContext	file:
filter_bank	libavcodec/mpegaudiotab.h	/^static int16_t filter_bank[512];$/;"	v
filter_bank	libavcodec/resample2.c	/^    FELEM *filter_bank;$/;"	m	struct:AVResampleContext	file:
filter_changed	libavcodec/mlpdec.c	/^    int         filter_changed[MAX_CHANNELS][NUM_FILTERS];$/;"	m	struct:MLPDecodeContext	file:
filter_channel	libavcodec/mlpdec.c	/^static void filter_channel(MLPDecodeContext *m, unsigned int substr,$/;"	f	file:
filter_channels	libavcodec/resample.c	/^    int input_channels, output_channels, filter_channels;$/;"	m	struct:ReSampleContext	file:
filter_common	libavcodec/vp8dsp.c	/^static av_always_inline void filter_common(uint8_t *p, int stride, int is4tap)$/;"	f	file:
filter_count	libavfilter/avfiltergraph.h	/^    unsigned filter_count;$/;"	m	struct:AVFilterGraph
filter_ctx	libavfilter/avfiltergraph.h	/^    AVFilterContext *filter_ctx;$/;"	m	struct:AVFilterInOut
filter_frame	ffmpeg.c	/^    AVFrame *filter_frame;$/;"	m	struct:AVInputStream	file:
filter_frame	ffmpeg/ffmpeg.c	/^    AVFrame *filter_frame;$/;"	m	struct:AVInputStream	file:
filter_h2_shuf	libavcodec/x86/vp8dsp.asm	/^filter_h2_shuf:  db 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5,  6, 6,  7,  7,  8$/;"	d
filter_h4_shuf	libavcodec/x86/vp8dsp.asm	/^filter_h4_shuf:  db 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,  8, 8,  9,  9, 10$/;"	d
filter_h6_shuf1	libavcodec/x86/vp8dsp.asm	/^filter_h6_shuf1: db 0, 5, 1, 6, 2, 7, 3, 8, 4, 9, 5, 10, 6, 11,  7, 12$/;"	d
filter_h6_shuf2	libavcodec/x86/vp8dsp.asm	/^filter_h6_shuf2: db 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,  7, 7,  8,  8,  9$/;"	d
filter_h6_shuf3	libavcodec/x86/vp8dsp.asm	/^filter_h6_shuf3: db 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,  9, 9, 10, 10, 11$/;"	d
filter_header	libavcodec/vp56.h	/^    int filter_header;               \/* used in vp6 only *\/$/;"	m	struct:vp56_context
filter_init	libavfilter/vf_frei0r.c	/^static av_cold int filter_init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
filter_length	libavcodec/resample2.c	/^    int filter_length;$/;"	m	struct:AVResampleContext	file:
filter_level	libavcodec/vp8.h	/^        int8_t filter_level[4];     \/\/\/< base loop filter level$/;"	m	struct:__anon182::__anon183
filter_level	libavcodec/vp8.h	/^    uint8_t filter_level;$/;"	m	struct:__anon180
filter_level_for_mb	libavcodec/vp8.c	/^static av_always_inline void filter_level_for_mb(VP8Context *s, VP8Macroblock *mb, VP8FilterStrength *f )$/;"	f	file:
filter_limit_values	libavcodec/vp3.c	/^    uint8_t filter_limit_values[64];$/;"	m	struct:Vp3DecodeContext	file:
filter_line	libavfilter/gradfun.h	/^    void (*filter_line) (uint8_t *dst, const uint8_t *src, const uint16_t *dc, int width, int thresh, const uint16_t *dithers);$/;"	m	struct:__anon17
filter_line	libavfilter/libmpcodecs/vf_gradfun.c	/^    void (*filter_line)(uint8_t *dst, uint8_t *src, uint16_t *dc,$/;"	m	struct:vf_priv_s	file:
filter_line	libavfilter/vf_yadif.c	/^    void (*filter_line)(uint8_t *dst,$/;"	m	struct:__anon6	file:
filter_line_c	libavfilter/libmpcodecs/vf_gradfun.c	/^static void filter_line_c(uint8_t *dst, uint8_t *src, uint16_t *dc,$/;"	f	file:
filter_line_c	libavfilter/vf_yadif.c	/^static void filter_line_c(uint8_t *dst,$/;"	f	file:
filter_line_c_16bit	libavfilter/vf_yadif.c	/^static void filter_line_c_16bit(uint16_t *dst,$/;"	f	file:
filter_line_mmx2	libavfilter/libmpcodecs/vf_gradfun.c	/^static void filter_line_mmx2(uint8_t *dst, uint8_t *src, uint16_t *dc,$/;"	f	file:
filter_line_ssse3	libavfilter/libmpcodecs/vf_gradfun.c	/^static void filter_line_ssse3(uint8_t *dst, uint8_t *src, uint16_t *dc,$/;"	f	file:
filter_mb	libavcodec/vp8.c	/^static av_always_inline void filter_mb(VP8Context *s, uint8_t *dst[3], VP8FilterStrength *f, int mb_x, int mb_y)$/;"	f	file:
filter_mb_dir	libavcodec/h264_loopfilter.c	/^static av_always_inline void filter_mb_dir(H264Context *h, int mb_x, int mb_y, uint8_t *img_y, uint8_t *img_cb, uint8_t *img_cr, unsigned int linesize, unsigned int uvlinesize, int mb_xy, int mb_type, int mvy_limit, int first_vertical_edge_done, int chroma, int chroma444, int dir) {$/;"	f	file:
filter_mb_edgech	libavcodec/h264_loopfilter.c	/^static void av_always_inline filter_mb_edgech( uint8_t *pix, int stride, int16_t bS[4], unsigned int qp, H264Context *h ) {$/;"	f	file:
filter_mb_edgecv	libavcodec/h264_loopfilter.c	/^static void av_always_inline filter_mb_edgecv( uint8_t *pix, int stride, int16_t bS[4], unsigned int qp, H264Context *h ) {$/;"	f	file:
filter_mb_edgeh	libavcodec/h264_loopfilter.c	/^static void av_always_inline filter_mb_edgeh( uint8_t *pix, int stride, int16_t bS[4], unsigned int qp, H264Context *h ) {$/;"	f	file:
filter_mb_edgev	libavcodec/h264_loopfilter.c	/^static void av_always_inline filter_mb_edgev( uint8_t *pix, int stride, int16_t bS[4], unsigned int qp, H264Context *h) {$/;"	f	file:
filter_mb_mbaff_edgecv	libavcodec/h264_loopfilter.c	/^static void filter_mb_mbaff_edgecv( H264Context *h, uint8_t *pix, int stride, int16_t bS[7], int bsi, int qp ) {$/;"	f	file:
filter_mb_mbaff_edgev	libavcodec/h264_loopfilter.c	/^static void filter_mb_mbaff_edgev( H264Context *h, uint8_t *pix, int stride, int16_t bS[7], int bsi, int qp ) {$/;"	f	file:
filter_mb_row	libavcodec/vp8.c	/^static void filter_mb_row(VP8Context *s, AVFrame *curframe, int mb_y)$/;"	f	file:
filter_mb_row_simple	libavcodec/vp8.c	/^static void filter_mb_row_simple(VP8Context *s, AVFrame *curframe, int mb_y)$/;"	f	file:
filter_mb_simple	libavcodec/vp8.c	/^static av_always_inline void filter_mb_simple(VP8Context *s, uint8_t *dst, VP8FilterStrength *f, int mb_x, int mb_y)$/;"	f	file:
filter_mbedge	libavcodec/vp8dsp.c	/^static av_always_inline void filter_mbedge(uint8_t *p, int stride)$/;"	f	file:
filter_mode	libavcodec/vp56.h	/^    int filter_mode;$/;"	m	struct:vp56_context
filter_name	libavfilter/avfilter.c	/^static const char *filter_name(void *p)$/;"	f	file:
filter_out	configure	/^filter_out(){$/;"	f
filter_params	libavcodec/mlp.h	/^    FilterParams filter_params[NUM_FILTERS];$/;"	m	struct:__anon78
filter_samples	libavcodec/g722.c	/^static inline void filter_samples(G722Context *c, const int16_t *samples,$/;"	f	file:
filter_samples	libavfilter/avfilter.h	/^    void (*filter_samples)(AVFilterLink *link, AVFilterBufferRef *samplesref);$/;"	m	struct:AVFilterPad
filter_selection	libavcodec/vp56.h	/^    int filter_selection;$/;"	m	struct:vp56_context
filter_source	libavformat/rtsp.h	/^    int filter_source;$/;"	m	struct:RTSPState
filter_strength	libavcodec/vp8.h	/^    VP8FilterStrength *filter_strength;$/;"	m	struct:__anon182
filter_time	libavfilter/libmpcodecs/vf_filmdint.c	/^    double diff_time, merge_time, decode_time, vo_time, filter_time;$/;"	m	struct:vf_priv_s	file:
filter_type	libavcodec/png.h	/^    int filter_type;$/;"	m	struct:PNGDecContext
filter_type	libavcodec/pngenc.c	/^    int filter_type;$/;"	m	struct:PNGEncContext	file:
filter_value	libavcodec/gsmdec_template.c	/^static int filter_value(int in, int rrp[8], int v[9])$/;"	f	file:
filterbuf	libavcodec/apedec.c	/^    int16_t* filterbuf[APE_FILTER_LEVELS];   \/\/\/< filter memory$/;"	m	struct:APEContext	file:
filters	libavcodec/apedec.c	/^    APEFilter filters[APE_FILTER_LEVELS][2]; \/\/\/< filters used for reconstruction$/;"	m	struct:APEContext	file:
filters	libavcodec/truespeech.c	/^    int16_t filters[32]; \/\/ filters for every subframe$/;"	m	struct:__anon160	file:
filters	libavfilter/avfiltergraph.h	/^    AVFilterContext **filters;$/;"	m	struct:AVFilterGraph
filters	libavfilter/vf_mp.c	/^static const vf_info_t* const filters[]={$/;"	v	file:
filters	libpostproc/postprocess.c	/^static struct PPFilter filters[]=$/;"	v	typeref:struct:PPFilter	file:
filtval	libavcodec/truespeech.c	/^    int filtval;        \/\/ gain value for one function$/;"	m	struct:__anon160	file:
final_packet_duration	libavformat/oggparsespeex.c	/^    int final_packet_duration;$/;"	m	struct:speex_params	file:
finalframeblocks	libavformat/ape.c	/^    uint32_t finalframeblocks;$/;"	m	struct:__anon335	file:
finalize_packet	libavformat/rtpdec.c	/^static void finalize_packet(RTPDemuxContext *s, AVPacket *pkt, uint32_t timestamp)$/;"	f	file:
findCode	libavcodec/lzwenc.c	/^static inline int findCode(LZWEncodeState * s, uint8_t c, int hash_prefix)$/;"	f	file:
find_and_decode_index	libavformat/nutdec.c	/^static int find_and_decode_index(NUTContext *nut){$/;"	f	file:
find_any_startcode	libavformat/nutdec.c	/^static uint64_t find_any_startcode(AVIOContext *bc, int64_t pos){$/;"	f	file:
find_best	libavcodec/nellymoserenc.c	179;"	d	file:
find_best	libavfilter/libmpcodecs/vf_palette.c	/^static unsigned int find_best(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
find_best	libavfilter/libmpcodecs/vf_remove_logo.c	/^static unsigned int find_best(struct vf_instance *vf){$/;"	f	file:
find_best_header_idx	libavformat/nutenc.c	/^static int find_best_header_idx(NUTContext *nut, AVPacket *pkt){$/;"	f	file:
find_best_state	libavcodec/ffv1.c	/^static void find_best_state(uint8_t best_state[256][256], const uint8_t one_state[256]){$/;"	f	file:
find_best_tables	libavcodec/msmpeg4.c	/^static void find_best_tables(MpegEncContext * s)$/;"	f	file:
find_best_vect	libavcodec/ra144enc.c	/^static void find_best_vect(float *work, const float *coefs,$/;"	f	file:
find_breaks	libavfilter/libmpcodecs/vf_filmdint.c	/^find_breaks(struct vf_priv_s *p, struct frame_stats *s)$/;"	f	file:
find_codec_or_die	ffmpeg.c	/^static enum CodecID find_codec_or_die(const char *name, int type, int encoder, int strict)$/;"	f	file:
find_codec_or_die	ffmpeg/ffmpeg.c	/^static enum CodecID find_codec_or_die(const char *name, int type, int encoder, int strict)$/;"	f	file:
find_expected_header	libavformat/nutenc.c	/^static int find_expected_header(AVCodecContext *c, int size, int key_frame, uint8_t out[64]){$/;"	f	file:
find_first_break	libavfilter/libmpcodecs/pullup.c	/^static int find_first_break(struct pullup_field *f, int max)$/;"	f	file:
find_frame_end	libavcodec/dirac_parser.c	/^static int find_frame_end(DiracParseContext *pc,$/;"	f	file:
find_frame_end	libavcodec/mjpeg_parser.c	/^static int find_frame_end(ParseContext *pc, const uint8_t *buf, int buf_size){$/;"	f	file:
find_frame_rate_index	libavcodec/mpeg12enc.c	/^static int find_frame_rate_index(MpegEncContext *s){$/;"	f	file:
find_group3_syncmarker	libavcodec/faxcompr.c	/^static int find_group3_syncmarker(GetBitContext *gb, int srcsize)$/;"	f	file:
find_guid	libavformat/wav.c	/^static int64_t find_guid(AVIOContext *pb, const uint8_t guid1[16])$/;"	f	file:
find_hb_gain	libavcodec/amrwbdec.c	/^static float find_hb_gain(AMRWBContext *ctx, const float *synth,$/;"	f	file:
find_header_idx	libavformat/nutenc.c	/^static int find_header_idx(AVFormatContext *s, AVCodecContext *c, int size, int frame_type){$/;"	f	file:
find_headers_search	libavcodec/flac_parser.c	/^static int find_headers_search(FLACParseContext *fpc, uint8_t *buf, int buf_size,$/;"	f	file:
find_headers_search_validate	libavcodec/flac_parser.c	/^static int find_headers_search_validate(FLACParseContext *fpc, int offset)$/;"	f	file:
find_image_range	libavformat/img2.c	/^static int find_image_range(int *pfirst_index, int *plast_index,$/;"	f	file:
find_info_tag	libavformat/utils.c	/^int find_info_tag(char *arg, int arg_size, const char *tag1, const char *info)$/;"	f
find_marker	libavcodec/mjpegdec.c	/^static int find_marker(const uint8_t **pbuf_ptr, const uint8_t *buf_end)$/;"	f	file:
find_max_val	libavcodec/aaccoder.c	/^static float find_max_val(int group_len, int swb_size, const float *scaled) {$/;"	f	file:
find_min_book	libavcodec/aaccoder.c	/^static int find_min_book(float maxval, int sf) {$/;"	f	file:
find_new_headers	libavcodec/flac_parser.c	/^static int find_new_headers(FLACParseContext *fpc, int search_start)$/;"	f	file:
find_next_marker	libavcodec/vc1.h	/^static av_always_inline const uint8_t* find_next_marker(const uint8_t *src, const uint8_t *end)$/;"	f
find_next_start_code	libavformat/mpeg.c	/^static int find_next_start_code(AVIOContext *pb, int *size_ptr,$/;"	f	file:
find_optimal_param	libavcodec/flacenc.c	/^static int find_optimal_param(uint32_t sum, int n)$/;"	f	file:
find_option	cmdutils.c	/^static const OptionDef* find_option(const OptionDef *po, const char *name){$/;"	f	file:
find_option	ffmpeg/cmdutils.c	/^static const OptionDef* find_option(const OptionDef *po, const char *name){$/;"	f	file:
find_program_from_stream	libavformat/utils.c	/^static AVProgram *find_program_from_stream(AVFormatContext *ic, int s)$/;"	f	file:
find_record	libavformat/anm.c	/^static int find_record(const AnmDemuxContext *anm, int record)$/;"	f	file:
find_ref_index	libavfilter/formats.c	/^static int find_ref_index(AVFilterFormats **ref)$/;"	f	file:
find_reorder_func	libavdevice/alsa-audio-common.c	/^static av_cold ff_reorder_func find_reorder_func(int codec_id,$/;"	f	file:
find_resync_marker_reverse	libavformat/rtpenc_h263.c	/^static const uint8_t *find_resync_marker_reverse(const uint8_t *restrict start,$/;"	f	file:
find_rtp_session	ffserver.c	/^static HTTPContext *find_rtp_session(const char *session_id)$/;"	f	file:
find_rtp_session_with_url	ffserver.c	/^static HTTPContext *find_rtp_session_with_url(const char *url,$/;"	f	file:
find_sample_match	libavformat/movenchint.c	/^static int find_sample_match(const uint8_t *data, int len,$/;"	f	file:
find_scale_factor7	libavcodec/dcaenc.c	/^static inline int find_scale_factor7(int64_t max_value, int bits)$/;"	f	file:
find_short	libavcodec/h264_refs.c	/^static Picture * find_short(H264Context *h, int frame_num, int *idx){$/;"	f	file:
find_smallest_bounding_rectangle	libavcodec/dvdsubdec.c	/^static int find_smallest_bounding_rectangle(AVSubtitle *s)$/;"	f	file:
find_sse	libavcodec/snow.c	/^static void find_sse(SnowContext *s, Plane *p, int *score, int score_stride, IDWTELEM *r0, IDWTELEM *r1, int level, int orientation){$/;"	f	file:
find_startcode	libavformat/nutdec.c	/^static int64_t find_startcode(AVIOContext *bc, uint64_t code, int64_t pos){$/;"	f	file:
find_stream_in_feed	ffserver.c	/^static int find_stream_in_feed(FFStream *feed, AVCodecContext *codec, int bit_rate)$/;"	f	file:
find_subframe_rice_params	libavcodec/flacenc.c	/^static uint32_t find_subframe_rice_params(FlacEncodeContext *s,$/;"	f	file:
find_tag	libavformat/wav.c	/^static int64_t find_tag(AVIOContext *pb, uint32_t tag1)$/;"	f	file:
find_tests	configure	/^find_tests(){$/;"	f
find_things	configure	/^find_things(){$/;"	f
find_transport	ffserver.c	/^static RTSPTransportField *find_transport(RTSPMessageHeader *h, enum RTSPLowerTransport lower_transport)$/;"	f	file:
fine_snr_offset	libavcodec/ac3enc.h	/^    int fine_snr_offset[AC3_MAX_CHANNELS];  \/\/\/< fine SNR offsets                       (fsnroffst)$/;"	m	struct:AC3EncodeContext
finished	libavformat/applehttp.c	/^    int finished;$/;"	m	struct:variant	file:
finished	libavformat/applehttpproto.c	/^    int finished;$/;"	m	struct:AppleHTTPContext	file:
finterpflag	libavcodec/vc1.h	/^    int finterpflag;      \/\/\/< INTERPFRM present$/;"	m	struct:VC1Context
first	ffserver.c	/^    struct in_addr first;$/;"	m	struct:IPAddressACL	typeref:struct:IPAddressACL::in_addr	file:
first	libavcodec/binkaudio.c	/^    int first;$/;"	m	struct:__anon136	file:
first	libavfilter/libmpcodecs/pullup.h	/^    struct pullup_field *first, *last, *head;$/;"	m	struct:pullup_context	typeref:struct:pullup_context::pullup_field
first	libavfilter/libmpcodecs/vf_ivtc.c	/^    int first;$/;"	m	struct:vf_priv_s	file:
first	libavformat/isom.h	/^    int first;$/;"	m	struct:__anon465
first16bits	libavcodec/qcelpdec.c	/^    uint16_t first16bits;$/;"	m	struct:__anon225	file:
first_avcodec	libavcodec/utils.c	/^static AVCodec *first_avcodec = NULL;$/;"	v	file:
first_bitstream_filter	libavcodec/bitstream_filter.c	/^static AVBitStreamFilter *first_bitstream_filter= NULL;$/;"	v	file:
first_clear_frame	libavdevice/dv1394.h	/^        unsigned int first_clear_frame;$/;"	m	struct:dv1394_status
first_color	libavcodec/yop.c	/^    int first_color[2];$/;"	m	struct:YopDecContext	file:
first_cpl_coords	libavcodec/ac3dec.h	/^    int first_cpl_coords[AC3_MAX_CHANNELS]; \/\/\/< first coupling coordinates states      (firstcplcos)$/;"	m	struct:__anon88
first_cpl_leak	libavcodec/ac3dec.h	/^    int first_cpl_leak;                             \/\/\/< first coupling leak state      (firstcplleak)$/;"	m	struct:__anon88
first_dts	libavformat/avformat.h	/^    int64_t first_dts;$/;"	m	struct:AVStream
first_feed	ffserver.c	/^static FFStream *first_feed;   \/* contains only feeds *\/$/;"	v	file:
first_field	libavcodec/mpegvideo.h	/^    int first_field;         \/\/\/< is 1 for the first field of a field picture 0 otherwise$/;"	m	struct:MpegEncContext
first_field	libavdevice/v4l2.c	/^static int first_field(int fd)$/;"	f	file:
first_field	libavformat/gxf.c	/^    int64_t first_field;$/;"	m	struct:gxf_stream_info	file:
first_frame	libavcodec/amrwbdec.c	/^    uint8_t                          first_frame; \/\/\/< flag active during decoding of the first frame$/;"	m	struct:__anon64	file:
first_frame	libavcodec/roqvideo.h	/^    int first_frame;$/;"	m	struct:RoqContext
first_frame	libavcodec/vorbisdec.c	/^    uint8_t       first_frame;$/;"	m	struct:vorbis_context_s	file:
first_frame	libavformat/thp.c	/^    int              first_frame;$/;"	m	struct:ThpDemuxContext	file:
first_frame_done	libavcodec/aac_adtstoasc_bsf.c	/^    int first_frame_done;$/;"	m	struct:AACBSFContext	file:
first_framesz	libavformat/thp.c	/^    int              first_framesz;$/;"	m	struct:ThpDemuxContext	file:
first_gop_closed	libavformat/gxfenc.c	/^    int first_gop_closed;$/;"	m	struct:GXFStreamContext	file:
first_http_ctx	ffserver.c	/^static HTTPContext *first_http_ctx;$/;"	v	file:
first_hwaccel	libavcodec/utils.c	/^static AVHWAccel *first_hwaccel = NULL;$/;"	v	file:
first_idr	libavcodec/h264_mp4toannexb_bsf.c	/^    uint8_t  first_idr;$/;"	m	struct:H264BSFContext	file:
first_iformat	libavformat/utils.c	/^static AVInputFormat *first_iformat = NULL;$/;"	v	file:
first_oformat	libavformat/utils.c	/^static AVOutputFormat *first_oformat = NULL;$/;"	v	file:
first_packet	libavformat/applehttp.c	/^    int first_packet;$/;"	m	struct:AppleHTTPContext	file:
first_packet	libavformat/ffm.h	/^    int first_packet; \/* true if first packet, needed to set the discontinuity tag *\/$/;"	m	struct:FFMContext
first_packet	libavformat/rtpdec.h	/^    int first_packet;$/;"	m	struct:RTPDemuxContext
first_packet	libavformat/rtpenc.h	/^    int first_packet;$/;"	m	struct:RTPMuxContext
first_pattern	libavcodec/rv34.h	/^    VLC first_pattern[4];  \/\/\/< VLCs used for decoding coefficients in the first subblock$/;"	m	struct:RV34VLC
first_pcr	libavformat/mpegtsenc.c	/^    int64_t first_pcr;$/;"	m	struct:MpegTSWrite	file:
first_picture	libavcodec/mjpegdec.h	/^    int first_picture;    \/* true if decoding first picture *\/$/;"	m	struct:MJpegDecodeContext
first_picture	libavcodec/parser.h	/^    int first_picture;$/;"	m	struct:ParseContext1
first_pkt	ffplay.c	/^    AVPacketList *first_pkt, *last_pkt;$/;"	m	struct:PacketQueue	file:
first_protocol	libavformat/avio.c	/^URLProtocol *first_protocol = NULL;$/;"	v
first_pts	ffserver.c	/^    int64_t first_pts;            \/* initial pts value *\/$/;"	m	struct:HTTPContext	file:
first_pts_check	libavformat/mpegtsenc.c	/^    int first_pts_check; \/\/\/< first pts check needed$/;"	m	struct:MpegTSWriteStream	file:
first_rtcp_ntp_time	libavformat/rtpdec.h	/^    int64_t first_rtcp_ntp_time;   \/\/ TODO: move into statistics$/;"	m	struct:RTPDemuxContext
first_rtcp_ntp_time	libavformat/rtpenc.h	/^    int64_t first_rtcp_ntp_time;   \/\/ TODO: move into statistics$/;"	m	struct:RTPMuxContext
first_slice	libavcodec/mpegvideo.h	/^    int first_slice;$/;"	m	struct:MpegEncContext
first_slice_line	libavcodec/mpegvideo.h	/^    int first_slice_line;  \/\/\/< used in mpeg4 too to handle resync markers$/;"	m	struct:MpegEncContext
first_spx_coords	libavcodec/ac3dec.h	/^    uint8_t first_spx_coords[AC3_MAX_CHANNELS]; \/\/\/< first spx coordinates states           (firstspxcos)$/;"	m	struct:__anon88
first_stream	ffserver.c	/^static FFStream *first_stream; \/* contains all streams, including feeds *\/$/;"	v	file:
first_ts	libavformat/seek.c	/^    int64_t     first_ts;    \/\/\/< first packet timestamp in this iteration (to fill term_ts later)$/;"	m	struct:__anon438	file:
first_ts_tb	libavformat/seek.c	/^    AVRational  first_ts_tb; \/\/\/< timebase for first_ts$/;"	m	struct:__anon438	file:
firstchincpl	libavcodec/ac3dec.h	/^    int firstchincpl;                       \/\/\/< first channel in coupling$/;"	m	struct:__anon88
firstframe	libavformat/ape.c	/^    uint32_t firstframe;$/;"	m	struct:__anon335	file:
firtable	libavcodec/x86/mlpdsp.c	/^static const void *firtable[9] = { &ff_mlp_firorder_0, &ff_mlp_firorder_1,$/;"	v	file:
fix_bitshift	libavcodec/shorten.c	/^static void fix_bitshift(ShortenContext *s, int32_t *buffer)$/;"	f	file:
fix_coding_method_array	libavcodec/qdm2.c	/^static void fix_coding_method_array (int sb, int channels, sb_int8_array coding_method)$/;"	f	file:
fixed_cb_search	libavcodec/ra144enc.c	/^static void fixed_cb_search(float *work, const float *coefs, float *data,$/;"	f	file:
fixed_coef	libavcodec/ac3enc.h	/^    int32_t  **fixed_coef;                      \/\/\/< fixed-point MDCT coefficients$/;"	m	struct:AC3Block
fixed_coef_buffer	libavcodec/ac3enc.h	/^    int32_t *fixed_coef_buffer;$/;"	m	struct:AC3EncodeContext
fixed_frame_rate_flag	libavcodec/h264.h	/^    int fixed_frame_rate_flag;$/;"	m	struct:SPS
fixed_gain	libavcodec/amrnbdata.h	/^    uint16_t fixed_gain; \/\/\/< index to decode the fixed gain factor, for MODE_12k2 and MODE_7k95$/;"	m	struct:__anon283
fixed_gain	libavcodec/amrnbdec.c	/^    float                     fixed_gain[5]; \/\/\/< quantified fixed gains for the current and previous four subframes$/;"	m	struct:AMRContext	file:
fixed_gain	libavcodec/amrwbdec.c	/^    float                          fixed_gain[2]; \/\/\/< quantified fixed gains for the current and previous subframes$/;"	m	struct:__anon64	file:
fixed_gain_smooth	libavcodec/amrnbdec.c	/^static float fixed_gain_smooth(AMRContext *p , const float *lsf,$/;"	f	file:
fixed_mode	libavfilter/libmpcodecs/vf_phase.c	37;"	d	file:
fixed_motion_vector_table	libavcodec/vp3data.h	/^static const int8_t fixed_motion_vector_table[64] = {$/;"	v
fixed_point	libavcodec/ac3enc.h	/^    int fixed_point;                        \/\/\/< indicates if fixed-point encoder is being used$/;"	m	struct:AC3EncodeContext
fixed_qscale	libavcodec/mpegvideo.h	/^    int fixed_qscale; \/\/\/< fixed qscale if non zero$/;"	m	struct:MpegEncContext
fixed_smr	libavcodec/mpegaudiotab.h	/^static const float fixed_smr[SBLIMIT] =  {$/;"	v
fixed_vector	libavcodec/amrnbdec.c	/^    float   fixed_vector[AMR_SUBFRAME_SIZE]; \/\/\/< algebraic codebook (fixed) vector (must be kept zero between frames)$/;"	m	struct:AMRContext	file:
fixed_vector	libavcodec/amrwbdec.c	/^    float           fixed_vector[AMRWB_SFR_SIZE]; \/\/\/< algebraic codebook (fixed) vector for current subframe$/;"	m	struct:__anon64	file:
fixinfo	libavdevice/fbdev.c	/^    struct fb_fix_screeninfo fixinfo; \/\/\/< fixed    info;$/;"	m	struct:__anon314	typeref:struct:__anon314::fb_fix_screeninfo	file:
fixup_vorbis_headers	libavformat/oggparsevorbis.c	/^fixup_vorbis_headers(AVFormatContext * as, struct oggvorbis_private *priv,$/;"	f	file:
flac_decode_close	libavcodec/flacdec.c	/^static av_cold int flac_decode_close(AVCodecContext *avctx)$/;"	f	file:
flac_decode_frame	libavcodec/flacdec.c	/^static int flac_decode_frame(AVCodecContext *avctx,$/;"	f	file:
flac_decode_init	libavcodec/flacdec.c	/^static av_cold int flac_decode_init(AVCodecContext *avctx)$/;"	f	file:
flac_encode_close	libavcodec/flacenc.c	/^static av_cold int flac_encode_close(AVCodecContext *avctx)$/;"	f	file:
flac_encode_frame	libavcodec/flacenc.c	/^static int flac_encode_frame(AVCodecContext *avctx, uint8_t *frame,$/;"	f	file:
flac_encode_init	libavcodec/flacenc.c	/^static av_cold int flac_encode_init(AVCodecContext *avctx)$/;"	f	file:
flac_encoder_class	libavcodec/flacenc.c	/^static const AVClass flac_encoder_class = {$/;"	v	file:
flac_fifo_read	libavcodec/flac_parser.c	/^static uint8_t* flac_fifo_read(FLACParseContext *fpc, int offset, int *len)$/;"	f	file:
flac_fifo_read_wrap	libavcodec/flac_parser.c	/^static uint8_t* flac_fifo_read_wrap(FLACParseContext *fpc, int offset, int len,$/;"	f	file:
flac_header	libavformat/oggparseflac.c	/^flac_header (AVFormatContext * s, int idx)$/;"	f	file:
flac_parse	libavcodec/flac_parser.c	/^static int flac_parse(AVCodecParserContext *s, AVCodecContext *avctx,$/;"	f	file:
flac_parse_close	libavcodec/flac_parser.c	/^static void flac_parse_close(AVCodecParserContext *c)$/;"	f	file:
flac_parse_init	libavcodec/flac_parser.c	/^static int flac_parse_init(AVCodecParserContext *c)$/;"	f	file:
flac_probe	libavformat/flacdec.c	/^static int flac_probe(AVProbeData *p)$/;"	f	file:
flac_read_header	libavformat/flacdec.c	/^static int flac_read_header(AVFormatContext *s,$/;"	f	file:
flac_write_block_comment	libavformat/flacenc.c	/^static int flac_write_block_comment(AVIOContext *pb, AVDictionary **m,$/;"	f	file:
flac_write_block_padding	libavformat/flacenc.c	/^static int flac_write_block_padding(AVIOContext *pb, unsigned int n_padding_bytes,$/;"	f	file:
flac_write_header	libavformat/flacenc.c	/^static int flac_write_header(struct AVFormatContext *s)$/;"	f	file:
flac_write_packet	libavformat/flacenc.c	/^static int flac_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
flac_write_trailer	libavformat/flacenc.c	/^static int flac_write_trailer(struct AVFormatContext *s)$/;"	f	file:
flag	libavcodec/truespeech.c	/^    int flag;           \/\/< 1-bit flag, shows how to choose filters$/;"	m	struct:__anon160	file:
flag	libavformat/nut.h	/^    int flag;$/;"	m	struct:__anon495
flag_default	libavformat/matroskadec.c	/^    uint64_t flag_default;$/;"	m	struct:__anon361	file:
flag_forced	libavformat/matroskadec.c	/^    uint64_t flag_forced;$/;"	m	struct:__anon361	file:
flags	cmdutils.h	/^    int flags;$/;"	m	struct:__anon290
flags	ffmpeg/cmdutils.h	/^    int flags;$/;"	m	struct:__anon288
flags	libavcodec/apedec.c	/^    int flags;                               \/\/\/< global decoder flags$/;"	m	struct:APEContext	file:
flags	libavcodec/avcodec.h	/^    int   flags;$/;"	m	struct:AVPacket
flags	libavcodec/avcodec.h	/^    int flags;$/;"	m	struct:AVCodecContext
flags	libavcodec/avcodec.h	/^    int flags;$/;"	m	struct:AVCodecParserContext
flags	libavcodec/cavs.h	/^    int flags;         \/\/\/< availability flags of neighbouring macroblocks$/;"	m	struct:__anon207
flags	libavcodec/ffv1.c	/^    int flags;$/;"	m	struct:FFV1Context	file:
flags	libavcodec/flashsv2enc.c	/^    uint8_t flags;$/;"	m	struct:Block	file:
flags	libavcodec/flashsv2enc.c	/^    uint8_t flags;$/;"	m	struct:FlashSV2Context	file:
flags	libavcodec/huffyuv.c	/^    int flags;$/;"	m	struct:HYuvContext	file:
flags	libavcodec/iff.c	/^    unsigned  flags;        \/\/\/< 1 for EHB, 0 is no extra half darkening$/;"	m	struct:__anon114	file:
flags	libavcodec/j2k.h	/^    int flags[J2K_MAX_CBLKW+2][J2K_MAX_CBLKH+2];$/;"	m	struct:__anon209
flags	libavcodec/lcldec.c	/^    int flags;$/;"	m	struct:LclDecContext	file:
flags	libavcodec/lclenc.c	/^    int flags;$/;"	m	struct:LclEncContext	file:
flags	libavcodec/libvpxenc.c	/^    int flags;$/;"	m	struct:VP8EncoderContext	file:
flags	libavcodec/libvpxenc.c	/^    uint32_t flags;                  \/**< flags for this frame *\/$/;"	m	struct:FrameListData	file:
flags	libavcodec/mpegvideo.h	/^    int flags;        \/\/\/< AVCodecContext.flags (HQ, MV4, ...)$/;"	m	struct:MpegEncContext
flags	libavcodec/mpegvideo.h	/^    int flags;$/;"	m	struct:MotionEstContext
flags	libavcodec/truemotion1.c	/^    int flags;$/;"	m	struct:TrueMotion1Context	file:
flags	libavcodec/truemotion1.c	/^    uint8_t flags;$/;"	m	struct:frame_header	file:
flags	libavcodec/tta.c	/^    int flags, channels, bps, is_float, data_length;$/;"	m	struct:TTAContext	file:
flags	libavcodec/xvmc.h	/^    unsigned int    flags;$/;"	m	struct:xvmc_pix_fmt
flags	libavcodec/zmbv.c	/^    int flags;$/;"	m	struct:ZmbvContext	file:
flags	libavfilter/libmpcodecs/mp_image.h	/^    unsigned int flags;$/;"	m	struct:mp_image
flags	libavfilter/libmpcodecs/pullup.h	/^    unsigned int flags;$/;"	m	struct:pullup_field
flags	libavfilter/vf_scale.c	/^    unsigned int flags;         \/\/\/sws flags$/;"	m	struct:__anon18	file:
flags	libavformat/asf.h	/^    uint32_t flags;             \/**< 0x01 - broadcast$/;"	m	struct:__anon400
flags	libavformat/avformat.h	/^    int            flags;$/;"	m	struct:AVProgram
flags	libavformat/avformat.h	/^    int flags:2;$/;"	m	struct:AVIndexEntry
flags	libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVFormatContext
flags	libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVInputFormat
flags	libavformat/avformat.h	/^    int flags;$/;"	m	struct:AVOutputFormat
flags	libavformat/avienc.c	/^    unsigned int flags, pos, len;$/;"	m	struct:AVIIentry	file:
flags	libavformat/avio.h	/^    int flags;$/;"	m	struct:URLContext
flags	libavformat/avio.h	/^    int flags;$/;"	m	struct:URLProtocol
flags	libavformat/gxfenc.c	/^    int flags;$/;"	m	struct:GXFContext	file:
flags	libavformat/iff.c	/^    unsigned  flags;        \/\/\/< 1 for EHB, 0 is no extra half darkening$/;"	m	struct:__anon395	file:
flags	libavformat/isom.h	/^    unsigned flags;$/;"	m	struct:__anon468
flags	libavformat/isom.h	/^    unsigned flags;$/;"	m	struct:__anon469
flags	libavformat/movenc.h	/^    int flags;$/;"	m	struct:MOVMuxContext
flags	libavformat/movenc.h	/^    uint32_t     flags;$/;"	m	struct:MOVIentry
flags	libavformat/movenc.h	/^    uint32_t    flags;$/;"	m	struct:MOVIndex
flags	libavformat/mpegenc.c	/^    int flags;$/;"	m	struct:PacketDesc	file:
flags	libavformat/mxfenc.c	/^    uint8_t flags;$/;"	m	struct:__anon457	file:
flags	libavformat/nut.h	/^    uint16_t flags;$/;"	m	struct:__anon491
flags	libavformat/oggdec.h	/^    int flags;$/;"	m	struct:ogg_stream
flags	libavformat/oggenc.c	/^    uint8_t flags;$/;"	m	struct:__anon379	file:
flags	libavformat/rtpenc.h	/^    int flags;$/;"	m	struct:RTPMuxContext
flags	libavformat/siff.c	/^    int flags;$/;"	m	struct:SIFFContext	file:
flags	libavformat/smacker.c	/^    uint32_t flags;$/;"	m	struct:SmackerContext	file:
flags	libavformat/url.h	/^    int flags;$/;"	m	struct:URLContext
flags	libavformat/url.h	/^    int flags;$/;"	m	struct:URLProtocol
flags	libavformat/wv.c	/^    uint32_t blksize, flags;$/;"	m	struct:__anon327	file:
flags	libavutil/cpu.c	/^static int flags, checked;$/;"	v	file:
flags	libavutil/log.c	/^static int flags;$/;"	v	file:
flags	libavutil/opt.c	/^    int flags;$/;"	m	struct:TestContext	file:
flags	libavutil/opt.h	/^    int flags;$/;"	m	struct:AVOption
flags	libavutil/pixdesc.h	/^    uint8_t flags;$/;"	m	struct:AVPixFmtDescriptor
flags	libswscale/swscale_internal.h	/^    int flags;                    \/\/\/< Flags passed by the user to select scaler algorithm, optimizations, subsampling, etc...$/;"	m	struct:SwsContext
flags2	libavcodec/avcodec.h	/^    int flags2;$/;"	m	struct:AVCodecContext
flags2	libavcodec/mpegvideo.h	/^    int flags2;       \/\/\/< AVCodecContext.flags2$/;"	m	struct:MpegEncContext
flashsv2_encode_end	libavcodec/flashsv2enc.c	/^static av_cold int flashsv2_encode_end(AVCodecContext * avctx)$/;"	f	file:
flashsv2_encode_frame	libavcodec/flashsv2enc.c	/^static int flashsv2_encode_frame(AVCodecContext * avctx, uint8_t * buf,$/;"	f	file:
flashsv2_encode_init	libavcodec/flashsv2enc.c	/^static av_cold int flashsv2_encode_init(AVCodecContext * avctx)$/;"	f	file:
flashsv_decode_end	libavcodec/flashsv.c	/^static av_cold int flashsv_decode_end(AVCodecContext *avctx)$/;"	f	file:
flashsv_decode_frame	libavcodec/flashsv.c	/^static int flashsv_decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
flashsv_decode_init	libavcodec/flashsv.c	/^static av_cold int flashsv_decode_init(AVCodecContext *avctx)$/;"	f	file:
flashsv_encode_end	libavcodec/flashsvenc.c	/^static av_cold int flashsv_encode_end(AVCodecContext *avctx)$/;"	f	file:
flashsv_encode_frame	libavcodec/flashsvenc.c	/^static int flashsv_encode_frame(AVCodecContext *avctx, uint8_t *buf,$/;"	f	file:
flashsv_encode_init	libavcodec/flashsvenc.c	/^static av_cold int flashsv_encode_init(AVCodecContext *avctx)$/;"	f	file:
flat64	libswscale/swscale.c	/^static const uint8_t flat64[8]={64,64,64,64,64,64,64,64};$/;"	v	file:
flat_dc	libavcodec/intrax8.h	/^    int flat_dc;$/;"	m	struct:__anon134
flatnessThreshold	libpostproc/postprocess_internal.h	/^    int flatnessThreshold;$/;"	m	struct:PPMode
flcoeffs1	libavcodec/imc.c	/^    float flcoeffs1[BANDS];$/;"	m	struct:__anon90	file:
flcoeffs2	libavcodec/imc.c	/^    float flcoeffs2[BANDS];$/;"	m	struct:__anon90	file:
flcoeffs3	libavcodec/imc.c	/^    float flcoeffs3[BANDS];$/;"	m	struct:__anon90	file:
flcoeffs4	libavcodec/imc.c	/^    float flcoeffs4[BANDS];$/;"	m	struct:__anon90	file:
flcoeffs5	libavcodec/imc.c	/^    float flcoeffs5[BANDS];$/;"	m	struct:__anon90	file:
flcoeffs6	libavcodec/imc.c	/^    float flcoeffs6[BANDS];$/;"	m	struct:__anon90	file:
fli_type	libavcodec/flicvideo.c	/^    int fli_type;  \/* either 0xAF11 or 0xAF12, affects palette resolution *\/$/;"	m	struct:FlicDecodeContext	file:
flic_decode_end	libavcodec/flicvideo.c	/^static av_cold int flic_decode_end(AVCodecContext *avctx)$/;"	f	file:
flic_decode_frame	libavcodec/flicvideo.c	/^static int flic_decode_frame(AVCodecContext *avctx,$/;"	f	file:
flic_decode_frame_15_16BPP	libavcodec/flicvideo.c	/^static int flic_decode_frame_15_16BPP(AVCodecContext *avctx,$/;"	f	file:
flic_decode_frame_24BPP	libavcodec/flicvideo.c	/^static int flic_decode_frame_24BPP(AVCodecContext *avctx,$/;"	f	file:
flic_decode_frame_8BPP	libavcodec/flicvideo.c	/^static int flic_decode_frame_8BPP(AVCodecContext *avctx,$/;"	f	file:
flic_decode_init	libavcodec/flicvideo.c	/^static av_cold int flic_decode_init(AVCodecContext *avctx)$/;"	f	file:
flic_probe	libavformat/flic.c	/^static int flic_probe(AVProbeData *p)$/;"	f	file:
flic_read_header	libavformat/flic.c	/^static int flic_read_header(AVFormatContext *s,$/;"	f	file:
flic_read_packet	libavformat/flic.c	/^static int flic_read_packet(AVFormatContext *s,$/;"	f	file:
flip	libavcodec/rawdec.c	/^    int flip;$/;"	m	struct:RawVideoContext	file:
flip	libavcodec/rawdec.c	/^static void flip(AVCodecContext *avctx, AVPicture * picture){$/;"	f	file:
flip	libavcodec/vp56.h	/^    int flip;  \/* are we flipping ? *\/$/;"	m	struct:vp56_context
flip_left	libavdevice/oss_audio.c	/^    unsigned int flip_left : 1;$/;"	m	struct:__anon311	file:
flip_page	libavfilter/libmpcodecs/libvo/video_out.h	/^    void (*flip_page)(void);$/;"	m	struct:vo_functions_s
flipflop_rounding	libavcodec/mpegvideo.h	/^    int flipflop_rounding;$/;"	m	struct:MpegEncContext
flipped	libavcodec/mjpegdec.h	/^    int flipped; \/* true if picture is flipped *\/$/;"	m	struct:MJpegDecodeContext
flipped_image	libavcodec/vp3.c	/^    int flipped_image;$/;"	m	struct:Vp3DecodeContext	file:
flipped_ptrs	libavcodec/mimic.c	/^    AVPicture       flipped_ptrs[16];$/;"	m	struct:__anon282	file:
float754	libavcodec/aacdec.c	/^union float754 {$/;"	u	file:
float_arg	cmdutils.h	/^        float *float_arg;$/;"	m	union:__anon290::__anon291
float_arg	ffmpeg/cmdutils.h	/^        float *float_arg;$/;"	m	union:__anon288::__anon289
float_flag	libavcodec/wavpack.c	/^    int float_flag;$/;"	m	struct:WavpackFrameContext	file:
float_init_altivec	libavcodec/ppc/float_altivec.c	/^void float_init_altivec(DSPContext* c, AVCodecContext *avctx)$/;"	f
float_interleave	libavcodec/fmtconvert.c	/^void float_interleave(float *dst, const float **src, long len, int channels)$/;"	f
float_interleave	libavcodec/fmtconvert.h	/^    void (*float_interleave)(float *dst, const float **src, unsigned int len,$/;"	m	struct:FmtConvertContext
float_interleave_mmx	libavcodec/x86/fmtconvert_mmx.c	/^static void float_interleave_mmx(float *dst, const float **src,$/;"	f	file:
float_interleave_noscale	libavcodec/fmtconvert.c	/^void float_interleave_noscale(float *dst, const float **src, long len, int channels)$/;"	f
float_interleave_sse	libavcodec/x86/fmtconvert_mmx.c	/^static void float_interleave_sse(float *dst, const float **src,$/;"	f	file:
float_max_exp	libavcodec/wavpack.c	/^    int float_max_exp;$/;"	m	struct:WavpackFrameContext	file:
float_shift	libavcodec/wavpack.c	/^    int float_shift;$/;"	m	struct:WavpackFrameContext	file:
float_to_fixed24	libavcodec/ac3dsp.h	/^    void (*float_to_fixed24)(int32_t *dst, const float *src, unsigned int len);$/;"	m	struct:AC3DSPContext
float_to_fixed24_c	libavcodec/ac3dsp.c	/^static void float_to_fixed24_c(int32_t *dst, const float *src, unsigned int len)$/;"	f	file:
float_to_int16	libavcodec/fmtconvert.h	/^    void (*float_to_int16)(int16_t *dst, const float *src, long len);$/;"	m	struct:FmtConvertContext
float_to_int16_3dnow	libavcodec/x86/fmtconvert_mmx.c	/^static void float_to_int16_3dnow(int16_t *dst, const float *src, long len){$/;"	f	file:
float_to_int16_altivec	libavcodec/ppc/fmtconvert_altivec.c	/^static void float_to_int16_altivec(int16_t *dst, const float *src, long len)$/;"	f	file:
float_to_int16_c	libavcodec/fmtconvert.c	/^static void float_to_int16_c(int16_t *dst, const float *src, long len)$/;"	f	file:
float_to_int16_interleave	libavcodec/fmtconvert.h	/^    void (*float_to_int16_interleave)(int16_t *dst, const float **src,$/;"	m	struct:FmtConvertContext
float_to_int16_interleave_3dn2	libavcodec/x86/fmtconvert_mmx.c	/^static void float_to_int16_interleave_3dn2(int16_t *dst, const float **src, long len, int channels){$/;"	f	file:
float_to_int16_interleave_altivec	libavcodec/ppc/fmtconvert_altivec.c	/^float_to_int16_interleave_altivec(int16_t *dst, const float **src,$/;"	f	file:
float_to_int16_interleave_c	libavcodec/fmtconvert.c	/^static void float_to_int16_interleave_c(int16_t *dst, const float **src,$/;"	f	file:
float_to_int16_one	libavcodec/fmtconvert.c	/^static av_always_inline int float_to_int16_one(const float *src){$/;"	f	file:
float_to_int16_one_altivec	libavcodec/ppc/fmtconvert_altivec.c	/^float_to_int16_one_altivec(const float *src)$/;"	f	file:
float_to_int16_sse	libavcodec/x86/fmtconvert_mmx.c	/^static void float_to_int16_sse(int16_t *dst, const float *src, long len){$/;"	f	file:
float_to_int16_sse2	libavcodec/x86/fmtconvert_mmx.c	/^static void float_to_int16_sse2(int16_t *dst, const float *src, long len){$/;"	f	file:
floating	libavcodec/alsdec.c	/^    int floating;             \/\/\/< 1 = IEEE 32-bit floating-point, 0 = integer$/;"	m	struct:__anon150	file:
floor	libavcodec/ac3.h	/^    int slow_gain, slow_decay, fast_decay, db_per_bit, floor;$/;"	m	struct:AC3BitAllocParameters
floor	libavcodec/vorbisenc.c	/^    float *floor;  \/\/ also used for tmp values for mdct$/;"	m	struct:__anon194	file:
floor	libavcodec/vorbisenc.c	/^    int *floor;$/;"	m	struct:__anon192	file:
floor_classes	libavcodec/vorbis_enc_data.h	/^} floor_classes[] = {$/;"	v	typeref:struct:__anon274
floor_code	libavcodec/ac3enc.h	/^    int floor_code;                         \/\/\/< floor code                             (floorcod)$/;"	m	struct:AC3EncodeContext
floor_count	libavcodec/vorbisdec.c	/^    uint8_t       floor_count;$/;"	m	struct:vorbis_context_s	file:
floor_encode	libavcodec/vorbisenc.c	/^static void floor_encode(vorbis_enc_context *venc, vorbis_enc_floor *fc,$/;"	f	file:
floor_fit	libavcodec/vorbisenc.c	/^static void floor_fit(vorbis_enc_context *venc, vorbis_enc_floor *fc,$/;"	f	file:
floor_type	libavcodec/vorbisdec.c	/^    uint8_t floor_type;$/;"	m	struct:__anon259	file:
floors	libavcodec/vorbisdec.c	/^    vorbis_floor *floors;$/;"	m	struct:vorbis_context_s	file:
floors	libavcodec/vorbisenc.c	/^    vorbis_enc_floor *floors;$/;"	m	struct:__anon194	file:
flt16_even	libavcodec/aacdec.c	/^static av_always_inline float flt16_even(float pf)$/;"	f	file:
flt16_round	libavcodec/aacdec.c	/^static av_always_inline float flt16_round(float pf)$/;"	f	file:
flt16_trunc	libavcodec/aacdec.c	/^static av_always_inline float flt16_trunc(float pf)$/;"	f	file:
flt_entries	libavformat/gxfenc.c	/^    unsigned *flt_entries;    \/\/\/< offsets of packets \/1024, starts after 2nd video field$/;"	m	struct:GXFContext	file:
flt_entries_nb	libavformat/gxfenc.c	/^    unsigned flt_entries_nb;$/;"	m	struct:GXFContext	file:
flush	libavcodec/alsdec.c	/^static av_cold void flush(AVCodecContext *avctx)$/;"	f	file:
flush	libavcodec/avcodec.h	/^    void (*flush)(AVCodecContext *);$/;"	m	struct:AVCodec
flush	libavcodec/crystalhd.c	/^static void flush(AVCodecContext *avctx)$/;"	f	file:
flush	libavcodec/mpeg12.c	/^static void flush(AVCodecContext *avctx){$/;"	f	file:
flush	libavcodec/mpegaudiodec.c	/^static void flush(AVCodecContext *avctx){$/;"	f	file:
flush	libavcodec/wmadec.c	/^static av_cold void flush(AVCodecContext *avctx)$/;"	f	file:
flush	libavcodec/wmaprodec.c	/^static void flush(AVCodecContext *avctx)$/;"	f	file:
flush_buffer	libavformat/aviobuf.c	/^static void flush_buffer(AVIOContext *s)$/;"	f	file:
flush_dpb	libavcodec/h264.c	/^static void flush_dpb(AVCodecContext *avctx){$/;"	f	file:
flush_packet	libavformat/asfenc.c	/^static void flush_packet(AVFormatContext *s)$/;"	f	file:
flush_packet	libavformat/ffmenc.c	/^static void flush_packet(AVFormatContext *s)$/;"	f	file:
flush_packet	libavformat/mpegenc.c	/^static int flush_packet(AVFormatContext *ctx, int stream_index,$/;"	f	file:
flush_packet_queue	libavformat/utils.c	/^static void flush_packet_queue(AVFormatContext *s)$/;"	f	file:
flush_pkt	ffplay.c	/^static AVPacket flush_pkt;$/;"	v	file:
flush_put_bits	libavcodec/put_bits.h	/^static inline void flush_put_bits(PutBitContext *s)$/;"	f
flv_audio_codec_ids	libavformat/flvenc.c	/^static const AVCodecTag flv_audio_codec_ids[] = {$/;"	v	file:
flv_data	libavformat/rtmpproto.c	/^    uint8_t*      flv_data;                   \/\/\/< buffer with data for demuxer$/;"	m	struct:RTMPContext	file:
flv_get_extradata	libavformat/flvdec.c	/^static int flv_get_extradata(AVFormatContext *s, AVStream *st, int size)$/;"	f	file:
flv_off	libavformat/rtmpproto.c	/^    int           flv_off;                    \/\/\/< number of bytes read from current buffer$/;"	m	struct:RTMPContext	file:
flv_probe	libavformat/flvdec.c	/^static int flv_probe(AVProbeData *p)$/;"	f	file:
flv_read_header	libavformat/flvdec.c	/^static int flv_read_header(AVFormatContext *s,$/;"	f	file:
flv_read_metabody	libavformat/flvdec.c	/^static int flv_read_metabody(AVFormatContext *s, int64_t next_pos) {$/;"	f	file:
flv_read_packet	libavformat/flvdec.c	/^static int flv_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
flv_read_seek	libavformat/flvdec.c	/^static int flv_read_seek(AVFormatContext *s, int stream_index,$/;"	f	file:
flv_set_audio_codec	libavformat/flvdec.c	/^static void flv_set_audio_codec(AVFormatContext *s, AVStream *astream, int flv_codecid) {$/;"	f	file:
flv_set_video_codec	libavformat/flvdec.c	/^static int flv_set_video_codec(AVFormatContext *s, AVStream *vstream, int flv_codecid) {$/;"	f	file:
flv_size	libavformat/rtmpproto.c	/^    int           flv_size;                   \/\/\/< current buffer size$/;"	m	struct:RTMPContext	file:
flv_video_codec_ids	libavformat/flvenc.c	/^static const AVCodecTag flv_video_codec_ids[] = {$/;"	v	file:
flv_write_header	libavformat/flvenc.c	/^static int flv_write_header(AVFormatContext *s)$/;"	f	file:
flv_write_packet	libavformat/flvenc.c	/^static int flv_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
flv_write_trailer	libavformat/flvenc.c	/^static int flv_write_trailer(AVFormatContext *s)$/;"	f	file:
fmode	libavcodec/twinvq.c	/^    struct FrameMode fmode[3]; \/\/\/< frame type-dependant parameters$/;"	m	struct:__anon66	typeref:struct:__anon66::FrameMode	file:
fmt	ffserver.c	/^    AVOutputFormat *fmt;$/;"	m	struct:FFStream	file:
fmt	libavcodec/zmbv.c	/^    int fmt;$/;"	m	struct:ZmbvContext	file:
fmt	libavfilter/libmpcodecs/vf.h	/^    vf_format_context_t fmt;$/;"	m	struct:vf_instance
fmt	libavfilter/libmpcodecs/vf_palette.c	/^    unsigned int fmt;$/;"	m	struct:vf_priv_s	file:
fmt	libavfilter/libmpcodecs/vf_remove_logo.c	/^  unsigned int fmt; \/* Not exactly sure of the use for this. It came with the example filter I used as a basis for this, and it looks like a lot of stuff will break if I remove it. *\/$/;"	m	struct:vf_priv_s	file:
fmt	libavfilter/libmpcodecs/vf_rgbtest.c	/^    unsigned int fmt;$/;"	m	struct:vf_priv_s	file:
fmt	libavfilter/vf_mp.c	/^    int fmt;$/;"	m	struct:__anon46	file:
fmt_bytecount	ffserver.c	/^static void fmt_bytecount(AVIOContext *pb, int64_t count)$/;"	f	file:
fmt_conv	libavcodec/aac.h	/^    FmtConvertContext fmt_conv;$/;"	m	struct:__anon246
fmt_conv	libavcodec/ac3dec.h	/^    FmtConvertContext fmt_conv;             \/\/\/< optimized conversion functions$/;"	m	struct:__anon88
fmt_conv	libavcodec/binkaudio.c	/^    FmtConvertContext fmt_conv;$/;"	m	struct:__anon136	file:
fmt_conv	libavcodec/dca.c	/^    FmtConvertContext fmt_conv;$/;"	m	struct:__anon93	file:
fmt_conv	libavcodec/nellymoserdec.c	/^    FmtConvertContext fmt_conv;$/;"	m	struct:NellyMoserDecodeContext	file:
fmt_conv	libavcodec/vorbisdec.c	/^    FmtConvertContext fmt_conv;$/;"	m	struct:vorbis_context_s	file:
fmt_conv	libavcodec/wma.h	/^    FmtConvertContext fmt_conv;$/;"	m	struct:WMACodecContext
fmt_conversion_table	libavdevice/v4l2.c	/^static struct fmt_map fmt_conversion_table[] = {$/;"	v	typeref:struct:fmt_map	file:
fmt_ctx	ffserver.c	/^    AVFormatContext fmt_ctx; \/* instance of FFStream for one user *\/$/;"	m	struct:HTTPContext	file:
fmt_ff2v4l	libavdevice/v4l2.c	/^static uint32_t fmt_ff2v4l(enum PixelFormat pix_fmt, enum CodecID codec_id)$/;"	f	file:
fmt_in	ffserver.c	/^    AVFormatContext *fmt_in;$/;"	m	struct:HTTPContext	file:
fmt_list	libavfilter/libmpcodecs/vf_delogo.c	/^static const unsigned int fmt_list[]={$/;"	v	file:
fmt_list	libavfilter/libmpcodecs/vf_noise.c	/^static const unsigned int fmt_list[]={$/;"	v	file:
fmt_list	libavfilter/libmpcodecs/vf_unsharp.c	/^static const unsigned int fmt_list[] = {$/;"	v	file:
fmt_map	libavdevice/v4l2.c	/^struct fmt_map {$/;"	s	file:
fmt_pair	libavcodec/audioconvert.c	/^    int fmt_pair;$/;"	m	struct:AVAudioConvert	file:
fmt_v4l2codec	libavdevice/v4l2.c	/^static enum CodecID fmt_v4l2codec(uint32_t v4l2_fmt)$/;"	f	file:
fmt_v4l2ff	libavdevice/v4l2.c	/^static enum PixelFormat fmt_v4l2ff(uint32_t v4l2_fmt, enum CodecID codec_id)$/;"	f	file:
fname	libavfilter/libmpcodecs/vf_screenshot.c	/^    char fname[102];$/;"	m	struct:vf_priv_s	file:
fno	libavfilter/libmpcodecs/vf_cropdetect.c	/^    int fno;$/;"	m	struct:vf_priv_s	file:
fold	libavcodec/ffv1.c	/^static av_always_inline int fold(int diff, int bits){$/;"	f	file:
font	libavcodec/ansi.c	/^    const uint8_t* font;  \/**< font *\/$/;"	m	struct:__anon173	file:
font_height	libavcodec/ansi.c	/^    int font_height;      \/**< font height *\/$/;"	m	struct:__anon173	file:
font_name	libavcodec/ass_split.h	/^    char *font_name;      \/**< font face (case sensitive) *\/$/;"	m	struct:__anon249
font_name	libavcodec/ass_split.h	/^    void (*font_name)(void *priv, const char *name);$/;"	m	struct:__anon252
font_size	libavcodec/ass_split.h	/^    int   font_size;      \/**< font height *\/$/;"	m	struct:__anon249
font_size	libavcodec/ass_split.h	/^    void (*font_size)(void *priv, int size);$/;"	m	struct:__anon252
fontcolor	libavfilter/vf_drawtext.c	/^    uint8_t fontcolor[4];           \/\/\/< foreground color$/;"	m	struct:__anon24	file:
fontcolor_rgba	libavfilter/vf_drawtext.c	/^    uint8_t fontcolor_rgba[4];      \/\/\/< foreground color in RGBA$/;"	m	struct:__anon24	file:
fontcolor_string	libavfilter/vf_drawtext.c	/^    char *fontcolor_string;         \/\/\/< font color as string$/;"	m	struct:__anon24	file:
fontfile	libavfilter/vf_drawtext.c	/^    uint8_t *fontfile;              \/\/\/< font to be used$/;"	m	struct:__anon24	file:
fontsize	libavfilter/vf_drawtext.c	/^    unsigned int fontsize;          \/\/\/< font size to use$/;"	m	struct:__anon24	file:
foo	libavfilter/libmpcodecs/pullup.c	/^static void foo(struct pullup_context *c)$/;"	f	file:
foo	libavfilter/libmpcodecs/vf_ivtc.c	/^static int foo(struct vf_priv_s *p, mp_image_t *new, mp_image_t *cur)$/;"	f	file:
footer_partition_key	libavformat/mxfenc.c	/^static const uint8_t footer_partition_key[]        = { 0x06,0x0E,0x2B,0x34,0x02,0x05,0x01,0x01,0x0D,0x01,0x02,0x01,0x01,0x04,0x04,0x00 }; \/\/ ClosedComplete$/;"	v	file:
footer_partition_offset	libavformat/mxfenc.c	/^    int64_t footer_partition_offset;$/;"	m	struct:MXFContext	file:
force_fps	ffmpeg.c	/^static int force_fps = 0;$/;"	v	file:
force_fps	ffmpeg/ffmpeg.c	/^static int force_fps = 0;$/;"	v	file:
forcedQPTable	libpostproc/postprocess_internal.h	/^    QP_STORE_T *forcedQPTable;$/;"	m	struct:PPContext
forcedQuant	libpostproc/postprocess_internal.h	/^    int forcedQuant;                \/\/\/< quantizer if FORCE_QUANT is used$/;"	m	struct:PPMode
forced_key_frames	ffmpeg.c	/^static char *forced_key_frames = NULL;$/;"	v	file:
forced_key_frames	ffmpeg/ffmpeg.c	/^static char *forced_key_frames = NULL;$/;"	v	file:
forced_kf_count	ffmpeg.c	/^    int forced_kf_count;$/;"	m	struct:AVOutputStream	file:
forced_kf_count	ffmpeg/ffmpeg.c	/^    int forced_kf_count;$/;"	m	struct:AVOutputStream	file:
forced_kf_index	ffmpeg.c	/^    int forced_kf_index;$/;"	m	struct:AVOutputStream	file:
forced_kf_index	ffmpeg/ffmpeg.c	/^    int forced_kf_index;$/;"	m	struct:AVOutputStream	file:
forced_kf_pts	ffmpeg.c	/^    int64_t *forced_kf_pts;$/;"	m	struct:AVOutputStream	file:
forced_kf_pts	ffmpeg/ffmpeg.c	/^    int64_t *forced_kf_pts;$/;"	m	struct:AVOutputStream	file:
form	libavformat/aiffenc.c	/^    int64_t form;$/;"	m	struct:__anon453	file:
formant_mem	libavcodec/qcelpdec.c	/^    float    formant_mem[170];$/;"	m	struct:__anon225	file:
format	libavcodec/avcodec.h	/^    uint16_t format; \/* 0 = graphics *\/$/;"	m	struct:AVSubtitle
format	libavcodec/dct-test.c	/^  enum formattag { NO_PERM,MMX_PERM, MMX_SIMPLE_PERM, SCALE_PERM, SSE2_PERM, PARTTRANS_PERM } format;$/;"	m	struct:algo	typeref:enum:algo::formattag	file:
format	libavcodec/libschroedingerdec.c	/^    SchroVideoFormat *format;$/;"	m	struct:FfmpegSchroDecoderParams	file:
format	libavcodec/libschroedingerenc.c	/^    SchroVideoFormat *format;$/;"	m	struct:FfmpegSchroEncoderParams	file:
format	libavdevice/dv1394.c	/^    int format;$/;"	m	struct:dv1394_data	file:
format	libavdevice/dv1394.h	/^        enum pal_or_ntsc format;$/;"	m	struct:dv1394_init	typeref:enum:dv1394_init::pal_or_ntsc
format	libavfilter/avfilter.h	/^    int format;                 \/\/\/< agreed upon media format$/;"	m	struct:AVFilterLink
format	libavfilter/avfilter.h	/^    int format;                 \/\/\/< media format$/;"	m	struct:AVFilterBuffer
format	libavfilter/avfilter.h	/^    int format;                 \/\/\/< media format$/;"	m	struct:AVFilterBufferRef
format	libavfilter/libmpcodecs/pullup.h	/^    int format;$/;"	m	struct:pullup_context
formatConvBuffer	libswscale/swscale_internal.h	/^    uint8_t *formatConvBuffer;$/;"	m	struct:SwsContext
format_count	libavfilter/avfilter.h	/^    unsigned format_count;      \/\/\/< number of formats$/;"	m	struct:AVFilterFormats
format_cpfilters_processed	libavformat/wtvdec.c	/^static const ff_asf_guid format_cpfilters_processed =$/;"	v	file:
format_ctx	libavfilter/vsrc_movie.c	/^    AVFormatContext *format_ctx;$/;"	m	struct:__anon38	file:
format_g729_8k	libavcodec/g729dec.c	/^static const G729FormatDescription format_g729_8k = {$/;"	v	file:
format_g729d_6k4	libavcodec/g729dec.c	/^static const G729FormatDescription format_g729d_6k4 = {$/;"	v	file:
format_header	libavcodec/ass_split.c	/^    const char *format_header;$/;"	m	struct:__anon145	file:
format_mpeg2_video	libavformat/wtvdec.c	/^static const ff_asf_guid format_mpeg2_video =$/;"	v	file:
format_name	libavfilter/vsrc_movie.c	/^    char *format_name;$/;"	m	struct:__anon38	file:
format_opts	cmdutils.c	/^AVDictionary *format_opts, *video_opts, *audio_opts, *sub_opts;$/;"	v
format_opts	ffmpeg/cmdutils.c	/^AVDictionary *format_opts, *video_opts, *audio_opts, *sub_opts;$/;"	v
format_to_name	libavformat/options.c	/^static const char* format_to_name(void* ptr)$/;"	f	file:
format_videoinfo2	libavformat/wtvdec.c	/^static const ff_asf_guid format_videoinfo2 =$/;"	v	file:
format_waveformatex	libavformat/wtvdec.c	/^static const ff_asf_guid format_waveformatex =$/;"	v	file:
formatflags	libavformat/ape.c	/^    uint16_t formatflags;$/;"	m	struct:__anon335	file:
formats	libavfilter/avfilter.h	/^    int64_t *formats;           \/\/\/< list of media formats$/;"	m	struct:AVFilterFormats
formattag	libavcodec/dct-test.c	/^  enum formattag { NO_PERM,MMX_PERM, MMX_SIMPLE_PERM, SCALE_PERM, SSE2_PERM, PARTTRANS_PERM } format;$/;"	g	struct:algo	file:
found_mdat	libavformat/isom.h	/^    int found_mdat;       \/\/\/< 'mdat' atom has been found$/;"	m	struct:MOVContext
found_moov	libavformat/isom.h	/^    int found_moov;       \/\/\/< 'moov' atom has been found$/;"	m	struct:MOVContext
fourcc	libavcodec/raw.h	/^    unsigned int fourcc;$/;"	m	struct:PixelFormatTag
fourtap_filter_hb_m	libavcodec/x86/vp8dsp.asm	/^fourtap_filter_hb_m: times 8 db  -6, 123$/;"	l
fourtap_filter_hw_m	libavcodec/x86/vp8dsp.asm	/^fourtap_filter_hw_m: times 4 dw  -6, 123$/;"	l
fourtap_filter_v_m	libavcodec/x86/vp8dsp.asm	/^fourtap_filter_v_m:  times 8 dw  -6$/;"	l
fourxm_probe	libavformat/4xm.c	/^static int fourxm_probe(AVProbeData *p)$/;"	f	file:
fourxm_read_close	libavformat/4xm.c	/^static int fourxm_read_close(AVFormatContext *s)$/;"	f	file:
fourxm_read_header	libavformat/4xm.c	/^static int fourxm_read_header(AVFormatContext *s,$/;"	f	file:
fourxm_read_packet	libavformat/4xm.c	/^static int fourxm_read_packet(AVFormatContext *s,$/;"	f	file:
fp	libavcodec/alpha/regdef.h	44;"	d
fp_single_enter	libavcodec/sh4/sh4.h	25;"	d
fp_single_enter	libavcodec/sh4/sh4.h	40;"	d
fp_single_leave	libavcodec/sh4/sh4.h	33;"	d
fp_single_leave	libavcodec/sh4/sh4.h	41;"	d
fpos	libavformat/seek.h	/^    int64_t         fpos;                   \/\/\/< file position at the time of call$/;"	m	struct:AVParserState
fprintf	libavcodec/dvbsubdec.c	37;"	d	file:
fprintf	libavcodec/dvdsubdec.c	434;"	d	file:
fprintf	libavfilter/libmpcodecs/mp_image.h	26;"	d
fprintf	libavfilter/libmpcodecs/vf_mcdeint.c	62;"	d	file:
fprintf	libavfilter/libmpcodecs/vf_spp.c	45;"	d	file:
fprintf	libavformat/utils.c	3611;"	d	file:
fprintf	libavformat/utils.c	3649;"	d	file:
fprintf	libavutil/internal.h	153;"	d
fprintf	libavutil/internal.h	154;"	d
fprintf	libavutil/log.c	101;"	d	file:
fprintf	libavutil/log.c	49;"	d	file:
fprintf	tests/seek_test.c	32;"	d	file:
fps	libavdevice/fbdev.c	/^    AVRational fps;          \/\/\/< framerate$/;"	m	struct:__anon314	file:
fps	libavformat/4xm.c	/^    float fps;$/;"	m	struct:FourxmDemuxContext	file:
fps	libavformat/avs.c	/^    int fps;$/;"	m	struct:avs_format	file:
fps	libavformat/thp.c	/^    AVRational       fps;$/;"	m	struct:ThpDemuxContext	file:
fps_probe_size	libavformat/avformat.h	/^    int fps_probe_size;$/;"	m	struct:AVFormatContext
fps_tag2avr	libavformat/gxf.c	/^static AVRational fps_tag2avr(int32_t fps) {$/;"	f	file:
fps_umf2avr	libavformat/gxf.c	/^static AVRational fps_umf2avr(uint32_t flags) {$/;"	f	file:
fr_cur_mode	libavcodec/amrwbdec.c	/^    enum Mode                        fr_cur_mode; \/\/\/< mode index of current frame$/;"	m	struct:__anon64	typeref:enum:__anon64::Mode	file:
fr_quality	libavcodec/amrwbdec.c	/^    uint8_t                           fr_quality; \/\/\/< frame quality index (FQI)$/;"	m	struct:__anon64	file:
frac	libavcodec/resample2.c	/^    int frac;$/;"	m	struct:AVResampleContext	file:
frac	libavfilter/libmpcodecs/vf_decimate.c	/^    float frac;$/;"	m	struct:vf_priv_s	file:
frag_offset	libavformat/asf.h	/^    int frag_offset;$/;"	m	struct:__anon399
fragment	libavformat/isom.h	/^    MOVFragment fragment; \/\/\/< current fragment in moof atom$/;"	m	struct:MOVContext
fragment	libavformat/rtpdec_xiph.c	/^    AVIOContext* fragment;    \/\/\/< buffer for split payloads$/;"	m	struct:PayloadContext	file:
fragment_count	libavcodec/vp3.c	/^    int fragment_count;$/;"	m	struct:Vp3DecodeContext	file:
fragment_height	libavcodec/vp3.c	/^    int fragment_height[2];$/;"	m	struct:Vp3DecodeContext	file:
fragment_run_length_vlc	libavcodec/vp3.c	/^    VLC fragment_run_length_vlc;$/;"	m	struct:Vp3DecodeContext	file:
fragment_run_length_vlc_table	libavcodec/vp3data.h	/^static const uint16_t fragment_run_length_vlc_table[30][2] = {$/;"	v
fragment_start	libavcodec/vp3.c	/^    int fragment_start[3];$/;"	m	struct:Vp3DecodeContext	file:
fragment_width	libavcodec/vp3.c	/^    int fragment_width[2];$/;"	m	struct:Vp3DecodeContext	file:
frame	ffplay.c	/^    AVFrame *frame;$/;"	m	struct:__anon2	file:
frame	libavcodec/aasc.c	/^    AVFrame frame;$/;"	m	struct:AascContext	file:
frame	libavcodec/amrnbdec.c	/^    AMRNBFrame                        frame; \/\/\/< decoded AMR parameters (lsf coefficients, codebook indexes, etc)$/;"	m	struct:AMRContext	file:
frame	libavcodec/amrwbdec.c	/^    AMRWBFrame                             frame; \/\/\/< AMRWB parameters decoded from bitstream$/;"	m	struct:__anon64	file:
frame	libavcodec/anm.c	/^    AVFrame frame;$/;"	m	struct:AnmContext	file:
frame	libavcodec/ansi.c	/^    AVFrame frame;$/;"	m	struct:__anon173	file:
frame	libavcodec/aura.c	/^    AVFrame frame;$/;"	m	struct:AuraDecodeContext	file:
frame	libavcodec/bethsoftvideo.c	/^    AVFrame frame;$/;"	m	struct:BethsoftvidContext	file:
frame	libavcodec/bfi.c	/^    AVFrame frame;$/;"	m	struct:BFIContext	file:
frame	libavcodec/cdgraphics.c	/^    AVFrame frame;$/;"	m	struct:CDGraphicsContext	file:
frame	libavcodec/cinepak.c	/^    AVFrame frame;$/;"	m	struct:CinepakContext	file:
frame	libavcodec/cyuv.c	/^    AVFrame frame;$/;"	m	struct:CyuvDecodeContext	file:
frame	libavcodec/dnxhdenc.h	/^    AVFrame frame;$/;"	m	struct:DNXHDEncContext
frame	libavcodec/dsicinav.c	/^    AVFrame frame;$/;"	m	struct:CinVideoContext	file:
frame	libavcodec/eacmv.c	/^    AVFrame frame;        \/\/\/< current$/;"	m	struct:CmvContext	file:
frame	libavcodec/eamad.c	/^    AVFrame frame;$/;"	m	struct:MadContext	file:
frame	libavcodec/eatgq.c	/^    AVFrame frame;$/;"	m	struct:TgqContext	file:
frame	libavcodec/eatgv.c	/^    AVFrame frame;$/;"	m	struct:TgvContext	file:
frame	libavcodec/eatqi.c	/^    AVFrame frame;$/;"	m	struct:TqiContext	file:
frame	libavcodec/escape124.c	/^    AVFrame frame;$/;"	m	struct:Escape124Context	file:
frame	libavcodec/flacenc.c	/^    FlacFrame frame;$/;"	m	struct:FlacEncodeContext	file:
frame	libavcodec/flashsv.c	/^    AVFrame         frame;$/;"	m	struct:FlashSVContext	file:
frame	libavcodec/flashsv2enc.c	/^    AVFrame frame;$/;"	m	struct:FlashSV2Context	file:
frame	libavcodec/flashsvenc.c	/^    AVFrame         frame;$/;"	m	struct:FlashSVContext	file:
frame	libavcodec/flicvideo.c	/^    AVFrame frame;$/;"	m	struct:FlicDecodeContext	file:
frame	libavcodec/fraps.c	/^    AVFrame frame;$/;"	m	struct:FrapsContext	file:
frame	libavcodec/idcinvideo.c	/^    AVFrame frame;$/;"	m	struct:IdcinContext	file:
frame	libavcodec/iff.c	/^    AVFrame frame;$/;"	m	struct:__anon114	file:
frame	libavcodec/indeo3.c	/^    AVFrame frame;$/;"	m	struct:Indeo3DecodeContext	file:
frame	libavcodec/indeo5.c	/^    AVFrame         frame;$/;"	m	struct:__anon203	file:
frame	libavcodec/jvdec.c	/^    AVFrame    frame;$/;"	m	struct:JvContext	file:
frame	libavcodec/mmvideo.c	/^    AVFrame frame;$/;"	m	struct:MmContext	file:
frame	libavcodec/motionpixels.c	/^    AVFrame frame;$/;"	m	struct:MotionPixelsContext	file:
frame	libavcodec/msrle.c	/^    AVFrame frame;$/;"	m	struct:MsrleContext	file:
frame	libavcodec/msvideo1.c	/^    AVFrame frame;$/;"	m	struct:Msvideo1Context	file:
frame	libavcodec/pictordec.c	/^    AVFrame frame;$/;"	m	struct:PicContext	file:
frame	libavcodec/pthread.c	/^    AVFrame frame;                  \/\/\/< Output frame (for decoding) or input (for encoding).$/;"	m	struct:PerThreadContext	file:
frame	libavcodec/qcelpdec.c	/^    QCELPFrame        frame;    \/*!< unpacked data frame *\/$/;"	m	struct:__anon225	file:
frame	libavcodec/qtrle.c	/^    AVFrame frame;$/;"	m	struct:QtrleContext	file:
frame	libavcodec/qtrleenc.c	/^    AVFrame frame;$/;"	m	struct:QtrleEncContext	file:
frame	libavcodec/rl2.c	/^    AVFrame frame;$/;"	m	struct:Rl2Context	file:
frame	libavcodec/rpza.c	/^    AVFrame frame;$/;"	m	struct:RpzaContext	file:
frame	libavcodec/smc.c	/^    AVFrame frame;$/;"	m	struct:SmcContext	file:
frame	libavcodec/tiertexseqv.c	/^    AVFrame frame;$/;"	m	struct:SeqVideoContext	file:
frame	libavcodec/truemotion1.c	/^    AVFrame frame;$/;"	m	struct:TrueMotion1Context	file:
frame	libavcodec/ulti.c	/^    AVFrame frame;$/;"	m	struct:UltimotionDecodeContext	file:
frame	libavcodec/vb.c	/^    uint8_t *frame, *prev_frame;$/;"	m	struct:VBDecContext	file:
frame	libavcodec/vmdav.c	/^    AVFrame frame;$/;"	m	struct:VmdVideoContext	file:
frame	libavcodec/vqavideo.c	/^    AVFrame frame;$/;"	m	struct:VqaContext	file:
frame	libavcodec/yop.c	/^    AVFrame frame;$/;"	m	struct:YopDecContext	file:
frame	libavdevice/libdc1394.c	/^    dc1394video_frame_t *frame;$/;"	m	struct:dc1394_data	file:
frame	libavfilter/libmpcodecs/pullup.h	/^    struct pullup_frame *frame;$/;"	m	struct:pullup_context	typeref:struct:pullup_context::pullup_frame
frame	libavfilter/libmpcodecs/vf_blackframe.c	/^    unsigned int bamount, bthresh, frame, lastkeyframe;$/;"	m	struct:vf_priv_s	file:
frame	libavfilter/libmpcodecs/vf_detc.c	/^        int frame;$/;"	m	struct:vf_priv_s	file:
frame	libavfilter/libmpcodecs/vf_kerndeint.c	/^    int    frame;$/;"	m	struct:vf_priv_s	file:
frame	libavfilter/libmpcodecs/vf_mcdeint.c	/^    AVFrame *frame;$/;"	m	struct:vf_priv_s	file:
frame	libavfilter/libmpcodecs/vf_telecine.c	/^    int frame;$/;"	m	struct:vf_priv_s	file:
frame	libavfilter/libmpcodecs/vf_tinterlace.c	/^    int frame;$/;"	m	struct:vf_priv_s	file:
frame	libavfilter/libmpcodecs/vf_uspp.c	/^    AVFrame *frame;$/;"	m	struct:vf_priv_s	file:
frame	libavfilter/vf_blackframe.c	/^    unsigned int frame;   \/\/\/< frame number$/;"	m	struct:__anon49	file:
frame	libavfilter/vf_showinfo.c	/^    unsigned int frame;$/;"	m	struct:__anon12	file:
frame	libavfilter/vsrc_movie.c	/^    AVFrame *frame;   \/\/\/< video frame to store the decoded images in$/;"	m	struct:__anon38	file:
frame	libavformat/mpc8.c	/^    int frame;$/;"	m	struct:__anon398	file:
frame	libavformat/thp.c	/^    int              frame;$/;"	m	struct:ThpDemuxContext	file:
frameNum	libpostproc/postprocess_internal.h	/^    int frameNum;$/;"	m	struct:PPContext
frame_aspect_ratio	ffmpeg.c	/^    float frame_aspect_ratio;$/;"	m	struct:AVOutputStream	file:
frame_aspect_ratio	ffmpeg.c	/^static float frame_aspect_ratio = 0;$/;"	v	file:
frame_aspect_ratio	ffmpeg/ffmpeg.c	/^    float frame_aspect_ratio;$/;"	m	struct:AVOutputStream	file:
frame_aspect_ratio	ffmpeg/ffmpeg.c	/^static float frame_aspect_ratio = 0;$/;"	v	file:
frame_attributes	libavformat/yuv4mpeg.c	/^struct frame_attributes {$/;"	s	file:
frame_bit_len	libavformat/vqf.c	/^    int frame_bit_len;$/;"	m	struct:VqfContext	file:
frame_bits	libavcodec/aacpsy.c	/^    int frame_bits;       \/\/\/< average bits per frame$/;"	m	struct:AacPsyContext	file:
frame_bits	libavcodec/ac3enc.h	/^    int frame_bits;                         \/\/\/< all frame bits except exponents and mantissas$/;"	m	struct:AC3EncodeContext
frame_bits	libavcodec/avcodec.h	/^    int frame_bits;$/;"	m	struct:AVCodecContext
frame_bits	libavcodec/dnxhdenc.h	/^    unsigned frame_bits;$/;"	m	struct:DNXHDEncContext
frame_bits	libavcodec/mpegvideo.h	/^    int frame_bits;                \/\/\/< bits used for the current frame$/;"	m	struct:MpegEncContext
frame_bits_fixed	libavcodec/ac3enc.h	/^    int frame_bits_fixed;                   \/\/\/< number of non-coefficient bits for fixed parameters$/;"	m	struct:AC3EncodeContext
frame_bits_per_raw_sample	ffmpeg.c	/^static int frame_bits_per_raw_sample = 0;$/;"	v	file:
frame_bits_per_raw_sample	ffmpeg/ffmpeg.c	/^static int frame_bits_per_raw_sample = 0;$/;"	v	file:
frame_block_to_cell	libavcodec/roqvideoenc.c	/^static inline void frame_block_to_cell(uint8_t *block, uint8_t **data,$/;"	f	file:
frame_blocks	libavcodec/flashsv2enc.c	/^    Block *frame_blocks;$/;"	m	struct:FlashSV2Context	file:
frame_buf	libavcodec/dfa.c	/^    uint8_t *frame_buf;$/;"	m	struct:DfaContext	file:
frame_buf	libavformat/dvenc.c	/^    uint8_t           frame_buf[DV_MAX_FRAME_SIZE]; \/* frame under contruction *\/$/;"	m	struct:DVMuxContext	file:
frame_buffers	libavformat/tiertexseq.c	/^    TiertexSeqFrameBuffer frame_buffers[SEQ_NUM_FRAME_BUFFERS];$/;"	m	struct:SeqDemuxContext	file:
frame_buffers_count	libavformat/tiertexseq.c	/^    int frame_buffers_count;$/;"	m	struct:SeqDemuxContext	file:
frame_bytes	libavcodec/libcelt_dec.c	/^    int frame_bytes;$/;"	m	struct:libcelt_context	file:
frame_class	libavcodec/aacps.h	/^    int    frame_class;$/;"	m	struct:__anon257
frame_cnt	libavformat/cafdec.c	/^    int64_t frame_cnt;              \/\/\/< frame counter$/;"	m	struct:__anon422	file:
frame_cntr	libavcodec/wmavoice.c	/^    int frame_cntr;               \/\/\/< current frame index [0 - 0xFFFE]; is$/;"	m	struct:__anon157	file:
frame_code	libavformat/nut.h	/^    FrameCode frame_code[256];$/;"	m	struct:__anon494
frame_count	doc/examples/muxing-example.c	/^int frame_count, video_outbuf_size;$/;"	v
frame_count	libavcodec/flacenc.c	/^    uint32_t frame_count;$/;"	m	struct:FlacEncodeContext	file:
frame_count	libavcodec/libopencore-amr.c	/^    int   frame_count;$/;"	m	struct:AMRContext	file:
frame_count	libavcodec/mpegaudiodec.c	/^    int frame_count;$/;"	m	struct:MPADecodeContext	file:
frame_count	libavcodec/msmpeg4.c	/^int frame_count = 0;$/;"	v
frame_count	libavcodec/ratecontrol.h	/^    int frame_count[5];$/;"	m	struct:RateControlContext
frame_count	libavcodec/wma.h	/^    int frame_count;$/;"	m	struct:WMACodecContext
frame_count	libavformat/sierravmd.c	/^    unsigned int frame_count;$/;"	m	struct:VmdDemuxContext	file:
frame_cur	libavfilter/libmpcodecs/vf_framestep.c	/^    int  frame_cur;$/;"	m	struct:vf_priv_s	file:
frame_cur	libavfilter/libmpcodecs/vf_tile.c	/^    int  frame_cur;$/;"	m	struct:vf_priv_s	file:
frame_data	libavcodec/indeo5.c	/^    const uint8_t   *frame_data;     \/\/\/< input frame data pointer$/;"	m	struct:__anon203	file:
frame_data	libavcodec/wmaprodec.c	/^    uint8_t          frame_data[MAX_FRAMESIZE +$/;"	m	struct:WMAProDecodeCtx	file:
frame_data_length	libavcodec/yop.c	/^    int frame_data_length;$/;"	m	struct:YopDecContext	file:
frame_dec	libavfilter/libmpcodecs/vf_mcdeint.c	/^    AVFrame *frame_dec;$/;"	m	struct:vf_priv_s	file:
frame_dec	libavfilter/libmpcodecs/vf_uspp.c	/^    AVFrame *frame_dec;$/;"	m	struct:vf_priv_s	file:
frame_descs	libavcodec/wmavoice.c	/^} frame_descs[17] = {$/;"	v	typeref:struct:frame_type_desc	file:
frame_factor	libavcodec/atrac3.c	/^    int                 frame_factor;$/;"	m	struct:__anon131	file:
frame_flags	libavcodec/indeo5.c	/^    uint8_t         frame_flags;$/;"	m	struct:__anon203	file:
frame_flags	libavcodec/wavpack.c	/^    int frame_flags;$/;"	m	struct:WavpackFrameContext	file:
frame_format	libavcodec/libschroedingerdec.c	/^    SchroFrameFormat frame_format;$/;"	m	struct:FfmpegSchroDecoderParams	file:
frame_format	libavcodec/libschroedingerenc.c	/^    SchroFrameFormat frame_format;$/;"	m	struct:FfmpegSchroEncoderParams	file:
frame_format	libavdevice/v4l.c	/^    int frame_format; \/* see VIDEO_PALETTE_xxx *\/$/;"	m	struct:__anon316	file:
frame_format	libavdevice/v4l2.c	/^    int frame_format; \/* V4L2_PIX_FMT_* *\/$/;"	m	struct:video_data	file:
frame_frac	libavcodec/mpegaudioenc.c	/^    int frame_frac, frame_frac_incr, do_padding;$/;"	m	struct:MpegAudioContext	file:
frame_frac_incr	libavcodec/mpegaudioenc.c	/^    int frame_frac, frame_frac_incr, do_padding;$/;"	m	struct:MpegAudioContext	file:
frame_header	libavcodec/truemotion1.c	/^struct frame_header {$/;"	s	file:
frame_header	libavformat/dsicin.c	/^    CinFrameHeader frame_header;$/;"	m	struct:CinDemuxContext	file:
frame_header_is_valid	libavcodec/flac_parser.c	/^static int frame_header_is_valid(AVCodecContext *avctx, const uint8_t *buf,$/;"	f	file:
frame_height	ffmpeg.c	/^static int frame_height = 0;$/;"	v	file:
frame_height	ffmpeg/ffmpeg.c	/^static int frame_height = 0;$/;"	v	file:
frame_height	ffplay.c	/^static int frame_height = 0;$/;"	v	file:
frame_height	libavcodec/svq1enc.c	/^    int frame_height;$/;"	m	struct:SVQ1Context	file:
frame_id	libavcodec/alsdec.c	/^    unsigned int frame_id;          \/\/\/< the frame ID \/ number of the current frame$/;"	m	struct:__anon152	file:
frame_in_part	libavformat/rpl.c	/^    uint32_t frame_in_part;$/;"	m	struct:RPLContext	file:
frame_index	libavfilter/vf_fade.c	/^    unsigned int frame_index, start_frame, stop_frame;$/;"	m	struct:__anon11	file:
frame_last_delay	ffplay.c	/^    double frame_last_delay;$/;"	m	struct:VideoState	file:
frame_last_pts	ffplay.c	/^    double frame_last_pts;$/;"	m	struct:VideoState	file:
frame_len	libavcodec/binkaudio.c	/^    int frame_len;          \/\/\/< transform size (samples)$/;"	m	struct:__anon136	file:
frame_len	libavcodec/wma.h	/^    int frame_len;                          \/\/\/< frame length in samples$/;"	m	struct:WMACodecContext
frame_len_bits	libavcodec/wma.h	/^    int frame_len_bits;                     \/\/\/< frame_len = 1 << frame_len_bits$/;"	m	struct:WMACodecContext
frame_length	libavcodec/aacdec.c	/^    int             frame_length;        \/\/\/< frame length for fixed frame length$/;"	m	struct:LATMContext	file:
frame_length	libavcodec/alsdec.c	/^    int frame_length;         \/\/\/< frame length for each frame (last frame may differ)$/;"	m	struct:__anon150	file:
frame_length	libavcodec/tta.c	/^    int frame_length, last_frame_length, total_frames;$/;"	m	struct:TTAContext	file:
frame_length_type	libavcodec/aacdec.c	/^    int             frame_length_type;   \/\/\/< 0\/1 variable\/fixed frame length$/;"	m	struct:LATMContext	file:
frame_linesize	libavdevice/fbdev.c	/^    int frame_linesize;      \/\/\/< linesize of the output frame, it is assumed to be constant$/;"	m	struct:__anon314	file:
frame_lsp_bitsize	libavcodec/wmavoice.c	/^    int frame_lsp_bitsize;        \/\/\/< size (in bits) of LSPs, when encoded$/;"	m	struct:__anon157	file:
frame_mbs_only_flag	libavcodec/h264.h	/^    int frame_mbs_only_flag;$/;"	m	struct:SPS
frame_nb	libavfilter/vf_cropdetect.c	/^    int frame_nb;$/;"	m	struct:__anon48	file:
frame_num	libavcodec/h264.h	/^    int frame_num;$/;"	m	struct:H264Context
frame_num	libavcodec/indeo5.c	/^    int             frame_num;$/;"	m	struct:__anon203	file:
frame_num	libavcodec/libdirac_libschro.h	/^    uint32_t frame_num;$/;"	m	struct:FfmpegDiracSchroEncodedFrame
frame_num	libavcodec/mpegvideo.h	/^    int frame_num;              \/\/\/< h264 frame_num (raw frame_num from slice header)$/;"	m	struct:Picture
frame_num	libavcodec/wmaprodec.c	/^    uint32_t         frame_num;                     \/\/\/< current frame number (not used for decoding)$/;"	m	struct:WMAProDecodeCtx	file:
frame_num	libavdevice/vfwcap.c	/^    unsigned int frame_num;$/;"	m	struct:vfw_ctx	file:
frame_num	libavfilter/libmpcodecs/vf_test.c	/^    int frame_num;$/;"	m	struct:vf_priv_s	file:
frame_num_offset	libavcodec/h264.h	/^    int frame_num_offset;         \/\/\/< for POC type 2$/;"	m	struct:H264Context
frame_number	ffmpeg.c	/^    int frame_number;$/;"	m	struct:AVOutputStream	file:
frame_number	ffmpeg/ffmpeg.c	/^    int frame_number;$/;"	m	struct:AVOutputStream	file:
frame_number	libavcodec/avcodec.h	/^    int frame_number;   \/\/\/< audio or video frame number$/;"	m	struct:AVCodecContext
frame_number	libavformat/flic.c	/^    int frame_number;$/;"	m	struct:FlicDemuxContext	file:
frame_number	libavformat/lxfdec.c	/^    int frame_number;                   \/\/\/< current video frame$/;"	m	struct:__anon377	file:
frame_offset	libavcodec/avcodec.h	/^    int64_t frame_offset; \/* offset of the current frame *\/$/;"	m	struct:AVCodecParserContext
frame_offset	libavcodec/wmaprodec.c	/^    int              frame_offset;                  \/\/\/< frame offset in the bit reservoir$/;"	m	struct:WMAProDecodeCtx	file:
frame_offset	libavformat/avidec.c	/^    int64_t frame_offset; \/* current frame (video) or byte (audio) counter$/;"	m	struct:AVIStream	file:
frame_offset	libavformat/ffm.h	/^    int frame_offset;$/;"	m	struct:FFMContext
frame_offset	libavformat/nsvdec.c	/^    int frame_offset; \/* current frame (video) or byte (audio) counter$/;"	m	struct:NSVStream	file:
frame_offset	libavformat/sierravmd.c	/^  int64_t frame_offset;$/;"	m	struct:__anon349	file:
frame_offsets	libavformat/c93.c	/^    uint32_t frame_offsets[32];$/;"	m	struct:__anon482	file:
frame_or_sample_num	libavcodec/flac.h	/^    int64_t frame_or_sample_num;    \/**< frame number or sample number   *\/$/;"	m	struct:FLACFrameInfo
frame_pending	libavfilter/vf_yadif.c	/^    int frame_pending;$/;"	m	struct:__anon6	file:
frame_pix_fmt	ffmpeg.c	/^static enum PixelFormat frame_pix_fmt = PIX_FMT_NONE;$/;"	v	typeref:enum:PixelFormat	file:
frame_pix_fmt	ffmpeg/ffmpeg.c	/^static enum PixelFormat frame_pix_fmt = PIX_FMT_NONE;$/;"	v	typeref:enum:PixelFormat	file:
frame_pix_fmt	ffplay.c	/^static enum PixelFormat frame_pix_fmt = PIX_FMT_NONE;$/;"	v	typeref:enum:PixelFormat	file:
frame_pred_frame_dct	libavcodec/mpegvideo.h	/^    int frame_pred_frame_dct;$/;"	m	struct:MpegEncContext
frame_pts_inc	libavformat/ipmovie.c	/^    uint64_t frame_pts_inc;$/;"	m	struct:IPMVEContext	file:
frame_rate	ffmpeg.c	/^    AVRational frame_rate;$/;"	m	struct:AVOutputStream	file:
frame_rate	ffmpeg.c	/^static AVRational frame_rate;$/;"	v	file:
frame_rate	ffmpeg/ffmpeg.c	/^    AVRational frame_rate;$/;"	m	struct:AVOutputStream	file:
frame_rate	ffmpeg/ffmpeg.c	/^static AVRational frame_rate;$/;"	v	file:
frame_rate	libavcodec/parser.h	/^    AVRational frame_rate;$/;"	m	struct:ParseContext1
frame_rate	libavdevice/libdc1394.c	/^    int  frame_rate;        \/**< frames per 1000 seconds (fps * 1000) *\/$/;"	m	struct:dc1394_data	file:
frame_rate	libavdevice/libdc1394.c	/^    int frame_rate;$/;"	m	struct:dc1394_frame_rate	file:
frame_rate	libavformat/matroskadec.c	/^    double   frame_rate;$/;"	m	struct:__anon357	file:
frame_rate	libavformat/rmenc.c	/^    float frame_rate;$/;"	m	struct:__anon382	file:
frame_rate	libavformat/swf.h	/^    int frame_rate;$/;"	m	struct:__anon336
frame_rate_denom	libavcodec/libdirac_libschro.h	/^    uint16_t frame_rate_denom;$/;"	m	struct:__anon166
frame_rate_ext	libavcodec/mpeg12.c	/^    AVRational frame_rate_ext;       \/\/\/< MPEG-2 specific framerate modificator$/;"	m	struct:Mpeg1Context	file:
frame_rate_id	libavdevice/libdc1394.c	/^    int frame_rate_id;$/;"	m	struct:dc1394_frame_rate	file:
frame_rate_index	libavcodec/dirac.h	/^    uint8_t frame_rate_index;       \/\/\/< index into dirac_frame_rate[]$/;"	m	struct:__anon227
frame_rate_index	libavcodec/mpegvideo.h	/^    int frame_rate_index;$/;"	m	struct:MpegEncContext
frame_rate_index	libavformat/gxfenc.c	/^    int frame_rate_index;$/;"	m	struct:GXFStreamContext	file:
frame_rate_num	libavcodec/libdirac_libschro.h	/^    uint16_t frame_rate_num;$/;"	m	struct:__anon166
frame_record	libavformat/sierravmd.c	/^  unsigned char frame_record[BYTES_PER_FRAME_RECORD];$/;"	m	struct:__anon349	file:
frame_returned	libavfilter/vf_mp.c	/^    int frame_returned;$/;"	m	struct:__anon47	file:
frame_size	libavcodec/aac_ac3_parser.h	/^    int frame_size;$/;"	m	struct:AACAC3ParseContext
frame_size	libavcodec/ac3.h	/^    uint16_t frame_size;$/;"	m	struct:__anon170
frame_size	libavcodec/ac3dec.h	/^    int frame_size;                         \/\/\/< current frame size, in bytes$/;"	m	struct:__anon88
frame_size	libavcodec/ac3enc.h	/^    int frame_size;                         \/\/\/< current frame size in bytes$/;"	m	struct:AC3EncodeContext
frame_size	libavcodec/avcodec.h	/^    int frame_size;$/;"	m	struct:AVCodecContext
frame_size	libavcodec/dca.c	/^    int frame_size;             \/\/\/< primary frame byte size$/;"	m	struct:__anon93	file:
frame_size	libavcodec/dcaenc.c	/^    int frame_size;$/;"	m	struct:__anon231	file:
frame_size	libavcodec/dnxhddata.h	/^    unsigned int frame_size;$/;"	m	struct:__anon281
frame_size	libavcodec/dvdata.h	/^    int              frame_size;            \/* total size of one frame in bytes *\/$/;"	m	struct:DVprofile
frame_size	libavcodec/flashsv2enc.c	/^    int frame_size;$/;"	m	struct:FlashSV2Context	file:
frame_size	libavcodec/indeo5.c	/^    uint32_t        frame_size;      \/\/\/< frame size in bytes$/;"	m	struct:__anon203	file:
frame_size	libavcodec/libdiracenc.c	/^    int frame_size;$/;"	m	struct:FfmpegDiracEncoderParams	file:
frame_size	libavcodec/libschroedingerenc.c	/^    int frame_size;$/;"	m	struct:FfmpegSchroEncoderParams	file:
frame_size	libavcodec/libspeexdec.c	/^    int frame_size;$/;"	m	struct:__anon228	file:
frame_size	libavcodec/mpegaudio_parser.c	/^    int frame_size;$/;"	m	struct:MpegAudioParseContext	file:
frame_size	libavcodec/mpegaudioenc.c	/^    int frame_size; \/* frame size, in bits, without padding *\/$/;"	m	struct:MpegAudioContext	file:
frame_size	libavcodec/qdm2.c	/^    int frame_size;          \/\/\/< size of data frame$/;"	m	struct:__anon200	file:
frame_size	libavcodec/sonic.c	/^    int channels, samplerate, block_align, frame_size;$/;"	m	struct:SonicContext	file:
frame_size	libavcodec/wmavoice.c	/^    uint16_t frame_size;  \/\/\/< the amount of bits that make up the block$/;"	m	struct:frame_type_desc	file:
frame_size	libavcodec/xan.c	/^    int frame_size;$/;"	m	struct:XanContext	file:
frame_size	libavdevice/alsa-audio.h	/^    int frame_size;  \/\/\/< preferred size for reads and writes$/;"	m	struct:__anon313
frame_size	libavdevice/fbdev.c	/^    int frame_size;          \/\/\/< size in bytes of a grabbed frame$/;"	m	struct:__anon314	file:
frame_size	libavdevice/oss_audio.c	/^    int frame_size; \/* in bytes ! *\/$/;"	m	struct:__anon311	file:
frame_size	libavdevice/v4l.c	/^    int frame_size;$/;"	m	struct:__anon316	file:
frame_size	libavdevice/v4l2.c	/^    int frame_size;$/;"	m	struct:video_data	file:
frame_size	libavdevice/x11grab.c	/^    int frame_size;          \/**< Size in bytes of a grabbed frame *\/$/;"	m	struct:x11_grab	file:
frame_size	libavformat/matroskadec.c	/^    int      frame_size;$/;"	m	struct:__anon358	file:
frame_size	libavformat/sierravmd.c	/^  unsigned int frame_size;$/;"	m	struct:__anon349	file:
frame_size	libavformat/yop.c	/^    int frame_size;$/;"	m	struct:yop_dec_context	file:
frame_size_code	libavcodec/ac3enc.h	/^    int frame_size_code;                    \/\/\/< frame size code                        (frmsizecod)$/;"	m	struct:AC3EncodeContext
frame_size_min	libavcodec/ac3enc.h	/^    int frame_size_min;                     \/\/\/< minimum frame size in case rounding is necessary$/;"	m	struct:AC3EncodeContext
frame_sizes	libavformat/rtpdec_qcelp.c	/^static const uint8_t frame_sizes[] = {$/;"	v	file:
frame_sizes_nb	libavcodec/amrnbdata.h	/^static const uint8_t frame_sizes_nb[N_MODES] = {$/;"	v
frame_sizes_nb	libavformat/rtpdec_amr.c	/^static const uint8_t frame_sizes_nb[16] = {$/;"	v	file:
frame_sizes_wb	libavformat/rtpdec_amr.c	/^static const uint8_t frame_sizes_wb[16] = {$/;"	v	file:
frame_skip_cmp	libavcodec/avcodec.h	/^    int frame_skip_cmp;$/;"	m	struct:AVCodecContext
frame_skip_cmp	libavcodec/dsputil.h	/^    me_cmp_func frame_skip_cmp[6]; \/\/only width 8 used$/;"	m	struct:DSPContext
frame_skip_exp	libavcodec/avcodec.h	/^    int frame_skip_exp;$/;"	m	struct:AVCodecContext
frame_skip_factor	libavcodec/avcodec.h	/^    int frame_skip_factor;$/;"	m	struct:AVCodecContext
frame_skip_threshold	libavcodec/avcodec.h	/^    int frame_skip_threshold;$/;"	m	struct:AVCodecContext
frame_start	libavcodec/snow.c	/^static int frame_start(SnowContext *s){$/;"	f	file:
frame_start_found	libavcodec/parser.h	/^    int frame_start_found;$/;"	m	struct:ParseContext
frame_stats	libavfilter/libmpcodecs/vf_filmdint.c	/^struct frame_stats {$/;"	s	file:
frame_step	libavfilter/libmpcodecs/vf_framestep.c	/^    int  frame_step;$/;"	m	struct:vf_priv_s	file:
frame_table	libavformat/sierravmd.c	/^    vmd_frame *frame_table;$/;"	m	struct:VmdDemuxContext	file:
frame_thread_free	libavcodec/pthread.c	/^static void frame_thread_free(AVCodecContext *avctx, int thread_count)$/;"	f	file:
frame_thread_init	libavcodec/pthread.c	/^static int frame_thread_init(AVCodecContext *avctx)$/;"	f	file:
frame_timer	ffplay.c	/^    double frame_timer;$/;"	m	struct:VideoState	file:
frame_to_enc	libavcodec/roqvideo.h	/^    AVFrame *frame_to_enc;$/;"	m	struct:RoqContext
frame_type	libavcodec/ac3.h	/^    uint8_t frame_type;$/;"	m	struct:__anon170
frame_type	libavcodec/ac3dec.h	/^    int frame_type;                         \/\/\/< frame type                             (strmtyp)$/;"	m	struct:__anon88
frame_type	libavcodec/dca.c	/^    int frame_type;             \/\/\/< type of the current frame$/;"	m	struct:__anon93	file:
frame_type	libavcodec/indeo5.c	/^    int             frame_type;$/;"	m	struct:__anon203	file:
frame_type_desc	libavcodec/wmavoice.c	/^static const struct frame_type_desc {$/;"	s	file:
frame_type_vlc	libavcodec/wmavoice.c	/^static VLC frame_type_vlc;$/;"	v	file:
frame_width	ffmpeg.c	/^static int frame_width  = 0;$/;"	v	file:
frame_width	ffmpeg/ffmpeg.c	/^static int frame_width  = 0;$/;"	v	file:
frame_width	ffplay.c	/^static int frame_width = 0;$/;"	v	file:
frame_width	libavcodec/svq1enc.c	/^    int frame_width;$/;"	m	struct:SVQ1Context	file:
frame_worker_thread	libavcodec/pthread.c	/^static attribute_align_arg void *frame_worker_thread(void *arg)$/;"	f	file:
framecnt	libavformat/thp.c	/^    int              framecnt;$/;"	m	struct:ThpDemuxContext	file:
framecrc	tests/fate-run.sh	/^framecrc(){$/;"	f
framecrc_write_packet	libavformat/framecrcenc.c	/^static int framecrc_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
framedrop	ffplay.c	/^static int framedrop=-1;$/;"	v	file:
frameflags	libavcodec/apedec.c	/^    int frameflags;                          \/\/\/< frame flags$/;"	m	struct:APEContext	file:
frameinfo	libavfilter/libmpcodecs/vf_ivtc.c	/^struct frameinfo {$/;"	s	file:
framemd5	tests/fate-run.sh	/^framemd5(){$/;"	f
framemd5_write_packet	libavformat/md5enc.c	/^static int framemd5_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
frameno	libavfilter/libmpcodecs/vf_divtc.c	/^   int deghost, pass, phase, window, fcount, bcount, frameno, misscount,$/;"	m	struct:vf_priv_s	file:
frameno	libavfilter/libmpcodecs/vf_screenshot.c	/^    int frameno;$/;"	m	struct:vf_priv_s	file:
framenum	libavfilter/libmpcodecs/vf_geq.c	/^    int framenum;$/;"	m	struct:vf_priv_s	file:
framep	libavcodec/vp56.h	/^    AVFrame *framep[6];$/;"	m	struct:vp56_context
framep	libavcodec/vp8.h	/^    AVFrame *framep[4];$/;"	m	struct:__anon182
framerate	libavdevice/bktr.c	/^    char *framerate;  \/**< Set by a private option. *\/$/;"	m	struct:__anon312	file:
framerate	libavdevice/fbdev.c	/^    char *framerate;         \/\/\/< framerate string set by a private option$/;"	m	struct:__anon314	file:
framerate	libavdevice/libdc1394.c	/^    char *framerate;        \/**< Set by a private option. *\/$/;"	m	struct:dc1394_data	file:
framerate	libavdevice/v4l2.c	/^    char *framerate;    \/**< Set by a private option. *\/$/;"	m	struct:video_data	file:
framerate	libavdevice/vfwcap.c	/^    char *framerate;        \/**< Set by a private option. *\/$/;"	m	struct:vfw_ctx	file:
framerate	libavdevice/x11grab.c	/^    char *framerate;         \/**< Set by a private option. *\/$/;"	m	struct:x11_grab	file:
framerate	libavformat/img2.c	/^    char *framerate;        \/**< Set by a private option. *\/$/;"	m	struct:__anon389	file:
framerate	libavformat/nsvdec.c	/^    AVRational framerate;$/;"	m	struct:__anon345	file:
framerate	libavformat/rawdec.h	/^    char *framerate;          \/**< String describing framerate, set by a private option. *\/$/;"	m	struct:FFRawVideoDemuxerContext
framerate	libavformat/tty.c	/^    char *framerate; \/**< Set by a private option. *\/$/;"	m	struct:__anon485	file:
frames	libavcodec/mpc.h	/^    int cur_frame, frames;$/;"	m	struct:__anon179
frames	libavcodec/mpegaudiodec.c	/^    int frames;   \/\/\/< number of mp3 frames per block (number of mp3 decoder instances)$/;"	m	struct:MP3On4DecodeContext	file:
frames	libavcodec/roqvideo.h	/^    AVFrame frames[2];$/;"	m	struct:RoqContext
frames	libavcodec/vp56.h	/^    AVFrame frames[4];$/;"	m	struct:vp56_context
frames	libavcodec/vp8.h	/^    AVFrame frames[5];$/;"	m	struct:__anon182
frames	libavformat/aiffenc.c	/^    int64_t frames;$/;"	m	struct:__anon453	file:
frames	libavformat/ape.c	/^    APEFrame *frames;$/;"	m	struct:__anon335	file:
frames	libavformat/c93.c	/^    uint8_t frames;$/;"	m	struct:__anon481	file:
frames	libavformat/dv.c	/^    int               frames;$/;"	m	struct:DVDemuxContext	file:
frames	libavformat/dvenc.c	/^    int               frames;        \/* current frame number *\/$/;"	m	struct:DVMuxContext	file:
frames	libavformat/dxa.c	/^    int frames;$/;"	m	struct:__anon330	file:
frames	libavformat/jvdec.c	/^    JVFrame *frames;$/;"	m	struct:__anon426	file:
frames	libavformat/mp3enc.c	/^    int32_t frames;$/;"	m	struct:MP3Context	file:
frames	libavformat/mpc.c	/^    MPCFrame *frames;$/;"	m	struct:__anon376	file:
frames	libavformat/siff.c	/^    int frames;$/;"	m	struct:SIFFContext	file:
frames	libavformat/smacker.c	/^    uint32_t frames;$/;"	m	struct:SmackerContext	file:
frames	libavformat/vc1testenc.c	/^    int frames;$/;"	m	struct:RCVContext	file:
framesSinceKeyframe	libavcodec/roqvideo.h	/^    unsigned int framesSinceKeyframe;$/;"	m	struct:RoqContext
frames_hdr_all	libavformat/avienc.c	/^    int64_t frames_hdr_all;$/;"	m	struct:__anon343	file:
frames_hdr_strm	libavformat/avienc.c	/^    int64_t frames_hdr_strm;$/;"	m	struct:__anon344	file:
frames_noted	libavformat/mpc.c	/^    int frames_noted;$/;"	m	struct:__anon376	file:
frames_offset	libavformat/mp3enc.c	/^    int64_t frames_offset;$/;"	m	struct:MP3Context	file:
frames_per_block	libavformat/sierravmd.c	/^    unsigned int frames_per_block;$/;"	m	struct:VmdDemuxContext	file:
frames_per_chunk	libavformat/rpl.c	/^    int32_t frames_per_chunk;$/;"	m	struct:RPLContext	file:
frames_per_packet	libavcodec/sipr.c	/^    uint8_t frames_per_packet;$/;"	m	struct:__anon112	file:
frames_per_packet	libavformat/cafdec.c	/^    int frames_per_packet;          \/\/\/< frames in a packet, or 0 if variable$/;"	m	struct:__anon422	file:
frames_per_second	libavformat/gxf.c	/^    AVRational frames_per_second;$/;"	m	struct:gxf_stream_info	file:
frames_to_skip	libavcodec/mpc.h	/^    int frames_to_skip;$/;"	m	struct:__anon179
framesize	libavcodec/dca_parser.c	/^    int framesize;$/;"	m	struct:DCAParseContext	file:
frandom	libavcodec/fft-test.c	/^static FFTSample frandom(AVLFG *prng)$/;"	f	file:
fraps2_decode_plane	libavcodec/fraps.c	/^static int fraps2_decode_plane(FrapsContext *s, uint8_t *dst, int stride, int w,$/;"	f	file:
frbi	libavcodec/vp56.h	/^    int frbi;  \/* first row block index in MB *\/$/;"	m	struct:vp56_context
free	libavcodec/libaacplus.c	93;"	d	file:
free	libavcodec/libaacplus.c	95;"	d	file:
free	libavcodec/libfaac.c	119;"	d	file:
free	libavcodec/libfaac.c	121;"	d	file:
free	libavcodec/snow.c	4005;"	d	file:
free	libavdevice/libdc1394.c	36;"	d	file:
free	libavfilter/avfilter.h	/^    void (*free)(struct AVFilterBuffer *buf);$/;"	m	struct:AVFilterBuffer
free	libavfilter/libmpcodecs/mp_image.h	32;"	d
free	libavfilter/libmpcodecs/vf_fspp.c	57;"	d	file:
free	libavfilter/libmpcodecs/vf_mcdeint.c	63;"	d	file:
free	libavfilter/libmpcodecs/vf_spp.c	46;"	d	file:
free	libavformat/rtpdec.h	/^    void (*free)(PayloadContext *protocol_data); \/\/\/< free any data needed by the rtp parsing for this dynamic data.$/;"	m	struct:RTPDynamicProtocolHandler_s
free	libavutil/internal.h	131;"	d
free	libavutil/internal.h	132;"	d
free	libavutil/mem.c	42;"	d	file:
free	libavutil/mem.c	52;"	d	file:
freeBuffers	libavfilter/libmpcodecs/vf_sab.c	/^static void freeBuffers(FilterParam *f){$/;"	f	file:
freeBuffers	libavfilter/libmpcodecs/vf_smartblur.c	/^static void freeBuffers(FilterParam *f){$/;"	f	file:
free_acl_list	ffserver.c	/^static void free_acl_list(IPAddressACL *in_acl)$/;"	f	file:
free_buffers	libavcodec/vp8.c	/^static void free_buffers(VP8Context *s)$/;"	f	file:
free_bundles	libavcodec/bink.c	/^static av_cold void free_bundles(BinkContext *c)$/;"	f	file:
free_coded_frame	libavcodec/libvpxenc.c	/^static av_cold void free_coded_frame(struct FrameListData *cx_frame)$/;"	f	file:
free_context	libavformat/rtpdec_mpeg4.c	/^static void free_context(PayloadContext * data)$/;"	f	file:
free_duplicate_context	libavcodec/mpegvideo.c	/^static void free_duplicate_context(MpegEncContext *s){$/;"	f	file:
free_filter_param	libavfilter/vf_unsharp.c	/^static void free_filter_param(FilterParam *fp)$/;"	f	file:
free_format_next_header	libavcodec/mpegaudiodec.c	/^    uint32_t free_format_next_header;$/;"	m	struct:MPADecodeContext	file:
free_fragment_if_needed	libavformat/rtpdec_xiph.c	/^static inline void free_fragment_if_needed(PayloadContext * data)$/;"	f	file:
free_frame_buffer	libavcodec/mpegvideo.c	/^static void free_frame_buffer(MpegEncContext *s, Picture *pic)$/;"	f	file:
free_frame_list	libavcodec/libvpxenc.c	/^static av_cold void free_frame_list(struct FrameListData *list)$/;"	f	file:
free_mp_image	libavfilter/libmpcodecs/mp_image.c	/^void free_mp_image(mp_image_t* mpi){$/;"	f
free_packet_list	libavformat/seek.c	/^static void free_packet_list(AVPacketList *pktl)$/;"	f	file:
free_picture	libavcodec/mpegvideo.c	/^static void free_picture(MpegEncContext *s, Picture *pic){$/;"	f	file:
free_pkt_fifo	libavdevice/jack_audio.c	/^static void free_pkt_fifo(AVFifoBuffer *fifo)$/;"	f	file:
free_progress	libavcodec/pthread.c	/^static void free_progress(AVFrame *f)$/;"	f	file:
free_section	libavcodec/ass_split.c	/^static void free_section(ASSSplitContext *ctx, const ASSSection *section)$/;"	f	file:
free_segment_list	libavformat/applehttp.c	/^static void free_segment_list(struct variant *var)$/;"	f	file:
free_segment_list	libavformat/applehttpproto.c	/^static void free_segment_list(AppleHTTPContext *s)$/;"	f	file:
free_subpicture	ffplay.c	/^static void free_subpicture(SubPicture *sp)$/;"	f	file:
free_tables	libavcodec/h264.c	/^static void free_tables(H264Context *h, int free_rbsp){$/;"	f	file:
free_variant_list	libavformat/applehttp.c	/^static void free_variant_list(AppleHTTPContext *c)$/;"	f	file:
free_variant_list	libavformat/applehttpproto.c	/^static void free_variant_list(AppleHTTPContext *s)$/;"	f	file:
free_vlc	libavcodec/bitstream.c	/^void free_vlc(VLC *vlc)$/;"	f
freeaddrinfo	libavformat/network.h	178;"	d
frei0r_init	libavfilter/vf_frei0r.c	/^static av_cold int frei0r_init(AVFilterContext *ctx,$/;"	f	file:
freq1Test	libavfilter/libmpcodecs/vf_test.c	/^static void freq1Test(uint8_t *dst, int stride, int off)$/;"	f	file:
freq_index	libavcodec/mpegaudioenc.c	/^    int freq_index;$/;"	m	struct:MpegAudioContext	file:
frequency_range	libavcodec/qdm2.c	/^    int frequency_range;$/;"	m	struct:__anon200	file:
frm0	libavcodec/kmvc.c	/^    uint8_t *frm0, *frm1;$/;"	m	struct:KmvcContext	file:
frm1	libavcodec/kmvc.c	/^    uint8_t *frm0, *frm1;$/;"	m	struct:KmvcContext	file:
frm_flags	libavformat/smacker.c	/^    uint8_t  *frm_flags;$/;"	m	struct:SmackerContext	file:
frm_size	libavformat/smacker.c	/^    uint32_t *frm_size;$/;"	m	struct:SmackerContext	file:
frmrtq_postproc	libavcodec/vc1.h	/^    int frmrtq_postproc;  \/\/\/< 3bits,$/;"	m	struct:VC1Context
from	libavfilter/libmpcodecs/libvo/video_out.h	/^  int from;$/;"	m	struct:mp_keymap
from_addr	ffserver.c	/^    struct sockaddr_in from_addr; \/* origin *\/$/;"	m	struct:HTTPContext	typeref:struct:HTTPContext::sockaddr_in	file:
front_sum	libavcodec/dca.c	/^    int front_sum;              \/\/\/< front sum\/difference flag$/;"	m	struct:__anon93	file:
fs_screen_height	ffplay.c	/^static int fs_screen_height;$/;"	v	file:
fs_screen_width	ffplay.c	/^static int fs_screen_width;$/;"	v	file:
fseeko	tools/qt-faststart.c	33;"	d	file:
fset	libavcodec/apedec.c	/^    int fset;                                \/\/\/< which filter set to use (calculated from compression level)$/;"	m	struct:APEContext	file:
fsize	libavformat/avidec.c	/^    int64_t  fsize;$/;"	m	struct:__anon451	file:
fsize	libavformat/tty.c	/^    uint64_t fsize;  \/**< file size less metadata buffer *\/$/;"	m	struct:__anon485	file:
fstat	libavformat/os_support.h	36;"	d
fstate	libavcodec/psymodel.c	/^    struct FFIIRFilterState **fstate;$/;"	m	struct:FFPsyPreprocessContext	typeref:struct:FFPsyPreprocessContext::FFIIRFilterState	file:
ft_error	libavfilter/vf_drawtext.c	/^struct ft_error$/;"	s	file:
ft_errors	libavfilter/vf_drawtext.c	/^} static ft_errors[] =$/;"	v	file:
ft_load_flags	libavfilter/vf_drawtext.c	/^    int ft_load_flags;              \/\/\/< flags used for loading fonts, see FT_LOAD_*$/;"	m	struct:__anon24	file:
ftello	tools/qt-faststart.c	34;"	d	file:
ftrv	libavcodec/sh4/idct_sh4.c	75;"	d	file:
full_last	libavcodec/smacker.c	/^    int mmap_last[3], mclr_last[3], full_last[3], type_last[3];$/;"	m	struct:SmackVContext	file:
full_pel	libavcodec/mpegvideo.h	/^    int full_pel[2];$/;"	m	struct:MpegEncContext
full_range	libavcodec/h264.h	/^    int full_range;$/;"	m	struct:SPS
full_search	libavcodec/motion_est_template.c	/^static int full_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
full_segment_size	libavformat/mtv.c	/^    unsigned int full_segment_size;$/;"	m	struct:MTVDemuxContext	file:
full_size	libavformat/smacker.c	/^    uint32_t mmap_size, mclr_size, full_size, type_size;$/;"	m	struct:SmackerContext	file:
full_tbl	libavcodec/smacker.c	/^    int *mmap_tbl, *mclr_tbl, *full_tbl, *type_tbl;$/;"	m	struct:SmackVContext	file:
func	libavcodec/dct-test.c	/^  void (* func) (DCTELEM *block);$/;"	m	struct:algo	file:
func	libavcodec/pthread.c	/^    action_func *func;$/;"	m	struct:ThreadContext	file:
func	libavcodec/w32thread.c	/^    int (*func)(AVCodecContext *c, void *arg);$/;"	m	struct:ThreadContext	file:
func	libavfilter/libmpcodecs/vf_detc.c	/^        int (*func)(struct vf_priv_s *p, mp_image_t *new, mp_image_t *old);$/;"	m	struct:__anon29	file:
func0	libavutil/eval.c	/^        double (*func0)(double);$/;"	m	union:AVExpr::__anon306	file:
func1	libavutil/eval.c	/^        double (*func1)(void *, double);$/;"	m	union:AVExpr::__anon306	file:
func1_names	libavutil/eval.c	/^    const char * const *func1_names;          \/\/ NULL terminated$/;"	m	struct:Parser	file:
func2	libavcodec/pthread.c	/^    action_func2 *func2;$/;"	m	struct:ThreadContext	file:
func2	libavcodec/w32thread.c	/^    int (*func2)(AVCodecContext *c, void *arg, int, int);$/;"	m	struct:ThreadContext	file:
func2	libavutil/eval.c	/^        double (*func2)(void *, double, double);$/;"	m	union:AVExpr::__anon306	file:
func2_names	libavutil/eval.c	/^    const char * const *func2_names;          \/\/ NULL terminated$/;"	m	struct:Parser	file:
func_arg	cmdutils.h	/^        int (*func_arg)(const char *, const char *);$/;"	m	union:__anon290::__anon291
func_arg	ffmpeg/cmdutils.h	/^        int (*func_arg)(const char *, const char *);$/;"	m	union:__anon288::__anon289
funcs1	libavfilter/vf_lut.c	/^static double (* const funcs1[])(void *, double) = {$/;"	v	file:
funcs1	libavutil/eval.c	/^    double (* const *funcs1)(void *, double a);           \/\/ NULL terminated$/;"	m	struct:Parser	file:
funcs1_names	libavfilter/vf_lut.c	/^static const char * const funcs1_names[] = {$/;"	v	file:
funcs2	libavutil/eval.c	/^    double (* const *funcs2)(void *, double a, double b); \/\/ NULL terminated$/;"	m	struct:Parser	file:
function	libavcodec/arm/ac3dsp_arm.S	/^function ff_ac3_update_bap_counts_arm, export=1$/;"	l
function	libavcodec/arm/ac3dsp_armv6.S	/^function ff_ac3_bit_alloc_calc_bap_armv6, export=1$/;"	l
function	libavcodec/arm/ac3dsp_neon.S	/^function ff_ac3_exponent_min_neon, export=1$/;"	l
function	libavcodec/arm/ac3dsp_neon.S	/^function ff_ac3_extract_exponents_neon, export=1$/;"	l
function	libavcodec/arm/ac3dsp_neon.S	/^function ff_ac3_lshift_int16_neon, export=1$/;"	l
function	libavcodec/arm/ac3dsp_neon.S	/^function ff_ac3_max_msb_abs_int16_neon, export=1$/;"	l
function	libavcodec/arm/ac3dsp_neon.S	/^function ff_ac3_rshift_int32_neon, export=1$/;"	l
function	libavcodec/arm/ac3dsp_neon.S	/^function ff_float_to_fixed24_neon, export=1$/;"	l
function	libavcodec/arm/dcadsp_neon.S	/^function ff_dca_lfe_fir_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_arm.S	/^function ff_add_pixels_clamped_arm, export=1$/;"	l
function	libavcodec/arm/dsputil_arm.S	/^function ff_prefetch_arm, export=1$/;"	l
function	libavcodec/arm/dsputil_arm.S	/^function ff_put_no_rnd_pixels8_x2_arm, export=1$/;"	l
function	libavcodec/arm/dsputil_arm.S	/^function ff_put_no_rnd_pixels8_xy2_arm, export=1$/;"	l
function	libavcodec/arm/dsputil_arm.S	/^function ff_put_no_rnd_pixels8_y2_arm, export=1$/;"	l
function	libavcodec/arm/dsputil_arm.S	/^function ff_put_pixels16_arm, export=1$/;"	l
function	libavcodec/arm/dsputil_arm.S	/^function ff_put_pixels8_arm, export=1$/;"	l
function	libavcodec/arm/dsputil_arm.S	/^function ff_put_pixels8_x2_arm, export=1$/;"	l
function	libavcodec/arm/dsputil_arm.S	/^function ff_put_pixels8_xy2_arm, export=1$/;"	l
function	libavcodec/arm/dsputil_arm.S	/^function ff_put_pixels8_y2_arm, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_\\type\\()_pixels16\\subp\\()_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_add_pixels_clamped_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_avg_pixels8_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_diff_pixels_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_get_pixels_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_pix_abs16_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_pix_abs16_x2_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_pix_abs16_y2_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_pix_abs8_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_pix_norm1_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_pix_sum_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_put_pixels16_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_put_pixels8_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_put_pixels8_x2_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_put_pixels8_x2_no_rnd_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_put_pixels8_y2_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_put_pixels8_y2_no_rnd_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_armv6.S	/^function ff_sse16_armv6, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_\\pfx\\name\\suf\\()_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_add_pixels_clamped_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_apply_window_int16_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_avg_h264_qpel16_mc00_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_avg_h264_qpel8_mc00_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_butterflies_float_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_clear_block_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_clear_blocks_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_put_h264_qpel16_mc00_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_put_h264_qpel8_mc00_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_put_pixels_clamped_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_put_signed_pixels_clamped_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_scalarproduct_float_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_sv_fmul_scalar_2_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_sv_fmul_scalar_4_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_vector_clipf_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_vector_fmul_add_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_vector_fmul_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_vector_fmul_reverse_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_vector_fmul_scalar_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_vector_fmul_sv_scalar_2_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_vector_fmul_sv_scalar_4_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_vector_fmul_window_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_neon.S	/^function ff_vorbis_inverse_coupling_neon, export=1$/;"	l
function	libavcodec/arm/dsputil_vfp.S	/^function ff_vector_fmul_reverse_vfp, export=1$/;"	l
function	libavcodec/arm/dsputil_vfp.S	/^function ff_vector_fmul_vfp, export=1$/;"	l
function	libavcodec/arm/fft_fixed_neon.S	/^function ff_fft_fixed_calc_neon, export=1$/;"	l
function	libavcodec/arm/fft_fixed_neon.S	/^function fft16_neon$/;"	l
function	libavcodec/arm/fft_fixed_neon.S	/^function fft4_neon$/;"	l
function	libavcodec/arm/fft_fixed_neon.S	/^function fft8_neon$/;"	l
function	libavcodec/arm/fft_fixed_neon.S	/^function fft\\n\\()_neon$/;"	l
function	libavcodec/arm/fft_fixed_neon.S	/^function fft_pass_neon$/;"	l
function	libavcodec/arm/fft_neon.S	/^function ff_fft_calc_neon, export=1$/;"	l
function	libavcodec/arm/fft_neon.S	/^function ff_fft_permute_neon, export=1$/;"	l
function	libavcodec/arm/fft_neon.S	/^function fft16_neon$/;"	l
function	libavcodec/arm/fft_neon.S	/^function fft4_neon$/;"	l
function	libavcodec/arm/fft_neon.S	/^function fft8_neon$/;"	l
function	libavcodec/arm/fft_neon.S	/^function fft\\n\\()_neon$/;"	l
function	libavcodec/arm/fft_neon.S	/^function fft_pass_neon$/;"	l
function	libavcodec/arm/fmtconvert_neon.S	/^function ff_float_to_int16_interleave_neon, export=1$/;"	l
function	libavcodec/arm/fmtconvert_neon.S	/^function ff_float_to_int16_neon, export=1$/;"	l
function	libavcodec/arm/fmtconvert_neon.S	/^function ff_int32_to_float_fmul_scalar_neon, export=1$/;"	l
function	libavcodec/arm/fmtconvert_vfp.S	/^function ff_float_to_int16_vfp, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function \\type\\()_h264_qpel16_h_lowpass_l2_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function \\type\\()_h264_qpel16_h_lowpass_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function \\type\\()_h264_qpel16_hv_lowpass_l2_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function \\type\\()_h264_qpel16_hv_lowpass_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function \\type\\()_h264_qpel16_v_lowpass_l2_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function \\type\\()_h264_qpel16_v_lowpass_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function \\type\\()_h264_qpel8_h_lowpass_l2_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function \\type\\()_h264_qpel8_h_lowpass_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function \\type\\()_h264_qpel8_hv_lowpass_l2_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function \\type\\()_h264_qpel8_hv_lowpass_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function \\type\\()_h264_qpel8_v_lowpass_l2_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function \\type\\()_h264_qpel8_v_lowpass_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function biweight_h264_pixels_\\w\\()_neon$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_chroma_mc2_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_chroma_mc4_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_chroma_mc8_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc01_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc02_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc03_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc10_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc11_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc12_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc13_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc20_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc21_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc22_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc23_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc30_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc31_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc32_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel16_mc33_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc01_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc02_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc03_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc10_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc11_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc12_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc13_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc20_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc21_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc22_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc23_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc30_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc31_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc32_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_\\type\\()_h264_qpel8_mc33_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_biweight_h264_pixels_\\w\\()x\\h\\()_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_h264_h_loop_filter_chroma_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_h264_h_loop_filter_luma_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_h264_v_loop_filter_chroma_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_h264_v_loop_filter_luma_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function ff_weight_h264_pixels_\\w\\()x\\h\\()_neon, export=1$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function put_h264_qpel16_h_lowpass_neon_packed$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function put_h264_qpel16_v_lowpass_neon_packed$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function put_h264_qpel8_hv_lowpass_neon_top$/;"	l
function	libavcodec/arm/h264dsp_neon.S	/^function weight_h264_pixels_\\w\\()_neon$/;"	l
function	libavcodec/arm/h264idct_neon.S	/^function ff_h264_idct8_add4_neon, export=1$/;"	l
function	libavcodec/arm/h264idct_neon.S	/^function ff_h264_idct8_add_neon, export=1$/;"	l
function	libavcodec/arm/h264idct_neon.S	/^function ff_h264_idct8_dc_add_neon, export=1$/;"	l
function	libavcodec/arm/h264idct_neon.S	/^function ff_h264_idct_add16_neon, export=1$/;"	l
function	libavcodec/arm/h264idct_neon.S	/^function ff_h264_idct_add16intra_neon, export=1$/;"	l
function	libavcodec/arm/h264idct_neon.S	/^function ff_h264_idct_add8_neon, export=1$/;"	l
function	libavcodec/arm/h264idct_neon.S	/^function ff_h264_idct_add_neon, export=1$/;"	l
function	libavcodec/arm/h264idct_neon.S	/^function ff_h264_idct_dc_add_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred16x16_128_dc_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred16x16_dc_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred16x16_hor_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred16x16_left_dc_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred16x16_plane_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred16x16_top_dc_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred16x16_vert_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred8x8_0l0_dc_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred8x8_0lt_dc_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred8x8_128_dc_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred8x8_dc_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred8x8_hor_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred8x8_l00_dc_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred8x8_l0t_dc_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred8x8_left_dc_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred8x8_plane_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred8x8_top_dc_neon, export=1$/;"	l
function	libavcodec/arm/h264pred_neon.S	/^function ff_pred8x8_vert_neon, export=1$/;"	l
function	libavcodec/arm/int_neon.S	/^function ff_scalarproduct_and_madd_int16_neon, export=1$/;"	l
function	libavcodec/arm/int_neon.S	/^function ff_scalarproduct_int16_neon, export=1$/;"	l
function	libavcodec/arm/jrevdct_arm.S	/^function ff_j_rev_dct_arm, export=1$/;"	l
function	libavcodec/arm/mdct_fixed_neon.S	/^function ff_mdct_fixed_calc_neon, export=1$/;"	l
function	libavcodec/arm/mdct_fixed_neon.S	/^function ff_mdct_fixed_calcw_neon, export=1$/;"	l
function	libavcodec/arm/mdct_neon.S	/^function ff_imdct_calc_neon, export=1$/;"	l
function	libavcodec/arm/mdct_neon.S	/^function ff_imdct_half_neon, export=1$/;"	l
function	libavcodec/arm/mdct_neon.S	/^function ff_mdct_calc_neon, export=1$/;"	l
function	libavcodec/arm/mpegaudiodsp_fixed_armv6.S	/^function ff_mpadsp_apply_window_fixed_armv6, export=1$/;"	l
function	libavcodec/arm/mpegvideo_armv5te_s.S	/^function ff_dct_unquantize_h263_armv5te, export=1$/;"	l
function	libavcodec/arm/mpegvideo_neon.S	/^function ff_dct_unquantize_h263_inter_neon, export=1$/;"	l
function	libavcodec/arm/mpegvideo_neon.S	/^function ff_dct_unquantize_h263_intra_neon, export=1$/;"	l
function	libavcodec/arm/mpegvideo_neon.S	/^function ff_dct_unquantize_h263_neon, export=1$/;"	l
function	libavcodec/arm/rdft_neon.S	/^function ff_rdft_calc_neon, export=1$/;"	l
function	libavcodec/arm/simple_idct_arm.S	/^function ff_simple_idct_arm, export=1$/;"	l
function	libavcodec/arm/simple_idct_armv5te.S	/^function ff_simple_idct_add_armv5te, export=1$/;"	l
function	libavcodec/arm/simple_idct_armv5te.S	/^function ff_simple_idct_armv5te, export=1$/;"	l
function	libavcodec/arm/simple_idct_armv5te.S	/^function ff_simple_idct_put_armv5te, export=1$/;"	l
function	libavcodec/arm/simple_idct_armv5te.S	/^function idct_col_add_armv5te$/;"	l
function	libavcodec/arm/simple_idct_armv5te.S	/^function idct_col_armv5te$/;"	l
function	libavcodec/arm/simple_idct_armv5te.S	/^function idct_col_put_armv5te$/;"	l
function	libavcodec/arm/simple_idct_armv5te.S	/^function idct_row_armv5te$/;"	l
function	libavcodec/arm/simple_idct_armv6.S	/^function ff_simple_idct_add_armv6, export=1$/;"	l
function	libavcodec/arm/simple_idct_armv6.S	/^function ff_simple_idct_armv6, export=1$/;"	l
function	libavcodec/arm/simple_idct_armv6.S	/^function ff_simple_idct_put_armv6, export=1$/;"	l
function	libavcodec/arm/simple_idct_armv6.S	/^function idct_col_add_armv6$/;"	l
function	libavcodec/arm/simple_idct_armv6.S	/^function idct_col_armv6$/;"	l
function	libavcodec/arm/simple_idct_armv6.S	/^function idct_col_put_armv6$/;"	l
function	libavcodec/arm/simple_idct_armv6.S	/^function idct_row_armv6$/;"	l
function	libavcodec/arm/simple_idct_neon.S	/^function ff_simple_idct_add_neon, export=1$/;"	l
function	libavcodec/arm/simple_idct_neon.S	/^function ff_simple_idct_neon, export=1$/;"	l
function	libavcodec/arm/simple_idct_neon.S	/^function ff_simple_idct_put_neon, export=1$/;"	l
function	libavcodec/arm/simple_idct_neon.S	/^function idct_col4_add8_neon$/;"	l
function	libavcodec/arm/simple_idct_neon.S	/^function idct_col4_neon$/;"	l
function	libavcodec/arm/simple_idct_neon.S	/^function idct_col4_st16_neon$/;"	l
function	libavcodec/arm/simple_idct_neon.S	/^function idct_col4_st8_neon$/;"	l
function	libavcodec/arm/simple_idct_neon.S	/^function idct_row4_neon$/;"	l
function	libavcodec/arm/simple_idct_neon.S	/^function idct_row4_pld_neon$/;"	l
function	libavcodec/arm/synth_filter_neon.S	/^function ff_synth_filter_float_neon, export=1$/;"	l
function	libavcodec/arm/vp3dsp_neon.S	/^function ff_vp3_h_loop_filter_neon, export=1$/;"	l
function	libavcodec/arm/vp3dsp_neon.S	/^function ff_vp3_idct_add_neon, export=1$/;"	l
function	libavcodec/arm/vp3dsp_neon.S	/^function ff_vp3_idct_dc_add_neon, export=1$/;"	l
function	libavcodec/arm/vp3dsp_neon.S	/^function ff_vp3_idct_neon, export=1$/;"	l
function	libavcodec/arm/vp3dsp_neon.S	/^function ff_vp3_idct_put_neon, export=1$/;"	l
function	libavcodec/arm/vp3dsp_neon.S	/^function ff_vp3_v_loop_filter_neon, export=1$/;"	l
function	libavcodec/arm/vp3dsp_neon.S	/^function vp3_idct_core_neon$/;"	l
function	libavcodec/arm/vp3dsp_neon.S	/^function vp3_idct_end_\\type\\()_neon$/;"	l
function	libavcodec/arm/vp3dsp_neon.S	/^function vp3_idct_start_neon$/;"	l
function	libavcodec/arm/vp56dsp_neon.S	/^function ff_vp6_edge_filter_hor_neon, export=1$/;"	l
function	libavcodec/arm/vp56dsp_neon.S	/^function ff_vp6_edge_filter_ver_neon, export=1$/;"	l
function	libavcodec/arm/vp8_armv6.S	/^function ff_decode_block_coeffs_armv6, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_bilin16_h_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_bilin16_hv_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_bilin16_v_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_bilin4_h_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_bilin4_hv_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_bilin4_v_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_bilin8_h_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_bilin8_hv_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_bilin8_v_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel16_h6_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel16_h6v6_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel16_v6_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel4_h4_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel4_h4v4_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel4_h4v6_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel4_h6_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel4_h6v4_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel4_h6v6_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel4_v4_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel4_v6_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel8_h4_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel8_h4v4_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel8_h4v6_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel8_h6_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel8_h6v4_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel8_h6v6_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel8_v4_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_epel8_v6_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_pixels16_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_pixels4_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_put_vp8_pixels8_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_vp8_h_loop_filter16\\name\\()_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_vp8_h_loop_filter8uv\\name\\()_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_vp8_idct_add_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_vp8_idct_dc_add4uv_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_vp8_idct_dc_add4y_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_vp8_idct_dc_add_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_vp8_luma_dc_wht_dc_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_vp8_luma_dc_wht_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_vp8_v_loop_filter16\\name\\()_neon, export=1$/;"	l
function	libavcodec/arm/vp8dsp_neon.S	/^function ff_vp8_v_loop_filter8uv\\name\\()_neon, export=1$/;"	l
funny_diamond_search	libavcodec/motion_est_template.c	/^static int funny_diamond_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
g	libavfilter/libmpcodecs/libvo/video_out.h	/^  uint16_t r,g,b;$/;"	m	struct:__anon30
g	libavfilter/libmpcodecs/vf_eq2.c	/^  double        g;$/;"	m	struct:eq2_param_t	file:
g	libavformat/gif.c	/^    unsigned char g;$/;"	m	struct:__anon384	file:
g	tests/videogen.c	/^    int r, g, b;$/;"	m	struct:VObj	file:
g0_Q12	libavcodec/aacps_tablegen.h	/^static const float g0_Q12[] = {$/;"	v
g0_Q8	libavcodec/aacps_tablegen.h	/^static const float g0_Q8[] = {$/;"	v
g1_Q2	libavcodec/aacpsdata.c	/^static const float g1_Q2[] = {$/;"	v	file:
g1_Q8	libavcodec/aacps_tablegen.h	/^static const float g1_Q8[] = {$/;"	v
g2_Q4	libavcodec/aacps_tablegen.h	/^static const float g2_Q4[] = {$/;"	v
g722_close	libavcodec/g722.c	/^static av_cold int g722_close(AVCodecContext *avctx)$/;"	f	file:
g722_decode_frame	libavcodec/g722.c	/^static int g722_decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
g722_encode_frame	libavcodec/g722.c	/^static int g722_encode_frame(AVCodecContext *avctx,$/;"	f	file:
g722_encode_trellis	libavcodec/g722.c	/^static int g722_encode_trellis(AVCodecContext *avctx,$/;"	f	file:
g722_init	libavcodec/g722.c	/^static av_cold int g722_init(AVCodecContext * avctx)$/;"	f	file:
g726_16_parse_sdp_line	libavformat/rtpdec_g726.c	/^static int g726_16_parse_sdp_line(AVFormatContext *s, int st_index,$/;"	f	file:
g726_24_parse_sdp_line	libavformat/rtpdec_g726.c	/^static int g726_24_parse_sdp_line(AVFormatContext *s, int st_index,$/;"	f	file:
g726_32_parse_sdp_line	libavformat/rtpdec_g726.c	/^static int g726_32_parse_sdp_line(AVFormatContext *s, int st_index,$/;"	f	file:
g726_40_parse_sdp_line	libavformat/rtpdec_g726.c	/^static int g726_40_parse_sdp_line(AVFormatContext *s, int st_index,$/;"	f	file:
g726_close	libavcodec/g726.c	/^static av_cold int g726_close(AVCodecContext *avctx)$/;"	f	file:
g726_decode	libavcodec/g726.c	/^static int16_t g726_decode(G726Context* c, int I)$/;"	f	file:
g726_decode_frame	libavcodec/g726.c	/^static int g726_decode_frame(AVCodecContext *avctx,$/;"	f	file:
g726_encode	libavcodec/g726.c	/^static int16_t g726_encode(G726Context* c, int16_t sig)$/;"	f	file:
g726_encode_frame	libavcodec/g726.c	/^static int g726_encode_frame(AVCodecContext *avctx,$/;"	f	file:
g726_init	libavcodec/g726.c	/^static av_cold int g726_init(AVCodecContext * avctx)$/;"	f	file:
g726_reset	libavcodec/g726.c	/^static av_cold int g726_reset(G726Context* c, int index)$/;"	f	file:
g729_prng	libavcodec/g729dec.c	/^static inline uint16_t g729_prng(uint16_t value)$/;"	f	file:
gBlock	libavcodec/atrac3.c	/^    gain_info   gBlock[4];$/;"	m	struct:__anon128	file:
gCpuCaps	libavfilter/vf_mp.c	/^CpuCaps gCpuCaps; \/\/FIXME initialize this so optims work$/;"	v
g_temp	libavcodec/sbr.h	/^    float              g_temp[42][48];$/;"	m	struct:__anon56
gai_strerror	libavformat/network.h	180;"	d
gain	libavcodec/aac.h	/^    float gain[16][120];$/;"	m	struct:__anon243
gain	libavcodec/iirfilter.c	/^    float gain;$/;"	m	struct:FFIIRFilterCoeffs	file:
gain	libavcodec/sbr.h	/^    float              gain[7][48];$/;"	m	struct:__anon57
gainBlock	libavcodec/atrac3.c	/^    gain_block        gainBlock[2];$/;"	m	struct:__anon130	file:
gainCompensateAndOverlap	libavcodec/atrac3.c	/^static void gainCompensateAndOverlap (float *pIn, float *pPrev, float *pOut, gain_info *pGain1, gain_info *pGain2)$/;"	f	file:
gain_1	libavcodec/cook.c	/^    int                 gain_1[9];$/;"	m	struct:__anon230	file:
gain_2	libavcodec/cook.c	/^    int                 gain_2[9];$/;"	m	struct:__anon230	file:
gain_3	libavcodec/cook.c	/^    int                 gain_3[9];$/;"	m	struct:__anon230	file:
gain_4	libavcodec/cook.c	/^    int                 gain_4[9];$/;"	m	struct:__anon230	file:
gain_block	libavcodec/atrac3.c	/^} gain_block;$/;"	t	typeref:struct:__anon128	file:
gain_bw_tab	libavcodec/ra288.h	/^static const float gain_bw_tab[10]={$/;"	v
gain_cb	libavcodec/siprdata.h	/^static const float gain_cb[128][2] = {$/;"	v
gain_cb_16k	libavcodec/sipr16kdata.h	/^static const float gain_cb_16k[32] = {$/;"	v
gain_hist	libavcodec/ra288.c	/^    float gain_hist[38];$/;"	m	struct:__anon132	file:
gain_info	libavcodec/atrac3.c	/^} gain_info;$/;"	t	typeref:struct:__anon127	file:
gain_levels	libavcodec/ac3dec.c	/^static const float gain_levels[9] = {$/;"	v	file:
gain_lpc	libavcodec/ra288.c	/^    float gain_lpc[10];    \/\/\/< LPC coefficients for gain        (spec: GB)$/;"	m	struct:__anon132	file:
gain_mem	libavcodec/sipr.h	/^    float gain_mem;$/;"	m	struct:__anon235
gain_pitch_cb_16k	libavcodec/sipr16kdata.h	/^static const float gain_pitch_cb_16k[16] = {$/;"	v
gain_pred_err	libavcodec/wmavoice.c	/^    float gain_pred_err[6];       \/\/\/< cache for gain prediction$/;"	m	struct:__anon157	file:
gain_rec	libavcodec/ra288.c	/^    float gain_rec[11];$/;"	m	struct:__anon132	file:
gain_size_factor	libavcodec/cook.c	/^    int                 gain_size_factor;$/;"	m	struct:cook	file:
gain_tab1	libavcodec/atrac3.c	/^static float            gain_tab1[16];$/;"	v	file:
gain_tab2	libavcodec/atrac3.c	/^static float            gain_tab2[31];$/;"	v	file:
gain_table	libavcodec/cook.c	/^    float               gain_table[23];$/;"	m	struct:cook	file:
gain_window	libavcodec/ra288.h	/^static const float gain_window[38]={$/;"	v
gains1	libavcodec/cook.c	/^    cook_gains          gains1;$/;"	m	struct:__anon230	file:
gains2	libavcodec/cook.c	/^    cook_gains          gains2;$/;"	m	struct:__anon230	file:
gains_MODE_4k75	libavcodec/amrnbdata.h	/^static const uint16_t gains_MODE_4k75[512][2] = {$/;"	v
gains_high	libavcodec/amrnbdata.h	/^static const uint16_t gains_high[128][2] = {$/;"	v
gains_low	libavcodec/amrnbdata.h	/^static const uint16_t gains_low[64][2] = {$/;"	v
gamma	libavfilter/libmpcodecs/vf_eq2.c	/^  double        gamma;$/;"	m	struct:vf_priv_s	file:
gamma_corr	libavcodec/xan.c	/^static uint8_t gamma_corr(uint8_t in) {$/;"	f	file:
gamma_lookup	libavcodec/xan.c	/^static const uint8_t gamma_lookup[256] = {$/;"	v	file:
gamma_weight	libavfilter/libmpcodecs/vf_eq2.c	/^  double        gamma_weight;$/;"	m	struct:vf_priv_s	file:
gapless	libavcodec/mpc.h	/^    int IS, MSS, gapless;$/;"	m	struct:__anon179
gaps_in_frame_num_allowed_flag	libavcodec/h264.h	/^    int gaps_in_frame_num_allowed_flag;$/;"	m	struct:SPS
gather_data_for_cel	libavcodec/roqvideoenc.c	/^static void gather_data_for_cel(CelEvaluation *cel, RoqContext *enc,$/;"	f	file:
gather_data_for_subcel	libavcodec/roqvideoenc.c	/^static void gather_data_for_subcel(SubcelEvaluation *subcel, int x,$/;"	f	file:
gb	libavcodec/4xm.c	/^    GetBitContext gb;$/;"	m	struct:FourXContext	file:
gb	libavcodec/alac.c	/^    GetBitContext gb;$/;"	m	struct:__anon266	file:
gb	libavcodec/alsdec.c	/^    GetBitContext gb;$/;"	m	struct:__anon152	file:
gb	libavcodec/asv1.c	/^    GetBitContext gb;$/;"	m	struct:ASV1Context	file:
gb	libavcodec/atrac3.c	/^    GetBitContext       gb;$/;"	m	struct:__anon131	file:
gb	libavcodec/binkaudio.c	/^    GetBitContext gb;$/;"	m	struct:__anon136	file:
gb	libavcodec/cljr.c	/^    GetBitContext gb;$/;"	m	struct:CLJRContext	file:
gb	libavcodec/cook.c	/^    GetBitContext       gb;$/;"	m	struct:cook	file:
gb	libavcodec/dca.c	/^    GetBitContext gb;$/;"	m	struct:__anon93	file:
gb	libavcodec/dnxhddec.c	/^    GetBitContext gb;$/;"	m	struct:__anon154	file:
gb	libavcodec/ffv1.c	/^    GetBitContext gb;$/;"	m	struct:FFV1Context	file:
gb	libavcodec/flacdec.c	/^    GetBitContext gb;                       \/\/\/< GetBitContext initialized to start at the current frame$/;"	m	struct:FLACContext	file:
gb	libavcodec/huffyuv.c	/^    GetBitContext gb;$/;"	m	struct:HYuvContext	file:
gb	libavcodec/imc.c	/^    GetBitContext gb;$/;"	m	struct:__anon90	file:
gb	libavcodec/indeo2.c	/^    GetBitContext gb;$/;"	m	struct:Ir2Context	file:
gb	libavcodec/indeo5.c	/^    GetBitContext   gb;$/;"	m	struct:__anon203	file:
gb	libavcodec/loco.c	/^    GetBitContext gb;$/;"	m	struct:RICEContext	file:
gb	libavcodec/mdec.c	/^    GetBitContext gb;$/;"	m	struct:MDECContext	file:
gb	libavcodec/mimic.c	/^    GetBitContext   gb;$/;"	m	struct:__anon282	file:
gb	libavcodec/mjpegdec.h	/^    GetBitContext gb;$/;"	m	struct:MJpegDecodeContext
gb	libavcodec/mpc.h	/^    GetBitContext gb;$/;"	m	struct:__anon179
gb	libavcodec/mpegaudiodec.c	/^    GetBitContext gb;$/;"	m	struct:MPADecodeContext	file:
gb	libavcodec/mpegvideo.h	/^    GetBitContext gb;$/;"	m	struct:MpegEncContext
gb	libavcodec/nellymoserdec.c	/^    GetBitContext   gb;$/;"	m	struct:NellyMoserDecodeContext	file:
gb	libavcodec/qcelpdec.c	/^    GetBitContext     gb;$/;"	m	struct:__anon225	file:
gb	libavcodec/shorten.c	/^    GetBitContext gb;$/;"	m	struct:ShortenContext	file:
gb	libavcodec/svq1enc.c	/^    GetBitContext gb;$/;"	m	struct:SVQ1Context	file:
gb	libavcodec/truemotion2.c	/^    GetBitContext gb;$/;"	m	struct:TM2Context	file:
gb	libavcodec/tta.c	/^    GetBitContext gb;$/;"	m	struct:TTAContext	file:
gb	libavcodec/vorbisdec.c	/^    GetBitContext gb;$/;"	m	struct:vorbis_context_s	file:
gb	libavcodec/vp56.h	/^    GetBitContext gb;$/;"	m	struct:vp56_context
gb	libavcodec/wavpack.c	/^    GetBitContext gb;$/;"	m	struct:WavpackFrameContext	file:
gb	libavcodec/wma.h	/^    GetBitContext gb;$/;"	m	struct:WMACodecContext
gb	libavcodec/wmaprodec.c	/^    GetBitContext    gb;                            \/\/\/< bitstream reader context$/;"	m	struct:WMAProDecodeCtx	file:
gb	libavcodec/wmavoice.c	/^    GetBitContext gb;             \/\/\/< packet bitreader. During decoder init,$/;"	m	struct:__anon157	file:
gb	libavcodec/wnv1.c	/^    GetBitContext gb;$/;"	m	struct:WNV1Context	file:
gb_buf	libavdevice/v4l.c	/^    struct video_mmap gb_buf;$/;"	m	struct:__anon316	typeref:struct:__anon316::video_mmap	file:
gb_buffers	libavdevice/v4l.c	/^    struct video_mbuf gb_buffers;$/;"	m	struct:__anon316	typeref:struct:__anon316::video_mbuf	file:
gb_extra_bits	libavcodec/wavpack.c	/^    GetBitContext gb_extra_bits;$/;"	m	struct:WavpackFrameContext	file:
gb_frame	libavdevice/v4l.c	/^    int gb_frame;$/;"	m	struct:__anon316	file:
gb_get_v	libavformat/mpc8.c	/^static inline int64_t gb_get_v(GetBitContext *gb)$/;"	f	file:
gbc	libavcodec/ac3dec.h	/^    GetBitContext gbc;                      \/\/\/< bitstream reader$/;"	m	struct:__anon88
gcBlkSwitch	libavcodec/atrac3.c	/^    int               gcBlkSwitch;$/;"	m	struct:__anon130	file:
gc_1st_index_bits	libavcodec/g729dec.c	/^    uint8_t gc_1st_index_bits;  \/\/\/< gain codebook (first stage) index (size in bits)$/;"	m	struct:__anon271	file:
gc_2nd_index_bits	libavcodec/g729dec.c	/^    uint8_t gc_2nd_index_bits;  \/\/\/< gain codebook (second stage) index (size in bits)$/;"	m	struct:__anon271	file:
gc_index	libavcodec/sipr.h	/^    int gc_index[5];           \/\/\/< fixed-codebook gain indexes$/;"	m	struct:__anon236
gc_index_bits	libavcodec/sipr.c	/^    uint8_t gc_index_bits;     \/\/\/< size in bits of the gain  codebook indexes$/;"	m	struct:__anon112	file:
gcd	libavfilter/libmpcodecs/vf_filmdint.c	/^static unsigned long gcd(unsigned long x, unsigned long y)$/;"	f	file:
gce_delay	libavcodec/gifdec.c	/^    int gce_delay;$/;"	m	struct:GifState	file:
gce_disposal	libavcodec/gifdec.c	/^    int gce_disposal;$/;"	m	struct:GifState	file:
gen_bytes_read	libavformat/rtmpproto.c	/^static void gen_bytes_read(URLContext *s, RTMPContext *rt, uint32_t ts)$/;"	f	file:
gen_connect	libavformat/rtmpproto.c	/^static void gen_connect(URLContext *s, RTMPContext *rt, const char *proto,$/;"	f	file:
gen_create_stream	libavformat/rtmpproto.c	/^static void gen_create_stream(URLContext *s, RTMPContext *rt)$/;"	f	file:
gen_delete_stream	libavformat/rtmpproto.c	/^static void gen_delete_stream(URLContext *s, RTMPContext *rt)$/;"	f	file:
gen_fcpublish_stream	libavformat/rtmpproto.c	/^static void gen_fcpublish_stream(URLContext *s, RTMPContext *rt)$/;"	f	file:
gen_fcunpublish_stream	libavformat/rtmpproto.c	/^static void gen_fcunpublish_stream(URLContext *s, RTMPContext *rt)$/;"	f	file:
gen_fname	libavfilter/libmpcodecs/vf_screenshot.c	/^static void gen_fname(struct vf_priv_s* priv)$/;"	f	file:
gen_image	tests/rotozoom.c	/^static void gen_image(int num, int w, int h)$/;"	f	file:
gen_image	tests/videogen.c	/^static void gen_image(int num, int w, int h)$/;"	f	file:
gen_play	libavformat/rtmpproto.c	/^static void gen_play(URLContext *s, RTMPContext *rt)$/;"	f	file:
gen_pong	libavformat/rtmpproto.c	/^static void gen_pong(URLContext *s, RTMPContext *rt, RTMPPacket *ppkt)$/;"	f	file:
gen_publish	libavformat/rtmpproto.c	/^static void gen_publish(URLContext *s, RTMPContext *rt)$/;"	f	file:
gen_release_stream	libavformat/rtmpproto.c	/^static void gen_release_stream(URLContext *s, RTMPContext *rt)$/;"	f	file:
gen_roundkeys	libavutil/des.c	/^static void gen_roundkeys(uint64_t K[16], uint64_t key) {$/;"	f	file:
gen_vector_table15	libavcodec/truemotion1.c	/^static void gen_vector_table15(TrueMotion1Context *s, const uint8_t *sel_vector_table)$/;"	f	file:
gen_vector_table16	libavcodec/truemotion1.c	/^static void gen_vector_table16(TrueMotion1Context *s, const uint8_t *sel_vector_table)$/;"	f	file:
gen_vector_table24	libavcodec/truemotion1.c	/^static void gen_vector_table24(TrueMotion1Context *s, const uint8_t *sel_vector_table)$/;"	f	file:
generate_2_noise_channels	libavcodec/mlpdec.c	/^static void generate_2_noise_channels(MLPDecodeContext *m, unsigned int substr)$/;"	f	file:
generate_bits_table	libavcodec/huffyuv.c	/^static int generate_bits_table(uint32_t *dst, const uint8_t *len_table){$/;"	f	file:
generate_codebook	libavcodec/roqvideoenc.c	/^static void generate_codebook(RoqContext *enc, RoqTempdata *tempdata,$/;"	f	file:
generate_default_palette	libavcodec/flashsv2enc.c	/^static int generate_default_palette(Palette * palette)$/;"	f	file:
generate_half_size_image	libavfilter/libmpcodecs/vf_remove_logo.c	/^static pgm_structure * generate_half_size_image(vf_instance_t * vf, pgm_structure * input_image)$/;"	f	file:
generate_joint_tables	libavcodec/huffyuv.c	/^static void generate_joint_tables(HYuvContext *s){$/;"	f	file:
generate_len_table	libavcodec/huffyuv.c	/^static void generate_len_table(uint8_t *dst, const uint64_t *stats){$/;"	f	file:
generate_new_codebooks	libavcodec/roqvideoenc.c	/^static void generate_new_codebooks(RoqContext *enc, RoqTempdata *tempData)$/;"	f	file:
generate_optimum_palette	libavcodec/flashsv2enc.c	/^static int generate_optimum_palette(Palette * palette, const uint8_t * image,$/;"	f	file:
generate_silence	ffmpeg.c	/^static void generate_silence(uint8_t* buf, enum AVSampleFormat sample_fmt, size_t size)$/;"	f	file:
generate_silence	ffmpeg/ffmpeg.c	/^static void generate_silence(uint8_t* buf, enum AVSampleFormat sample_fmt, size_t size)$/;"	f	file:
generic	libavformat/metadata.h	/^    const char *generic;$/;"	m	struct:AVMetadataConv
genpts	ffplay.c	/^static int genpts = 0;$/;"	v	file:
gensym	doc/texi2pod.pl	/^    sub gensym$/;"	s
get16	libavformat/mpegts.c	/^static inline int get16(const uint8_t **pp, const uint8_t *p_end)$/;"	f	file:
get8	libavformat/mpegts.c	/^static inline int get8(const uint8_t **pp, const uint8_t *p_end)$/;"	f	file:
getChannelWeights	libavcodec/atrac3.c	/^static void getChannelWeights (int indx, int flag, float ch[2]){$/;"	f	file:
getCoeff	libavfilter/libmpcodecs/vf_perspective.c	/^static double getCoeff(double d){$/;"	f	file:
getSSD	libswscale/swscale-test.c	/^static uint64_t getSSD(uint8_t *src1, uint8_t *src2, int stride1, int stride2, int w, int h)$/;"	f	file:
getSplineCoeff	libswscale/utils.c	/^static double getSplineCoeff(double a, double b, double c, double d, double dist)$/;"	f	file:
getSubSampleFactors	libavfilter/libmpcodecs/vf_sab.c	/^static void getSubSampleFactors(int *h, int *v, int format){$/;"	f	file:
getSubSampleFactors	libavfilter/libmpcodecs/vf_smartblur.c	/^static void getSubSampleFactors(int *h, int *v, int format){$/;"	f	file:
getSubSampleFactors	libswscale/utils.c	/^static void getSubSampleFactors(int *h, int *v, enum PixelFormat format)$/;"	f	file:
get_4block_rd	libavcodec/snow.c	/^static int get_4block_rd(SnowContext *s, int mb_x, int mb_y, int plane_index){$/;"	f	file:
get_VAMvModeVC1	libavcodec/vaapi_vc1.c	/^static int get_VAMvModeVC1(enum MVModes mv_mode)$/;"	f	file:
get_aac_sample_rates	libavformat/matroskaenc.c	/^static void get_aac_sample_rates(AVFormatContext *s, AVCodecContext *codec, int *sample_rate, int *output_sample_rate)$/;"	f	file:
get_aiff_header	libavformat/aiffdec.c	/^static unsigned int get_aiff_header(AVIOContext *pb, AVCodecContext *codec,$/;"	f	file:
get_alpha_info_pal8	libavcodec/imgconvert.c	/^static int get_alpha_info_pal8(const AVPicture *src, int width, int height)$/;"	f	file:
get_amv	libavcodec/mpeg4videodec.c	/^static inline int get_amv(MpegEncContext *s, int n){$/;"	f	file:
get_arg	ffserver.c	/^static void get_arg(char *buf, int buf_size, const char **pp)$/;"	f	file:
get_array	libavcodec/dca.c	/^static inline void get_array(GetBitContext *gb, int *dst, int len, int bits)$/;"	f	file:
get_attachment	libavformat/wtvdec.c	/^static void get_attachment(AVFormatContext *s, AVIOContext *pb, int length)$/;"	f	file:
get_audio_buffer	libavfilter/avfilter.h	/^    AVFilterBufferRef *(*get_audio_buffer)(AVFilterLink *link, int perms,$/;"	m	struct:AVFilterPad
get_audio_clock	ffplay.c	/^static double get_audio_clock(VideoState *is)$/;"	f	file:
get_audio_flags	libavformat/flvenc.c	/^static int get_audio_flags(AVCodecContext *enc){$/;"	f	file:
get_audio_frame	doc/examples/muxing-example.c	/^static void get_audio_frame(int16_t *samples, int frame_size, int nb_channels)$/;"	f	file:
get_audio_frame_size	libavformat/utils.c	/^static int get_audio_frame_size(AVCodecContext *enc, int size)$/;"	f	file:
get_b_cbp	libavcodec/h263.h	/^static inline int get_b_cbp(MpegEncContext * s, DCTELEM block[6][64],$/;"	f
get_base128	libavformat/rtpdec_xiph.c	/^static int get_base128(const uint8_t ** buf, const uint8_t * buf_end)$/;"	f	file:
get_best_header	libavcodec/flac_parser.c	/^static int get_best_header(FLACParseContext* fpc, const uint8_t **poutbuf,$/;"	f	file:
get_bit_rate	libavcodec/utils.c	/^static int get_bit_rate(AVCodecContext *ctx)$/;"	f	file:
get_bitalloc	libavcodec/dca.c	/^static av_always_inline int get_bitalloc(GetBitContext *gb, BitAlloc *ba, int idx)$/;"	f	file:
get_bitrate_mode	libavcodec/libopencore-amr.c	/^static int get_bitrate_mode(int bitrate, void *log_ctx)$/;"	f	file:
get_bits	libavcodec/get_bits.h	/^static inline unsigned int get_bits(GetBitContext *s, int n){$/;"	f
get_bits	libavcodec/get_bits.h	597;"	d
get_bits	libavcodec/j2kdec.c	/^static int get_bits(J2kDecoderContext *s, int n)$/;"	f	file:
get_bits1	libavcodec/get_bits.h	/^static inline unsigned int get_bits1(GetBitContext *s){$/;"	f
get_bits1	libavcodec/get_bits.h	598;"	d
get_bits1_vector	libavcodec/aacsbr.c	/^static av_always_inline void get_bits1_vector(GetBitContext *gb, uint8_t *vec,$/;"	f	file:
get_bits_align32	libavcodec/binkaudio.c	/^static void get_bits_align32(GetBitContext *s)$/;"	f	file:
get_bits_count	libavcodec/get_bits.h	/^static inline int get_bits_count(const GetBitContext *s) {$/;"	f
get_bits_count	libavcodec/get_bits.h	/^static inline int get_bits_count(const GetBitContext *s){$/;"	f
get_bits_diff	libavcodec/mpegvideo.h	/^static inline int get_bits_diff(MpegEncContext *s){$/;"	f
get_bits_left	libavcodec/get_bits.h	/^static inline int get_bits_left(GetBitContext *gb)$/;"	f
get_bits_long	libavcodec/get_bits.h	/^static inline unsigned int get_bits_long(GetBitContext *s, int n){$/;"	f
get_bits_trace	libavcodec/get_bits.h	/^static inline int get_bits_trace(GetBitContext *s, int n, char *file,$/;"	f
get_bitsz	libavcodec/mpegaudiodec.c	/^static inline int get_bitsz(GetBitContext *s, int n)$/;"	f	file:
get_block	libavcodec/rtjpeg.c	/^static inline int get_block(GetBitContext *gb, DCTELEM *block, const uint8_t *scan,$/;"	f	file:
get_block_bits	libavcodec/snow.c	/^static inline int get_block_bits(SnowContext *s, int x, int y, int w){$/;"	f	file:
get_block_rate	libavcodec/mpeg4videoenc.c	/^static inline int get_block_rate(MpegEncContext * s, DCTELEM block[64], int block_last_index, uint8_t scantable[64]){$/;"	f	file:
get_block_rd	libavcodec/snow.c	/^static int get_block_rd(SnowContext *s, int mb_x, int mb_y, int plane_index, const uint8_t *obmc_edged){$/;"	f	file:
get_block_sizes	libavcodec/alsdec.c	/^static void get_block_sizes(ALSDecContext *ctx, unsigned int *div_blocks,$/;"	f	file:
get_block_stats	libavfilter/libmpcodecs/vf_filmdint.c	/^get_block_stats(struct metrics *m, struct vf_priv_s *p, struct frame_stats *s)$/;"	f	file:
get_blur	libavfilter/libmpcodecs/vf_remove_logo.c	/^static void get_blur(const vf_instance_t * const vf, unsigned int * const value_out, const pgm_structure * const logo_mask,$/;"	f	file:
get_bs	libavcodec/cavs.c	/^static inline int get_bs(cavs_vector *mvP, cavs_vector *mvQ, int b) {$/;"	f	file:
get_bucket	libavcodec/dnxhdenc.c	/^static inline int get_bucket(int value, int shift)$/;"	f	file:
get_buffer	libavcodec/avcodec.h	/^    int (*get_buffer)(struct AVCodecContext *c, AVFrame *pic);$/;"	m	struct:AVCodecContext
get_buffer	libavformat/aviobuf.c	/^int get_buffer(AVIOContext *s, unsigned char *buf, int size)$/;"	f
get_byte	libavformat/aviobuf.c	/^int get_byte(AVIOContext *s)$/;"	f
get_byte	libavutil/lzo.c	/^static inline int get_byte(LZOContext *c) {$/;"	f	file:
get_cabac	libavcodec/cabac.h	/^static int av_unused get_cabac(CABACContext *c, uint8_t * const state){$/;"	f
get_cabac_bypass	libavcodec/cabac.h	/^static int av_unused get_cabac_bypass(CABACContext *c){$/;"	f
get_cabac_bypass_sign	libavcodec/cabac.h	/^static av_always_inline int get_cabac_bypass_sign(CABACContext *c, int val){$/;"	f
get_cabac_bypass_sign	libavcodec/x86/cabac.h	111;"	d
get_cabac_bypass_sign_x86	libavcodec/x86/cabac.h	/^static av_always_inline int get_cabac_bypass_sign_x86(CABACContext *c, int val)$/;"	f
get_cabac_cbf_ctx	libavcodec/h264_cabac.c	/^static av_always_inline int get_cabac_cbf_ctx( H264Context *h, int cat, int idx, int max_coeff, int is_dc ) {$/;"	f	file:
get_cabac_inline	libavcodec/cabac.h	/^static av_always_inline int get_cabac_inline(CABACContext *c, uint8_t * const state){$/;"	f
get_cabac_inline	libavcodec/x86/cabac.h	87;"	d
get_cabac_inline_x86	libavcodec/x86/cabac.h	/^static av_always_inline int get_cabac_inline_x86(CABACContext *c,$/;"	f
get_cabac_noinline	libavcodec/cabac.h	/^static int av_noinline av_unused get_cabac_noinline(CABACContext *c, uint8_t * const state){$/;"	f
get_cabac_terminate	libavcodec/cabac.h	/^static int av_unused get_cabac_terminate(CABACContext *c){$/;"	f
get_cbp	libavcodec/h261enc.c	/^static inline int get_cbp(MpegEncContext * s,$/;"	f	file:
get_channel_name	libavutil/audioconvert.c	/^static const char *get_channel_name(int channel_id)$/;"	f	file:
get_che	libavcodec/aacdec.c	/^static ChannelElement *get_che(AACContext *ac, int type, int elem_id)$/;"	f	file:
get_checksum	libavformat/aviobuf.c	/^unsigned long get_checksum(AVIOContext *s)$/;"	f
get_chroma_qp	libavcodec/h264.h	/^static inline int get_chroma_qp(H264Context *h, int t, int qscale){$/;"	f
get_chunk_header	libavformat/mmsh.c	/^static ChunkType get_chunk_header(MMSHContext *mmsh, int *len)$/;"	f	file:
get_closest_codebook	libavcodec/elbg.c	/^static int get_closest_codebook(elbg_data *elbg, int index)$/;"	f	file:
get_clut	libavcodec/dvbsubdec.c	/^static DVBSubCLUT* get_clut(DVBSubContext *ctx, int clut_id)$/;"	f	file:
get_coc	libavcodec/j2kdec.c	/^static int get_coc(J2kDecoderContext *s, J2kCodingStyle *c, uint8_t *properties)$/;"	f	file:
get_cod	libavcodec/j2kdec.c	/^static int get_cod(J2kDecoderContext *s, J2kCodingStyle *c, uint8_t *properties)$/;"	f	file:
get_codec	libavcodec/ac3enc_combined.c	/^static av_cold AVCodec *get_codec(enum AVSampleFormat s){$/;"	f	file:
get_codec_data	libavformat/nuv.c	/^static int get_codec_data(AVIOContext *pb, AVStream *vst,$/;"	f	file:
get_consumed_bytes	libavcodec/h261dec.c	/^static int get_consumed_bytes(MpegEncContext *s, int buf_size){$/;"	f	file:
get_consumed_bytes	libavcodec/h263dec.c	/^static int get_consumed_bytes(MpegEncContext *s, int buf_size){$/;"	f	file:
get_consumed_bytes	libavcodec/h264.c	/^static int get_consumed_bytes(MpegEncContext *s, int pos, int buf_size){$/;"	f	file:
get_context	libavcodec/ffv1.c	/^static inline int get_context(PlaneContext *p, int16_t *src,$/;"	f	file:
get_cos	libavcodec/twinvq.c	/^static inline float get_cos(int idx, int part, const float *cos_tab, int size)$/;"	f	file:
get_cox	libavcodec/j2kdec.c	/^static int get_cox(J2kDecoderContext *s, J2kCodingStyle *c)$/;"	f	file:
get_date_tag	libavformat/id3v2.c	/^static AVDictionaryEntry* get_date_tag(AVDictionary *m, const char *tag)$/;"	f	file:
get_dc	libavcodec/msmpeg4.c	/^static int get_dc(uint8_t *src, int stride, int scale)$/;"	f	file:
get_dc	libavcodec/snow.c	/^static int get_dc(SnowContext *s, int mb_x, int mb_y, int plane_index){$/;"	f	file:
get_dct8x8_allowed	libavcodec/h264.h	/^static inline int get_dct8x8_allowed(H264Context *h){$/;"	f
get_diff_limited_q	libavcodec/ratecontrol.c	/^static double get_diff_limited_q(MpegEncContext *s, RateControlEntry *rce, double q){$/;"	f	file:
get_dimension	libavcodec/rv40.c	/^static int get_dimension(GetBitContext *gb, const int *dim)$/;"	f	file:
get_dmv	libavcodec/mpeg12.c	/^static inline int get_dmv(MpegEncContext *s)$/;"	f	file:
get_dts	libavformat/ffmdec.c	/^static int64_t get_dts(AVFormatContext *s, int64_t pos)$/;"	f	file:
get_duration	libavformat/avidec.c	/^static inline int get_duration(AVIStream *ast, int len){$/;"	f	file:
get_exponent_dynamic	libavcodec/nellymoserenc.c	/^static void get_exponent_dynamic(NellyMoserEncodeContext *s, float *cand, int *idx_table)$/;"	f	file:
get_exponent_greedy	libavcodec/nellymoserenc.c	/^static void get_exponent_greedy(NellyMoserEncodeContext *s, float *cand, int *idx_table)$/;"	f	file:
get_external_clock	ffplay.c	/^static double get_external_clock(VideoState *is)$/;"	f	file:
get_flags	libavcodec/motion_est.c	/^static int get_flags(MotionEstContext *c, int direct, int chroma){$/;"	f	file:
get_float	libavcodec/binkaudio.c	/^static float get_float(GetBitContext *gb)$/;"	f	file:
get_float_val	libavcodec/vc1dec.c	/^static inline float get_float_val(GetBitContext* gb)$/;"	f	file:
get_floor_average	libavcodec/vorbisenc.c	/^static float get_floor_average(vorbis_enc_floor * fc, float *coeffs, int i)$/;"	f	file:
get_format	libavcodec/avcodec.h	/^    enum PixelFormat (*get_format)(struct AVCodecContext *s, const enum PixelFormat * fmt);$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::get_format
get_fourcc	libavformat/nutdec.c	/^static uint64_t get_fourcc(AVIOContext *bc){$/;"	f	file:
get_frame_mb	libavcodec/roqvideoenc.c	/^static void get_frame_mb(AVFrame *frame, int x, int y, uint8_t mb[], int dim)$/;"	f	file:
get_generic_seed	libavutil/random_seed.c	/^static uint32_t get_generic_seed(void)$/;"	f	file:
get_high_utility_cell	libavcodec/elbg.c	/^static int get_high_utility_cell(elbg_data *elbg)$/;"	f	file:
get_http_header_data	libavformat/mmsh.c	/^static int get_http_header_data(MMSHContext *mmsh)$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf.h	/^    void (*get_image)(struct vf_instance *vf,$/;"	m	struct:vf_instance
get_image	libavfilter/libmpcodecs/vf_delogo.c	/^static void get_image(struct vf_instance *vf, mp_image_t *mpi){$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf_filmdint.c	/^static void get_image(struct vf_instance *vf, mp_image_t *mpi)$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf_fspp.c	/^static void get_image(struct vf_instance *vf, mp_image_t *mpi)$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf_gradfun.c	/^static void get_image(struct vf_instance *vf, mp_image_t *mpi)$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf_noise.c	/^static void get_image(struct vf_instance *vf, mp_image_t *mpi){$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf_ow.c	/^static void get_image(struct vf_instance *vf, mp_image_t *mpi){$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf_pp7.c	/^static void get_image(struct vf_instance *vf, mp_image_t *mpi){$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf_qp.c	/^static void get_image(struct vf_instance *vf, mp_image_t *mpi){$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf_screenshot.c	/^static void get_image(struct vf_instance *vf, mp_image_t *mpi)$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf_spp.c	/^static void get_image(struct vf_instance *vf, mp_image_t *mpi){$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf_swapuv.c	/^static void get_image(struct vf_instance *vf, mp_image_t *mpi){$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf_unsharp.c	/^static void get_image( struct vf_instance *vf, mp_image_t *mpi ) {$/;"	f	file:
get_image	libavfilter/libmpcodecs/vf_uspp.c	/^static void get_image(struct vf_instance *vf, mp_image_t *mpi){$/;"	f	file:
get_int	libavformat/mvi.c	/^    unsigned int (*get_int)(AVIOContext *);$/;"	m	struct:MviDemuxContext	file:
get_intra_count	libavcodec/mpegvideo_enc.c	/^static int get_intra_count(MpegEncContext *s, uint8_t *src, uint8_t *ref, int stride){$/;"	f	file:
get_le16	libavcodec/shorten.c	/^static inline short get_le16(GetBitContext *gb)$/;"	f	file:
get_le32	libavcodec/shorten.c	/^static inline int get_le32(GetBitContext *gb)$/;"	f	file:
get_len	libavutil/lzo.c	/^static inline int get_len(LZOContext *c, int x, int mask) {$/;"	f	file:
get_level_prefix	libavcodec/h264_cavlc.c	/^static inline int get_level_prefix(GetBitContext *gb){$/;"	f	file:
get_limits	libavcodec/motion_est.c	/^static inline void get_limits(MpegEncContext *s, int x, int y)$/;"	f	file:
get_line	libavformat/ffmetadec.c	/^static void get_line(AVIOContext *s, uint8_t *buf, int size)$/;"	f	file:
get_lowest_part_list_y	libavcodec/h264.c	/^static inline int get_lowest_part_list_y(H264Context *h, Picture *pic, int n, int height,$/;"	f	file:
get_lowest_part_y	libavcodec/h264.c	/^static inline void get_lowest_part_y(H264Context *h, int refs[2][48], int n, int height,$/;"	f	file:
get_master_clock	ffplay.c	/^static double get_master_clock(VideoState *is)$/;"	f	file:
get_match_score	libavcodec/ra144enc.c	/^static void get_match_score(float *work, const float *coefs, float *vect,$/;"	f	file:
get_max_p_order	libavcodec/flacenc.c	/^static int get_max_p_order(int max_porder, int n, int order)$/;"	f	file:
get_meta	libavformat/aiffdec.c	/^static void get_meta(AVFormatContext *s, const char *key, int size)$/;"	f	file:
get_metadata	libavformat/iff.c	/^static int get_metadata(AVFormatContext *s,$/;"	f	file:
get_metadata_size	libavcodec/flacdec.c	/^static int get_metadata_size(const uint8_t *buf, int buf_size)$/;"	f	file:
get_metrics_c	libavfilter/libmpcodecs/vf_filmdint.c	/^get_metrics_c(unsigned char *a, unsigned char *b, int as, int bs, int lines,$/;"	f	file:
get_metrics_fast_c	libavfilter/libmpcodecs/vf_filmdint.c	/^get_metrics_fast_c(unsigned char *a, unsigned char *b, int as, int bs,$/;"	f	file:
get_metrics_faster_c	libavfilter/libmpcodecs/vf_filmdint.c	/^get_metrics_faster_c(unsigned char *a, unsigned char *b, int as, int bs,$/;"	f	file:
get_nb_frames	libavformat/mpegenc.c	/^static int get_nb_frames(AVFormatContext *ctx, StreamInfo *stream, int len){$/;"	f	file:
get_needed_flags	libavformat/nutenc.c	/^static int get_needed_flags(NUTContext *nut, StreamContext *nus, FrameCode *fc, AVPacket *pkt){$/;"	f	file:
get_new_centroids	libavcodec/elbg.c	/^static void get_new_centroids(elbg_data *elbg, int huc, int *newcentroid_i,$/;"	f	file:
get_num	libavformat/rmdec.c	/^static int get_num(AVIOContext *pb, int *len)$/;"	f	file:
get_object	libavcodec/dvbsubdec.c	/^static DVBSubObject* get_object(DVBSubContext *ctx, int object_id)$/;"	f	file:
get_object_type	libavcodec/mpeg4audio.c	/^static inline int get_object_type(GetBitContext *gb)$/;"	f	file:
get_p_cbp	libavcodec/h263.h	/^static inline int get_p_cbp(MpegEncContext * s,$/;"	f
get_packet	libavformat/rtmpproto.c	/^static int get_packet(URLContext *s, int for_header)$/;"	f	file:
get_packet_header	libavformat/lxfdec.c	/^static int get_packet_header(AVFormatContext *s, uint8_t *header, uint32_t *format)$/;"	f	file:
get_packet_send_clock	ffserver.c	/^static int64_t get_packet_send_clock(HTTPContext *c)$/;"	f	file:
get_packet_size	libavformat/mpegts.c	/^static int get_packet_size(const uint8_t *buf, int size)$/;"	f	file:
get_packetheader	libavformat/nutdec.c	/^static int get_packetheader(NUTContext *nut, AVIOContext *bc, int calculate_checksum, uint64_t startcode)$/;"	f	file:
get_param_info	libavfilter/vf_frei0r.c	/^    f0r_get_param_info_f  get_param_info;$/;"	m	struct:Frei0rContext	file:
get_param_value	libavfilter/vf_frei0r.c	/^    f0r_get_param_value_f get_param_value;$/;"	m	struct:Frei0rContext	file:
get_parameter_supported	libavformat/rtsp.h	/^    int get_parameter_supported;$/;"	m	struct:RTSPState
get_parity	libavcodec/g729dec.c	/^static inline int get_parity(uint8_t value)$/;"	f	file:
get_partial_buffer	libavformat/aviobuf.c	/^int get_partial_buffer(AVIOContext *s, unsigned char *buf, int size)$/;"	f
get_pcr	libavformat/mpegtsenc.c	/^static int64_t get_pcr(const MpegTSWrite *ts, AVIOContext *pb)$/;"	f	file:
get_penalty_factor	libavcodec/dsputil.h	/^static inline int get_penalty_factor(int lambda, int lambda2, int type){$/;"	f
get_pix_fmt_internal	libavutil/pixdesc.c	/^static enum PixelFormat get_pix_fmt_internal(const char *name)$/;"	f	file:
get_pixels	libavcodec/dsputil.h	/^    void (*get_pixels)(DCTELEM *block\/*align 16*\/, const uint8_t *pixels\/*align 8*\/, int line_size);$/;"	m	struct:DSPContext
get_pixels	libavcodec/dv.c	/^    void (*get_pixels)(DCTELEM *block, const uint8_t *pixels, int line_size);$/;"	m	struct:DVVideoContext	file:
get_pixels_8x4_sym	libavcodec/dnxhdenc.h	/^    void (*get_pixels_8x4_sym)(DCTELEM *\/*align 16*\/, const uint8_t *, int);$/;"	m	struct:DNXHDEncContext
get_pixels_8x4_sym_sse2	libavcodec/x86/dnxhd_mmx.c	/^static void get_pixels_8x4_sym_sse2(DCTELEM *block, const uint8_t *pixels, int line_size)$/;"	f	file:
get_pixels_altivec	libavcodec/ppc/dsputil_altivec.c	/^static void get_pixels_altivec(DCTELEM *restrict block, const uint8_t *pixels, int line_size)$/;"	f	file:
get_pixels_c	libavcodec/dsputil.c	/^static void get_pixels_c(DCTELEM *restrict block, const uint8_t *pixels, int line_size)$/;"	f	file:
get_pixels_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void get_pixels_mlib(DCTELEM *restrict block, const uint8_t *pixels, int line_size)$/;"	f	file:
get_pixels_mmi	libavcodec/ps2/dsputil_mmi.c	/^static void get_pixels_mmi(DCTELEM *block, const uint8_t *pixels, int line_size)$/;"	f	file:
get_pixels_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static void get_pixels_mmx(DCTELEM *block, const uint8_t *pixels, int line_size)$/;"	f	file:
get_pixels_mvi	libavcodec/alpha/motion_est_alpha.c	/^void get_pixels_mvi(DCTELEM *restrict block,$/;"	f
get_pixels_sse2	libavcodec/x86/dsputilenc_mmx.c	/^static void get_pixels_sse2(DCTELEM *block, const uint8_t *pixels, int line_size)$/;"	f	file:
get_pixfmt_from_fb_varinfo	libavdevice/fbdev.c	/^static enum PixelFormat get_pixfmt_from_fb_varinfo(struct fb_var_screeninfo *varinfo)$/;"	f	file:
get_preset_file	cmdutils.c	/^FILE *get_preset_file(char *filename, size_t filename_size,$/;"	f
get_preset_file	ffmpeg/cmdutils.c	/^FILE *get_preset_file(char *filename, size_t filename_size,$/;"	f
get_pts	libavformat/assdec.c	/^static int64_t get_pts(const uint8_t *p)$/;"	f	file:
get_pts	libavformat/microdvddec.c	/^static int64_t get_pts(const char *buf)$/;"	f	file:
get_pts	libavformat/mpeg.c	/^static int64_t get_pts(AVIOContext *pb, int c)$/;"	f	file:
get_pts	libavformat/srtdec.c	/^static int64_t get_pts(const char *buf)$/;"	f	file:
get_qcc	libavcodec/j2kdec.c	/^static int get_qcc(J2kDecoderContext *s, int n, J2kQuantStyle *q, uint8_t *properties)$/;"	f	file:
get_qcd	libavcodec/j2kdec.c	/^static int get_qcd(J2kDecoderContext *s, int n, J2kQuantStyle *q, uint8_t *properties)$/;"	f	file:
get_qcx	libavcodec/j2kdec.c	/^static int get_qcx(J2kDecoderContext *s, int n, J2kQuantStyle *q)$/;"	f	file:
get_qminmax	libavcodec/ratecontrol.c	/^static void get_qminmax(int *qmin_ret, int *qmax_ret, MpegEncContext *s, int pict_type){$/;"	f	file:
get_qscale	libavcodec/mpeg12.c	/^static inline int get_qscale(MpegEncContext *s)$/;"	f	file:
get_qscale	libavcodec/ratecontrol.c	/^static double get_qscale(MpegEncContext *s, RateControlEntry *rce, double rate_factor, int frame_num){$/;"	f	file:
get_quant	libavcodec/nuv.c	/^static int get_quant(AVCodecContext *avctx, NuvContext *c,$/;"	f	file:
get_quant_quality	libavcodec/nuv.c	/^static void get_quant_quality(NuvContext *c, int quality) {$/;"	f	file:
get_quants	libavcodec/vp8.c	/^static void get_quants(VP8Context *s)$/;"	f	file:
get_rac	libavcodec/rangecoder.h	/^static inline int get_rac(RangeCoder *c, uint8_t * const state){$/;"	f
get_rac_count	libavcodec/rangecoder.h	/^static inline int get_rac_count(RangeCoder *c){$/;"	f
get_region	libavcodec/dvbsubdec.c	/^static DVBSubRegion* get_region(DVBSubContext *ctx, int region_id)$/;"	f	file:
get_riff	libavformat/avidec.c	/^static int get_riff(AVFormatContext *s, AVIOContext *pb)$/;"	f	file:
get_rl_index	libavcodec/rl.h	/^static inline int get_rl_index(const RLTable *rl, int last, int run, int level)$/;"	f
get_rrp	libavcodec/gsmdec_template.c	/^static av_noinline int get_rrp(int filtered)$/;"	f	file:
get_s	libavformat/nutdec.c	/^static int64_t get_s(AVIOContext *bc){$/;"	f	file:
get_s	libavformat/nutdec.c	92;"	d	file:
get_s_trace	libavformat/nutdec.c	/^static inline int64_t get_s_trace(AVIOContext *bc, char *file, char *func, int line){$/;"	f	file:
get_sae	libavcodec/mpegvideo_enc.c	/^static int get_sae(uint8_t *src, int ref, int stride){$/;"	f	file:
get_safe	configure	/^get_safe(){$/;"	f
get_sample_rate	libavcodec/mpeg4audio.c	/^static inline int get_sample_rate(GetBitContext *gb, int *index)$/;"	f	file:
get_sbits	libavcodec/get_bits.h	/^static inline int get_sbits(GetBitContext *s, int n){$/;"	f
get_sbits_long	libavcodec/get_bits.h	/^static inline int get_sbits_long(GetBitContext *s, int n) {$/;"	f
get_scale	libavcodec/dca.c	/^static inline int get_scale(GetBitContext *gb, int level, int value)$/;"	f	file:
get_scale_factor	libavcodec/h264_direct.c	/^static int get_scale_factor(H264Context * const h, int poc, int poc1, int i){$/;"	f	file:
get_scale_idx	libavcodec/mpc7.c	/^static int get_scale_idx(GetBitContext *gb, int ref)$/;"	f	file:
get_se	libavcodec/golomb.h	/^static inline int get_se(GetBitContext *s, char *file, const char *func, int line){$/;"	f
get_se_golomb	libavcodec/golomb.h	/^static inline int get_se_golomb(GetBitContext *gb){$/;"	f
get_se_golomb	libavcodec/golomb.h	418;"	d
get_server_clock	ffserver.c	/^static int64_t get_server_clock(HTTPContext *c)$/;"	f	file:
get_sindex	libavformat/gxf.c	/^static int get_sindex(AVFormatContext *s, int id, int format) {$/;"	f	file:
get_siz	libavcodec/j2kdec.c	/^static int get_siz(J2kDecoderContext *s)$/;"	f	file:
get_size	libavformat/id3v2.c	/^static unsigned int get_size(AVIOContext *s, int len)$/;"	f	file:
get_size_of_code	libavcodec/msmpeg4.c	/^static int get_size_of_code(MpegEncContext * s, RLTable *rl, int last, int run, int level, int intra){$/;"	f	file:
get_slice_offset	libavcodec/rv10.c	/^static int get_slice_offset(AVCodecContext *avctx, const uint8_t *buf, int n)$/;"	f	file:
get_slice_offset	libavcodec/rv34.c	/^static int get_slice_offset(AVCodecContext *avctx, const uint8_t *buf, int n)$/;"	f	file:
get_sockaddr	libavformat/rtsp.c	/^static int get_sockaddr(const char *buf, struct sockaddr_storage *sock)$/;"	f	file:
get_sot	libavcodec/j2kdec.c	/^static uint8_t get_sot(J2kDecoderContext *s)$/;"	f	file:
get_sr_golomb	libavcodec/golomb.h	/^static inline int get_sr_golomb(GetBitContext *gb, int k, int limit, int esc_len){$/;"	f
get_sr_golomb_flac	libavcodec/golomb.h	/^static inline int get_sr_golomb_flac(GetBitContext *gb, int k, int limit, int esc_len){$/;"	f
get_sr_golomb_shorten	libavcodec/golomb.h	/^static inline int get_sr_golomb_shorten(GetBitContext* gb, int k)$/;"	f
get_stats	libavcodec/libtheoraenc.c	/^static int get_stats(AVCodecContext *avctx, int eos)$/;"	f	file:
get_std_framerate	libavformat/utils.c	/^static int get_std_framerate(int i){$/;"	f	file:
get_str	libavformat/nutdec.c	/^static int get_str(AVIOContext *bc, char *string, unsigned int maxlen){$/;"	f	file:
get_str8	libavformat/rmdec.c	/^static void get_str8(AVIOContext *pb, char *buf, int buf_size)$/;"	f	file:
get_stream_idx	libavformat/avidec.c	/^static int get_stream_idx(int *d){$/;"	f	file:
get_string	libavformat/id3v1.c	/^static void get_string(AVFormatContext *s, const char *key,$/;"	f	file:
get_strl	libavformat/rmdec.c	/^static inline void get_strl(AVIOContext *pb, char *buf, int buf_size, int len)$/;"	f	file:
get_strz	libavformat/aviobuf.c	/^char *get_strz(AVIOContext *s, char *buf, int maxlen)$/;"	f
get_submv_prob	libavcodec/vp8.c	/^const uint8_t *get_submv_prob(uint32_t left, uint32_t top)$/;"	f	file:
get_subtitle_pkt	libavformat/avidec.c	/^static AVStream *get_subtitle_pkt(AVFormatContext *s, AVStream *next_st,$/;"	f	file:
get_swf_tag	libavformat/swfdec.c	/^static int get_swf_tag(AVIOContext *pb, int *len_ptr)$/;"	f	file:
get_symbol	libavcodec/ffv1.c	/^static int av_noinline get_symbol(RangeCoder *c, uint8_t *state, int is_signed){$/;"	f	file:
get_symbol	libavcodec/snow.c	/^static inline int get_symbol(RangeCoder *c, uint8_t *state, int is_signed){$/;"	f	file:
get_symbol2	libavcodec/snow.c	/^static inline int get_symbol2(RangeCoder *c, uint8_t *state, int log2){$/;"	f	file:
get_symbol_inline	libavcodec/ffv1.c	/^static inline av_flatten int get_symbol_inline(RangeCoder *c, uint8_t *state, int is_signed){$/;"	f	file:
get_sync_ipts	ffmpeg.c	/^get_sync_ipts(const AVOutputStream *ost)$/;"	f	file:
get_sync_ipts	ffmpeg/ffmpeg.c	/^get_sync_ipts(const AVOutputStream *ost)$/;"	f	file:
get_system_header_size	libavformat/mpegenc.c	/^static int get_system_header_size(AVFormatContext *ctx)$/;"	f	file:
get_tag	libavformat/aiffdec.c	/^static int get_tag(AVIOContext *pb, uint32_t * tag)$/;"	f	file:
get_tag	libavformat/asfdec.c	/^static void get_tag(AVFormatContext *s, const char *key, int type, int len)$/;"	f	file:
get_tag	libavformat/wtvdec.c	/^static void get_tag(AVFormatContext *s, AVIOContext *pb, const char *key, int type, int length)$/;"	f	file:
get_tail	libavcodec/wavpack.c	/^static av_always_inline int get_tail(GetBitContext *gb, int k)$/;"	f	file:
get_tcp_server_response	libavformat/mmst.c	/^static MMSSCPacketType get_tcp_server_response(MMSTContext *mmst)$/;"	f	file:
get_te	libavcodec/golomb.h	/^static inline int get_te(GetBitContext *s, int r, char *file, const char *func, int line){$/;"	f
get_te0_golomb	libavcodec/golomb.h	/^static inline int get_te0_golomb(GetBitContext *gb, int range){$/;"	f
get_te0_golomb	libavcodec/golomb.h	420;"	d
get_te_golomb	libavcodec/golomb.h	/^static inline int get_te_golomb(GetBitContext *gb, int range){$/;"	f
get_te_golomb	libavcodec/golomb.h	419;"	d
get_time	libavfilter/libmpcodecs/vf_filmdint.c	/^static inline double get_time(void)$/;"	f	file:
get_token	libavformat/iss.c	/^static void get_token(AVIOContext *s, char *buf, int maxlen)$/;"	f	file:
get_tree_codes	libavcodec/huffman.c	/^static void get_tree_codes(uint32_t *bits, int16_t *lens, uint8_t *xlat, Node *nodes, int node, uint32_t pfx, int pl, int *pos, int no_zero_count)$/;"	f	file:
get_ue	libavcodec/golomb.h	/^static inline int get_ue(GetBitContext *s, char *file, const char *func, int line){$/;"	f
get_ue_code	libavcodec/cavsdec.c	/^static inline int get_ue_code(GetBitContext *gb, int order) {$/;"	f	file:
get_ue_golomb	libavcodec/golomb.h	/^static inline int get_ue_golomb(GetBitContext *gb){$/;"	f
get_ue_golomb	libavcodec/golomb.h	417;"	d
get_ue_golomb_31	libavcodec/golomb.h	/^static inline int get_ue_golomb_31(GetBitContext *gb){$/;"	f
get_ue_golomb_long	libavcodec/golomb.h	/^static inline unsigned get_ue_golomb_long(GetBitContext *gb)$/;"	f
get_uint	libavcodec/shorten.c	/^static inline unsigned int get_uint(ShortenContext *s, int k)$/;"	f	file:
get_unary	libavcodec/unary.h	/^static inline int get_unary(GetBitContext *gb, int stop, int len)$/;"	f
get_unary_0_33	libavcodec/unary.h	/^static inline int get_unary_0_33(GetBitContext *gb)$/;"	f
get_unary_0_9	libavcodec/unary.h	/^static inline int get_unary_0_9(GetBitContext *gb)$/;"	f
get_ur_golomb	libavcodec/golomb.h	/^static inline int get_ur_golomb(GetBitContext *gb, int k, int limit, int esc_len){$/;"	f
get_ur_golomb_jpegls	libavcodec/golomb.h	/^static inline int get_ur_golomb_jpegls(GetBitContext *gb, int k, int limit, int esc_len){$/;"	f
get_ur_golomb_shorten	libavcodec/golomb.h	/^static inline unsigned int get_ur_golomb_shorten(GetBitContext *gb, int k){$/;"	f
get_utf8	libavcodec/flac.c	/^static int64_t get_utf8(GetBitContext *gb)$/;"	f	file:
get_v_trace	libavformat/nutdec.c	/^static inline uint64_t get_v_trace(AVIOContext *bc, char *file, char *func, int line){$/;"	f	file:
get_value	libavcodec/bink.c	/^static inline int get_value(BinkContext *c, int bundle)$/;"	f	file:
get_value	libavformat/asfdec.c	/^static int get_value(AVIOContext *pb, int type){$/;"	f	file:
get_vb	libavformat/nutdec.c	93;"	d	file:
get_vb_trace	libavformat/nutdec.c	/^static inline uint64_t get_vb_trace(AVIOContext *bc, char *file, char *func, int line){$/;"	f	file:
get_vcd_padding_size	libavformat/mpegenc.c	/^static int get_vcd_padding_size(AVFormatContext *ctx, int64_t pts)$/;"	f	file:
get_version	configure	/^get_version(){$/;"	f
get_video_buffer	libavfilter/avfilter.h	/^    AVFilterBufferRef *(*get_video_buffer)(AVFilterLink *link, int perms, int w, int h);$/;"	m	struct:AVFilterPad
get_video_buffer	libavfilter/vf_fieldorder.c	/^static AVFilterBufferRef *get_video_buffer(AVFilterLink *inlink, int perms, int w, int h)$/;"	f	file:
get_video_buffer	libavfilter/vf_overlay.c	/^static AVFilterBufferRef *get_video_buffer(AVFilterLink *link, int perms, int w, int h)$/;"	f	file:
get_video_buffer	libavfilter/vf_pad.c	/^static AVFilterBufferRef *get_video_buffer(AVFilterLink *inlink, int perms, int w, int h)$/;"	f	file:
get_video_buffer	libavfilter/vf_vflip.c	/^static AVFilterBufferRef *get_video_buffer(AVFilterLink *link, int perms,$/;"	f	file:
get_video_buffer	libavfilter/vf_yadif.c	/^static AVFilterBufferRef *get_video_buffer(AVFilterLink *link, int perms, int w, int h)$/;"	f	file:
get_video_clock	ffplay.c	/^static double get_video_clock(VideoState *is)$/;"	f	file:
get_video_frame	ffplay.c	/^static int get_video_frame(VideoState *is, AVFrame *frame, int64_t *pts, AVPacket *pkt)$/;"	f	file:
get_visual_weight	libavcodec/mpegvideo_enc.c	/^static void get_visual_weight(int16_t *weight, uint8_t *ptr, int stride){$/;"	f	file:
get_vlc	libavcodec/get_bits.h	600;"	d
get_vlc2	libavcodec/get_bits.h	/^static av_always_inline int get_vlc2(GetBitContext *s, VLC_TYPE (*table)[2],$/;"	f
get_vlc2	libavcodec/get_bits.h	601;"	d
get_vlc_symbol	libavcodec/ffv1.c	/^static inline int get_vlc_symbol(GetBitContext *gb, VlcState * const state, int bits){$/;"	f	file:
get_vlc_trace	libavcodec/get_bits.h	/^static inline int get_vlc_trace(GetBitContext *s, VLC_TYPE (*table)[2],$/;"	f
get_wb_bitrate_mode	libavcodec/libvo-amrwbenc.c	/^static int get_wb_bitrate_mode(int bitrate, void *log_ctx)$/;"	f	file:
get_word	ffserver.c	/^static void get_word(char *buf, int buf_size, const char **pp)$/;"	f	file:
get_word	libavformat/rtsp.c	/^static void get_word(char *buf, int buf_size, const char **pp)$/;"	f	file:
get_word_sep	libavformat/rtsp.c	/^static void get_word_sep(char *buf, int buf_size, const char *sep,$/;"	f	file:
get_word_until_chars	libavformat/rtsp.c	/^static void get_word_until_chars(char *buf, int buf_size,$/;"	f	file:
get_xbits	libavcodec/get_bits.h	/^static inline int get_xbits(GetBitContext *s, int n){$/;"	f
get_xbits	libavcodec/get_bits.h	599;"	d
get_xbits_trace	libavcodec/get_bits.h	/^static inline int get_xbits_trace(GetBitContext *s, int n, char *file,$/;"	f
getaddrinfo	libavformat/network.h	177;"	d
getcut	libavcodec/j2kenc.c	/^static int getcut(J2kCblk *cblk, int64_t lambda, int dwt_norm)$/;"	f	file:
getfmt	libavfilter/libmpcodecs/vf_rgbtest.c	/^static unsigned int getfmt(unsigned int outfmt){$/;"	f	file:
getlblockinc	libavcodec/j2kdec.c	/^static int getlblockinc(J2kDecoderContext *s)$/;"	f	file:
getmaxrss	ffmpeg.c	/^static int64_t getmaxrss(void)$/;"	f	file:
getmaxrss	ffmpeg/ffmpeg.c	/^static int64_t getmaxrss(void)$/;"	f	file:
getnameinfo	libavformat/network.h	179;"	d
getnbctxno	libavcodec/j2k.c	/^static int getnbctxno(int flag, int bandno, int vert_causal_ctx_csty_symbol)$/;"	f	file:
getnmsedec_ref	libavcodec/j2kenc.c	/^static int getnmsedec_ref(int x, int bpno)$/;"	f	file:
getnmsedec_sig	libavcodec/j2kenc.c	/^static int getnmsedec_sig(int x, int bpno)$/;"	f	file:
getnpasses	libavcodec/j2kdec.c	/^static int getnpasses(J2kDecoderContext *s)$/;"	f	file:
getpix	libavfilter/libmpcodecs/vf_geq.c	/^static inline double getpix(struct vf_instance *vf, double x, double y, int plane){$/;"	f	file:
getsgnctxno	libavcodec/j2k.c	/^static int getsgnctxno(int flag, uint8_t *xorbit)$/;"	f	file:
getstr8	libavformat/mpegts.c	/^static char *getstr8(const uint8_t **pp, const uint8_t *p_end)$/;"	f	file:
gettime	libavcodec/dct-test.c	/^static int64_t gettime(void)$/;"	f	file:
gettime	libavcodec/fft-test.c	/^static int64_t gettime(void)$/;"	f	file:
gettime	libavcodec/motion-test.c	/^static int64_t gettime(void)$/;"	f	file:
getutime	ffmpeg.c	/^static int64_t getutime(void)$/;"	f	file:
getutime	ffmpeg/ffmpeg.c	/^static int64_t getutime(void)$/;"	f	file:
gfp	libavcodec/libmp3lame.c	/^    lame_global_flags *gfp;$/;"	m	struct:Mp3AudioContext	file:
ggamma	libavfilter/libmpcodecs/vf_eq2.c	/^  double        ggamma;$/;"	m	struct:vf_priv_s	file:
gif87a_sig	libavcodec/gifdec.c	/^static const uint8_t gif87a_sig[6] = "GIF87a";$/;"	v	file:
gif89a_sig	libavcodec/gifdec.c	/^static const uint8_t gif89a_sig[6] = "GIF89a";$/;"	v	file:
gif_clut	libavformat/gif.c	/^static const rgb_triplet gif_clut[216] = {$/;"	v	file:
gif_clut_index	libavformat/gif.c	/^static inline unsigned char gif_clut_index(uint8_t r, uint8_t g, uint8_t b)$/;"	f	file:
gif_decode_close	libavcodec/gifdec.c	/^static av_cold int gif_decode_close(AVCodecContext *avctx)$/;"	f	file:
gif_decode_frame	libavcodec/gifdec.c	/^static int gif_decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
gif_decode_init	libavcodec/gifdec.c	/^static av_cold int gif_decode_init(AVCodecContext *avctx)$/;"	f	file:
gif_encode_close	libavcodec/gif.c	/^static int gif_encode_close(AVCodecContext *avctx)$/;"	f	file:
gif_encode_frame	libavcodec/gif.c	/^static int gif_encode_frame(AVCodecContext *avctx, unsigned char *outbuf, int buf_size, void *data)$/;"	f	file:
gif_encode_init	libavcodec/gif.c	/^static av_cold int gif_encode_init(AVCodecContext *avctx)$/;"	f	file:
gif_image_write_header	libavcodec/gif.c	/^static int gif_image_write_header(AVCodecContext *avctx,$/;"	f	file:
gif_image_write_header	libavformat/gif.c	/^static int gif_image_write_header(AVIOContext *pb,$/;"	f	file:
gif_image_write_image	libavcodec/gif.c	/^static int gif_image_write_image(AVCodecContext *avctx,$/;"	f	file:
gif_image_write_image	libavformat/gif.c	/^static int gif_image_write_image(AVIOContext *pb,$/;"	f	file:
gif_parse_next_image	libavcodec/gifdec.c	/^static int gif_parse_next_image(GifState *s)$/;"	f	file:
gif_read_extension	libavcodec/gifdec.c	/^static int gif_read_extension(GifState *s)$/;"	f	file:
gif_read_header1	libavcodec/gifdec.c	/^static int gif_read_header1(GifState *s)$/;"	f	file:
gif_read_image	libavcodec/gifdec.c	/^static int gif_read_image(GifState *s)$/;"	f	file:
gif_write_header	libavformat/gif.c	/^static int gif_write_header(AVFormatContext *s)$/;"	f	file:
gif_write_packet	libavformat/gif.c	/^static int gif_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
gif_write_trailer	libavformat/gif.c	/^static int gif_write_trailer(AVFormatContext *s)$/;"	f	file:
gif_write_video	libavformat/gif.c	/^static int gif_write_video(AVFormatContext *s,$/;"	f	file:
glob_quant	libavcodec/ivi_common.h	/^    int             glob_quant;     \/\/\/< quant base for this band$/;"	m	struct:__anon107
global_gain	libavcodec/mpegaudiodec.c	/^    int global_gain;$/;"	m	struct:GranuleDef	file:
global_palette	libavcodec/gifdec.c	/^    uint8_t global_palette[256 * 3];$/;"	m	struct:GifState	file:
global_quality	libavcodec/avcodec.h	/^    int global_quality;$/;"	m	struct:AVCodecContext
global_video_state	ffplay.c	/^static VideoState *global_video_state;$/;"	v	file:
glue	libavcodec/imgconvert.c	46;"	d	file:
glyph_cmp	libavfilter/vf_drawtext.c	/^static int glyph_cmp(void *key, const void *b)$/;"	f	file:
glyph_enu_free	libavfilter/vf_drawtext.c	/^static int glyph_enu_free(void *opaque, void *elem)$/;"	f	file:
glyphs	libavfilter/vf_drawtext.c	/^    struct AVTreeNode *glyphs;      \/\/\/< rendered glyphs, stored using the UTF-32 char code$/;"	m	struct:__anon24	typeref:struct:__anon24::AVTreeNode	file:
gmc	libavcodec/dsputil.h	/^    void (*gmc )(uint8_t *dst\/*align 8*\/, uint8_t *src\/*align 1*\/, int stride, int h, int ox, int oy,$/;"	m	struct:DSPContext
gmc	libavcodec/x86/dsputil_mmx.c	/^void gmc(uint8_t *dst, uint8_t *src, int stride, int h, int ox, int oy,$/;"	f	file:
gmc	libavformat/siff.c	/^    uint8_t gmc[4];$/;"	m	struct:SIFFContext	file:
gmc1	libavcodec/dsputil.h	/^    void (*gmc1)(uint8_t *dst\/*align 8*\/, uint8_t *src\/*align 1*\/, int srcStride, int h, int x16, int y16, int rounder);$/;"	m	struct:DSPContext
gmc1_altivec	libavcodec/ppc/gmc_altivec.c	/^void gmc1_altivec(uint8_t *dst \/* align 8 *\/, uint8_t *src \/* align1 *\/, int stride, int h, int x16, int y16, int rounder)$/;"	f
gmc1_c	libavcodec/dsputil.c	/^static void gmc1_c(uint8_t *dst, uint8_t *src, int stride, int h, int x16, int y16, int rounder)$/;"	f	file:
gmc1_c	libavcodec/sh4/qpel.c	/^static void gmc1_c(uint8_t *dst, uint8_t *src, int stride, int h, int x16, int y16, int rounder)$/;"	f	file:
gmc1_motion	libavcodec/mpegvideo_common.h	/^static inline void gmc1_motion(MpegEncContext *s,$/;"	f
gmc_c	libavcodec/sh4/qpel.c	/^static void gmc_c(uint8_t *dst, uint8_t *src, int stride, int h, int ox, int oy,$/;"	f	file:
gmc_mmx	libavcodec/x86/dsputil_mmx.c	/^static void gmc_mmx(uint8_t *dst, uint8_t *src, int stride, int h, int ox, int oy,$/;"	f	file:
gmc_motion	libavcodec/mpegvideo_common.h	/^static inline void gmc_motion(MpegEncContext *s,$/;"	f
gmc_sse	libavcodec/x86/dsputil_mmx.c	/^static void gmc_sse(uint8_t *dst, uint8_t *src, int stride, int h, int ox, int oy,$/;"	f	file:
gmcsize	libavformat/siff.c	/^    int gmcsize;$/;"	m	struct:SIFFContext	file:
gob_count	libavcodec/ffv1.c	/^    int gob_count;$/;"	m	struct:FFV1Context	file:
gob_index	libavcodec/mpegvideo.h	/^    int gob_index;$/;"	m	struct:MpegEncContext
gob_number	libavcodec/h261.h	/^    int gob_number;$/;"	m	struct:H261Context
gob_start_code_skipped	libavcodec/h261.h	/^    int gob_start_code_skipped; \/\/ 1 if gob start code is already read before gob header is read$/;"	m	struct:H261Context
golden	libavcodec/vp8.h	/^        uint8_t golden;$/;"	m	struct:__anon182::__anon187
golden_frame	libavcodec/vp3.c	/^    AVFrame golden_frame;$/;"	m	struct:Vp3DecodeContext	file:
golomb_order	libavcodec/cavs.h	/^  int8_t golomb_order;$/;"	m	struct:dec_2dvlc
golomb_to_inter_cbp	libavcodec/h264data.h	/^static const uint8_t golomb_to_inter_cbp[48]={$/;"	v
golomb_to_inter_cbp_gray	libavcodec/h264_cavlc.c	/^static const uint8_t golomb_to_inter_cbp_gray[16]={$/;"	v	file:
golomb_to_intra4x4_cbp	libavcodec/h264data.h	/^static const uint8_t golomb_to_intra4x4_cbp[48]={$/;"	v
golomb_to_intra4x4_cbp_gray	libavcodec/h264_cavlc.c	/^static const uint8_t golomb_to_intra4x4_cbp_gray[16]={$/;"	v	file:
golomb_to_pict_type	libavcodec/h264data.h	/^static const uint8_t golomb_to_pict_type[5]=$/;"	v
gop_flags	libavcodec/indeo5.c	/^    uint8_t         gop_flags;$/;"	m	struct:__anon203	file:
gop_hdr_size	libavcodec/indeo5.c	/^    uint16_t        gop_hdr_size;$/;"	m	struct:__anon203	file:
gop_picture_number	libavcodec/mpegvideo.h	/^    int gop_picture_number;  \/\/\/< index of the first picture of a GOP based on fake_pic_num & mpeg1 specific$/;"	m	struct:MpegEncContext
gop_size	libavcodec/avcodec.h	/^    int gop_size;$/;"	m	struct:AVCodecContext
gop_size	libavcodec/mpegvideo.h	/^    int gop_size;$/;"	m	struct:MpegEncContext
gopher_close	libavformat/gopher.c	/^static int gopher_close(URLContext *h)$/;"	f	file:
gopher_connect	libavformat/gopher.c	/^static int gopher_connect(URLContext *h, const char *path)$/;"	f	file:
gopher_open	libavformat/gopher.c	/^static int gopher_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
gopher_read	libavformat/gopher.c	/^static int gopher_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
gopher_write	libavformat/gopher.c	/^static int gopher_write(URLContext *h, const uint8_t *buf, int size)$/;"	f	file:
got_extra_bits	libavcodec/wavpack.c	/^    int got_extra_bits;$/;"	m	struct:WavpackFrameContext	file:
got_first	libavcodec/h264.h	/^    int got_first; \/\/\/< this flag is != 0 if we've parsed a frame$/;"	m	struct:H264Context
got_frame	libavcodec/pthread.c	/^    int     got_frame;              \/\/\/< The output of got_picture_ptr from the last avcodec_decode_video() call.$/;"	m	struct:PerThreadContext	file:
got_key_frame	ffserver.c	/^    int got_key_frame; \/* stream 0 => 1, stream 1 => 2, stream 2=> 4 *\/$/;"	m	struct:HTTPContext	file:
got_keyframe	libavcodec/cavs.h	/^    int got_keyframe;$/;"	m	struct:__anon207
got_mxm_bitmask	libavcodec/mxpegdec.c	/^    int got_mxm_bitmask; \/* true if MXM bitmask available *\/$/;"	m	struct:MXpegDecodeContext	file:
got_picture	libavcodec/mjpegdec.h	/^    int got_picture;                                \/\/\/< we found a SOF and picture is valid, too.$/;"	m	struct:MJpegDecodeContext
got_sof_data	libavcodec/mxpegdec.c	/^    int got_sof_data; \/* true if SOF data successfully parsed *\/$/;"	m	struct:MXpegDecodeContext	file:
got_streaminfo	libavcodec/flacdec.c	/^    int got_streaminfo;                     \/\/\/< indicates if the STREAMINFO has been read$/;"	m	struct:FLACContext	file:
gp	libavcodec/alpha/regdef.h	62;"	d
gp8$0	libavcodec/bfin/pixels_bfin.S	/^gp8$0:  (R7,R6) = byteunpack R1:0      || R0 = [I0++M0];$/;"	l
gp8$1	libavcodec/bfin/pixels_bfin.S	/^gp8$1:  [I3++]=R5$/;"	l
gp_index	libavcodec/sipr.h	/^    int gp_index[5];           \/\/\/< adaptive-codebook gain indexes$/;"	m	struct:__anon236
gp_index_bits	libavcodec/sipr.c	/^    uint8_t gp_index_bits;$/;"	m	struct:__anon112	file:
gpmask	libavformat/oggparsetheora.c	/^    int gpmask;$/;"	m	struct:theora_params	file:
gpshift	libavformat/oggparsetheora.c	/^    int gpshift;$/;"	m	struct:theora_params	file:
gptopts	libavformat/oggdec.h	/^    uint64_t (*gptopts)(AVFormatContext *, int, uint64_t, int64_t *dts);$/;"	m	struct:ogg_codec
grab_read_close	libavdevice/bktr.c	/^static int grab_read_close(AVFormatContext *s1)$/;"	f	file:
grab_read_close	libavdevice/v4l.c	/^static int grab_read_close(AVFormatContext *s1)$/;"	f	file:
grab_read_header	libavdevice/bktr.c	/^static int grab_read_header(AVFormatContext *s1, AVFormatParameters *ap)$/;"	f	file:
grab_read_header	libavdevice/v4l.c	/^static int grab_read_header(AVFormatContext *s1, AVFormatParameters *ap)$/;"	f	file:
grab_read_packet	libavdevice/bktr.c	/^static int grab_read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
grab_read_packet	libavdevice/v4l.c	/^static int grab_read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
gradient_scale	libavcodec/motionpixels.c	/^    uint8_t gradient_scale[3];$/;"	m	struct:MotionPixelsContext	file:
granule	libavformat/oggdec.h	/^    uint64_t granule;$/;"	m	struct:ogg_stream
granule	libavformat/oggenc.c	/^    int64_t granule;$/;"	m	struct:__anon379	file:
granule_is_start	libavformat/oggdec.h	/^    int granule_is_start;$/;"	m	struct:ogg_codec
granules	libavcodec/mpegaudiodec.c	/^    GranuleDef granules[2][2]; \/* Used in Layer 3 *\/$/;"	m	struct:MPADecodeContext	file:
graph	ffmpeg.c	/^    AVFilterGraph *graph;$/;"	m	struct:AVOutputStream	file:
graph	ffmpeg/ffmpeg.c	/^    AVFilterGraph *graph;$/;"	m	struct:AVOutputStream	file:
graph	libavdevice/dshow.c	/^    IGraphBuilder *graph;$/;"	m	struct:dshow_ctx	file:
gray2rgb	libavcodec/iff.c	/^static av_always_inline uint32_t gray2rgb(const uint32_t x) {$/;"	f	file:
gray8aToPacked24	libswscale/swscale_unscaled.c	/^static void gray8aToPacked24(const uint8_t *src, uint8_t *dst, int num_pixels, const uint8_t *palette)$/;"	f	file:
gray8aToPacked32	libswscale/swscale_unscaled.c	/^static void gray8aToPacked32(const uint8_t *src, uint8_t *dst, int num_pixels, const uint8_t *palette)$/;"	f	file:
gray8aToPacked32_1	libswscale/swscale_unscaled.c	/^static void gray8aToPacked32_1(const uint8_t *src, uint8_t *dst, int num_pixels, const uint8_t *palette)$/;"	f	file:
gray_decode	libavcodec/amrnbdata.h	/^static const uint8_t gray_decode[8] = { 0, 5, 15, 10, 25, 30, 20, 35 };$/;"	v
gray_pal	libavfilter/libmpcodecs/vf_palette.c	/^static unsigned int gray_pal[256];$/;"	v	file:
greenMask	libavfilter/libmpcodecs/vf_2xsai.c	/^static uint32_t greenMask = 0x7E0;$/;"	v	file:
green_offset	libavdevice/fbdev.c	/^    int red_offset, green_offset, blue_offset, alpha_offset;$/;"	m	struct:rgb_pixfmt_map_entry	file:
group	libavformat/rtpdec_qcelp.c	/^    InterleavePacket group[6];$/;"	m	struct:PayloadContext	file:
group1_bits	libavcodec/mlp_parser.h	/^    int group1_bits;            \/\/\/< The bit depth of the first substream$/;"	m	struct:MLPHeaderInfo
group1_samplerate	libavcodec/mlp_parser.h	/^    int group1_samplerate;      \/\/\/< Sample rate of first substream$/;"	m	struct:MLPHeaderInfo
group2_bits	libavcodec/mlp_parser.h	/^    int group2_bits;            \/\/\/< Bit depth of the second substream (MLP only)$/;"	m	struct:MLPHeaderInfo
group2_samplerate	libavcodec/mlp_parser.h	/^    int group2_samplerate;      \/\/\/< Sample rate of second substream (MLP only)$/;"	m	struct:MLPHeaderInfo
group_exponents	libavcodec/ac3enc.c	/^static void group_exponents(AC3EncodeContext *s)$/;"	f	file:
group_finished	libavformat/rtpdec_qcelp.c	/^    int group_finished;$/;"	m	struct:PayloadContext	file:
group_len	libavcodec/aac.h	/^    uint8_t group_len[8];$/;"	m	struct:__anon239
group_order	libavcodec/qdm2.c	/^    int group_order;         \/\/\/< order of frame group$/;"	m	struct:__anon200	file:
group_size	libavcodec/qdm2.c	/^    int group_size;          \/\/\/< size of frame group (16 frames per group)$/;"	m	struct:__anon200	file:
grouped	libavcodec/wmaprodec.c	/^    uint8_t  grouped;                                 \/\/\/< channel is part of a group$/;"	m	struct:__anon82	file:
grouped_exp	libavcodec/ac3enc.h	/^    uint8_t  **grouped_exp;                     \/\/\/< grouped exponents$/;"	m	struct:AC3Block
grouped_exp_buffer	libavcodec/ac3enc.h	/^    uint8_t *grouped_exp_buffer;$/;"	m	struct:AC3EncodeContext
grouping	libavcodec/psymodel.h	/^    int grouping[8];                  \/\/\/< window grouping (for e.g. AAC)$/;"	m	struct:FFPsyWindowInfo
grow_array	ffmpeg.c	/^static void *grow_array(void *array, int elem_size, int *size, int new_size)$/;"	f	file:
grow_array	ffmpeg/ffmpeg.c	/^static void *grow_array(void *array, int elem_size, int *size, int new_size)$/;"	f	file:
gsm_decode_block	libavcodec/gsmdec_template.c	/^static int gsm_decode_block(AVCodecContext *avctx, int16_t *samples,$/;"	f	file:
gsm_decode_frame	libavcodec/gsmdec.c	/^static int gsm_decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
gsm_init	libavcodec/gsmdec.c	/^static av_cold int gsm_init(AVCodecContext *avctx)$/;"	f	file:
gsm_mult	libavcodec/gsmdec_template.c	/^static inline int gsm_mult(int a, int b)$/;"	f	file:
guess_correct_pts	libavcodec/utils.c	/^static int64_t guess_correct_pts(AVCodecContext *ctx,$/;"	f	file:
guess_dc	libavcodec/error_resilience.c	/^static void guess_dc(MpegEncContext *s, int16_t *dc, int w, int h, int stride, int is_luma){$/;"	f	file:
guess_mv	libavcodec/error_resilience.c	/^static void guess_mv(MpegEncContext *s){$/;"	f	file:
guess_ni_flag	libavformat/avidec.c	/^static int guess_ni_flag(AVFormatContext *s){$/;"	f	file:
guess_palette	libavcodec/dvdsubdec.c	/^static void guess_palette(uint32_t *rgba_palette,$/;"	f	file:
guid	libavformat/asf.h	/^    ff_asf_guid guid;                  \/\/\/< generated by client computer$/;"	m	struct:__anon400
guid	libavformat/riff.h	/^    ff_asf_guid guid;$/;"	m	struct:__anon374
guid_data	libavformat/wav.c	/^static const uint8_t guid_data[16] = { 'd', 'a', 't', 'a',$/;"	v	file:
guid_evrc	libavformat/qcp.c	/^static const uint8_t guid_evrc[16] = {$/;"	v	file:
guid_fmt	libavformat/wav.c	/^static const uint8_t guid_fmt [16] = { 'f', 'm', 't', ' ',$/;"	v	file:
guid_qcelp_13k_part	libavformat/qcp.c	/^static const uint8_t guid_qcelp_13k_part[15] = {$/;"	v	file:
guid_riff	libavformat/wav.c	/^static const uint8_t guid_riff[16] = { 'r', 'i', 'f', 'f',$/;"	v	file:
guid_smv	libavformat/qcp.c	/^static const uint8_t guid_smv[16] = {$/;"	v	file:
guid_wave	libavformat/wav.c	/^static const uint8_t guid_wave[16] = { 'w', 'a', 'v', 'e',$/;"	v	file:
gxf_compare_field_nb	libavformat/gxfenc.c	/^static int gxf_compare_field_nb(AVFormatContext *s, AVPacket *next, AVPacket *cur)$/;"	f	file:
gxf_find_lines_index	libavformat/gxfenc.c	/^static int gxf_find_lines_index(AVStream *st)$/;"	f	file:
gxf_header	libavformat/gxf.c	/^static int gxf_header(AVFormatContext *s, AVFormatParameters *ap) {$/;"	f	file:
gxf_init_timecode_track	libavformat/gxfenc.c	/^static void gxf_init_timecode_track(GXFStreamContext *sc, GXFStreamContext *vsc)$/;"	f	file:
gxf_interleave_packet	libavformat/gxfenc.c	/^static int gxf_interleave_packet(AVFormatContext *s, AVPacket *out, AVPacket *pkt, int flush)$/;"	f	file:
gxf_lines_tab	libavformat/gxfenc.c	/^} gxf_lines_tab[] = {$/;"	v	typeref:struct:__anon433	file:
gxf_material_tags	libavformat/gxf.c	/^static void gxf_material_tags(AVIOContext *pb, int *len, struct gxf_stream_info *si) {$/;"	f	file:
gxf_media_types	libavformat/gxfenc.c	/^static const AVCodecTag gxf_media_types[] = {$/;"	v	file:
gxf_packet	libavformat/gxf.c	/^static int gxf_packet(AVFormatContext *s, AVPacket *pkt) {$/;"	f	file:
gxf_parse_mpeg_frame	libavformat/gxfenc.c	/^static int gxf_parse_mpeg_frame(GXFStreamContext *sc, const uint8_t *buf, int size)$/;"	f	file:
gxf_probe	libavformat/gxf.c	/^static int gxf_probe(AVProbeData *p) {$/;"	f	file:
gxf_read_index	libavformat/gxf.c	/^static void gxf_read_index(AVFormatContext *s, int pkt_len) {$/;"	f	file:
gxf_read_timestamp	libavformat/gxf.c	/^static int64_t gxf_read_timestamp(AVFormatContext *s, int stream_index,$/;"	f	file:
gxf_resync_media	libavformat/gxf.c	/^static int64_t gxf_resync_media(AVFormatContext *s, uint64_t max_interval, int track, int timestamp) {$/;"	f	file:
gxf_seek	libavformat/gxf.c	/^static int gxf_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags) {$/;"	f	file:
gxf_stream_info	libavformat/gxf.c	/^struct gxf_stream_info {$/;"	s	file:
gxf_track_tags	libavformat/gxf.c	/^static void gxf_track_tags(AVIOContext *pb, int *len, struct gxf_stream_info *si) {$/;"	f	file:
gxf_write_eos_packet	libavformat/gxfenc.c	/^static int gxf_write_eos_packet(AVIOContext *pb)$/;"	f	file:
gxf_write_flt_packet	libavformat/gxfenc.c	/^static int gxf_write_flt_packet(AVFormatContext *s)$/;"	f	file:
gxf_write_header	libavformat/gxfenc.c	/^static int gxf_write_header(AVFormatContext *s)$/;"	f	file:
gxf_write_map_packet	libavformat/gxfenc.c	/^static int gxf_write_map_packet(AVFormatContext *s, int rewrite)$/;"	f	file:
gxf_write_material_data_section	libavformat/gxfenc.c	/^static int gxf_write_material_data_section(AVFormatContext *s)$/;"	f	file:
gxf_write_media_preamble	libavformat/gxfenc.c	/^static int gxf_write_media_preamble(AVFormatContext *s, AVPacket *pkt, int size)$/;"	f	file:
gxf_write_mpeg_auxiliary	libavformat/gxfenc.c	/^static int gxf_write_mpeg_auxiliary(AVIOContext *pb, AVStream *st)$/;"	f	file:
gxf_write_packet	libavformat/gxfenc.c	/^static int gxf_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
gxf_write_packet_header	libavformat/gxfenc.c	/^static void gxf_write_packet_header(AVIOContext *pb, GXFPktType type)$/;"	f	file:
gxf_write_padding	libavformat/gxfenc.c	/^static void gxf_write_padding(AVIOContext *pb, int64_t to_pad)$/;"	f	file:
gxf_write_timecode_auxiliary	libavformat/gxfenc.c	/^static int gxf_write_timecode_auxiliary(AVIOContext *pb, GXFStreamContext *sc)$/;"	f	file:
gxf_write_track_description	libavformat/gxfenc.c	/^static int gxf_write_track_description(AVFormatContext *s, GXFStreamContext *sc, int index)$/;"	f	file:
gxf_write_track_description_section	libavformat/gxfenc.c	/^static int gxf_write_track_description_section(AVFormatContext *s)$/;"	f	file:
gxf_write_trailer	libavformat/gxfenc.c	/^static int gxf_write_trailer(AVFormatContext *s)$/;"	f	file:
gxf_write_umf_material_description	libavformat/gxfenc.c	/^static int gxf_write_umf_material_description(AVFormatContext *s)$/;"	f	file:
gxf_write_umf_media_audio	libavformat/gxfenc.c	/^static int gxf_write_umf_media_audio(AVIOContext *pb, GXFStreamContext *sc)$/;"	f	file:
gxf_write_umf_media_description	libavformat/gxfenc.c	/^static int gxf_write_umf_media_description(AVFormatContext *s)$/;"	f	file:
gxf_write_umf_media_dv	libavformat/gxfenc.c	/^static int gxf_write_umf_media_dv(AVIOContext *pb, GXFStreamContext *sc)$/;"	f	file:
gxf_write_umf_media_mpeg	libavformat/gxfenc.c	/^static int gxf_write_umf_media_mpeg(AVIOContext *pb, AVStream *st)$/;"	f	file:
gxf_write_umf_media_timecode	libavformat/gxfenc.c	/^static int gxf_write_umf_media_timecode(AVIOContext *pb, GXFStreamContext *sc)$/;"	f	file:
gxf_write_umf_packet	libavformat/gxfenc.c	/^static int gxf_write_umf_packet(AVFormatContext *s)$/;"	f	file:
gxf_write_umf_payload	libavformat/gxfenc.c	/^static int gxf_write_umf_payload(AVFormatContext *s)$/;"	f	file:
gxf_write_umf_track_description	libavformat/gxfenc.c	/^static int gxf_write_umf_track_description(AVFormatContext *s)$/;"	f	file:
h	libavcodec/avcodec.h	/^    int h;         \/\/\/< height           of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
h	libavcodec/pgssubdec.c	/^    int          h;$/;"	m	struct:PGSSubPicture	file:
h	libavcodec/rtjpeg.h	/^    int w, h;$/;"	m	struct:__anon172
h	libavcodec/rv34.h	/^    H264PredContext h;       \/\/\/< functions for 4x4 and 16x16 intra block prediction$/;"	m	struct:RV34DecContext
h	libavcodec/svq3.c	/^    H264Context h;$/;"	m	struct:__anon141	file:
h	libavcodec/truemotion1.c	/^    int x, y, w, h;$/;"	m	struct:TrueMotion1Context	file:
h	libavdevice/alsa-audio.h	/^    snd_pcm_t *h;$/;"	m	struct:__anon313
h	libavfilter/avfilter.h	/^    int h;                      \/\/\/< agreed upon image height$/;"	m	struct:AVFilterLink
h	libavfilter/avfilter.h	/^    int h;                      \/\/\/< image height$/;"	m	struct:AVFilterBufferRefVideoProps
h	libavfilter/avfilter.h	/^    int w, h;                   \/\/\/< width and height of the allocated buffer$/;"	m	struct:AVFilterBuffer
h	libavfilter/libmpcodecs/libvo/video_out.h	/^  int w,h;$/;"	m	struct:__anon31
h	libavfilter/libmpcodecs/mp_image.h	/^    int x,y,w,h;  \/\/ visible dimensions$/;"	m	struct:mp_image
h	libavfilter/libmpcodecs/pullup.h	/^    int *bpp, *w, *h, *stride, *background;$/;"	m	struct:pullup_context
h	libavfilter/libmpcodecs/vf.h	/^    int w, h;$/;"	m	struct:vf_instance
h	libavfilter/libmpcodecs/vf_dsize.c	/^    int w, h;$/;"	m	struct:vf_priv_s	file:
h	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long w, h, cw, ch, stride, chroma_stride, nplanes;$/;"	m	struct:vf_priv_s	file:
h	libavfilter/libmpcodecs/vf_rectangle.c	/^    int x, y, w, h;$/;"	m	struct:vf_priv_s	file:
h	libavfilter/libmpcodecs/vf_rgbtest.c	/^    int w, h;$/;"	m	struct:vf_priv_s	file:
h	libavfilter/vf_crop.c	/^    int  h;             \/\/\/< height of the cropped area$/;"	m	struct:__anon5	file:
h	libavfilter/vf_drawbox.c	/^    int x, y, w, h;$/;"	m	struct:__anon20	file:
h	libavfilter/vf_frei0r.c	/^    int w, h;$/;"	m	struct:Frei0rContext	file:
h	libavfilter/vf_pad.c	/^    int w, h;               \/\/\/< output dimensions, a value of 0 will result in the input size$/;"	m	struct:__anon52	file:
h	libavfilter/vf_scale.c	/^    int w, h;$/;"	m	struct:__anon18	file:
h	libavfilter/vf_slicify.c	/^    int h;          \/\/\/< output slice height$/;"	m	struct:__anon22	file:
h	libavfilter/vsrc_buffer.c	/^    int               h, w;$/;"	m	struct:__anon25	file:
h	libavfilter/vsrc_color.c	/^    int w, h;$/;"	m	struct:__anon27	file:
h	libavfilter/vsrc_movie.c	/^    int w, h;$/;"	m	struct:__anon38	file:
h	libavfilter/vsrc_nullsrc.c	/^    int w, h;$/;"	m	struct:__anon9	file:
h	tests/videogen.c	/^    int x, y, w, h;$/;"	m	struct:VObj	file:
h261_cbp_tab	libavcodec/h261data.h	/^static const uint8_t h261_cbp_tab[63][2] =$/;"	v
h261_cbp_vlc	libavcodec/h261dec.c	/^static VLC h261_cbp_vlc;$/;"	v	file:
h261_decode_block	libavcodec/h261dec.c	/^static int h261_decode_block(H261Context * h, DCTELEM * block,$/;"	f	file:
h261_decode_end	libavcodec/h261dec.c	/^static av_cold int h261_decode_end(AVCodecContext *avctx)$/;"	f	file:
h261_decode_frame	libavcodec/h261dec.c	/^static int h261_decode_frame(AVCodecContext *avctx,$/;"	f	file:
h261_decode_gob	libavcodec/h261dec.c	/^static int h261_decode_gob(H261Context *h){$/;"	f	file:
h261_decode_gob_header	libavcodec/h261dec.c	/^static int h261_decode_gob_header(H261Context *h){$/;"	f	file:
h261_decode_init	libavcodec/h261dec.c	/^static av_cold int h261_decode_init(AVCodecContext *avctx){$/;"	f	file:
h261_decode_init_vlc	libavcodec/h261dec.c	/^static av_cold void h261_decode_init_vlc(H261Context *h){$/;"	f	file:
h261_decode_mb	libavcodec/h261dec.c	/^static int h261_decode_mb(H261Context *h){$/;"	f	file:
h261_decode_mb_skipped	libavcodec/h261dec.c	/^static int h261_decode_mb_skipped(H261Context *h, int mba1, int mba2 )$/;"	f	file:
h261_decode_picture_header	libavcodec/h261dec.c	/^static int h261_decode_picture_header(H261Context *h){$/;"	f	file:
h261_encode_block	libavcodec/h261enc.c	/^static void h261_encode_block(H261Context * h, DCTELEM * block, int n){$/;"	f	file:
h261_encode_gob_header	libavcodec/h261enc.c	/^static void h261_encode_gob_header(MpegEncContext * s, int mb_line){$/;"	f	file:
h261_encode_motion	libavcodec/h261enc.c	/^static void h261_encode_motion(H261Context * h, int val){$/;"	f	file:
h261_find_frame_end	libavcodec/h261_parser.c	/^static int h261_find_frame_end(ParseContext *pc, AVCodecContext* avctx, const uint8_t *buf, int buf_size){$/;"	f	file:
h261_loop_filter	libavcodec/dsputil.h	/^    void (*h261_loop_filter)(uint8_t *src, int stride);$/;"	m	struct:DSPContext
h261_loop_filter_c	libavcodec/dsputil.c	/^static void h261_loop_filter_c(uint8_t *src, int stride){$/;"	f	file:
h261_mba_bits	libavcodec/h261data.h	/^static const uint8_t h261_mba_bits[35] = {$/;"	v
h261_mba_code	libavcodec/h261data.h	/^static const uint8_t h261_mba_code[35] = {$/;"	v
h261_mba_vlc	libavcodec/h261dec.c	/^static VLC h261_mba_vlc;$/;"	v	file:
h261_mtype_bits	libavcodec/h261data.h	/^static const uint8_t h261_mtype_bits[10] = {$/;"	v
h261_mtype_code	libavcodec/h261data.h	/^static const uint8_t h261_mtype_code[10] = {$/;"	v
h261_mtype_map	libavcodec/h261data.h	/^static const int h261_mtype_map[10]= {$/;"	v
h261_mtype_vlc	libavcodec/h261dec.c	/^static VLC h261_mtype_vlc;$/;"	v	file:
h261_mv_tab	libavcodec/h261data.h	/^static const uint8_t h261_mv_tab[17][2] = {$/;"	v
h261_mv_vlc	libavcodec/h261dec.c	/^static VLC h261_mv_vlc;$/;"	v	file:
h261_parse	libavcodec/h261_parser.c	/^static int h261_parse(AVCodecParserContext *s,$/;"	f	file:
h261_probe	libavformat/h261dec.c	/^static int h261_probe(AVProbeData *p)$/;"	f	file:
h261_rl_tcoeff	libavcodec/h261data.h	/^static RLTable h261_rl_tcoeff = {$/;"	v
h261_tcoeff_level	libavcodec/h261data.h	/^static const int8_t h261_tcoeff_level[64] = {$/;"	v
h261_tcoeff_run	libavcodec/h261data.h	/^static const int8_t h261_tcoeff_run[64] = {$/;"	v
h261_tcoeff_vlc	libavcodec/h261data.h	/^static const uint16_t h261_tcoeff_vlc[65][2] = {$/;"	v
h263_aic	libavcodec/mpegvideo.h	/^    int h263_aic;              \/\/\/< Advanded INTRA Coding (AIC)$/;"	m	struct:MpegEncContext
h263_aic_dir	libavcodec/mpegvideo.h	/^    int h263_aic_dir;               \/\/\/< AIC direction: 0 = left, 1 = top$/;"	m	struct:MpegEncContext
h263_decode_block	libavcodec/ituh263dec.c	/^static int h263_decode_block(MpegEncContext * s, DCTELEM * block,$/;"	f	file:
h263_decode_dquant	libavcodec/ituh263dec.c	/^static void h263_decode_dquant(MpegEncContext *s){$/;"	f	file:
h263_decode_gob_header	libavcodec/ituh263dec.c	/^static int h263_decode_gob_header(MpegEncContext *s)$/;"	f	file:
h263_decode_init_vlc	libavcodec/ituh263dec.c	/^void h263_decode_init_vlc(MpegEncContext *s)$/;"	f
h263_decode_motion	libavcodec/ituh263dec.c	/^int h263_decode_motion(MpegEncContext * s, int pred, int f_code)$/;"	f
h263_decode_picture_header	libavcodec/ituh263dec.c	/^int h263_decode_picture_header(MpegEncContext *s)$/;"	f
h263_encode_block	libavcodec/ituh263enc.c	/^static void h263_encode_block(MpegEncContext * s, DCTELEM * block, int n)$/;"	f	file:
h263_encode_gob_header	libavcodec/ituh263enc.c	/^void h263_encode_gob_header(MpegEncContext * s, int mb_line)$/;"	f
h263_encode_init	libavcodec/ituh263enc.c	/^void h263_encode_init(MpegEncContext *s)$/;"	f
h263_encode_mb	libavcodec/ituh263enc.c	/^void h263_encode_mb(MpegEncContext * s,$/;"	f
h263_encode_picture_header	libavcodec/ituh263enc.c	/^void h263_encode_picture_header(MpegEncContext * s, int picture_number)$/;"	f
h263_flv	libavcodec/mpegvideo.h	/^    int h263_flv;     \/\/\/< use flv h263 header$/;"	m	struct:MpegEncContext
h263_format	libavcodec/h263data.h	/^const uint16_t h263_format[8][2] = {$/;"	v
h263_get_modb	libavcodec/ituh263dec.c	/^static int h263_get_modb(GetBitContext *gb, int pb_frame, int *cbpb)$/;"	f	file:
h263_get_motion_length	libavcodec/h263.h	/^static inline int h263_get_motion_length(MpegEncContext * s, int val, int f_code){$/;"	f
h263_h_loop_filter	libavcodec/dsputil.h	/^    void (*h263_h_loop_filter)(uint8_t *src, int stride, int qscale);$/;"	m	struct:DSPContext
h263_h_loop_filter_c	libavcodec/dsputil.c	/^static void h263_h_loop_filter_c(uint8_t *src, int stride, int qscale){$/;"	f	file:
h263_h_loop_filter_mmx	libavcodec/x86/dsputil_mmx.c	/^static void h263_h_loop_filter_mmx(uint8_t *src, int stride, int qscale){$/;"	f	file:
h263_handle_packet	libavformat/rtpdec_h263.c	/^static int h263_handle_packet(AVFormatContext *ctx,$/;"	f	file:
h263_long_vectors	libavcodec/mpegvideo.h	/^    int h263_long_vectors;      \/\/\/< use horrible h263v1 long vector mode$/;"	m	struct:MpegEncContext
h263_mb_type_b_map	libavcodec/ituh263dec.c	/^static const int h263_mb_type_b_map[15]= {$/;"	v	file:
h263_mbtype_b_tab	libavcodec/h263data.h	/^const uint8_t h263_mbtype_b_tab[15][2] = {$/;"	v
h263_mbtype_b_vlc	libavcodec/ituh263dec.c	/^static VLC h263_mbtype_b_vlc;$/;"	v	file:
h263_msmpeg4	libavcodec/mpegvideo.h	/^    int h263_msmpeg4; \/\/\/< generate MSMPEG4 compatible stream (deprecated, use msmpeg4_version instead)$/;"	m	struct:MpegEncContext
h263_mv4_search	libavcodec/motion_est.c	/^static inline int h263_mv4_search(MpegEncContext *s, int mx, int my, int shift)$/;"	f	file:
h263_parse	libavcodec/h263_parser.c	/^static int h263_parse(AVCodecParserContext *s,$/;"	f	file:
h263_plus	libavcodec/mpegvideo.h	/^    int h263_plus;    \/\/\/< h263 plus headers$/;"	m	struct:MpegEncContext
h263_pred	libavcodec/mpegvideo.h	/^    int h263_pred;    \/\/\/< use mpeg4\/h263 ac\/dc predictions$/;"	m	struct:MpegEncContext
h263_pred_acdc	libavcodec/h263.c	/^void h263_pred_acdc(MpegEncContext * s, DCTELEM *block, int n)$/;"	f
h263_pred_dc	libavcodec/h263.c	/^int h263_pred_dc(MpegEncContext * s, int n, int16_t **dc_val_ptr)$/;"	f
h263_pred_motion	libavcodec/h263.c	/^int16_t *h263_pred_motion(MpegEncContext * s, int block, int dir,$/;"	f
h263_probe	libavformat/h263dec.c	/^static int h263_probe(AVProbeData *p)$/;"	f	file:
h263_skip_b_part	libavcodec/ituh263dec.c	/^static int h263_skip_b_part(MpegEncContext *s, int cbp)$/;"	f	file:
h263_slice_structured	libavcodec/mpegvideo.h	/^    int h263_slice_structured;$/;"	m	struct:MpegEncContext
h263_v_loop_filter	libavcodec/dsputil.h	/^    void (*h263_v_loop_filter)(uint8_t *src, int stride, int qscale);$/;"	m	struct:DSPContext
h263_v_loop_filter_c	libavcodec/dsputil.c	/^static void h263_v_loop_filter_c(uint8_t *src, int stride, int qscale){$/;"	f	file:
h263_v_loop_filter_mmx	libavcodec/x86/dsputil_mmx.c	/^static void h263_v_loop_filter_mmx(uint8_t *src, int stride, int qscale){$/;"	f	file:
h263p_decode_umotion	libavcodec/ituh263dec.c	/^static int h263p_decode_umotion(MpegEncContext * s, int pred)$/;"	f	file:
h263p_encode_umotion	libavcodec/ituh263enc.c	/^static void h263p_encode_umotion(MpegEncContext * s, int val)$/;"	f	file:
h264	libavcodec/vdpau.h	/^        VdpPictureInfoH264        h264;$/;"	m	union:vdpau_render_state::VdpPictureInfo
h264_biweight_func	libavcodec/h264dsp.h	/^typedef void (*h264_biweight_func)(uint8_t *dst, uint8_t *src, int stride, int log2_denom, int weightd, int weights, int offset);$/;"	t
h264_chroma_dc_dequant_idct	libavcodec/h264dsp.h	/^    void (*h264_chroma_dc_dequant_idct)(DCTELEM *block, int qmul);$/;"	m	struct:H264DSPContext
h264_chroma_mc_func	libavcodec/dsputil.h	/^typedef void (*h264_chroma_mc_func)(uint8_t *dst\/*align 8*\/, uint8_t *src\/*align 1*\/, int srcStride, int h, int x, int y);$/;"	t
h264_class	libavcodec/crystalhd.c	/^static AVClass h264_class = {$/;"	v	file:
h264_deblock_mask	libavcodec/ppc/h264_altivec.c	/^static inline vec_u8 h264_deblock_mask ( register vec_u8 p0,$/;"	f	file:
h264_deblock_p0_q0	libavcodec/ppc/h264_altivec.c	739;"	d	file:
h264_deblock_q1	libavcodec/ppc/h264_altivec.c	/^static inline vec_u8 h264_deblock_q1(register vec_u8 p0,$/;"	f	file:
h264_free_context	libavformat/rtpdec_h264.c	/^static void h264_free_context(PayloadContext *data)$/;"	f	file:
h264_h_loop_filter_chroma	libavcodec/h264dsp.h	/^    void (*h264_h_loop_filter_chroma)(uint8_t *pix\/*align 4*\/, int stride, int alpha, int beta, int8_t *tc0);$/;"	m	struct:H264DSPContext
h264_h_loop_filter_chroma	libavcodec/h264dsp_template.c	/^static void FUNCC(h264_h_loop_filter_chroma)(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_h_loop_filter_chroma_intra	libavcodec/h264dsp.h	/^    void (*h264_h_loop_filter_chroma_intra)(uint8_t *pix\/*align 8*\/, int stride, int alpha, int beta);$/;"	m	struct:H264DSPContext
h264_h_loop_filter_chroma_intra	libavcodec/h264dsp_template.c	/^static void FUNCC(h264_h_loop_filter_chroma_intra)(uint8_t *pix, int stride, int alpha, int beta)$/;"	f	file:
h264_h_loop_filter_chroma_mbaff	libavcodec/h264dsp.h	/^    void (*h264_h_loop_filter_chroma_mbaff)(uint8_t *pix\/*align 8*\/, int stride, int alpha, int beta, int8_t *tc0);$/;"	m	struct:H264DSPContext
h264_h_loop_filter_chroma_mbaff	libavcodec/h264dsp_template.c	/^static void FUNCC(h264_h_loop_filter_chroma_mbaff)(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_h_loop_filter_chroma_mbaff_intra	libavcodec/h264dsp.h	/^    void (*h264_h_loop_filter_chroma_mbaff_intra)(uint8_t *pix\/*align 8*\/, int stride, int alpha, int beta);$/;"	m	struct:H264DSPContext
h264_h_loop_filter_chroma_mbaff_intra	libavcodec/h264dsp_template.c	/^static void FUNCC(h264_h_loop_filter_chroma_mbaff_intra)(uint8_t *pix, int stride, int alpha, int beta)$/;"	f	file:
h264_h_loop_filter_luma	libavcodec/h264dsp.h	/^    void (*h264_h_loop_filter_luma)(uint8_t *pix\/*align 4 *\/, int stride, int alpha, int beta, int8_t *tc0);$/;"	m	struct:H264DSPContext
h264_h_loop_filter_luma	libavcodec/h264dsp_template.c	/^static void FUNCC(h264_h_loop_filter_luma)(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_h_loop_filter_luma_altivec	libavcodec/ppc/h264_altivec.c	/^static void h264_h_loop_filter_luma_altivec(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0) {$/;"	f	file:
h264_h_loop_filter_luma_intra	libavcodec/h264dsp.h	/^    void (*h264_h_loop_filter_luma_intra)(uint8_t *pix, int stride, int alpha, int beta);$/;"	m	struct:H264DSPContext
h264_h_loop_filter_luma_intra	libavcodec/h264dsp_template.c	/^static void FUNCC(h264_h_loop_filter_luma_intra)(uint8_t *pix, int stride, int alpha, int beta)$/;"	f	file:
h264_h_loop_filter_luma_mbaff	libavcodec/h264dsp.h	/^    void (*h264_h_loop_filter_luma_mbaff)(uint8_t *pix\/*align 16*\/, int stride, int alpha, int beta, int8_t *tc0);$/;"	m	struct:H264DSPContext
h264_h_loop_filter_luma_mbaff	libavcodec/h264dsp_template.c	/^static void FUNCC(h264_h_loop_filter_luma_mbaff)(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_h_loop_filter_luma_mbaff_intra	libavcodec/h264dsp.h	/^    void (*h264_h_loop_filter_luma_mbaff_intra)(uint8_t *pix\/*align 16*\/, int stride, int alpha, int beta);$/;"	m	struct:H264DSPContext
h264_h_loop_filter_luma_mbaff_intra	libavcodec/h264dsp_template.c	/^static void FUNCC(h264_h_loop_filter_luma_mbaff_intra)(uint8_t *pix, int stride, int alpha, int beta)$/;"	f	file:
h264_handle_packet	libavformat/rtpdec_h264.c	/^static int h264_handle_packet(AVFormatContext *ctx,$/;"	f	file:
h264_idct8_add	libavcodec/h264dsp.h	/^    void (*h264_idct8_add)(uint8_t *dst\/*align 8*\/, DCTELEM *block\/*align 16*\/, int stride);$/;"	m	struct:H264DSPContext
h264_idct8_add4	libavcodec/h264dsp.h	/^    void (*h264_idct8_add4)(uint8_t *dst\/*align 16*\/, const int *blockoffset, DCTELEM *block\/*align 16*\/, int stride, const uint8_t nnzc[15*8]);$/;"	m	struct:H264DSPContext
h264_idct8_dc_add	libavcodec/h264dsp.h	/^    void (*h264_idct8_dc_add)(uint8_t *dst\/*align 8*\/, DCTELEM *block\/*align 16*\/, int stride);$/;"	m	struct:H264DSPContext
h264_idct_add	libavcodec/h264dsp.h	/^    void (*h264_idct_add)(uint8_t *dst\/*align 4*\/, DCTELEM *block\/*align 16*\/, int stride);$/;"	m	struct:H264DSPContext
h264_idct_add16	libavcodec/h264dsp.h	/^    void (*h264_idct_add16)(uint8_t *dst\/*align 16*\/, const int *blockoffset, DCTELEM *block\/*align 16*\/, int stride, const uint8_t nnzc[15*8]);$/;"	m	struct:H264DSPContext
h264_idct_add16intra	libavcodec/h264dsp.h	/^    void (*h264_idct_add16intra)(uint8_t *dst\/*align 16*\/, const int *blockoffset, DCTELEM *block\/*align 16*\/, int stride, const uint8_t nnzc[15*8]);$/;"	m	struct:H264DSPContext
h264_idct_add8	libavcodec/h264dsp.h	/^    void (*h264_idct_add8)(uint8_t **dst\/*align 16*\/, const int *blockoffset, DCTELEM *block\/*align 16*\/, int stride, const uint8_t nnzc[15*8]);$/;"	m	struct:H264DSPContext
h264_idct_add8_mmx2_plane	libavcodec/x86/h264_idct.asm	/^h264_idct_add8_mmx2_plane$/;"	l
h264_idct_add8_mmx_plane	libavcodec/x86/h264_idct.asm	/^h264_idct_add8_mmx_plane:$/;"	l
h264_idct_dc_add	libavcodec/h264dsp.h	/^    void (*h264_idct_dc_add)(uint8_t *dst\/*align 4*\/, DCTELEM *block\/*align 16*\/, int stride);$/;"	m	struct:H264DSPContext
h264_idct_dc_add8_mmx2	libavcodec/x86/h264_idct.asm	/^h264_idct_dc_add8_mmx2:$/;"	l
h264_idct_dc_add_altivec	libavcodec/ppc/h264_altivec.c	/^static void h264_idct_dc_add_altivec(uint8_t *dst, DCTELEM *block, int stride)$/;"	f	file:
h264_idct_dc_add_internal	libavcodec/ppc/h264_altivec.c	/^static av_always_inline void h264_idct_dc_add_internal(uint8_t *dst, DCTELEM *block, int stride, int size)$/;"	f	file:
h264_loop_filter_chroma	libavcodec/h264dsp_template.c	/^static av_always_inline av_flatten void FUNCC(h264_loop_filter_chroma)(uint8_t *p_pix, int xstride, int ystride, int inner_iters, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_loop_filter_chroma_intra	libavcodec/h264dsp_template.c	/^static av_always_inline av_flatten void FUNCC(h264_loop_filter_chroma_intra)(uint8_t *p_pix, int xstride, int ystride, int inner_iters, int alpha, int beta)$/;"	f	file:
h264_loop_filter_luma	libavcodec/h264dsp_template.c	/^static av_always_inline av_flatten void FUNCC(h264_loop_filter_luma)(uint8_t *p_pix, int xstride, int ystride, int inner_iters, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_loop_filter_luma_altivec	libavcodec/ppc/h264_altivec.c	771;"	d	file:
h264_loop_filter_luma_intra	libavcodec/h264dsp_template.c	/^static av_always_inline av_flatten void FUNCC(h264_loop_filter_luma_intra)(uint8_t *p_pix, int xstride, int ystride, int inner_iters, int alpha, int beta)$/;"	f	file:
h264_loop_filter_strength	libavcodec/h264dsp.h	/^    void (*h264_loop_filter_strength)(int16_t bS[2][4][4], uint8_t nnz[40], int8_t ref[2][40], int16_t mv[2][40][2],$/;"	m	struct:H264DSPContext
h264_loop_filter_strength_iteration_mmx2	libavcodec/x86/h264dsp_mmx.c	91;"	d	file:
h264_loop_filter_strength_mmx2	libavcodec/x86/h264dsp_mmx.c	/^static void h264_loop_filter_strength_mmx2( int16_t bS[2][4][4], uint8_t nnz[40], int8_t ref[2][40], int16_t mv[2][40][2],$/;"	f	file:
h264_luma_dc_dequant_idct	libavcodec/h264dsp.h	/^    void (*h264_luma_dc_dequant_idct)(DCTELEM *output, DCTELEM *input\/*align 16*\/, int qmul);$/;"	m	struct:H264DSPContext
h264_mp4toannexb_filter	libavcodec/h264_mp4toannexb_bsf.c	/^static int h264_mp4toannexb_filter(AVBitStreamFilterContext *bsfc,$/;"	f	file:
h264_new_context	libavformat/rtpdec_h264.c	/^static PayloadContext *h264_new_context(void)$/;"	f	file:
h264_parse	libavcodec/h264_parser.c	/^static int h264_parse(AVCodecParserContext *s,$/;"	f	file:
h264_probe	libavformat/h264dec.c	/^static int h264_probe(AVProbeData *p)$/;"	f	file:
h264_split	libavcodec/h264_parser.c	/^static int h264_split(AVCodecContext *avctx,$/;"	f	file:
h264_v_loop_filter_chroma	libavcodec/h264dsp.h	/^    void (*h264_v_loop_filter_chroma)(uint8_t *pix\/*align 8*\/, int stride, int alpha, int beta, int8_t *tc0);$/;"	m	struct:H264DSPContext
h264_v_loop_filter_chroma	libavcodec/h264dsp_template.c	/^static void FUNCC(h264_v_loop_filter_chroma)(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_v_loop_filter_chroma_intra	libavcodec/h264dsp.h	/^    void (*h264_v_loop_filter_chroma_intra)(uint8_t *pix\/*align 8*\/, int stride, int alpha, int beta);$/;"	m	struct:H264DSPContext
h264_v_loop_filter_chroma_intra	libavcodec/h264dsp_template.c	/^static void FUNCC(h264_v_loop_filter_chroma_intra)(uint8_t *pix, int stride, int alpha, int beta)$/;"	f	file:
h264_v_loop_filter_luma	libavcodec/h264dsp.h	/^    void (*h264_v_loop_filter_luma)(uint8_t *pix\/*align 16*\/, int stride, int alpha, int beta, int8_t *tc0);$/;"	m	struct:H264DSPContext
h264_v_loop_filter_luma	libavcodec/h264dsp_template.c	/^static void FUNCC(h264_v_loop_filter_luma)(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0)$/;"	f	file:
h264_v_loop_filter_luma_altivec	libavcodec/ppc/h264_altivec.c	/^static void h264_v_loop_filter_luma_altivec(uint8_t *pix, int stride, int alpha, int beta, int8_t *tc0) {$/;"	f	file:
h264_v_loop_filter_luma_intra	libavcodec/h264dsp.h	/^    void (*h264_v_loop_filter_luma_intra)(uint8_t *pix, int stride, int alpha, int beta);$/;"	m	struct:H264DSPContext
h264_v_loop_filter_luma_intra	libavcodec/h264dsp_template.c	/^static void FUNCC(h264_v_loop_filter_luma_intra)(uint8_t *pix, int stride, int alpha, int beta)$/;"	f	file:
h264_weight_func	libavcodec/h264dsp.h	/^typedef void (*h264_weight_func)(uint8_t *block, int stride, int log2_denom, int weight, int offset);$/;"	t
h264dsp	libavcodec/h264.h	/^    H264DSPContext h264dsp;$/;"	m	struct:H264Context
hBlur	libavfilter/libmpcodecs/vf_boxblur.c	/^static void hBlur(uint8_t *dst, uint8_t *src, int w, int h, int dstStride, int srcStride, int radius, int power){$/;"	f	file:
hChrFilter	libswscale/swscale_internal.h	/^    int16_t *hChrFilter;          \/\/\/< Array of horizontal filter coefficients for chroma     planes.$/;"	m	struct:SwsContext
hChrFilterPos	libswscale/swscale_internal.h	/^    int16_t *hChrFilterPos;       \/\/\/< Array of horizontal filter starting positions for each dst[i] for chroma     planes.$/;"	m	struct:SwsContext
hChrFilterSize	libswscale/swscale_internal.h	/^    int      hChrFilterSize;      \/\/\/< Horizontal filter size for chroma     pixels.$/;"	m	struct:SwsContext
hChromaSubSample	libpostproc/postprocess_internal.h	/^    int hChromaSubSample;$/;"	m	struct:PPContext
hLumFilter	libswscale/swscale_internal.h	/^    int16_t *hLumFilter;          \/\/\/< Array of horizontal filter coefficients for luma\/alpha planes.$/;"	m	struct:SwsContext
hLumFilterPos	libswscale/swscale_internal.h	/^    int16_t *hLumFilterPos;       \/\/\/< Array of horizontal filter starting positions for each dst[i] for luma\/alpha planes.$/;"	m	struct:SwsContext
hLumFilterSize	libswscale/swscale_internal.h	/^    int      hLumFilterSize;      \/\/\/< Horizontal filter size for luma\/alpha pixels.$/;"	m	struct:SwsContext
hScale	libswscale/swscale_internal.h	/^    void (*hScale)(int16_t *dst, int dstW, const uint8_t *src, int srcW,$/;"	m	struct:SwsContext
hScale	libswscale/x86/swscale_template.c	/^static void RENAME(hScale)(int16_t *dst, int dstW,$/;"	f	file:
hScale16	libswscale/swscale_internal.h	/^    void (*hScale16)(int16_t *dst, int dstW, const uint16_t *src, int srcW,$/;"	m	struct:SwsContext
hScale16	libswscale/x86/swscale_template.c	/^static inline void RENAME(hScale16)(int16_t *dst, int dstW, const uint16_t *src, int srcW, int xInc,$/;"	f	file:
hScale_altivec_real	libswscale/ppc/swscale_altivec.c	/^static void hScale_altivec_real(int16_t *dst, int dstW,$/;"	f	file:
hScale_c	libswscale/swscale_template.c	/^static inline void hScale_c(int16_t *dst, int dstW, const uint8_t *src,$/;"	f	file:
h_block_filter	libavcodec/error_resilience.c	/^static void h_block_filter(MpegEncContext *s, uint8_t *dst, int w, int h, int stride, int is_luma){$/;"	f	file:
h_cos	tests/rotozoom.c	/^int h_cos [360];$/;"	v
h_count	libavcodec/mjpegdec.h	/^    int h_count[MAX_COMPONENTS]; \/* horizontal and vertical count for each component *\/$/;"	m	struct:MJpegDecodeContext
h_edge_pos	libavcodec/mpegvideo.h	/^    int h_edge_pos, v_edge_pos;\/\/\/< horizontal \/ vertical position of the right\/bottom edge (pixel replication)$/;"	m	struct:MpegEncContext
h_expr	libavfilter/vf_pad.c	/^    char h_expr[256];       \/\/\/< height expression string$/;"	m	struct:__anon52	file:
h_expr	libavfilter/vf_scale.c	/^    char h_expr[256];           \/\/\/< height expression string$/;"	m	struct:__anon18	file:
h_max	libavcodec/mjpegdec.h	/^    int h_max, v_max; \/* maximum h and v counts *\/$/;"	m	struct:MJpegDecodeContext
h_scount	libavcodec/mjpegdec.h	/^    int h_scount[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext
h_sin	tests/rotozoom.c	/^int h_sin [360];$/;"	v
h_subpel_filters_inner	libavcodec/ppc/vp8dsp_altivec.c	/^static const vec_s8 h_subpel_filters_inner[7] =$/;"	v	file:
h_subpel_filters_outer	libavcodec/ppc/vp8dsp_altivec.c	/^static const vec_s8 h_subpel_filters_outer[3] =$/;"	v	file:
hadamard8_16_wrapper	libavcodec/x86/dsputilenc_yasm.asm	/^hadamard8_16_wrapper %1, %2, 3$/;"	l
hadamard8_16_wrapper	libavcodec/x86/dsputilenc_yasm.asm	/^hadamard8_16_wrapper %1, 0, 14$/;"	l
hadamard8_diff	libavcodec/dsputil.h	/^    me_cmp_func hadamard8_diff[6];$/;"	m	struct:DSPContext
hadamard8_diff16_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int hadamard8_diff16_altivec(\/*MpegEncContext*\/ void *s, uint8_t *dst, uint8_t *src, int stride, int h){$/;"	f	file:
hadamard8_diff16x8_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int hadamard8_diff16x8_altivec(\/*MpegEncContext*\/ void *s, uint8_t *dst, uint8_t *src, int stride, int h) {$/;"	f	file:
hadamard8_diff8x8_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int hadamard8_diff8x8_altivec(\/*MpegEncContext*\/ void *s, uint8_t *dst, uint8_t *src, int stride, int h){$/;"	f	file:
hadamard8_diff8x8_c	libavcodec/dsputil.c	/^static int hadamard8_diff8x8_c(\/*MpegEncContext*\/ void *s, uint8_t *dst, uint8_t *src, int stride, int h){$/;"	f	file:
hadamard8_intra8x8_c	libavcodec/dsputil.c	/^static int hadamard8_intra8x8_c(\/*MpegEncContext*\/ void *s, uint8_t *src, uint8_t *dummy, int stride, int h){$/;"	f	file:
hadamard_func	libavcodec/x86/dsputilenc_mmx.c	928;"	d	file:
half_size_filter	libavfilter/libmpcodecs/vf_remove_logo.c	/^  pgm_structure * half_size_filter; \/* Stores a 50% width and 50% height filter image. This is used to tell what pixels are in the logo or not in the chroma planes. *\/$/;"	m	struct:vf_priv_s	file:
halfpel_flag	libavcodec/svq3.c	/^    int halfpel_flag;$/;"	m	struct:__anon141	file:
halfpel_interpol	libavcodec/snow.c	/^static void halfpel_interpol(SnowContext *s, uint8_t *halfpel[4][4], AVFrame *frame){$/;"	f	file:
halfpel_plane	libavcodec/snow.c	/^    uint8_t *halfpel_plane[MAX_REF_FRAMES][4][4];$/;"	m	struct:SnowContext	file:
halfpq	libavcodec/vc1.h	/^    uint8_t halfpq;       \/\/\/< Uniform quant over image and qp+.5$/;"	m	struct:VC1Context
halfscale	libavfilter/vf_unsharp.c	/^    int32_t halfscale;                       \/\/\/< amount to add to pixel$/;"	m	struct:FilterParam	file:
ham	libavcodec/iff.c	/^    unsigned  ham;          \/\/\/< 0 if non-HAM or number of hold bits (6 for bpp > 6, 4 otherwise)$/;"	m	struct:__anon114	file:
ham	libavformat/iff.c	/^    unsigned  ham;          \/\/\/< 0 if non-HAM or number of hold bits (6 for bpp > 6, 4 otherwise)$/;"	m	struct:__anon395	file:
ham_buf	libavcodec/iff.c	/^    uint8_t * ham_buf;      \/\/\/< temporary buffer for planar to chunky conversation$/;"	m	struct:__anon114	file:
ham_palbuf	libavcodec/iff.c	/^    uint32_t *ham_palbuf;   \/\/\/< HAM decode table$/;"	m	struct:__anon114	file:
handle	libavcodec/libvo-aacenc.c	/^    VO_HANDLE handle;$/;"	m	struct:AACContext	file:
handle	libavformat/avio.h	/^    URLContext *handle;$/;"	m	struct:URLPollEntry
handle	libavformat/avisynth.c	/^  PAVISTREAM handle;$/;"	m	struct:__anon474	file:
handle_basic_params	libavformat/httpauth.c	/^static void handle_basic_params(HTTPAuthState *state, const char *key,$/;"	f	file:
handle_child_exit	ffserver.c	/^static void handle_child_exit(int sig)$/;"	f	file:
handle_chunk_type	libavformat/mmsh.c	/^static int handle_chunk_type(MMSHContext *mmsh)$/;"	f	file:
handle_connection	ffserver.c	/^static int handle_connection(HTTPContext *c)$/;"	f	file:
handle_digest_params	libavformat/httpauth.c	/^static void handle_digest_params(HTTPAuthState *state, const char *key,$/;"	f	file:
handle_digest_update	libavformat/httpauth.c	/^static void handle_digest_update(HTTPAuthState *state, const char *key,$/;"	f	file:
handle_jpeg	libswscale/utils.c	/^static int handle_jpeg(enum PixelFormat *format)$/;"	f	file:
handle_key_args	libavformat/applehttp.c	/^static void handle_key_args(struct key_info *info, const char *key,$/;"	f	file:
handle_packet	libavformat/mpegts.c	/^static int handle_packet(MpegTSContext *ts, const uint8_t *packet)$/;"	f	file:
handle_packet_stream_changing_type	libavformat/mmst.c	/^static void handle_packet_stream_changing_type(MMSTContext *mmst)$/;"	f	file:
handle_packets	libavformat/mpegts.c	/^static int handle_packets(MpegTSContext *ts, int nb_packets)$/;"	f	file:
handle_rtp_info	libavformat/rtsp.c	/^static void handle_rtp_info(RTSPState *rt, const char *url,$/;"	f	file:
handle_variant_args	libavformat/applehttp.c	/^static void handle_variant_args(struct variant_info *info, const char *key,$/;"	f	file:
handle_variant_args	libavformat/applehttpproto.c	/^static void handle_variant_args(struct variant_info *info, const char *key,$/;"	f	file:
hang_count	libavcodec/amrnbdec.c	/^    uint8_t                      hang_count; \/\/\/< the number of subframes since a hangover period started$/;"	m	struct:AMRContext	file:
hardthresh_c	libavfilter/libmpcodecs/vf_pp7.c	/^static int hardthresh_c(DCTELEM *src, int qp){$/;"	f	file:
hardthresh_c	libavfilter/libmpcodecs/vf_spp.c	/^static void hardthresh_c(DCTELEM dst[64], DCTELEM src[64], int qp, uint8_t *permutation){$/;"	f	file:
hardthresh_mmx	libavfilter/libmpcodecs/vf_spp.c	/^static void hardthresh_mmx(DCTELEM dst[64], DCTELEM src[64], int qp, uint8_t *permutation){$/;"	f	file:
has3DNow	libavfilter/libmpcodecs/cpudetect.h	/^    int has3DNow;$/;"	m	struct:cpucaps_s
has3DNowExt	libavfilter/libmpcodecs/cpudetect.h	/^    int has3DNowExt;$/;"	m	struct:cpucaps_s
hasAltiVec	libavfilter/libmpcodecs/cpudetect.h	/^    int hasAltiVec;$/;"	m	struct:cpucaps_s
hasChroma	libswscale/swscale-test.c	43;"	d	file:
hasKeyframes	libavformat/movenc.h	/^    int         hasKeyframes;$/;"	m	struct:MOVIndex
hasMMX	libavfilter/libmpcodecs/cpudetect.h	/^    int hasMMX;$/;"	m	struct:cpucaps_s
hasMMX2	libavfilter/libmpcodecs/cpudetect.h	/^    int hasMMX2;$/;"	m	struct:cpucaps_s
hasSSE	libavfilter/libmpcodecs/cpudetect.h	/^    int hasSSE;$/;"	m	struct:cpucaps_s
hasSSE2	libavfilter/libmpcodecs/cpudetect.h	/^    int hasSSE2;$/;"	m	struct:cpucaps_s
hasSSE3	libavfilter/libmpcodecs/cpudetect.h	/^    int hasSSE3;$/;"	m	struct:cpucaps_s
hasSSE4a	libavfilter/libmpcodecs/cpudetect.h	/^    int hasSSE4a;$/;"	m	struct:cpucaps_s
hasSSSE3	libavfilter/libmpcodecs/cpudetect.h	/^    int hasSSSE3;$/;"	m	struct:cpucaps_s
hasTSC	libavfilter/libmpcodecs/cpudetect.h	/^    int hasTSC;$/;"	m	struct:cpucaps_s
has_alpha	libavcodec/bink.c	/^    int            has_alpha;$/;"	m	struct:BinkContext	file:
has_alpha	libavcodec/vp56.h	/^    int has_alpha;$/;"	m	struct:vp56_context
has_audio	libavformat/dvenc.c	/^    int               has_audio;     \/* frame under contruction has audio *\/$/;"	m	struct:DVMuxContext	file:
has_audio	libavformat/siff.c	/^    int has_audio;$/;"	m	struct:SIFFContext	file:
has_audio	libavformat/thp.c	/^    int              has_audio;$/;"	m	struct:ThpDemuxContext	file:
has_b_frames	libavcodec/avcodec.h	/^    int has_b_frames;$/;"	m	struct:AVCodecContext
has_center	libavcodec/ac3enc.h	/^    int has_center;                         \/\/\/< indicates if there is a center channel$/;"	m	struct:AC3EncodeContext
has_codec_parameters	libavformat/utils.c	/^static int has_codec_parameters(AVCodecContext *enc)$/;"	f	file:
has_complete_frame	libavcodec/mxpegdec.c	/^    int has_complete_frame; \/* true if has complete frame *\/$/;"	m	struct:MXpegDecodeContext	file:
has_decode_delay_been_guessed	libavformat/utils.c	/^static int has_decode_delay_been_guessed(AVStream *st)$/;"	f	file:
has_errors	libavcodec/qdm2.c	/^    int has_errors;         \/\/\/< packet has errors$/;"	m	struct:__anon200	file:
has_filter_frame	ffmpeg.c	/^    int has_filter_frame;$/;"	m	struct:AVInputStream	file:
has_filter_frame	ffmpeg/ffmpeg.c	/^    int has_filter_frame;$/;"	m	struct:AVInputStream	file:
has_header	libavformat/http.c	/^static inline int has_header(const char *str, const char *header)$/;"	f	file:
has_next_packet	libavformat/rtpdec.c	/^static int has_next_packet(RTPDemuxContext *s)$/;"	f	file:
has_pal	libavformat/avidec.c	/^    int has_pal;$/;"	m	struct:AVIStream	file:
has_palette	libavformat/ipmovie.c	/^    int          has_palette;$/;"	m	struct:IPMVEContext	file:
has_palette	libavformat/isom.h	/^    int has_palette;$/;"	m	struct:MOVStreamContext
has_residual_lsps	libavcodec/wmavoice.c	/^    int has_residual_lsps;        \/\/\/< if set, superframes contain one set of$/;"	m	struct:__anon157	file:
has_sound	libavformat/dxa.c	/^    int has_sound;$/;"	m	struct:__anon330	file:
has_surround	libavcodec/ac3enc.h	/^    int has_surround;                       \/\/\/< indicates if there are one or more surround channels$/;"	m	struct:AC3EncodeContext
has_video	libavformat/dvenc.c	/^    int               has_video;     \/* frame under contruction has video *\/$/;"	m	struct:DVMuxContext	file:
has_video	libavformat/siff.c	/^    int has_video;$/;"	m	struct:SIFFContext	file:
hash	libavcodec/lzwenc.c	/^static inline int hash(int head, const int add)$/;"	f	file:
hash	libavformat/sapdec.c	/^    uint16_t hash;$/;"	m	struct:SAPState	file:
hashNext	libavcodec/lzwenc.c	/^static inline int hashNext(int head, const int offset)$/;"	f	file:
hashOffset	libavcodec/lzwenc.c	/^static inline int hashOffset(const int head)$/;"	f	file:
hash_prefix	libavcodec/lzwenc.c	/^    int hash_prefix;$/;"	m	struct:Code	file:
hash_shift	libavcodec/lagarithrac.h	/^    unsigned hash_shift;        \/*!< Number of bits to shift to calculate hash for radix search. *\/$/;"	m	struct:lag_rac
have_configured	libavfilter/libmpcodecs/vf.h	/^    int have_configured;$/;"	m	struct:vf_format_context_t
have_saved	libavcodec/nellymoserenc.c	/^    int             have_saved;$/;"	m	struct:NellyMoserEncodeContext	file:
have_saved	libavcodec/vorbisenc.c	/^    int have_saved;$/;"	m	struct:__anon194	file:
have_step	libavfilter/libmpcodecs/vf_fixpts.c	/^    unsigned have_step:1;$/;"	m	struct:vf_priv_s	file:
hb_fir_filter	libavcodec/amrwbdec.c	/^static void hb_fir_filter(float *out, const float fir_coef[HB_FIR_SIZE + 1],$/;"	f	file:
hb_gain	libavcodec/amrwbdata.h	/^    uint16_t hb_gain;                      \/\/\/< high-band energy index (mode 23k85 only)$/;"	m	struct:__anon110
hb_synthesis	libavcodec/amrwbdec.c	/^static void hb_synthesis(AMRWBContext *ctx, int subframe, float *samples,$/;"	f	file:
hbits	libavcodec/vp3.c	/^    unsigned int hbits;$/;"	m	struct:Vp3DecodeContext	file:
hcoeff	libavcodec/snow.c	/^    int8_t hcoeff[HTAPS_MAX\/2];$/;"	m	struct:Plane	file:
hcscale_fast	libswscale/swscale_internal.h	/^    void (*hcscale_fast)(struct SwsContext *c,$/;"	m	struct:SwsContext
hcscale_fast	libswscale/x86/swscale_template.c	/^static void RENAME(hcscale_fast)(SwsContext *c, int16_t *dst1, int16_t *dst2,$/;"	f	file:
hd	libavformat/crypto.c	/^    URLContext *hd;$/;"	m	struct:__anon432	file:
hd	libavformat/gopher.c	/^    URLContext *hd;$/;"	m	struct:__anon488	file:
hd	libavformat/http.c	/^    URLContext *hd;$/;"	m	struct:__anon462	file:
hd_buf	libavformat/spdifenc.c	/^    uint8_t *hd_buf;                \/\/\/< allocated buffer to concatenate hd audio frames$/;"	m	struct:IEC61937Context	file:
hd_buf_count	libavformat/spdifenc.c	/^    int hd_buf_count;               \/\/\/< number of frames in the hd audio buffer$/;"	m	struct:IEC61937Context	file:
hd_buf_filled	libavformat/spdifenc.c	/^    int hd_buf_filled;              \/\/\/< amount of bytes in the hd audio buffer$/;"	m	struct:IEC61937Context	file:
hd_buf_size	libavformat/spdifenc.c	/^    int hd_buf_size;                \/\/\/< size of the hd audio buffer$/;"	m	struct:IEC61937Context	file:
hd_pos	libavcodec/dca_parser.c	/^    int hd_pos;$/;"	m	struct:DCAParseContext	file:
hdcd	libavcodec/dca.c	/^    int hdcd;                   \/\/\/< source material is mastered in HDCD$/;"	m	struct:__anon93	file:
hdl	libavdevice/sndio_common.h	/^    struct sio_hdl *hdl;$/;"	m	struct:__anon318	typeref:struct:__anon318::sio_hdl
hdr	libavformat/asfdec.c	/^    ASFMainHeader hdr;$/;"	m	struct:__anon332	file:
hdr_vlc	libavcodec/mpc7.c	/^static VLC scfi_vlc, dscf_vlc, hdr_vlc, quant_vlc[MPC7_QUANT_VLC_TABLES][2];$/;"	v	file:
head	libavcodec/crystalhd.c	/^    OpaqueList *head;$/;"	m	struct:__anon268	file:
head	libavfilter/libmpcodecs/pullup.h	/^    struct pullup_field *first, *last, *head;$/;"	m	struct:pullup_context	typeref:struct:pullup_context::
header	libavcodec/libspeexdec.c	/^    SpeexHeader *header;$/;"	m	struct:__anon228	file:
header	libavcodec/libspeexenc.c	/^    SpeexHeader header;$/;"	m	struct:__anon135	file:
header	libavcodec/mpegaudio_parser.c	/^    uint32_t header;$/;"	m	struct:MpegAudioParseContext	file:
header	libavcodec/shorten.c	/^    uint8_t header[OUT_BUFFER_SIZE];$/;"	m	struct:ShortenContext	file:
header	libavformat/ffm.h	/^    uint8_t header[FRAME_HEADER_SIZE+4];$/;"	m	struct:FFMContext
header	libavformat/mpegts.c	/^    uint8_t header[MAX_PES_HEADER_SIZE];$/;"	m	struct:PESContext	file:
header	libavformat/nut.h	/^    const uint8_t *header[128];$/;"	m	struct:__anon494
header	libavformat/oggdec.h	/^    int (*header)(AVFormatContext *, int);$/;"	m	struct:ogg_codec
header	libavformat/oggdec.h	/^    int header;$/;"	m	struct:ogg_stream
header	libavformat/oggenc.c	/^    uint8_t *header[3];$/;"	m	struct:__anon380	file:
header_bits	libavcodec/avcodec.h	/^    int header_bits;$/;"	m	struct:AVCodecContext
header_bits	libavcodec/mpegvideo.h	/^    int header_bits;$/;"	m	struct:MpegEncContext
header_bits	libavcodec/ratecontrol.h	/^    int header_bits;$/;"	m	struct:RateControlEntry
header_bytes_needed	libavcodec/dirac_parser.c	/^    int header_bytes_needed;$/;"	m	struct:DiracParseContext	file:
header_closed_partition_key	libavformat/mxfenc.c	/^static const uint8_t header_closed_partition_key[] = { 0x06,0x0E,0x2B,0x34,0x02,0x05,0x01,0x01,0x0D,0x01,0x02,0x01,0x01,0x02,0x04,0x00 }; \/\/ ClosedComplete$/;"	v	file:
header_count	libavcodec/mpegaudio_parser.c	/^    int header_count;$/;"	m	struct:MpegAudioParseContext	file:
header_count	libavformat/nut.h	/^    int header_count;$/;"	m	struct:__anon494
header_crc	libavcodec/dca.c	/^    int header_crc;             \/\/\/< header crc check bytes$/;"	m	struct:__anon93	file:
header_idx	libavformat/nut.h	/^    uint8_t  header_idx;$/;"	m	struct:__anon491
header_info	libavformat/spdifenc.c	/^    int (*header_info) (AVFormatContext *s, AVPacket *pkt);$/;"	m	struct:IEC61937Context	file:
header_len	libavformat/nut.h	/^    uint8_t header_len[128];$/;"	m	struct:__anon494
header_len	libavformat/oggenc.c	/^    int header_len[3];$/;"	m	struct:__anon380	file:
header_metadata_key	libavformat/mxfenc.c	/^static const uint8_t header_metadata_key[]  = { 0x06,0x0E,0x2B,0x34,0x02,0x53,0x01,0x01,0x0D,0x01,0x01,0x01,0x01 };$/;"	v	file:
header_open_partition_key	libavformat/mxfenc.c	/^static const uint8_t header_open_partition_key[]   = { 0x06,0x0E,0x2B,0x34,0x02,0x05,0x01,0x01,0x0D,0x01,0x02,0x01,0x01,0x02,0x01,0x00 }; \/\/ OpenIncomplete$/;"	v	file:
header_packet_id	libavformat/mmst.c	/^    unsigned int header_packet_id;       \/\/\/< default is 2.$/;"	m	struct:__anon341	file:
header_parsed	libavcodec/adx.h	/^    int header_parsed;$/;"	m	struct:__anon159
header_parsed	libavformat/mms.h	/^    int header_parsed;                   \/\/\/< The header has been received and parsed.$/;"	m	struct:__anon455
header_pos	libavformat/mpc8.c	/^    int64_t header_pos;$/;"	m	struct:__anon398	file:
header_size	libavcodec/aac_ac3_parser.h	/^    int header_size;$/;"	m	struct:AACAC3ParseContext
header_size	libavcodec/shorten.c	/^    int header_size;$/;"	m	struct:ShortenContext	file:
header_size	libavcodec/truemotion1.c	/^    uint8_t header_size;$/;"	m	struct:frame_header	file:
header_size	libavformat/soxenc.c	/^    int64_t header_size;$/;"	m	struct:__anon452	file:
header_state	libavcodec/snow.c	/^    uint8_t header_state[32];$/;"	m	struct:SnowContext	file:
header_state	libavformat/mpeg.c	/^    int32_t header_state;$/;"	m	struct:MpegDemuxContext	file:
header_type	libavcodec/truemotion1.c	/^    uint8_t header_type;$/;"	m	struct:frame_header	file:
header_written	libavformat/mxfenc.c	/^    int header_written;$/;"	m	struct:MXFContext	file:
headerlength	libavformat/ape.c	/^    uint32_t headerlength;$/;"	m	struct:__anon335	file:
headers	libavcodec/flac_parser.c	/^    FLACHeaderMarker *headers;     \/**< linked-list that starts at the first$/;"	m	struct:FLACParseContext	file:
headers	libavformat/http.c	/^    unsigned char headers[BUFFER_SIZE];$/;"	m	struct:__anon462	file:
headers	libavformat/oggdec.h	/^    int headers;$/;"	m	struct:ogg
headroom	libavcodec/nellymoser.c	/^static int headroom(int *la)$/;"	f	file:
heap_sift	libavcodec/huffyuv.c	/^static void heap_sift(HeapElem *h, int root, int size)$/;"	f	file:
height	ffplay.c	/^    int width, height, xleft, ytop;$/;"	m	struct:VideoState	file:
height	ffplay.c	/^    int width, height; \/* source height & width *\/$/;"	m	struct:VideoPicture	file:
height	libavcodec/avcodec.h	/^    int height;$/;"	m	struct:AVPanScan
height	libavcodec/avcodec.h	/^    int width, height;$/;"	m	struct:AVCodecContext
height	libavcodec/cinepak.c	/^    int width, height;$/;"	m	struct:CinepakContext	file:
height	libavcodec/cscd.c	/^    int linelen, height, bpp;$/;"	m	struct:__anon232	file:
height	libavcodec/cyuv.c	/^    int width, height;$/;"	m	struct:CyuvDecodeContext	file:
height	libavcodec/dirac.h	/^    unsigned height;$/;"	m	struct:__anon227
height	libavcodec/dnxhddata.h	/^    unsigned int width, height;$/;"	m	struct:__anon281
height	libavcodec/dnxhddec.c	/^    unsigned int width, height;$/;"	m	struct:__anon154	file:
height	libavcodec/dvbsubdec.c	/^    int height;$/;"	m	struct:DVBSubDisplayDefinition	file:
height	libavcodec/dvbsubdec.c	/^    int height;$/;"	m	struct:DVBSubRegion	file:
height	libavcodec/dvdata.h	/^    int              height;                \/* picture height in pixels *\/$/;"	m	struct:DVprofile
height	libavcodec/eacmv.c	/^    int width, height;$/;"	m	struct:CmvContext	file:
height	libavcodec/eatgq.c	/^    int width,height;$/;"	m	struct:TgqContext	file:
height	libavcodec/eatgv.c	/^    int width,height;$/;"	m	struct:TgvContext	file:
height	libavcodec/ffv1.c	/^    int width, height;$/;"	m	struct:FFV1Context	file:
height	libavcodec/flashsv2enc.c	/^    uint8_t col, row, width, height;$/;"	m	struct:Block	file:
height	libavcodec/huffyuv.c	/^    int width, height;$/;"	m	struct:HYuvContext	file:
height	libavcodec/indeo3.c	/^    int height;$/;"	m	struct:ustr	file:
height	libavcodec/indeo3.c	/^    int width, height;$/;"	m	struct:Indeo3DecodeContext	file:
height	libavcodec/ivi_common.h	/^    int             height;$/;"	m	struct:__anon107
height	libavcodec/ivi_common.h	/^    int         height;$/;"	m	struct:__anon106
height	libavcodec/ivi_common.h	/^    uint16_t    height;$/;"	m	struct:__anon108
height	libavcodec/j2kdec.c	/^    int width, height; \/\/\/< image width and height$/;"	m	struct:__anon98	file:
height	libavcodec/j2kenc.c	/^    int width, height; \/\/\/< image width and height$/;"	m	struct:__anon63	file:
height	libavcodec/libdirac_libschro.h	/^    uint16_t height;$/;"	m	struct:__anon166
height	libavcodec/mjpegdec.h	/^    int width, height;$/;"	m	struct:MJpegDecodeContext
height	libavcodec/motion_est.c	/^    int height;$/;"	m	struct:Minima	file:
height	libavcodec/mpegvideo.h	/^    int width, height;\/\/\/< picture size. must be a multiple of 16$/;"	m	struct:MpegEncContext
height	libavcodec/nuv.c	/^    int width, height;$/;"	m	struct:__anon100	file:
height	libavcodec/parser.h	/^    int width, height;$/;"	m	struct:ParseContext1
height	libavcodec/pictordec.c	/^    int width, height;$/;"	m	struct:PicContext	file:
height	libavcodec/png.h	/^    int width, height;$/;"	m	struct:PNGDecContext
height	libavcodec/roqvideo.h	/^    int width, height;$/;"	m	struct:RoqContext
height	libavcodec/rv34.h	/^    int height;            \/\/\/< coded height$/;"	m	struct:SliceInfo
height	libavcodec/sgidec.c	/^    unsigned int height;$/;"	m	struct:SgiState	file:
height	libavcodec/snow.c	/^    int height;$/;"	m	struct:Plane	file:
height	libavcodec/snow.c	/^    int height;$/;"	m	struct:SubBand	file:
height	libavcodec/svq1.h	/^    uint16_t height;$/;"	m	struct:svq1_frame_size
height	libavcodec/targa.c	/^    int width, height;$/;"	m	struct:TargaContext	file:
height	libavcodec/tiff.c	/^    int width, height;$/;"	m	struct:TiffContext	file:
height	libavcodec/tiffenc.c	/^    int height;                         \/\/\/< picture height$/;"	m	struct:TiffEncoderContext	file:
height	libavcodec/truemotion1.c	/^    uint16_t height;$/;"	m	struct:frame_header	file:
height	libavcodec/tscc.c	/^    int height;$/;"	m	struct:TsccContext	file:
height	libavcodec/ulti.c	/^    int width, height, blocks;$/;"	m	struct:UltimotionDecodeContext	file:
height	libavcodec/utils.c	/^    int width, height;$/;"	m	struct:InternalBuffer	file:
height	libavcodec/vmnc.c	/^    int width, height;$/;"	m	struct:VmncContext	file:
height	libavcodec/vp3.c	/^    int width, height;$/;"	m	struct:Vp3DecodeContext	file:
height	libavcodec/vqavideo.c	/^    int height;   \/* height of a frame *\/$/;"	m	struct:VqaContext	file:
height	libavcodec/zmbv.c	/^    int width, height;$/;"	m	struct:ZmbvContext	file:
height	libavdevice/bktr.c	/^    int width, height;$/;"	m	struct:__anon312	file:
height	libavdevice/v4l2.c	/^    int width, height;$/;"	m	struct:video_data	file:
height	libavdevice/x11grab.c	/^    int height;              \/**< Height of the grab frame *\/$/;"	m	struct:x11_grab	file:
height	libavfilter/libmpcodecs/libvo/video_out.h	/^  int left, right, top, bottom, width, height;$/;"	m	struct:vo_rect
height	libavfilter/libmpcodecs/mp_image.h	/^    int width,height;  \/\/ stored dimensions$/;"	m	struct:mp_image
height	libavfilter/libmpcodecs/vf_fil.c	/^    int height;$/;"	m	struct:vf_priv_s	file:
height	libavfilter/libmpcodecs/vf_remove_logo.c	/^  unsigned int height;$/;"	m	struct:__anon34	file:
height	libavformat/4xm.c	/^    int height;$/;"	m	struct:FourxmDemuxContext	file:
height	libavformat/avformat.h	/^    attribute_deprecated int height;$/;"	m	struct:AVFormatParameters
height	libavformat/avs.c	/^    int height;$/;"	m	struct:avs_format	file:
height	libavformat/electronicarts.c	/^    int width, height;$/;"	m	struct:EaDemuxContext	file:
height	libavformat/gxfenc.c	/^    int height, index;$/;"	m	struct:__anon433	file:
height	libavformat/idroqdec.c	/^    int height;$/;"	m	struct:RoqDemuxContext	file:
height	libavformat/isom.h	/^    int height;           \/\/\/< tkhd height$/;"	m	struct:MOVStreamContext
height	libavformat/movenc.h	/^    int         height; \/\/\/< active picture (w\/o VBI) height for D-10\/IMX$/;"	m	struct:MOVIndex
height	libavformat/mxfdec.c	/^    int height;$/;"	m	struct:__anon443	file:
height	libavformat/smacker.c	/^    uint32_t width, height;$/;"	m	struct:SmackerContext	file:
height	libavformat/wc3movie.c	/^    int height;$/;"	m	struct:Wc3DemuxContext	file:
height	libavutil/parseutils.c	/^    int width, height;$/;"	m	struct:__anon292	file:
height	tests/rotozoom.c	/^int width, height, wrap;$/;"	v
height	tests/videogen.c	/^int width, height, wrap;$/;"	v
heigth	libavdevice/fbdev.c	/^    int width, heigth;       \/\/\/< assumed frame resolution$/;"	m	struct:__anon314	file:
help	cmdutils.h	/^    const char *help;$/;"	m	struct:__anon290
help	ffmpeg/cmdutils.h	/^    const char *help;$/;"	m	struct:__anon288
help	libavcodec/apedec.c	/^    uint32_t help;          \/\/\/< bytes_to_follow resp. intermediate value$/;"	m	struct:APERangecoder	file:
help	libavcodec/dct-test.c	/^static void help(void)$/;"	f	file:
help	libavcodec/fft-test.c	/^static void help(void)$/;"	f	file:
help	libavcodec/motion-test.c	/^static void help(void)$/;"	f	file:
help	libavutil/opt.h	/^    const char *help;$/;"	m	struct:AVOption
help_text	libavfilter/libmpcodecs/help_mp.h	/^static const char help_text[]=$/;"	v
hev	libavcodec/vp8dsp.c	/^static av_always_inline int hev(uint8_t *p, int stride, int thresh)$/;"	f	file:
hex_dump_debug	libavformat/internal.h	30;"	d
hex_dump_debug	libavformat/internal.h	32;"	d
hex_dump_internal	libavformat/utils.c	/^static void hex_dump_internal(void *avcl, FILE *f, int level, uint8_t *buf, int size)$/;"	f	file:
hex_search	libavcodec/motion_est_template.c	/^static int hex_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
hexchar2int	libavutil/opt.c	/^static int hexchar2int(char c) {$/;"	f	file:
hf_noise16_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static int hf_noise16_mmx(uint8_t * pix1, int line_size, int h) {$/;"	f	file:
hf_noise8_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static int hf_noise8_mmx(uint8_t * pix1, int line_size, int h) {$/;"	f	file:
hgain_vlc	libavcodec/wma.h	/^    VLC hgain_vlc;$/;"	m	struct:WMACodecContext
hi	libavfilter/libmpcodecs/vf_decimate.c	/^    int hi, lo;$/;"	m	struct:vf_priv_s	file:
hide_state	libavcodec/dvbsub.c	/^    int hide_state;$/;"	m	struct:DVBSubtitleContext	file:
hiegrep	tools/patcheck	/^hiegrep(){$/;"	f
hiegrep2	tools/patcheck	/^hiegrep2(){$/;"	f
hierachy_type	libavcodec/mpegvideo.h	/^    int hierachy_type;$/;"	m	struct:MpegEncContext
high	libavcodec/vorbis.h	/^    uint16_t high;$/;"	m	struct:__anon61
high	libavcodec/vp56.h	/^    int high;$/;"	m	struct:__anon220
high	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct metrics tiny, low, high, bigger, twox, max;$/;"	m	struct:frame_stats	typeref:struct:frame_stats::	file:
high_band_coded	libavcodec/wma.h	/^    int high_band_coded[MAX_CHANNELS][HIGH_BAND_MAX_SIZE];$/;"	m	struct:WMACodecContext
high_band_start	libavcodec/wma.h	/^    int high_band_start[BLOCK_NB_SIZES];    \/\/\/< index of first coef in high band$/;"	m	struct:WMACodecContext
high_band_values	libavcodec/wma.h	/^    int high_band_values[MAX_CHANNELS][HIGH_BAND_MAX_SIZE];$/;"	m	struct:WMACodecContext
high_freq_vq	libavcodec/dca.c	/^    int high_freq_vq[DCA_PRIM_CHANNELS_MAX][DCA_SUBBANDS];       \/\/\/< VQ encoded high frequency subbands$/;"	m	struct:__anon93	file:
high_freq_vq	libavcodec/dcadata.h	/^static const int8_t high_freq_vq[1024][32] =$/;"	v
high_inv_quant	libavcodec/g722.c	/^static const int16_t high_inv_quant[4] = { -926, -202, 926, 202 };$/;"	v	file:
high_log_factor_step	libavcodec/g722.c	/^static const int16_t high_log_factor_step[2] = { 798, -214 };$/;"	v	file:
high_pass_mem	libavcodec/amrnbdec.c	/^    float                  high_pass_mem[2]; \/\/\/< previous intermediate values in the high-pass filter$/;"	m	struct:AMRContext	file:
highpass_filt_mem	libavcodec/sipr.h	/^    float highpass_filt_mem[2];$/;"	m	struct:__anon235
highpass_gain	libavcodec/amrnbdata.h	/^static const float highpass_gain     = 0.939819335;$/;"	v
highpass_poles	libavcodec/amrnbdata.h	/^static const float highpass_poles[2] = { -1.933105469, 0.935913085 };$/;"	v
highpass_zeros	libavcodec/amrnbdata.h	/^static const float highpass_zeros[2] = { -2.0, 1.0 };$/;"	v
hilbert_offset	libavcodec/vp3.c	/^static const uint8_t hilbert_offset[16][2] = {$/;"	v	file:
hint_track	libavformat/movenc.h	/^    int         hint_track;   \/\/\/< the track that hints this track, -1 if no hint track is set$/;"	m	struct:MOVIndex
hist_index	libavcodec/dca.c	/^    int hist_index[DCA_PRIM_CHANNELS_MAX];$/;"	m	struct:__anon93	file:
history	libavcodec/dcaenc.c	/^    int32_t history[MAX_CHANNELS][512]; \/* This is a circular buffer *\/$/;"	m	struct:__anon231	file:
history	libavfilter/libmpcodecs/vf_divtc.c	/^   int *history;$/;"	m	struct:vf_priv_s	file:
history_mult	libavcodec/alacenc.c	/^    int history_mult;$/;"	m	struct:RiceContext	file:
history_nsamples	libavcodec/wmavoice.c	/^    int history_nsamples;         \/\/\/< number of samples in history for signal$/;"	m	struct:__anon157	file:
historybuffer	libavcodec/apedec.c	/^    int16_t *historybuffer; \/\/\/< filter memory$/;"	m	struct:APEFilter	file:
historybuffer	libavcodec/apedec.c	/^    int32_t historybuffer[HISTORY_SIZE + PREDICTOR_SIZE];$/;"	m	struct:APEPredictor	file:
hl_decode_mb_444_complex	libavcodec/h264.c	/^static void av_noinline hl_decode_mb_444_complex(H264Context *h){$/;"	f	file:
hl_decode_mb_444_internal	libavcodec/h264.c	/^static av_always_inline void hl_decode_mb_444_internal(H264Context *h, int simple, int pixel_shift){$/;"	f	file:
hl_decode_mb_444_simple	libavcodec/h264.c	/^static void av_noinline hl_decode_mb_444_simple(H264Context *h){$/;"	f	file:
hl_decode_mb_complex	libavcodec/h264.c	/^static void av_noinline hl_decode_mb_complex(H264Context *h){$/;"	f	file:
hl_decode_mb_idct_luma	libavcodec/h264.c	/^static av_always_inline void hl_decode_mb_idct_luma(H264Context *h, int mb_type, int is_h264, int simple, int transform_bypass,$/;"	f	file:
hl_decode_mb_internal	libavcodec/h264.c	/^static av_always_inline void hl_decode_mb_internal(H264Context *h, int simple, int pixel_shift){$/;"	f	file:
hl_decode_mb_predict_luma	libavcodec/h264.c	/^static av_always_inline void hl_decode_mb_predict_luma(H264Context *h, int mb_type, int is_h264, int simple, int transform_bypass,$/;"	f	file:
hl_decode_mb_simple	libavcodec/h264.c	2117;"	d	file:
hl_motion	libavcodec/h264.c	/^static av_always_inline void hl_motion(H264Context *h, uint8_t *dest_y, uint8_t *dest_cb, uint8_t *dest_cr,$/;"	f	file:
hl_motion_fn	libavcodec/h264.c	812;"	d	file:
hnode	libavcodec/idcinvideo.c	/^} hnode;$/;"	t	typeref:struct:__anon65	file:
horizClassify_C	libpostproc/postprocess.c	/^static inline int horizClassify_C(uint8_t src[], int stride, PPContext *c)$/;"	f	file:
horizX1Filter	libpostproc/postprocess.c	/^static inline void horizX1Filter(uint8_t *src, int stride, int QP)$/;"	f	file:
horizontal_compose53i	libavcodec/dwt.c	/^static void horizontal_compose53i(IDWTELEM *b, int width){$/;"	f	file:
horizontal_compose97i	libavcodec/dwt.h	/^    void (*horizontal_compose97i)(IDWTELEM *b, int width);$/;"	m	struct:DWTContext
horizontal_decompose53i	libavcodec/dwt.c	/^static void horizontal_decompose53i(DWTELEM *b, int width){$/;"	f	file:
horizontal_decompose97i	libavcodec/dwt.c	/^static void horizontal_decompose97i(DWTELEM *b, int width){$/;"	f	file:
host	libavformat/mmst.c	/^    char host[128];                      \/\/\/< Host of the resources.$/;"	m	struct:__anon341	file:
hostname	libavformat/rtpdec.h	/^    char hostname[256];$/;"	m	struct:RTPDemuxContext
hpc	libavcodec/h264.h	/^    H264PredContext hpc;$/;"	m	struct:H264Context
hpc	libavcodec/vp8.h	/^    H264PredContext hpc;$/;"	m	struct:__anon182
hpel_avg	libavcodec/mpegvideo.h	/^    op_pixels_func (*hpel_avg)[4];$/;"	m	struct:MotionEstContext
hpel_motion	libavcodec/mpegvideo_common.h	/^static inline int hpel_motion(MpegEncContext *s,$/;"	f
hpel_motion_lowres	libavcodec/mpegvideo.c	/^static inline int hpel_motion_lowres(MpegEncContext *s,$/;"	f	file:
hpel_motion_search	libavcodec/motion_est_template.c	/^static int hpel_motion_search(MpegEncContext * s,$/;"	f	file:
hpel_put	libavcodec/mpegvideo.h	/^    op_pixels_func (*hpel_put)[4];$/;"	m	struct:MotionEstContext
hpf_31_gain	libavcodec/amrwbdata.h	/^static const float hpf_31_gain      = 0.989501953;$/;"	v
hpf_31_mem	libavcodec/amrwbdec.c	/^    float          hpf_31_mem[2], hpf_400_mem[2]; \/\/\/< previous values in the high pass filters$/;"	m	struct:__anon64	file:
hpf_31_poles	libavcodec/amrwbdata.h	/^static const float hpf_31_poles[2]  = { -1.978881836, 0.979125977 };$/;"	v
hpf_400_gain	libavcodec/amrwbdata.h	/^static const float hpf_400_gain     = 0.893554687;$/;"	v
hpf_400_mem	libavcodec/amrwbdec.c	/^    float          hpf_31_mem[2], hpf_400_mem[2]; \/\/\/< previous values in the high pass filters$/;"	m	struct:__anon64	file:
hpf_400_poles	libavcodec/amrwbdata.h	/^static const float hpf_400_poles[2] = { -1.787109375, 0.864257812 };$/;"	v
hpf_zeros	libavcodec/amrwbdata.h	/^static const float hpf_zeros[2]     = { -2.0, 1.0 };$/;"	v
hpt	libavcodec/motionpixels.c	/^    YuvPixel *vpt, *hpt;$/;"	m	struct:MotionPixelsContext	file:
hrd_buffer	libavcodec/vc1.h	/^    uint16_t *hrd_rate, *hrd_buffer;$/;"	m	struct:VC1Context
hrd_fullness	libavcodec/vc1.h	/^    uint8_t *hrd_fullness;$/;"	m	struct:VC1Context
hrd_num_leaky_buckets	libavcodec/vc1.h	/^    int hrd_num_leaky_buckets;$/;"	m	struct:VC1Context
hrd_param_flag	libavcodec/vc1.h	/^    int hrd_param_flag;   \/\/\/< Presence of Hypothetical Reference$/;"	m	struct:VC1Context
hrd_rate	libavcodec/vc1.h	/^    uint16_t *hrd_rate, *hrd_buffer;$/;"	m	struct:VC1Context
hscroll	libavcodec/ansi.c	/^static void hscroll(AVCodecContext *avctx)$/;"	f	file:
hscroll	libavcodec/cdgraphics.c	/^    int hscroll;$/;"	m	struct:CDGraphicsContext	file:
hshift	libavcodec/wmv2.h	/^    int hshift;$/;"	m	struct:Wmv2Context
hsub	libavfilter/vf_crop.c	/^    int hsub, vsub;     \/\/\/< chroma subsampling$/;"	m	struct:__anon5	file:
hsub	libavfilter/vf_drawbox.c	/^    int vsub, hsub;   \/\/< chroma subsampling$/;"	m	struct:__anon20	file:
hsub	libavfilter/vf_drawtext.c	/^    int hsub, vsub;                 \/\/\/< chroma subsampling values$/;"	m	struct:__anon24	file:
hsub	libavfilter/vf_fade.c	/^    int hsub, vsub, bpp;$/;"	m	struct:__anon11	file:
hsub	libavfilter/vf_hflip.c	/^    int hsub, vsub;     \/\/\/< chroma subsampling$/;"	m	struct:__anon43	file:
hsub	libavfilter/vf_hqdn3d.c	/^    int hsub, vsub;$/;"	m	struct:__anon8	file:
hsub	libavfilter/vf_lut.c	/^    int hsub, vsub;$/;"	m	struct:__anon23	file:
hsub	libavfilter/vf_overlay.c	/^    int hsub, vsub;             \/\/\/< chroma subsampling values$/;"	m	struct:__anon7	file:
hsub	libavfilter/vf_pad.c	/^    int hsub, vsub;         \/\/\/< chroma subsampling values$/;"	m	struct:__anon52	file:
hsub	libavfilter/vf_scale.c	/^    int hsub, vsub;             \/\/\/< chroma subsampling$/;"	m	struct:__anon18	file:
hsub	libavfilter/vf_transpose.c	/^    int hsub, vsub;$/;"	m	struct:__anon45	file:
hsub	libavfilter/vsrc_color.c	/^    int hsub, vsub;         \/\/\/< chroma subsampling values$/;"	m	struct:__anon27	file:
htaps	libavcodec/snow.c	/^    int htaps;$/;"	m	struct:Plane	file:
hti	libavcodec/vp3.c	/^    int hti;$/;"	m	struct:Vp3DecodeContext	file:
html_color_parse	libavcodec/srtdec.c	/^static int html_color_parse(AVCodecContext *avctx, const char *str)$/;"	f	file:
http_av_log	ffserver.c	/^static void http_av_log(void *ptr, int level, const char *fmt, va_list vargs)$/;"	f	file:
http_close	libavformat/http.c	/^static int http_close(URLContext *h)$/;"	f	file:
http_code	libavformat/http.c	/^    int http_code;$/;"	m	struct:__anon462	file:
http_connect	libavformat/http.c	/^static int http_connect(URLContext *h, const char *path, const char *hoststr,$/;"	f	file:
http_error	ffserver.c	/^    int http_error;$/;"	m	struct:HTTPContext	file:
http_get_file_handle	libavformat/http.c	/^http_get_file_handle(URLContext *h)$/;"	f	file:
http_get_line	libavformat/http.c	/^static int http_get_line(HTTPContext *s, char *line, int line_size)$/;"	f	file:
http_getc	libavformat/http.c	/^static int http_getc(HTTPContext *s)$/;"	f	file:
http_log	ffserver.c	/^static void http_log(const char *fmt, ...)$/;"	f	file:
http_open	libavformat/http.c	/^static int http_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
http_open_cnx	libavformat/http.c	/^static int http_open_cnx(URLContext *h)$/;"	f	file:
http_parse_request	ffserver.c	/^static int http_parse_request(HTTPContext *c)$/;"	f	file:
http_prepare_data	ffserver.c	/^static int http_prepare_data(HTTPContext *c)$/;"	f	file:
http_read	libavformat/http.c	/^static int http_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
http_receive_data	ffserver.c	/^static int http_receive_data(HTTPContext *c)$/;"	f	file:
http_seek	libavformat/http.c	/^static int64_t http_seek(URLContext *h, int64_t off, int whence)$/;"	f	file:
http_send_data	ffserver.c	/^static int http_send_data(HTTPContext *c)$/;"	f	file:
http_send_too_busy_reply	ffserver.c	/^static void http_send_too_busy_reply(int fd)$/;"	f	file:
http_server	ffserver.c	/^static int http_server(void)$/;"	f	file:
http_start_receive_data	ffserver.c	/^static int http_start_receive_data(HTTPContext *c)$/;"	f	file:
http_state	ffserver.c	/^static const char *http_state[] = {$/;"	v	file:
http_vlog	ffserver.c	/^static void http_vlog(const char *fmt, va_list vargs)$/;"	f	file:
http_write	libavformat/http.c	/^static int http_write(URLContext *h, const uint8_t *buf, int size)$/;"	f	file:
httpcontext_class	libavformat/http.c	/^static const AVClass httpcontext_class = {$/;"	v	file:
hue	libavfilter/libmpcodecs/vf_hue.c	/^        float hue;$/;"	m	struct:vf_priv_s	file:
huff_bits	libavcodec/atrac3data.h	/^static const uint8_t* const huff_bits[7] = {$/;"	v
huff_build_tree	libavcodec/idcinvideo.c	/^static av_cold void huff_build_tree(IdcinContext *s, int prev) {$/;"	f	file:
huff_cmp	libavcodec/fraps.c	/^static int huff_cmp(const void *va, const void *vb){$/;"	f	file:
huff_code_ac_chrominance	libavcodec/mjpegenc.h	/^    uint16_t huff_code_ac_chrominance[256];$/;"	m	struct:MJpegContext
huff_code_ac_luminance	libavcodec/mjpegenc.h	/^    uint16_t huff_code_ac_luminance[256];$/;"	m	struct:MJpegContext
huff_code_dc_chrominance	libavcodec/mjpegenc.h	/^    uint16_t huff_code_dc_chrominance[12];$/;"	m	struct:MJpegContext
huff_code_dc_luminance	libavcodec/mjpegenc.h	/^    uint16_t huff_code_dc_luminance[12];$/;"	m	struct:MJpegContext
huff_code_size	libavcodec/vp3.c	/^    int huff_code_size;$/;"	m	struct:Vp3DecodeContext	file:
huff_codes	libavcodec/atrac3data.h	/^static const uint8_t* const huff_codes[7] = {$/;"	v
huff_icc_df	libavcodec/aacps.c	/^    huff_icc_df,$/;"	e	enum:__anon87	file:
huff_icc_df_bits	libavcodec/aacpsdata.c	/^static const uint8_t huff_icc_df_bits[] = {$/;"	v	file:
huff_icc_df_codes	libavcodec/aacpsdata.c	/^static const uint16_t huff_icc_df_codes[] = {$/;"	v	file:
huff_icc_dt	libavcodec/aacps.c	/^    huff_icc_dt,$/;"	e	enum:__anon87	file:
huff_icc_dt_bits	libavcodec/aacpsdata.c	/^static const uint8_t huff_icc_dt_bits[] = {$/;"	v	file:
huff_icc_dt_codes	libavcodec/aacpsdata.c	/^static const uint16_t huff_icc_dt_codes[] = {$/;"	v	file:
huff_iid	libavcodec/aacps.c	/^static const int huff_iid[] = {$/;"	v	file:
huff_iid_df0	libavcodec/aacps.c	/^    huff_iid_df0,$/;"	e	enum:__anon87	file:
huff_iid_df0_bits	libavcodec/aacpsdata.c	/^static const uint8_t huff_iid_df0_bits[] = {$/;"	v	file:
huff_iid_df0_codes	libavcodec/aacpsdata.c	/^static const uint32_t huff_iid_df0_codes[] = {$/;"	v	file:
huff_iid_df1	libavcodec/aacps.c	/^    huff_iid_df1,$/;"	e	enum:__anon87	file:
huff_iid_df1_bits	libavcodec/aacpsdata.c	/^static const uint8_t huff_iid_df1_bits[] = {$/;"	v	file:
huff_iid_df1_codes	libavcodec/aacpsdata.c	/^static const uint32_t huff_iid_df1_codes[] = {$/;"	v	file:
huff_iid_dt0	libavcodec/aacps.c	/^    huff_iid_dt0,$/;"	e	enum:__anon87	file:
huff_iid_dt0_bits	libavcodec/aacpsdata.c	/^static const uint8_t huff_iid_dt0_bits[] = {$/;"	v	file:
huff_iid_dt0_codes	libavcodec/aacpsdata.c	/^static const uint32_t huff_iid_dt0_codes[] = {$/;"	v	file:
huff_iid_dt1	libavcodec/aacps.c	/^    huff_iid_dt1,$/;"	e	enum:__anon87	file:
huff_iid_dt1_bits	libavcodec/aacpsdata.c	/^static const uint8_t huff_iid_dt1_bits[] = {$/;"	v	file:
huff_iid_dt1_codes	libavcodec/aacpsdata.c	/^static const uint16_t huff_iid_dt1_codes[] = {$/;"	v	file:
huff_ipd_df	libavcodec/aacps.c	/^    huff_ipd_df,$/;"	e	enum:__anon87	file:
huff_ipd_df_bits	libavcodec/aacpsdata.c	/^static const uint8_t huff_ipd_df_bits[] = {$/;"	v	file:
huff_ipd_df_codes	libavcodec/aacpsdata.c	/^static const uint8_t huff_ipd_df_codes[] = {$/;"	v	file:
huff_ipd_dt	libavcodec/aacps.c	/^    huff_ipd_dt,$/;"	e	enum:__anon87	file:
huff_ipd_dt_bits	libavcodec/aacpsdata.c	/^static const uint8_t huff_ipd_dt_bits[] = {$/;"	v	file:
huff_ipd_dt_codes	libavcodec/aacpsdata.c	/^static const uint8_t huff_ipd_dt_codes[] = {$/;"	v	file:
huff_lsbs	libavcodec/mlp.h	/^    uint8_t     huff_lsbs;        \/\/\/< Size of residual suffix not encoded using VLC.$/;"	m	struct:__anon78
huff_nodes	libavcodec/idcinvideo.c	/^    hnode huff_nodes[256][HUF_TOKENS*2];$/;"	m	struct:IdcinContext	file:
huff_offset	libavcodec/aacpsdata.c	/^static const int8_t huff_offset[] = {$/;"	v	file:
huff_offset	libavcodec/mlp.h	/^    int16_t     huff_offset;      \/\/\/< Offset to apply to residual values.$/;"	m	struct:__anon78
huff_opd_df	libavcodec/aacps.c	/^    huff_opd_df,$/;"	e	enum:__anon87	file:
huff_opd_df_bits	libavcodec/aacpsdata.c	/^static const uint8_t huff_opd_df_bits[] = {$/;"	v	file:
huff_opd_df_codes	libavcodec/aacpsdata.c	/^static const uint8_t huff_opd_df_codes[] = {$/;"	v	file:
huff_opd_dt	libavcodec/aacps.c	/^    huff_opd_dt,$/;"	e	enum:__anon87	file:
huff_opd_dt_bits	libavcodec/aacpsdata.c	/^static const uint8_t huff_opd_dt_bits[] = {$/;"	v	file:
huff_opd_dt_codes	libavcodec/aacpsdata.c	/^static const uint8_t huff_opd_dt_codes[] = {$/;"	v	file:
huff_quad_vlc	libavcodec/mpegaudiodec.c	/^static VLC huff_quad_vlc[2];$/;"	v	file:
huff_quad_vlc_tables	libavcodec/mpegaudiodec.c	/^static VLC_TYPE huff_quad_vlc_tables[128+16][2];$/;"	v	file:
huff_quad_vlc_tables_sizes	libavcodec/mpegaudiodec.c	/^static const int huff_quad_vlc_tables_sizes[2] = {$/;"	v	file:
huff_size_ac_chrominance	libavcodec/mjpegenc.h	/^    uint8_t huff_size_ac_chrominance[256];$/;"	m	struct:MJpegContext
huff_size_ac_luminance	libavcodec/mjpegenc.h	/^    uint8_t huff_size_ac_luminance[256];$/;"	m	struct:MJpegContext
huff_size_dc_chrominance	libavcodec/mjpegenc.h	/^    uint8_t huff_size_dc_chrominance[12];$/;"	m	struct:MJpegContext
huff_size_dc_luminance	libavcodec/mjpegenc.h	/^    uint8_t huff_size_dc_luminance[12]; \/\/FIXME use array [3] instead of lumi \/ chrom, for easier addressing$/;"	m	struct:MJpegContext
huff_smallest_node	libavcodec/idcinvideo.c	/^static int huff_smallest_node(hnode *hnodes, int num_hnodes) {$/;"	f	file:
huff_tab_sizes	libavcodec/atrac3data.h	/^static const uint8_t huff_tab_sizes[7] = {$/;"	v
huff_vlc	libavcodec/mlpdec.c	/^static VLC huff_vlc[3];$/;"	v	file:
huff_vlc	libavcodec/mpegaudiodec.c	/^static VLC huff_vlc[16];$/;"	v	file:
huff_vlc_tables	libavcodec/mpegaudiodec.c	/^static VLC_TYPE huff_vlc_tables[$/;"	v	file:
huff_vlc_tables_sizes	libavcodec/mpegaudiodec.c	/^static const int huff_vlc_tables_sizes[16] = {$/;"	v	file:
huffbits	libavcodec/mimic.c	/^static const uint8_t huffbits[] = {$/;"	v	file:
huffbits	libavcodec/wma.h	/^    const uint8_t *huffbits;    \/\/\/< VLC bit size$/;"	m	struct:CoefVLCTable
huffbits1	libavcodec/atrac3data.h	/^static const uint8_t huffbits1[9] = {$/;"	v
huffbits2	libavcodec/atrac3data.h	/^static const uint8_t huffbits2[5] = {$/;"	v
huffbits3	libavcodec/atrac3data.h	/^static const uint8_t huffbits3[7] = {$/;"	v
huffbits4	libavcodec/atrac3data.h	/^static const uint8_t huffbits4[9] = {$/;"	v
huffbits5	libavcodec/atrac3data.h	/^static const uint8_t huffbits5[15] = {$/;"	v
huffbits6	libavcodec/atrac3data.h	/^static const uint8_t huffbits6[31] = {$/;"	v
huffbits7	libavcodec/atrac3data.h	/^static const uint8_t huffbits7[63] = {$/;"	v
huffcode1	libavcodec/atrac3data.h	/^static const uint8_t huffcode1[9] = {$/;"	v
huffcode2	libavcodec/atrac3data.h	/^static const uint8_t huffcode2[5] = {$/;"	v
huffcode3	libavcodec/atrac3data.h	/^static const uint8_t huffcode3[7] = {$/;"	v
huffcode4	libavcodec/atrac3data.h	/^static const uint8_t huffcode4[9] = {$/;"	v
huffcode5	libavcodec/atrac3data.h	/^static const uint8_t huffcode5[15] = {$/;"	v
huffcode6	libavcodec/atrac3data.h	/^static const uint8_t huffcode6[31] = {$/;"	v
huffcode7	libavcodec/atrac3data.h	/^static const uint8_t huffcode7[63] = {$/;"	v
huffcodes	libavcodec/mimic.c	/^static const uint32_t huffcodes[] = {$/;"	v	file:
huffcodes	libavcodec/wma.h	/^    const uint32_t *huffcodes;  \/\/\/< VLC bit values$/;"	m	struct:CoefVLCTable
huffman_decode	libavcodec/mpegaudiodec.c	/^static int huffman_decode(MPADecodeContext *s, GranuleDef *g,$/;"	f	file:
huffman_table	libavcodec/vp3.c	/^    uint32_t huffman_table[80][32][2];$/;"	m	struct:Vp3DecodeContext	file:
huffman_vlc	libavcodec/imc.c	/^static VLC huffman_vlc[4][4];$/;"	v	file:
hwaccel	libavcodec/avcodec.h	/^    struct AVHWAccel *hwaccel;$/;"	m	struct:AVCodecContext	typeref:struct:AVCodecContext::AVHWAccel
hwaccel_context	libavcodec/avcodec.h	/^    void *hwaccel_context;$/;"	m	struct:AVCodecContext
hwaccel_pixfmt_list_h264_jpeg_420	libavcodec/h264.c	/^static const enum PixelFormat hwaccel_pixfmt_list_h264_jpeg_420[] = {$/;"	v	typeref:enum:PixelFormat	file:
hwnd	libavdevice/vfwcap.c	/^    HWND hwnd;$/;"	m	struct:vfw_ctx	file:
hwpos	libavdevice/sndio_common.h	/^    int64_t hwpos;$/;"	m	struct:__anon318
hybrid	libavcodec/wavpack.c	/^    int hybrid, hybrid_bitrate;$/;"	m	struct:WavpackFrameContext	file:
hybrid2_re	libavcodec/aacps.c	/^static void hybrid2_re(float (*in)[2], float (*out)[32][2], const float filter[7], int len, int reverse)$/;"	f	file:
hybrid4_8_12_cx	libavcodec/aacps.c	/^static void hybrid4_8_12_cx(float (*in)[2], float (*out)[32][2], const float (*filter)[7][2], int N, int len)$/;"	f	file:
hybrid6_cx	libavcodec/aacps.c	/^static void hybrid6_cx(float (*in)[2], float (*out)[32][2], const float (*filter)[7][2], int len)$/;"	f	file:
hybrid_analysis	libavcodec/aacps.c	/^static void hybrid_analysis(float out[91][32][2], float in[5][44][2], float L[2][38][64], int is34, int len)$/;"	f	file:
hybrid_bitrate	libavcodec/wavpack.c	/^    int hybrid, hybrid_bitrate;$/;"	m	struct:WavpackFrameContext	file:
hybrid_synthesis	libavcodec/aacps.c	/^static void hybrid_synthesis(float out[2][38][64], float in[91][32][2], int is34, int len)$/;"	f	file:
hyscale_fast	libswscale/swscale_internal.h	/^    void (*hyscale_fast)(struct SwsContext *c,$/;"	m	struct:SwsContext
hyscale_fast	libswscale/x86/swscale_template.c	/^static void RENAME(hyscale_fast)(SwsContext *c, int16_t *dst,$/;"	f	file:
i	libavcodec/aacdec.c	/^    uint32_t i;$/;"	m	union:float754	file:
i0	libswscale/bfin/internal_bfin.S	/^        i0 = r0;  \/\/ uyvy_T even$/;"	d
i0	libswscale/bfin/internal_bfin.S	/^        i0 = r0;$/;"	d
i1	libswscale/bfin/internal_bfin.S	/^        i1 = r0;$/;"	d
i1	libswscale/bfin/internal_bfin.S	/^        i1 = r2;  \/\/ uyvy_B odd$/;"	d
i2	libswscale/bfin/internal_bfin.S	/^        i2 = r1;$/;"	d
i2	libswscale/bfin/internal_bfin.S	/^        i2 = r2; \/\/ *u$/;"	d
i2f	libavcodec/g726.c	/^static inline Float11* i2f(int i, Float11* f)$/;"	f	file:
i2f2	libavcodec/roqvideoenc.c	/^    int i2f2[MAX_CBS_2x2];$/;"	m	struct:RoqTempData	file:
i2f4	libavcodec/roqvideoenc.c	/^    int i2f4[MAX_CBS_4x4];$/;"	m	struct:RoqTempData	file:
i3	libswscale/bfin/internal_bfin.S	/^        i3 = r2; \/\/ *v$/;"	d
i3	libswscale/bfin/internal_bfin.S	/^        i3 = r2;$/;"	d
i64	libavutil/opt.h	/^        int64_t i64;$/;"	m	union:AVOption::__anon304
iLLM_HEAD	libavcodec/x86/idct_sse2_xvid.c	201;"	d	file:
iLLM_PASS	libavcodec/x86/idct_sse2_xvid.c	206;"	d	file:
iLLM_PASS_SPARSE	libavcodec/x86/idct_sse2_xvid.c	284;"	d	file:
iMTX_MULT	libavcodec/x86/idct_sse2_xvid.c	178;"	d	file:
iMaxQuant	libavcodec/atrac3data.h	/^static const float iMaxQuant[8] = {$/;"	v
i_count	libavcodec/avcodec.h	/^    int i_count;$/;"	m	struct:AVCodecContext
i_count	libavcodec/mpegvideo.h	/^    int i_count;$/;"	m	struct:MpegEncContext
i_count	libavcodec/ratecontrol.h	/^    int i_count;$/;"	m	struct:RateControlEntry
i_cplx_sum	libavcodec/ratecontrol.h	/^    uint64_t i_cplx_sum[5];$/;"	m	struct:RateControlContext
i_mb_type_info	libavcodec/h264data.h	/^static const IMbInfo i_mb_type_info[26]={$/;"	v
i_quant_factor	libavcodec/avcodec.h	/^    float i_quant_factor;$/;"	m	struct:AVCodecContext
i_quant_offset	libavcodec/avcodec.h	/^    float i_quant_offset;$/;"	m	struct:AVCodecContext
i_tex_bits	libavcodec/avcodec.h	/^    int i_tex_bits;$/;"	m	struct:AVCodecContext
i_tex_bits	libavcodec/mpegvideo.h	/^    int i_tex_bits;$/;"	m	struct:MpegEncContext
i_tex_bits	libavcodec/ratecontrol.h	/^    int i_tex_bits;$/;"	m	struct:RateControlEntry
iblock	libavcodec/libvorbis.c	/^    double iblock;$/;"	m	struct:OggVorbisContext	file:
ibuf	libavcodec/snow.c	/^    IDWTELEM *ibuf;$/;"	m	struct:SubBand	file:
ic	ffplay.c	/^    AVFormatContext *ic;$/;"	m	struct:VideoState	file:
ic	libavformat/rdt.c	/^    AVFormatContext *ic; \/**< the containing (RTSP) demux context *\/$/;"	m	struct:RDTDemuxContext	file:
ic	libavformat/rtpdec.h	/^    AVFormatContext *ic;$/;"	m	struct:RTPDemuxContext
ic	libavformat/rtpenc.h	/^    AVFormatContext *ic;$/;"	m	struct:RTPMuxContext
icc_mode	libavcodec/aacps.h	/^    int    icc_mode;$/;"	m	struct:__anon257
icc_par	libavcodec/aacps.h	/^    int8_t icc_par[PS_MAX_NUM_ENV][PS_MAX_NR_IIDICC]; \/\/<Inter-Channel Coherence Parameters$/;"	m	struct:__anon257
icoeff	libavfilter/libmpcodecs/vf_ow.c	/^static const double icoeff[2][5]={$/;"	v	file:
icon_title	libavdevice/sdl.c	/^    char *icon_title;$/;"	m	struct:__anon309	file:
icos36	libavcodec/mpegaudiodec.c	/^static const INTFLOAT icos36[9] = {$/;"	v	file:
icos36h	libavcodec/mpegaudiodec.c	/^static const INTFLOAT icos36h[9] = {$/;"	v	file:
ics	libavcodec/aac.h	/^    IndividualChannelStream ics;$/;"	m	struct:__anon244
id	libavcodec/4xm.c	/^    int id;$/;"	m	struct:CFrameBuffer	file:
id	libavcodec/avcodec.h	/^    enum CodecID id;$/;"	m	struct:AVCodec	typeref:enum:AVCodec::CodecID
id	libavcodec/avcodec.h	/^    enum CodecID id;$/;"	m	struct:AVHWAccel	typeref:enum:AVHWAccel::CodecID
id	libavcodec/avcodec.h	/^    int id;$/;"	m	struct:AVPanScan
id	libavcodec/cinepak.c	/^    uint16_t          id;$/;"	m	struct:__anon280	file:
id	libavcodec/dvbsubdec.c	/^    int id;$/;"	m	struct:DVBSubCLUT	file:
id	libavcodec/dvbsubdec.c	/^    int id;$/;"	m	struct:DVBSubObject	file:
id	libavcodec/dvbsubdec.c	/^    int id;$/;"	m	struct:DVBSubRegion	file:
id	libavfilter/libmpcodecs/img_format.h	/^    int id;        \/\/ stream id. usually 0x1E0$/;"	m	struct:__anon33
id	libavformat/avformat.h	/^    int            id;$/;"	m	struct:AVProgram
id	libavformat/avformat.h	/^    int id;                 \/\/\/< unique ID to identify the chapter$/;"	m	struct:AVChapter
id	libavformat/avformat.h	/^    int id;       \/**< format-specific stream ID *\/$/;"	m	struct:AVStream
id	libavformat/img2.c	/^    enum CodecID id;$/;"	m	struct:__anon390	typeref:enum:__anon390::CodecID	file:
id	libavformat/internal.h	/^    enum CodecID id;$/;"	m	struct:AVCodecTag	typeref:enum:AVCodecTag::CodecID
id	libavformat/isom.h	/^    int id;$/;"	m	struct:__anon465
id	libavformat/matroska.h	/^    enum CodecID id;$/;"	m	struct:CodecMime	typeref:enum:CodecMime::CodecID
id	libavformat/matroska.h	/^    enum CodecID id;$/;"	m	struct:CodecTags	typeref:enum:CodecTags::CodecID
id	libavformat/matroskadec.c	/^    uint32_t id;$/;"	m	struct:EbmlSyntax	file:
id	libavformat/matroskadec.c	/^    uint64_t id;$/;"	m	struct:__anon369	file:
id	libavformat/mms.h	/^    int id;$/;"	m	struct:__anon454
id	libavformat/mpegenc.c	/^    uint8_t id;$/;"	m	struct:__anon428	file:
id	libavformat/mpegts.c	/^    uint16_t id;$/;"	m	struct:SectionHeader	file:
id	libavformat/mpegts.c	/^    unsigned int id; \/\/program id\/service id$/;"	m	struct:Program	file:
id	libavformat/mxf.h	/^    int id;$/;"	m	struct:__anon326
id	libavformat/mxfenc.c	/^    enum CodecID id;$/;"	m	struct:__anon460	typeref:enum:__anon460::CodecID	file:
id	libavformat/riff.h	/^    enum CodecID id;$/;"	m	struct:__anon374	typeref:enum:__anon374::CodecID
id	libavformat/sdp.c	/^    int id;               \/**< session ID *\/$/;"	m	struct:sdp_session_level	file:
id2subtype	libavcodec/crystalhd.c	/^static inline BC_MEDIA_SUBTYPE id2subtype(CHDContext *priv, enum CodecID id)$/;"	f	file:
id3v1_create_tag	libavformat/mp3enc.c	/^static int id3v1_create_tag(AVFormatContext *s, uint8_t *buf)$/;"	f	file:
id3v1_set_string	libavformat/mp3enc.c	/^static int id3v1_set_string(AVFormatContext *s, const char *key,$/;"	f	file:
id3v2_check_write_tag	libavformat/mp3enc.c	/^static int id3v2_check_write_tag(AVFormatContext *s, AVDictionaryEntry *t, const char table[][4],$/;"	f	file:
id3v2_put_size	libavformat/mp3enc.c	/^static void id3v2_put_size(AVFormatContext *s, int size)$/;"	f	file:
id3v2_put_ttag	libavformat/mp3enc.c	/^static int id3v2_put_ttag(AVFormatContext *s, const char *str1, const char *str2,$/;"	f	file:
id3v2_version	libavformat/mp3enc.c	/^    int id3v2_version;$/;"	m	struct:MP3Context	file:
id_length	libavformat/matroskadec.c	/^    uint64_t id_length;$/;"	m	struct:__anon354	file:
id_number	libavcodec/pgssubdec.c	/^    int id_number;$/;"	m	struct:PGSSubPresentation	file:
id_select	libavcodec/aac.h	/^    int id_select[8];      \/\/\/< element id$/;"	m	struct:__anon243
idcin_decode_end	libavcodec/idcinvideo.c	/^static av_cold int idcin_decode_end(AVCodecContext *avctx)$/;"	f	file:
idcin_decode_frame	libavcodec/idcinvideo.c	/^static int idcin_decode_frame(AVCodecContext *avctx,$/;"	f	file:
idcin_decode_init	libavcodec/idcinvideo.c	/^static av_cold int idcin_decode_init(AVCodecContext *avctx)$/;"	f	file:
idcin_decode_vlcs	libavcodec/idcinvideo.c	/^static void idcin_decode_vlcs(IdcinContext *s)$/;"	f	file:
idcin_probe	libavformat/idcin.c	/^static int idcin_probe(AVProbeData *p)$/;"	f	file:
idcin_read_header	libavformat/idcin.c	/^static int idcin_read_header(AVFormatContext *s,$/;"	f	file:
idcin_read_packet	libavformat/idcin.c	/^static int idcin_read_packet(AVFormatContext *s,$/;"	f	file:
idct	ffplay.c	/^static int idct = FF_IDCT_AUTO;$/;"	v	file:
idct	libavcodec/4xm.c	/^static void idct(DCTELEM block[64]){$/;"	f	file:
idct	libavcodec/dsputil.h	/^    void (*idct)(DCTELEM *block\/* align 16*\/);$/;"	m	struct:DSPContext
idct	libavcodec/vp3dsp.c	/^static av_always_inline void idct(uint8_t *dst, int stride, int16_t *input, int type)$/;"	f	file:
idct	libavcodec/x86/simple_idct_mmx.c	/^static inline void idct(int16_t *block)$/;"	f	file:
idct	libavcodec/xvmc.h	/^    int             idct;$/;"	m	struct:xvmc_pix_fmt
idct	libavfilter/libmpcodecs/vf_test.c	/^static void idct(uint8_t *dst, int dstStride, int src[64])$/;"	f	file:
idct248_error	libavcodec/dct-test.c	/^static void idct248_error(const char *name,$/;"	f	file:
idct248_ref	libavcodec/dct-test.c	/^static void idct248_ref(uint8_t *dest, int linesize, int16_t *block)$/;"	f	file:
idct32	libavcodec/mpegaudioenc.c	/^static void idct32(int *out, int *tab)$/;"	f	file:
idct4col_add	libavcodec/simple_idct.c	/^static inline void idct4col_add(uint8_t *dest, int line_size, const DCTELEM *col)$/;"	f	file:
idct4col_put	libavcodec/simple_idct.c	/^static inline void idct4col_put(uint8_t *dest, int line_size, const DCTELEM *col)$/;"	f	file:
idct4row	libavcodec/simple_idct.c	/^static inline void idct4row(DCTELEM *row)$/;"	f	file:
idct6	libavcodec/eac3dec.c	/^static void idct6(int pre_mant[6])$/;"	f	file:
idctRowCondDC	libavcodec/simple_idct.c	/^static inline void idctRowCondDC (DCTELEM * row)$/;"	f	file:
idctSparseCol	libavcodec/simple_idct.c	/^static inline void idctSparseCol (DCTELEM * col)$/;"	f	file:
idctSparseColAdd	libavcodec/simple_idct.c	/^static inline void idctSparseColAdd (uint8_t *dest, int line_size,$/;"	f	file:
idctSparseColPut	libavcodec/simple_idct.c	/^static inline void idctSparseColPut (uint8_t *dest, int line_size,$/;"	f	file:
idct_add	libavcodec/dsputil.h	/^    void (*idct_add)(uint8_t *dest\/*align 8*\/, int line_size, DCTELEM *block\/*align 16*\/);$/;"	m	struct:DSPContext
idct_add	libavcodec/sh4/dsputil_sh4.c	/^static void idct_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
idct_add_altivec	libavcodec/ppc/idct_altivec.c	/^void idct_add_altivec(uint8_t* dest, int stride, int16_t *blk)$/;"	f
idct_algo	libavcodec/avcodec.h	/^    int idct_algo;$/;"	m	struct:AVCodecContext
idct_coeff_neon	libavcodec/arm/simple_idct_neon.S	/^idct_coeff_neon:$/;"	l
idct_col	libavcodec/alpha/simple_idct_alpha.c	/^static inline void idct_col(DCTELEM *col)$/;"	f	file:
idct_col	libavcodec/x86/idct_mmx.c	/^static inline void idct_col (int16_t * const col, const int offset)$/;"	f	file:
idct_col2	libavcodec/alpha/simple_idct_alpha.c	/^static inline void idct_col2(DCTELEM *col)$/;"	f	file:
idct_factor	libavcodec/dvdata.h	/^    uint32_t        *idct_factor;           \/* set of iDCT factor tables *\/$/;"	m	struct:DVprofile
idct_internal	libavcodec/h264idct_template.c	/^static av_always_inline void FUNCC(idct_internal)(uint8_t *p_dst, DCTELEM *p_block, int stride, int block_stride, int shift, int add){$/;"	f	file:
idct_mb	libavcodec/vp8.c	/^static av_always_inline void idct_mb(VP8Context *s, uint8_t *dst[3], VP8Macroblock *mb)$/;"	f	file:
idct_mmx_init	libavcodec/dct-test.c	/^static void idct_mmx_init(void)$/;"	f	file:
idct_mmx_perm	libavcodec/dct-test.c	/^static short idct_mmx_perm[64];$/;"	v	file:
idct_permutation	libavcodec/dsputil.h	/^    uint8_t idct_permutation[64];$/;"	m	struct:DSPContext
idct_permutation_type	libavcodec/dsputil.h	/^    int idct_permutation_type;$/;"	m	struct:DSPContext
idct_put	libavcodec/4xm.c	/^static inline void idct_put(FourXContext *f, int x, int y){$/;"	f	file:
idct_put	libavcodec/asv1.c	/^static inline void idct_put(ASV1Context *a, int mb_x, int mb_y){$/;"	f	file:
idct_put	libavcodec/dsputil.h	/^    void (*idct_put)(uint8_t *dest\/*align 8*\/, int line_size, DCTELEM *block\/*align 16*\/);$/;"	m	struct:DSPContext
idct_put	libavcodec/dv.c	/^    void (*idct_put)(uint8_t *dest, int line_size, DCTELEM *block);$/;"	m	struct:BlockInfo	file:
idct_put	libavcodec/dv.c	/^    void (*idct_put[2])(uint8_t *dest, int line_size, DCTELEM *block);$/;"	m	struct:DVVideoContext	file:
idct_put	libavcodec/eamad.c	/^static inline void idct_put(MadContext *t, DCTELEM *block, int mb_x, int mb_y, int j)$/;"	f	file:
idct_put	libavcodec/mdec.c	/^static inline void idct_put(MDECContext *a, int mb_x, int mb_y){$/;"	f	file:
idct_put	libavcodec/sh4/dsputil_sh4.c	/^static void idct_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
idct_put_altivec	libavcodec/ppc/idct_altivec.c	/^void idct_put_altivec(uint8_t* dest, int stride, int16_t *blk)$/;"	f
idct_ref	libavcodec/fft-test.c	/^static void idct_ref(float *output, float *input, int nbits)$/;"	f	file:
idct_row	libavcodec/alpha/simple_idct_alpha.c	/^static inline int idct_row(DCTELEM *row)$/;"	f	file:
idct_sh4	libavcodec/sh4/idct_sh4.c	/^void idct_sh4(DCTELEM *block)$/;"	f
idct_simple_mmx_perm	libavcodec/dct-test.c	/^static short idct_simple_mmx_perm[64]={$/;"	v	file:
idct_sse2_row_perm	libavcodec/dct-test.c	/^static const uint8_t idct_sse2_row_perm[8] = {0, 4, 1, 5, 2, 6, 3, 7};$/;"	v	file:
idct_sse2_row_perm	libavcodec/dsputil.c	/^static const uint8_t idct_sse2_row_perm[8] = {0, 4, 1, 5, 2, 6, 3, 7};$/;"	v	file:
ideal_dst_incr	libavcodec/resample2.c	/^    int ideal_dst_incr;$/;"	m	struct:AVResampleContext	file:
idelta	libavcodec/adpcm.c	/^    int idelta;$/;"	m	struct:ADPCMChannelStatus	file:
ident	libavformat/rtpdec_xiph.c	/^    unsigned ident;             \/\/\/< 24-bit stream configuration identifier$/;"	m	struct:PayloadContext	file:
idr	libavcodec/h264.c	/^static void idr(H264Context *h){$/;"	f	file:
idx	libavcodec/roqvideo.h	/^    int idx[4];$/;"	m	struct:__anon124
idx_err_str	libavcodec/vorbisdec.c	/^static const char idx_err_str[] = "Index value %d out of range (0 - %d) for %s at %s:%i\\n";$/;"	v	file:
idx_to_quant	libavcodec/mpc7.c	/^static inline void idx_to_quant(MPCContext *c, GetBitContext *gb, int idx, int *dst)$/;"	f	file:
iff_probe	libavformat/iff.c	/^static int iff_probe(AVProbeData *p)$/;"	f	file:
iff_read_header	libavformat/iff.c	/^static int iff_read_header(AVFormatContext *s,$/;"	f	file:
iff_read_packet	libavformat/iff.c	/^static int iff_read_packet(AVFormatContext *s,$/;"	f	file:
ifields	libavfilter/libmpcodecs/pullup.h	/^    struct pullup_buffer **ifields, *ofields[2];$/;"	m	struct:pullup_frame	typeref:struct:pullup_frame::pullup_buffer
ifmt	ffserver.c	/^    AVInputFormat *ifmt;       \/* if non NULL, force input format *\/$/;"	m	struct:FFStream	file:
iformat	ffplay.c	/^    AVInputFormat *iformat;$/;"	m	struct:VideoState	file:
iformat	ffprobe.c	/^static AVInputFormat *iformat = NULL;$/;"	v	file:
iformat	libavformat/avformat.h	/^    struct AVInputFormat *iformat;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVInputFormat
ifr2_TAG	libavformat/4xm.c	48;"	d	file:
iframes	libavformat/gxfenc.c	/^    int iframes;$/;"	m	struct:GXFStreamContext	file:
ifrm_TAG	libavformat/4xm.c	45;"	d	file:
ignore	libavformat/asf.h	/^    uint32_t ignore;            \/\/\/< preroll is 64bit - but let's just ignore it$/;"	m	struct:__anon400
iid	libavdevice/dshow.h	/^    const GUID *iid;$/;"	m	struct:GUIDoffset
iid_par	libavcodec/aacps.h	/^    int8_t iid_par[PS_MAX_NUM_ENV][PS_MAX_NR_IIDICC]; \/\/<Inter-channel Intensity Difference Parameters$/;"	m	struct:__anon257
iid_quant	libavcodec/aacps.h	/^    int    iid_quant;$/;"	m	struct:__anon257
iir_filter	libavcodec/aacpsy.c	/^static float iir_filter(int in, float state[2])$/;"	f	file:
iir_mem	libavcodec/sipr.h	/^    float iir_mem[LP_FILTER_ORDER_16k+1];$/;"	m	struct:__anon235
iir_state	libavcodec/aacpsy.c	/^    float       iir_state[2];            \/\/\/< hi-pass IIR filter state$/;"	m	struct:AacPsyChannel	file:
iirtable	libavcodec/x86/mlpdsp.c	/^static const void *iirtable[5] = { &ff_mlp_iirorder_0, &ff_mlp_iirorder_1,$/;"	v	file:
ildct_cmp	libavcodec/avcodec.h	/^    int ildct_cmp;$/;"	m	struct:AVCodecContext
ildct_cmp	libavcodec/dsputil.h	/^    me_cmp_func ildct_cmp[6]; \/\/only width 16 used$/;"	m	struct:DSPContext
ildct_cmp	libavcodec/dv.c	/^    me_cmp_func ildct_cmp;$/;"	m	struct:DVVideoContext	file:
ilog	libavcodec/vorbis.h	47;"	d
ilpack	libavfilter/libmpcodecs/vf_ilpack.c	/^static void ilpack(unsigned char *dst, unsigned char *src[3],$/;"	f	file:
im	libavcodec/avfft.h	/^    FFTSample re, im;$/;"	m	struct:FFTComplex
im	libavcodec/fft-test.c	/^    float re, im;$/;"	m	struct:__anon275	file:
im	libavcodec/fft.h	/^    FFTDouble re, im;$/;"	m	struct:FFTDComplex
im	libavcodec/fft.h	/^    int16_t re, im;$/;"	m	struct:FFTComplex
im	libavcodec/qdm2.c	/^    float im;$/;"	m	struct:__anon196	file:
image	libavcodec/libopenjpeg.c	/^    AVFrame image;$/;"	m	struct:__anon285	file:
image	libavdevice/x11grab.c	/^    XImage *image;           \/**< X11 image holding the grab *\/$/;"	m	struct:x11_grab	file:
image_buf	libavcodec/png.h	/^    uint8_t *image_buf;$/;"	m	struct:PNGDecContext
image_get_linesize	libavutil/imgutils.c	/^int image_get_linesize(int width, int plane,$/;"	f	file:
image_height	libavcodec/flashsv.c	/^    int             image_width, image_height;$/;"	m	struct:FlashSVContext	file:
image_height	libavcodec/flashsv2enc.c	/^    int image_width, image_height;$/;"	m	struct:FlashSV2Context	file:
image_height	libavcodec/flashsvenc.c	/^    int             image_width, image_height;$/;"	m	struct:FlashSVContext	file:
image_linesize	libavcodec/png.h	/^    int image_linesize;$/;"	m	struct:PNGDecContext
image_offset_x	libavcodec/j2kdec.c	/^    int image_offset_x, image_offset_y;$/;"	m	struct:__anon98	file:
image_offset_y	libavcodec/j2kdec.c	/^    int image_offset_x, image_offset_y;$/;"	m	struct:__anon98	file:
image_palette	libavcodec/gifdec.c	/^    uint32_t *image_palette;$/;"	m	struct:GifState	file:
image_width	libavcodec/flashsv.c	/^    int             image_width, image_height;$/;"	m	struct:FlashSVContext	file:
image_width	libavcodec/flashsv2enc.c	/^    int image_width, image_height;$/;"	m	struct:FlashSV2Context	file:
image_width	libavcodec/flashsvenc.c	/^    int             image_width, image_height;$/;"	m	struct:FlashSVContext	file:
imc_adjust_bit_allocation	libavcodec/imc.c	/^static void imc_adjust_bit_allocation (IMCContext* q, int summer) {$/;"	f	file:
imc_calculate_coeffs	libavcodec/imc.c	/^static void imc_calculate_coeffs(IMCContext* q, float* flcoeffs1, float* flcoeffs2, int* bandWidthT,$/;"	f	file:
imc_cb_select	libavcodec/imcdata.h	/^static const uint8_t imc_cb_select[4][32] = {$/;"	v
imc_decode_close	libavcodec/imc.c	/^static av_cold int imc_decode_close(AVCodecContext * avctx)$/;"	f	file:
imc_decode_frame	libavcodec/imc.c	/^static int imc_decode_frame(AVCodecContext * avctx,$/;"	f	file:
imc_decode_init	libavcodec/imc.c	/^static av_cold int imc_decode_init(AVCodecContext * avctx)$/;"	f	file:
imc_decode_level_coefficients	libavcodec/imc.c	/^static void imc_decode_level_coefficients(IMCContext* q, int* levlCoeffBuf, float* flcoeffs1,$/;"	f	file:
imc_decode_level_coefficients2	libavcodec/imc.c	/^static void imc_decode_level_coefficients2(IMCContext* q, int* levlCoeffBuf, float* old_floor, float* flcoeffs1,$/;"	f	file:
imc_exp_tab	libavcodec/imcdata.h	/^static const float imc_exp_tab[32] = {$/;"	v
imc_exp_tab2	libavcodec/imcdata.h	/^static const float * const imc_exp_tab2 = imc_exp_tab + 8;$/;"	v
imc_get_coeffs	libavcodec/imc.c	/^static int imc_get_coeffs (IMCContext* q) {$/;"	f	file:
imc_get_skip_coeff	libavcodec/imc.c	/^static void imc_get_skip_coeff(IMCContext* q) {$/;"	f	file:
imc_huffman_bits	libavcodec/imcdata.h	/^static const uint16_t imc_huffman_bits[4][4][18] = {$/;"	v
imc_huffman_lens	libavcodec/imcdata.h	/^static const uint8_t imc_huffman_lens[4][4][18] = {$/;"	v
imc_huffman_sizes	libavcodec/imcdata.h	/^static const uint8_t imc_huffman_sizes[4] = {$/;"	v
imc_imdct256	libavcodec/imc.c	/^static void imc_imdct256(IMCContext *q) {$/;"	f	file:
imc_quantizer1	libavcodec/imcdata.h	/^static const float imc_quantizer1[4][8] = {$/;"	v
imc_quantizer2	libavcodec/imcdata.h	/^static const float imc_quantizer2[2][56] = {$/;"	v
imc_read_level_coeffs	libavcodec/imc.c	/^static void imc_read_level_coeffs(IMCContext* q, int stream_format_code, int* levlCoeffs)$/;"	f	file:
imc_weights1	libavcodec/imcdata.h	/^static const float imc_weights1[31] = {$/;"	v
imc_weights2	libavcodec/imcdata.h	/^static const float imc_weights2[31] = {$/;"	v
imdct	libavcodec/dca.c	/^    FFTContext imdct;$/;"	m	struct:__anon93	file:
imdct12	libavcodec/mpegaudiodec.c	/^static void imdct12(INTFLOAT *out, INTFLOAT *in)$/;"	f	file:
imdct36	libavcodec/mpegaudiodec.c	/^static void imdct36(INTFLOAT *out, INTFLOAT *buf, INTFLOAT *in, INTFLOAT *win)$/;"	f	file:
imdct_256	libavcodec/ac3dec.h	/^    FFTContext imdct_256;                   \/\/\/< for 256 sample IMDCT$/;"	m	struct:__anon88
imdct_512	libavcodec/ac3dec.h	/^    FFTContext imdct_512;                   \/\/\/< for 512 sample IMDCT$/;"	m	struct:__anon88
imdct_and_window	libavcodec/twinvq.c	/^static void imdct_and_window(TwinContext *tctx, enum FrameType ftype, int wtype,$/;"	f	file:
imdct_and_windowing	libavcodec/aacdec.c	/^static void imdct_and_windowing(AACContext *ac, SingleChannelElement *sce)$/;"	f	file:
imdct_calc	libavcodec/fft.h	/^    void (*imdct_calc)(struct FFTContext *s, FFTSample *output, const FFTSample *input);$/;"	m	struct:FFTContext
imdct_ctx	libavcodec/nellymoserdec.c	/^    FFTContext      imdct_ctx;$/;"	m	struct:NellyMoserDecodeContext	file:
imdct_half	libavcodec/fft.h	/^    void (*imdct_half)(struct FFTContext *s, FFTSample *output, const FFTSample *input);$/;"	m	struct:FFTContext
imdct_output	libavcodec/twinvq.c	/^static void imdct_output(TwinContext *tctx, enum FrameType ftype, int wtype,$/;"	f	file:
imdct_ref	libavcodec/fft-test.c	/^static void imdct_ref(FFTSample *out, FFTSample *in, int nbits)$/;"	f	file:
imemoffset	libavdevice/dshow_pin.c	25;"	d	file:
imemvtbl	libavdevice/dshow.h	/^    IMemInputPinVtbl *imemvtbl;$/;"	m	struct:libAVPin
img1	libavcodec/motion-test.c	/^uint8_t img1[WIDTH * HEIGHT];$/;"	v
img2	libavcodec/motion-test.c	/^uint8_t img2[WIDTH * HEIGHT];$/;"	v
img2_class	libavformat/img2.c	/^static const AVClass img2_class = {$/;"	v	file:
img_bpp	libavformat/mtv.c	/^    unsigned int img_bpp;           \/\/\/< frame bits per pixel$/;"	m	struct:MTVDemuxContext	file:
img_colorfmt	libavformat/mtv.c	/^    unsigned int img_colorfmt;      \/\/\/< frame colorfmt rgb 565\/555$/;"	m	struct:MTVDemuxContext	file:
img_convert_ctx	ffplay.c	/^    struct SwsContext *img_convert_ctx;$/;"	m	struct:VideoState	typeref:struct:VideoState::SwsContext	file:
img_count	libavformat/img2.c	/^    int img_count;$/;"	m	struct:__anon389	file:
img_first	libavformat/img2.c	/^    int img_first;$/;"	m	struct:__anon389	file:
img_get_alpha_info	libavcodec/imgconvert.c	/^int img_get_alpha_info(const AVPicture *src,$/;"	f
img_height	libavformat/mtv.c	/^    unsigned int img_height;        \/\/$/;"	m	struct:MTVDemuxContext	file:
img_last	libavformat/img2.c	/^    int img_last;$/;"	m	struct:__anon389	file:
img_number	libavformat/img2.c	/^    int img_number;$/;"	m	struct:__anon389	file:
img_resample_ctx	ffmpeg.c	/^    struct SwsContext *img_resample_ctx; \/* for image resampling *\/$/;"	m	struct:AVOutputStream	typeref:struct:AVOutputStream::SwsContext	file:
img_resample_ctx	ffmpeg/ffmpeg.c	/^    struct SwsContext *img_resample_ctx; \/* for image resampling *\/$/;"	m	struct:AVOutputStream	typeref:struct:AVOutputStream::SwsContext	file:
img_segment_size	libavformat/mtv.c	/^    unsigned int img_segment_size;  \/\/\/< size of image segment$/;"	m	struct:MTVDemuxContext	file:
img_tags	libavformat/img2.c	/^static const IdStrMap img_tags[] = {$/;"	v	file:
img_width	libavformat/mtv.c	/^    unsigned int img_width;         \/\/$/;"	m	struct:MTVDemuxContext	file:
imgctx	libavfilter/libmpcodecs/vf.h	/^    vf_image_context_t imgctx;$/;"	m	struct:vf_instance
imgfmt	libavfilter/libmpcodecs/mp_image.h	/^    unsigned int imgfmt;$/;"	m	struct:mp_image
imgfmt	libavfilter/libmpcodecs/vf_dint.c	/^  unsigned int imgfmt;$/;"	m	struct:vf_priv_s	file:
imgop	libavfilter/libmpcodecs/vf_divtc.c	/^static int imgop(int(*planeop)(unsigned char *, unsigned char *,$/;"	f	file:
imgtype	libavcodec/lcldec.c	/^    int imgtype;$/;"	m	struct:LclDecContext	file:
imgtype	libavcodec/lclenc.c	/^    int imgtype;$/;"	m	struct:LclEncContext	file:
imgutils_class	libavutil/imgutils.c	/^static const AVClass imgutils_class = { "IMGUTILS", av_default_item_name, NULL, LIBAVUTIL_VERSION_INT, offsetof(ImgUtils, log_offset), offsetof(ImgUtils, log_ctx) };$/;"	v	file:
imlt_gain	libavcodec/cook.c	/^static void imlt_gain(COOKContext *q, float *inbuffer,$/;"	f	file:
imlt_window	libavcodec/cook.c	/^    void (* imlt_window) (struct cook *q, float *buffer1,$/;"	m	struct:cook	file:
imlt_window_float	libavcodec/cook.c	/^static void imlt_window_float (COOKContext *q, float *inbuffer,$/;"	f	file:
implicit_weight	libavcodec/h264.h	/^    int implicit_weight[48][48][2];$/;"	m	struct:H264Context
implicit_weight_table	libavcodec/h264.c	/^static void implicit_weight_table(H264Context *h, int field){$/;"	f	file:
implver	libavcodec/alpha/asm.h	100;"	d
implver	libavcodec/alpha/asm.h	114;"	d
implver	libavcodec/alpha/asm.h	165;"	d
imx_dump_header	libavcodec/imx_dump_header_bsf.c	/^static int imx_dump_header(AVBitStreamFilterContext *bsfc, AVCodecContext *avctx, const char *args,$/;"	f	file:
in	libavfilter/libmpcodecs/vf_softpulldown.c	/^    long long in;$/;"	m	struct:vf_priv_s	file:
in	libavutil/lzo.c	/^    const uint8_t *in, *in_end;$/;"	m	struct:LZOContext	file:
in_buf	libavcodec/aacps.h	/^    float  in_buf[5][44][2];$/;"	m	struct:__anon257
in_buffer	libavformat/mms.h	/^    uint8_t in_buffer[65536];            \/\/\/< Buffer for incoming packets.$/;"	m	struct:__anon455
in_channels	libavcodec/audioconvert.c	/^    int in_channels, out_channels;$/;"	m	struct:AVAudioConvert	file:
in_chlayouts	libavfilter/avfilter.h	/^    AVFilterFormats *in_chlayouts;$/;"	m	struct:AVFilterLink
in_end	libavutil/lzo.c	/^    const uint8_t *in, *in_end;$/;"	m	struct:LZOContext	file:
in_file	ffmpeg.c	/^    int in_file;$/;"	m	struct:AVChapterMap	file:
in_file	ffmpeg/ffmpeg.c	/^    int in_file;$/;"	m	struct:AVChapterMap	file:
in_formats	libavfilter/avfilter.h	/^    AVFilterFormats *in_formats;$/;"	m	struct:AVFilterLink
in_gb	libavcodec/mpegaudiodec.c	/^    GetBitContext in_gb;$/;"	m	struct:MPADecodeContext	file:
in_h	libavfilter/vf_pad.c	/^    int in_w, in_h;         \/\/\/< width and height for the padded input video, which has to be aligned to the chroma values in order to avoid chroma issues$/;"	m	struct:__anon52	file:
in_inc	libavfilter/libmpcodecs/vf_filmdint.c	/^    long in_inc, out_dec, iosync;$/;"	m	struct:vf_priv_s	file:
in_opts	ffserver.c	/^    AVDictionary *in_opts;   \/* input parameters *\/$/;"	m	struct:FFStream	file:
in_packet	libavcodec/dvbsub_parser.c	/^    int in_packet;$/;"	m	struct:DVBSubParseContext	file:
in_sync	libavcodec/mlp_parser.c	/^    int in_sync;$/;"	m	struct:MLPParseContext	file:
in_table_int16	libavcodec/aacsbr.c	/^static inline int in_table_int16(const int16_t *table, int last_el, int16_t needle)$/;"	f	file:
in_temp	libavcodec/adx.h	/^    int in_temp;$/;"	m	struct:__anon159
in_w	libavfilter/vf_pad.c	/^    int in_w, in_h;         \/\/\/< width and height for the padded input video, which has to be aligned to the chroma values in order to avoid chroma issues$/;"	m	struct:__anon52	file:
inbuffer	libavformat/crypto.c	/^    uint8_t inbuffer [BLOCKSIZE*MAX_BUFFER_BLOCKS],$/;"	m	struct:__anon432	file:
inc_blk_idx	libavcodec/vc1dec.c	217;"	d	file:
inc_limit	libavcodec/cavs.h	/^  int inc_limit;$/;"	m	struct:dec_2dvlc
incoming_flags	libavformat/mmst.c	/^    int incoming_flags;                  \/\/\/< Incoming packet flags.$/;"	m	struct:__anon341	file:
incoming_packet_seq	libavformat/mmst.c	/^    int incoming_packet_seq;             \/\/\/< Incoming packet sequence number.$/;"	m	struct:__anon341	file:
incomplete	libavformat/oggdec.h	/^    int incomplete; \/\/\/< whether we're expecting a continuation in the next page$/;"	m	struct:ogg_stream
indata	libavformat/crypto.c	/^    int indata, indata_used, outdata;$/;"	m	struct:__anon432	file:
indata_used	libavformat/crypto.c	/^    int indata, indata_used, outdata;$/;"	m	struct:__anon432	file:
indeo3_decode_end	libavcodec/indeo3.c	/^static av_cold int indeo3_decode_end(AVCodecContext *avctx)$/;"	f	file:
indeo3_decode_frame	libavcodec/indeo3.c	/^static int indeo3_decode_frame(AVCodecContext *avctx,$/;"	f	file:
indeo3_decode_init	libavcodec/indeo3.c	/^static av_cold int indeo3_decode_init(AVCodecContext *avctx)$/;"	f	file:
indep_count	libavutil/lls.h	/^    int indep_count;$/;"	m	struct:LLSModel
index	ffmpeg.c	/^    int  index;     \/\/< stream\/chapter\/program number$/;"	m	struct:AVMetaDataMap	file:
index	ffmpeg.c	/^    int index;               \/* stream index in the output file *\/$/;"	m	struct:AVOutputStream	file:
index	ffmpeg/ffmpeg.c	/^    int  index;     \/\/< stream\/chapter\/program number$/;"	m	struct:AVMetaDataMap	file:
index	ffmpeg/ffmpeg.c	/^    int index;               \/* stream index in the output file *\/$/;"	m	struct:AVOutputStream	file:
index	libavcodec/dirac_parser.c	/^    int index;$/;"	m	struct:DiracParseContext	file:
index	libavcodec/elbg.c	/^    int index;$/;"	m	struct:cell_s	file:
index	libavcodec/flashsv2enc.c	/^    uint8_t index[1 << 15];$/;"	m	struct:Palette	file:
index	libavcodec/get_bits.h	/^    int index;$/;"	m	struct:GetBitContext
index	libavcodec/mace.c	/^    int16_t index, factor, prev2, previous, level;$/;"	m	struct:ChannelData	file:
index	libavcodec/parser.h	/^    int index;$/;"	m	struct:ParseContext
index	libavcodec/put_bits.h	/^    int index;$/;"	m	struct:PutBitContext
index	libavcodec/qcelpdata.h	/^    uint8_t index;  \/*!< index into the QCELPContext structure *\/$/;"	m	struct:__anon85
index	libavcodec/resample2.c	/^    int index;$/;"	m	struct:AVResampleContext	file:
index	libavdevice/dv1394.c	/^    int index;  \/* Current frame index *\/$/;"	m	struct:dv1394_data	file:
index	libavdevice/v4l2.c	/^    int index;$/;"	m	struct:buff_data	file:
index	libavformat/applehttp.c	/^    int index;$/;"	m	struct:variant	file:
index	libavformat/avformat.h	/^    int index;    \/**< stream index in AVFormatContext *\/$/;"	m	struct:AVStream
index	libavformat/c93.c	/^    uint16_t index;$/;"	m	struct:__anon481	file:
index	libavformat/gxfenc.c	/^    int height, index;$/;"	m	struct:__anon433	file:
index	libavformat/matroskadec.c	/^    EbmlList index;$/;"	m	struct:__anon371	file:
index	libavformat/mxfenc.c	/^    int index;               \/\/\/< index in mxf_essence_container_uls table$/;"	m	struct:__anon458	file:
index	libavformat/mxfenc.c	/^    int index;$/;"	m	struct:__anon460	file:
index	libavformat/rtpdec_mpeg4.c	/^        int index;$/;"	m	struct:PayloadContext::AUHeaders	file:
index	libavutil/lfg.h	/^    int index;$/;"	m	struct:__anon297
index_bits	libavcodec/dnxhddata.h	/^    int index_bits;$/;"	m	struct:__anon281
index_entries	libavformat/avformat.h	/^    AVIndexEntry *index_entries; \/**< Only used if the format does not$/;"	m	struct:AVStream
index_entries	libavformat/mxfenc.c	/^    MXFIndexEntry *index_entries;$/;"	m	struct:MXFContext	file:
index_entries	libavformat/nsvdec.c	/^    int index_entries;$/;"	m	struct:__anon345	file:
index_entries	libavformat/wtvdec.c	/^    AVIndexEntry *index_entries;$/;"	m	struct:__anon323	file:
index_entries_allocated_size	libavformat/avformat.h	/^    unsigned int index_entries_allocated_size;$/;"	m	struct:AVStream
index_entries_allocated_size	libavformat/wtvdec.c	/^    unsigned int index_entries_allocated_size;$/;"	m	struct:__anon323	file:
index_guid	libavformat/asfdec.c	/^static const ff_asf_guid index_guid = {$/;"	v	file:
index_loaded	libavformat/avidec.c	/^    int index_loaded;$/;"	m	struct:__anon451	file:
index_mb	libavcodec/roqvideoenc.c	/^static int index_mb(uint8_t cluster[], uint8_t cb[], int numCB,$/;"	f	file:
index_pos	libavformat/rl2.c	/^    unsigned int index_pos[2];   \/\/\/< indexes in the sample tables$/;"	m	struct:Rl2DemuxContext	file:
index_ptr	libavformat/asfenc.c	/^    ASFIndex* index_ptr;$/;"	m	struct:__anon470	file:
index_read	libavformat/asfdec.c	/^    int index_read;$/;"	m	struct:__anon332	file:
index_run	libavcodec/rl.h	/^    uint8_t *index_run[2];         \/\/\/< encoding only$/;"	m	struct:RLTable
index_stream	libavcodec/truemotion1.c	/^    const uint8_t *index_stream;$/;"	m	struct:TrueMotion1Context	file:
index_stream_size	libavcodec/truemotion1.c	/^    int index_stream_size;$/;"	m	struct:TrueMotion1Context	file:
index_table	libavcodec/adpcm.c	/^static const int index_table[16] = {$/;"	v	file:
index_table_segment_key	libavformat/mxfenc.c	/^static const uint8_t index_table_segment_key[]     = { 0x06,0x0E,0x2B,0x34,0x02,0x53,0x01,0x01,0x0d,0x01,0x02,0x01,0x01,0x10,0x01,0x00 };$/;"	v	file:
indexdeltalength	libavformat/rtpdec_mpeg4.c	/^    int indexdeltalength;$/;"	m	struct:PayloadContext	file:
indexes	libavformat/avienc.c	/^    AVIIndex indexes;$/;"	m	struct:__anon344	file:
indexes	libavformat/smacker.c	/^    int indexes[7];$/;"	m	struct:SmackerContext	file:
indexlength	libavformat/rtpdec_mpeg4.c	/^    int indexlength;$/;"	m	struct:PayloadContext	file:
indx_start	libavformat/avienc.c	/^    int64_t     indx_start;$/;"	m	struct:AVIIndex	file:
infer_size	libavformat/img2.c	/^static int infer_size(int *width_ptr, int *height_ptr, int size)$/;"	f	file:
info	libavcodec/vdpau.h	/^    } info;$/;"	m	struct:vdpau_render_state	typeref:union:vdpau_render_state::VdpPictureInfo
info	libavdevice/dshow.h	/^    FILTER_INFO info;$/;"	m	struct:libAVFilter
info	libavfilter/libmpcodecs/libvo/video_out.h	/^    const vo_info_t *info;$/;"	m	struct:vo_functions_s
info	libavfilter/libmpcodecs/vf.h	/^    const char *info;$/;"	m	struct:vf_info_s
info	libavfilter/libmpcodecs/vf.h	/^    const vf_info_t* info;$/;"	m	struct:vf_instance
info	libavformat/avformat.h	/^    } *info;$/;"	m	struct:AVStream	typeref:struct:AVStream::__anon480
info	libavformat/avisynth.c	/^  AVISTREAMINFO info;$/;"	m	struct:__anon474	file:
inframes	libavfilter/libmpcodecs/vf_detc.c	/^        int inframes, outframes;$/;"	m	struct:vf_priv_s	file:
inframes	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long inframes;$/;"	m	struct:vf_priv_s	file:
inframes	libavfilter/libmpcodecs/vf_ivtc.c	/^    int inframes, outframes;$/;"	m	struct:vf_priv_s	file:
ingenient_read_packet	libavformat/ingenientdec.c	/^static int ingenient_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
inherit_mv	libavcodec/ivi_common.h	/^    int             inherit_mv;     \/\/\/< tells if motion vector is inherited from reference macroblock$/;"	m	struct:__anon107
inherit_qdelta	libavcodec/ivi_common.h	/^    int             inherit_qdelta; \/\/\/< tells if quantiser delta is inherited from reference macroblock$/;"	m	struct:__anon107
init	libavcodec/avcodec.h	/^    int (*init)(AVCodecContext *);$/;"	m	struct:AVCodec
init	libavcodec/crystalhd.c	/^static av_cold int init(AVCodecContext *avctx)$/;"	f	file:
init	libavcodec/h264_parser.c	/^static int init(AVCodecParserContext *s)$/;"	f	file:
init	libavcodec/iff.c	/^    int init; \/\/ 1 if buffer and palette data already initialized, 0 otherwise$/;"	m	struct:__anon114	file:
init	libavcodec/psymodel.h	/^    int  (*init)   (FFPsyContext *apc);$/;"	m	struct:FFPsyModel
init	libavdevice/dv1394.h	/^        struct dv1394_init init;$/;"	m	struct:dv1394_status	typeref:struct:dv1394_status::dv1394_init
init	libavfilter/asrc_anullsrc.c	/^static int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/avfilter.h	/^    int (*init)(AVFilterContext *ctx, const char *args, void *opaque);$/;"	m	struct:AVFilter
init	libavfilter/libmpcodecs/vf_filmdint.c	/^static void init(struct vf_priv_s *p, mp_image_t *mpi)$/;"	f	file:
init	libavfilter/libmpcodecs/vf_pullup.c	/^    int init;$/;"	m	struct:vf_priv_s	file:
init	libavfilter/vf_aspect.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_blackframe.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_crop.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_cropdetect.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_drawbox.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_drawtext.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_fade.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_fieldorder.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_fifo.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_format.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_gradfun.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_hqdn3d.c	/^static int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_libopencv.c	/^    int  (*init)(AVFilterContext *ctx, const char *args, void *opaque);$/;"	m	struct:__anon16	file:
init	libavfilter/vf_libopencv.c	/^    int (*init)(AVFilterContext *ctx, const char *args, void *opaque);$/;"	m	struct:__anon13	file:
init	libavfilter/vf_libopencv.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_lut.c	/^static int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_mp.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_overlay.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_pad.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_scale.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_select.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_setpts.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_settb.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_showinfo.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_slicify.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_transpose.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_unsharp.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vf_yadif.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vsink_buffer.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vsrc_buffer.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vsrc_movie.c	/^static av_cold int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
init	libavfilter/vsrc_nullsrc.c	/^static int init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
initFilter	libswscale/utils.c	/^static int initFilter(int16_t **outFilter, int16_t **filterPos, int *outFilterSize, int xInc,$/;"	f	file:
initIdct	libavfilter/libmpcodecs/vf_test.c	/^static void initIdct(void)$/;"	f	file:
initMMX2HScaler	libswscale/utils.c	/^static int initMMX2HScaler(int dstW, int xInc, uint8_t *filterCode, int16_t *filter, int32_t *filterPos, int numSplits)$/;"	f	file:
initNoise	libavfilter/libmpcodecs/vf_noise.c	/^static int8_t *initNoise(FilterParam *fp){$/;"	f	file:
initPv	libavfilter/libmpcodecs/vf_perspective.c	/^static void initPv(struct vf_priv_s *priv, int W, int H){$/;"	f	file:
init_2d_vlc_rl	libavcodec/mpeg12.c	/^static void init_2d_vlc_rl(RLTable *rl)$/;"	f	file:
init_ac_vlc	libavcodec/intrax8.c	62;"	d	file:
init_ac_vlc	libavcodec/intrax8.c	78;"	d	file:
init_atrac3_transforms	libavcodec/atrac3.c	/^static av_cold void init_atrac3_transforms(ATRAC3Context *q) {$/;"	f	file:
init_avcodec	libavfilter/vf_mp.c	/^void init_avcodec(void)$/;"	f
init_bitstream_params	libavcodec/twinvq.c	/^static av_cold void init_bitstream_params(TwinContext *tctx)$/;"	f	file:
init_block_mapping	libavcodec/vp3.c	/^static int init_block_mapping(Vp3DecodeContext *s)$/;"	f	file:
init_blocks	libavcodec/flashsv2enc.c	/^static void init_blocks(FlashSV2Context * s, Block * blocks,$/;"	f	file:
init_bundles	libavcodec/bink.c	/^static av_cold void init_bundles(BinkContext *c)$/;"	f	file:
init_cavlc_level_tab	libavcodec/h264_cavlc.c	/^static av_cold void init_cavlc_level_tab(void){$/;"	f	file:
init_checksum	libavformat/aviobuf.c	/^void init_checksum(AVIOContext *s,$/;"	f
init_coef_vlc	libavcodec/wma.c	/^static void init_coef_vlc(VLC *vlc, uint16_t **prun_table,$/;"	f	file:
init_cook_mlt	libavcodec/cook.c	/^static av_cold int init_cook_mlt(COOKContext *q) {$/;"	f	file:
init_cook_vlc_tables	libavcodec/cook.c	/^static av_cold int init_cook_vlc_tables(COOKContext *q) {$/;"	f	file:
init_cplscales_table	libavcodec/cook.c	/^static av_cold void init_cplscales_table (COOKContext *q) {$/;"	f	file:
init_dc_vlc	libavcodec/intrax8.c	81;"	d	file:
init_dc_vlc	libavcodec/intrax8.c	94;"	d	file:
init_decoder	libavcodec/pgssubdec.c	/^static av_cold int init_decoder(AVCodecContext *avctx)$/;"	f	file:
init_demo	tests/rotozoom.c	/^static int init_demo(const char *filename)$/;"	f	file:
init_dequant4_coeff_table	libavcodec/h264.c	/^static void init_dequant4_coeff_table(H264Context *h){$/;"	f	file:
init_dequant8_coeff_table	libavcodec/h264.c	/^static void init_dequant8_coeff_table(H264Context *h){$/;"	f	file:
init_dequant_tables	libavcodec/h264.c	/^static void init_dequant_tables(H264Context *h){$/;"	f	file:
init_dequantizer	libavcodec/vp3.c	/^static void init_dequantizer(Vp3DecodeContext *s, int qpi)$/;"	f	file:
init_duplicate_context	libavcodec/mpegvideo.c	/^static int init_duplicate_context(MpegEncContext *s, MpegEncContext *base){$/;"	f	file:
init_entropy_decoder	libavcodec/apedec.c	/^static void init_entropy_decoder(APEContext * ctx)$/;"	f	file:
init_exp	libavcodec/wmaenc.c	/^static void init_exp(WMACodecContext *s, int ch, const int *exp_param){$/;"	f	file:
init_filter	libavcodec/apedec.c	/^static void init_filter(APEContext * ctx, APEFilter *f, int16_t * buf, int order)$/;"	f	file:
init_filter_param	libavfilter/vf_unsharp.c	/^static void init_filter_param(AVFilterContext *ctx, FilterParam *fp, const char *effect_type, int width)$/;"	f	file:
init_frame	libavcodec/flacenc.c	/^static void init_frame(FlacEncodeContext *s)$/;"	f	file:
init_frame_decoder	libavcodec/apedec.c	/^static void init_frame_decoder(APEContext * ctx)$/;"	f	file:
init_gain_table	libavcodec/cook.c	/^static av_cold void init_gain_table(COOKContext *q) {$/;"	f	file:
init_get_bits	libavcodec/get_bits.h	/^static inline void init_get_bits(GetBitContext *s,$/;"	f
init_h263_dc_for_msmpeg4	libavcodec/msmpeg4.c	/^static av_cold void init_h263_dc_for_msmpeg4(void)$/;"	f	file:
init_image	libavcodec/tiff.c	/^static int init_image(TiffContext *s)$/;"	f	file:
init_input	libavformat/utils.c	/^static int init_input(AVFormatContext *s, const char *filename)$/;"	f	file:
init_interlaced_ref	libavcodec/motion_est.c	/^static inline void init_interlaced_ref(MpegEncContext *s, int ref_index){$/;"	f	file:
init_lengths	libavcodec/bink.c	/^static void init_lengths(BinkContext *c, int width, int bw)$/;"	f	file:
init_lfe_fir	libavcodec/dcaenc.c	/^static void init_lfe_fir(void)$/;"	f	file:
init_loop_filter	libavcodec/vp3.c	/^static void init_loop_filter(Vp3DecodeContext *s)$/;"	f	file:
init_luts	libavcodec/j2kenc.c	/^static void init_luts()$/;"	f	file:
init_mdct_win	libavcodec/twinvq.c	/^static av_cold void init_mdct_win(TwinContext *tctx)$/;"	f	file:
init_multbl2	libavutil/aes.c	/^static void init_multbl2(uint8_t tbl[1024], const int c[4], const uint8_t *log8, const uint8_t *alog8, const uint8_t *sbox){$/;"	f	file:
init_mv	libavcodec/4xm.c	/^static void init_mv(FourXContext *f){$/;"	f	file:
init_mv4_ref	libavcodec/motion_est.c	/^static inline void init_mv4_ref(MotionEstContext *c){$/;"	f	file:
init_mv_penalty_and_fcode	libavcodec/ituh263enc.c	/^static void init_mv_penalty_and_fcode(MpegEncContext *s)$/;"	f	file:
init_mv_table	libavcodec/msmpeg4.c	/^static void init_mv_table(MVTable *tab)$/;"	f	file:
init_noise_samples	libavcodec/qdm2_tablegen.h	/^static av_cold void init_noise_samples(void) {$/;"	f
init_noise_samples	libavcodec/qdm2_tablegen.h	36;"	d
init_offset	libavcodec/shorten.c	/^static void init_offset(ShortenContext *s)$/;"	f	file:
init_opts	cmdutils.c	/^void init_opts(void)$/;"	f
init_opts	ffmpeg/cmdutils.c	/^void init_opts(void)$/;"	f
init_or_vlc	libavcodec/intrax8.c	115;"	d	file:
init_or_vlc	libavcodec/intrax8.c	97;"	d	file:
init_packetizer	libavformat/rtpdec_asf.c	/^static void init_packetizer(AVIOContext *pb, uint8_t *buf, int len)$/;"	f	file:
init_pass2	libavcodec/ratecontrol.c	/^static int init_pass2(MpegEncContext *s)$/;"	f	file:
init_poc	libavcodec/h264.c	/^static int init_poc(H264Context *h){$/;"	f	file:
init_pow2table	libavcodec/cook.c	/^static av_cold void init_pow2table(void){$/;"	f	file:
init_predictor_decoder	libavcodec/apedec.c	/^static void init_predictor_decoder(APEContext * ctx)$/;"	f	file:
init_pullup	libavfilter/libmpcodecs/vf_pullup.c	/^static void init_pullup(struct vf_instance *vf, mp_image_t *mpi)$/;"	f	file:
init_put_bits	libavcodec/put_bits.h	/^static inline void init_put_bits(PutBitContext *s, uint8_t *buffer, int buffer_size)$/;"	f
init_put_byte	libavformat/aviobuf.c	/^int init_put_byte(AVIOContext *s,$/;"	f
init_qexp	libavcodec/snow.c	/^static void init_qexp(void){$/;"	f	file:
init_qp	libavcodec/h264.h	/^    int init_qp;                \/\/\/< pic_init_qp_minus26 + 26$/;"	m	struct:PPS
init_qs	libavcodec/h264.h	/^    int init_qs;                \/\/\/< pic_init_qs_minus26 + 26$/;"	m	struct:PPS
init_quantization	libavcodec/j2kenc.c	/^static void init_quantization(J2kEncoderContext *s)$/;"	f	file:
init_quantized_coeffs_elem0	libavcodec/qdm2.c	/^static void init_quantized_coeffs_elem0 (int8_t *quantized_coeffs, GetBitContext *gb, int length)$/;"	f	file:
init_ref	libavcodec/motion_est.c	/^static inline void init_ref(MotionEstContext *c, uint8_t *src[3], uint8_t *ref[3], uint8_t *ref2[3], int x, int y, int ref_index){$/;"	f	file:
init_ref	libavcodec/snow.c	/^static inline void init_ref(MotionEstContext *c, uint8_t *src[3], uint8_t *ref[3], uint8_t *ref2[3], int x, int y, int ref_index){$/;"	f	file:
init_rl	libavcodec/mpegvideo.c	/^void init_rl(RLTable *rl, uint8_t static_store[2][2*MAX_RUN + MAX_LEVEL + 3])$/;"	f
init_rtp_handler	libavformat/rtsp.c	/^static void init_rtp_handler(RTPDynamicProtocolHandler *handler,$/;"	f	file:
init_sample_buffers	libavcodec/alacenc.c	/^static void init_sample_buffers(AlacEncodeContext *s, const int16_t *input_samples)$/;"	f	file:
init_scan_tables	libavcodec/h264.c	/^static void init_scan_tables(H264Context *h){$/;"	f	file:
init_slice_contexts	libavcodec/ffv1.c	/^static av_cold int init_slice_contexts(FFV1Context *f){$/;"	f	file:
init_slice_state	libavcodec/ffv1.c	/^static int init_slice_state(FFV1Context *f){$/;"	f	file:
init_state	libavfilter/avfilter.h	/^    } init_state;$/;"	m	struct:AVFilterLink	typeref:enum:AVFilterLink::__anon21
init_static	libavcodec/mlpdec.c	/^static av_cold void init_static(void)$/;"	f	file:
init_thread_copy	libavcodec/avcodec.h	/^    int (*init_thread_copy)(AVCodecContext *);$/;"	m	struct:AVCodec
init_thres2	libavfilter/libmpcodecs/vf_pp7.c	/^static void init_thres2(void){$/;"	f	file:
init_tile	libavcodec/j2kdec.c	/^static int init_tile(J2kDecoderContext *s, int tileno)$/;"	f	file:
init_tiles	libavcodec/j2kenc.c	/^static int init_tiles(J2kEncoderContext *s)$/;"	f	file:
init_tone_level_dequantization	libavcodec/qdm2.c	/^static void init_tone_level_dequantization (QDM2Context *q, GetBitContext *gb, int length)$/;"	f	file:
init_uni_ac_vlc	libavcodec/mpeg12enc.c	/^static void init_uni_ac_vlc(RLTable *rl, uint8_t *uni_ac_vlc_len){$/;"	f	file:
init_uni_dc_tab	libavcodec/mpeg4videoenc.c	/^static void init_uni_dc_tab(void)$/;"	f	file:
init_uni_h263_rl_tab	libavcodec/ituh263enc.c	/^static void init_uni_h263_rl_tab(RLTable *rl, uint32_t *bits_tab, uint8_t *len_tab){$/;"	f	file:
init_uni_mpeg4_rl_tab	libavcodec/mpeg4videoenc.c	/^static void init_uni_mpeg4_rl_tab(RLTable *rl, uint32_t *bits_tab, uint8_t *len_tab){$/;"	f	file:
init_vaapi_pic	libavcodec/vaapi_h264.c	/^static void init_vaapi_pic(VAPictureH264 *va_pic)$/;"	f	file:
init_vlc	libavcodec/get_bits.h	418;"	d
init_vlc_rl	libavcodec/mpegvideo.c	/^void init_vlc_rl(RLTable *rl)$/;"	f
init_vlc_sparse	libavcodec/bitstream.c	/^int init_vlc_sparse(VLC *vlc, int nb_bits, int nb_codes,$/;"	f
init_vlcs	libavcodec/4xm.c	/^static av_cold void init_vlcs(FourXContext *f){$/;"	f	file:
init_vlcs	libavcodec/asv1.c	/^static av_cold void init_vlcs(ASV1Context *a){$/;"	f	file:
initial_coeffs	libavcodec/apedec.c	/^static const int32_t initial_coeffs[4] = {$/;"	v	file:
initial_cpb_removal_delay	libavcodec/h264.h	/^    int initial_cpb_removal_delay[32]; \/\/\/< Initial timestamps for CPBs$/;"	m	struct:H264Context
initial_cpb_removal_delay_length	libavcodec/h264.h	/^    int initial_cpb_removal_delay_length; \/\/\/< initial_cpb_removal_delay_length_minus1 +1$/;"	m	struct:SPS
initial_decode_frame	libavcodec/dsicinav.c	/^    int initial_decode_frame;$/;"	m	struct:CinAudioContext	file:
initial_history	libavcodec/alacenc.c	/^    int initial_history;$/;"	m	struct:RiceContext	file:
initial_pause	libavformat/avformat.h	/^    attribute_deprecated unsigned int initial_pause:1;       \/**< Do not begin to play the stream$/;"	m	struct:AVFormatParameters
initial_pause	libavformat/rtsp.h	/^    int initial_pause;$/;"	m	struct:RTSPState
initial_states	libavcodec/ffv1.c	/^    uint8_t (*initial_states[MAX_QUANT_TABLES])[32];$/;"	m	struct:FFV1Context	file:
initialize_masks	libavfilter/libmpcodecs/vf_remove_logo.c	/^static void initialize_masks(vf_instance_t * vf)$/;"	f	file:
initialized	libavcodec/aacdec.c	/^    int             initialized;         \/\/\/< initilized after a valid extradata was seen$/;"	m	struct:LATMContext	file:
inner_add_yblock	libavcodec/dwt.h	/^    void (*inner_add_yblock)(const uint8_t *obmc, const int obmc_stride, uint8_t * * block, int b_w, int b_h, int src_x, int src_y, int src_stride, slice_buffer * sb, int add, uint8_t * dst8);$/;"	m	struct:DWTContext
inner_add_yblock_bw_16_obmc_32_mmx	libavcodec/x86/snowdsp_mmx.c	/^static void inner_add_yblock_bw_16_obmc_32_mmx(const uint8_t *obmc, const x86_reg obmc_stride, uint8_t * * block, int b_w, x86_reg b_h,$/;"	f	file:
inner_add_yblock_bw_16_obmc_32_sse2	libavcodec/x86/snowdsp_mmx.c	/^static void inner_add_yblock_bw_16_obmc_32_sse2(const uint8_t *obmc, const x86_reg obmc_stride, uint8_t * * block, int b_w, x86_reg b_h,$/;"	f	file:
inner_add_yblock_bw_8_obmc_16_bh_even_sse2	libavcodec/x86/snowdsp_mmx.c	/^static void inner_add_yblock_bw_8_obmc_16_bh_even_sse2(const uint8_t *obmc, const x86_reg obmc_stride, uint8_t * * block, int b_w, x86_reg b_h,$/;"	f	file:
inner_add_yblock_bw_8_obmc_16_mmx	libavcodec/x86/snowdsp_mmx.c	/^static void inner_add_yblock_bw_8_obmc_16_mmx(const uint8_t *obmc, const x86_reg obmc_stride, uint8_t * * block, int b_w, x86_reg b_h,$/;"	f	file:
inner_filter	libavcodec/vp8.h	/^    uint8_t inner_filter;$/;"	m	struct:__anon180
inner_limit	libavcodec/vp8.h	/^    uint8_t inner_limit;$/;"	m	struct:__anon180
input	libavformat/applehttp.c	/^    URLContext *input;$/;"	m	struct:variant	file:
input_channels	libavcodec/resample.c	/^    int input_channels, output_channels, filter_channels;$/;"	m	struct:ReSampleContext	file:
input_codecs	ffmpeg.c	/^static AVCodec **input_codecs = NULL;$/;"	v	file:
input_codecs	ffmpeg/ffmpeg.c	/^static AVCodec **input_codecs = NULL;$/;"	v	file:
input_cond	libavcodec/pthread.c	/^    pthread_cond_t input_cond;      \/\/\/< Used to wait for a new packet from the main thread.$/;"	m	struct:PerThreadContext	file:
input_config_props	ffplay.c	/^static int input_config_props(AVFilterLink *link)$/;"	f	file:
input_count	libavfilter/avfilter.h	/^    unsigned input_count;           \/\/\/< number of input pads$/;"	m	struct:AVFilterContext
input_filename	ffplay.c	/^static const char *input_filename;$/;"	v	file:
input_filename	ffprobe.c	/^static const char *input_filename;$/;"	v	file:
input_files	ffmpeg.c	/^static AVInputFile   *input_files   = NULL;$/;"	v	file:
input_files	ffmpeg/ffmpeg.c	/^static AVInputFile   *input_files   = NULL;$/;"	v	file:
input_files_ts_offset	ffmpeg.c	/^static int64_t input_files_ts_offset[MAX_FILES];$/;"	v	file:
input_files_ts_offset	ffmpeg/ffmpeg.c	/^static int64_t input_files_ts_offset[MAX_FILES];$/;"	v	file:
input_files_ts_scale	ffmpeg.c	/^static double *input_files_ts_scale[MAX_FILES] = {NULL};$/;"	v	file:
input_files_ts_scale	ffmpeg/ffmpeg.c	/^static double *input_files_ts_scale[MAX_FILES] = {NULL};$/;"	v	file:
input_filter	ffplay.c	/^static AVFilter input_filter =$/;"	v	file:
input_get_buffer	ffplay.c	/^static int input_get_buffer(AVCodecContext *codec, AVFrame *pic)$/;"	f	file:
input_init	ffplay.c	/^static int input_init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
input_is_pal	libavfilter/vf_scale.c	/^    int input_is_pal;           \/\/\/< set to 1 if the input format is paletted$/;"	m	struct:__anon18	file:
input_pads	libavfilter/avfilter.h	/^    AVFilterPad   *input_pads;      \/\/\/< array of input pads$/;"	m	struct:AVFilterContext
input_picture	libavcodec/mpegvideo.h	/^    Picture **input_picture;   \/\/\/< next pictures on display order for encoding$/;"	m	struct:MpegEncContext
input_picture	libavcodec/snow.c	/^    AVFrame input_picture;              \/\/\/< new_picture with the internal linesizes$/;"	m	struct:SnowContext	file:
input_picture_number	libavcodec/mpegvideo.h	/^    int input_picture_number;  \/\/\/< used to set pic->display_picture_number, should not be used for\/by anything else$/;"	m	struct:MpegEncContext
input_query_formats	ffplay.c	/^static int input_query_formats(AVFilterContext *ctx)$/;"	f	file:
input_reget_buffer	ffplay.c	/^static int input_reget_buffer(AVCodecContext *codec, AVFrame *pic)$/;"	f	file:
input_release_buffer	ffplay.c	/^static void input_release_buffer(AVCodecContext *codec, AVFrame *pic)$/;"	f	file:
input_request_frame	ffplay.c	/^static int input_request_frame(AVFilterLink *link)$/;"	f	file:
input_streams	ffmpeg.c	/^static AVInputStream *input_streams = NULL;$/;"	v	file:
input_streams	ffmpeg/ffmpeg.c	/^static AVInputStream *input_streams = NULL;$/;"	v	file:
input_sync	ffmpeg.c	/^static int input_sync;$/;"	v	file:
input_sync	ffmpeg/ffmpeg.c	/^static int input_sync;$/;"	v	file:
input_ts_offset	ffmpeg.c	/^static int64_t input_ts_offset = 0;$/;"	v	file:
input_ts_offset	ffmpeg/ffmpeg.c	/^static int64_t input_ts_offset = 0;$/;"	v	file:
input_uninit	ffplay.c	/^static void input_uninit(AVFilterContext *ctx)$/;"	f	file:
input_video_filter	ffmpeg.c	/^    AVFilterContext *input_video_filter;$/;"	m	struct:AVOutputStream	file:
input_video_filter	ffmpeg/ffmpeg.c	/^    AVFilterContext *input_video_filter;$/;"	m	struct:AVOutputStream	file:
inputs	libavfilter/avfilter.h	/^    AVFilterLink **inputs;          \/\/\/< array of pointers to input links$/;"	m	struct:AVFilterContext
inputs	libavfilter/avfilter.h	/^    const AVFilterPad *inputs;  \/\/\/< NULL terminated list of inputs. NULL if none$/;"	m	struct:AVFilter
insert_command_prefixes	libavformat/mmst.c	/^static void insert_command_prefixes(MMSContext *mms,$/;"	f	file:
insert_inout	libavfilter/graphparser.c	/^static void insert_inout(AVFilterInOut **inouts, AVFilterInOut *element)$/;"	f	file:
insert_mb_into_sb	libavcodec/escape124.c	/^static void insert_mb_into_sb(SuperBlock* sb, MacroBlock mb, unsigned index) {$/;"	f	file:
instance	libavfilter/vf_frei0r.c	/^    f0r_instance_t instance;$/;"	m	struct:Frei0rContext	file:
instance_number	libavformat/mxfenc.c	/^    uint32_t instance_number;$/;"	m	struct:MXFContext	file:
int32_to_float_fmul_scalar	libavcodec/fmtconvert.h	/^    void (*int32_to_float_fmul_scalar)(float *dst, const int *src, float mul, int len);$/;"	m	struct:FmtConvertContext
int32_to_float_fmul_scalar_altivec	libavcodec/ppc/fmtconvert_altivec.c	/^static void int32_to_float_fmul_scalar_altivec(float *dst, const int *src, float mul, int len)$/;"	f	file:
int32_to_float_fmul_scalar_c	libavcodec/fmtconvert.c	/^static void int32_to_float_fmul_scalar_c(float *dst, const int *src, float mul, int len){$/;"	f	file:
int32_to_float_fmul_scalar_sse	libavcodec/x86/fmtconvert_mmx.c	/^static void int32_to_float_fmul_scalar_sse(float *dst, const int *src, float mul, int len)$/;"	f	file:
int32_to_float_fmul_scalar_sse2	libavcodec/x86/fmtconvert_mmx.c	/^static void int32_to_float_fmul_scalar_sse2(float *dst, const int *src, float mul, int len)$/;"	f	file:
int64_arg	cmdutils.h	/^        int64_t *int64_arg;$/;"	m	union:__anon290::__anon291
int64_arg	ffmpeg/cmdutils.h	/^        int64_t *int64_arg;$/;"	m	union:__anon288::__anon289
int_arg	cmdutils.h	/^        int *int_arg;$/;"	m	union:__anon290::__anon291
int_arg	ffmpeg/cmdutils.h	/^        int *int_arg;$/;"	m	union:__anon288::__anon289
int_cos	tests/audiogen.c	/^static int int_cos(int a)$/;"	f	file:
int_cos	tests/videogen.c	/^static int int_cos(int a)$/;"	f	file:
int_init_altivec	libavcodec/ppc/int_altivec.c	/^void int_init_altivec(DSPContext* c, AVCodecContext *avctx)$/;"	f
int_pow	tests/rotozoom.c	/^static int64_t int_pow(int64_t a, int p)$/;"	f	file:
int_samples	libavcodec/sonic.c	/^    int *int_samples;$/;"	m	struct:SonicContext	file:
int_simd16_t	libavfilter/libmpcodecs/vf_fspp.c	/^typedef int32_t int_simd16_t;$/;"	t	file:
int_sin	tests/rotozoom.c	/^static int64_t int_sin(int64_t a)$/;"	f	file:
int_sqrt	tests/tiny_psnr.c	/^static uint64_t int_sqrt(uint64_t a)$/;"	f	file:
int_table	libavcodec/wma.h	/^    uint16_t *int_table[2];$/;"	m	struct:WMACodecContext
inter_ac_vlc_last_length	libavcodec/mpegvideo.h	/^    uint8_t *inter_ac_vlc_last_length;$/;"	m	struct:MpegEncContext
inter_ac_vlc_length	libavcodec/mpegvideo.h	/^    uint8_t *inter_ac_vlc_length;$/;"	m	struct:MpegEncContext
inter_base	libavcodec/ivi_common.h	/^    const uint16_t  *inter_base;    \/\/\/< quantization matrix for inter blocks$/;"	m	struct:__anon107
inter_gb	libavcodec/h264.h	/^    GetBitContext inter_gb;$/;"	m	struct:H264Context
inter_gb_ptr	libavcodec/h264.h	/^    GetBitContext *inter_gb_ptr;$/;"	m	struct:H264Context
inter_intra_pred	libavcodec/mpegvideo.h	/^    int inter_intra_pred;$/;"	m	struct:MpegEncContext
inter_level	libavcodec/h263data.h	/^const int8_t inter_level[102] = {$/;"	v
inter_matrix	ffmpeg.c	/^static uint16_t *inter_matrix = NULL;$/;"	v	file:
inter_matrix	ffmpeg/ffmpeg.c	/^static uint16_t *inter_matrix = NULL;$/;"	v	file:
inter_matrix	libavcodec/avcodec.h	/^    uint16_t *inter_matrix;$/;"	m	struct:AVCodecContext
inter_matrix	libavcodec/libxvidff.c	/^    unsigned char *inter_matrix;   \/**< I-Frame Quant Matrix *\/$/;"	m	struct:xvid_context	file:
inter_matrix	libavcodec/mpegvideo.h	/^    uint16_t inter_matrix[64];$/;"	m	struct:MpegEncContext
inter_mvmode	libavcodec/vp8.h	/^enum inter_mvmode {$/;"	g
inter_predict	libavcodec/vp8.c	/^void inter_predict(VP8Context *s, uint8_t *dst[3], VP8Macroblock *mb,$/;"	f	file:
inter_quant_bias	libavcodec/avcodec.h	/^    int inter_quant_bias;$/;"	m	struct:AVCodecContext
inter_quant_bias	libavcodec/mpegvideo.h	/^    int inter_quant_bias;    \/\/\/< bias for the quantizer$/;"	m	struct:MpegEncContext
inter_run	libavcodec/h263data.h	/^const int8_t inter_run[102] = {$/;"	v
inter_rvlc	libavcodec/mpeg4data.h	/^static const uint16_t inter_rvlc[170][2]={$/;"	v
inter_rvlc_level	libavcodec/mpeg4data.h	/^static const int8_t inter_rvlc_level[169]={$/;"	v
inter_rvlc_run	libavcodec/mpeg4data.h	/^static const int8_t inter_rvlc_run[169]={$/;"	v
inter_scal	libavcodec/indeo5.c	/^    int             inter_scal;      \/\/\/< signals a sequence of scalable inter frames$/;"	m	struct:__anon203	file:
inter_scale	libavcodec/ivi_common.h	/^    const uint8_t   *inter_scale;   \/\/\/< quantization coefficient for inter blocks$/;"	m	struct:__anon107
inter_scantable	libavcodec/mpegvideo.h	/^    ScanTable inter_scantable; \/\/\/< if inter == intra then intra should be used to reduce tha cache usage$/;"	m	struct:MpegEncContext
inter_splitmvmode	libavcodec/vp8.h	/^enum inter_splitmvmode {$/;"	g
inter_threshold	libavcodec/avcodec.h	/^    int inter_threshold;$/;"	m	struct:AVCodecContext
inter_vlc	libavcodec/h263data.h	/^const uint16_t inter_vlc[103][2] = {$/;"	v
inter_vlcs	libavcodec/rv34.c	/^static RV34VLC intra_vlcs[NUM_INTRA_TABLES], inter_vlcs[NUM_INTER_TABLES];$/;"	v	file:
interlace	libavcodec/vc1.h	/^    int interlace;        \/\/\/< Progressive\/interlaced (RPTFTM syntax element)$/;"	m	struct:VC1Context
interlace_bit_state	libavcodec/ffv1.c	/^    uint8_t interlace_bit_state[2];$/;"	m	struct:PlaneContext	file:
interlace_polarity	libavcodec/mjpegdec.h	/^    int interlace_polarity;$/;"	m	struct:MJpegDecodeContext
interlace_type	libavcodec/png.h	/^    int interlace_type;$/;"	m	struct:PNGDecContext
interlaced	libavcodec/dirac.h	/^    uint8_t interlaced;$/;"	m	struct:__anon227
interlaced	libavcodec/dnxhddata.h	/^    int interlaced;$/;"	m	struct:__anon281
interlaced	libavcodec/dnxhdenc.h	/^    int interlaced;$/;"	m	struct:DNXHDEncContext
interlaced	libavcodec/huffyuv.c	/^    int interlaced;$/;"	m	struct:HYuvContext	file:
interlaced	libavcodec/mjpegdec.h	/^    int interlaced;     \/* true if interlaced *\/$/;"	m	struct:MJpegDecodeContext
interlaced	libavfilter/avfilter.h	/^    int interlaced;             \/\/\/< is frame interlaced$/;"	m	struct:AVFilterBufferRefVideoProps
interlaced	libavfilter/vf_scale.c	/^    int interlaced;$/;"	m	struct:__anon18	file:
interlaced	libavformat/mxfenc.c	/^    int interlaced;          \/\/\/< wether picture is interlaced$/;"	m	struct:__anon458	file:
interlaced_dct	libavcodec/h264.h	39;"	d
interlaced_dct	libavcodec/mpegvideo.h	/^    int interlaced_dct;$/;"	m	struct:MpegEncContext
interlaced_dither_patterns	libavcodec/a64tables.h	/^static const uint8_t interlaced_dither_patterns[9][8][4] = {$/;"	v
interlaced_frame	libavformat/yuv4mpeg.c	/^    int interlaced_frame;$/;"	m	struct:frame_attributes	file:
interlaced_high	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned short interlaced_high;$/;"	m	struct:frame_stats	file:
interlaced_low	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned short interlaced_low;$/;"	m	struct:frame_stats	file:
interlaced_search	libavcodec/motion_est.c	/^static int interlaced_search(MpegEncContext *s, int ref_index,$/;"	f	file:
interlacing_leftweight	libavcodec/alacenc.c	/^    int interlacing_leftweight;$/;"	m	struct:AlacEncodeContext	file:
interlacing_shift	libavcodec/alacenc.c	/^    int interlacing_shift;$/;"	m	struct:AlacEncodeContext	file:
interleave	libavcodec/resample.c	/^static void interleave(short *output, short **input, int channels, int samples)$/;"	f	file:
interleave	libavfilter/libmpcodecs/vf_fil.c	/^    int interleave;$/;"	m	struct:vf_priv_s	file:
interleave	libavfilter/libmpcodecs/vf_il.c	/^    int interleave;$/;"	m	struct:FilterParam	file:
interleave	libavfilter/libmpcodecs/vf_il.c	/^static void interleave(uint8_t *dst, uint8_t *src, int w, int h, int dstStride, int srcStride, int interleave, int swap){$/;"	f	file:
interleaveBytes	libswscale/rgb2rgb.c	/^void (*interleaveBytes)(const uint8_t *src1, const uint8_t *src2, uint8_t *dst,$/;"	v
interleaveBytes	libswscale/x86/rgb2rgb_template.c	/^static void RENAME(interleaveBytes)(const uint8_t *src1, const uint8_t *src2, uint8_t *dest,$/;"	f	file:
interleaveBytes_c	libswscale/rgb2rgb_template.c	/^static void interleaveBytes_c(const uint8_t *src1, const uint8_t *src2,$/;"	f	file:
interleave_buffer	libavcodec/shorten.c	/^static int16_t * interleave_buffer(int16_t *samples, int nchan, int blocksize, int32_t **buffer) {$/;"	f	file:
interleave_high	libavcodec/ppc/vp3dsp_altivec.c	/^static const vec_u8 interleave_high =$/;"	v	file:
interleave_index	libavformat/rtpdec_qcelp.c	/^    int interleave_index;$/;"	m	struct:PayloadContext	file:
interleave_packet	libavformat/avformat.h	/^    int (*interleave_packet)(struct AVFormatContext *, AVPacket *out,$/;"	m	struct:AVOutputFormat
interleave_size	libavformat/rtpdec_qcelp.c	/^    int interleave_size;$/;"	m	struct:PayloadContext	file:
interleave_stereo	libavcodec/8svx.c	/^static void interleave_stereo(uint8_t *dst, const uint8_t *src, int size)$/;"	f	file:
interleaved	libavformat/a64.c	/^    int interleaved;$/;"	m	struct:A64MuxerContext	file:
interleaved_max	libavformat/rtsp.h	/^    int interleaved_min, interleaved_max;$/;"	m	struct:RTSPStream
interleaved_max	libavformat/rtsp.h	/^    int interleaved_min, interleaved_max;$/;"	m	struct:RTSPTransportField
interleaved_min	libavformat/rtsp.h	/^    int interleaved_min, interleaved_max;$/;"	m	struct:RTSPStream
interleaved_min	libavformat/rtsp.h	/^    int interleaved_min, interleaved_max;$/;"	m	struct:RTSPTransportField
interleaving	libavformat/rtpdec_amr.c	/^    int interleaving;$/;"	m	struct:PayloadContext	file:
intern_border_y	libavcodec/cavs.h	/^    uint8_t intern_border_y[26];$/;"	m	struct:__anon207
internal_buffer	libavcodec/avcodec.h	/^    void *internal_buffer;$/;"	m	struct:AVCodecContext
internal_buffer_count	libavcodec/avcodec.h	/^    int internal_buffer_count;$/;"	m	struct:AVCodecContext
internal_ftype	libavcodec/shorten.c	/^    int internal_ftype;$/;"	m	struct:ShortenContext	file:
interpfrm	libavcodec/vc1.h	/^    uint8_t interpfrm;$/;"	m	struct:VC1Context
interplay_delta_table	libavcodec/dpcm.c	/^static const int interplay_delta_table[] = {$/;"	v	file:
interpolate	libavcodec/cook.c	/^    void (* interpolate) (struct cook *q, float* buffer,$/;"	m	struct:cook	file:
interpolate	libavcodec/twinvq.c	/^static void interpolate(float *out, float v1, float v2, int size)$/;"	f	file:
interpolate_float	libavcodec/cook.c	/^static void interpolate_float(COOKContext *q, float* buffer,$/;"	f	file:
interpolate_isp	libavcodec/amrwbdec.c	/^static void interpolate_isp(double isp_q[4][LP_ORDER], const double *isp4_past)$/;"	f	file:
interpolate_lpc	libavcodec/qcelpdec.c	/^static void interpolate_lpc(QCELPContext *q, const float *curr_lspf,$/;"	f	file:
interpolate_lsf	libavcodec/amrnbdec.c	/^static void interpolate_lsf(float lsf_q[4][LP_FILTER_ORDER], float *lsf_new)$/;"	f	file:
interpolated	libavcodec/mpegvideo.h	/^    uint8_t *interpolated[3];$/;"	m	struct:Picture
interpolation_scheme	libavcodec/aac.h	/^    int interpolation_scheme;                       \/\/\/< Indicates the interpolation scheme used in the SBR QMF domain.$/;"	m	struct:__anon241
intlist_read	libavcodec/sonic.c	/^static inline int intlist_read(GetBitContext *gb, int *buf, int entries, int base_2_part)$/;"	f	file:
intlist_read	libavcodec/sonic.c	/^static int intlist_read(GetBitContext *gb, int *buf, int entries, int base_2_part)$/;"	f	file:
intlist_write	libavcodec/sonic.c	/^static inline int intlist_write(PutBitContext *pb, int *buf, int entries, int base_2_part)$/;"	f	file:
intlist_write	libavcodec/sonic.c	/^static int intlist_write(PutBitContext *pb, int *buf, int entries, int base_2_part)$/;"	f	file:
intra	libavcodec/vp8.h	/^        uint8_t intra;$/;"	m	struct:__anon182::__anon187
intra16x16_pred_mode	libavcodec/h264.h	/^    int intra16x16_pred_mode;$/;"	m	struct:H264Context
intra4x4_pred_mode	libavcodec/h264.h	/^    int8_t (*intra4x4_pred_mode);$/;"	m	struct:H264Context
intra4x4_pred_mode_cache	libavcodec/h264.h	/^    int8_t intra4x4_pred_mode_cache[5*8];$/;"	m	struct:H264Context
intra4x4_pred_mode_left	libavcodec/vp8.h	/^    uint8_t intra4x4_pred_mode_left[4];$/;"	m	struct:__anon182
intra4x4_pred_mode_mb	libavcodec/vp8.h	/^    uint8_t intra4x4_pred_mode_mb[16];$/;"	m	struct:__anon182
intra4x4_pred_mode_top	libavcodec/vp8.h	/^    uint8_t *intra4x4_pred_mode_top;$/;"	m	struct:__anon182
intra_ac_vlc_last_length	libavcodec/mpegvideo.h	/^    uint8_t *intra_ac_vlc_last_length;$/;"	m	struct:MpegEncContext
intra_ac_vlc_length	libavcodec/mpegvideo.h	/^    uint8_t *intra_ac_vlc_length;$/;"	m	struct:MpegEncContext
intra_base	libavcodec/ivi_common.h	/^    const uint16_t  *intra_base;    \/\/\/< quantization matrix for intra blocks$/;"	m	struct:__anon107
intra_dc_precision	ffmpeg.c	/^static int intra_dc_precision = 8;$/;"	v	file:
intra_dc_precision	ffmpeg/ffmpeg.c	/^static int intra_dc_precision = 8;$/;"	v	file:
intra_dc_precision	libavcodec/avcodec.h	/^     int intra_dc_precision;$/;"	m	struct:AVCodecContext
intra_dc_precision	libavcodec/mpegvideo.h	/^    int intra_dc_precision;$/;"	m	struct:MpegEncContext
intra_dc_threshold	libavcodec/mpegvideo.h	/^    int intra_dc_threshold;          \/\/\/< QP above whch the ac VLC should be used for intra dc$/;"	m	struct:MpegEncContext
intra_gb	libavcodec/h264.h	/^    GetBitContext intra_gb;$/;"	m	struct:H264Context
intra_gb_ptr	libavcodec/h264.h	/^    GetBitContext *intra_gb_ptr;$/;"	m	struct:H264Context
intra_h_scantable	libavcodec/mpegvideo.h	/^    ScanTable intra_h_scantable;$/;"	m	struct:MpegEncContext
intra_level_aic	libavcodec/h263data.h	/^static const int8_t intra_level_aic[102] = {$/;"	v
intra_matrix	ffmpeg.c	/^static uint16_t *intra_matrix = NULL;$/;"	v	file:
intra_matrix	ffmpeg/ffmpeg.c	/^static uint16_t *intra_matrix = NULL;$/;"	v	file:
intra_matrix	libavcodec/asv1.c	/^    uint16_t intra_matrix[64];$/;"	m	struct:ASV1Context	file:
intra_matrix	libavcodec/avcodec.h	/^    uint16_t *intra_matrix;$/;"	m	struct:AVCodecContext
intra_matrix	libavcodec/libxvidff.c	/^    unsigned char *intra_matrix;   \/**< P-Frame Quant Matrix *\/$/;"	m	struct:xvid_context	file:
intra_matrix	libavcodec/mpegvideo.h	/^    uint16_t intra_matrix[64];$/;"	m	struct:MpegEncContext
intra_only	ffmpeg.c	/^static int intra_only = 0;$/;"	v	file:
intra_only	ffmpeg/ffmpeg.c	/^static int intra_only = 0;$/;"	v	file:
intra_only	libavcodec/mpegvideo.h	/^    int intra_only;   \/\/\/< if true, only intra pictures are generated$/;"	m	struct:MpegEncContext
intra_pred_c	libavcodec/cavs.h	/^    void (*intra_pred_c[7])(uint8_t *d,uint8_t *top,uint8_t *left,int stride);$/;"	m	struct:__anon207
intra_pred_dc_128	libavcodec/cavs.c	/^static void intra_pred_dc_128(uint8_t *d,uint8_t *top,uint8_t *left,int stride) {$/;"	f	file:
intra_pred_down_left	libavcodec/cavs.c	/^static void intra_pred_down_left(uint8_t *d,uint8_t *top,uint8_t *left,int stride) {$/;"	f	file:
intra_pred_down_right	libavcodec/cavs.c	/^static void intra_pred_down_right(uint8_t *d,uint8_t *top,uint8_t *left,int stride) {$/;"	f	file:
intra_pred_horiz	libavcodec/cavs.c	/^static void intra_pred_horiz(uint8_t *d,uint8_t *top,uint8_t *left,int stride) {$/;"	f	file:
intra_pred_l	libavcodec/cavs.h	/^    void (*intra_pred_l[8])(uint8_t *d,uint8_t *top,uint8_t *left,int stride);$/;"	m	struct:__anon207
intra_pred_lp	libavcodec/cavs.c	/^static void intra_pred_lp(uint8_t *d,uint8_t *top,uint8_t *left,int stride) {$/;"	f	file:
intra_pred_lp_left	libavcodec/cavs.c	/^static void intra_pred_lp_left(uint8_t *d,uint8_t *top,uint8_t *left,int stride) {$/;"	f	file:
intra_pred_lp_top	libavcodec/cavs.c	/^static void intra_pred_lp_top(uint8_t *d,uint8_t *top,uint8_t *left,int stride) {$/;"	f	file:
intra_pred_plane	libavcodec/cavs.c	/^static void intra_pred_plane(uint8_t *d,uint8_t *top,uint8_t *left,int stride) {$/;"	f	file:
intra_pred_vert	libavcodec/cavs.c	/^static void intra_pred_vert(uint8_t *d,uint8_t *top,uint8_t *left,int stride) {$/;"	f	file:
intra_predict	libavcodec/vp8.c	/^void intra_predict(VP8Context *s, uint8_t *dst[3], VP8Macroblock *mb,$/;"	f	file:
intra_quant_bias	libavcodec/avcodec.h	/^    int intra_quant_bias;$/;"	m	struct:AVCodecContext
intra_quant_bias	libavcodec/mpegvideo.h	/^    int intra_quant_bias;    \/\/\/< bias for the quantizer$/;"	m	struct:MpegEncContext
intra_run_aic	libavcodec/h263data.h	/^static const int8_t intra_run_aic[102] = {$/;"	v
intra_rvlc	libavcodec/mpeg4data.h	/^static const uint16_t intra_rvlc[170][2]={$/;"	v
intra_rvlc_level	libavcodec/mpeg4data.h	/^static const int8_t intra_rvlc_level[169]={$/;"	v
intra_rvlc_run	libavcodec/mpeg4data.h	/^static const int8_t intra_rvlc_run[169]={$/;"	v
intra_scale	libavcodec/ivi_common.h	/^    const uint8_t   *intra_scale;   \/\/\/< quantization coefficient for intra blocks$/;"	m	struct:__anon107
intra_scantable	libavcodec/mpegvideo.h	/^    ScanTable intra_scantable;$/;"	m	struct:MpegEncContext
intra_types	libavcodec/rv34.h	/^    int8_t *intra_types;     \/\/\/< block types$/;"	m	struct:RV34DecContext
intra_types_hist	libavcodec/rv34.h	/^    int8_t *intra_types_hist;\/\/\/< old block types, used for prediction$/;"	m	struct:RV34DecContext
intra_types_stride	libavcodec/rv34.h	/^    int    intra_types_stride;\/\/\/< block types array stride$/;"	m	struct:RV34DecContext
intra_v_scantable	libavcodec/mpegvideo.h	/^    ScanTable intra_v_scantable;$/;"	m	struct:MpegEncContext
intra_vlc_aic	libavcodec/h263data.h	/^static const uint16_t intra_vlc_aic[103][2] = {$/;"	v
intra_vlc_format	libavcodec/mpegvideo.h	/^    int intra_vlc_format;$/;"	m	struct:MpegEncContext
intra_vlcs	libavcodec/rv34.c	/^static RV34VLC intra_vlcs[NUM_INTRA_TABLES], inter_vlcs[NUM_INTER_TABLES];$/;"	v	file:
inv_bits	libavcodec/ivi_common.c	/^static uint16_t inv_bits(uint16_t val, int nbits)$/;"	f	file:
inv_lift	libavcodec/dwt.c	/^inv_lift(IDWTELEM *dst, IDWTELEM *src, IDWTELEM *ref,$/;"	f	file:
inv_liftS	libavcodec/dwt.c	/^inv_liftS(IDWTELEM *dst, IDWTELEM *src, IDWTELEM *ref,$/;"	f	file:
inv_log2_table	libavcodec/g722.c	/^static const int16_t inv_log2_table[32] = {$/;"	v	file:
inv_non_linear_qscale	libavcodec/mpeg12enc.c	/^static const uint8_t inv_non_linear_qscale[13] = {$/;"	v	file:
inv_qscale	libavcodec/asv1.c	/^    int inv_qscale;$/;"	m	struct:ASV1Context	file:
inv_sbox	libavutil/aes.c	/^static uint8_t inv_sbox[256];$/;"	v	file:
inv_transform	libavcodec/ivi_common.h	/^    InvTransformPtr *inv_transform;$/;"	m	struct:__anon107
inverse	libavcodec/dct.h	/^    int inverse;$/;"	m	struct:DCTContext
inverse	libavcodec/fft.h	/^    int inverse;$/;"	m	struct:FFTContext
inverse	libavcodec/rdft.h	/^    int inverse;$/;"	m	struct:RDFTContext
inverse	libavformat/asfcrypt.c	/^static uint32_t inverse(uint32_t v) {$/;"	f	file:
inverse_channel_transform	libavcodec/wmaprodec.c	/^static void inverse_channel_transform(WMAProDecodeCtx *s)$/;"	f	file:
inverse_quant	libavcodec/g726.c	/^static inline int16_t inverse_quant(G726Context* c, int i)$/;"	f	file:
inverse_quant_coeff	libavcodec/imc.c	/^static int inverse_quant_coeff (IMCContext* q, int stream_format_code) {$/;"	f	file:
invert	libavcodec/tiff.c	/^    int invert;$/;"	m	struct:TiffContext	file:
invisible	libavcodec/vp8.h	/^    int invisible;$/;"	m	struct:__anon182
invradix_tab	libavcodec/cookdata.h	/^static const int invradix_tab[7] = {$/;"	v
io_buffer	libavformat/aviobuf.c	/^    uint8_t io_buffer[1];$/;"	m	struct:DynBuffer	file:
io_buffer_size	libavformat/aviobuf.c	/^    int io_buffer_size;$/;"	m	struct:DynBuffer	file:
io_method	libavdevice/v4l2.c	/^    enum io_method io_method;$/;"	m	struct:video_data	typeref:enum:video_data::io_method	file:
io_method	libavdevice/v4l2.c	/^enum io_method {$/;"	g	file:
io_mmap	libavdevice/v4l2.c	/^    io_mmap,$/;"	e	enum:io_method	file:
io_read	libavdevice/v4l2.c	/^    io_read,$/;"	e	enum:io_method	file:
io_userptr	libavdevice/v4l2.c	/^    io_userptr$/;"	e	enum:io_method	file:
iosync	libavfilter/libmpcodecs/vf_filmdint.c	/^    long in_inc, out_dec, iosync;$/;"	m	struct:vf_priv_s	file:
ipaddr	ffserver.c	/^    uint32_t ipaddr;$/;"	m	struct:RTSPActionServerSetup	file:
ipd_hist	libavcodec/aacps.h	/^    int8_t ipd_hist[PS_MAX_NR_IIDICC];$/;"	m	struct:__anon257
ipd_par	libavcodec/aacps.h	/^    int8_t ipd_par[PS_MAX_NUM_ENV][PS_MAX_NR_IIDICC]; \/\/<Inter-channel Phase Difference Parameters$/;"	m	struct:__anon257
ipdopd_reset	libavcodec/aacps.c	/^static void ipdopd_reset(int8_t *opd_hist, int8_t *ipd_hist)$/;"	f	file:
ipmovie_probe	libavformat/ipmovie.c	/^static int ipmovie_probe(AVProbeData *p)$/;"	f	file:
ipmovie_read_header	libavformat/ipmovie.c	/^static int ipmovie_read_header(AVFormatContext *s,$/;"	f	file:
ipmovie_read_packet	libavformat/ipmovie.c	/^static int ipmovie_read_packet(AVFormatContext *s,$/;"	f	file:
ipod_get_codec_tag	libavformat/movenc.c	/^static int ipod_get_codec_tag(AVFormatContext *s, MOVTrack *track)$/;"	f	file:
ipol	tests/rotozoom.c	/^static int ipol(uint8_t *src, int x, int y)$/;"	f	file:
ipvideo_decode_block	libavcodec/interplayvideo.c	/^static int (* const ipvideo_decode_block[])(IpvideoContext *s) = {$/;"	v	file:
ipvideo_decode_block16	libavcodec/interplayvideo.c	/^static int (* const ipvideo_decode_block16[])(IpvideoContext *s) = {$/;"	v	file:
ipvideo_decode_block_opcode_0x0	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x0(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x1	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x1(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x2	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x2(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x3	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x3(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x4	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x4(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x5	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x5(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x6	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x6(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x6_16	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x6_16(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x7	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x7(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x7_16	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x7_16(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x8	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x8(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x8_16	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x8_16(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x9	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x9(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0x9_16	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0x9_16(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xA	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xA(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xA_16	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xA_16(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xB	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xB(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xB_16	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xB_16(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xC	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xC(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xC_16	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xC_16(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xD	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xD(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xD_16	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xD_16(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xE	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xE(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xE_16	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xE_16(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_block_opcode_0xF	libavcodec/interplayvideo.c	/^static int ipvideo_decode_block_opcode_0xF(IpvideoContext *s)$/;"	f	file:
ipvideo_decode_end	libavcodec/interplayvideo.c	/^static av_cold int ipvideo_decode_end(AVCodecContext *avctx)$/;"	f	file:
ipvideo_decode_frame	libavcodec/interplayvideo.c	/^static int ipvideo_decode_frame(AVCodecContext *avctx,$/;"	f	file:
ipvideo_decode_init	libavcodec/interplayvideo.c	/^static av_cold int ipvideo_decode_init(AVCodecContext *avctx)$/;"	f	file:
ipvideo_decode_opcodes	libavcodec/interplayvideo.c	/^static void ipvideo_decode_opcodes(IpvideoContext *s)$/;"	f	file:
iq_matrix_buf_id	libavcodec/vaapi.h	/^    uint32_t iq_matrix_buf_id;$/;"	m	struct:vaapi_context
iquant	libavcodec/g726.c	/^    const int16_t* iquant;    \/**< inverse quantization table *\/$/;"	m	struct:G726Tables	file:
iquant_tbl16	libavcodec/g726.c	/^static const int16_t iquant_tbl16[] =$/;"	v	file:
iquant_tbl24	libavcodec/g726.c	/^static const int16_t iquant_tbl24[] =$/;"	v	file:
iquant_tbl32	libavcodec/g726.c	/^static const int16_t iquant_tbl32[] =$/;"	v	file:
iquant_tbl40	libavcodec/g726.c	/^static const int16_t iquant_tbl40[] =$/;"	v	file:
ir2_codes	libavcodec/indeo2data.h	/^static const uint16_t ir2_codes[IR2_CODES][2] = {$/;"	v
ir2_decode_end	libavcodec/indeo2.c	/^static av_cold int ir2_decode_end(AVCodecContext *avctx){$/;"	f	file:
ir2_decode_frame	libavcodec/indeo2.c	/^static int ir2_decode_frame(AVCodecContext *avctx,$/;"	f	file:
ir2_decode_init	libavcodec/indeo2.c	/^static av_cold int ir2_decode_init(AVCodecContext *avctx){$/;"	f	file:
ir2_decode_plane	libavcodec/indeo2.c	/^static int ir2_decode_plane(Ir2Context *ctx, int width, int height, uint8_t *dst, int stride,$/;"	f	file:
ir2_decode_plane_inter	libavcodec/indeo2.c	/^static int ir2_decode_plane_inter(Ir2Context *ctx, int width, int height, uint8_t *dst, int stride,$/;"	f	file:
ir2_get_code	libavcodec/indeo2.c	/^static inline int ir2_get_code(GetBitContext *gb)$/;"	f	file:
ir2_luma_table	libavcodec/indeo2data.h	/^static const uint8_t ir2_luma_table[256] = {$/;"	v
ir2_vlc	libavcodec/indeo2.c	/^static VLC ir2_vlc;$/;"	v	file:
ir_filter_medium	libavcodec/amrnbdata.h	/^static const float ir_filter_medium[AMR_SUBFRAME_SIZE] = {$/;"	v
ir_filter_mid	libavcodec/amrwbdata.h	/^static const float ir_filter_mid[64] = {$/;"	v
ir_filter_onset	libavcodec/amrnbdec.c	/^    uint8_t                 ir_filter_onset; \/\/\/< flag for impulse response filter strength$/;"	m	struct:AMRContext	file:
ir_filter_str	libavcodec/amrwbdata.h	/^static const float ir_filter_str[64] = {$/;"	v
ir_filter_strong	libavcodec/amrnbdata.h	/^static const float ir_filter_strong[AMR_SUBFRAME_SIZE] = {$/;"	v
ir_filter_strong_MODE_7k95	libavcodec/amrnbdata.h	/^static const float ir_filter_strong_MODE_7k95[AMR_SUBFRAME_SIZE] = {$/;"	v
ir_filters_lookup	libavcodec/amrnbdata.h	/^static const float *ir_filters_lookup[2]           = {$/;"	v
ir_filters_lookup	libavcodec/amrwbdata.h	/^static const float *ir_filters_lookup[2] = {$/;"	v
ir_filters_lookup_MODE_7k95	libavcodec/amrnbdata.h	/^static const float *ir_filters_lookup_MODE_7k95[2] = {$/;"	v
irdft	libavcodec/wmavoice.c	/^    RDFTContext rdft, irdft;      \/\/\/< contexts for FFT-calculation in the$/;"	m	struct:__anon157	file:
is	ffplay.c	/^    VideoState *is;$/;"	m	struct:__anon2	file:
is16	libavcodec/rv34.h	/^    int is16;                \/\/\/< current block has additional 16x16 specific features or not$/;"	m	struct:RV34DecContext
is16BPS	libswscale/swscale_internal.h	357;"	d
is32	libavcodec/flacdec.c	/^    int is32;                               \/\/\/< flag to indicate if output should be 32-bit instead of 16-bit$/;"	m	struct:FLACContext	file:
is34bands	libavcodec/aacps.h	/^    int    is34bands;$/;"	m	struct:__anon257
is34bands_old	libavcodec/aacps.h	/^    int    is34bands_old;$/;"	m	struct:__anon257
is9_OR_10BPS	libswscale/swscale_internal.h	385;"	d
isALPHA	libswscale/swscale-test.c	48;"	d	file:
isALPHA	libswscale/swscale_internal.h	488;"	d
isAnyRGB	libswscale/swscale_internal.h	484;"	d
isBE	libswscale/swscale_internal.h	386;"	d
isBGRinBytes	libswscale/swscale_internal.h	477;"	d
isBGRinInt	libswscale/swscale_internal.h	452;"	d
isGray	libswscale/swscale-test.c	38;"	d	file:
isGray	libswscale/swscale_internal.h	424;"	d
isGray16	libswscale/swscale_internal.h	430;"	d
isHorizDC_C	libpostproc/postprocess.c	/^static inline int isHorizDC_C(uint8_t src[], int stride, PPContext *c)$/;"	f	file:
isHorizMinMaxOk_C	libpostproc/postprocess.c	/^static inline int isHorizMinMaxOk_C(uint8_t src[], int stride, int QP)$/;"	f	file:
isNBPS	libswscale/swscale_internal.h	371;"	d
isPacked	libswscale/swscale_internal.h	497;"	d
isPlanar8YUV	libswscale/swscale_internal.h	387;"	d
isPlanarYUV	libswscale/swscale_internal.h	398;"	d
isRGBA32	libswscale/swscale_unscaled.c	258;"	d	file:
isRGBinBytes	libswscale/swscale_internal.h	470;"	d
isRGBinInt	libswscale/swscale_internal.h	434;"	d
isSupportedIn	libswscale/utils.c	68;"	d	file:
isSupportedOut	libswscale/utils.c	138;"	d	file:
isVertDC_C	libpostproc/postprocess.c	/^static inline int isVertDC_C(uint8_t src[], int stride, PPContext *c)$/;"	f	file:
isVertMinMaxOk_C	libpostproc/postprocess.c	/^static inline int isVertMinMaxOk_C(uint8_t src[], int stride, int QP)$/;"	f	file:
isX86	libavfilter/libmpcodecs/cpudetect.h	/^    int isX86;$/;"	m	struct:cpucaps_s
isYUV	libswscale/swscale_internal.h	419;"	d
is_16bpp	libavcodec/interplayvideo.c	/^    int is_16bpp;$/;"	m	struct:IpvideoContext	file:
is_2d_trans	libavcodec/ivi_common.h	/^    int             is_2d_trans;    \/\/\/< 1 indicates that the two-dimensional inverse transform is used$/;"	m	struct:__anon107
is_70012	libavcodec/crystalhd.c	/^    uint8_t is_70012;$/;"	m	struct:__anon268	file:
is_alpha	libavcodec/imgconvert.c	/^    uint8_t is_alpha : 1;    \/**< true if alpha can be specified *\/$/;"	m	struct:PixFmtInfo	file:
is_avc	libavcodec/h264.h	/^    int is_avc; \/\/\/< this flag is != 0 if codec is avc1$/;"	m	struct:H264Context
is_channels_set	libavcodec/dca.c	/^    int is_channels_set;        \/\/\/< check for if the channel number is already set$/;"	m	struct:__anon93	file:
is_complex	libavcodec/h264.h	/^    int is_complex;$/;"	m	struct:H264Context
is_connected	libavformat/avio.h	/^    int is_connected;$/;"	m	struct:URLContext
is_connected	libavformat/udp.c	/^    int is_connected;$/;"	m	struct:__anon320	file:
is_connected	libavformat/url.h	/^    int is_connected;$/;"	m	struct:URLContext
is_copy	libavcodec/avcodec.h	/^    int is_copy;$/;"	m	struct:AVCodecContext
is_done	libavfilter/vsrc_movie.c	/^    int is_done;$/;"	m	struct:__anon38	file:
is_dos_path	libavformat/os_support.h	/^static inline int is_dos_path(const char *path)$/;"	f
is_dvd	libavformat/mpegenc.c	/^    int is_dvd;$/;"	m	struct:__anon429	file:
is_empty	libavcodec/ivi_common.h	/^    int             is_empty;       \/\/\/< = 1 if this band doesn't contain any data$/;"	m	struct:__anon107
is_empty	libavcodec/ivi_common.h	/^    int         is_empty;  \/\/\/< = 1 if this tile doesn't contain any data$/;"	m	struct:__anon106
is_eol	libavcodec/ass_split.c	/^static inline int is_eol(char buf)$/;"	f	file:
is_eol	libavformat/srtdec.c	/^static inline int is_eol(char c)$/;"	f	file:
is_feed	ffserver.c	/^    int is_feed;         \/* true if it is a feed *\/$/;"	m	struct:FFStream	file:
is_finished	libavformat/bethsoftvid.c	/^    int is_finished;$/;"	m	struct:BVID_DemuxContext	file:
is_float	libavcodec/tta.c	/^    int flags, channels, bps, is_float, data_length;$/;"	m	struct:TTAContext	file:
is_full_screen	ffplay.c	/^static int is_full_screen;$/;"	v	file:
is_halfpel	libavcodec/ivi_common.h	/^    int             is_halfpel;     \/\/\/< precision of the motion compensation: 0 - fullpel, 1 - halfpel$/;"	m	struct:__anon107
is_idct	libavcodec/dct-test.c	/^  enum { FDCT, IDCT } is_idct;$/;"	m	struct:algo	typeref:enum:algo::__anon91	file:
is_in	configure	/^is_in(){$/;"	f
is_indeo3	libavformat/sierravmd.c	/^    int is_indeo3;$/;"	m	struct:VmdDemuxContext	file:
is_input	libavformat/rtmpproto.c	/^    int           is_input;                   \/\/\/< input\/output flag$/;"	m	struct:RTMPContext	file:
is_intra	libavcodec/vc1.h	/^    uint8_t *is_intra_base, *is_intra;$/;"	m	struct:VC1Context
is_intra_base	libavcodec/vc1.h	/^    uint8_t *is_intra_base, *is_intra;$/;"	m	struct:VC1Context
is_intra_more_likely	libavcodec/error_resilience.c	/^static int is_intra_more_likely(MpegEncContext *s){$/;"	f	file:
is_intra_only	libavformat/utils.c	/^static int is_intra_only(AVCodecContext *enc){$/;"	f	file:
is_keyframe	libavformat/rtpdec_vp8.c	/^    int is_keyframe;$/;"	m	struct:PayloadContext	file:
is_major_sync_unit	libavcodec/mlpdec.c	/^    int         is_major_sync_unit;$/;"	m	struct:MLPDecodeContext	file:
is_mpeg2	libavformat/mpegenc.c	/^    int is_mpeg2;$/;"	m	struct:__anon429	file:
is_multicast	ffserver.c	/^    int is_multicast;$/;"	m	struct:FFStream	file:
is_multicast	libavformat/udp.c	/^    int is_multicast;$/;"	m	struct:__anon320	file:
is_mv_diff_gt_3	libavcodec/rv34.c	/^static int is_mv_diff_gt_3(int16_t (*motion_val)[2], int step)$/;"	f	file:
is_nal	libavcodec/crystalhd.c	/^    uint8_t is_nal;$/;"	m	struct:__anon268	file:
is_newline	libavfilter/vf_drawtext.c	/^static inline int is_newline(uint32_t c)$/;"	f	file:
is_number	libavformat/id3v2.c	/^static int is_number(const char *str)$/;"	f	file:
is_odml	libavformat/avidec.c	/^    int is_odml;$/;"	m	struct:__anon451	file:
is_packed_rgb	libavfilter/vf_drawtext.c	/^    int is_packed_rgb;$/;"	m	struct:__anon24	file:
is_packetized	ffserver.c	/^    int is_packetized; \/* if true, the stream is packetized *\/$/;"	m	struct:HTTPContext	file:
is_past_recording_time	ffmpeg.c	/^    int is_past_recording_time;$/;"	m	struct:AVInputStream	file:
is_past_recording_time	ffmpeg/ffmpeg.c	/^    int is_past_recording_time;$/;"	m	struct:AVInputStream	file:
is_pipe	libavformat/img2.c	/^    int is_pipe;$/;"	m	struct:__anon389	file:
is_qcelp_13k_guid	libavformat/qcp.c	/^static int is_qcelp_13k_guid(const uint8_t *guid) {$/;"	f	file:
is_rgb	libavfilter/vf_lut.c	/^    int is_rgb, is_yuv;$/;"	m	struct:__anon23	file:
is_saved	libavcodec/aac.h	/^    int is_saved;                 \/\/\/< Set if elements have stored overlap from previous frame.$/;"	m	struct:__anon246
is_scalable	libavcodec/indeo5.c	/^    int             is_scalable;$/;"	m	struct:__anon203	file:
is_second_half_of_fft32	libavcodec/fft.c	/^static int is_second_half_of_fft32(int i, int n)$/;"	f	file:
is_slice_short	libavcodec/dxva2_h264.c	/^static int is_slice_short(struct dxva_context *ctx)$/;"	f	file:
is_start	ffmpeg.c	/^    int is_start;            \/* is 1 at the start and after a discontinuity *\/$/;"	m	struct:AVInputStream	file:
is_start	ffmpeg/ffmpeg.c	/^    int is_start;            \/* is 1 at the start and after a discontinuity *\/$/;"	m	struct:AVInputStream	file:
is_streamed	libavformat/asfenc.c	/^    int is_streamed;$/;"	m	struct:__anon470	file:
is_streamed	libavformat/avio.h	/^    attribute_deprecated int is_streamed;$/;"	m	struct:__anon396
is_streamed	libavformat/avio.h	/^    int is_streamed;  \/**< true if streamed (no seek possible), default = false *\/$/;"	m	struct:URLContext
is_streamed	libavformat/url.h	/^    int is_streamed;            \/**< true if streamed (no seek possible), default = false *\/$/;"	m	struct:URLContext
is_supported	libavformat/rtpenc.c	/^static int is_supported(enum CodecID id)$/;"	f	file:
is_svcd	libavformat/mpegenc.c	/^    int is_svcd;$/;"	m	struct:__anon429	file:
is_synced	libavcodec/dirac_parser.c	/^    int is_synced;$/;"	m	struct:DiracParseContext	file:
is_table	libavcodec/mpegaudiodec.c	/^static INTFLOAT is_table[2][16];$/;"	v	file:
is_table_lsf	libavcodec/mpegaudiodec.c	/^static INTFLOAT is_table_lsf[2][2][16];$/;"	v	file:
is_transp	libavcodec/dvdsubdec.c	/^static int is_transp(const uint8_t *buf, int pitch, int n,$/;"	f	file:
is_var_size	libavcodec/flac.h	/^    int is_var_size;                \/**< specifies if the stream uses variable$/;"	m	struct:FLACFrameInfo
is_vbr	libavcodec/mlp_parser.h	/^    int is_vbr;                 \/\/\/< Stream is VBR instead of CBR$/;"	m	struct:MLPHeaderInfo
is_vcd	libavformat/mpegenc.c	/^    int is_vcd;$/;"	m	struct:__anon429	file:
is_ver4	libavformat/smacker.c	/^    int is_ver4;$/;"	m	struct:SmackerContext	file:
is_yuv	libavfilter/vf_lut.c	/^    int is_rgb, is_yuv;$/;"	m	struct:__anon23	file:
is_yuv_planar	libavcodec/imgconvert.c	/^static inline int is_yuv_planar(const PixFmtInfo *ps)$/;"	f	file:
isf_add_mean_and_past	libavcodec/amrwbdec.c	/^static void isf_add_mean_and_past(float *isf_q, float *isf_past)$/;"	f	file:
isf_cur	libavcodec/amrwbdec.c	/^    float                      isf_cur[LP_ORDER]; \/\/\/< working ISF vector from current frame$/;"	m	struct:__anon64	file:
isf_init	libavcodec/amrwbdata.h	/^static const int16_t isf_init[LP_ORDER] = {$/;"	v
isf_mean	libavcodec/amrwbdata.h	/^static const int16_t isf_mean[LP_ORDER] = {$/;"	v
isf_past_final	libavcodec/amrwbdec.c	/^    float               isf_past_final[LP_ORDER]; \/\/\/< final processed ISF vector of the previous frame$/;"	m	struct:__anon64	file:
isf_q_past	libavcodec/amrwbdec.c	/^    float                   isf_q_past[LP_ORDER]; \/\/\/< quantized ISF vector of the previous frame$/;"	m	struct:__anon64	file:
isfp_inter	libavcodec/amrwbdata.h	/^static const float isfp_inter[4] = { 0.45, 0.8, 0.96, 1.0 };$/;"	v
iso_clip	libavcodec/jpegls.c	/^static inline int iso_clip(int v, int vmin, int vmax){$/;"	f	file:
isom	libavformat/isom.h	/^    int isom;             \/\/\/< 1 if file is ISO Media (mp4\/3gp)$/;"	m	struct:MOVContext
isp	libavcodec/amrwbdec.c	/^    double                      isp[4][LP_ORDER]; \/\/\/< ISP vectors from current frame$/;"	m	struct:__anon64	file:
isp_id	libavcodec/amrwbdata.h	/^    uint16_t isp_id[7];                    \/\/\/< index of ISP subvectors$/;"	m	struct:__anon111
isp_sub4_past	libavcodec/amrwbdec.c	/^    double               isp_sub4_past[LP_ORDER]; \/\/\/< ISP vector for the 4th subframe of the previous frame$/;"	m	struct:__anon64	file:
iss_probe	libavformat/iss.c	/^static int iss_probe(AVProbeData *p)$/;"	f	file:
iss_read_header	libavformat/iss.c	/^static av_cold int iss_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
iss_read_packet	libavformat/iss.c	/^static int iss_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
ist_index	ffmpeg.c	/^    int ist_index;        \/* index of first stream in ist_table *\/$/;"	m	struct:AVInputFile	file:
ist_index	ffmpeg/ffmpeg.c	/^    int ist_index;        \/* index of first stream in ist_table *\/$/;"	m	struct:AVInputFile	file:
isws	libavfilter/vf_scale.c	/^    struct SwsContext *isws[2]; \/\/\/< software scaler context for interlaced material$/;"	m	struct:__anon18	typeref:struct:__anon18::SwsContext	file:
italic	libavcodec/ass_split.h	/^    int   italic;         \/**< whether text is italic (1) or not (0) *\/$/;"	m	struct:__anon249
item	libavfilter/libmpcodecs/vf.h	/^    const char *item;$/;"	m	struct:vf_seteq_s
item_name	libavutil/log.h	/^    const char* (*item_name)(void* ctx);$/;"	m	struct:__anon308
iterative_me	libavcodec/snow.c	/^static void iterative_me(SnowContext *s){$/;"	f	file:
ittrans	libavcodec/rv34.c	/^static const int ittrans[9] = {$/;"	v	file:
ittrans16	libavcodec/rv34.c	/^static const int ittrans16[4] = {$/;"	v	file:
itunes_metadata	libavformat/isom.h	/^    int itunes_metadata;  \/\/\/< metadata are itunes style$/;"	m	struct:MOVContext
iv	libavformat/applehttp.c	/^     char iv[35];$/;"	m	struct:key_info	file:
iv	libavformat/applehttp.c	/^    uint8_t iv[16];$/;"	m	struct:segment	file:
iv	libavformat/crypto.c	/^    uint8_t *iv;$/;"	m	struct:__anon432	file:
iv_Decode_Chunk	libavcodec/indeo3.c	/^static void iv_Decode_Chunk(Indeo3DecodeContext *s,$/;"	f	file:
iv_alloc_frames	libavcodec/indeo3.c	/^static av_cold int iv_alloc_frames(Indeo3DecodeContext *s)$/;"	f	file:
iv_decode_frame	libavcodec/indeo3.c	/^static int iv_decode_frame(AVCodecContext *avctx,$/;"	f	file:
iv_frame	libavcodec/indeo3.c	/^    YUVBufs iv_frame[2];$/;"	m	struct:Indeo3DecodeContext	file:
iv_free_func	libavcodec/indeo3.c	/^static av_cold void iv_free_func(Indeo3DecodeContext *s)$/;"	f	file:
ivf_write_header	libavformat/ivfenc.c	/^static int ivf_write_header(AVFormatContext *s)$/;"	f	file:
ivf_write_packet	libavformat/ivfenc.c	/^static int ivf_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
ivi5_base_quant_4x4_inter	libavcodec/indeo5data.h	/^static const uint16_t ivi5_base_quant_4x4_inter[16] = {$/;"	v
ivi5_base_quant_4x4_intra	libavcodec/indeo5data.h	/^static const uint16_t ivi5_base_quant_4x4_intra[16] = {$/;"	v
ivi5_base_quant_8x8_inter	libavcodec/indeo5data.h	/^static const uint16_t ivi5_base_quant_8x8_inter[5][64] = {$/;"	v
ivi5_base_quant_8x8_intra	libavcodec/indeo5data.h	/^static const uint16_t ivi5_base_quant_8x8_intra[5][64] = {$/;"	v
ivi5_common_pic_sizes	libavcodec/indeo5data.h	/^static const uint8_t ivi5_common_pic_sizes[30] = {$/;"	v
ivi5_scale_quant_4x4_inter	libavcodec/indeo5data.h	/^static const uint8_t ivi5_scale_quant_4x4_inter[24] = {$/;"	v
ivi5_scale_quant_4x4_intra	libavcodec/indeo5data.h	/^static const uint8_t ivi5_scale_quant_4x4_intra[24] = {$/;"	v
ivi5_scale_quant_8x8_inter	libavcodec/indeo5data.h	/^static const uint8_t ivi5_scale_quant_8x8_inter[5][24] = {$/;"	v
ivi5_scale_quant_8x8_intra	libavcodec/indeo5data.h	/^static const uint8_t ivi5_scale_quant_8x8_intra[5][24] = {$/;"	v
ivi_calc_band_checksum	libavcodec/ivi_common.c	/^uint16_t ivi_calc_band_checksum (IVIBandDesc *band)$/;"	f
ivi_check_band	libavcodec/ivi_common.c	/^int ivi_check_band (IVIBandDesc *band, const uint8_t *ref, int pitch)$/;"	f
ivi_pic_config_cmp	libavcodec/ivi_common.h	/^static inline int ivi_pic_config_cmp(IVIPicConfig *str1, IVIPicConfig *str2)$/;"	f
ivi_scale_mv	libavcodec/ivi_common.h	/^static inline int ivi_scale_mv(int mv, int mv_scale)$/;"	f
ivlen	libavformat/crypto.c	/^    int ivlen;$/;"	m	struct:__anon432	file:
j2k_flush	libavcodec/j2kdec.c	/^static void j2k_flush(J2kDecoderContext *s)$/;"	f	file:
j2k_flush	libavcodec/j2kenc.c	/^static void j2k_flush(J2kEncoderContext *s)$/;"	f	file:
j2kdec_init	libavcodec/j2kdec.c	/^static av_cold int j2kdec_init(AVCodecContext *avctx)$/;"	f	file:
j2kenc_destroy	libavcodec/j2kenc.c	/^static int j2kenc_destroy(AVCodecContext *avctx)$/;"	f	file:
j2kenc_init	libavcodec/j2kenc.c	/^static av_cold int j2kenc_init(AVCodecContext *avctx)$/;"	f	file:
j_ac_vlc	libavcodec/intrax8.c	/^static VLC j_ac_vlc[2][2][8];  \/\/[quant<13],[intra\/inter],[select]$/;"	v	file:
j_ac_vlc	libavcodec/intrax8.h	/^    VLC * j_ac_vlc[4];\/\/they point to the static j_mb_vlc$/;"	m	struct:__anon134
j_dc_vlc	libavcodec/intrax8.c	/^static VLC j_dc_vlc[2][8];     \/\/[quant], [select]$/;"	v	file:
j_dc_vlc	libavcodec/intrax8.h	/^    VLC * j_dc_vlc[3];$/;"	m	struct:__anon134
j_orient_vlc	libavcodec/intrax8.c	/^static VLC j_orient_vlc[2][4]; \/\/[quant], [select]$/;"	v	file:
j_orient_vlc	libavcodec/intrax8.h	/^    VLC * j_orient_vlc;$/;"	m	struct:__anon134
j_rev_dct	libavcodec/jrevdct.c	/^void j_rev_dct(DCTBLOCK data)$/;"	f
j_rev_dct1	libavcodec/jrevdct.c	/^void j_rev_dct1(DCTBLOCK data){$/;"	f
j_rev_dct2	libavcodec/jrevdct.c	/^void j_rev_dct2(DCTBLOCK data){$/;"	f
j_rev_dct4	libavcodec/jrevdct.c	/^void j_rev_dct4(DCTBLOCK data)$/;"	f
j_rev_dct_arm_add	libavcodec/arm/dsputil_init_arm.c	/^static void j_rev_dct_arm_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
j_rev_dct_arm_put	libavcodec/arm/dsputil_init_arm.c	/^static void j_rev_dct_arm_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
j_type	libavcodec/wmv2.h	/^    int j_type;$/;"	m	struct:Wmv2Context
j_type_bit	libavcodec/wmv2.h	/^    int j_type_bit;$/;"	m	struct:Wmv2Context
jack_xrun	libavdevice/jack_audio.c	/^    int             jack_xrun;$/;"	m	struct:__anon315	file:
jitter	libavformat/rtpdec.h	/^    uint32_t jitter;            \/\/\/< estimated jitter.$/;"	m	struct:__anon333
job_count	libavcodec/pthread.c	/^    int job_count;$/;"	m	struct:ThreadContext	file:
job_sem	libavcodec/w32thread.c	/^    HANDLE job_sem;$/;"	m	struct:ThreadContext	file:
job_size	libavcodec/pthread.c	/^    int job_size;$/;"	m	struct:ThreadContext	file:
jobnr	libavcodec/w32thread.c	/^    int *jobnr;$/;"	m	struct:ThreadContext	file:
joint	libavcodec/wavpack.c	/^    int joint;$/;"	m	struct:WavpackFrameContext	file:
joint_decode	libavcodec/cook.c	/^static void joint_decode(COOKContext *q, COOKSubpacket *p, float* mlt_buffer1,$/;"	f	file:
joint_huff	libavcodec/dca.c	/^    int joint_huff[DCA_PRIM_CHANNELS_MAX];                       \/\/\/< joint subband scale factors codebook$/;"	m	struct:__anon93	file:
joint_intensity	libavcodec/dca.c	/^    int joint_intensity[DCA_PRIM_CHANNELS_MAX];     \/\/\/< joint intensity coding index$/;"	m	struct:__anon93	file:
joint_scale_factor	libavcodec/dca.c	/^    int joint_scale_factor[DCA_PRIM_CHANNELS_MAX][DCA_SUBBANDS]; \/\/\/< joint subband scale factors$/;"	m	struct:__anon93	file:
joint_stereo	libavcodec/alsdec.c	/^    int joint_stereo;         \/\/\/< joint stereo: 1 = on, 0 = off$/;"	m	struct:__anon150	file:
joint_stereo	libavcodec/cook.c	/^    int                 joint_stereo;$/;"	m	struct:__anon230	file:
jp2_find_codestream	libavcodec/j2kdec.c	/^static int jp2_find_codestream(J2kDecoderContext *s)$/;"	f	file:
jpeg2000_encoder	libavcodec/j2kenc.c	/^AVCodec jpeg2000_encoder = {$/;"	v
jpeg_header	libavcodec/mjpeg2jpeg_bsf.c	/^static const uint8_t jpeg_header[] = {$/;"	v	file:
jpeg_parse	libavcodec/mjpeg_parser.c	/^static int jpeg_parse(AVCodecParserContext *s,$/;"	f	file:
jpeg_put_comments	libavcodec/mjpegenc.c	/^static void jpeg_put_comments(MpegEncContext *s)$/;"	f	file:
jpeg_table_header	libavcodec/mjpegenc.c	/^static void jpeg_table_header(MpegEncContext *s)$/;"	f	file:
jpg	libavcodec/mxpegdec.c	/^    MJpegDecodeContext jpg;$/;"	m	struct:MXpegDecodeContext	file:
js_blocks	libavcodec/alsdec.c	/^    int          js_blocks;         \/\/\/< true if this block contains a difference signal$/;"	m	struct:__anon153	file:
js_subband_start	libavcodec/cook.c	/^    int                 js_subband_start;$/;"	m	struct:__anon230	file:
js_switch	libavcodec/alsdec.c	/^    unsigned int js_switch;         \/\/\/< if true, joint-stereo decoding is enforced$/;"	m	struct:__anon152	file:
js_vlc_bits	libavcodec/cook.c	/^    int                 js_vlc_bits;$/;"	m	struct:__anon230	file:
junk_bottom	libavfilter/libmpcodecs/pullup.h	/^    int junk_left, junk_right, junk_top, junk_bottom;$/;"	m	struct:pullup_context
junk_left	libavfilter/libmpcodecs/pullup.h	/^    int junk_left, junk_right, junk_top, junk_bottom;$/;"	m	struct:pullup_context
junk_right	libavfilter/libmpcodecs/pullup.h	/^    int junk_left, junk_right, junk_top, junk_bottom;$/;"	m	struct:pullup_context
junk_top	libavfilter/libmpcodecs/pullup.h	/^    int junk_left, junk_right, junk_top, junk_bottom;$/;"	m	struct:pullup_context
junklength	libavformat/ape.c	/^    uint32_t junklength;$/;"	m	struct:__anon335	file:
just_return	libavcodec/dsputil.c	/^static void just_return(void *mem av_unused, int stride av_unused, int h av_unused) { return; }$/;"	f	file:
k	libavcodec/apedec.c	/^    uint32_t k;$/;"	m	struct:APERice	file:
k	libavcodec/sbr.h	/^    unsigned           k[5]; \/\/\/< k0, k1, k2$/;"	m	struct:__anon57
k0	libavcodec/tta.c	/^    uint32_t k0, k1, sum0, sum1;$/;"	m	struct:TTARice	file:
k1	libavcodec/tta.c	/^    uint32_t k0, k1, sum0, sum1;$/;"	m	struct:TTARice	file:
kVGT_TAG	libavcodec/eatgv.c	38;"	d	file:
kVGT_TAG	libavformat/electronicarts.c	46;"	d	file:
k_modifier	libavcodec/alacenc.c	/^    int k_modifier;$/;"	m	struct:RiceContext	file:
k_to_i_20	libavcodec/aacpsdata.c	/^static const int8_t k_to_i_20[] = {$/;"	v	file:
k_to_i_34	libavcodec/aacpsdata.c	/^static const int8_t k_to_i_34[] = {$/;"	v	file:
k_x	libavcodec/vc1.h	/^    int k_x;              \/\/\/< Number of bits for MVs (depends on MV range)$/;"	m	struct:VC1Context
k_y	libavcodec/vc1.h	/^    int k_y;              \/\/\/< Number of bits for MVs (depends on MV range)$/;"	m	struct:VC1Context
kalman_smoothen	libavcodec/wmavoice.c	/^static int kalman_smoothen(WMAVoiceContext *s, int pitch,$/;"	f	file:
kernel	libavfilter/vf_libopencv.c	/^    IplConvKernel *kernel;$/;"	m	struct:__anon15	file:
key	libavformat/applehttp.c	/^    char key[MAX_URL_SIZE];$/;"	m	struct:segment	file:
key	libavformat/applehttp.c	/^    uint8_t key[16];$/;"	m	struct:variant	file:
key	libavformat/avformat.h	/^    const uint8_t *key;$/;"	m	struct:AVFormatContext
key	libavformat/crypto.c	/^    uint8_t *key;$/;"	m	struct:__anon432	file:
key	libavformat/mxf.h	/^    UID key;$/;"	m	struct:__anon325
key	libavformat/mxfdec.c	/^    const UID key;$/;"	m	struct:__anon448	file:
key	libavutil/dict.h	/^    char *key;$/;"	m	struct:__anon295
key_blocks	libavcodec/flashsv2enc.c	/^    Block *key_blocks;$/;"	m	struct:FlashSV2Context	file:
key_frame	libavcodec/avcodec.h	/^    int key_frame;$/;"	m	struct:AVCodecParserContext
key_frame	libavcodec/flashsv2enc.c	/^    uint8_t *key_frame;$/;"	m	struct:FlashSV2Context	file:
key_frame	libavcodec/libdirac_libschro.h	/^    uint16_t key_frame;$/;"	m	struct:FfmpegDiracSchroEncodedFrame
key_frame	libavfilter/avfilter.h	/^    int key_frame;              \/\/\/< 1 -> keyframe, 0-> not$/;"	m	struct:AVFilterBufferRefVideoProps
key_info	libavformat/applehttp.c	/^struct key_info {$/;"	s	file:
key_shift_left	libavutil/des.c	/^static uint64_t key_shift_left(uint64_t CDn) {$/;"	f	file:
key_type	libavformat/applehttp.c	/^    enum KeyType key_type;$/;"	m	struct:segment	typeref:enum:segment::KeyType	file:
key_url	libavformat/applehttp.c	/^    char key_url[MAX_URL_SIZE];$/;"	m	struct:variant	file:
keybuffer	libavcodec/flashsv2enc.c	/^    uint8_t *keybuffer;$/;"	m	struct:FlashSV2Context	file:
keyframe	libavcodec/snow.c	/^    int keyframe;$/;"	m	struct:SnowContext	file:
keyframe	libavcodec/vp3.c	/^    int keyframe;$/;"	m	struct:Vp3DecodeContext	file:
keyframe	libavcodec/vp8.h	/^    uint8_t keyframe;$/;"	m	struct:__anon182
keyframe	libavformat/segafilm.c	/^  int keyframe;$/;"	m	struct:__anon328	file:
keyframe	libavformat/sierravmd.c	/^  int keyframe;$/;"	m	struct:__anon349	file:
keyframe_count	libavformat/isom.h	/^    unsigned int keyframe_count;$/;"	m	struct:MOVStreamContext
keyframe_mask	libavcodec/libtheoraenc.c	/^    int         keyframe_mask;$/;"	m	struct:TheoraContext	file:
keyframe_seek	libavformat/oggdec.h	/^    int keyframe_seek;$/;"	m	struct:ogg_stream
keyframes	libavformat/isom.h	/^    int *keyframes;$/;"	m	struct:MOVStreamContext
keyint	libavcodec/msvideo1enc.c	/^    int keyint;$/;"	m	struct:Msvideo1EncContext	file:
keyint	libavcodec/zmbvenc.c	/^    int keyint, curfrm;$/;"	m	struct:ZmbvEncContext	file:
keyint_min	libavcodec/avcodec.h	/^    int keyint_min;$/;"	m	struct:AVCodecContext
keylen	libavformat/avformat.h	/^    int keylen;$/;"	m	struct:AVFormatContext
keylen	libavformat/crypto.c	/^    int keylen;$/;"	m	struct:__anon432	file:
kfgshift	libavformat/oggenc.c	/^    int kfgshift;$/;"	m	struct:__anon380	file:
klv_ber_length	libavformat/mxfenc.c	/^static int klv_ber_length(uint64_t len)$/;"	f	file:
klv_decode_ber_length	libavformat/mxfdec.c	/^static int64_t klv_decode_ber_length(AVIOContext *pb)$/;"	f	file:
klv_encode_ber4_length	libavformat/mxfenc.c	/^static void klv_encode_ber4_length(AVIOContext *pb, int len)$/;"	f	file:
klv_encode_ber_length	libavformat/mxfenc.c	/^static int klv_encode_ber_length(AVIOContext *pb, uint64_t len)$/;"	f	file:
klv_fill_key	libavformat/mxfenc.c	/^static const uint8_t klv_fill_key[]                = { 0x06,0x0E,0x2B,0x34,0x01,0x01,0x01,0x01,0x03,0x01,0x02,0x10,0x01,0x00,0x00,0x00 };$/;"	v	file:
klv_fill_size	libavformat/mxfenc.c	/^static unsigned klv_fill_size(uint64_t size)$/;"	f	file:
klv_read_packet	libavformat/mxfdec.c	/^static int klv_read_packet(KLVPacket *klv, AVIOContext *pb)$/;"	f	file:
kmax_tab	libavcodec/cookdata.h	/^static const int kmax_tab[7] = {$/;"	v
kmvc_decode_inter_8x8	libavcodec/kmvc.c	/^static void kmvc_decode_inter_8x8(KmvcContext * ctx, const uint8_t * src, int w, int h)$/;"	f	file:
kmvc_decode_intra_8x8	libavcodec/kmvc.c	/^static void kmvc_decode_intra_8x8(KmvcContext * ctx, const uint8_t * src, int w, int h)$/;"	f	file:
kmvc_getbit	libavcodec/kmvc.c	60;"	d	file:
kmvc_init_getbits	libavcodec/kmvc.c	58;"	d	file:
ksum	libavcodec/apedec.c	/^    uint32_t ksum;$/;"	m	struct:APERice	file:
kx	libavcodec/sbr.h	/^    unsigned           kx[2];$/;"	m	struct:__anon57
l	libavcodec/alpha/asm.h	/^struct unaligned_long { uint64_t l; } __attribute__((packed));$/;"	m	struct:unaligned_long
l	libavutil/intreadwrite.h	/^union unaligned_16 { uint16_t l; } __attribute__((packed)) av_alias;$/;"	m	union:unaligned_16
l	libavutil/intreadwrite.h	/^union unaligned_32 { uint32_t l; } __attribute__((packed)) av_alias;$/;"	m	union:unaligned_32
l	libavutil/intreadwrite.h	/^union unaligned_64 { uint64_t l; } __attribute__((packed)) av_alias;$/;"	m	union:unaligned_64
l1	libswscale/bfin/internal_bfin.S	/^        l1 = 0;$/;"	d
l1	libswscale/bfin/internal_bfin.S	/^        l1 = COEFF_LEN;$/;"	d
l1_unscale	libavcodec/mpegaudiodec.c	/^static inline int l1_unscale(int n, int mant, int scale_factor)$/;"	f	file:
l2_unscale_group	libavcodec/mpegaudiodec.c	/^static inline int l2_unscale_group(int steps, int mant, int scale_factor)$/;"	f	file:
l2s_dia_search	libavcodec/motion_est_template.c	/^static int l2s_dia_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
l3_unscale	libavcodec/mpegaudiodec.c	/^static inline int l3_unscale(int value, int exponent)$/;"	f	file:
l_stride	libavcodec/cavs.h	/^    int l_stride, c_stride;$/;"	m	struct:__anon207
lag	libavcodec/aac.h	/^    int16_t lag;$/;"	m	struct:__anon238
lag_calc_zero_run	libavcodec/lagarith.c	/^static uint8_t lag_calc_zero_run(int8_t x)$/;"	f	file:
lag_decode_arith_plane	libavcodec/lagarith.c	/^static int lag_decode_arith_plane(LagarithContext *l, uint8_t *dst,$/;"	f	file:
lag_decode_end	libavcodec/lagarith.c	/^static av_cold int lag_decode_end(AVCodecContext *avctx)$/;"	f	file:
lag_decode_frame	libavcodec/lagarith.c	/^static int lag_decode_frame(AVCodecContext *avctx,$/;"	f	file:
lag_decode_init	libavcodec/lagarith.c	/^static av_cold int lag_decode_init(AVCodecContext *avctx)$/;"	f	file:
lag_decode_line	libavcodec/lagarith.c	/^static int lag_decode_line(LagarithContext *l, lag_rac *rac,$/;"	f	file:
lag_decode_prob	libavcodec/lagarith.c	/^static int lag_decode_prob(GetBitContext *gb, uint32_t *value)$/;"	f	file:
lag_decode_zero_run_line	libavcodec/lagarith.c	/^static int lag_decode_zero_run_line(LagarithContext *l, uint8_t *dst,$/;"	f	file:
lag_get_rac	libavcodec/lagarithrac.h	/^static inline uint8_t lag_get_rac(lag_rac *l)$/;"	f
lag_pred_line	libavcodec/lagarith.c	/^static void lag_pred_line(LagarithContext *l, uint8_t *buf,$/;"	f	file:
lag_rac	libavcodec/lagarithrac.h	/^typedef struct lag_rac {$/;"	s
lag_rac	libavcodec/lagarithrac.h	/^} lag_rac;$/;"	t	typeref:struct:lag_rac
lag_rac_init	libavcodec/lagarithrac.c	/^void lag_rac_init(lag_rac *l, GetBitContext *gb, int length)$/;"	f
lag_rac_refill	libavcodec/lagarithrac.h	/^static inline void lag_rac_refill(lag_rac *l)$/;"	f
lag_read_prob_header	libavcodec/lagarith.c	/^static int lag_read_prob_header(lag_rac *rac, GetBitContext *gb)$/;"	f	file:
lambda	libavcodec/aacenc.h	/^    float lambda;$/;"	m	struct:AACEncContext
lambda	libavcodec/dnxhdenc.h	/^    unsigned lambda;$/;"	m	struct:DNXHDEncContext
lambda	libavcodec/j2kenc.c	/^    int64_t lambda;$/;"	m	struct:__anon63	file:
lambda	libavcodec/mpegvideo.h	/^    unsigned int lambda;        \/\/\/< lagrange multipler used in rate distortion$/;"	m	struct:MpegEncContext
lambda	libavcodec/roqvideo.h	/^    uint64_t lambda;$/;"	m	struct:RoqContext
lambda	libavcodec/snow.c	/^    int lambda;$/;"	m	struct:SnowContext	file:
lambda2	libavcodec/mpegvideo.h	/^    unsigned int lambda2;       \/\/\/< (lambda*lambda) >> FF_LAMBDA_SHIFT$/;"	m	struct:MpegEncContext
lambda2	libavcodec/snow.c	/^    int lambda2;$/;"	m	struct:SnowContext	file:
lambda_table	libavcodec/mpegvideo.h	/^    int *lambda_table;$/;"	m	struct:MpegEncContext
lame_apply_block_type	libavcodec/aacpsy.c	/^static void lame_apply_block_type(AacPsyChannel *ctx, FFPsyWindowInfo *wi, int uselongblock)$/;"	f	file:
lame_calc_attack_threshold	libavcodec/aacpsy.c	/^static float lame_calc_attack_threshold(int bitrate)$/;"	f	file:
lame_window_init	libavcodec/aacpsy.c	/^static void lame_window_init(AacPsyContext *ctx, AVCodecContext *avctx) {$/;"	f	file:
lang	libavformat/matroskadec.c	/^    char *lang;$/;"	m	struct:__anon366	file:
lang_table	libavformat/avlanguage.c	/^static const LangEntry lang_table[] = {$/;"	v	file:
lang_table_compare	libavformat/avlanguage.c	/^static int lang_table_compare(const void *lhs, const void *rhs)$/;"	f	file:
lang_table_counts	libavformat/avlanguage.c	/^static const uint16_t lang_table_counts[] = { 484, 20, 184 };$/;"	v	file:
lang_table_offsets	libavformat/avlanguage.c	/^static const uint16_t lang_table_offsets[] = { 0, 484, 504 };$/;"	v	file:
language	libavformat/matroskadec.c	/^    char    *language;$/;"	m	struct:__anon361	file:
language	libavformat/movenc.h	/^    int         language;$/;"	m	struct:MOVIndex
language_code	libavformat/movenc.c	/^static uint16_t language_code(const char *str)$/;"	f	file:
lar	libavcodec/gsmdec_data.h	/^    int lar[2][8];$/;"	m	struct:__anon67
lar_idx	libavcodec/gsmdec_data.h	/^    int lar_idx;$/;"	m	struct:__anon67
last	ffserver.c	/^    struct in_addr last;$/;"	m	struct:IPAddressACL	typeref:struct:IPAddressACL::in_addr	file:
last	libavcodec/bink.c	/^    AVFrame        pic, last;$/;"	m	struct:BinkContext	file:
last	libavcodec/rl.h	/^    int last;                      \/\/\/< number of values for last = 0$/;"	m	struct:RLTable
last	libavcodec/smacker.c	/^    int *last;$/;"	m	struct:DBCtx	file:
last	libavcodec/truemotion2.c	/^    int *last;$/;"	m	struct:TM2Context	file:
last	libavcodec/vp8.h	/^        uint8_t last;$/;"	m	struct:__anon182::__anon187
last	libavfilter/libmpcodecs/pullup.h	/^    struct pullup_field *first, *last, *head;$/;"	m	struct:pullup_context	typeref:struct:pullup_context::
last	libavfilter/libmpcodecs/vf_decimate.c	/^    int max, last, cnt;$/;"	m	struct:vf_priv_s	file:
last	libavfilter/vf_fifo.c	/^    BufPic *last;   \/\/\/< last buffered picture$/;"	m	struct:__anon4	file:
last2_frame	libavcodec/eacmv.c	/^    AVFrame last2_frame;  \/\/\/< second-last$/;"	m	struct:CmvContext	file:
lastA	libavcodec/apedec.c	/^    int32_t lastA[2];$/;"	m	struct:APEPredictor	file:
lastInChrBuf	libswscale/swscale_internal.h	/^    int       lastInChrBuf;       \/\/\/< Last scaled horizontal chroma     line from source in the ring buffer.$/;"	m	struct:SwsContext
lastInLumBuf	libswscale/swscale_internal.h	/^    int       lastInLumBuf;       \/\/\/< Last scaled horizontal luma\/alpha line from source in the ring buffer.$/;"	m	struct:SwsContext
lastSample	libavcodec/roqaudioenc.c	/^    short lastSample[2];$/;"	m	struct:__anon165	file:
last_IP_duration	libavformat/avformat.h	/^    int last_IP_duration;$/;"	m	struct:AVStream
last_IP_pts	libavformat/avformat.h	/^    int64_t last_IP_pts;$/;"	m	struct:AVStream
last_IP_pts	libavformat/seek.h	/^    int64_t                 last_IP_pts;$/;"	m	struct:AVParserStreamState
last_acb_type	libavcodec/wmavoice.c	/^    int last_acb_type;            \/\/\/< frame type [0-2] of the previous frame$/;"	m	struct:__anon157	file:
last_asked_format	ffmpeg.c	/^static const char *last_asked_format = NULL;$/;"	v	file:
last_asked_format	ffmpeg/ffmpeg.c	/^static const char *last_asked_format = NULL;$/;"	v	file:
last_bitoffset	libavcodec/wma.h	/^    int last_bitoffset;$/;"	m	struct:WMACodecContext
last_bitrate	libavcodec/libvo-amrwbenc.c	/^    int    last_bitrate;$/;"	m	struct:AMRWBContext	file:
last_bits	libavcodec/mpegvideo.h	/^    int last_bits; \/\/\/< temp var used for calculating the above vars$/;"	m	struct:MpegEncContext
last_bits_used	libavcodec/mpc.h	/^    int last_bits_used;$/;"	m	struct:__anon179
last_block_max_depth	libavcodec/snow.c	/^    int last_block_max_depth;$/;"	m	struct:SnowContext	file:
last_block_pos	libavcodec/twinvq.c	/^    int last_block_pos[2];$/;"	m	struct:TwinContext	file:
last_buf	libavcodec/mpegaudiodec.c	/^    uint8_t last_buf[2*BACKSTEP_SIZE + EXTRABYTES];$/;"	m	struct:MPADecodeContext	file:
last_buf_size	libavcodec/mpegaudiodec.c	/^    int last_buf_size;$/;"	m	struct:MPADecodeContext	file:
last_bytes_read	libavformat/rtmpproto.c	/^    uint32_t      last_bytes_read;            \/\/\/< number of bytes read last reported to server$/;"	m	struct:RTMPContext	file:
last_cc	libavformat/mpegts.c	/^    int last_cc; \/* last cc code (-1 if first packet) *\/$/;"	m	struct:MpegTSFilter	file:
last_cmd_time	libavformat/rtsp.h	/^    int64_t last_cmd_time;$/;"	m	struct:RTSPState
last_code	libavcodec/lzwenc.c	/^    int last_code;           \/\/\/< Value of last output code or LZW_PREFIX_EMPTY$/;"	m	struct:LZWEncodeState	file:
last_codebook_gain	libavcodec/qcelpdec.c	/^    float    last_codebook_gain;$/;"	m	struct:__anon225	file:
last_coeff	libavcodec/qdm2data.h	/^static const uint8_t last_coeff[3] = {$/;"	v
last_dc	libavcodec/4xm.c	/^    int last_dc;$/;"	m	struct:FourXContext	file:
last_dc	libavcodec/dnxhddec.c	/^    int last_dc[3];$/;"	m	struct:__anon154	file:
last_dc	libavcodec/mdec.c	/^    int last_dc[3];$/;"	m	struct:MDECContext	file:
last_dc	libavcodec/mjpegdec.h	/^    int last_dc[MAX_COMPONENTS]; \/* last DEQUANTIZED dc (XXX: am I right to do that ?) *\/$/;"	m	struct:MJpegDecodeContext
last_dc	libavcodec/mpegvideo.h	/^    int last_dc[3];                \/\/\/< last DC values for MPEG1$/;"	m	struct:MpegEncContext
last_deltaset	libavcodec/truemotion1.c	/^    int last_deltaset, last_vectable;$/;"	m	struct:TrueMotion1Context	file:
last_diag_mc	libavcodec/snow.c	/^    int last_diag_mc;$/;"	m	struct:Plane	file:
last_dts	libavcodec/avcodec.h	/^    int64_t last_dts;$/;"	m	struct:AVCodecParserContext
last_dts	libavformat/avformat.h	/^        int64_t last_dts;$/;"	m	struct:AVStream::__anon480
last_duration	libavformat/wav.c	/^    int last_duration;$/;"	m	struct:__anon409	file:
last_fft_im	libavcodec/imc.c	/^    float last_fft_im[COEFFS];$/;"	m	struct:__anon90	file:
last_field	libavformat/gxf.c	/^    int64_t last_field;$/;"	m	struct:gxf_stream_info	file:
last_flags	libavformat/nut.h	/^    int last_flags;$/;"	m	struct:__anon492
last_frame	libavcodec/aacenc.h	/^    int last_frame;$/;"	m	struct:AACEncContext
last_frame	libavcodec/eacmv.c	/^    AVFrame last_frame;   \/\/\/< last$/;"	m	struct:CmvContext	file:
last_frame	libavcodec/eamad.c	/^    AVFrame last_frame;$/;"	m	struct:MadContext	file:
last_frame	libavcodec/eatgv.c	/^    AVFrame last_frame;$/;"	m	struct:TgvContext	file:
last_frame	libavcodec/interplayvideo.c	/^    AVFrame last_frame;$/;"	m	struct:IpvideoContext	file:
last_frame	libavcodec/nellymoserenc.c	/^    int             last_frame;$/;"	m	struct:NellyMoserEncodeContext	file:
last_frame	libavcodec/roqvideo.h	/^    AVFrame *last_frame;$/;"	m	struct:RoqContext
last_frame	libavcodec/vp3.c	/^    AVFrame last_frame;$/;"	m	struct:Vp3DecodeContext	file:
last_frame	libavcodec/xan.c	/^    AVFrame last_frame;$/;"	m	struct:XanContext	file:
last_frame	libavformat/thp.c	/^    int              last_frame;$/;"	m	struct:ThpDemuxContext	file:
last_frame_bits	libavformat/vqf.c	/^    uint8_t last_frame_bits;$/;"	m	struct:VqfContext	file:
last_frame_length	libavcodec/tta.c	/^    int frame_length, last_frame_length, total_frames;$/;"	m	struct:TTAContext	file:
last_frame_time	libavdevice/bktr.c	/^uint64_t last_frame_time;$/;"	v
last_granule	libavformat/oggenc.c	/^    int64_t last_granule; \/\/\/< last packet granule$/;"	m	struct:__anon380	file:
last_hcoeff	libavcodec/snow.c	/^    int8_t last_hcoeff[HTAPS_MAX\/2];$/;"	m	struct:Plane	file:
last_htaps	libavcodec/snow.c	/^    int last_htaps;$/;"	m	struct:Plane	file:
last_i_start	ffplay.c	/^    int last_i_start;$/;"	m	struct:VideoState	file:
last_in_packet_buffer	libavformat/avformat.h	/^    struct AVPacketList *last_in_packet_buffer;$/;"	m	struct:AVStream	typeref:struct:AVStream::AVPacketList
last_index	libavcodec/parser.h	/^    int last_index;$/;"	m	struct:ParseContext
last_indexed_edit_unit	libavformat/mxfenc.c	/^    int last_indexed_edit_unit;$/;"	m	struct:MXFContext	file:
last_indexed_pts	libavformat/asfenc.c	/^    int64_t last_indexed_pts;$/;"	m	struct:__anon470	file:
last_job_cond	libavcodec/pthread.c	/^    pthread_cond_t last_job_cond;$/;"	m	struct:ThreadContext	file:
last_key_frame	libavcodec/flashsv2enc.c	/^    int last_key_frame;$/;"	m	struct:FlashSV2Context	file:
last_key_frame	libavcodec/flashsvenc.c	/^    int             last_key_frame;$/;"	m	struct:FlashSVContext	file:
last_key_index	libavformat/mxfenc.c	/^    int last_key_index;  \/\/\/< index of last key frame$/;"	m	struct:MXFContext	file:
last_kf_pts	libavformat/oggenc.c	/^    int64_t last_kf_pts;$/;"	m	struct:__anon380	file:
last_lambda_for	libavcodec/mpegvideo.h	/^    int last_lambda_for[5];     \/\/\/< last lambda for a specific pict type$/;"	m	struct:MpegEncContext
last_load_time	libavformat/applehttp.c	/^    int64_t last_load_time;$/;"	m	struct:variant	file:
last_load_time	libavformat/applehttpproto.c	/^    int64_t last_load_time;$/;"	m	struct:AppleHTTPContext	file:
last_max_band	libavcodec/mpc.h	/^    int maxbands, last_max_band;$/;"	m	struct:__anon179
last_mb_var_sum	libavcodec/ratecontrol.h	/^    int last_mb_var_sum;$/;"	m	struct:RateControlContext
last_mc_mb_var_sum	libavcodec/ratecontrol.h	/^    int last_mc_mb_var_sum;$/;"	m	struct:RateControlContext
last_motion4	libavcodec/roqvideo.h	/^    motion_vect *last_motion4;$/;"	m	struct:RoqContext
last_motion8	libavcodec/roqvideo.h	/^    motion_vect *last_motion8;$/;"	m	struct:RoqContext
last_mpi	libavfilter/libmpcodecs/vf_harddup.c	/^    mp_image_t *last_mpi;$/;"	m	struct:vf_priv_s	file:
last_mv	libavcodec/mpegvideo.h	/^    int last_mv[2][2][2];             \/\/\/< last MV, used for MV prediction in MPEG1 & B-frame MPEG4$/;"	m	struct:MpegEncContext
last_mv_dir	libavcodec/mpegvideo.h	/^    int last_mv_dir;         \/\/\/< last mv_dir, used for b frame encoding$/;"	m	struct:MpegEncContext
last_mv_scale	libavcodec/snow.c	/^    int last_mv_scale;$/;"	m	struct:SnowContext	file:
last_nnz	libavcodec/mjpegdec.h	/^    uint8_t *last_nnz[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext
last_non_b_pict_type	libavcodec/mpegvideo.h	/^    int last_non_b_pict_type;   \/\/\/< used for mpeg4 gmc b-frames & ratecontrol$/;"	m	struct:MpegEncContext
last_non_b_pict_type	libavcodec/ratecontrol.h	/^    int last_non_b_pict_type;$/;"	m	struct:RateControlContext
last_non_b_time	libavcodec/mpegvideo.h	/^    int64_t last_non_b_time;$/;"	m	struct:MpegEncContext
last_octet_count	libavformat/rtpdec.h	/^    unsigned int last_octet_count; \/\/ TODO: move into statistics (outgoing)$/;"	m	struct:RTPDemuxContext
last_octet_count	libavformat/rtpenc.h	/^    unsigned int last_octet_count; \/\/ TODO: move into statistics (outgoing)$/;"	m	struct:RTPMuxContext
last_packet_sent	ffserver.c	/^    int last_packet_sent; \/* true if last data packet was sent *\/$/;"	m	struct:HTTPContext	file:
last_paused	ffplay.c	/^    int last_paused;$/;"	m	struct:VideoState	file:
last_pic_num	libavcodec/utils.c	/^    int last_pic_num;$/;"	m	struct:InternalBuffer	file:
last_pict_type	libavcodec/mpegvideo.h	/^    int last_pict_type; \/\/FIXME removes$/;"	m	struct:MpegEncContext
last_picture	libavcodec/4xm.c	/^    AVFrame current_picture, last_picture;$/;"	m	struct:FourXContext	file:
last_picture	libavcodec/crystalhd.c	/^    uint64_t last_picture;$/;"	m	struct:__anon268	file:
last_picture	libavcodec/mpegvideo.h	/^    Picture last_picture;$/;"	m	struct:MpegEncContext
last_picture	libavcodec/png.h	/^    AVFrame *current_picture, *last_picture;$/;"	m	struct:PNGDecContext
last_picture	libavcodec/snow.c	/^    AVFrame last_picture[MAX_REF_FRAMES];$/;"	m	struct:SnowContext	file:
last_picture	libavcodec/svq1enc.c	/^    AVFrame last_picture;$/;"	m	struct:SVQ1Context	file:
last_picture_number	libavcodec/ratecontrol.h	/^    int last_picture_number;      \/\/\/< for xvid rc$/;"	m	struct:RateControlContext
last_picture_ptr	libavcodec/mpegvideo.h	/^    Picture *last_picture_ptr;     \/\/\/< pointer to the previous picture.$/;"	m	struct:MpegEncContext
last_pitch_val	libavcodec/wmavoice.c	/^    int last_pitch_val;           \/\/\/< pitch value of the previous frame$/;"	m	struct:__anon157	file:
last_pkt	ffplay.c	/^    AVPacketList *first_pkt, *last_pkt;$/;"	m	struct:PacketQueue	file:
last_pkt_pos	libavformat/avidec.c	/^    int64_t last_pkt_pos;$/;"	m	struct:__anon451	file:
last_pos	libavcodec/avcodec.h	/^    int64_t last_pos;$/;"	m	struct:AVCodecParserContext
last_pos	libavformat/mpegts.c	/^    int64_t last_pos;$/;"	m	struct:MpegTSContext	file:
last_pos	libavformat/seek.c	/^    int64_t     last_pos;    \/\/\/< last known position of a frame, for multi-frame packets$/;"	m	struct:__anon438	file:
last_predictor_count	libavcodec/avcodec.h	/^    int last_predictor_count;$/;"	m	struct:AVCodecContext
last_ptr	libavcodec/apedec.c	/^    const uint8_t *last_ptr;                 \/\/\/< position where last 4608-sample block ended$/;"	m	struct:APEContext	file:
last_pts	libavcodec/avcodec.h	/^    int64_t last_pts;$/;"	m	struct:AVCodecParserContext
last_pts	libavcodec/rv34.h	/^    int cur_pts, last_pts, next_pts;$/;"	m	struct:RV34DecContext
last_pts	libavformat/nut.h	/^    int64_t last_pts;$/;"	m	struct:__anon492
last_qbias	libavcodec/snow.c	/^    int last_qbias;$/;"	m	struct:SnowContext	file:
last_qlog	libavcodec/snow.c	/^    int last_qlog;$/;"	m	struct:SnowContext	file:
last_qps	libavcodec/vp3.c	/^    int last_qps[3];$/;"	m	struct:Vp3DecodeContext	file:
last_qscale	libavcodec/ratecontrol.h	/^    double last_qscale;$/;"	m	struct:RateControlContext
last_qscale_diff	libavcodec/h264.h	/^    int         last_qscale_diff;$/;"	m	struct:H264Context
last_qscale_for	libavcodec/ratecontrol.h	/^    double last_qscale_for[5];    \/\/\/< last qscale for a specific pict type, used for max_diff & ipb factor stuff$/;"	m	struct:RateControlContext
last_reply	libavformat/rtsp.h	/^    char last_reply[2048]; \/* XXX: allocate ? *\/$/;"	m	struct:RTSPState
last_reset	libavcodec/smacker.c	/^static av_always_inline void last_reset(int *recode, int *last) {$/;"	f	file:
last_resync_gb	libavcodec/mpegvideo.h	/^    GetBitContext last_resync_gb;    \/\/\/< used to search for the next resync marker$/;"	m	struct:MpegEncContext
last_row	libavcodec/png.h	/^    uint8_t *last_row;$/;"	m	struct:PNGDecContext
last_rtcp_ntp_time	libavformat/rtpdec.h	/^    int64_t last_rtcp_ntp_time;    \/\/ TODO: move into statistics$/;"	m	struct:RTPDemuxContext
last_rtcp_ntp_time	libavformat/rtpenc.h	/^    int64_t last_rtcp_ntp_time;    \/\/ TODO: move into statistics$/;"	m	struct:RTPMuxContext
last_rtcp_timestamp	libavformat/rtpdec.h	/^    uint32_t last_rtcp_timestamp;  \/\/ TODO: move into statistics$/;"	m	struct:RTPDemuxContext
last_scr	libavformat/mpegenc.c	/^    int64_t last_scr; \/* current system clock *\/$/;"	m	struct:__anon429	file:
last_sec_num	libavformat/mpegts.c	/^    uint8_t last_sec_num;$/;"	m	struct:SectionHeader	file:
last_slice_end	libavcodec/huffyuv.c	/^    int last_slice_end;$/;"	m	struct:HYuvContext	file:
last_slice_end	libavcodec/vp3.c	/^    int last_slice_end;$/;"	m	struct:Vp3DecodeContext	file:
last_slice_type	libavcodec/h264.h	/^    int last_slice_type;$/;"	m	struct:H264Context
last_spatial_decomposition_count	libavcodec/snow.c	/^    int last_spatial_decomposition_count;$/;"	m	struct:SnowContext	file:
last_spatial_decomposition_type	libavcodec/snow.c	/^    int last_spatial_decomposition_type;$/;"	m	struct:SnowContext	file:
last_subscription	libavformat/rtsp.h	/^    char last_subscription[1024];$/;"	m	struct:RTSPState
last_superframe	libavcodec/wma.h	/^    uint8_t last_superframe[MAX_CODED_SUPERFRAME_SIZE + 4]; \/* padding added *\/$/;"	m	struct:WMACodecContext
last_superframe_len	libavcodec/wma.h	/^    int last_superframe_len;$/;"	m	struct:WMACodecContext
last_syncpoint_pos	libavformat/nut.h	/^    int64_t last_syncpoint_pos;$/;"	m	struct:__anon494
last_time	libavformat/sapenc.c	/^    int64_t     last_time;$/;"	m	struct:SAPState	file:
last_time_base	libavcodec/mpegvideo.h	/^    int last_time_base;$/;"	m	struct:MpegEncContext
last_valid_pts	libavformat/wtvdec.c	/^    int64_t last_valid_pts;  \/** latest valid pts, used for interative seeking *\/$/;"	m	struct:__anon323	file:
last_vectable	libavcodec/truemotion1.c	/^    int last_deltaset, last_vectable;$/;"	m	struct:TrueMotion1Context	file:
last_video_ts	libavformat/flvenc.c	/^    int64_t last_video_ts;$/;"	m	struct:FLVContext	file:
lastdrop	libavfilter/libmpcodecs/vf_detc.c	/^        int drop, lastdrop;$/;"	m	struct:vf_priv_s	file:
lastdrop	libavfilter/libmpcodecs/vf_ivtc.c	/^    int drop, lastdrop, dropnext;$/;"	m	struct:vf_priv_s	file:
lastdts	libavformat/oggdec.h	/^    int64_t lastdts;$/;"	m	struct:ogg_stream
lastframe	libavformat/mpc.c	/^    uint32_t curframe, lastframe;$/;"	m	struct:__anon376	file:
lastframelen	libavcodec/mpc.h	/^    int lastframelen;$/;"	m	struct:__anon179
lastkeyframe	libavfilter/libmpcodecs/vf_blackframe.c	/^    unsigned int bamount, bthresh, frame, lastkeyframe;$/;"	m	struct:vf_priv_s	file:
lastmarker	libavcodec/dca_parser.c	/^    uint32_t lastmarker;$/;"	m	struct:DCAParseContext	file:
lastpts	libavformat/oggdec.h	/^    int64_t lastpts;$/;"	m	struct:ogg_stream
latm_context2config	libavformat/sdp.c	/^static char *latm_context2config(AVCodecContext *c)$/;"	f	file:
latm_context2profilelevel	libavformat/sdp.c	/^static int latm_context2profilelevel(AVCodecContext *c)$/;"	f	file:
latm_decode_audio_specific_config	libavcodec/aacdec.c	/^static int latm_decode_audio_specific_config(struct LATMContext *latmctx,$/;"	f	file:
latm_decode_frame	libavcodec/aacdec.c	/^static int latm_decode_frame(AVCodecContext *avctx, void *out, int *out_size,$/;"	f	file:
latm_decode_init	libavcodec/aacdec.c	/^av_cold static int latm_decode_init(AVCodecContext *avctx)$/;"	f	file:
latm_find_frame_end	libavcodec/latm_parser.c	/^static int latm_find_frame_end(AVCodecParserContext *s1, const uint8_t *buf,$/;"	f	file:
latm_free_context	libavformat/rtpdec_latm.c	/^static void latm_free_context(PayloadContext *data)$/;"	f	file:
latm_get_value	libavcodec/aacdec.c	/^static inline uint32_t latm_get_value(GetBitContext *b)$/;"	f	file:
latm_new_context	libavformat/rtpdec_latm.c	/^static PayloadContext *latm_new_context(void)$/;"	f	file:
latm_parse	libavcodec/latm_parser.c	/^static int latm_parse(AVCodecParserContext *s1, AVCodecContext *avctx,$/;"	f	file:
latm_parse_packet	libavformat/rtpdec_latm.c	/^static int latm_parse_packet(AVFormatContext *ctx, PayloadContext *data,$/;"	f	file:
latm_parse_sdp_line	libavformat/rtpdec_latm.c	/^static int latm_parse_sdp_line(AVFormatContext *s, int st_index,$/;"	f	file:
lavc_build	libavcodec/mpegvideo.h	/^    int lavc_build;$/;"	m	struct:MpegEncContext
lavfitest	tests/fate-run.sh	/^lavfitest(){$/;"	f
lavftest	tests/fate-run.sh	/^lavftest(){$/;"	f
layer	libavcodec/ass_split.h	/^    int   layer;    \/**< higher numbered layers are drawn over lower numbered *\/$/;"	m	struct:__anon250
layout	libavutil/audioconvert.c	/^    int64_t     layout;$/;"	m	struct:__anon302	file:
layout_tag	libavformat/isom.c	/^    uint32_t layout_tag;$/;"	m	struct:MovChannelLayout	file:
lblock	libavcodec/j2k.h	/^    uint8_t lblock;$/;"	m	struct:__anon213
lcg_random	libavcodec/aacdec.c	/^static av_always_inline int lcg_random(int previous_val)$/;"	f	file:
lcg_state	libavfilter/vf_slicify.c	/^    uint32_t lcg_state; \/\/\/< LCG state used to compute random slice height$/;"	m	struct:__anon22	file:
lcur	libavcodec/smacker.c	/^    int lcur;$/;"	m	struct:DBCtx	file:
ld3	libavcodec/ps2/mmi.h	76;"	d
ldl	libavcodec/alpha/asm.h	153;"	d
ldl	libavcodec/alpha/asm.h	64;"	d
ldl3	libavcodec/ps2/mmi.h	82;"	d
ldq	libavcodec/alpha/asm.h	152;"	d
ldq	libavcodec/alpha/asm.h	59;"	d
ldq_u	libavcodec/alpha/asm.h	156;"	d
ldq_u	libavcodec/alpha/asm.h	84;"	d
ldr3	libavcodec/ps2/mmi.h	79;"	d
le	libavcodec/tiff.c	/^    int le;$/;"	m	struct:TiffContext	file:
le	libavutil/crc.c	/^    uint8_t  le;$/;"	m	struct:__anon307	file:
le2me_16	libavfilter/libmpcodecs/mpbswap.h	28;"	d
le2me_32	libavfilter/libmpcodecs/mpbswap.h	29;"	d
le2me_64	libavfilter/libmpcodecs/mpbswap.h	30;"	d
leading	libavformat/filmstripdec.c	/^    int leading;$/;"	m	struct:__anon338	file:
left	libavcodec/libmp3lame.c	/^        int *left;$/;"	m	struct:Mp3AudioContext::__anon265	file:
left	libavfilter/libmpcodecs/libvo/video_out.h	/^  int left, right, top, bottom, width, height;$/;"	m	struct:vo_rect
left_blk_idx	libavcodec/vc1.h	/^    int n_allocated_blks, cur_blk_idx, left_blk_idx, topleft_blk_idx, top_blk_idx;$/;"	m	struct:VC1Context
left_blk_sh	libavcodec/vc1.h	/^    int left_blk_sh, top_blk_sh; \/\/\/< Either 3 or 0, positions of l\/t in blk[]$/;"	m	struct:VC1Context
left_block	libavcodec/h264.h	/^    const uint8_t * left_block;$/;"	m	struct:H264Context
left_block	libavcodec/vp56.h	/^    VP56RefDc left_block[4];$/;"	m	struct:vp56_context
left_border_u	libavcodec/cavs.h	/^    uint8_t left_border_y[26], left_border_u[10], left_border_v[10];$/;"	m	struct:__anon207
left_border_v	libavcodec/cavs.h	/^    uint8_t left_border_y[26], left_border_u[10], left_border_v[10];$/;"	m	struct:__anon207
left_border_y	libavcodec/cavs.h	/^    uint8_t left_border_y[26], left_border_u[10], left_border_v[10];$/;"	m	struct:__anon207
left_cbp	libavcodec/h264.h	/^    int left_cbp;$/;"	m	struct:H264Context
left_mb_xy	libavcodec/h264.h	/^    int left_mb_xy[2];$/;"	m	struct:H264Context
left_qp	libavcodec/cavs.h	/^    int left_qp;$/;"	m	struct:__anon207
left_samples_available	libavcodec/h264.h	/^    unsigned int left_samples_available;$/;"	m	struct:H264Context
left_type	libavcodec/h264.h	/^    int left_type[2];$/;"	m	struct:H264Context
len	libavcodec/bink.c	/^    int     len;       \/\/\/< length of number of entries to decode (in bits)$/;"	m	struct:Bundle	file:
len	libavcodec/flashsv2enc.c	/^    uint8_t start, len;$/;"	m	struct:Block	file:
len	libavcodec/get_bits.h	/^    int8_t len;$/;"	m	struct:RL_VLC_ELEM
len	libavcodec/huffyuv.c	/^    uint8_t len[3][256];$/;"	m	struct:HYuvContext	file:
len	libavcodec/vorbis_enc_data.h	/^    int len;$/;"	m	struct:__anon273
len	libavformat/avienc.c	/^    unsigned int flags, pos, len;$/;"	m	struct:AVIIentry	file:
len	libavformat/movenc.h	/^    int len;$/;"	m	struct:__anon449
len	libavformat/oggparsevorbis.c	/^    unsigned int len[3];$/;"	m	struct:oggvorbis_private	file:
len	libavformat/rtpdec.h	/^    int len;$/;"	m	struct:RTPPacket
len	libavformat/rtpdec_latm.c	/^    int pos, len;$/;"	m	struct:PayloadContext	file:
len	libavformat/rtpdec_qdm2.c	/^    uint16_t len[0x80];        \/\/\/< how much the temporary buffer is filled$/;"	m	struct:PayloadContext	file:
len	libavutil/md5.c	/^    uint64_t len;$/;"	m	struct:AVMD5	file:
len_prefix	libavcodec/wmaprodec.c	/^    uint8_t          len_prefix;                    \/\/\/< frame is prefixed with its length$/;"	m	struct:WMAProDecodeCtx	file:
length	libavcodec/aac.h	/^    int length[8][4];$/;"	m	struct:__anon240
length	libavcodec/j2k.h	/^    uint16_t length;$/;"	m	struct:__anon213
length	libavcodec/rawdec.c	/^    int             length;  \/* number of bytes in buffer *\/$/;"	m	struct:RawVideoContext	file:
length	libavcodec/smacker.c	/^    int length;$/;"	m	struct:HuffContext	file:
length	libavcodec/truemotion2.c	/^    int length;$/;"	m	struct:TM2Codes	file:
length	libavcodec/twinvq.c	/^    uint8_t length[4][2];            \/\/\/< main codebook stride$/;"	m	struct:TwinContext	file:
length	libavfilter/libmpcodecs/pullup.h	/^    int length;$/;"	m	struct:pullup_frame
length	libavformat/c93.c	/^    uint8_t length;$/;"	m	struct:__anon481	file:
length	libavformat/concat.c	/^    size_t               length;   \/\/\/< number of cat'ed nodes$/;"	m	struct:concat_data	file:
length	libavformat/matroskadec.c	/^    uint64_t length;$/;"	m	struct:__anon370	file:
length	libavformat/mxf.h	/^    uint64_t length;$/;"	m	struct:__anon325
length	libavformat/wtvdec.c	/^    int64_t length;$/;"	m	struct:__anon321	file:
length	libswscale/swscale.h	/^    int length;                 \/\/\/< number of coefficients in the vector$/;"	m	struct:__anon286
length_change	libavcodec/twinvq.c	/^    uint8_t length_change[4];$/;"	m	struct:TwinContext	file:
length_code	libavformat/spdifenc.c	/^    int length_code;                \/\/\/< length code in bits or bytes, depending on data type$/;"	m	struct:IEC61937Context	file:
length_size	libavcodec/h264_mp4toannexb_bsf.c	/^    uint8_t  length_size;$/;"	m	struct:H264BSFContext	file:
length_table	libavcodec/qtrleenc.c	/^    int *length_table;$/;"	m	struct:QtrleEncContext	file:
lengthinc	libavcodec/j2k.h	/^    uint16_t lengthinc;$/;"	m	struct:__anon213
lengths	libavcodec/smacker.c	/^    int *lengths;$/;"	m	struct:HuffContext	file:
lens	libavcodec/truemotion2.c	/^    int *lens; \/\/\/< codelengths$/;"	m	struct:TM2Huff	file:
lens	libavcodec/vorbisenc.c	/^    uint8_t *lens;$/;"	m	struct:__anon188	file:
levcode	libavcodec/atrac3.c	/^    int   levcode[8];$/;"	m	struct:__anon127	file:
level	libavcodec/avcodec.h	/^     int level;$/;"	m	struct:AVCodecContext
level	libavcodec/cavs.h	/^    int profile, level;$/;"	m	struct:__anon207
level	libavcodec/get_bits.h	/^    int16_t level;$/;"	m	struct:RL_VLC_ELEM
level	libavcodec/libx264.c	/^    char *level;$/;"	m	struct:X264Context	file:
level	libavcodec/mace.c	/^    int16_t index, factor, prev2, previous, level;$/;"	m	struct:ChannelData	file:
level	libavcodec/qdm2.c	/^    float level;$/;"	m	struct:__anon197	file:
level	libavcodec/snow.c	/^    int level;$/;"	m	struct:SubBand	file:
level	libavcodec/snow.c	/^    uint8_t level; \/\/FIXME merge into type?$/;"	m	struct:BlockNode	file:
level	libavcodec/svq3.c	/^static const struct { uint8_t run; uint8_t level; } svq3_dct_tables[2][16] = {$/;"	m	struct:__anon142	file:
level	libavcodec/vc1.h	/^    int level;            \/\/\/< 3bits, for Advanced\/Simple Profile, provided by TS layer$/;"	m	struct:VC1Context
level	libavcodec/vp8.h	/^        uint8_t level;$/;"	m	struct:__anon182::__anon184
level	libavfilter/libmpcodecs/vf_dint.c	/^  float level; \/\/ second parameter$/;"	m	struct:vf_priv_s	file:
level_add	libavcodec/cavs.h	/^  int8_t level_add[27];$/;"	m	struct:dec_2dvlc
level_idc	libavcodec/h264.h	/^    int level_idc;$/;"	m	struct:SPS
level_idc	libavformat/rtpdec_h264.c	/^    uint8_t level_idc;          \/\/\/< from the sdp setup parameters.$/;"	m	struct:PayloadContext	file:
level_offset	libavcodec/intrax8.c	154;"	d	file:
level_offset	libavcodec/intrax8.c	196;"	d	file:
level_tab	libavcodec/asv1.c	/^static const uint8_t level_tab[7][2]={$/;"	v	file:
level_table	libavcodec/wma.h	/^    float *level_table[2];$/;"	m	struct:WMACodecContext
level_up	libavformat/matroskadec.c	/^    int level_up;$/;"	m	struct:__anon371	file:
level_vlc	libavcodec/asv1.c	/^static VLC level_vlc;$/;"	v	file:
levels	libavcodec/wma.h	/^    const uint16_t *levels;     \/\/\/< table to build run\/level tables$/;"	m	struct:CoefVLCTable
levels	libavformat/matroskadec.c	/^    MatroskaLevel levels[EBML_MAX_DEPTH];$/;"	m	struct:__anon371	file:
levels0	libavcodec/wmadata.h	/^static const uint16_t levels0[60] = {$/;"	v
levels1	libavcodec/wmadata.h	/^static const uint16_t levels1[40] = {$/;"	v
levels2	libavcodec/wmadata.h	/^static const uint16_t levels2[340] = {$/;"	v
levels3	libavcodec/wmadata.h	/^static const uint16_t levels3[180] = {$/;"	v
levels4	libavcodec/wmadata.h	/^static const uint16_t levels4[70] = {$/;"	v
levels5	libavcodec/wmadata.h	/^static const uint16_t levels5[40] = {$/;"	v
levlCoeffBuf	libavcodec/imc.c	/^    int levlCoeffBuf[BANDS];$/;"	m	struct:__anon90	file:
lf_delta	libavcodec/vp8.h	/^    } lf_delta;$/;"	m	struct:__anon182	typeref:struct:__anon182::__anon186
lfe	libavcodec/dca.c	/^    int lfe;                    \/\/\/< low frequency effects flag$/;"	m	struct:__anon93	file:
lfe_ch	libavcodec/ac3dec.h	/^    int lfe_ch;                                 \/\/\/< index of LFE channel$/;"	m	struct:__anon88
lfe_channel	libavcodec/ac3enc.h	/^    int lfe_channel;                        \/\/\/< channel index of the LFE channel$/;"	m	struct:AC3EncodeContext
lfe_channel	libavcodec/dcaenc.c	/^    int lfe_channel;$/;"	m	struct:__anon231	file:
lfe_channel	libavcodec/wmaprodec.c	/^    int8_t           lfe_channel;                   \/\/\/< lfe channel index$/;"	m	struct:WMAProDecodeCtx	file:
lfe_data	libavcodec/dca.c	/^    float lfe_data[2 * DCA_LFE_MAX * (DCA_BLOCKS_MAX + 4)];      \/\/\/< Low frequency effect data$/;"	m	struct:__anon93	file:
lfe_data	libavcodec/dcaenc.c	/^    int lfe_data[SUBFRAMES*SUBSUBFRAMES*4];$/;"	m	struct:__anon231	file:
lfe_downsample	libavcodec/dcaenc.c	/^static int lfe_downsample(DCAContext *c, int32_t in[LFE_INTERPOLATION])$/;"	f	file:
lfe_fir	libavcodec/dcadsp.h	/^    void (*lfe_fir)(float *out, const float *in, const float *coefs,$/;"	m	struct:DCADSPContext
lfe_fir_64i	libavcodec/dcaenc.c	/^static int32_t lfe_fir_64i[512];$/;"	v	file:
lfe_interpolation_fir	libavcodec/dca.c	/^static void lfe_interpolation_fir(DCAContext *s, int decimation_select,$/;"	f	file:
lfe_offset	libavcodec/dcaenc.c	/^    int lfe_offset;$/;"	m	struct:__anon231	file:
lfe_on	libavcodec/ac3.h	/^    uint8_t lfe_on;$/;"	m	struct:__anon170
lfe_on	libavcodec/ac3dec.h	/^    int lfe_on;                             \/\/\/< lfe channel in use$/;"	m	struct:__anon88
lfe_on	libavcodec/ac3enc.h	/^    int lfe_on;                             \/\/\/< indicates if there is an LFE channel   (lfeon)$/;"	m	struct:AC3EncodeContext
lfe_scale_factor	libavcodec/dca.c	/^    int lfe_scale_factor;$/;"	m	struct:__anon93	file:
lfe_scale_factor	libavcodec/dcaenc.c	/^    int lfe_scale_factor;$/;"	m	struct:__anon231	file:
lfe_state	libavcodec/dcaenc.c	/^    int lfe_state;$/;"	m	struct:__anon231	file:
lh	libavfilter/libmpcodecs/vf_delogo.c	/^    int xoff, yoff, lw, lh, band, show;$/;"	m	struct:vf_priv_s	file:
libAVEnumMediaTypes	libavdevice/dshow.h	/^struct libAVEnumMediaTypes {$/;"	s
libAVEnumMediaTypes	libavdevice/dshow.h	/^typedef struct libAVEnumMediaTypes libAVEnumMediaTypes;$/;"	t	typeref:struct:libAVEnumMediaTypes
libAVEnumMediaTypes_Clone	libavdevice/dshow_enummediatypes.c	/^libAVEnumMediaTypes_Clone(libAVEnumMediaTypes *this, libAVEnumMediaTypes **enums)$/;"	f
libAVEnumMediaTypes_Reset	libavdevice/dshow_enummediatypes.c	/^libAVEnumMediaTypes_Reset(libAVEnumMediaTypes *this)$/;"	f
libAVEnumMediaTypes_Setup	libavdevice/dshow_enummediatypes.c	/^libAVEnumMediaTypes_Setup(libAVEnumMediaTypes *this, const AM_MEDIA_TYPE *type)$/;"	f	file:
libAVEnumMediaTypes_Skip	libavdevice/dshow_enummediatypes.c	/^libAVEnumMediaTypes_Skip(libAVEnumMediaTypes *this, unsigned long n)$/;"	f
libAVEnumPins	libavdevice/dshow.h	/^struct libAVEnumPins {$/;"	s
libAVEnumPins	libavdevice/dshow.h	/^typedef struct libAVEnumPins libAVEnumPins;$/;"	t	typeref:struct:libAVEnumPins
libAVEnumPins_Clone	libavdevice/dshow_enumpins.c	/^libAVEnumPins_Clone(libAVEnumPins *this, libAVEnumPins **pins)$/;"	f
libAVEnumPins_Reset	libavdevice/dshow_enumpins.c	/^libAVEnumPins_Reset(libAVEnumPins *this)$/;"	f
libAVEnumPins_Setup	libavdevice/dshow_enumpins.c	/^libAVEnumPins_Setup(libAVEnumPins *this, libAVPin *pin, libAVFilter *filter)$/;"	f	file:
libAVEnumPins_Skip	libavdevice/dshow_enumpins.c	/^libAVEnumPins_Skip(libAVEnumPins *this, unsigned long n)$/;"	f
libAVFilter	libavdevice/dshow.h	/^struct libAVFilter {$/;"	s
libAVFilter	libavdevice/dshow.h	/^typedef struct libAVFilter libAVFilter;$/;"	t	typeref:struct:libAVFilter
libAVFilter_EnumPins	libavdevice/dshow_filter.c	/^libAVFilter_EnumPins(libAVFilter *this, IEnumPins **enumpin)$/;"	f
libAVFilter_FindPin	libavdevice/dshow_filter.c	/^libAVFilter_FindPin(libAVFilter *this, const wchar_t *id, IPin **pin)$/;"	f
libAVFilter_GetState	libavdevice/dshow_filter.c	/^libAVFilter_GetState(libAVFilter *this, DWORD ms, FILTER_STATE *state)$/;"	f
libAVFilter_GetSyncSource	libavdevice/dshow_filter.c	/^libAVFilter_GetSyncSource(libAVFilter *this, IReferenceClock **clock)$/;"	f
libAVFilter_JoinFilterGraph	libavdevice/dshow_filter.c	/^libAVFilter_JoinFilterGraph(libAVFilter *this, IFilterGraph *graph,$/;"	f
libAVFilter_Pause	libavdevice/dshow_filter.c	/^libAVFilter_Pause(libAVFilter *this)$/;"	f
libAVFilter_QueryFilterInfo	libavdevice/dshow_filter.c	/^libAVFilter_QueryFilterInfo(libAVFilter *this, FILTER_INFO *info)$/;"	f
libAVFilter_QueryVendorInfo	libavdevice/dshow_filter.c	/^libAVFilter_QueryVendorInfo(libAVFilter *this, wchar_t **info)$/;"	f
libAVFilter_Run	libavdevice/dshow_filter.c	/^libAVFilter_Run(libAVFilter *this, REFERENCE_TIME start)$/;"	f
libAVFilter_SetSyncSource	libavdevice/dshow_filter.c	/^libAVFilter_SetSyncSource(libAVFilter *this, IReferenceClock *clock)$/;"	f
libAVFilter_Setup	libavdevice/dshow_filter.c	/^libAVFilter_Setup(libAVFilter *this, void *priv_data, void *callback,$/;"	f	file:
libAVFilter_Stop	libavdevice/dshow_filter.c	/^libAVFilter_Stop(libAVFilter *this)$/;"	f
libAVMemInputPin	libavdevice/dshow.h	/^typedef struct libAVMemInputPin libAVMemInputPin;$/;"	t	typeref:struct:libAVMemInputPin
libAVMemInputPin_AddRef	libavdevice/dshow_pin.c	/^libAVMemInputPin_AddRef(libAVMemInputPin *this)$/;"	f
libAVMemInputPin_Destroy	libavdevice/dshow_pin.c	/^libAVMemInputPin_Destroy(libAVMemInputPin *this)$/;"	f
libAVMemInputPin_GetAllocator	libavdevice/dshow_pin.c	/^libAVMemInputPin_GetAllocator(libAVMemInputPin *this, IMemAllocator **alloc)$/;"	f
libAVMemInputPin_GetAllocatorRequirements	libavdevice/dshow_pin.c	/^libAVMemInputPin_GetAllocatorRequirements(libAVMemInputPin *this,$/;"	f
libAVMemInputPin_NotifyAllocator	libavdevice/dshow_pin.c	/^libAVMemInputPin_NotifyAllocator(libAVMemInputPin *this, IMemAllocator *alloc,$/;"	f
libAVMemInputPin_Receive	libavdevice/dshow_pin.c	/^libAVMemInputPin_Receive(libAVMemInputPin *this, IMediaSample *sample)$/;"	f
libAVMemInputPin_ReceiveCanBlock	libavdevice/dshow_pin.c	/^libAVMemInputPin_ReceiveCanBlock(libAVMemInputPin *this)$/;"	f
libAVMemInputPin_ReceiveMultiple	libavdevice/dshow_pin.c	/^libAVMemInputPin_ReceiveMultiple(libAVMemInputPin *this,$/;"	f
libAVMemInputPin_Release	libavdevice/dshow_pin.c	/^libAVMemInputPin_Release(libAVMemInputPin *this)$/;"	f
libAVPin	libavdevice/dshow.h	/^struct libAVPin {$/;"	s
libAVPin	libavdevice/dshow.h	/^typedef struct libAVPin libAVPin;$/;"	t	typeref:struct:libAVPin
libAVPin_BeginFlush	libavdevice/dshow_pin.c	/^libAVPin_BeginFlush(libAVPin *this)$/;"	f
libAVPin_ConnectedTo	libavdevice/dshow_pin.c	/^libAVPin_ConnectedTo(libAVPin *this, IPin **pin)$/;"	f
libAVPin_ConnectionMediaType	libavdevice/dshow_pin.c	/^libAVPin_ConnectionMediaType(libAVPin *this, AM_MEDIA_TYPE *type)$/;"	f
libAVPin_Disconnect	libavdevice/dshow_pin.c	/^libAVPin_Disconnect(libAVPin *this)$/;"	f
libAVPin_EndFlush	libavdevice/dshow_pin.c	/^libAVPin_EndFlush(libAVPin *this)$/;"	f
libAVPin_EndOfStream	libavdevice/dshow_pin.c	/^libAVPin_EndOfStream(libAVPin *this)$/;"	f
libAVPin_EnumMediaTypes	libavdevice/dshow_pin.c	/^libAVPin_EnumMediaTypes(libAVPin *this, IEnumMediaTypes **enumtypes)$/;"	f
libAVPin_NewSegment	libavdevice/dshow_pin.c	/^libAVPin_NewSegment(libAVPin *this, REFERENCE_TIME start, REFERENCE_TIME stop,$/;"	f
libAVPin_QueryAccept	libavdevice/dshow_pin.c	/^libAVPin_QueryAccept(libAVPin *this, const AM_MEDIA_TYPE *type)$/;"	f
libAVPin_QueryDirection	libavdevice/dshow_pin.c	/^libAVPin_QueryDirection(libAVPin *this, PIN_DIRECTION *dir)$/;"	f
libAVPin_QueryId	libavdevice/dshow_pin.c	/^libAVPin_QueryId(libAVPin *this, wchar_t **id)$/;"	f
libAVPin_QueryInternalConnections	libavdevice/dshow_pin.c	/^libAVPin_QueryInternalConnections(libAVPin *this, IPin **pin,$/;"	f
libAVPin_QueryPinInfo	libavdevice/dshow_pin.c	/^libAVPin_QueryPinInfo(libAVPin *this, PIN_INFO *info)$/;"	f
libAVPin_ReceiveConnection	libavdevice/dshow_pin.c	/^libAVPin_ReceiveConnection(libAVPin *this, IPin *pin,$/;"	f
libAVPin_Setup	libavdevice/dshow_pin.c	/^libAVPin_Setup(libAVPin *this, libAVFilter *filter)$/;"	f	file:
libavcodec_VERSION	config.mak	/^libavcodec_VERSION=53.8.0$/;"	m
libavcodec_VERSION_MAJOR	config.mak	/^libavcodec_VERSION_MAJOR=53$/;"	m
libavdevice_VERSION	config.mak	/^libavdevice_VERSION=53.1.1$/;"	m
libavdevice_VERSION_MAJOR	config.mak	/^libavdevice_VERSION_MAJOR=53$/;"	m
libavfilter_VERSION	config.mak	/^libavfilter_VERSION=2.23.0$/;"	m
libavfilter_VERSION_MAJOR	config.mak	/^libavfilter_VERSION_MAJOR=2$/;"	m
libavformat_VERSION	config.mak	/^libavformat_VERSION=53.5.0$/;"	m
libavformat_VERSION_MAJOR	config.mak	/^libavformat_VERSION_MAJOR=53$/;"	m
libavutil_VERSION	config.mak	/^libavutil_VERSION=51.9.1$/;"	m
libavutil_VERSION_MAJOR	config.mak	/^libavutil_VERSION_MAJOR=51$/;"	m
libcelt_context	libavcodec/libcelt_dec.c	/^struct libcelt_context {$/;"	s	file:
libcelt_dec_close	libavcodec/libcelt_dec.c	/^static av_cold int libcelt_dec_close(AVCodecContext *c)$/;"	f	file:
libcelt_dec_decode	libavcodec/libcelt_dec.c	/^static int libcelt_dec_decode(AVCodecContext *c, void *pcm, int *pcm_size,$/;"	f	file:
libcelt_dec_init	libavcodec/libcelt_dec.c	/^static av_cold int libcelt_dec_init(AVCodecContext *c)$/;"	f	file:
libdc1394_class	libavdevice/libdc1394.c	/^static const AVClass libdc1394_class = {$/;"	v	file:
libdirac_decode_close	libavcodec/libdiracdec.c	/^static av_cold int libdirac_decode_close(AVCodecContext *avccontext)$/;"	f	file:
libdirac_decode_frame	libavcodec/libdiracdec.c	/^static int libdirac_decode_frame(AVCodecContext *avccontext,$/;"	f	file:
libdirac_decode_init	libavcodec/libdiracdec.c	/^static av_cold int libdirac_decode_init(AVCodecContext *avccontext)$/;"	f	file:
libdirac_encode_close	libavcodec/libdiracenc.c	/^static av_cold int libdirac_encode_close(AVCodecContext *avccontext)$/;"	f	file:
libdirac_encode_frame	libavcodec/libdiracenc.c	/^static int libdirac_encode_frame(AVCodecContext *avccontext,$/;"	f	file:
libdirac_encode_init	libavcodec/libdiracenc.c	/^static av_cold int libdirac_encode_init(AVCodecContext *avccontext)$/;"	f	file:
libdirac_flush	libavcodec/libdiracdec.c	/^static void libdirac_flush(AVCodecContext *avccontext)$/;"	f	file:
libgsm_close	libavcodec/libgsm.c	/^static av_cold int libgsm_close(AVCodecContext *avctx) {$/;"	f	file:
libgsm_decode_frame	libavcodec/libgsm.c	/^static int libgsm_decode_frame(AVCodecContext *avctx,$/;"	f	file:
libgsm_encode_frame	libavcodec/libgsm.c	/^static int libgsm_encode_frame(AVCodecContext *avctx,$/;"	f	file:
libgsm_init	libavcodec/libgsm.c	/^static av_cold int libgsm_init(AVCodecContext *avctx) {$/;"	f	file:
libopenjpeg_decode_close	libavcodec/libopenjpeg.c	/^static av_cold int libopenjpeg_decode_close(AVCodecContext *avctx)$/;"	f	file:
libopenjpeg_decode_frame	libavcodec/libopenjpeg.c	/^static int libopenjpeg_decode_frame(AVCodecContext *avctx,$/;"	f	file:
libopenjpeg_decode_init	libavcodec/libopenjpeg.c	/^static av_cold int libopenjpeg_decode_init(AVCodecContext *avctx)$/;"	f	file:
libpostproc_VERSION	config.mak	/^libpostproc_VERSION=..$/;"	m
libpostproc_VERSION_MAJOR	config.mak	/^libpostproc_VERSION_MAJOR=$/;"	m
library	libavfilter/vf_drawtext.c	/^    FT_Library library;             \/\/\/< freetype font library handle$/;"	m	struct:__anon24	file:
libschroedinger_decode_buffer_free	libavcodec/libschroedingerdec.c	/^static void libschroedinger_decode_buffer_free(SchroBuffer *schro_buf,$/;"	f	file:
libschroedinger_decode_close	libavcodec/libschroedingerdec.c	/^static av_cold int libschroedinger_decode_close(AVCodecContext *avccontext)$/;"	f	file:
libschroedinger_decode_frame	libavcodec/libschroedingerdec.c	/^static int libschroedinger_decode_frame(AVCodecContext *avccontext,$/;"	f	file:
libschroedinger_decode_frame_free	libavcodec/libschroedingerdec.c	/^static void libschroedinger_decode_frame_free(void *frame)$/;"	f	file:
libschroedinger_decode_init	libavcodec/libschroedingerdec.c	/^static av_cold int libschroedinger_decode_init(AVCodecContext *avccontext)$/;"	f	file:
libschroedinger_encode_close	libavcodec/libschroedingerenc.c	/^static int libschroedinger_encode_close(AVCodecContext *avccontext)$/;"	f	file:
libschroedinger_encode_frame	libavcodec/libschroedingerenc.c	/^static int libschroedinger_encode_frame(AVCodecContext *avccontext,$/;"	f	file:
libschroedinger_encode_init	libavcodec/libschroedingerenc.c	/^static int libschroedinger_encode_init(AVCodecContext *avccontext)$/;"	f	file:
libschroedinger_flush	libavcodec/libschroedingerdec.c	/^static void libschroedinger_flush(AVCodecContext *avccontext)$/;"	f	file:
libschroedinger_frame_from_data	libavcodec/libschroedingerenc.c	/^static SchroFrame *libschroedinger_frame_from_data(AVCodecContext *avccontext,$/;"	f	file:
libschroedinger_handle_first_access_unit	libavcodec/libschroedingerdec.c	/^static void libschroedinger_handle_first_access_unit(AVCodecContext *avccontext)$/;"	f	file:
libspeex_decode_close	libavcodec/libspeexdec.c	/^static av_cold int libspeex_decode_close(AVCodecContext *avctx)$/;"	f	file:
libspeex_decode_frame	libavcodec/libspeexdec.c	/^static int libspeex_decode_frame(AVCodecContext *avctx,$/;"	f	file:
libspeex_decode_init	libavcodec/libspeexdec.c	/^static av_cold int libspeex_decode_init(AVCodecContext *avctx)$/;"	f	file:
libspeex_encode_close	libavcodec/libspeexenc.c	/^static av_cold int libspeex_encode_close(AVCodecContext *avctx)$/;"	f	file:
libspeex_encode_frame	libavcodec/libspeexenc.c	/^static av_cold int libspeex_encode_frame($/;"	f	file:
libspeex_encode_init	libavcodec/libspeexenc.c	/^static av_cold int libspeex_encode_init(AVCodecContext *avctx)$/;"	f	file:
libswscale_VERSION	config.mak	/^libswscale_VERSION=2.0.0$/;"	m
libswscale_VERSION_MAJOR	config.mak	/^libswscale_VERSION_MAJOR=2$/;"	m
licomb_y	libavfilter/libmpcodecs/pullup.c	/^static int licomb_y(unsigned char *a, unsigned char *b, int s)$/;"	f	file:
licomb_y_mmx	libavfilter/libmpcodecs/pullup.c	/^static int licomb_y_mmx(unsigned char *a, unsigned char *b, int s)$/;"	f	file:
lift	libavcodec/dwt.c	/^lift(DWTELEM *dst, DWTELEM *src, DWTELEM *ref,$/;"	f	file:
liftS	libavcodec/dwt.c	/^liftS(DWTELEM *dst, DWTELEM *src, DWTELEM *ref,$/;"	f	file:
liftS	libavcodec/dwt.h	59;"	d
liftS	libavcodec/dwt.h	65;"	d
likely	libavcodec/alpha/asm.h	30;"	d
likely	libavcodec/alpha/asm.h	33;"	d
limit	libavcodec/jpegls.h	/^    int limit, reset, bpp, qbpp, maxval, range;$/;"	m	struct:JLSState
limit	libavfilter/libmpcodecs/vf_cropdetect.c	/^    int limit;$/;"	m	struct:vf_priv_s	file:
limit	libavfilter/vf_cropdetect.c	/^    int limit;$/;"	m	struct:__anon48	file:
limit_filesize	ffmpeg.c	/^static uint64_t limit_filesize = 0;$/;"	v	file:
limit_filesize	ffmpeg/ffmpeg.c	/^static uint64_t limit_filesize = 0;$/;"	v	file:
line	libavcodec/dwt.h	/^    IDWTELEM * * line; \/\/\/< For use by idwt and predict_slices.$/;"	m	struct:slice_buffer_s
line	libavfilter/vf_pad.c	/^    uint8_t *line[4];$/;"	m	struct:__anon52	file:
line	libavfilter/vf_pixdesctest.c	/^    uint16_t *line;$/;"	m	struct:__anon3	file:
line	libavfilter/vsrc_color.c	/^    uint8_t *line[4];$/;"	m	struct:__anon27	file:
line	tools/graph2dot.c	/^struct line {$/;"	s	file:
lineNoise	libavfilter/libmpcodecs/vf_noise.c	/^static void (*lineNoise)(uint8_t *dst, uint8_t *src, int8_t *noise, int len, int shift)= lineNoise_C;$/;"	v	file:
lineNoiseAvg	libavfilter/libmpcodecs/vf_noise.c	/^static void (*lineNoiseAvg)(uint8_t *dst, uint8_t *src, int len, int8_t **shift)= lineNoiseAvg_C;$/;"	v	file:
lineNoiseAvg_C	libavfilter/libmpcodecs/vf_noise.c	/^static inline void lineNoiseAvg_C(uint8_t *dst, uint8_t *src, int len, int8_t **shift){$/;"	f	file:
lineNoiseAvg_MMX	libavfilter/libmpcodecs/vf_noise.c	/^static inline void lineNoiseAvg_MMX(uint8_t *dst, uint8_t *src, int len, int8_t **shift){$/;"	f	file:
lineNoise_C	libavfilter/libmpcodecs/vf_noise.c	/^static inline void lineNoise_C(uint8_t *dst, uint8_t *src, int8_t *noise, int len, int shift){$/;"	f	file:
lineNoise_MMX	libavfilter/libmpcodecs/vf_noise.c	/^static inline void lineNoise_MMX(uint8_t *dst, uint8_t *src, int8_t *noise, int len, int shift){$/;"	f	file:
lineNoise_MMX2	libavfilter/libmpcodecs/vf_noise.c	/^static inline void lineNoise_MMX2(uint8_t *dst, uint8_t *src, int8_t *noise, int len, int shift){$/;"	f	file:
line_count	libavcodec/dwt.h	/^    int line_count;$/;"	m	struct:slice_buffer_s
line_count	libavformat/http.c	/^    int line_count;$/;"	m	struct:__anon462	file:
line_inc	libavcodec/interplayvideo.c	/^    int line_inc;$/;"	m	struct:IpvideoContext	file:
line_size	libavfilter/vf_fieldorder.c	/^    int          line_size[4]; \/\/\/< bytes of pixel data per line for each plane$/;"	m	struct:__anon53	file:
line_step	libavfilter/vf_pad.c	/^    int      line_step[4];$/;"	m	struct:__anon52	file:
line_step	libavfilter/vsrc_color.c	/^    int      line_step[4];$/;"	m	struct:__anon27	file:
line_width	libavcodec/dwt.h	/^    int line_width;$/;"	m	struct:slice_buffer_s
linear	libavcodec/resample2.c	/^    int linear;$/;"	m	struct:AVResampleContext	file:
linear_perm	libavcodec/twinvq.c	/^static void linear_perm(int16_t *out, int16_t *in, int n_blocks, int size)$/;"	f	file:
linear_scale_factor	libavcodec/g722.c	/^static int inline linear_scale_factor(const int log_factor)$/;"	f	file:
linear_to_alaw	libavcodec/pcm_tablegen.h	/^static uint8_t linear_to_alaw[16384];$/;"	v
linear_to_ulaw	libavcodec/pcm_tablegen.h	/^static uint8_t linear_to_ulaw[16384];$/;"	v
linebuf	libavcodec/j2k_dwt.h	/^    void     *linebuf;                   \/\/\/< buffer used by transform (int or float)$/;"	m	struct:__anon233
linecpy	libpostproc/postprocess_internal.h	/^static inline void linecpy(void *dest, const void *src, int lines, int stride) {$/;"	f
linelen	libavcodec/cscd.c	/^    int linelen, height, bpp;$/;"	m	struct:__anon232	file:
linelen	libavcodec/j2k_dwt.h	/^    uint16_t linelen[FF_DWT_MAX_DECLVLS][2];$/;"	m	struct:__anon233
lines	libavformat/microdvddec.c	/^    uint8_t lines[3][MAX_LINESIZE];$/;"	m	struct:__anon378	file:
lines_index	libavformat/gxfenc.c	/^    int lines_index;$/;"	m	struct:GXFStreamContext	file:
linesize	libavcodec/avcodec.h	/^    int linesize[4];       \/\/\/< number of bytes per line$/;"	m	struct:AVPicture
linesize	libavcodec/mjpegdec.h	/^    int linesize[MAX_COMPONENTS];                   \/\/\/< linesize << interlaced$/;"	m	struct:MJpegDecodeContext
linesize	libavcodec/mpegvideo.h	/^    int linesize;              \/\/\/< line size, in bytes, may be different from width$/;"	m	struct:MpegEncContext
linesize	libavcodec/sgidec.c	/^    int linesize;$/;"	m	struct:SgiState	file:
linesize	libavcodec/utils.c	/^    int linesize[4];$/;"	m	struct:InternalBuffer	file:
linesize	libavcodec/vp8.h	/^    int linesize;$/;"	m	struct:__anon182
linesize	libavfilter/avfilter.h	/^    int linesize[8];            \/\/\/< number of bytes per line$/;"	m	struct:AVFilterBuffer
linesize	libavfilter/avfilter.h	/^    int linesize[8];            \/\/\/< number of bytes per line$/;"	m	struct:AVFilterBufferRef
link_filter	libavfilter/graphparser.c	/^static int link_filter(AVFilterContext *src, int srcpad,$/;"	f	file:
link_filter_inouts	libavfilter/graphparser.c	/^static int link_filter_inouts(AVFilterContext *filt_ctx,$/;"	f	file:
link_penalty	libavcodec/flac_parser.c	/^    int *link_penalty;  \/**< pointer to array of local scores between this header$/;"	m	struct:FLACHeaderMarker	file:
linked_track_id	libavformat/mxfdec.c	/^    int linked_track_id;$/;"	m	struct:__anon443	file:
list	libavcodec/vorbisdec.c	/^            vorbis_floor1_entry *list;$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor1_s	file:
list	libavcodec/vorbisenc.c	/^    vorbis_floor1_entry *list;$/;"	m	struct:__anon190	file:
list_count	libavcodec/h264.h	/^    unsigned int list_count;$/;"	m	struct:H264Context
list_counts	libavcodec/h264.h	/^    uint8_t *list_counts;            \/\/\/< Array of list_count per MB specifying the slice type$/;"	m	struct:H264Context
list_elem_size	libavformat/matroskadec.c	/^    int list_elem_size;$/;"	m	struct:EbmlSyntax	file:
listed_pix_fmt_flags	libavfilter/vf_format.c	/^    int listed_pix_fmt_flags[PIX_FMT_NB];$/;"	m	struct:__anon37	file:
ljpeg_buffer	libavcodec/mjpegdec.h	/^    uint16_t (*ljpeg_buffer)[4];$/;"	m	struct:MJpegDecodeContext
ljpeg_buffer_size	libavcodec/mjpegdec.h	/^    unsigned int ljpeg_buffer_size;$/;"	m	struct:MJpegDecodeContext
ljpeg_decode_rgb_scan	libavcodec/mjpegdec.c	/^static int ljpeg_decode_rgb_scan(MJpegDecodeContext *s, int predictor, int point_transform){$/;"	f	file:
ljpeg_decode_yuv_scan	libavcodec/mjpegdec.c	/^static int ljpeg_decode_yuv_scan(MJpegDecodeContext *s, int predictor, int point_transform){$/;"	f	file:
llrint	libavutil/libm.h	42;"	d
llrint	libavutil/libm.h	43;"	d
llrintf	libavutil/libm.h	47;"	d
llrintf	libavutil/libm.h	48;"	d
lmax	libavcodec/avcodec.h	/^    int lmax;$/;"	m	struct:AVCodecContext
lmin	libavcodec/avcodec.h	/^    int lmin;$/;"	m	struct:AVCodecContext
lmlm4_probe	libavformat/lmlm4.c	/^static int lmlm4_probe(AVProbeData * pd) {$/;"	f	file:
lmlm4_read_header	libavformat/lmlm4.c	/^static int lmlm4_read_header(AVFormatContext *s, AVFormatParameters *ap) {$/;"	f	file:
lmlm4_read_packet	libavformat/lmlm4.c	/^static int lmlm4_read_packet(AVFormatContext *s, AVPacket *pkt) {$/;"	f	file:
lo	libavfilter/libmpcodecs/vf_decimate.c	/^    int hi, lo;$/;"	m	struct:vf_priv_s	file:
load_cursor	libavcodec/vmnc.c	/^static void load_cursor(VmncContext *c, const uint8_t *src)$/;"	f	file:
load_glyph	libavfilter/vf_drawtext.c	/^static int load_glyph(AVFilterContext *ctx, Glyph **glyph_ptr, uint32_t code)$/;"	f	file:
load_input_picture	libavcodec/mpegvideo_enc.c	/^static int load_input_picture(MpegEncContext *s, AVFrame *pic_arg){$/;"	f	file:
load_ipmovie_packet	libavformat/ipmovie.c	/^static int load_ipmovie_packet(IPMVEContext *s, AVIOContext *pb,$/;"	f	file:
load_matrix	libavcodec/mpeg12.c	/^static int load_matrix(MpegEncContext *s, uint16_t matrix0[64], uint16_t matrix1[64], int intra){$/;"	f	file:
load_matrix	libavcodec/sh4/idct_sh4.c	57;"	d	file:
load_module	ffserver.c	/^static void load_module(const char *filename)$/;"	f	file:
load_path	libavfilter/vf_frei0r.c	/^static void *load_path(AVFilterContext *ctx, const char *prefix, const char *name)$/;"	f	file:
load_pgm	libavfilter/libmpcodecs/vf_remove_logo.c	/^static pgm_structure * load_pgm(const char * file_name)$/;"	f	file:
load_pgm_skip	libavfilter/libmpcodecs/vf_remove_logo.c	/^static void load_pgm_skip(FILE *f) {$/;"	f	file:
load_sym	libavfilter/vf_frei0r.c	/^static void *load_sym(AVFilterContext *ctx, const char *sym_name)$/;"	f	file:
load_with_perm_vec	libavcodec/ppc/util_altivec.h	/^static inline vec_u8 load_with_perm_vec(int offset, uint8_t *src, vec_u8 perm_vec)$/;"	f
local_palette	libavcodec/gifdec.c	/^    uint8_t local_palette[256 * 3];$/;"	m	struct:GifState	file:
local_port	libavformat/udp.c	/^    int local_port;$/;"	m	struct:__anon320	file:
local_tag	libavformat/mxfenc.c	/^    int local_tag;$/;"	m	struct:__anon456	file:
local_tags	libavformat/mxfdec.c	/^    uint8_t *local_tags;$/;"	m	struct:__anon447	file:
local_tags_count	libavformat/mxfdec.c	/^    int local_tags_count;$/;"	m	struct:__anon447	file:
location	libavformat/http.c	/^    char location[MAX_URL_SIZE];$/;"	m	struct:__anon462	file:
location	libavformat/rtsp.h	/^    char location[4096];$/;"	m	struct:RTSPMessageHeader
loccode	libavcodec/atrac3.c	/^    int   loccode[8];$/;"	m	struct:__anon127	file:
lock	libavfilter/libmpcodecs/pullup.h	/^    int lock;$/;"	m	struct:pullup_frame
lock	libavfilter/libmpcodecs/pullup.h	/^    int lock[2];$/;"	m	struct:pullup_buffer
lock	tests/fate.sh	/^lock(){$/;"	f
lock_word	libavcodec/indeo5.c	/^    uint32_t        lock_word;$/;"	m	struct:__anon203	file:
loco_decode_plane	libavcodec/loco.c	/^static int loco_decode_plane(LOCOContext *l, uint8_t *data, int width, int height,$/;"	f	file:
loco_get_rice	libavcodec/loco.c	/^static inline int loco_get_rice(RICEContext *r)$/;"	f	file:
loco_get_rice_param	libavcodec/loco.c	/^static int loco_get_rice_param(RICEContext *r)$/;"	f	file:
loco_predict	libavcodec/loco.c	/^static inline int loco_predict(uint8_t* data, int stride, int step)$/;"	f	file:
loco_update_rice_param	libavcodec/loco.c	/^static inline void loco_update_rice_param(RICEContext *r, int val)$/;"	f	file:
log	configure	/^log(){$/;"	f
log16	tests/tiny_psnr.c	/^static int64_t log16(uint64_t a){$/;"	f	file:
log2	libavutil/libm.h	52;"	d
log2	libavutil/libm.h	53;"	d
log2_block_count	libavcodec/atrac1.c	/^    int                 log2_block_count[AT1_QMF_BANDS];    \/\/\/< log2 number of blocks in a band$/;"	m	struct:__anon119	file:
log2_blocksize	libavcodec/vorbisenc.c	/^    int log2_blocksize[2];$/;"	m	struct:__anon194	file:
log2_cblk_height	libavcodec/j2k.h	/^            log2_cblk_height; \/\/\/< exponent of codeblock size$/;"	m	struct:__anon210
log2_cblk_width	libavcodec/j2k.h	/^    uint8_t log2_cblk_width,$/;"	m	struct:__anon210
log2_chroma_h	libavutil/pixdesc.h	/^    uint8_t log2_chroma_h;$/;"	m	struct:AVPixFmtDescriptor
log2_chroma_w	libavutil/pixdesc.h	/^    uint8_t log2_chroma_w;      \/\/\/< chroma_width = -((-luma_width )>>log2_chroma_w)$/;"	m	struct:AVPixFmtDescriptor
log2_count	libavfilter/libmpcodecs/vf_fspp.c	/^    int log2_count;$/;"	m	struct:vf_priv_s	file:
log2_count	libavfilter/libmpcodecs/vf_spp.c	/^        int log2_count;$/;"	m	struct:vf_priv_s	file:
log2_count	libavfilter/libmpcodecs/vf_uspp.c	/^    int log2_count;$/;"	m	struct:vf_priv_s	file:
log2_frame_size	libavcodec/wmaprodec.c	/^    uint16_t         log2_frame_size;$/;"	m	struct:WMAProDecodeCtx	file:
log2_max_frame_num	libavcodec/h264.h	/^    int log2_max_frame_num;            \/\/\/< log2_max_frame_num_minus4 + 4$/;"	m	struct:SPS
log2_max_poc_lsb	libavcodec/h264.h	/^    int log2_max_poc_lsb;              \/\/\/< log2_max_pic_order_cnt_lsb_minus4$/;"	m	struct:SPS
log2_numvector_size	libavcodec/cook.c	/^    int                 log2_numvector_size;$/;"	m	struct:__anon230	file:
log2_prec_height	libavcodec/j2k.h	/^            log2_prec_height; \/\/\/< precinct size$/;"	m	struct:__anon210
log2_prec_height	libavcodec/j2k.h	/^    uint8_t log2_prec_width, log2_prec_height; \/\/\/< exponent of precinct size$/;"	m	struct:__anon216
log2_prec_width	libavcodec/j2k.h	/^    uint8_t log2_prec_width, log2_prec_height; \/\/\/< exponent of precinct size$/;"	m	struct:__anon216
log2_prec_width	libavcodec/j2k.h	/^    uint8_t log2_prec_width,$/;"	m	struct:__anon210
log2_tab	libavcodec/ac3enc_fixed.c	/^static int log2_tab(AC3EncodeContext *s, int16_t *src, int len)$/;"	f	file:
log2f	libavutil/libm.h	57;"	d
log2f	libavutil/libm.h	58;"	d
log_callback_help	cmdutils.c	/^void log_callback_help(void* ptr, int level, const char* fmt, va_list vl)$/;"	f
log_callback_help	ffmpeg/cmdutils.c	/^void log_callback_help(void* ptr, int level, const char* fmt, va_list vl)$/;"	f
log_callback_null	ffmpeg.c	/^static void log_callback_null(void* ptr, int level, const char* fmt, va_list vl)$/;"	f	file:
log_callback_null	ffmpeg/ffmpeg.c	/^static void log_callback_null(void* ptr, int level, const char* fmt, va_list vl)$/;"	f	file:
log_connection	ffserver.c	/^static void log_connection(HTTPContext *c)$/;"	f	file:
log_ctx	libavutil/eval.c	/^    void *log_ctx;$/;"	m	struct:Parser	file:
log_ctx	libavutil/file.c	/^    void *log_ctx;$/;"	m	struct:__anon303	file:
log_ctx	libavutil/imgutils.c	/^    void *log_ctx;$/;"	m	struct:ImgUtils	file:
log_encoder_error	libavcodec/libvpxenc.c	/^static av_cold void log_encoder_error(AVCodecContext *avctx, const char *desc)$/;"	f	file:
log_factor	libavcodec/g722.c	/^        int16_t log_factor;          \/\/\/< delayed 2-logarithmic quantizer factor$/;"	m	struct:__anon140::G722Band	file:
log_file	configure	/^log_file(){$/;"	f
log_level_offset	libavcodec/avcodec.h	/^    int log_level_offset;$/;"	m	struct:AVCodecContext
log_level_offset_offset	libavutil/log.h	/^    int log_level_offset_offset;$/;"	m	struct:__anon308
log_n_blocks	libavcodec/wmavoice.c	/^    uint8_t log_n_blocks; \/\/\/< log2(#n_blocks)$/;"	m	struct:frame_type_desc	file:
log_offset	libavutil/eval.c	/^    int log_offset;$/;"	m	struct:Parser	file:
log_offset	libavutil/file.c	/^    int   log_offset;$/;"	m	struct:__anon303	file:
log_offset	libavutil/imgutils.c	/^    int   log_offset;$/;"	m	struct:ImgUtils	file:
log_range	libavcodec/wmavoice.c	573;"	d	file:
log_range	libavcodec/wmavoice.c	582;"	d	file:
logfile	ffmpeg.c	/^    FILE *logfile;$/;"	m	struct:AVOutputStream	file:
logfile	ffmpeg/ffmpeg.c	/^    FILE *logfile;$/;"	m	struct:AVOutputStream	file:
logfile	ffserver.c	/^static FILE *logfile = NULL;$/;"	v	file:
logfilename	ffserver.c	/^static char logfilename[1024];$/;"	v	file:
logical_width	libavcodec/qtrleenc.c	/^    int logical_width;$/;"	m	struct:QtrleEncContext	file:
longName	libpostproc/postprocess_internal.h	/^    const char *longName;$/;"	m	struct:PPFilter
long_arg	libavcodec/h264.h	/^    int long_arg;       \/\/\/< index, pic_num, or num long refs depending on opcode$/;"	m	struct:MMCO
long_end	libavcodec/mpegaudiodec.c	/^    int short_start, long_end; \/* long\/short band indexes *\/$/;"	m	struct:GranuleDef	file:
long_name	libavcodec/avcodec.h	/^    const char *long_name;$/;"	m	struct:AVCodec
long_name	libavformat/avformat.h	/^    const char *long_name;$/;"	m	struct:AVInputFormat
long_name	libavformat/avformat.h	/^    const char *long_name;$/;"	m	struct:AVOutputFormat
long_ref	libavcodec/h264.h	/^    Picture *long_ref[32];$/;"	m	struct:H264Context
long_ref	libavcodec/mpegvideo.h	/^    int long_ref;               \/\/\/< 1->long term reference 0->short term reference$/;"	m	struct:Picture
long_ref_count	libavcodec/h264.h	/^    int long_ref_count;  \/\/\/< number of actual long term references$/;"	m	struct:H264Context
long_term_prediction	libavcodec/alsdec.c	/^    int long_term_prediction; \/\/\/< long term prediction (LTP): 1 = on, 0 = off$/;"	m	struct:__anon150	file:
long_term_synth	libavcodec/gsmdec_template.c	/^static void long_term_synth(int16_t *dst, int lag, int gain_idx)$/;"	f	file:
lookup	libavcodec/vorbis_enc_data.h	/^    int lookup;$/;"	m	struct:__anon273
lookup	libavcodec/vorbisenc.c	/^    int lookup;$/;"	m	struct:__anon188	file:
lookup_type	libavcodec/vorbisdec.c	/^    uint8_t      lookup_type;$/;"	m	struct:__anon258	file:
loop	ffplay.c	/^static int loop=1;$/;"	v	file:
loop	ffserver.c	/^    int loop; \/* if true, send the stream in loops (only meaningful if file) *\/$/;"	m	struct:FFStream	file:
loop_filter	libavcodec/h264.c	/^static void loop_filter(H264Context *h, int start_x, int end_x){$/;"	f	file:
loop_filter	libavcodec/mpegvideo.h	/^    int loop_filter;$/;"	m	struct:MpegEncContext
loop_filter	libavcodec/rv34.h	/^    void (*loop_filter)(struct RV34DecContext *r, int row);$/;"	m	struct:RV34DecContext
loop_filter_c1	libavcodec/cavsdsp.c	/^static inline void loop_filter_c1(uint8_t *p0_p,int stride,int alpha, int beta,$/;"	f	file:
loop_filter_c2	libavcodec/cavsdsp.c	/^static inline void loop_filter_c2(uint8_t *p0_p,int stride,int alpha, int beta) {$/;"	f	file:
loop_filter_disable	libavcodec/cavs.h	/^    int loop_filter_disable;$/;"	m	struct:__anon207
loop_filter_l1	libavcodec/cavsdsp.c	/^static inline void loop_filter_l1(uint8_t *p0_p, int stride, int alpha, int beta, int tc) {$/;"	f	file:
loop_filter_l2	libavcodec/cavsdsp.c	/^static inline void loop_filter_l2(uint8_t *p0_p,int stride,int alpha, int beta) {$/;"	f	file:
loop_input	ffmpeg.c	/^static int loop_input = 0;$/;"	v	file:
loop_input	ffmpeg/ffmpeg.c	/^static int loop_input = 0;$/;"	v	file:
loop_input	libavformat/avformat.h	/^    int loop_input;$/;"	m	struct:AVFormatContext
loop_output	ffmpeg.c	/^static int loop_output = AVFMT_NOOUTPUTLOOP;$/;"	v	file:
loop_output	ffmpeg/ffmpeg.c	/^static int loop_output = AVFMT_NOOUTPUTLOOP;$/;"	v	file:
loop_output	libavformat/avformat.h	/^    int loop_output;$/;"	m	struct:AVFormatContext
loro_center_mix_level	libavcodec/ac3.h	/^    float loro_center_mix_level;$/;"	m	struct:AC3EncOptions
loro_center_mix_level	libavcodec/ac3enc.h	/^    int loro_center_mix_level;              \/\/\/< Lo\/Ro center mix level code$/;"	m	struct:AC3EncodeContext
loro_surround_mix_level	libavcodec/ac3.h	/^    float loro_surround_mix_level;$/;"	m	struct:AC3EncOptions
loro_surround_mix_level	libavcodec/ac3enc.h	/^    int loro_surround_mix_level;            \/\/\/< Lo\/Ro surround mix level code$/;"	m	struct:AC3EncodeContext
lossless	libavcodec/mjpegdec.h	/^    int lossless;$/;"	m	struct:MJpegDecodeContext
lossless	libavcodec/sonic.c	/^    int lossless, decorrelation;$/;"	m	struct:SonicContext	file:
lossless_check_data	libavcodec/mlpdec.c	/^    int32_t     lossless_check_data;$/;"	m	struct:SubStream	file:
lossless_quant	libavcodec/dcadata.h	/^static const uint32_t lossless_quant[32] = {$/;"	v
lossless_quant_d	libavcodec/dcadata.h	/^static const float lossless_quant_d[32] = {$/;"	v
lossy	libavcodec/loco.c	/^    int lossy;$/;"	m	struct:LOCOContext	file:
lossy	libavcodec/loco.c	/^    int lossy;$/;"	m	struct:RICEContext	file:
lossy_quant	libavcodec/dcadata.h	/^static const uint32_t lossy_quant[32] = {$/;"	v
lossy_quant_d	libavcodec/dcadata.h	/^static const float lossy_quant_d[32] = {$/;"	v
low	libavcodec/apedec.c	/^    uint32_t low;           \/\/\/< low end of interval$/;"	m	struct:APERangecoder	file:
low	libavcodec/cabac.h	/^    int low;$/;"	m	struct:CABACContext
low	libavcodec/lagarithrac.h	/^    unsigned low;$/;"	m	struct:lag_rac
low	libavcodec/rangecoder.h	/^    int low;$/;"	m	struct:RangeCoder
low	libavcodec/vorbis.h	/^    uint16_t low;$/;"	m	struct:__anon61
low	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct metrics tiny, low, high, bigger, twox, max;$/;"	m	struct:frame_stats	typeref:struct:frame_stats::	file:
lowPixelMask	libavfilter/libmpcodecs/vf_2xsai.c	/^static uint32_t lowPixelMask = 0x08210821;$/;"	v	file:
low_delay	libavcodec/mpegvideo.h	/^    int low_delay;                   \/\/\/< no reordering needed \/ has no b-frames$/;"	m	struct:MpegEncContext
low_inv_quant4	libavcodec/g722.c	/^static const int16_t low_inv_quant4[16] = {$/;"	v	file:
low_inv_quant5	libavcodec/g722.c	/^static const int16_t low_inv_quant5[32] = {$/;"	v	file:
low_inv_quant6	libavcodec/g722.c	/^static const int16_t low_inv_quant6[64] = {$/;"	v	file:
low_inv_quants	libavcodec/g722.c	/^static const int16_t *low_inv_quants[3] = { low_inv_quant6, low_inv_quant5,$/;"	v	file:
low_latency_sprite	libavcodec/mpegvideo.h	/^    int low_latency_sprite;$/;"	m	struct:MpegEncContext
low_log_factor_step	libavcodec/g722.c	/^static const int16_t low_log_factor_step[16] = {$/;"	v	file:
low_nibble	libavcodec/yop.c	/^    uint8_t *low_nibble;$/;"	m	struct:YopDecContext	file:
low_quant	libavcodec/g722.c	/^static const int16_t low_quant[33] = {$/;"	v	file:
lower_transport	libavformat/rtsp.h	/^    enum RTSPLowerTransport lower_transport;$/;"	m	struct:RTSPState	typeref:enum:RTSPState::RTSPLowerTransport
lower_transport	libavformat/rtsp.h	/^    enum RTSPLowerTransport lower_transport;$/;"	m	struct:RTSPTransportField	typeref:enum:RTSPTransportField::RTSPLowerTransport
lower_transport_mask	libavformat/rtsp.h	/^    int lower_transport_mask;$/;"	m	struct:RTSPState
lowres	ffplay.c	/^static int lowres = 0;$/;"	v	file:
lowres	libavcodec/avcodec.h	/^     int lowres;$/;"	m	struct:AVCodecContext
lp	libavcodec/ppc/asm.S	/^#define lp   ld$/;"	d
lp	libavcodec/ppc/asm.S	/^#define lp   lwz$/;"	d
lp_coef	libavcodec/amrwbdec.c	/^    float                   lp_coef[4][LP_ORDER]; \/\/\/< Linear Prediction Coefficients from ISP vector$/;"	m	struct:__anon64	file:
lpc	libavcodec/alacenc.c	/^    AlacLPCContext lpc[MAX_CHANNELS];$/;"	m	struct:AlacEncodeContext	file:
lpc	libavcodec/amrnbdec.c	/^    float           lpc[4][LP_FILTER_ORDER]; \/\/\/< lpc coefficient vectors for 4 subframes$/;"	m	struct:AMRContext	file:
lpc_apply_welch_window	libavcodec/lpc.h	/^    void (*lpc_apply_welch_window)(const int32_t *data, int len,$/;"	m	struct:LPCContext
lpc_apply_welch_window_c	libavcodec/lpc.c	/^static void lpc_apply_welch_window_c(const int32_t *data, int len,$/;"	f	file:
lpc_apply_welch_window_sse2	libavcodec/x86/lpc_mmx.c	/^static void lpc_apply_welch_window_sse2(const int32_t *data, int len,$/;"	f	file:
lpc_coef	libavcodec/ra144.h	/^    unsigned int    *lpc_coef[2];$/;"	m	struct:__anon167
lpc_coeff	libavcodec/alacenc.c	/^    int lpc_coeff[ALAC_MAX_LPC_ORDER+1];$/;"	m	struct:AlacLPCContext	file:
lpc_coeff_precision	libavcodec/avcodec.h	/^    attribute_deprecated int lpc_coeff_precision;$/;"	m	struct:AVCodecContext
lpc_coeff_precision	libavcodec/flacenc.c	/^    int lpc_coeff_precision;$/;"	m	struct:CompressionOptions	file:
lpc_cof	libavcodec/alsdec.c	/^    int32_t      *lpc_cof;          \/\/\/< coefficients of the direct form prediction$/;"	m	struct:__anon153	file:
lpc_cof	libavcodec/alsdec.c	/^    int32_t **lpc_cof;              \/\/\/< coefficients of the direct form prediction filter for a channel$/;"	m	struct:__anon152	file:
lpc_cof_buffer	libavcodec/alsdec.c	/^    int32_t *lpc_cof_buffer;        \/\/\/< contains all coefficients of the direct form prediction filter$/;"	m	struct:__anon152	file:
lpc_cof_reversed_buffer	libavcodec/alsdec.c	/^    int32_t *lpc_cof_reversed_buffer; \/\/\/< temporary buffer to set up a reversed versio of lpc_cof_buffer$/;"	m	struct:__anon152	file:
lpc_compute_autocorr	libavcodec/lpc.h	/^    void (*lpc_compute_autocorr)(const double *data, int len, int lag,$/;"	m	struct:LPCContext
lpc_compute_autocorr_c	libavcodec/lpc.c	/^static void lpc_compute_autocorr_c(const double *data, int len, int lag,$/;"	f	file:
lpc_compute_autocorr_sse2	libavcodec/x86/lpc_mmx.c	/^static void lpc_compute_autocorr_sse2(const double *data, int len, int lag,$/;"	f	file:
lpc_ctx	libavcodec/alacenc.c	/^    LPCContext lpc_ctx;$/;"	m	struct:AlacEncodeContext	file:
lpc_ctx	libavcodec/flacenc.c	/^    LPCContext lpc_ctx;$/;"	m	struct:FlacEncodeContext	file:
lpc_ctx	libavcodec/ra144.h	/^    LPCContext lpc_ctx;$/;"	m	struct:__anon167
lpc_order	libavcodec/alacenc.c	/^    int lpc_order;$/;"	m	struct:AlacLPCContext	file:
lpc_passes	libavcodec/avcodec.h	/^    attribute_deprecated int lpc_passes;$/;"	m	struct:AVCodecContext
lpc_passes	libavcodec/flacenc.c	/^    int lpc_passes;$/;"	m	struct:CompressionOptions	file:
lpc_quant	libavcodec/alacenc.c	/^    int lpc_quant;$/;"	m	struct:AlacLPCContext	file:
lpc_refl_cb1	libavcodec/ra144.c	/^static const int16_t lpc_refl_cb1[64]={$/;"	v	file:
lpc_refl_cb10	libavcodec/ra144.c	/^static const int16_t lpc_refl_cb10[4]={$/;"	v	file:
lpc_refl_cb2	libavcodec/ra144.c	/^static const int16_t lpc_refl_cb2[32]={$/;"	v	file:
lpc_refl_cb3	libavcodec/ra144.c	/^static const int16_t lpc_refl_cb3[32]={$/;"	v	file:
lpc_refl_cb4	libavcodec/ra144.c	/^static const int16_t lpc_refl_cb4[16]={$/;"	v	file:
lpc_refl_cb5	libavcodec/ra144.c	/^static const int16_t lpc_refl_cb5[16]={$/;"	v	file:
lpc_refl_cb6	libavcodec/ra144.c	/^static const int16_t lpc_refl_cb6[8]={$/;"	v	file:
lpc_refl_cb7	libavcodec/ra144.c	/^static const int16_t lpc_refl_cb7[8]={$/;"	v	file:
lpc_refl_cb8	libavcodec/ra144.c	/^static const int16_t lpc_refl_cb8[8]={$/;"	v	file:
lpc_refl_cb9	libavcodec/ra144.c	/^static const int16_t lpc_refl_cb9[8]={$/;"	v	file:
lpc_refl_rms	libavcodec/ra144.h	/^    unsigned int     lpc_refl_rms[2];$/;"	m	struct:__anon167
lpc_tables	libavcodec/ra144.h	/^    unsigned int     lpc_tables[2][10];$/;"	m	struct:__anon167
lpc_type	libavcodec/avcodec.h	/^    attribute_deprecated enum AVLPCType lpc_type;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVLPCType
lpc_type	libavcodec/flacenc.c	/^    enum FFLPCType lpc_type;$/;"	m	struct:CompressionOptions	typeref:enum:CompressionOptions::FFLPCType	file:
lpc_type	libavcodec/lpc.h	/^    enum FFLPCType lpc_type;$/;"	m	struct:LPCContext	typeref:enum:LPCContext::FFLPCType
lpc_weighting	libavcodec/amrwbdec.c	/^static void lpc_weighting(float *out, const float *lpc, float gamma, int size)$/;"	f	file:
lpcm_align	libavformat/mpegenc.c	/^    int lpcm_align;$/;"	m	struct:__anon428	file:
lpcm_freq_tab	libavformat/mpeg.h	/^static const int lpcm_freq_tab[4] = { 48000, 96000, 44100, 32000 };$/;"	v
lpcm_header	libavformat/mpegenc.c	/^    uint8_t lpcm_header[3];$/;"	m	struct:__anon428	file:
lpcqoffset	libavcodec/shorten.c	/^    int32_t lpcqoffset;$/;"	m	struct:ShortenContext	file:
lpf_7_coef	libavcodec/amrwbdata.h	/^static const float lpf_7_coef[31] = { \/\/ low pass, 7kHz cutoff$/;"	v
lpf_7_mem	libavcodec/amrwbdec.c	/^    float                 lpf_7_mem[HB_FIR_SIZE]; \/\/\/< previous values in the high-band low pass filter$/;"	m	struct:__anon64	file:
lps_range	libavcodec/cabac.c	/^static const uint8_t lps_range[64][4]= {$/;"	v	file:
lps_state	libavcodec/cabac.c	/^static const uint8_t lps_state[64]= {$/;"	v	file:
lpx	libavcodec/ppc/asm.S	/^#define lpx  ldx$/;"	d
lpx	libavcodec/ppc/asm.S	/^#define lpx  lwzx$/;"	d
lq	libavcodec/nuv.c	/^    uint32_t lq[64], cq[64];$/;"	m	struct:__anon100	file:
lq	libavcodec/ps2/mmi.h	62;"	d
lq2	libavcodec/ps2/mmi.h	65;"	d
lquant	libavcodec/rtjpeg.h	/^    uint32_t lquant[64];$/;"	m	struct:__anon172
lrint	libavutil/libm.h	/^static av_always_inline av_const long int lrint(double x)$/;"	f
lrintf	libavutil/libm.h	/^static av_always_inline av_const long int lrintf(float x)$/;"	f
ls	libavcodec/mjpegdec.h	/^    int ls;$/;"	m	struct:MJpegDecodeContext
ls_decode_line	libavcodec/jpeglsdec.c	/^static inline void ls_decode_line(JLSState *state, MJpegDecodeContext *s, void *last, void *dst, int last2, int w, int stride, int comp, int bits){$/;"	f	file:
ls_encode_line	libavcodec/jpeglsenc.c	/^static inline void ls_encode_line(JLSState *state, PutBitContext *pb, void *last, void *cur, int last2, int w, int stride, int comp, int bits){$/;"	f	file:
ls_encode_regular	libavcodec/jpeglsenc.c	/^static inline void ls_encode_regular(JLSState *state, PutBitContext *pb, int Q, int err){$/;"	f	file:
ls_encode_run	libavcodec/jpeglsenc.c	/^static inline void ls_encode_run(JLSState *state, PutBitContext *pb, int run, int comp, int trail){$/;"	f	file:
ls_encode_runterm	libavcodec/jpeglsenc.c	/^static inline void ls_encode_runterm(JLSState *state, PutBitContext *pb, int RItype, int err, int limit_add){$/;"	f	file:
ls_get_code_regular	libavcodec/jpeglsdec.c	/^static inline int ls_get_code_regular(GetBitContext *gb, JLSState *state, int Q){$/;"	f	file:
ls_get_code_runterm	libavcodec/jpeglsdec.c	/^static inline int ls_get_code_runterm(GetBitContext *gb, JLSState *state, int RItype, int limit_add){$/;"	f	file:
ls_store_lse	libavcodec/jpeglsenc.c	/^static void ls_store_lse(JLSState *state, PutBitContext *pb){$/;"	f	file:
lsb_bypass	libavcodec/mlpdec.c	/^    uint8_t     lsb_bypass[MAX_MATRICES];$/;"	m	struct:SubStream	file:
lseek	libavformat/os_support.h	34;"	d
lsf	libavcodec/amrnbdata.h	/^    uint16_t lsf[5];           \/\/\/< lsf parameters: 5 parameters for MODE_12k2, only 3 for other modes$/;"	m	struct:__anon284
lsf	libavcodec/mpegaudioenc.c	/^    int lsf;           \/* 1 if mpeg2 low bitrate selected *\/$/;"	m	struct:MpegAudioContext	file:
lsf2lsp	libavcodec/sipr16k.c	/^static void lsf2lsp(const float *lsf, double *lsp)$/;"	f	file:
lsf2lsp_3	libavcodec/amrnbdec.c	/^static void lsf2lsp_3(AMRContext *p)$/;"	f	file:
lsf2lsp_5	libavcodec/amrnbdec.c	/^static void lsf2lsp_5(AMRContext *p)$/;"	f	file:
lsf2lsp_for_mode12k2	libavcodec/amrnbdec.c	/^static void lsf2lsp_for_mode12k2(AMRContext *p, double lsp[LP_FILTER_ORDER],$/;"	f	file:
lsf_3_1	libavcodec/amrnbdata.h	/^static const int16_t lsf_3_1[256][3] = {$/;"	v
lsf_3_1_MODE_7k95	libavcodec/amrnbdata.h	/^static const int16_t lsf_3_1_MODE_7k95[512][3] = {$/;"	v
lsf_3_2	libavcodec/amrnbdata.h	/^static const int16_t lsf_3_2[512][3] = {$/;"	v
lsf_3_3	libavcodec/amrnbdata.h	/^static const int16_t lsf_3_3[512][4] = {$/;"	v
lsf_3_3_MODE_5k15	libavcodec/amrnbdata.h	/^static const int16_t lsf_3_3_MODE_5k15[128][4] = {$/;"	v
lsf_3_mean	libavcodec/amrnbdata.h	/^static const float lsf_3_mean[LP_FILTER_ORDER] = {$/;"	v
lsf_5_1	libavcodec/amrnbdata.h	/^static const int16_t lsf_5_1[128][4] = {$/;"	v
lsf_5_2	libavcodec/amrnbdata.h	/^static const int16_t lsf_5_2[256][4] = {$/;"	v
lsf_5_3	libavcodec/amrnbdata.h	/^static const int16_t lsf_5_3[256][4] = {$/;"	v
lsf_5_4	libavcodec/amrnbdata.h	/^static const int16_t lsf_5_4[256][4] = {$/;"	v
lsf_5_5	libavcodec/amrnbdata.h	/^static const int16_t lsf_5_5[64][4] = {$/;"	v
lsf_5_mean	libavcodec/amrnbdata.h	/^static const float lsf_5_mean[LP_FILTER_ORDER] = {$/;"	v
lsf_avg	libavcodec/amrnbdec.c	/^    float          lsf_avg[LP_FILTER_ORDER]; \/\/\/< vector of averaged lsf vector$/;"	m	struct:AMRContext	file:
lsf_cb1	libavcodec/siprdata.h	/^static const float lsf_cb1[64][2] = {$/;"	v
lsf_cb1_16k	libavcodec/sipr16kdata.h	/^static const float lsf_cb1_16k[128][3] = {$/;"	v
lsf_cb2	libavcodec/siprdata.h	/^static const float lsf_cb2[128][2] = {$/;"	v
lsf_cb2_16k	libavcodec/sipr16kdata.h	/^static const float lsf_cb2_16k[256][3] = {$/;"	v
lsf_cb3	libavcodec/siprdata.h	/^static const float lsf_cb3[128][2] = {$/;"	v
lsf_cb3_16k	libavcodec/sipr16kdata.h	/^static const float lsf_cb3_16k[128][3] = {$/;"	v
lsf_cb4	libavcodec/siprdata.h	/^static const float lsf_cb4[128][2] = {$/;"	v
lsf_cb4_16k	libavcodec/sipr16kdata.h	/^static const float lsf_cb4_16k[128][3] = {$/;"	v
lsf_cb5	libavcodec/siprdata.h	/^static const float lsf_cb5[32][2] = {$/;"	v
lsf_cb5_16k	libavcodec/sipr16kdata.h	/^static const float lsf_cb5_16k[128][4] = {$/;"	v
lsf_codebooks	libavcodec/siprdata.h	/^static const float *lsf_codebooks[] = {$/;"	v
lsf_codebooks_16k	libavcodec/sipr16kdata.h	/^static const float *lsf_codebooks_16k[] = {$/;"	v
lsf_decode	libavcodec/g729dec.c	/^static void lsf_decode(int16_t* lsfq, int16_t* past_quantizer_outputs[MA_NP + 1],$/;"	f	file:
lsf_decode_fp	libavcodec/sipr.c	/^static void lsf_decode_fp(float *lsfnew, float *lsf_history,$/;"	f	file:
lsf_decode_fp_16k	libavcodec/sipr16k.c	/^static void lsf_decode_fp_16k(float* lsf_history, float* isp_new,$/;"	f	file:
lsf_history	libavcodec/sipr.h	/^    float lsf_history[LP_FILTER_ORDER_16k];$/;"	m	struct:__anon235
lsf_nsf_table	libavcodec/mpegaudiodectab.h	/^static const uint8_t lsf_nsf_table[6][3][4] = {$/;"	v
lsf_q	libavcodec/amrnbdec.c	/^    float         lsf_q[4][LP_FILTER_ORDER]; \/\/\/< Interpolated LSF vector for fixed gain smoothing$/;"	m	struct:AMRContext	file:
lsf_sf_expand	libavcodec/mpegaudiodec.c	/^static av_always_inline void lsf_sf_expand(int *slen,$/;"	f	file:
lsfq	libavcodec/g729dec.c	/^    int16_t lsfq[10];           \/\/\/< (2.13) quantized LSF coefficients from previous frame$/;"	m	struct:__anon272	file:
lsp	libavcodec/amrnbdec.c	/^    double          lsp[4][LP_FILTER_ORDER]; \/\/\/< lsp vectors from current frame$/;"	m	struct:AMRContext	file:
lsp	libavcodec/g729dec.c	/^    int16_t *lsp[2];            \/\/\/< pointers to lsp_buf$/;"	m	struct:__anon272	file:
lsp	libavcodec/vorbisdec.c	/^            float        *lsp;$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor0_s	file:
lsp08	libavcodec/twinvq_data.h	/^    float lsp08[504];$/;"	m	struct:__anon263
lsp11	libavcodec/twinvq_data.h	/^    float lsp11[1312];$/;"	m	struct:__anon263
lsp16	libavcodec/twinvq_data.h	/^    float lsp16[1400];$/;"	m	struct:__anon263
lsp22_1	libavcodec/twinvq_data.h	/^    float lsp22_1[1312];$/;"	m	struct:__anon263
lsp22_2	libavcodec/twinvq_data.h	/^    float lsp22_2[1312];$/;"	m	struct:__anon263
lsp2poly	libavcodec/lsp.c	/^static void lsp2poly(int* f, const int16_t* lsp, int lp_half_order)$/;"	f	file:
lsp44	libavcodec/twinvq_data.h	/^    float lsp44[1640];$/;"	m	struct:__anon263
lsp_avg_init	libavcodec/amrnbdata.h	/^static const int16_t lsp_avg_init[LP_FILTER_ORDER] = {$/;"	v
lsp_bit0	libavcodec/twinvq.c	/^    uint8_t      lsp_bit0;$/;"	m	struct:__anon66	file:
lsp_bit1	libavcodec/twinvq.c	/^    uint8_t      lsp_bit1;$/;"	m	struct:__anon66	file:
lsp_bit2	libavcodec/twinvq.c	/^    uint8_t      lsp_bit2;$/;"	m	struct:__anon66	file:
lsp_buf	libavcodec/g729dec.c	/^    int16_t lsp_buf[2][10];     \/\/\/< (0.15) LSP coefficients (previous and current frames) (3.2.5)$/;"	m	struct:__anon272	file:
lsp_cos_table	libavcodec/wma.h	/^    float lsp_cos_table[BLOCK_MAX_SIZE];$/;"	m	struct:WMACodecContext
lsp_def_mode	libavcodec/wmavoice.c	/^    int lsp_def_mode;             \/\/\/< defines different sets of LSP defaults$/;"	m	struct:__anon157	file:
lsp_hist	libavcodec/twinvq.c	/^    float lsp_hist[2][20];           \/\/\/< LSP coefficients of the last frame$/;"	m	struct:TwinContext	file:
lsp_history	libavcodec/sipr.h	/^    float lsp_history[LP_FILTER_ORDER];$/;"	m	struct:__anon235
lsp_history_16k	libavcodec/sipr.h	/^    double lsp_history_16k[16];$/;"	m	struct:__anon235
lsp_init	libavcodec/g729data.h	/^static const int16_t lsp_init[10]= { \/* (0.15) *\/$/;"	v
lsp_pow_e_table	libavcodec/wma.h	/^    float lsp_pow_e_table[256];$/;"	m	struct:WMACodecContext
lsp_pow_m_table1	libavcodec/wma.h	/^    float lsp_pow_m_table1[(1 << LSP_POW_BITS)];$/;"	m	struct:WMACodecContext
lsp_pow_m_table2	libavcodec/wma.h	/^    float lsp_pow_m_table2[(1 << LSP_POW_BITS)];$/;"	m	struct:WMACodecContext
lsp_q_mode	libavcodec/wmavoice.c	/^    int lsp_q_mode;               \/\/\/< defines quantizer defaults [0, 1]$/;"	m	struct:__anon157	file:
lsp_split	libavcodec/twinvq.c	/^    uint8_t      lsp_split;      \/\/\/< number of CB entries for the LSP decoding$/;"	m	struct:__anon66	file:
lsp_sub4_init	libavcodec/amrnbdata.h	/^static const int8_t lsp_sub4_init[LP_FILTER_ORDER] = {$/;"	v
lspcodebook	libavcodec/twinvq.c	/^    const float *lspcodebook;$/;"	m	struct:__anon66	file:
lspf2lpc	libavcodec/qcelpdec.c	/^static void lspf2lpc(const float *lspf, float *lpc)$/;"	f	file:
lsps	libavcodec/wmavoice.c	/^    int lsps;                     \/\/\/< number of LSPs per frame [10 or 16]$/;"	m	struct:__anon157	file:
lspv	libavcodec/qcelpdata.h	/^    uint8_t lspv[10];$/;"	m	struct:__anon84
ltc_divisor	libavcodec/dvdata.h	/^    int              ltc_divisor;           \/* FPS from the LTS standpoint *\/$/;"	m	struct:DVprofile
ltp	libavcodec/aac.h	/^    LongTermPrediction ltp;$/;"	m	struct:__anon239
ltp	libavcodec/amrwbdata.h	/^    uint16_t ltp;                          \/\/\/< ltp-filtering flag$/;"	m	struct:__anon110
ltp_coef	libavcodec/aacdectab.h	/^static const float ltp_coef[8] = {$/;"	v
ltp_gain	libavcodec/alsdec.c	/^    int          *ltp_gain;         \/\/\/< gain values for ltp 5-tap filter$/;"	m	struct:__anon153	file:
ltp_gain	libavcodec/alsdec.c	/^    int **ltp_gain;                 \/\/\/< gain values for ltp 5-tap filter for a channel$/;"	m	struct:__anon152	file:
ltp_gain_buffer	libavcodec/alsdec.c	/^    int *ltp_gain_buffer;           \/\/\/< contains all gain values for ltp 5-tap filter$/;"	m	struct:__anon152	file:
ltp_gain_values	libavcodec/alsdec.c	/^static const uint8_t ltp_gain_values [4][4] = {$/;"	v	file:
ltp_lag	libavcodec/alsdec.c	/^    int          *ltp_lag;          \/\/\/< lag value for long-term prediction$/;"	m	struct:__anon153	file:
ltp_lag	libavcodec/alsdec.c	/^    int *ltp_lag;                   \/\/\/< contains ltp lag values for all channels$/;"	m	struct:__anon152	file:
ltp_lag_length	libavcodec/alsdec.c	/^    int ltp_lag_length;             \/\/\/< number of bits used for ltp lag value$/;"	m	struct:__anon152	file:
ltransform	libswscale/bfin/yuv2rgb_bfin.c	/^typedef void (* ltransform)(uint8_t *Y, uint8_t *U, uint8_t *V, uint8_t *out,$/;"	t	file:
ltrt_center_mix_level	libavcodec/ac3.h	/^    float ltrt_center_mix_level;$/;"	m	struct:AC3EncOptions
ltrt_center_mix_level	libavcodec/ac3enc.h	/^    int ltrt_center_mix_level;              \/\/\/< Lt\/Rt center mix level code$/;"	m	struct:AC3EncodeContext
ltrt_surround_mix_level	libavcodec/ac3.h	/^    float ltrt_surround_mix_level;$/;"	m	struct:AC3EncOptions
ltrt_surround_mix_level	libavcodec/ac3enc.h	/^    int ltrt_surround_mix_level;            \/\/\/< Lt\/Rt surround mix level code$/;"	m	struct:AC3EncodeContext
lum	libavfilter/libmpcodecs/vf_geq.c	/^static double lum(void *vf, double x, double y){$/;"	f	file:
lumBufIndex	libswscale/swscale_internal.h	/^    int       lumBufIndex;        \/\/\/< Index in ring buffer of the last scaled horizontal luma\/alpha line from source.$/;"	m	struct:SwsContext
lumConvertRange	libswscale/swscale_internal.h	/^    void (*lumConvertRange)(int16_t *dst, int width); \/\/\/< Color range conversion function for luma plane if needed.$/;"	m	struct:SwsContext
lumH	libswscale/swscale.h	/^    SwsVector *lumH;$/;"	m	struct:__anon287
lumMmx2FilterCode	libswscale/swscale_internal.h	/^    uint8_t *lumMmx2FilterCode;   \/\/\/< Runtime-generated MMX2 horizontal fast bilinear scaler code for luma\/alpha planes.$/;"	m	struct:SwsContext
lumMmx2FilterCodeSize	libswscale/swscale_internal.h	/^    int lumMmx2FilterCodeSize;    \/\/\/< Runtime-generated MMX2 horizontal fast bilinear scaler code size for luma\/alpha planes.$/;"	m	struct:SwsContext
lumMmxFilter	libswscale/swscale_internal.h	/^    int32_t  lumMmxFilter[4*MAX_FILTER_SIZE];$/;"	m	struct:SwsContext
lumMode	libpostproc/postprocess_internal.h	/^    int lumMode;                    \/\/\/< acivates filters for luminance$/;"	m	struct:PPMode
lumPixBuf	libswscale/swscale_internal.h	/^    int16_t **lumPixBuf;          \/\/\/< Ring buffer for scaled horizontal luma   plane lines to be fed to the vertical scaler.$/;"	m	struct:SwsContext
lumToYV12	libswscale/swscale_internal.h	/^    void (*lumToYV12)(uint8_t *dst, const uint8_t *src,$/;"	m	struct:SwsContext
lumV	libswscale/swscale.h	/^    SwsVector *lumV;$/;"	m	struct:__anon287
lumXInc	libswscale/swscale_internal.h	/^    int lumXInc, chrXInc;$/;"	m	struct:SwsContext
lumYInc	libswscale/swscale_internal.h	/^    int lumYInc, chrYInc;$/;"	m	struct:SwsContext
luma	libavfilter/libmpcodecs/vf_sab.c	/^    FilterParam luma;$/;"	m	struct:vf_priv_s	file:
luma	libavfilter/libmpcodecs/vf_smartblur.c	/^    FilterParam luma;$/;"	m	struct:vf_priv_s	file:
luma	libavfilter/vf_unsharp.c	/^    FilterParam luma;   \/\/\/< luma parameters (width, height, amount)$/;"	m	struct:__anon50	file:
lumaParam	libavfilter/libmpcodecs/vf_boxblur.c	/^        FilterParam lumaParam;$/;"	m	struct:vf_priv_s	file:
lumaParam	libavfilter/libmpcodecs/vf_il.c	/^    FilterParam lumaParam;$/;"	m	struct:vf_priv_s	file:
lumaParam	libavfilter/libmpcodecs/vf_noise.c	/^        FilterParam lumaParam;$/;"	m	struct:vf_priv_s	file:
lumaParam	libavfilter/libmpcodecs/vf_unsharp.c	/^    FilterParam lumaParam;$/;"	m	struct:vf_priv_s	file:
luma_bands	libavcodec/ivi_common.h	/^    uint8_t     luma_bands;$/;"	m	struct:__anon109
luma_dc_field_scan	libavcodec/h264data.h	/^static const uint8_t luma_dc_field_scan[16]={$/;"	v
luma_dc_qmul	libavcodec/vp8.h	/^        int16_t luma_dc_qmul[2];    \/\/\/< luma dc-only block quant$/;"	m	struct:__anon182::__anon185
luma_dc_quant_i	libavcodec/rv34.h	/^    const uint8_t *luma_dc_quant_i;\/\/\/< luma subblock DC quantizer for intraframes$/;"	m	struct:RV34DecContext
luma_dc_quant_p	libavcodec/rv34.h	/^    const uint8_t *luma_dc_quant_p;\/\/\/< luma subblock DC quantizer for interframes$/;"	m	struct:RV34DecContext
luma_dc_vlc_length	libavcodec/mpegvideo.h	/^    uint8_t *luma_dc_vlc_length;$/;"	m	struct:MpegEncContext
luma_dc_zigzag_scan	libavcodec/h264data.h	/^static const uint8_t luma_dc_zigzag_scan[16]={$/;"	v
luma_elim_threshold	libavcodec/avcodec.h	/^    int luma_elim_threshold;$/;"	m	struct:AVCodecContext
luma_elim_threshold	libavcodec/mpegvideo.h	/^    int luma_elim_threshold;$/;"	m	struct:MpegEncContext
luma_log2_weight_denom	libavcodec/h264.h	/^    int luma_log2_weight_denom;$/;"	m	struct:H264Context
luma_mv	libavcodec/vc1.h	/^    int16_t (*luma_mv_base)[2], (*luma_mv)[2];$/;"	m	struct:VC1Context
luma_mv_base	libavcodec/vc1.h	/^    int16_t (*luma_mv_base)[2], (*luma_mv)[2];$/;"	m	struct:VC1Context
luma_only	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned luma_only;$/;"	m	struct:vf_priv_s	file:
luma_qmul	libavcodec/vp8.h	/^        int16_t luma_qmul[2];$/;"	m	struct:__anon182::__anon185
luma_scan	libavcodec/cavs.h	/^    int luma_scan[4];$/;"	m	struct:__anon207
luma_vlc	libavcodec/rv34.h	/^    int luma_vlc;            \/\/\/< which VLC set will be used for decoding of luma blocks$/;"	m	struct:RV34DecContext
luma_weight	libavcodec/dnxhddata.h	/^    const uint8_t *luma_weight, *chroma_weight;$/;"	m	struct:__anon281
luma_weight	libavcodec/h264.h	/^    int luma_weight[48][2][2];$/;"	m	struct:H264Context
luma_weight_flag	libavcodec/h264.h	/^    int luma_weight_flag[2];   \/\/\/< 7.4.3.2 luma_weight_lX_flag$/;"	m	struct:H264Context
lumi_masking	libavcodec/avcodec.h	/^    float lumi_masking;$/;"	m	struct:AVCodecContext
lumscale	libavcodec/vc1.h	/^    uint8_t lumscale;$/;"	m	struct:VC1Context
lumshift	libavcodec/vc1.h	/^    uint8_t lumshift;$/;"	m	struct:VC1Context
lut	libavfilter/libmpcodecs/vf_eq2.c	/^  unsigned char lut[256];$/;"	m	struct:eq2_param_t	file:
lut	libavfilter/libmpcodecs/vf_qp.c	/^        int8_t lut[257];$/;"	m	struct:vf_priv_s	file:
lut	libavfilter/vf_lut.c	/^    uint8_t lut[4][256];  \/\/\/< lookup table for each component$/;"	m	struct:__anon23	file:
lut16	libavfilter/libmpcodecs/vf_eq2.c	/^  uint16_t lut16[256*256];$/;"	m	struct:eq2_param_t	file:
lut_class	libavfilter/vf_lut.c	/^static const AVClass lut_class = {$/;"	v	file:
lut_clean	libavfilter/libmpcodecs/vf_eq2.c	/^  int           lut_clean;$/;"	m	struct:eq2_param_t	file:
lut_get_name	libavfilter/vf_lut.c	/^static const char *lut_get_name(void *ctx)$/;"	f	file:
lut_nmsedec_ref	libavcodec/j2kenc.c	/^static int lut_nmsedec_ref [1<<NMSEDEC_BITS],$/;"	v	file:
lut_nmsedec_ref0	libavcodec/j2kenc.c	/^           lut_nmsedec_ref0[1<<NMSEDEC_BITS],$/;"	v	file:
lut_nmsedec_sig	libavcodec/j2kenc.c	/^           lut_nmsedec_sig [1<<NMSEDEC_BITS],$/;"	v	file:
lut_nmsedec_sig0	libavcodec/j2kenc.c	/^           lut_nmsedec_sig0[1<<NMSEDEC_BITS];$/;"	v	file:
lut_options	libavfilter/vf_lut.c	/^static const AVOption lut_options[] = {$/;"	v	file:
lutuv	libavcodec/vc1.h	/^    uint8_t luty[256], lutuv[256]; \/\/ lookup tables used for intensity compensation$/;"	m	struct:VC1Context
luty	libavcodec/vc1.h	/^    uint8_t luty[256], lutuv[256]; \/\/ lookup tables used for intensity compensation$/;"	m	struct:VC1Context
lw	libavfilter/libmpcodecs/vf_delogo.c	/^    int xoff, yoff, lw, lh, band, show;$/;"	m	struct:vf_priv_s	file:
lxf_probe	libavformat/lxfdec.c	/^static int lxf_probe(AVProbeData *p)$/;"	f	file:
lxf_read_header	libavformat/lxfdec.c	/^static int lxf_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
lxf_read_packet	libavformat/lxfdec.c	/^static int lxf_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
lxf_tags	libavformat/lxfdec.c	/^static const AVCodecTag lxf_tags[] = {$/;"	v	file:
lz_unpack	libavcodec/vmdav.c	/^static void lz_unpack(const unsigned char *src, int src_len,$/;"	f	file:
lzw	libavcodec/gif.c	/^    LZWState *lzw;$/;"	m	struct:__anon89	file:
lzw	libavcodec/gifdec.c	/^    LZWState *lzw;$/;"	m	struct:GifState	file:
lzw	libavcodec/tiff.c	/^    LZWState *lzw;$/;"	m	struct:TiffContext	file:
lzw_get_code	libavcodec/lzw.c	/^static int lzw_get_code(struct LZWState * s)$/;"	f	file:
lzws	libavcodec/tiffenc.c	/^    struct LZWEncodeState *lzws;        \/\/\/< LZW Encode state$/;"	m	struct:TiffEncoderContext	typeref:struct:TiffEncoderContext::LZWEncodeState	file:
m	libavcodec/dnxhdenc.h	/^    MpegEncContext m; \/\/\/< Used for quantization dsp functions$/;"	m	struct:DNXHDEncContext
m	libavcodec/sbr.h	/^    unsigned           m[2];$/;"	m	struct:__anon57
m	libavcodec/snow.c	/^    MpegEncContext m; \/\/ needed for motion estimation, should not be used for anything else, the idea is to eventually make the motion estimation independent of MpegEncContext, so this will be removed then (FIXME\/XXX)$/;"	m	struct:SnowContext	file:
m	libavcodec/svq1enc.c	/^    MpegEncContext m; \/\/ needed for motion estimation, should not be used for anything else, the idea is to make the motion estimation eventually independent of MpegEncContext, so this will be removed then (FIXME\/XXX)$/;"	m	struct:SVQ1Context	file:
m	libavfilter/libmpcodecs/vf_ivtc.c	/^    struct metrics p, r, m;$/;"	m	struct:frameinfo	typeref:struct:frameinfo::	file:
m0	libswscale/bfin/internal_bfin.S	/^        m0 = COEFF_REL_CY_OFF;$/;"	d
m0	libswscale/bfin/internal_bfin.S	/^        m0 = r1;$/;"	d
m1	libswscale/bfin/internal_bfin.S	/^        m1 = r2;$/;"	d
m4ac	libavcodec/aac.h	/^    MPEG4AudioConfig m4ac;$/;"	m	struct:__anon246
mL1	libavcodec/bfin/config_bfin.h	41;"	d
mL1	libavcodec/bfin/config_bfin.h	43;"	d
mL1	libswscale/bfin/internal_bfin.S	/^#define mL1 .l1.text$/;"	d
mL1	libswscale/bfin/internal_bfin.S	/^#define mL1 mL3$/;"	d
mL3	libavcodec/bfin/config_bfin.h	38;"	d
mL3	libswscale/bfin/internal_bfin.S	/^#define mL3 .text$/;"	d
mTCD_TAG	libavformat/electronicarts.c	48;"	d	file:
ma_pred_switch	libavcodec/sipr.h	/^    int ma_pred_switch;        \/\/\/< switched moving average predictor$/;"	m	struct:__anon236
ma_predictor_bits	libavcodec/sipr.c	/^    uint8_t ma_predictor_bits;  \/\/\/< size in bits of the switched MA predictor$/;"	m	struct:__anon112	file:
mac_to_unicode	libavformat/mov.c	/^static const uint32_t mac_to_unicode[128] = {$/;"	v	file:
mace_broken_clip_int16	libavcodec/mace.c	/^static inline int16_t mace_broken_clip_int16(int n)$/;"	f	file:
mace_decode_frame	libavcodec/mace.c	/^static int mace_decode_frame(AVCodecContext *avctx,$/;"	f	file:
mace_decode_init	libavcodec/mace.c	/^static av_cold int mace_decode_init(AVCodecContext * avctx)$/;"	f	file:
macroblock_coding	libavcodec/vp3.c	/^    unsigned char *macroblock_coding;$/;"	m	struct:Vp3DecodeContext	file:
macroblock_count	libavcodec/vp3.c	/^    int macroblock_count;$/;"	m	struct:Vp3DecodeContext	file:
macroblock_height	libavcodec/vp3.c	/^    int macroblock_height;$/;"	m	struct:Vp3DecodeContext	file:
macroblock_width	libavcodec/vp3.c	/^    int macroblock_width;$/;"	m	struct:Vp3DecodeContext	file:
macroblocks	libavcodec/vp56.h	/^    VP56Macroblock *macroblocks;$/;"	m	struct:vp56_context
macroblocks	libavcodec/vp8.h	/^    VP8Macroblock *macroblocks;$/;"	m	struct:__anon182
macroblocks_base	libavcodec/vp8.h	/^    VP8Macroblock *macroblocks_base;$/;"	m	struct:__anon182
magic	libavformat/ape.c	/^    char magic[4];$/;"	m	struct:__anon335	file:
magic	libavformat/oggdec.h	/^    const int8_t *magic;$/;"	m	struct:ogg_codec
magic	libavformat/smacker.c	/^    uint32_t magic;$/;"	m	struct:SmackerContext	file:
magicsize	libavformat/oggdec.h	/^    uint8_t magicsize;$/;"	m	struct:ogg_codec
magnitude	libavcodec/vorbisdec.c	/^    uint8_t      *magnitude;$/;"	m	struct:__anon261	file:
magnitude	libavcodec/vorbisenc.c	/^    int *magnitude;$/;"	m	struct:__anon192	file:
main	cmdutils.h	33;"	d
main	doc/examples/encoding-example.c	/^int main(int argc, char **argv)$/;"	f
main	doc/examples/muxing-example.c	/^int main(int argc, char **argv)$/;"	f
main	ffmpeg.c	/^int main(int argc, char **argv)$/;"	f
main	ffmpeg/cmdutils.h	33;"	d
main	ffmpeg/ffmpeg.c	/^int main(int argc, char **argv)$/;"	f
main	ffplay.c	/^int main(int argc, char **argv)$/;"	f
main	ffprobe.c	/^int main(int argc, char **argv)$/;"	f
main	ffserver.c	/^int main(int argc, char **argv)$/;"	f
main	libavcodec/aac_tablegen.c	/^int main(void)$/;"	f
main	libavcodec/aacps_tablegen.c	/^int main(void)$/;"	f
main	libavcodec/cabac.c	/^int main(void){$/;"	f
main	libavcodec/cbrt_tablegen.c	/^int main(void)$/;"	f
main	libavcodec/cos_tablegen.c	/^int main(int argc, char *argv[])$/;"	f
main	libavcodec/dct-test.c	/^int main(int argc, char **argv)$/;"	f
main	libavcodec/fft-test.c	/^int main(int argc, char **argv)$/;"	f
main	libavcodec/h264.c	/^int main(void){$/;"	f
main	libavcodec/iirfilter.c	/^int main(void)$/;"	f
main	libavcodec/motion-test.c	/^int main(int argc, char **argv)$/;"	f
main	libavcodec/motionpixels_tablegen.c	/^int main(void)$/;"	f
main	libavcodec/mpegaudio_tablegen.c	/^int main(void)$/;"	f
main	libavcodec/pcm_tablegen.c	/^int main(void)$/;"	f
main	libavcodec/qdm2_tablegen.c	/^int main(void)$/;"	f
main	libavcodec/rangecoder.c	/^int main(void){$/;"	f
main	libavcodec/sinewin_tablegen.c	/^int main(void)$/;"	f
main	libavcodec/snow.c	/^int main(void){$/;"	f
main	libavformat/metadata-example.c	/^int main (int argc, char **argv)$/;"	f
main	libavformat/timefilter.c	/^int main(void)$/;"	f
main	libavutil/adler32.c	/^int main(void){$/;"	f
main	libavutil/aes.c	/^int main(void){$/;"	f
main	libavutil/avstring.c	/^int main(void)$/;"	f
main	libavutil/base64.c	/^int main(void)$/;"	f
main	libavutil/cpu.c	/^int main(void)$/;"	f
main	libavutil/crc.c	/^int main(void){$/;"	f
main	libavutil/des.c	/^int main(void) {$/;"	f
main	libavutil/eval.c	/^int main(void)$/;"	f
main	libavutil/file.c	/^int main(void)$/;"	f
main	libavutil/integer.c	/^int main(void){$/;"	f
main	libavutil/lfg.c	/^int main(void)$/;"	f
main	libavutil/lls.c	/^int main(void){$/;"	f
main	libavutil/lzo.c	/^int main(int argc, char *argv[]) {$/;"	f
main	libavutil/mathematics.c	/^int main(void){$/;"	f
main	libavutil/md5.c	/^int main(void){$/;"	f
main	libavutil/opt.c	/^int main(void)$/;"	f
main	libavutil/parseutils.c	/^int main(void)$/;"	f
main	libavutil/pca.c	/^int main(void){$/;"	f
main	libavutil/rational.c	/^main(){$/;"	f
main	libavutil/sha.c	/^int main(void)$/;"	f
main	libavutil/softfloat.c	/^int main(void){$/;"	f
main	libavutil/tree.c	/^int main(void){$/;"	f
main	libswscale/colorspace-test.c	/^int main(int argc, char **argv)$/;"	f
main	libswscale/swscale-test.c	/^int main(int argc, char **argv)$/;"	f
main	mt-work/yuvcmp.c	/^main(int argc, char **argv)$/;"	f
main	tests/audiogen.c	/^int main(int argc, char **argv)$/;"	f
main	tests/base64.c	/^int main(void)$/;"	f
main	tests/rotozoom.c	/^int main(int argc, char **argv)$/;"	f
main	tests/seek_test.c	/^int main(int argc, char **argv)$/;"	f
main	tests/tiny_psnr.c	/^int main(int argc,char* argv[]){$/;"	f
main	tests/videogen.c	/^int main(int argc, char **argv)$/;"	f
main	tools/cws2fws.c	/^int main(int argc, char *argv[])$/;"	f
main	tools/graph2dot.c	/^int main(int argc, char **argv)$/;"	f
main	tools/lavfi-showfiltfmts.c	/^int main(int argc, char **argv)$/;"	f
main	tools/pktdumper.c	/^int main(int argc, char **argv)$/;"	f
main	tools/probetest.c	/^int main(void)$/;"	f
main	tools/qt-faststart.c	/^int main(int argc, char *argv[])$/;"	f
main	tools/trasher.c	/^int main(int argc, char** argv)$/;"	f
mainChunkSize	libavcodec/roqvideoenc.c	/^    int mainChunkSize;$/;"	m	struct:RoqTempData	file:
main_channel_id	libavformat/rtmpproto.c	/^    int           main_channel_id;            \/\/\/< an additional channel ID which is used for some invocations$/;"	m	struct:RTMPContext	file:
main_seekhead	libavformat/matroskaenc.c	/^    mkv_seekhead    *main_seekhead;$/;"	m	struct:MatroskaMuxContext	file:
maintainer	libavfilter/libmpcodecs/mpc_info.h	/^        const char *maintainer;$/;"	m	struct:mp_codec_info_s
make_16bit	libavcodec/dpx.c	/^static inline unsigned make_16bit(unsigned value)$/;"	f	file:
make_bands	libavcodec/aacsbr.c	/^static void make_bands(int16_t* bands, int start, int stop, int num_bands)$/;"	f	file:
make_cdt15_entry	libavcodec/truemotion1.c	/^static int make_cdt15_entry(int p1, int p2, int16_t *cdt)$/;"	f	file:
make_cdt16_entry	libavcodec/truemotion1.c	/^static int make_cdt16_entry(int p1, int p2, int16_t *cdt)$/;"	f	file:
make_cdt24_entry	libavcodec/truemotion1.c	/^static int make_cdt24_entry(int p1, int p2, int16_t *cdt)$/;"	f	file:
make_digest_auth	libavformat/httpauth.c	/^static char *make_digest_auth(HTTPAuthState *state, const char *username,$/;"	f	file:
make_field_queue	libavfilter/libmpcodecs/pullup.c	/^static struct pullup_field *make_field_queue(struct pullup_context *c, int len)$/;"	f	file:
make_filters_from_proto	libavcodec/aacps_tablegen.h	/^static void make_filters_from_proto(float (*filter)[7][2], const float *proto, int bands)$/;"	f
make_format_list	libavfilter/vf_format.c	/^static AVFilterFormats *make_format_list(FormatContext *format, int flag)$/;"	f	file:
make_tc	libavcodec/xsubenc.c	/^static int make_tc(uint64_t ms, int *tc)$/;"	f	file:
make_ydt15_entry	libavcodec/truemotion1.c	/^static int make_ydt15_entry(int p2, int p1, int16_t *ydt)$/;"	f	file:
make_ydt16_entry	libavcodec/truemotion1.c	/^static int make_ydt16_entry(int p2, int p1, int16_t *ydt)$/;"	f	file:
make_ydt24_entry	libavcodec/truemotion1.c	/^static int make_ydt24_entry(int p1, int p2, int16_t *ydt)$/;"	f	file:
makecol	libavfilter/libmpcodecs/vf_2xsai.c	43;"	d	file:
makecol_depth	libavfilter/libmpcodecs/vf_2xsai.c	44;"	d	file:
malloc	libavcodec/snow.c	4004;"	d	file:
malloc	libavfilter/libmpcodecs/mp_image.h	31;"	d
malloc	libavfilter/libmpcodecs/vf_fspp.c	58;"	d	file:
malloc	libavfilter/libmpcodecs/vf_mcdeint.c	64;"	d	file:
malloc	libavfilter/libmpcodecs/vf_spp.c	47;"	d	file:
malloc	libavutil/internal.h	129;"	d
malloc	libavutil/internal.h	130;"	d
malloc	libavutil/mem.c	43;"	d	file:
malloc	libavutil/mem.c	48;"	d	file:
mant	libavcodec/g726.c	/^    uint8_t mant;   \/**< 6bit mantissa *\/$/;"	m	struct:Float11	file:
mant	libavcodec/j2k.h	/^    uint16_t mant[32 * 3]; \/\/\/< quantization mantissa$/;"	m	struct:__anon211
mant	libavutil/softfloat.h	/^    int32_t mant;$/;"	m	struct:SoftFloat
mant1_cnt	libavcodec/ac3enc.c	/^    int mant1_cnt, mant2_cnt, mant4_cnt;    \/\/\/< mantissa counts for bap=1,2,4$/;"	m	struct:AC3Mant	file:
mant2_cnt	libavcodec/ac3enc.c	/^    int mant1_cnt, mant2_cnt, mant4_cnt;    \/\/\/< mantissa counts for bap=1,2,4$/;"	m	struct:AC3Mant	file:
mant4_cnt	libavcodec/ac3enc.c	/^    int mant1_cnt, mant2_cnt, mant4_cnt;    \/\/\/< mantissa counts for bap=1,2,4$/;"	m	struct:AC3Mant	file:
mant_groups	libavcodec/ac3dec.c	/^} mant_groups;$/;"	t	typeref:struct:__anon96	file:
mantissa	libavutil/intfloat_readwrite.h	/^    uint8_t mantissa[8];$/;"	m	struct:AVExtFloat
map	configure	/^map(){$/;"	f
map	libavcodec/mpegvideo.h	/^    uint32_t *map;                     \/\/\/< map to avoid duplicate evaluations$/;"	m	struct:MotionEstContext
map	libavcodec/vorbisdec.c	/^            int32_t      *map[2];$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor0_s	file:
map	libavfilter/libmpcodecs/vf_kerndeint.c	/^    int    map;$/;"	m	struct:vf_priv_s	file:
map2	libavutil/base64.c	/^static const uint8_t map2[] =$/;"	v	file:
map_col_to_list0	libavcodec/h264.h	/^    int map_col_to_list0[2][16+32];$/;"	m	struct:H264Context
map_col_to_list0_field	libavcodec/h264.h	/^    int map_col_to_list0_field[2][2][16+32];$/;"	m	struct:H264Context
map_generation	libavcodec/mpegvideo.h	/^    int map_generation;$/;"	m	struct:MotionEstContext
map_idx_10_to_20	libavcodec/aacps.c	/^static void map_idx_10_to_20(int8_t *par_mapped, const int8_t *par, int full)$/;"	f	file:
map_idx_10_to_34	libavcodec/aacps.c	/^static void map_idx_10_to_34(int8_t *par_mapped, const int8_t *par, int full)$/;"	f	file:
map_idx_20_to_34	libavcodec/aacps.c	/^static void map_idx_20_to_34(int8_t *par_mapped, const int8_t *par, int full)$/;"	f	file:
map_idx_34_to_20	libavcodec/aacps.c	/^static void map_idx_34_to_20(int8_t *par_mapped, const int8_t *par, int full)$/;"	f	file:
map_offsets	libavformat/gxfenc.c	/^    uint64_t *map_offsets;    \/\/\/< offset of map packets$/;"	m	struct:GXFContext	file:
map_offsets_nb	libavformat/gxfenc.c	/^    unsigned map_offsets_nb;$/;"	m	struct:GXFContext	file:
map_size	libavcodec/vorbisdec.c	/^            uint32_t      map_size[2];$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor0_s	file:
map_val_20_to_34	libavcodec/aacps.c	/^static void map_val_20_to_34(float par[PS_MAX_NR_IIDICC])$/;"	f	file:
map_val_34_to_20	libavcodec/aacps.c	/^static void map_val_34_to_20(float par[PS_MAX_NR_IIDICC])$/;"	f	file:
mapping	libavcodec/vorbisdec.c	/^    uint8_t       mapping;$/;"	m	struct:__anon262	file:
mapping	libavcodec/vorbisenc.c	/^    int mapping;$/;"	m	struct:__anon193	file:
mapping_count	libavcodec/vorbisdec.c	/^    uint8_t       mapping_count;$/;"	m	struct:vorbis_context_s	file:
mappings	libavcodec/vorbisdec.c	/^    vorbis_mapping *mappings;$/;"	m	struct:vorbis_context_s	file:
mappings	libavcodec/vorbisenc.c	/^    vorbis_enc_mapping *mappings;$/;"	m	struct:__anon194	file:
mark_all_blocks	libavcodec/flashsv2enc.c	/^static int mark_all_blocks(FlashSV2Context * s, const uint8_t * src, int stride,$/;"	f	file:
mask	libavcodec/ac3dec.h	/^    int16_t mask[AC3_MAX_CHANNELS][AC3_CRITICAL_BANDS];     \/\/\/< masking curve values$/;"	m	struct:__anon88
mask	libavcodec/ac3enc.h	/^    int16_t  **mask;                            \/\/\/< masking curve$/;"	m	struct:AC3Block
mask	libavcodec/lzw.c	/^static const uint16_t mask[17] =$/;"	v	file:
mask	libavfilter/libmpcodecs/vf_remove_logo.c	/^  int * * * mask; \/* Stores our collection of masks. The first * is for an array of masks, the second for the y axis, and the third for the x axis. *\/$/;"	m	struct:vf_priv_s	file:
mask	libpostproc/postprocess_internal.h	/^    int mask;               \/\/\/< Bitmask to turn this filter on$/;"	m	struct:PPFilter
mask16b	libswscale/x86/rgb2rgb.c	62;"	d	file:
mask_buffer	libavcodec/ac3enc.h	/^    int16_t *mask_buffer;$/;"	m	struct:AC3EncodeContext
mask_matrix	libavcodec/escape124.c	/^static const uint16_t mask_matrix[] = {0x1,   0x2,   0x10,   0x20,$/;"	v	file:
mask_type	libavcodec/iff.c	/^} mask_type;$/;"	t	typeref:enum:__anon113	file:
masking	libavcodec/iff.c	/^    unsigned  masking;      \/\/\/< TODO: masking method used$/;"	m	struct:__anon114	file:
masking	libavformat/iff.c	/^    unsigned  masking;      \/\/\/< masking method used$/;"	m	struct:__anon395	file:
master_channel	libavcodec/alsdec.c	/^    int master_channel;$/;"	m	struct:__anon151	file:
masterbook	libavcodec/vorbis_enc_data.h	/^    int masterbook;$/;"	m	struct:__anon274
masterbook	libavcodec/vorbisenc.c	/^    int masterbook;$/;"	m	struct:__anon189	file:
match	libavfilter/libmpcodecs/vf_divtc.c	/^static int match(struct vf_priv_s *p, int *diffs,$/;"	f	file:
match_format	libavformat/utils.c	/^static int match_format(const char *name, const char *names)$/;"	f	file:
match_segments	libavformat/movenchint.c	/^static int match_segments(const uint8_t *haystack, int h_len,$/;"	f	file:
matching_len	libavformat/mxf.h	/^    unsigned matching_len;$/;"	m	struct:__anon326
matrixCoeffs	libavcodec/atrac3data.h	/^static const float matrixCoeffs[8] = {0.0, 2.0, 2.0, 2.0, 0.0, 0.0, 1.0, 1.0};$/;"	v
matrix_changed	libavcodec/mlpdec.c	/^    int         matrix_changed;$/;"	m	struct:MLPDecodeContext	file:
matrix_coef	libavcodec/vc1.h	/^    int matrix_coef;      \/\/\/< 8bits, Color primaries->YCbCr transform matrix$/;"	m	struct:VC1Context
matrix_coeff	libavcodec/mlpdec.c	/^    int32_t     matrix_coeff[MAX_MATRICES][MAX_CHANNELS];$/;"	m	struct:SubStream	file:
matrix_coeff_index_next	libavcodec/atrac3.c	/^    int                 matrix_coeff_index_next[4];$/;"	m	struct:__anon131	file:
matrix_coeff_index_now	libavcodec/atrac3.c	/^    int                 matrix_coeff_index_now[4];$/;"	m	struct:__anon131	file:
matrix_coeff_index_prev	libavcodec/atrac3.c	/^    int                 matrix_coeff_index_prev[4];$/;"	m	struct:__anon131	file:
matrix_noise_shift	libavcodec/mlpdec.c	/^    uint8_t     matrix_noise_shift[MAX_MATRICES];$/;"	m	struct:SubStream	file:
matrix_out_ch	libavcodec/mlpdec.c	/^    uint8_t     matrix_out_ch[MAX_MATRICES];$/;"	m	struct:SubStream	file:
matroska_aac_profile	libavformat/matroskadec.c	/^static int matroska_aac_profile(char *codec_id)$/;"	f	file:
matroska_aac_sri	libavformat/matroskadec.c	/^static int matroska_aac_sri(int samplerate)$/;"	f	file:
matroska_attachment	libavformat/matroskadec.c	/^static EbmlSyntax matroska_attachment[] = {$/;"	v	file:
matroska_attachments	libavformat/matroskadec.c	/^static EbmlSyntax matroska_attachments[] = {$/;"	v	file:
matroska_blockgroup	libavformat/matroskadec.c	/^static EbmlSyntax matroska_blockgroup[] = {$/;"	v	file:
matroska_chapter	libavformat/matroskadec.c	/^static EbmlSyntax matroska_chapter[] = {$/;"	v	file:
matroska_chapter_display	libavformat/matroskadec.c	/^static EbmlSyntax matroska_chapter_display[] = {$/;"	v	file:
matroska_chapter_entry	libavformat/matroskadec.c	/^static EbmlSyntax matroska_chapter_entry[] = {$/;"	v	file:
matroska_chapters	libavformat/matroskadec.c	/^static EbmlSyntax matroska_chapters[] = {$/;"	v	file:
matroska_clear_queue	libavformat/matroskadec.c	/^static void matroska_clear_queue(MatroskaDemuxContext *matroska)$/;"	f	file:
matroska_cluster	libavformat/matroskadec.c	/^static EbmlSyntax matroska_cluster[] = {$/;"	v	file:
matroska_clusters	libavformat/matroskadec.c	/^static EbmlSyntax matroska_clusters[] = {$/;"	v	file:
matroska_convert_tag	libavformat/matroskadec.c	/^static void matroska_convert_tag(AVFormatContext *s, EbmlList *list,$/;"	f	file:
matroska_convert_tags	libavformat/matroskadec.c	/^static void matroska_convert_tags(AVFormatContext *s)$/;"	f	file:
matroska_decode_buffer	libavformat/matroskadec.c	/^static int matroska_decode_buffer(uint8_t** buf, int* buf_size,$/;"	f	file:
matroska_deliver_packet	libavformat/matroskadec.c	/^static int matroska_deliver_packet(MatroskaDemuxContext *matroska,$/;"	f	file:
matroska_doctypes	libavformat/matroskadec.c	/^static const char *matroska_doctypes[] = { "matroska", "webm" };$/;"	v	file:
matroska_ebmlnum_sint	libavformat/matroskadec.c	/^static int matroska_ebmlnum_sint(MatroskaDemuxContext *matroska,$/;"	f	file:
matroska_ebmlnum_uint	libavformat/matroskadec.c	/^static int matroska_ebmlnum_uint(MatroskaDemuxContext *matroska,$/;"	f	file:
matroska_execute_seekhead	libavformat/matroskadec.c	/^static void matroska_execute_seekhead(MatroskaDemuxContext *matroska)$/;"	f	file:
matroska_find_track_by_num	libavformat/matroskadec.c	/^static MatroskaTrack *matroska_find_track_by_num(MatroskaDemuxContext *matroska,$/;"	f	file:
matroska_fix_ass_packet	libavformat/matroskadec.c	/^static void matroska_fix_ass_packet(MatroskaDemuxContext *matroska,$/;"	f	file:
matroska_index	libavformat/matroskadec.c	/^static EbmlSyntax matroska_index[] = {$/;"	v	file:
matroska_index_entry	libavformat/matroskadec.c	/^static EbmlSyntax matroska_index_entry[] = {$/;"	v	file:
matroska_index_pos	libavformat/matroskadec.c	/^static EbmlSyntax matroska_index_pos[] = {$/;"	v	file:
matroska_info	libavformat/matroskadec.c	/^static EbmlSyntax matroska_info[] = {$/;"	v	file:
matroska_merge_packets	libavformat/matroskadec.c	/^static int matroska_merge_packets(AVPacket *out, AVPacket *in)$/;"	f	file:
matroska_parse_block	libavformat/matroskadec.c	/^static int matroska_parse_block(MatroskaDemuxContext *matroska, uint8_t *data,$/;"	f	file:
matroska_parse_cluster	libavformat/matroskadec.c	/^static int matroska_parse_cluster(MatroskaDemuxContext *matroska)$/;"	f	file:
matroska_probe	libavformat/matroskadec.c	/^static int matroska_probe(AVProbeData *p)$/;"	f	file:
matroska_read_close	libavformat/matroskadec.c	/^static int matroska_read_close(AVFormatContext *s)$/;"	f	file:
matroska_read_header	libavformat/matroskadec.c	/^static int matroska_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
matroska_read_packet	libavformat/matroskadec.c	/^static int matroska_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
matroska_read_seek	libavformat/matroskadec.c	/^static int matroska_read_seek(AVFormatContext *s, int stream_index,$/;"	f	file:
matroska_seekhead	libavformat/matroskadec.c	/^static EbmlSyntax matroska_seekhead[] = {$/;"	v	file:
matroska_seekhead_entry	libavformat/matroskadec.c	/^static EbmlSyntax matroska_seekhead_entry[] = {$/;"	v	file:
matroska_segment	libavformat/matroskadec.c	/^static EbmlSyntax matroska_segment[] = {$/;"	v	file:
matroska_segments	libavformat/matroskadec.c	/^static EbmlSyntax matroska_segments[] = {$/;"	v	file:
matroska_simpletag	libavformat/matroskadec.c	/^static EbmlSyntax matroska_simpletag[] = {$/;"	v	file:
matroska_tag	libavformat/matroskadec.c	/^static EbmlSyntax matroska_tag[] = {$/;"	v	file:
matroska_tags	libavformat/matroskadec.c	/^static EbmlSyntax matroska_tags[] = {$/;"	v	file:
matroska_tagtargets	libavformat/matroskadec.c	/^static EbmlSyntax matroska_tagtargets[] = {$/;"	v	file:
matroska_track	libavformat/matroskadec.c	/^static EbmlSyntax matroska_track[] = {$/;"	v	file:
matroska_track_audio	libavformat/matroskadec.c	/^static EbmlSyntax matroska_track_audio[] = {$/;"	v	file:
matroska_track_combine_planes	libavformat/matroskadec.c	/^static EbmlSyntax matroska_track_combine_planes[] = {$/;"	v	file:
matroska_track_encoding	libavformat/matroskadec.c	/^static EbmlSyntax matroska_track_encoding[] = {$/;"	v	file:
matroska_track_encoding_compression	libavformat/matroskadec.c	/^static EbmlSyntax matroska_track_encoding_compression[] = {$/;"	v	file:
matroska_track_encodings	libavformat/matroskadec.c	/^static EbmlSyntax matroska_track_encodings[] = {$/;"	v	file:
matroska_track_operation	libavformat/matroskadec.c	/^static EbmlSyntax matroska_track_operation[] = {$/;"	v	file:
matroska_track_plane	libavformat/matroskadec.c	/^static EbmlSyntax matroska_track_plane[] = {$/;"	v	file:
matroska_track_video	libavformat/matroskadec.c	/^static EbmlSyntax matroska_track_video[] = {$/;"	v	file:
matroska_tracks	libavformat/matroskadec.c	/^static EbmlSyntax matroska_tracks[] = {$/;"	v	file:
matroska_video_stereo_mode	libavformat/matroska.c	/^const char * const matroska_video_stereo_mode[MATROSKA_VIDEO_STEREO_MODE_COUNT] = {$/;"	v
matroska_video_stereo_plane	libavformat/matroska.c	/^const char * const matroska_video_stereo_plane[MATROSKA_VIDEO_STEREO_PLANE_COUNT] = {$/;"	v
max	libavcodec/aacpsy.c	/^        float max;        \/\/\/< maximum allowed PE for bit factor calculation$/;"	m	struct:AacPsyContext::__anon255	file:
max	libavfilter/libmpcodecs/libvo/video_out.h	/^        float max;$/;"	m	struct:__anon32
max	libavfilter/libmpcodecs/vf_decimate.c	/^    int max, last, cnt;$/;"	m	struct:vf_priv_s	file:
max	libavfilter/libmpcodecs/vf_dint.c	/^  uint32_t max;$/;"	m	struct:vf_priv_s	file:
max	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct metrics tiny, low, high, bigger, twox, max;$/;"	m	struct:frame_stats	typeref:struct:frame_stats::	file:
max	libavfilter/libmpcodecs/vf_remove_logo.c	100;"	d	file:
max	libavutil/opt.h	/^    double max;                 \/\/\/< maximum valid value for the option$/;"	m	struct:AVOption
maxAllowedY	libpostproc/postprocess_internal.h	/^    int maxAllowedY;                \/\/\/< for brihtness correction$/;"	m	struct:PPMode
maxClippedThreshold	libpostproc/postprocess_internal.h	/^    float maxClippedThreshold;      \/\/\/< amount of "black" u r willing to loose to get a brightness corrected picture$/;"	m	struct:PPMode
maxTmpNoise	libpostproc/postprocess_internal.h	/^    int maxTmpNoise[3];             \/\/\/< for Temporal Noise Reducing filter (Maximal sum of abs differences)$/;"	m	struct:PPMode
max_analyze_duration	libavformat/avformat.h	/^    int max_analyze_duration;$/;"	m	struct:AVFormatContext
max_b_frames	libavcodec/avcodec.h	/^    int max_b_frames;$/;"	m	struct:AVCodecContext
max_b_frames	libavcodec/mpegvideo.h	/^    int max_b_frames; \/\/\/< max number of b-frames for encoding$/;"	m	struct:MpegEncContext
max_bandwidth	ffserver.c	/^static uint64_t max_bandwidth = 1000;$/;"	v	file:
max_bitrate	libavformat/asf.h	/^    uint32_t max_bitrate;       \/**< bandwidth of stream in bps$/;"	m	struct:__anon400
max_bits	libavcodec/truemotion2.c	/^    int max_bits; \/\/\/< maximum length of code$/;"	m	struct:TM2Huff	file:
max_blocksize	libavcodec/flacenc.c	/^    int max_blocksize;$/;"	m	struct:FlacEncodeContext	file:
max_buf_size	libavcodec/qtrleenc.c	/^    unsigned int max_buf_size;$/;"	m	struct:QtrleEncContext	file:
max_buffer_size	libavformat/mpegenc.c	/^    int max_buffer_size; \/* in bytes *\/$/;"	m	struct:__anon428	file:
max_channel	libavcodec/mlpdec.c	/^    uint8_t     max_channel;$/;"	m	struct:SubStream	file:
max_coded_frame_size	libavcodec/alacenc.c	/^    int max_coded_frame_size;$/;"	m	struct:AlacEncodeContext	file:
max_codes_bits	libavcodec/motionpixels.c	/^    int max_codes_bits;$/;"	m	struct:MotionPixelsContext	file:
max_contexts	libavcodec/h264.h	/^    int max_contexts;$/;"	m	struct:H264Context
max_decoded_substream	libavcodec/mlpdec.c	/^    uint8_t     max_decoded_substream;$/;"	m	struct:MLPDecodeContext	file:
max_delay	libavformat/avformat.h	/^    int max_delay;$/;"	m	struct:AVFormatContext
max_distance	libavformat/nut.h	/^    unsigned int max_distance;$/;"	m	struct:__anon494
max_encoded_framesize	libavcodec/flacenc.c	/^    int max_encoded_framesize;$/;"	m	struct:FlacEncodeContext	file:
max_entries	libavformat/matroskaenc.c	/^    int                     max_entries;$/;"	m	struct:mkv_seekhead	file:
max_exponent	libavcodec/wma.h	/^    float max_exponent[MAX_CHANNELS];$/;"	m	struct:WMACodecContext
max_frames	ffmpeg.c	/^static int max_frames[4] = {INT_MAX, INT_MAX, INT_MAX, INT_MAX};$/;"	v	file:
max_frames	ffmpeg/ffmpeg.c	/^static int max_frames[4] = {INT_MAX, INT_MAX, INT_MAX, INT_MAX};$/;"	v	file:
max_frames_per_packet	libavformat/rtpdec.h	/^    int max_frames_per_packet;$/;"	m	struct:RTPDemuxContext
max_frames_per_packet	libavformat/rtpenc.h	/^    int max_frames_per_packet;$/;"	m	struct:RTPMuxContext
max_framesize	libavcodec/flacenc.c	/^    int max_framesize;$/;"	m	struct:FlacEncodeContext	file:
max_framesize	libavcodec/shorten.c	/^    int min_framesize, max_framesize;$/;"	m	struct:ShortenContext	file:
max_index_size	libavformat/avformat.h	/^    unsigned int max_index_size;$/;"	m	struct:AVFormatContext
max_level	libavcodec/rl.h	/^    int8_t *max_level[2];          \/\/\/< encoding & decoding$/;"	m	struct:RLTable
max_level	libavcodec/wma.h	/^    int max_level;$/;"	m	struct:CoefVLCTable
max_lowres	libavcodec/avcodec.h	/^    uint8_t max_lowres;                     \/\/\/< maximum value for lowres supported by the decoder$/;"	m	struct:AVCodec
max_mask_size	libavfilter/libmpcodecs/vf_remove_logo.c	/^  int max_mask_size; \/* The largest possible mask size that will be needed with the given filter and corresponding half_size_filter. The half_size_filter can have a larger requirment in some rare (but not degenerate) cases. *\/$/;"	m	struct:vf_priv_s	file:
max_matrix_channel	libavcodec/mlpdec.c	/^    uint8_t     max_matrix_channel;$/;"	m	struct:SubStream	file:
max_nbits	libavformat/swfenc.c	/^static inline void max_nbits(int *nbits_ptr, int val)$/;"	f	file:
max_num	libavcodec/truemotion2.c	/^    int max_num; \/\/\/< total number of codes$/;"	m	struct:TM2Huff	file:
max_num_subframes	libavcodec/wmaprodec.c	/^    uint8_t          max_num_subframes;$/;"	m	struct:WMAProDecodeCtx	file:
max_order	libavcodec/alsdec.c	/^    int max_order;            \/\/\/< maximum prediction order (0..1023)$/;"	m	struct:__anon150	file:
max_order	libavcodec/lpc.h	/^    int max_order;$/;"	m	struct:LPCContext
max_packet_size	libavformat/avio.h	/^    int max_packet_size;  \/**< if non zero, the stream is packetized with this max packet size *\/$/;"	m	struct:URLContext
max_packet_size	libavformat/avio.h	/^    int max_packet_size;$/;"	m	struct:__anon396
max_packet_size	libavformat/movenc.h	/^    uint32_t    max_packet_size;$/;"	m	struct:MOVIndex
max_packet_size	libavformat/url.h	/^    int max_packet_size;        \/**< if non zero, the stream is packetized with this max packet size *\/$/;"	m	struct:URLContext
max_partition_order	libavcodec/avcodec.h	/^    attribute_deprecated int max_partition_order;$/;"	m	struct:AVCodecContext
max_partition_order	libavcodec/flacenc.c	/^    int max_partition_order;$/;"	m	struct:CompressionOptions	file:
max_payload_size	libavformat/rtpdec.h	/^    int max_payload_size;$/;"	m	struct:RTPDemuxContext
max_payload_size	libavformat/rtpenc.h	/^    int max_payload_size;$/;"	m	struct:RTPMuxContext
max_pic_num	libavcodec/h264.h	/^    int max_pic_num;$/;"	m	struct:H264Context
max_picture_buffer	libavformat/avformat.h	/^    unsigned int max_picture_buffer;$/;"	m	struct:AVFormatContext
max_pitch_val	libavcodec/wmavoice.c	/^    int max_pitch_val;            \/\/\/< max value + 1 for pitch parsing$/;"	m	struct:__anon157	file:
max_pixsteps	libavfilter/vf_cropdetect.c	/^    int max_pixsteps[4];$/;"	m	struct:__anon48	file:
max_pktsize	libavformat/asf.h	/^    uint32_t max_pktsize;       \/**< shall be the same as for min_pktsize$/;"	m	struct:__anon400
max_plane_step	libavfilter/vf_overlay.c	/^    int max_plane_step[4];      \/\/\/< steps per pixel for each plane$/;"	m	struct:__anon7	file:
max_prediction_order	libavcodec/alacenc.c	/^    int max_prediction_order;$/;"	m	struct:AlacEncodeContext	file:
max_prediction_order	libavcodec/avcodec.h	/^    int max_prediction_order;$/;"	m	struct:AVCodecContext
max_prediction_order	libavcodec/flacenc.c	/^    int max_prediction_order;$/;"	m	struct:CompressionOptions	file:
max_pts_distance	libavformat/nut.h	/^    int max_pts_distance;$/;"	m	struct:__anon492
max_qcoeff	libavcodec/mpegvideo.h	/^    int max_qcoeff;          \/\/\/< maximum encodable coefficient$/;"	m	struct:MpegEncContext
max_qdiff	libavcodec/avcodec.h	/^    int max_qdiff;$/;"	m	struct:AVCodecContext
max_ref_frames	libavcodec/snow.c	/^    int max_ref_frames;$/;"	m	struct:SnowContext	file:
max_run	libavcodec/cavs.h	/^  int8_t max_run;$/;"	m	struct:dec_2dvlc
max_run	libavcodec/rl.h	/^    int8_t *max_run[2];            \/\/\/< encoding & decoding$/;"	m	struct:RLTable
max_samples	libavcodec/wavpack.c	/^    int max_samples;$/;"	m	struct:WavpackFrameContext	file:
max_scale_factor	libavcodec/wmaprodec.c	/^    int      max_scale_factor;                        \/\/\/< maximum scale factor for the current subframe$/;"	m	struct:__anon82	file:
max_score	libavcodec/flac_parser.c	/^    int max_score;    \/**< maximum score found after checking each child that$/;"	m	struct:FLACHeaderMarker	file:
max_seq	libavformat/rtpdec.h	/^    uint16_t max_seq;           \/\/\/< highest sequence number seen$/;"	m	struct:__anon333
max_sfb	libavcodec/aac.h	/^    uint8_t max_sfb;            \/\/\/< number of scalefactor bands per group$/;"	m	struct:__anon239
max_size	libavcodec/vaapi_h264.c	/^    int            max_size;    \/\/\/< Max number of reference frames. This is FF_ARRAY_ELEMS(VAPictureParameterBufferH264.ReferenceFrames)$/;"	m	struct:DPB	file:
max_size	libavformat/matroskadec.c	/^    uint64_t max_size;$/;"	m	struct:__anon354	file:
max_step	libavfilter/vf_crop.c	/^    int max_step[4];    \/\/\/< max pixel step for each plane, expressed as a number of bytes$/;"	m	struct:__anon5	file:
max_step	libavfilter/vf_hflip.c	/^    int max_step[4];    \/\/\/< max pixel step for each plane, expressed as a number of bytes$/;"	m	struct:__anon43	file:
max_subframe_len_bit	libavcodec/wmaprodec.c	/^    uint8_t          max_subframe_len_bit;          \/\/\/< flag indicating that the subframe is of maximum size when the first subframe length bit is 1$/;"	m	struct:WMAProDecodeCtx	file:
max_time	ffserver.c	/^    int64_t max_time;      \/* Number of milliseconds to run *\/$/;"	m	struct:FFStream	file:
max_vector_length	libavcodec/vp56.h	/^    int max_vector_length;$/;"	m	struct:vp56_context
maxbands	libavcodec/mpc.h	/^    int maxbands, last_max_band;$/;"	m	struct:__anon179
maxbits	libavcodec/dca.c	/^    int maxbits[8];             \/\/\/< max bits in VLC$/;"	m	struct:__anon92	file:
maxbits	libavcodec/lzwenc.c	/^    int maxbits;             \/\/\/< Max bits code$/;"	m	struct:LZWEncodeState	file:
maxcode	libavcodec/lzwenc.c	/^    int maxcode;             \/\/\/< Max value of code$/;"	m	struct:LZWEncodeState	file:
maxdepth	libavcodec/vorbisdec.c	/^    uint8_t      maxdepth;$/;"	m	struct:__anon258	file:
maxes	libavcodec/vorbisenc.c	/^    float (*maxes)[2];$/;"	m	struct:__anon191	file:
maximum_packet	libavformat/asfenc.c	/^    uint16_t maximum_packet;$/;"	m	struct:__anon470	file:
maxlength	libavcodec/smacker.c	/^    int maxlength;$/;"	m	struct:HuffContext	file:
maxpass	libavcodec/vorbisdec.c	/^    uint8_t       maxpass;$/;"	m	struct:__anon260	file:
maxpts	libavformat/wav.c	/^    int64_t maxpts;$/;"	m	struct:__anon409	file:
maxsb8	libavcodec/alpha/asm.h	125;"	d
maxsb8	libavcodec/alpha/asm.h	139;"	d
maxsb8	libavcodec/alpha/asm.h	172;"	d
maxsw4	libavcodec/alpha/asm.h	127;"	d
maxsw4	libavcodec/alpha/asm.h	141;"	d
maxsw4	libavcodec/alpha/asm.h	174;"	d
maxtilelen	libavcodec/j2kdec.c	/^    int maxtilelen;$/;"	m	struct:__anon98	file:
maxub8	libavcodec/alpha/asm.h	124;"	d
maxub8	libavcodec/alpha/asm.h	138;"	d
maxub8	libavcodec/alpha/asm.h	171;"	d
maxuw4	libavcodec/alpha/asm.h	126;"	d
maxuw4	libavcodec/alpha/asm.h	140;"	d
maxuw4	libavcodec/alpha/asm.h	173;"	d
maxval	libavcodec/jpegls.h	/^    int limit, reset, bpp, qbpp, maxval, range;$/;"	m	struct:JLSState
maxval	libavcodec/mjpegdec.h	/^    int maxval;$/;"	m	struct:MJpegDecodeContext
maxval	libavcodec/pnm.h	/^    int maxval;                 \/\/\/< maximum value of a pixel$/;"	m	struct:PNMContext
maybe_reformat_buffer32	libavcodec/cook.c	/^static const float *maybe_reformat_buffer32 (COOKContext *q, const float *ptr, int n)$/;"	f	file:
mb	libavcodec/dnxhdenc.h	/^    uint16_t mb;$/;"	m	struct:__anon162
mb	libavcodec/dv.c	/^    DCTELEM  mb[64];$/;"	m	struct:EncBlockInfo	file:
mb2b_xy	libavcodec/h264.h	/^    uint32_t *mb2b_xy; \/\/FIXME are these 4 a good idea?$/;"	m	struct:H264Context
mb2br_xy	libavcodec/h264.h	/^    uint32_t *mb2br_xy;$/;"	m	struct:H264Context
mb_aff	libavcodec/h264.h	/^    int mb_aff;                        \/\/\/<mb_adaptive_frame_field_flag$/;"	m	struct:SPS
mb_aff_frame	libavcodec/h264.h	/^    int mb_aff_frame;$/;"	m	struct:H264Context
mb_area_start	libavcodec/dv.c	/^static const int mb_area_start[5] = { 1, 6, 21, 43, 64 };$/;"	v	file:
mb_bits	libavcodec/dnxhdenc.h	/^    uint16_t *mb_bits;$/;"	m	struct:DNXHDEncContext
mb_btype_vlc	libavcodec/mpeg12.c	/^static VLC mb_btype_vlc;$/;"	v	file:
mb_change_bits	libavcodec/truemotion1.c	/^    const uint8_t *mb_change_bits;$/;"	m	struct:TrueMotion1Context	file:
mb_change_bits_row_size	libavcodec/truemotion1.c	/^    int mb_change_bits_row_size;$/;"	m	struct:TrueMotion1Context	file:
mb_cmp	libavcodec/avcodec.h	/^    int mb_cmp;$/;"	m	struct:AVCodecContext
mb_cmp	libavcodec/dnxhdenc.h	/^    RCCMPEntry *mb_cmp;$/;"	m	struct:DNXHDEncContext
mb_cmp	libavcodec/dsputil.h	/^    me_cmp_func mb_cmp[6];$/;"	m	struct:DSPContext
mb_cmp_score	libavcodec/mpegvideo.h	/^    int32_t *mb_cmp_score;      \/\/\/< Table for MB cmp scores, for mb decision FIXME remove$/;"	m	struct:Picture
mb_coordinates	libavcodec/dvdata.h	/^    uint16_t  mb_coordinates[5];$/;"	m	struct:DVwork_chunk
mb_decision	libavcodec/avcodec.h	/^    int mb_decision;$/;"	m	struct:AVCodecContext
mb_field_decoding_flag	libavcodec/h264.h	/^    int mb_field_decoding_flag;$/;"	m	struct:H264Context
mb_flags	libavcodec/mpegvideo.h	/^    int mb_flags;$/;"	m	struct:MotionEstContext
mb_height	libavcodec/asv1.c	/^    int mb_height;$/;"	m	struct:ASV1Context	file:
mb_height	libavcodec/cavs.h	/^    int mb_width, mb_height;$/;"	m	struct:__anon207
mb_height	libavcodec/dnxhddec.c	/^    unsigned int mb_width, mb_height;$/;"	m	struct:__anon154	file:
mb_height	libavcodec/h264.h	/^    int mb_height;                     \/\/\/< pic_height_in_map_units_minus1 + 1$/;"	m	struct:SPS
mb_height	libavcodec/mdec.c	/^    int mb_height;$/;"	m	struct:MDECContext	file:
mb_height	libavcodec/mjpegdec.h	/^    int mb_width, mb_height;$/;"	m	struct:MJpegDecodeContext
mb_height	libavcodec/mpegvideo.h	/^    int mb_width, mb_height;   \/\/\/< number of MBs horizontally & vertically$/;"	m	struct:MpegEncContext
mb_height	libavcodec/mxpegdec.c	/^    unsigned mb_width, mb_height; \/* size of picture in MB's from MXM header *\/$/;"	m	struct:MXpegDecodeContext	file:
mb_height	libavcodec/vp56.h	/^    int mb_height;  \/* number of vertical MB *\/$/;"	m	struct:vp56_context
mb_height	libavcodec/vp8.h	/^    uint16_t mb_height;  \/* number of vertical MB *\/$/;"	m	struct:__anon182
mb_height2	libavcodec/asv1.c	/^    int mb_height2;$/;"	m	struct:ASV1Context	file:
mb_index2xy	libavcodec/mpegvideo.h	/^    int *mb_index2xy;        \/\/\/< mb_index -> mb_x + mb_y*mb_stride$/;"	m	struct:MpegEncContext
mb_intra	libavcodec/error_resilience.c	41;"	d	file:
mb_intra	libavcodec/h264.h	40;"	d
mb_intra	libavcodec/mpegvideo.h	/^    int mb_intra;$/;"	m	struct:MpegEncContext
mb_linesize	libavcodec/h264.h	/^    int mb_linesize;   \/\/\/< may be equal to s->linesize or s->linesize*2, for mbaff$/;"	m	struct:H264Context
mb_lmax	libavcodec/avcodec.h	/^    int mb_lmax;$/;"	m	struct:AVCodecContext
mb_lmin	libavcodec/avcodec.h	/^    int mb_lmin;$/;"	m	struct:AVCodecContext
mb_mbaff	libavcodec/h264.h	/^    int mb_mbaff;              \/\/\/< mb_aff_frame && mb_field_decoding_flag$/;"	m	struct:H264Context
mb_mean	libavcodec/mpegvideo.h	/^    uint8_t *mb_mean;           \/\/\/< Table for MB luminance$/;"	m	struct:Picture
mb_num	libavcodec/mpegvideo.h	/^    int mb_num;                \/\/\/< number of MBs of a picture$/;"	m	struct:MpegEncContext
mb_num_left	libavcodec/mpegvideo.h	/^    int mb_num_left;                 \/\/\/< number of MBs left in this video packet (for partitioned Slices only)$/;"	m	struct:MpegEncContext
mb_padding	libavcodec/h264.h	/^    DCTELEM mb_padding[256*2];        \/\/\/< as mb is addressed by scantable[i] and scantable is uint8_t we can either check that i is not too large or ensure that there is some unused stuff after mb$/;"	m	struct:H264Context
mb_pat_vlc	libavcodec/mpeg12.c	/^static VLC mb_pat_vlc;$/;"	v	file:
mb_penalty_factor	libavcodec/mpegvideo.h	/^    int mb_penalty_factor;$/;"	m	struct:MotionEstContext
mb_ptype_vlc	libavcodec/mpeg12.c	/^static VLC mb_ptype_vlc;$/;"	v	file:
mb_qscale	libavcodec/dnxhdenc.h	/^    uint8_t  *mb_qscale;$/;"	m	struct:DNXHDEncContext
mb_rc	libavcodec/dnxhdenc.h	/^    RCEntry   (*mb_rc)[8160];$/;"	m	struct:DNXHDEncContext
mb_scan_index	libavcodec/dnxhddec.c	/^    uint32_t mb_scan_index[68];         \/* max for 1080p *\/$/;"	m	struct:__anon154	file:
mb_size	libavcodec/ivi_common.h	/^    int             mb_size;        \/\/\/< macroblock size$/;"	m	struct:__anon107
mb_skip_run	libavcodec/mpegvideo.h	/^    int mb_skip_run;$/;"	m	struct:MpegEncContext
mb_skipped	libavcodec/mpegvideo.h	/^    int mb_skipped;                \/\/\/< MUST BE SET only during DECODING$/;"	m	struct:MpegEncContext
mb_slice_group_map_type	libavcodec/h264.h	/^    int mb_slice_group_map_type;$/;"	m	struct:PPS
mb_stride	libavcodec/mpegvideo.h	/^    int mb_stride;             \/\/\/< mb_width+1 used for some arrays to allow simple addressing of left & top MBs without sig11$/;"	m	struct:MpegEncContext
mb_threshold	libavcodec/avcodec.h	/^     int mb_threshold;$/;"	m	struct:AVCodecContext
mb_type	libavcodec/mpegvideo.h	/^    uint16_t *mb_type;           \/\/\/< Table for candidate MB types for encoding$/;"	m	struct:MpegEncContext
mb_type	libavcodec/rv34.h	/^    int *mb_type;            \/\/\/< internal macroblock types$/;"	m	struct:RV34DecContext
mb_type	libavcodec/svq1enc.c	/^    uint16_t *mb_type;$/;"	m	struct:SVQ1Context	file:
mb_type	libavcodec/vc1.h	/^    uint8_t *mb_type_base, *mb_type[3];$/;"	m	struct:VC1Context
mb_type	libavcodec/vp56.h	/^    VP56mb mb_type;$/;"	m	struct:vp56_context
mb_type	libavcodec/vp56.h	/^    uint8_t mb_type[3][10][10];      \/* model for decoding MB type *\/$/;"	m	struct:__anon223
mb_type_b_map	libavcodec/mpeg4videodec.c	/^static const int mb_type_b_map[4]= {$/;"	v	file:
mb_type_b_tab	libavcodec/mpeg4data.h	/^const uint8_t mb_type_b_tab[4][2] = {$/;"	v
mb_type_b_vlc	libavcodec/mpeg4videodec.c	/^static VLC mb_type_b_vlc;$/;"	v	file:
mb_type_base	libavcodec/mpegvideo.h	/^    uint32_t *mb_type_base;$/;"	m	struct:Picture
mb_type_base	libavcodec/vc1.h	/^    uint8_t *mb_type_base, *mb_type[3];$/;"	m	struct:VC1Context
mb_types_stats	libavcodec/vp56.h	/^    uint8_t mb_types_stats[3][10][2];\/* contextual, next MB type stats *\/$/;"	m	struct:__anon223
mb_uvlinesize	libavcodec/h264.h	/^    int mb_uvlinesize;$/;"	m	struct:H264Context
mb_var	libavcodec/mpegvideo.h	/^    uint16_t *mb_var;           \/\/\/< Table for MB variances$/;"	m	struct:Picture
mb_var_sum	libavcodec/mpegvideo.h	/^    int mb_var_sum;             \/\/\/< sum of MB variance for current frame$/;"	m	struct:Picture
mb_var_sum	libavcodec/ratecontrol.h	/^    int mb_var_sum;$/;"	m	struct:RateControlEntry
mb_var_sum_temp	libavcodec/mpegvideo.h	/^    int mb_var_sum_temp;$/;"	m	struct:MotionEstContext
mb_var_thread	libavcodec/mpegvideo_enc.c	/^static int mb_var_thread(AVCodecContext *c, void *arg){$/;"	f	file:
mb_vlc	libavcodec/indeo5.c	/^    IVIHuffTab      mb_vlc;          \/\/\/< vlc table for decoding macroblock data$/;"	m	struct:__anon203	file:
mb_width	libavcodec/asv1.c	/^    int mb_width;$/;"	m	struct:ASV1Context	file:
mb_width	libavcodec/cavs.h	/^    int mb_width, mb_height;$/;"	m	struct:__anon207
mb_width	libavcodec/dnxhddec.c	/^    unsigned int mb_width, mb_height;$/;"	m	struct:__anon154	file:
mb_width	libavcodec/h264.h	/^    int mb_width;                      \/\/\/< pic_width_in_mbs_minus1 + 1$/;"	m	struct:SPS
mb_width	libavcodec/mdec.c	/^    int mb_width;$/;"	m	struct:MDECContext	file:
mb_width	libavcodec/mjpegdec.h	/^    int mb_width, mb_height;$/;"	m	struct:MJpegDecodeContext
mb_width	libavcodec/mpegvideo.h	/^    int mb_width, mb_height;   \/\/\/< number of MBs horizontally & vertically$/;"	m	struct:MpegEncContext
mb_width	libavcodec/mxpegdec.c	/^    unsigned mb_width, mb_height; \/* size of picture in MB's from MXM header *\/$/;"	m	struct:MXpegDecodeContext	file:
mb_width	libavcodec/vp56.h	/^    int mb_width;   \/* number of horizontal MB *\/$/;"	m	struct:vp56_context
mb_width	libavcodec/vp8.h	/^    uint16_t mb_width;   \/* number of horizontal MB *\/$/;"	m	struct:__anon182
mb_width2	libavcodec/asv1.c	/^    int mb_width2;$/;"	m	struct:ASV1Context	file:
mb_x	libavcodec/mdec.c	/^    int mb_x, mb_y;$/;"	m	struct:MDECContext	file:
mb_x	libavcodec/mpegvideo.h	/^    int mb_x, mb_y;$/;"	m	struct:MpegEncContext
mb_xy	libavcodec/h264.h	/^    int mb_xy;$/;"	m	struct:H264Context
mb_y	libavcodec/mdec.c	/^    int mb_x, mb_y;$/;"	m	struct:MDECContext	file:
mb_y	libavcodec/mpegvideo.h	/^    int mb_x, mb_y;$/;"	m	struct:MpegEncContext
mba_diff	libavcodec/h261.h	/^    int mba_diff;$/;"	m	struct:H261Context
mbaff	libavcodec/mpegvideo.h	/^    int mbaff;                  \/\/\/< h264 1 -> MBAFF frame 0-> not MBAFF$/;"	m	struct:Picture
mbidx	libavcodec/cavs.h	/^    int mbx, mby, mbidx; \/\/\/< macroblock coordinates$/;"	m	struct:__anon207
mbincr_vlc	libavcodec/mpeg12.c	/^static VLC mbincr_vlc;$/;"	v	file:
mbintra_table	libavcodec/mpegvideo.h	/^    uint8_t *mbintra_table;       \/\/\/< used to avoid setting {ac, dc, cbp}-pred stuff to zero on inter MB decoding$/;"	m	struct:MpegEncContext
mbs	libavcodec/ivi_common.h	/^    IVIMbInfo   *mbs;      \/\/\/< array of macroblock descriptors$/;"	m	struct:__anon106
mbskip	libavcodec/vp8.h	/^        uint8_t mbskip;$/;"	m	struct:__anon182::__anon187
mbskip_enabled	libavcodec/vp8.h	/^    uint8_t mbskip_enabled;$/;"	m	struct:__anon182
mbskip_table	libavcodec/mpegvideo.h	/^    uint8_t *mbskip_table;        \/**< used to avoid copy if macroblock skipped (for black regions for example)$/;"	m	struct:MpegEncContext
mbx	libavcodec/cavs.h	/^    int mbx, mby, mbidx; \/\/\/< macroblock coordinates$/;"	m	struct:__anon207
mby	libavcodec/cavs.h	/^    int mbx, mby, mbidx; \/\/\/< macroblock coordinates$/;"	m	struct:__anon207
mc_best_cb	libavcodec/a64enc.h	/^    int *mc_best_cb;$/;"	m	struct:A64Context
mc_block	libavcodec/snow.c	/^static void mc_block(Plane *p, uint8_t *dst, const uint8_t *src, int stride, int b_w, int b_h, int dx, int dy){$/;"	f	file:
mc_charmap	libavcodec/a64enc.h	/^    int *mc_charmap;$/;"	m	struct:A64Context
mc_charset	libavcodec/a64enc.h	/^    uint8_t *mc_charset;$/;"	m	struct:A64Context
mc_coding	libavcodec/alsdec.c	/^    int mc_coding;            \/\/\/< extended inter-channel coding (multi channel coding): 1 = on, 0 = off$/;"	m	struct:__anon150	file:
mc_colors	libavcodec/a64multienc.c	/^static const int mc_colors[5]={0x0,0xb,0xc,0xf,0x1};$/;"	v	file:
mc_colram	libavcodec/a64enc.h	/^    uint8_t *mc_colram;$/;"	m	struct:A64Context
mc_dir_part	libavcodec/cavs.c	/^static inline void mc_dir_part(AVSContext *h,Picture *pic,int square,$/;"	f	file:
mc_dir_part	libavcodec/h264.c	/^static inline void mc_dir_part(H264Context *h, Picture *pic, int n, int square, int chroma_height, int delta, int list,$/;"	f	file:
mc_frame_counter	libavcodec/a64enc.h	/^    int mc_frame_counter;$/;"	m	struct:A64Context
mc_lifetime	libavcodec/a64enc.h	/^    int mc_lifetime;$/;"	m	struct:A64Context
mc_luma_vals	libavcodec/a64enc.h	/^    int mc_luma_vals[5];$/;"	m	struct:A64Context
mc_mb_var	libavcodec/mpegvideo.h	/^    uint16_t *mc_mb_var;        \/\/\/< Table for motion compensated MB variances$/;"	m	struct:Picture
mc_mb_var_sum	libavcodec/mpegvideo.h	/^    int mc_mb_var_sum;          \/\/\/< motion compensated MB variance for current frame$/;"	m	struct:Picture
mc_mb_var_sum	libavcodec/ratecontrol.h	/^    int mc_mb_var_sum;$/;"	m	struct:RateControlEntry
mc_mb_var_sum_temp	libavcodec/mpegvideo.h	/^    int mc_mb_var_sum_temp;$/;"	m	struct:MotionEstContext
mc_meta_charset	libavcodec/a64enc.h	/^    int *mc_meta_charset;$/;"	m	struct:A64Context
mc_pal_size	libavcodec/a64enc.h	/^    int mc_pal_size;$/;"	m	struct:A64Context
mc_palette	libavcodec/a64enc.h	/^    uint8_t *mc_palette;$/;"	m	struct:A64Context
mc_part	libavcodec/h264.c	/^static inline void mc_part(H264Context *h, int n, int square, int chroma_height, int delta,$/;"	f	file:
mc_part_std	libavcodec/cavs.c	/^static inline void mc_part_std(AVSContext *h,int square,int chroma_height,int delta,$/;"	f	file:
mc_part_std	libavcodec/h264.c	/^static inline void mc_part_std(H264Context *h, int n, int square, int chroma_height, int delta,$/;"	f	file:
mc_part_weighted	libavcodec/h264.c	/^static inline void mc_part_weighted(H264Context *h, int n, int square, int chroma_height, int delta,$/;"	f	file:
mc_use_5col	libavcodec/a64enc.h	/^    int mc_use_5col;$/;"	m	struct:A64Context
mca	libavcodec/snow.c	1107;"	d	file:
mcc_weightings	libavcodec/alsdec.c	/^static const int16_t mcc_weightings[] = {$/;"	v	file:
mcdc	libavcodec/4xm.c	/^static inline void mcdc(uint16_t *dst, uint16_t *src, int log2w, int h, int stride, int scale, unsigned dc){$/;"	f	file:
mcf	libavcodec/snow.c	1686;"	d	file:
mcfh	libavcodec/snow.c	1711;"	d	file:
mclr_last	libavcodec/smacker.c	/^    int mmap_last[3], mclr_last[3], full_last[3], type_last[3];$/;"	m	struct:SmackVContext	file:
mclr_size	libavformat/smacker.c	/^    uint32_t mmap_size, mclr_size, full_size, type_size;$/;"	m	struct:SmackerContext	file:
mclr_tbl	libavcodec/smacker.c	/^    int *mmap_tbl, *mclr_tbl, *full_tbl, *type_tbl;$/;"	m	struct:SmackVContext	file:
mconly_picture	libavcodec/snow.c	/^    AVFrame mconly_picture;$/;"	m	struct:SnowContext	file:
mcsel	libavcodec/mpegvideo.h	/^    int mcsel;$/;"	m	struct:MpegEncContext
mct	libavcodec/j2k.h	/^    uint8_t mct;              \/\/\/< multiple component transformation$/;"	m	struct:__anon210
mct_decode	libavcodec/j2kdec.c	/^static void mct_decode(J2kDecoderContext *s, J2kTile *tile)$/;"	f	file:
md5	libavformat/ape.c	/^    uint8_t md5[16];$/;"	m	struct:__anon335	file:
md5	tests/fate-run.sh	/^md5(){$/;"	f
md5_close	libavformat/md5proto.c	/^static int md5_close(URLContext *h)$/;"	f	file:
md5_finish	libavformat/md5enc.c	/^static void md5_finish(struct AVFormatContext *s, char *buf)$/;"	f	file:
md5_get_handle	libavformat/md5proto.c	/^static int md5_get_handle(URLContext *h)$/;"	f	file:
md5_open	libavformat/md5proto.c	/^static int md5_open(URLContext *h, const char *filename, int flags)$/;"	f	file:
md5_write	libavformat/md5proto.c	/^static int md5_write(URLContext *h, const unsigned char *buf, int size)$/;"	f	file:
md5ctx	libavcodec/flacenc.c	/^    struct AVMD5 *md5ctx;$/;"	m	struct:FlacEncodeContext	typeref:struct:FlacEncodeContext::AVMD5	file:
md5sum	libavcodec/flacenc.c	/^    uint8_t md5sum[16];$/;"	m	struct:FlacEncodeContext	file:
mdat_pos	libavformat/movenc.h	/^    int64_t mdat_pos;$/;"	m	struct:MOVMuxContext
mdat_size	libavformat/movenc.h	/^    uint64_t mdat_size;$/;"	m	struct:MOVMuxContext
mdct	libavcodec/aac.h	/^    FFTContext mdct;$/;"	m	struct:__anon246
mdct	libavcodec/ac3enc.h	/^    AC3MDCTContext *mdct;                   \/\/\/< MDCT context$/;"	m	struct:AC3EncodeContext
mdct	libavcodec/sbr.h	/^    FFTContext         mdct;$/;"	m	struct:__anon57
mdct	libavcodec/vorbisdec.c	/^    FFTContext mdct[2];$/;"	m	struct:vorbis_context_s	file:
mdct	libavcodec/vorbisenc.c	/^    FFTContext mdct[2];$/;"	m	struct:__anon194	file:
mdct1024	libavcodec/aacenc.h	/^    FFTContext mdct1024;                         \/\/\/< long (1024 samples) frame transform context$/;"	m	struct:AACEncContext
mdct128	libavcodec/aacenc.h	/^    FFTContext mdct128;                          \/\/\/< short (128 samples) frame transform context$/;"	m	struct:AACEncContext
mdct_ana	libavcodec/sbr.h	/^    FFTContext         mdct_ana;$/;"	m	struct:__anon57
mdct_bits	libavcodec/fft.h	/^    int mdct_bits; \/* n = 2^nbits *\/$/;"	m	struct:FFTContext
mdct_buf	libavcodec/mpegaudiodec.c	/^    INTFLOAT mdct_buf[MPA_MAX_CHANNELS][SBLIMIT * 18]; \/* previous samples, for layer 3 MDCT *\/$/;"	m	struct:MPADecodeContext	file:
mdct_calc	libavcodec/fft.h	/^    void (*mdct_calc)(struct FFTContext *s, FFTSample *output, const FFTSample *input);$/;"	m	struct:FFTContext
mdct_calcw	libavcodec/fft.h	/^    void (*mdct_calcw)(struct FFTContext *s, FFTDouble *output, const FFTSample *input);$/;"	m	struct:FFTContext
mdct_coef	libavcodec/ac3enc.h	/^    CoefType **mdct_coef;                       \/\/\/< MDCT coefficients$/;"	m	struct:AC3Block
mdct_coef_buffer	libavcodec/ac3enc.h	/^    CoefType *mdct_coef_buffer;$/;"	m	struct:AC3EncodeContext
mdct_ctx	libavcodec/atrac1.c	/^    FFTContext          mdct_ctx[3];$/;"	m	struct:__anon120	file:
mdct_ctx	libavcodec/atrac3.c	/^    FFTContext          mdct_ctx;$/;"	m	struct:__anon131	file:
mdct_ctx	libavcodec/cook.c	/^    FFTContext          mdct_ctx;$/;"	m	struct:cook	file:
mdct_ctx	libavcodec/nellymoserenc.c	/^    FFTContext      mdct_ctx;$/;"	m	struct:NellyMoserEncodeContext	file:
mdct_ctx	libavcodec/twinvq.c	/^    FFTContext mdct_ctx[3];$/;"	m	struct:TwinContext	file:
mdct_ctx	libavcodec/wma.h	/^    FFTContext mdct_ctx[BLOCK_NB_SIZES];$/;"	m	struct:WMACodecContext
mdct_ctx	libavcodec/wmaprodec.c	/^    FFTContext       mdct_ctx[WMAPRO_BLOCK_SIZES];  \/\/\/< MDCT context per block size$/;"	m	struct:WMAProDecodeCtx	file:
mdct_end	libavcodec/ac3enc.h	/^    void (*mdct_end)(AC3MDCTContext *mdct);$/;"	m	struct:AC3EncodeContext
mdct_end	libavcodec/ac3enc_fixed.c	/^av_cold void AC3_NAME(mdct_end)(AC3MDCTContext *mdct)$/;"	f
mdct_init	libavcodec/ac3enc.h	/^    int  (*mdct_init)(AVCodecContext *avctx, AC3MDCTContext *mdct, int nbits);$/;"	m	struct:AC3EncodeContext
mdct_init	libavcodec/ac3enc_fixed.c	/^av_cold int AC3_NAME(mdct_init)(AVCodecContext *avctx, AC3MDCTContext *mdct,$/;"	f
mdct_long_nbits	libavcodec/atrac1.c	/^static const uint8_t   mdct_long_nbits[3] = {7, 7, 8};$/;"	v	file:
mdct_ltp	libavcodec/aac.h	/^    FFTContext mdct_ltp;$/;"	m	struct:__anon246
mdct_permutation	libavcodec/fft.h	/^    int mdct_permutation;$/;"	m	struct:FFTContext
mdct_ref	libavcodec/fft-test.c	/^static void mdct_ref(FFTSample *output, FFTSample *input, int nbits)$/;"	f	file:
mdct_sine_window	libavcodec/imc.c	/^    float mdct_sine_window[COEFFS];$/;"	m	struct:__anon90	file:
mdct_size	libavcodec/fft.h	/^    int mdct_size; \/* size of MDCT (i.e. number of input data * 2) *\/$/;"	m	struct:FFTContext
mdct_small	libavcodec/aac.h	/^    FFTContext mdct_small;$/;"	m	struct:__anon246
mdct_win	libavcodec/mpegaudiodec.c	/^static INTFLOAT mdct_win[8][36];$/;"	v	file:
mdec_common_init	libavcodec/mdec.c	/^static av_cold void mdec_common_init(AVCodecContext *avctx){$/;"	f	file:
mdec_decode_block_intra	libavcodec/mdec.c	/^static inline int mdec_decode_block_intra(MDECContext *a, DCTELEM *block, int n)$/;"	f	file:
me	libavcodec/mpegvideo.h	/^    MotionEstContext me;$/;"	m	struct:MpegEncContext
me_cache	libavcodec/snow.c	/^    int me_cache[ME_CACHE_SIZE];$/;"	m	struct:SnowContext	file:
me_cache_generation	libavcodec/snow.c	/^    int me_cache_generation;$/;"	m	struct:SnowContext	file:
me_cmp	libavcodec/avcodec.h	/^    int me_cmp;$/;"	m	struct:AVCodecContext
me_cmp	libavcodec/dsputil.h	/^    me_cmp_func me_cmp[6];$/;"	m	struct:DSPContext
me_cmp_func	libavcodec/dsputil.h	/^typedef int (*me_cmp_func)(void \/*MpegEncContext*\/ *s, uint8_t *blk1\/*align width (8 or 16)*\/, uint8_t *blk2\/*align 1*\/, int line_size, int h)\/* __attribute__ ((const))*\/;$/;"	t
me_flags	libavcodec/libxvidff.c	/^    int me_flags;                  \/**< Motion Estimation flags *\/$/;"	m	struct:xvid_context	file:
me_method	libavcodec/avcodec.h	/^    int me_method;$/;"	m	struct:AVCodecContext
me_method	libavcodec/mpegvideo.h	/^    int me_method;                       \/\/\/< ME algorithm$/;"	m	struct:MpegEncContext
me_penalty_compensation	libavcodec/avcodec.h	/^    int me_penalty_compensation;$/;"	m	struct:AVCodecContext
me_pre_cmp	libavcodec/avcodec.h	/^    int me_pre_cmp;$/;"	m	struct:AVCodecContext
me_pre_cmp	libavcodec/dsputil.h	/^    me_cmp_func me_pre_cmp[6];$/;"	m	struct:DSPContext
me_range	libavcodec/avcodec.h	/^    int me_range;$/;"	m	struct:AVCodecContext
me_sub_cmp	libavcodec/avcodec.h	/^    int me_sub_cmp;$/;"	m	struct:AVCodecContext
me_sub_cmp	libavcodec/dsputil.h	/^    me_cmp_func me_sub_cmp[6];$/;"	m	struct:DSPContext
me_subpel_quality	libavcodec/avcodec.h	/^    int me_subpel_quality;$/;"	m	struct:AVCodecContext
me_threshold	ffmpeg.c	/^static int me_threshold = 0;$/;"	v	file:
me_threshold	ffmpeg/ffmpeg.c	/^static int me_threshold = 0;$/;"	v	file:
me_threshold	libavcodec/avcodec.h	/^     int me_threshold;$/;"	m	struct:AVCodecContext
mean	libavutil/pca.c	/^    double *mean;$/;"	m	struct:PCA	file:
mean_lsf	libavcodec/siprdata.h	/^static const float mean_lsf[10] = {$/;"	v
mean_lsf_16k	libavcodec/sipr16kdata.h	/^static const float mean_lsf_16k[16] = {$/;"	v
media_info	libavformat/gxfenc.c	/^    uint16_t media_info;$/;"	m	struct:GXFStreamContext	file:
media_type	libavformat/gxfenc.c	/^    uint16_t media_type;$/;"	m	struct:GXFStreamContext	file:
media_type_string	ffprobe.c	/^static const char *media_type_string(enum AVMediaType media_type)$/;"	f	file:
median	libavcodec/wavpack.c	/^    int median[3];$/;"	m	struct:WvChannel	file:
median4	libavcodec/vc1dec.c	/^static inline int median4(int a, int b, int c, int d)$/;"	f	file:
mediasubtype_cpfilters_processed	libavformat/wtvdec.c	/^static const ff_asf_guid mediasubtype_cpfilters_processed =$/;"	v	file:
mediasubtype_dtvccdata	libavformat/wtvdec.c	/^static const ff_asf_guid mediasubtype_dtvccdata =$/;"	v	file:
mediasubtype_dvb_subtitle	libavformat/wtvdec.c	/^static const ff_asf_guid mediasubtype_dvb_subtitle =$/;"	v	file:
mediasubtype_mpeg1payload	libavformat/wtvdec.c	/^static const ff_asf_guid mediasubtype_mpeg1payload =$/;"	v	file:
mediasubtype_mpeg2_sections	libavformat/wtvdec.c	/^static const ff_asf_guid mediasubtype_mpeg2_sections =$/;"	v	file:
mediasubtype_teletext	libavformat/wtvdec.c	/^static const ff_asf_guid mediasubtype_teletext =$/;"	v	file:
mediatype_mpeg2_pes	libavformat/wtvdec.c	/^static const ff_asf_guid mediatype_mpeg2_pes =$/;"	v	file:
mediatype_mpeg2_sections	libavformat/wtvdec.c	/^static const ff_asf_guid mediatype_mpeg2_sections =$/;"	v	file:
mediatype_mstvcaption	libavformat/wtvdec.c	/^static const ff_asf_guid mediatype_mstvcaption =$/;"	v	file:
mediumthresh_c	libavfilter/libmpcodecs/vf_pp7.c	/^static int mediumthresh_c(DCTELEM *src, int qp){$/;"	f	file:
mem2agpcpy	libavfilter/libmpcodecs/libvo/fastmemcpy.h	30;"	d
mem2agpcpy_pic	libavfilter/libmpcodecs/libvo/fastmemcpy.h	/^static inline void * mem2agpcpy_pic(void * dst, const void * src, int bytesPerLine, int height, int dstStride, int srcStride)$/;"	f
mem_operator	libavcodec/libvo-aacenc.c	/^    VO_MEM_OPERATOR mem_operator;$/;"	m	struct:AACContext	file:
mem_preemph	libavcodec/sipr.h	/^    float mem_preemph[LP_FILTER_ORDER_16k];$/;"	m	struct:__anon235
memalign	libavutil/mem.c	49;"	d	file:
memcpy	libavutil/lzo.c	25;"	d	file:
memcpy_backptr	libavutil/lzo.c	/^static inline void memcpy_backptr(uint8_t *dst, int back, int cnt) {$/;"	f	file:
memcpy_pic	libavfilter/libmpcodecs/libvo/fastmemcpy.h	62;"	d
memcpy_pic2	libavfilter/libmpcodecs/libvo/fastmemcpy.h	/^static inline void * memcpy_pic2(void * dst, const void * src,$/;"	f
memory_allocated	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned char *memory_allocated;$/;"	m	struct:vf_priv_s	file:
memset_float	libavcodec/twinvq.c	/^static void memset_float(float *buf, float val, int size)$/;"	f	file:
memsetw	libavcodec/h263.h	/^static inline void memsetw(short *tab, int val, int n)$/;"	f
memshl	libavcodec/tta.c	/^static inline void memshl(register int32_t *a, register int32_t *b) {$/;"	f	file:
memzero_align8	libavcodec/sh4/dsputil_sh4.c	/^static void memzero_align8(void *dst,size_t size)$/;"	f	file:
merge	libavcodec/bink.c	/^static void merge(GetBitContext *gb, uint8_t *dst, uint8_t *src, int size)$/;"	f	file:
merge_context_after_encode	libavcodec/mpegvideo_enc.c	/^static void merge_context_after_encode(MpegEncContext *dst, MpegEncContext *src){$/;"	f	file:
merge_context_after_me	libavcodec/mpegvideo_enc.c	/^static void merge_context_after_me(MpegEncContext *dst, MpegEncContext *src){$/;"	f	file:
merge_count	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long export_count, merge_count;$/;"	m	struct:vf_priv_s	file:
merge_date	libavformat/id3v2.c	/^static void merge_date(AVDictionary **m)$/;"	f	file:
merge_ref	libavfilter/formats.c	/^static void merge_ref(AVFilterFormats *ret, AVFilterFormats *a)$/;"	f	file:
merge_time	libavfilter/libmpcodecs/vf_filmdint.c	/^    double diff_time, merge_time, decode_time, vo_time, filter_time;$/;"	m	struct:vf_priv_s	file:
meta_data_maps	ffmpeg.c	/^static AVMetaDataMap (*meta_data_maps)[2] = NULL;$/;"	v	file:
meta_data_maps	ffmpeg/ffmpeg.c	/^static AVMetaDataMap (*meta_data_maps)[2] = NULL;$/;"	v	file:
metadata	ffmpeg.c	/^static AVDictionary *metadata;$/;"	v	file:
metadata	ffmpeg/ffmpeg.c	/^static AVDictionary *metadata;$/;"	v	file:
metadata	libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVChapter
metadata	libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVFormatContext
metadata	libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVProgram
metadata	libavformat/avformat.h	/^    AVDictionary *metadata;$/;"	m	struct:AVStream
metadata_chapters_autocopy	ffmpeg.c	/^static int metadata_chapters_autocopy = 1;$/;"	v	file:
metadata_chapters_autocopy	ffmpeg/ffmpeg.c	/^static int metadata_chapters_autocopy = 1;$/;"	v	file:
metadata_conv	libavformat/avformat.h	/^    const AVMetadataConv *metadata_conv;$/;"	m	struct:AVInputFormat
metadata_conv	libavformat/avformat.h	/^    const AVMetadataConv *metadata_conv;$/;"	m	struct:AVOutputFormat
metadata_global_autocopy	ffmpeg.c	/^static int metadata_global_autocopy   = 1;$/;"	v	file:
metadata_global_autocopy	ffmpeg/ffmpeg.c	/^static int metadata_global_autocopy   = 1;$/;"	v	file:
metadata_guid	libavformat/wtvdec.c	/^static const ff_asf_guid metadata_guid =$/;"	v	file:
metadata_sets	libavformat/mxfdec.c	/^    MXFMetadataSet **metadata_sets;$/;"	m	struct:__anon447	file:
metadata_sets_count	libavformat/mxfdec.c	/^    int metadata_sets_count;$/;"	m	struct:__anon447	file:
metadata_streams_autocopy	ffmpeg.c	/^static int metadata_streams_autocopy  = 1;$/;"	v	file:
metadata_streams_autocopy	ffmpeg/ffmpeg.c	/^static int metadata_streams_autocopy  = 1;$/;"	v	file:
method	ffserver.c	/^    char method[16];$/;"	m	struct:HTTPContext	file:
method	libavfilter/libmpcodecs/vf_dsize.c	/^    int method; \/\/ aspect method, 0 -> downscale, 1-> upscale. +2 -> original aspect.$/;"	m	struct:vf_priv_s	file:
method	libavformat/applehttp.c	/^     char method[10];$/;"	m	struct:key_info	file:
metric_h	libavfilter/libmpcodecs/pullup.h	/^    int metric_w, metric_h, metric_len, metric_offset;$/;"	m	struct:pullup_context
metric_len	libavfilter/libmpcodecs/pullup.h	/^    int metric_w, metric_h, metric_len, metric_offset;$/;"	m	struct:pullup_context
metric_offset	libavfilter/libmpcodecs/pullup.h	/^    int metric_w, metric_h, metric_len, metric_offset;$/;"	m	struct:pullup_context
metric_plane	libavfilter/libmpcodecs/pullup.h	/^    int metric_plane;$/;"	m	struct:pullup_context
metric_w	libavfilter/libmpcodecs/pullup.h	/^    int metric_w, metric_h, metric_len, metric_offset;$/;"	m	struct:pullup_context
metrics	libavfilter/libmpcodecs/vf_detc.c	/^struct metrics {$/;"	s	file:
metrics	libavfilter/libmpcodecs/vf_filmdint.c	/^struct metrics {$/;"	s	file:
metrics	libavfilter/libmpcodecs/vf_ivtc.c	/^struct metrics {$/;"	s	file:
microdvd_probe	libavformat/microdvddec.c	/^static int microdvd_probe(AVProbeData *p)$/;"	f	file:
microdvd_read_header	libavformat/microdvddec.c	/^static int microdvd_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
microdvd_read_packet	libavformat/microdvddec.c	/^static int microdvd_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
microdvd_write_header	libavformat/microdvdenc.c	/^static int microdvd_write_header(struct AVFormatContext *s)$/;"	f	file:
mid_pred	libavcodec/arm/mathops.h	/^static inline av_const int mid_pred(int a, int b, int c)$/;"	f
mid_pred	libavcodec/arm/mathops.h	60;"	d
mid_pred	libavcodec/avr32/mathops.h	/^static inline av_const int mid_pred(int a, int b, int c)$/;"	f
mid_pred	libavcodec/avr32/mathops.h	82;"	d
mid_pred	libavcodec/mathops.h	/^static inline av_const int mid_pred(int a, int b, int c)$/;"	f
mid_pred	libavcodec/mathops.h	88;"	d
mid_pred	libavcodec/x86/mathops.h	/^static inline av_const int mid_pred(int a, int b, int c)$/;"	f
mid_pred	libavcodec/x86/mathops.h	71;"	d
mime	libavformat/matroskadec.c	/^    char *mime;$/;"	m	struct:__anon362	file:
mime_type	libavformat/avformat.h	/^    const char *mime_type;$/;"	m	struct:AVOutputFormat
mimic_decode_end	libavcodec/mimic.c	/^static av_cold int mimic_decode_end(AVCodecContext *avctx)$/;"	f	file:
mimic_decode_frame	libavcodec/mimic.c	/^static int mimic_decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
mimic_decode_init	libavcodec/mimic.c	/^static av_cold int mimic_decode_init(AVCodecContext *avctx)$/;"	f	file:
mimic_decode_update_thread_context	libavcodec/mimic.c	/^static int mimic_decode_update_thread_context(AVCodecContext *avctx, const AVCodecContext *avctx_from)$/;"	f	file:
min	libavcodec/aacpsy.c	/^        float min;        \/\/\/< minimum allowed PE for bit factor calculation$/;"	m	struct:AacPsyContext::__anon255	file:
min	libavcodec/vorbis_enc_data.h	/^    float min;$/;"	m	struct:__anon273
min	libavcodec/vorbisenc.c	/^    float min;$/;"	m	struct:__anon188	file:
min	libavfilter/libmpcodecs/libvo/video_out.h	/^        float min;$/;"	m	struct:__anon32
min	libavfilter/libmpcodecs/vf_remove_logo.c	102;"	d	file:
min	libavutil/opt.h	/^    double min;                 \/\/\/< minimum valid value for the option$/;"	m	struct:AVOption
minAllowedY	libpostproc/postprocess_internal.h	/^    int minAllowedY;                \/\/\/< for brigtness correction$/;"	m	struct:PPMode
minChromQuality	libpostproc/postprocess_internal.h	/^    int minChromQuality;    \/\/\/< minimum quality to turn chrominance filtering on$/;"	m	struct:PPFilter
minLumQuality	libpostproc/postprocess_internal.h	/^    int minLumQuality;      \/\/\/< minimum quality to turn luminance filtering on$/;"	m	struct:PPFilter
min_bits	libavcodec/truemotion2.c	/^    int min_bits; \/\/\/< minimum length of code$/;"	m	struct:TM2Huff	file:
min_channel	libavcodec/mlpdec.c	/^    uint8_t     min_channel;$/;"	m	struct:SubStream	file:
min_distance	libavformat/avformat.h	/^    int min_distance;         \/**< Minimum distance between this and the previous keyframe, used to avoid unneeded searching. *\/$/;"	m	struct:AVIndexEntry
min_framesize	libavcodec/flacenc.c	/^    int min_framesize;$/;"	m	struct:FlacEncodeContext	file:
min_framesize	libavcodec/shorten.c	/^    int min_framesize, max_framesize;$/;"	m	struct:ShortenContext	file:
min_padding	libavcodec/dnxhdenc.h	/^    unsigned min_padding;$/;"	m	struct:DNXHDEncContext
min_partition_order	libavcodec/avcodec.h	/^    attribute_deprecated int min_partition_order;$/;"	m	struct:AVCodecContext
min_partition_order	libavcodec/flacenc.c	/^    int min_partition_order;$/;"	m	struct:CompressionOptions	file:
min_perms	libavfilter/avfilter.h	/^    int min_perms;$/;"	m	struct:AVFilterPad
min_pitch_val	libavcodec/wmavoice.c	/^    int min_pitch_val;            \/\/\/< base value for pitch parsing code$/;"	m	struct:__anon157	file:
min_pktsize	libavformat/asf.h	/^    uint32_t min_pktsize;       \/**< size of a data packet$/;"	m	struct:__anon400
min_prediction_order	libavcodec/alacenc.c	/^    int min_prediction_order;$/;"	m	struct:AlacEncodeContext	file:
min_prediction_order	libavcodec/avcodec.h	/^    int min_prediction_order;$/;"	m	struct:AVCodecContext
min_prediction_order	libavcodec/flacenc.c	/^    int min_prediction_order;$/;"	m	struct:CompressionOptions	file:
min_qcoeff	libavcodec/mpegvideo.h	/^    int min_qcoeff;          \/\/\/< minimum encodable coefficient$/;"	m	struct:MpegEncContext
min_samples_per_subframe	libavcodec/wmaprodec.c	/^    uint16_t         min_samples_per_subframe;$/;"	m	struct:WMAProDecodeCtx	file:
min_snr	libavcodec/aacpsy.c	/^    float min_snr;       \/\/\/< minimal SNR$/;"	m	struct:AacPsyCoeffs	file:
minima_cmp	libavcodec/motion_est.c	/^static int minima_cmp(const void *a, const void *b){$/;"	f	file:
minpts	libavformat/wav.c	/^    int64_t minpts;$/;"	m	struct:__anon409	file:
minsb8	libavcodec/alpha/asm.h	121;"	d
minsb8	libavcodec/alpha/asm.h	135;"	d
minsb8	libavcodec/alpha/asm.h	168;"	d
minsw4	libavcodec/alpha/asm.h	123;"	d
minsw4	libavcodec/alpha/asm.h	137;"	d
minsw4	libavcodec/alpha/asm.h	170;"	d
minub8	libavcodec/alpha/asm.h	120;"	d
minub8	libavcodec/alpha/asm.h	134;"	d
minub8	libavcodec/alpha/asm.h	167;"	d
minuw4	libavcodec/alpha/asm.h	122;"	d
minuw4	libavcodec/alpha/asm.h	136;"	d
minuw4	libavcodec/alpha/asm.h	169;"	d
mirror	libavcodec/dwt.c	/^static inline int mirror(int v, int m){$/;"	f	file:
mirror	libavfilter/libmpcodecs/vf_mirror.c	/^static void mirror(unsigned char* dst,unsigned char* src,int dststride,int srcstride,int w,int h,int bpp,unsigned int fmt){$/;"	f	file:
mirror	libavfilter/libmpcodecs/vf_ow.c	/^static inline int mirror(int x, int w){$/;"	f	file:
misc_bits	libavcodec/avcodec.h	/^    int misc_bits;$/;"	m	struct:AVCodecContext
misc_bits	libavcodec/mpegvideo.h	/^    int misc_bits; \/\/\/< cbp, mb_type$/;"	m	struct:MpegEncContext
misc_bits	libavcodec/ratecontrol.h	/^    int misc_bits;$/;"	m	struct:RateControlEntry
misscount	libavfilter/libmpcodecs/vf_divtc.c	/^   int deghost, pass, phase, window, fcount, bcount, frameno, misscount,$/;"	m	struct:vf_priv_s	file:
mix	libavcodec/4xm.c	/^static int mix(int c0, int c1){$/;"	f	file:
mix	libavutil/aes.c	/^static inline void mix(av_aes_block state[2], uint32_t multbl[][256], int s1, int s3){$/;"	f	file:
mix_config_num_ch	libavcodec/dca.c	/^    int mix_config_num_ch[4];   \/\/\/< number of channels in each mix out configuration$/;"	m	struct:__anon93	file:
mix_core	libavutil/aes.c	/^static inline int mix_core(uint32_t multbl[][256], int a, int b, int c, int d){$/;"	f	file:
mix_metadata	libavcodec/dca.c	/^    int mix_metadata;           \/\/\/< mixing metadata present$/;"	m	struct:__anon93	file:
mixing_level	libavcodec/ac3.h	/^    int mixing_level;$/;"	m	struct:AC3EncOptions
mjpb_skiptosod	libavcodec/mjpegdec.h	/^    int mjpb_skiptosod;$/;"	m	struct:MJpegDecodeContext
mjpeg2jpeg_filter	libavcodec/mjpeg2jpeg_bsf.c	/^static int mjpeg2jpeg_filter(AVBitStreamFilterContext *bsfc,$/;"	f	file:
mjpeg_copy_block	libavcodec/mjpegdec.c	/^static av_always_inline void mjpeg_copy_block(uint8_t *dst, const uint8_t *src,$/;"	f	file:
mjpeg_ctx	libavcodec/mpegvideo.h	/^    struct MJpegContext *mjpeg_ctx;$/;"	m	struct:MpegEncContext	typeref:struct:MpegEncContext::MJpegContext
mjpeg_decode_app	libavcodec/mjpegdec.c	/^static int mjpeg_decode_app(MJpegDecodeContext *s)$/;"	f	file:
mjpeg_decode_com	libavcodec/mjpegdec.c	/^static int mjpeg_decode_com(MJpegDecodeContext *s)$/;"	f	file:
mjpeg_decode_dc	libavcodec/mjpegdec.c	/^static inline int mjpeg_decode_dc(MJpegDecodeContext *s, int dc_index)$/;"	f	file:
mjpeg_decode_dri	libavcodec/mjpegdec.c	/^static int mjpeg_decode_dri(MJpegDecodeContext *s)$/;"	f	file:
mjpeg_decode_scan	libavcodec/mjpegdec.c	/^static int mjpeg_decode_scan(MJpegDecodeContext *s, int nb_components, int Ah, int Al,$/;"	f	file:
mjpeg_decode_scan_progressive_ac	libavcodec/mjpegdec.c	/^static int mjpeg_decode_scan_progressive_ac(MJpegDecodeContext *s, int ss, int se, int Ah, int Al){$/;"	f	file:
mjpeg_hsample	libavcodec/mpegvideo.h	/^    int mjpeg_hsample[3];       \/\/\/< horizontal sampling factors, default = {2, 1, 1}$/;"	m	struct:MpegEncContext
mjpeg_vsample	libavcodec/mpegvideo.h	/^    int mjpeg_vsample[3];       \/\/\/< vertical sampling factors, default = {2, 1, 1}$/;"	m	struct:MpegEncContext
mjpega_dump_header	libavcodec/mjpega_dump_header_bsf.c	/^static int mjpega_dump_header(AVBitStreamFilterContext *bsfc, AVCodecContext *avctx, const char *args,$/;"	f	file:
mjpegb_decode_frame	libavcodec/mjpegbdec.c	/^static int mjpegb_decode_frame(AVCodecContext *avctx,$/;"	f	file:
mktemp	configure	/^    mktemp(){$/;"	f
mktimegm	libavutil/parseutils.c	/^static time_t mktimegm(struct tm *tm)$/;"	f	file:
mkv_add_cuepoint	libavformat/matroskaenc.c	/^static int mkv_add_cuepoint(mkv_cues *cues, int stream, int64_t ts, int64_t cluster_pos)$/;"	f	file:
mkv_add_seekhead_entry	libavformat/matroskaenc.c	/^static int mkv_add_seekhead_entry(mkv_seekhead *seekhead, unsigned int elementid, uint64_t filepos)$/;"	f	file:
mkv_blockgroup_size	libavformat/matroskaenc.c	/^static int mkv_blockgroup_size(int pkt_size)$/;"	f	file:
mkv_copy_packet	libavformat/matroskaenc.c	/^static int mkv_copy_packet(MatroskaMuxContext *mkv, const AVPacket *pkt)$/;"	f	file:
mkv_cuepoint	libavformat/matroskaenc.c	/^} mkv_cuepoint;$/;"	t	typeref:struct:__anon476	file:
mkv_cues	libavformat/matroskaenc.c	/^} mkv_cues;$/;"	t	typeref:struct:__anon477	file:
mkv_flush_dynbuf	libavformat/matroskaenc.c	/^static void mkv_flush_dynbuf(AVFormatContext *s)$/;"	f	file:
mkv_mode	libavcodec/wavpack.c	/^    int mkv_mode;$/;"	m	struct:WavpackContext	file:
mkv_seekhead	libavformat/matroskaenc.c	/^typedef struct mkv_seekhead {$/;"	s	file:
mkv_seekhead	libavformat/matroskaenc.c	/^} mkv_seekhead;$/;"	t	typeref:struct:mkv_seekhead	file:
mkv_seekhead_entry	libavformat/matroskaenc.c	/^typedef struct mkv_seekhead_entry {$/;"	s	file:
mkv_seekhead_entry	libavformat/matroskaenc.c	/^} mkv_seekhead_entry;$/;"	t	typeref:struct:mkv_seekhead_entry	file:
mkv_start_cues	libavformat/matroskaenc.c	/^static mkv_cues * mkv_start_cues(int64_t segment_offset)$/;"	f	file:
mkv_start_seekhead	libavformat/matroskaenc.c	/^static mkv_seekhead * mkv_start_seekhead(AVIOContext *pb, int64_t segment_offset, int numelements)$/;"	f	file:
mkv_track	libavformat/matroskaenc.c	/^} mkv_track;$/;"	t	typeref:struct:__anon478	file:
mkv_write_ass_blocks	libavformat/matroskaenc.c	/^static int mkv_write_ass_blocks(AVFormatContext *s, AVIOContext *pb, AVPacket *pkt)$/;"	f	file:
mkv_write_block	libavformat/matroskaenc.c	/^static void mkv_write_block(AVFormatContext *s, AVIOContext *pb,$/;"	f	file:
mkv_write_chapters	libavformat/matroskaenc.c	/^static int mkv_write_chapters(AVFormatContext *s)$/;"	f	file:
mkv_write_codecprivate	libavformat/matroskaenc.c	/^static int mkv_write_codecprivate(AVFormatContext *s, AVIOContext *pb, AVCodecContext *codec, int native_id, int qt_id)$/;"	f	file:
mkv_write_cues	libavformat/matroskaenc.c	/^static int64_t mkv_write_cues(AVIOContext *pb, mkv_cues *cues, int num_tracks)$/;"	f	file:
mkv_write_header	libavformat/matroskaenc.c	/^static int mkv_write_header(AVFormatContext *s)$/;"	f	file:
mkv_write_packet	libavformat/matroskaenc.c	/^static int mkv_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mkv_write_packet_internal	libavformat/matroskaenc.c	/^static int mkv_write_packet_internal(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mkv_write_seekhead	libavformat/matroskaenc.c	/^static int64_t mkv_write_seekhead(AVIOContext *pb, mkv_seekhead *seekhead)$/;"	f	file:
mkv_write_simpletag	libavformat/matroskaenc.c	/^static void mkv_write_simpletag(AVIOContext *pb, AVDictionaryEntry *t)$/;"	f	file:
mkv_write_srt_blocks	libavformat/matroskaenc.c	/^static int mkv_write_srt_blocks(AVFormatContext *s, AVIOContext *pb, AVPacket *pkt)$/;"	f	file:
mkv_write_tag	libavformat/matroskaenc.c	/^static int mkv_write_tag(AVFormatContext *s, AVDictionary *m, unsigned int elementid,$/;"	f	file:
mkv_write_tags	libavformat/matroskaenc.c	/^static int mkv_write_tags(AVFormatContext *s)$/;"	f	file:
mkv_write_tracks	libavformat/matroskaenc.c	/^static int mkv_write_tracks(AVFormatContext *s)$/;"	f	file:
mkv_write_trailer	libavformat/matroskaenc.c	/^static int mkv_write_trailer(AVFormatContext *s)$/;"	f	file:
mlib_YUV2ABGR420_32	libswscale/mlib/yuv2rgb_mlib.c	/^static int mlib_YUV2ABGR420_32(SwsContext *c, uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
mlib_YUV2ARGB420_32	libswscale/mlib/yuv2rgb_mlib.c	/^static int mlib_YUV2ARGB420_32(SwsContext *c, uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
mlib_YUV2RGB420_24	libswscale/mlib/yuv2rgb_mlib.c	/^static int mlib_YUV2RGB420_24(SwsContext *c, uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
mlp_channels	libavcodec/mlp_parser.c	/^static const uint8_t mlp_channels[32] = {$/;"	v	file:
mlp_decode_init	libavcodec/mlpdec.c	/^static av_cold int mlp_decode_init(AVCodecContext *avctx)$/;"	f	file:
mlp_filter_channel	libavcodec/dsputil.h	/^    void (*mlp_filter_channel)(int32_t *state, const int32_t *coeff,$/;"	m	struct:DSPContext
mlp_filter_channel_x86	libavcodec/x86/mlpdsp.c	/^static void mlp_filter_channel_x86(int32_t *state, const int32_t *coeff,$/;"	f	file:
mlp_init	libavcodec/mlp_parser.c	/^static av_cold int mlp_init(AVCodecParserContext *s)$/;"	f	file:
mlp_parse	libavcodec/mlp_parser.c	/^static int mlp_parse(AVCodecParserContext *s,$/;"	f	file:
mlp_quants	libavcodec/mlp_parser.c	/^static const uint8_t mlp_quants[16] = {$/;"	v	file:
mlp_samplerate	libavcodec/mlp_parser.c	/^static int mlp_samplerate(int in)$/;"	f	file:
mlt_compensate_output	libavcodec/cook.c	/^mlt_compensate_output(COOKContext *q, float *decode_buffer,$/;"	f	file:
mlt_window	libavcodec/cook.c	/^    float*              mlt_window;$/;"	m	struct:cook	file:
mlti_data	libavformat/rdt.c	/^    uint8_t *mlti_data;$/;"	m	struct:PayloadContext	file:
mlti_data_size	libavformat/rdt.c	/^    unsigned int mlti_data_size;$/;"	m	struct:PayloadContext	file:
mm_decode_end	libavcodec/mmvideo.c	/^static av_cold int mm_decode_end(AVCodecContext *avctx)$/;"	f	file:
mm_decode_frame	libavcodec/mmvideo.c	/^static int mm_decode_frame(AVCodecContext *avctx,$/;"	f	file:
mm_decode_init	libavcodec/mmvideo.c	/^static av_cold int mm_decode_init(AVCodecContext *avctx)$/;"	f	file:
mm_decode_inter	libavcodec/mmvideo.c	/^static void mm_decode_inter(MmContext * s, int half_horiz, int half_vert, const uint8_t *buf, int buf_size)$/;"	f	file:
mm_decode_intra	libavcodec/mmvideo.c	/^static void mm_decode_intra(MmContext * s, int half_horiz, int half_vert, const uint8_t *buf, int buf_size)$/;"	f	file:
mm_decode_pal	libavcodec/mmvideo.c	/^static void mm_decode_pal(MmContext *s, const uint8_t *buf, const uint8_t *buf_end)$/;"	f	file:
mm_support	libavcodec/dct-test.c	/^  int  mm_support;$/;"	m	struct:algo	file:
mmap_close	libavdevice/v4l2.c	/^static void mmap_close(struct video_data *s)$/;"	f	file:
mmap_init	libavdevice/v4l2.c	/^static int mmap_init(AVFormatContext *ctx)$/;"	f	file:
mmap_last	libavcodec/smacker.c	/^    int mmap_last[3], mclr_last[3], full_last[3], type_last[3];$/;"	m	struct:SmackVContext	file:
mmap_read_frame	libavdevice/v4l2.c	/^static int mmap_read_frame(AVFormatContext *ctx, AVPacket *pkt)$/;"	f	file:
mmap_release_buffer	libavdevice/v4l2.c	/^static void mmap_release_buffer(AVPacket *pkt)$/;"	f	file:
mmap_size	libavformat/smacker.c	/^    uint32_t mmap_size, mclr_size, full_size, type_size;$/;"	m	struct:SmackerContext	file:
mmap_start	libavdevice/v4l2.c	/^static int mmap_start(AVFormatContext *ctx)$/;"	f	file:
mmap_tbl	libavcodec/smacker.c	/^    int *mmap_tbl, *mclr_tbl, *full_tbl, *type_tbl;$/;"	m	struct:SmackVContext	file:
mmco	libavcodec/h264.h	/^    MMCO mmco[MAX_MMCO_COUNT];$/;"	m	struct:H264Context
mmco_index	libavcodec/h264.h	/^    int mmco_index;$/;"	m	struct:H264Context
mmco_reset	libavcodec/mpegvideo.h	/^    int mmco_reset;             \/\/\/< h264 MMCO_RESET set this 1. Reordering code must not mix pictures before and after MMCO_RESET.$/;"	m	struct:Picture
mmf_probe	libavformat/mmf.c	/^static int mmf_probe(AVProbeData *p)$/;"	f	file:
mmf_rate	libavformat/mmf.c	/^static int mmf_rate(int code)$/;"	f	file:
mmf_rate_code	libavformat/mmf.c	/^static int mmf_rate_code(int rate)$/;"	f	file:
mmf_rates	libavformat/mmf.c	/^static const int mmf_rates[] = { 4000, 8000, 11025, 22050, 44100 };$/;"	v	file:
mmf_read_header	libavformat/mmf.c	/^static int mmf_read_header(AVFormatContext *s,$/;"	f	file:
mmf_read_packet	libavformat/mmf.c	/^static int mmf_read_packet(AVFormatContext *s,$/;"	f	file:
mmf_write_header	libavformat/mmf.c	/^static int mmf_write_header(AVFormatContext *s)$/;"	f	file:
mmf_write_packet	libavformat/mmf.c	/^static int mmf_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mmf_write_trailer	libavformat/mmf.c	/^static int mmf_write_trailer(AVFormatContext *s)$/;"	f	file:
mms	libavformat/mmsh.c	/^    MMSContext mms;$/;"	m	struct:__anon497	file:
mms	libavformat/mmst.c	/^    MMSContext  mms;$/;"	m	struct:__anon341	file:
mms_close	libavformat/mmst.c	/^static int mms_close(URLContext *h)$/;"	f	file:
mms_hd	libavformat/mms.h	/^    URLContext *mms_hd;                  \/\/\/< TCP connection handle$/;"	m	struct:__anon455
mms_open	libavformat/mmst.c	/^static int mms_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
mms_put_utf16	libavformat/mmst.c	/^static void mms_put_utf16(MMSContext *mms, const uint8_t *src)$/;"	f	file:
mms_read	libavformat/mmst.c	/^static int mms_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
mms_safe_send_recv	libavformat/mmst.c	/^static int mms_safe_send_recv(MMSTContext *mmst,$/;"	f	file:
mmsh_close	libavformat/mmsh.c	/^static int mmsh_close(URLContext *h)$/;"	f	file:
mmsh_open	libavformat/mmsh.c	/^static int mmsh_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
mmsh_read	libavformat/mmsh.c	/^static int mmsh_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
mmx2	libavfilter/libmpcodecs/vf_filmdint.c	/^    long mmx2;$/;"	m	struct:vf_priv_s	file:
mmx_emms	libavcodec/dct-test.c	/^static inline void mmx_emms(void)$/;"	f	file:
mmx_row	libavcodec/x86/idct_mmx.c	/^static inline void mmx_row (const int16_t * const table,$/;"	f	file:
mmx_row_head	libavcodec/x86/idct_mmx.c	/^static inline void mmx_row_head (int16_t * const row, const int offset,$/;"	f	file:
mmx_row_mid	libavcodec/x86/idct_mmx.c	/^static inline void mmx_row_mid (int16_t * const row, const int store,$/;"	f	file:
mmx_row_tail	libavcodec/x86/idct_mmx.c	/^static inline void mmx_row_tail (int16_t * const row, const int store)$/;"	f	file:
mmx_table	libavcodec/x86/idct_mmx.c	204;"	d	file:
mmx_temp	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned mmx_temp[2];$/;"	m	struct:vf_priv_s	file:
mmxext_row	libavcodec/x86/idct_mmx.c	/^static inline void mmxext_row (const int16_t * const table,$/;"	f	file:
mmxext_row_head	libavcodec/x86/idct_mmx.c	/^static inline void mmxext_row_head (int16_t * const row, const int offset,$/;"	f	file:
mmxext_row_mid	libavcodec/x86/idct_mmx.c	/^static inline void mmxext_row_mid (int16_t * const row, const int store,$/;"	f	file:
mmxext_row_tail	libavcodec/x86/idct_mmx.c	/^static inline void mmxext_row_tail (int16_t * const row, const int store)$/;"	f	file:
mmxext_table	libavcodec/x86/idct_mmx.c	78;"	d	file:
mod	libavcodec/j2k_dwt.h	/^    uint8_t  mod[FF_DWT_MAX_DECLVLS][2]; \/\/\/< coordinates (x0, y0) of decomp. levels mod 2$/;"	m	struct:__anon233
mode	libavcodec/libcelt_dec.c	/^    CELTMode *mode;$/;"	m	struct:libcelt_context	file:
mode	libavcodec/libopencore-amr.c	/^    enum Mode mode;$/;"	m	struct:AMR_bitrates	typeref:enum:AMR_bitrates::Mode	file:
mode	libavcodec/libvo-amrwbenc.c	/^    int    mode;$/;"	m	struct:AMRWBContext	file:
mode	libavcodec/loco.c	/^    int mode;$/;"	m	struct:LOCOContext	file:
mode	libavcodec/lzw.c	/^    int mode;                   \/\/\/< Decoder mode$/;"	m	struct:LZWState	file:
mode	libavcodec/lzwenc.c	/^    enum FF_LZW_MODES mode;  \/\/\/< TIFF or GIF$/;"	m	struct:LZWEncodeState	typeref:enum:LZWEncodeState::FF_LZW_MODES	file:
mode	libavcodec/sipr.h	/^    SiprMode mode;$/;"	m	struct:__anon235
mode	libavcodec/tta.c	/^    int32_t shift, round, error, mode;$/;"	m	struct:TTAFilter	file:
mode	libavcodec/vp8.h	/^        int8_t mode[VP8_MVMODE_SPLIT+1];$/;"	m	struct:__anon182::__anon186
mode	libavcodec/vp8.h	/^    uint8_t mode;$/;"	m	struct:__anon181
mode	libavfilter/libmpcodecs/vf_detc.c	/^        int mode;$/;"	m	struct:vf_priv_s	file:
mode	libavfilter/libmpcodecs/vf_ilpack.c	/^    int mode;$/;"	m	struct:vf_priv_s	file:
mode	libavfilter/libmpcodecs/vf_mcdeint.c	/^    int mode;$/;"	m	struct:vf_priv_s	file:
mode	libavfilter/libmpcodecs/vf_ow.c	/^    int mode;$/;"	m	struct:vf_priv_s	file:
mode	libavfilter/libmpcodecs/vf_phase.c	/^   enum mode mode;$/;"	m	struct:vf_priv_s	typeref:enum:vf_priv_s::mode	file:
mode	libavfilter/libmpcodecs/vf_phase.c	/^enum mode { PROGRESSIVE, TOP_FIRST, BOTTOM_FIRST,$/;"	g	file:
mode	libavfilter/libmpcodecs/vf_pp7.c	/^    int mode;$/;"	m	struct:vf_priv_s	file:
mode	libavfilter/libmpcodecs/vf_spp.c	/^        int mode;$/;"	m	struct:vf_priv_s	file:
mode	libavfilter/libmpcodecs/vf_tinterlace.c	/^    int mode;$/;"	m	struct:vf_priv_s	file:
mode	libavfilter/libmpcodecs/vf_uspp.c	/^    int mode;$/;"	m	struct:vf_priv_s	file:
mode	libavfilter/vf_yadif.c	/^    int mode;$/;"	m	struct:__anon6	file:
mode	libavformat/matroskaenc.c	/^    int             mode;$/;"	m	struct:MatroskaMuxContext	file:
mode	libavformat/movenc.h	/^    int         mode;$/;"	m	struct:MOVIndex
mode	libavformat/movenc.h	/^    int     mode;$/;"	m	struct:MOVMuxContext
mode	libavformat/rtpdec_mpeg4.c	/^    char *mode;$/;"	m	struct:PayloadContext	file:
mode2_offs	libavcodec/rv40.c	/^static const int16_t mode2_offs[] = {$/;"	v	file:
mode_08_08	libavcodec/twinvq.c	/^static const ModeTab mode_08_08 = {$/;"	v	file:
mode_11_08	libavcodec/twinvq.c	/^static const ModeTab mode_11_08 = {$/;"	v	file:
mode_11_10	libavcodec/twinvq.c	/^static const ModeTab mode_11_10 = {$/;"	v	file:
mode_16_16	libavcodec/twinvq.c	/^static const ModeTab mode_16_16 = {$/;"	v	file:
mode_22_20	libavcodec/twinvq.c	/^static const ModeTab mode_22_20 = {$/;"	v	file:
mode_22_24	libavcodec/twinvq.c	/^static const ModeTab mode_22_24 = {$/;"	v	file:
mode_22_32	libavcodec/twinvq.c	/^static const ModeTab mode_22_32 = {$/;"	v	file:
mode_44_40	libavcodec/twinvq.c	/^static const ModeTab mode_44_40 = {$/;"	v	file:
mode_44_48	libavcodec/twinvq.c	/^static const ModeTab mode_44_48 = {$/;"	v	file:
mode_8bit	libavcodec/msvideo1.c	/^    int mode_8bit;  \/* if it's not 8-bit, it's 16-bit *\/$/;"	m	struct:Msvideo1Context	file:
mode_code_vlc	libavcodec/vp3.c	/^    VLC mode_code_vlc;$/;"	m	struct:Vp3DecodeContext	file:
mode_code_vlc_table	libavcodec/vp3data.h	/^static const uint8_t mode_code_vlc_table[8][2] = {$/;"	v
mode_count	libavcodec/vorbisdec.c	/^    uint8_t       mode_count;$/;"	m	struct:vorbis_context_s	file:
mode_name	libavcodec/sipr.c	/^    const char *mode_name;$/;"	m	struct:__anon112	file:
mode_number	libavcodec/vorbisdec.c	/^    uint8_t       mode_number; \/\/ mode number for the current packet$/;"	m	struct:vorbis_context_s	file:
model	libavcodec/psymodel.h	/^    const struct FFPsyModel *model;   \/\/\/< encoder-specific model functions$/;"	m	struct:FFPsyContext	typeref:struct:FFPsyContext::FFPsyModel
model_priv_data	libavcodec/psymodel.h	/^    void* model_priv_data;            \/\/\/< psychoacoustic model implementation private data$/;"	m	struct:FFPsyContext
modelp	libavcodec/vp56.h	/^    VP56Model *modelp;$/;"	m	struct:vp56_context
models	libavcodec/vp56.h	/^    VP56Model models[2];$/;"	m	struct:vp56_context
modes	libavcodec/sipr.c	/^static const SiprModeParam modes[MODE_COUNT] = {$/;"	v	file:
modes	libavcodec/vorbisdec.c	/^    vorbis_mode  *modes;$/;"	m	struct:vorbis_context_s	file:
modes	libavcodec/vorbisenc.c	/^    vorbis_enc_mode *modes;$/;"	m	struct:__anon194	file:
modified_levinson_durbin	libavcodec/sonic.c	/^static void modified_levinson_durbin(int *window, int window_entries,$/;"	f	file:
modified_quant	libavcodec/mpegvideo.h	/^    int modified_quant;$/;"	m	struct:MpegEncContext
modified_quant_tab	libavcodec/h263data.h	/^const uint8_t modified_quant_tab[2][32]={$/;"	v
modify_current_stream	ffserver.c	/^static int modify_current_stream(HTTPContext *c, char *rates)$/;"	f	file:
modify_pred	libavcodec/cavs.h	/^static inline void modify_pred(const int8_t *mod_table, int *mode)$/;"	f
modify_qscale	libavcodec/ratecontrol.c	/^static double modify_qscale(MpegEncContext *s, RateControlEntry *rce, double q, int frame_num){$/;"	f	file:
modulo_three_table	libavcodec/rv34data.h	/^static const uint8_t modulo_three_table[108][4] = {$/;"	v
mono_decode	libavcodec/cook.c	/^static void mono_decode(COOKContext *q, COOKSubpacket *p, float* mlt_buffer) {$/;"	f	file:
mono_previous_buffer1	libavcodec/cook.c	/^    float               mono_previous_buffer1[1024];$/;"	m	struct:__anon230	file:
mono_previous_buffer2	libavcodec/cook.c	/^    float               mono_previous_buffer2[1024];$/;"	m	struct:__anon230	file:
mono_to_stereo	libavcodec/resample.c	/^static void mono_to_stereo(short *output, short *input, int n1)$/;"	f	file:
monoblack_pal	libavcodec/bmpenc.c	/^static const uint32_t monoblack_pal[] = { 0x000000, 0xFFFFFF };$/;"	v	file:
monoblack_pal	libavcodec/pcxenc.c	/^static const uint32_t monoblack_pal[16] = { 0x000000, 0xFFFFFF };$/;"	v	file:
months	libavformat/avidec.c	/^static const char months[12][4] = { "Jan", "Feb", "Mar", "Apr", "May", "Jun",$/;"	v	file:
moof_offset	libavformat/isom.h	/^    uint64_t moof_offset;$/;"	m	struct:__anon468
motion	libavcodec/roqvideoenc.c	/^    motion_vect motion;$/;"	m	struct:__anon72	file:
motion	libavcodec/roqvideoenc.c	/^    motion_vect motion;$/;"	m	struct:__anon73	file:
motion_arg	libavcodec/roqvideoenc.c	/^static inline uint8_t motion_arg(motion_vect mot)$/;"	f	file:
motion_search	libavcodec/roqvideoenc.c	/^static void motion_search(RoqContext *enc, int blocksize)$/;"	f	file:
motion_val	libavcodec/vp3.c	/^    int8_t (*motion_val[2])[2];$/;"	m	struct:Vp3DecodeContext	file:
motion_val16	libavcodec/svq1enc.c	/^    int16_t (*motion_val16[3])[2];$/;"	m	struct:SVQ1Context	file:
motion_val8	libavcodec/svq1enc.c	/^    int16_t (*motion_val8[3])[2];$/;"	m	struct:SVQ1Context	file:
motion_val_base	libavcodec/mpegvideo.h	/^    int16_t (*motion_val_base[2])[2];$/;"	m	struct:Picture
motion_vect	libavcodec/roqvideo.h	/^} motion_vect;$/;"	t	typeref:struct:__anon125
motion_vector	libavcodec/yop.c	/^static const int8_t motion_vector[16][2] =$/;"	v	file:
motion_vector_table	libavcodec/vp3data.h	/^static const int motion_vector_table[63] = {$/;"	v
motion_vector_vlc	libavcodec/vp3.c	/^    VLC motion_vector_vlc;$/;"	m	struct:Vp3DecodeContext	file:
motion_vector_vlc_table	libavcodec/vp3data.h	/^static const uint8_t motion_vector_vlc_table[63][2] = {$/;"	v
motionpixels_tableinit	libavcodec/motionpixels_tablegen.h	/^static void motionpixels_tableinit(void)$/;"	f
motionpixels_tableinit	libavcodec/motionpixels_tablegen.h	47;"	d
mov2textsub	libavcodec/movsub_bsf.c	/^static int mov2textsub(AVBitStreamFilterContext *bsfc, AVCodecContext *avctx, const char *args,$/;"	f	file:
mov_build_index	libavformat/mov.c	/^static void mov_build_index(MOVContext *mov, AVStream *st)$/;"	f	file:
mov_channel_layout	libavformat/isom.c	/^static const MovChannelLayout mov_channel_layout[] = {$/;"	v	file:
mov_create_chapter_track	libavformat/movenc.c	/^static void mov_create_chapter_track(AVFormatContext *s, int tracknum)$/;"	f	file:
mov_default_parse_table	libavformat/mov.c	/^static const MOVParseTableEntry mov_default_parse_table[] = {$/;"	v	file:
mov_default_parse_table	libavformat/mov.c	/^static const MOVParseTableEntry mov_default_parse_table[];$/;"	v	file:
mov_find_codec_tag	libavformat/movenc.c	/^static int mov_find_codec_tag(AVFormatContext *s, MOVTrack *track)$/;"	f	file:
mov_find_next_sample	libavformat/mov.c	/^static AVIndexEntry *mov_find_next_sample(AVFormatContext *s, AVStream **st)$/;"	f	file:
mov_get_codec_tag	libavformat/movenc.c	/^static int mov_get_codec_tag(AVFormatContext *s, MOVTrack *track)$/;"	f	file:
mov_get_dv_codec_tag	libavformat/movenc.c	/^static int mov_get_dv_codec_tag(AVFormatContext *s, MOVTrack *track)$/;"	f	file:
mov_get_lpcm_flags	libavformat/movenc.c	/^static int mov_get_lpcm_flags(enum CodecID codec_id)$/;"	f	file:
mov_get_rawvideo_codec_tag	libavformat/movenc.c	/^static int mov_get_rawvideo_codec_tag(AVFormatContext *s, MOVTrack *track)$/;"	f	file:
mov_mdhd_language_map	libavformat/isom.c	/^static const char mov_mdhd_language_map[][4] = {$/;"	v	file:
mov_metadata_creation_time	libavformat/mov.c	/^static void mov_metadata_creation_time(AVDictionary **metadata, time_t time)$/;"	f	file:
mov_metadata_track_or_disc_number	libavformat/mov.c	/^static int mov_metadata_track_or_disc_number(MOVContext *c, AVIOContext *pb, unsigned len, const char *type)$/;"	f	file:
mov_muxer_class	libavformat/movenc.c	/^static const AVClass mov_muxer_class = {$/;"	v	file:
mov_open_dref	libavformat/mov.c	/^static int mov_open_dref(AVIOContext **pb, const char *src, MOVDref *ref)$/;"	f	file:
mov_parse_mpeg2_frame	libavformat/movenc.c	/^static int mov_parse_mpeg2_frame(AVPacket *pkt, uint32_t *flags)$/;"	f	file:
mov_pcm_le_gt16	libavformat/movenc.c	/^static int mov_pcm_le_gt16(enum CodecID codec_id)$/;"	f	file:
mov_pix_fmt_tags	libavformat/movenc.c	/^} mov_pix_fmt_tags[] = {$/;"	v	typeref:struct:__anon423	file:
mov_probe	libavformat/mov.c	/^static int mov_probe(AVProbeData *p)$/;"	f	file:
mov_read_alac	libavformat/mov.c	/^static int mov_read_alac(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_avss	libavformat/mov.c	/^static int mov_read_avss(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_chan	libavformat/mov.c	/^static int mov_read_chan(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_chap	libavformat/mov.c	/^static int mov_read_chap(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_chapters	libavformat/mov.c	/^static void mov_read_chapters(AVFormatContext *s)$/;"	f	file:
mov_read_chpl	libavformat/mov.c	/^static int mov_read_chpl(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_close	libavformat/mov.c	/^static int mov_read_close(AVFormatContext *s)$/;"	f	file:
mov_read_cmov	libavformat/mov.c	/^static int mov_read_cmov(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_ctts	libavformat/mov.c	/^static int mov_read_ctts(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_dac3	libavformat/mov.c	/^static int mov_read_dac3(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_default	libavformat/mov.c	/^static int mov_read_default(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_dref	libavformat/mov.c	/^static int mov_read_dref(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_elst	libavformat/mov.c	/^static int mov_read_elst(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_enda	libavformat/mov.c	/^static int mov_read_enda(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_esds	libavformat/mov.c	/^static int mov_read_esds(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_extradata	libavformat/mov.c	/^static int mov_read_extradata(MOVContext *c, AVIOContext *pb, MOVAtom atom,$/;"	f	file:
mov_read_fiel	libavformat/mov.c	/^static int mov_read_fiel(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_ftyp	libavformat/mov.c	/^static int mov_read_ftyp(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_glbl	libavformat/mov.c	/^static int mov_read_glbl(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_hdlr	libavformat/mov.c	/^static int mov_read_hdlr(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_header	libavformat/mov.c	/^static int mov_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
mov_read_ilst	libavformat/mov.c	/^static int mov_read_ilst(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_jp2h	libavformat/mov.c	/^static int mov_read_jp2h(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_mac_string	libavformat/mov.c	/^static int mov_read_mac_string(MOVContext *c, AVIOContext *pb, int len,$/;"	f	file:
mov_read_mdat	libavformat/mov.c	/^static int mov_read_mdat(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_mdhd	libavformat/mov.c	/^static int mov_read_mdhd(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_meta	libavformat/mov.c	/^static int mov_read_meta(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_moof	libavformat/mov.c	/^static int mov_read_moof(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_moov	libavformat/mov.c	/^static int mov_read_moov(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_mvhd	libavformat/mov.c	/^static int mov_read_mvhd(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_packet	libavformat/mov.c	/^static int mov_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mov_read_pasp	libavformat/mov.c	/^static int mov_read_pasp(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_seek	libavformat/mov.c	/^static int mov_read_seek(AVFormatContext *s, int stream_index, int64_t sample_time, int flags)$/;"	f	file:
mov_read_smi	libavformat/mov.c	/^static int mov_read_smi(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_stco	libavformat/mov.c	/^static int mov_read_stco(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_stps	libavformat/mov.c	/^static int mov_read_stps(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_strf	libavformat/mov.c	/^static int mov_read_strf(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_stsc	libavformat/mov.c	/^static int mov_read_stsc(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_stsd	libavformat/mov.c	/^static int mov_read_stsd(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_stss	libavformat/mov.c	/^static int mov_read_stss(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_stsz	libavformat/mov.c	/^static int mov_read_stsz(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_stts	libavformat/mov.c	/^static int mov_read_stts(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_tfhd	libavformat/mov.c	/^static int mov_read_tfhd(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_tkhd	libavformat/mov.c	/^static int mov_read_tkhd(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_trak	libavformat/mov.c	/^static int mov_read_trak(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_trex	libavformat/mov.c	/^static int mov_read_trex(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_trun	libavformat/mov.c	/^static int mov_read_trun(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_udta_string	libavformat/mov.c	/^static int mov_read_udta_string(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_wave	libavformat/mov.c	/^static int mov_read_wave(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_wfex	libavformat/mov.c	/^static int mov_read_wfex(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_read_wide	libavformat/mov.c	/^static int mov_read_wide(MOVContext *c, AVIOContext *pb, MOVAtom atom)$/;"	f	file:
mov_seek_stream	libavformat/mov.c	/^static int mov_seek_stream(AVFormatContext *s, AVStream *st, int64_t timestamp, int flags)$/;"	f	file:
mov_write_3gp_udta_tag	libavformat/movenc.c	/^static int mov_write_3gp_udta_tag(AVIOContext *pb, AVFormatContext *s,$/;"	f	file:
mov_write_ac3_tag	libavformat/movenc.c	/^static int mov_write_ac3_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_amr_tag	libavformat/movenc.c	/^static int mov_write_amr_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_audio_tag	libavformat/movenc.c	/^static int mov_write_audio_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_avcc_tag	libavformat/movenc.c	/^static int mov_write_avcc_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_avid_tag	libavformat/movenc.c	/^static int mov_write_avid_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_chpl_tag	libavformat/movenc.c	/^static int mov_write_chpl_tag(AVIOContext *pb, AVFormatContext *s)$/;"	f	file:
mov_write_ctts_tag	libavformat/movenc.c	/^static int mov_write_ctts_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_d263_tag	libavformat/movenc.c	/^static int mov_write_d263_tag(AVIOContext *pb)$/;"	f	file:
mov_write_dinf_tag	libavformat/movenc.c	/^static int mov_write_dinf_tag(AVIOContext *pb)$/;"	f	file:
mov_write_dref_tag	libavformat/movenc.c	/^static int mov_write_dref_tag(AVIOContext *pb)$/;"	f	file:
mov_write_edts_tag	libavformat/movenc.c	/^static int mov_write_edts_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_enda_tag	libavformat/movenc.c	/^static int mov_write_enda_tag(AVIOContext *pb)$/;"	f	file:
mov_write_esds_tag	libavformat/movenc.c	/^static int mov_write_esds_tag(AVIOContext *pb, MOVTrack *track) \/\/ Basic$/;"	f	file:
mov_write_extradata_tag	libavformat/movenc.c	/^static int mov_write_extradata_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_ftyp_tag	libavformat/movenc.c	/^static int mov_write_ftyp_tag(AVIOContext *pb, AVFormatContext *s)$/;"	f	file:
mov_write_glbl_tag	libavformat/movenc.c	/^static int mov_write_glbl_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_gmhd_tag	libavformat/movenc.c	/^static int mov_write_gmhd_tag(AVIOContext *pb)$/;"	f	file:
mov_write_hdlr_tag	libavformat/movenc.c	/^static int mov_write_hdlr_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_header	libavformat/movenc.c	/^static int mov_write_header(AVFormatContext *s)$/;"	f	file:
mov_write_hmhd_tag	libavformat/movenc.c	/^static int mov_write_hmhd_tag(AVIOContext *pb)$/;"	f	file:
mov_write_ilst_tag	libavformat/movenc.c	/^static int mov_write_ilst_tag(AVIOContext *pb, MOVMuxContext *mov,$/;"	f	file:
mov_write_itunes_hdlr_tag	libavformat/movenc.c	/^static int mov_write_itunes_hdlr_tag(AVIOContext *pb, MOVMuxContext *mov,$/;"	f	file:
mov_write_mdat_tag	libavformat/movenc.c	/^static int mov_write_mdat_tag(AVIOContext *pb, MOVMuxContext *mov)$/;"	f	file:
mov_write_mdhd_tag	libavformat/movenc.c	/^static int mov_write_mdhd_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_mdia_tag	libavformat/movenc.c	/^static int mov_write_mdia_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_meta_tag	libavformat/movenc.c	/^static int mov_write_meta_tag(AVIOContext *pb, MOVMuxContext *mov,$/;"	f	file:
mov_write_minf_tag	libavformat/movenc.c	/^static int mov_write_minf_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_moov_tag	libavformat/movenc.c	/^static int mov_write_moov_tag(AVIOContext *pb, MOVMuxContext *mov,$/;"	f	file:
mov_write_ms_tag	libavformat/movenc.c	/^static int mov_write_ms_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_mvhd_tag	libavformat/movenc.c	/^static int mov_write_mvhd_tag(AVIOContext *pb, MOVMuxContext *mov)$/;"	f	file:
mov_write_nmhd_tag	libavformat/movenc.c	/^static int mov_write_nmhd_tag(AVIOContext *pb)$/;"	f	file:
mov_write_pasp_tag	libavformat/movenc.c	/^static int mov_write_pasp_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_psp_udta_tag	libavformat/movenc.c	/^static void mov_write_psp_udta_tag(AVIOContext *pb,$/;"	f	file:
mov_write_rtp_tag	libavformat/movenc.c	/^static int mov_write_rtp_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_smhd_tag	libavformat/movenc.c	/^static int mov_write_smhd_tag(AVIOContext *pb)$/;"	f	file:
mov_write_stbl_tag	libavformat/movenc.c	/^static int mov_write_stbl_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_stco_tag	libavformat/movenc.c	/^static int mov_write_stco_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_string_data_tag	libavformat/movenc.c	/^static int mov_write_string_data_tag(AVIOContext *pb, const char *data, int lang, int long_style)$/;"	f	file:
mov_write_string_metadata	libavformat/movenc.c	/^static int mov_write_string_metadata(AVFormatContext *s, AVIOContext *pb,$/;"	f	file:
mov_write_string_tag	libavformat/movenc.c	/^static int mov_write_string_tag(AVIOContext *pb, const char *name, const char *value, int lang, int long_style){$/;"	f	file:
mov_write_stsc_tag	libavformat/movenc.c	/^static int mov_write_stsc_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_stsd_tag	libavformat/movenc.c	/^static int mov_write_stsd_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_stss_tag	libavformat/movenc.c	/^static int mov_write_stss_tag(AVIOContext *pb, MOVTrack *track, uint32_t flag)$/;"	f	file:
mov_write_stsz_tag	libavformat/movenc.c	/^static int mov_write_stsz_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_stts_tag	libavformat/movenc.c	/^static int mov_write_stts_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_subtitle_tag	libavformat/movenc.c	/^static int mov_write_subtitle_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_svq3_tag	libavformat/movenc.c	/^static int mov_write_svq3_tag(AVIOContext *pb)$/;"	f	file:
mov_write_tapt_tag	libavformat/movenc.c	/^static int mov_write_tapt_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_tkhd_tag	libavformat/movenc.c	/^static int mov_write_tkhd_tag(AVIOContext *pb, MOVTrack *track, AVStream *st)$/;"	f	file:
mov_write_trailer	libavformat/movenc.c	/^static int mov_write_trailer(AVFormatContext *s)$/;"	f	file:
mov_write_trak_tag	libavformat/movenc.c	/^static int mov_write_trak_tag(AVIOContext *pb, MOVTrack *track, AVStream *st)$/;"	f	file:
mov_write_tref_tag	libavformat/movenc.c	/^static int mov_write_tref_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_trkn_tag	libavformat/movenc.c	/^static int mov_write_trkn_tag(AVIOContext *pb, MOVMuxContext *mov,$/;"	f	file:
mov_write_udta_sdp	libavformat/movenc.c	/^static int mov_write_udta_sdp(AVIOContext *pb, AVFormatContext *ctx, int index)$/;"	f	file:
mov_write_udta_tag	libavformat/movenc.c	/^static int mov_write_udta_tag(AVIOContext *pb, MOVMuxContext *mov,$/;"	f	file:
mov_write_uuid_tag_ipod	libavformat/movenc.c	/^static int mov_write_uuid_tag_ipod(AVIOContext *pb)$/;"	f	file:
mov_write_uuid_tag_psp	libavformat/movenc.c	/^static int mov_write_uuid_tag_psp(AVIOContext *pb, MOVTrack *mov)$/;"	f	file:
mov_write_uuidprof_tag	libavformat/movenc.c	/^static void mov_write_uuidprof_tag(AVIOContext *pb, AVFormatContext *s)$/;"	f	file:
mov_write_uuidusmt_tag	libavformat/movenc.c	/^static int mov_write_uuidusmt_tag(AVIOContext *pb, AVFormatContext *s)$/;"	f	file:
mov_write_video_tag	libavformat/movenc.c	/^static int mov_write_video_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
mov_write_vmhd_tag	libavformat/movenc.c	/^static int mov_write_vmhd_tag(AVIOContext *pb)$/;"	f	file:
mov_write_wave_tag	libavformat/movenc.c	/^static int mov_write_wave_tag(AVIOContext *pb, MOVTrack *track)$/;"	f	file:
move	libavcodec/ass_split.h	/^    void (*move)(void *priv, int x1, int y1, int x2, int y2, int t1, int t2);$/;"	m	struct:__anon252
movecb	libavdevice/sndio_common.c	/^static inline void movecb(void *addr, int delta)$/;"	f	file:
movi_end	libavformat/avidec.c	/^    int64_t  movi_end;$/;"	m	struct:__anon451	file:
movi_list	libavformat/avidec.c	/^    int64_t movi_list;$/;"	m	struct:__anon451	file:
movi_list	libavformat/avienc.c	/^    int64_t riff_start, movi_list, odml_list;$/;"	m	struct:__anon343	file:
movie_class	libavfilter/vsrc_movie.c	/^static const AVClass movie_class = {$/;"	v	file:
movie_get_frame	libavfilter/vsrc_movie.c	/^static int movie_get_frame(AVFilterLink *outlink)$/;"	f	file:
movie_get_name	libavfilter/vsrc_movie.c	/^static const char *movie_get_name(void *ctx)$/;"	f	file:
movie_init	libavfilter/vsrc_movie.c	/^static int movie_init(AVFilterContext *ctx)$/;"	f	file:
movie_options	libavfilter/vsrc_movie.c	/^static const AVOption movie_options[]= {$/;"	v	file:
mp2_write_trailer	libavformat/mp3enc.c	/^static int mp2_write_trailer(struct AVFormatContext *s)$/;"	f	file:
mp3Frames	libavcodec/mpegaudiodec.c	/^static const uint8_t mp3Frames[8] = {0,1,1,2,3,3,4,5};   \/* number of mp3 decoder instances *\/$/;"	v	file:
mp3_fix_xing	libavformat/mp3enc.c	/^static void mp3_fix_xing(AVFormatContext *s)$/;"	f	file:
mp3_header_compress	libavcodec/mp3_header_compress_bsf.c	/^static int mp3_header_compress(AVBitStreamFilterContext *bsfc, AVCodecContext *avctx, const char *args,$/;"	f	file:
mp3_header_decompress	libavcodec/mp3_header_decompress_bsf.c	/^static int mp3_header_decompress(AVBitStreamFilterContext *bsfc, AVCodecContext *avctx, const char *args,$/;"	f	file:
mp3_muxer_class	libavformat/mp3enc.c	/^static const AVClass mp3_muxer_class = {$/;"	v	file:
mp3_parse_vbr_tags	libavformat/mp3dec.c	/^static int mp3_parse_vbr_tags(AVFormatContext *s, AVStream *st, int64_t base)$/;"	f	file:
mp3_read_header	libavformat/mp3dec.c	/^static int mp3_read_header(AVFormatContext *s,$/;"	f	file:
mp3_read_packet	libavformat/mp3dec.c	/^static int mp3_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mp3_read_probe	libavformat/mp3dec.c	/^static int mp3_read_probe(AVProbeData *p)$/;"	f	file:
mp3_write_header	libavformat/mp3enc.c	/^static int mp3_write_header(struct AVFormatContext *s)$/;"	f	file:
mp3_write_packet	libavformat/mp3enc.c	/^static int mp3_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mp3_write_trailer	libavformat/mp3enc.c	/^static int mp3_write_trailer(AVFormatContext *s)$/;"	f	file:
mp3_write_xing	libavformat/mp3enc.c	/^static int mp3_write_xing(AVFormatContext *s)$/;"	f	file:
mp3_xing_add_frame	libavformat/mp3enc.c	/^static void mp3_xing_add_frame(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mp3decctx	libavcodec/mpegaudiodec.c	/^    MPADecodeContext *mp3decctx[5]; \/\/\/< MPADecodeContext for every decoder instance$/;"	m	struct:MP3On4DecodeContext	file:
mp3len	libavcodec/libmp3lame.c	/^static int mp3len(void *data, int *samplesPerFrame, int *sampleRate)$/;"	f	file:
mp4_audio_types	libavformat/isom.c	/^static const AVCodecTag mp4_audio_types[] = {$/;"	v	file:
mp4_get_codec_tag	libavformat/movenc.c	/^static int mp4_get_codec_tag(AVFormatContext *s, MOVTrack *track)$/;"	f	file:
mp4_read_iods	libavformat/mpegts.c	/^static int mp4_read_iods(AVFormatContext *s, const uint8_t *buf, unsigned size,$/;"	f	file:
mp_build_rgb_yuv_table	libavcodec/motionpixels_tablegen.h	/^static void mp_build_rgb_yuv_table(YuvPixel *p)$/;"	f
mp_codec_info_s	libavfilter/libmpcodecs/mpc_info.h	/^typedef struct mp_codec_info_s$/;"	s
mp_codec_info_t	libavfilter/libmpcodecs/mpc_info.h	/^} mp_codec_info_t;$/;"	t	typeref:struct:mp_codec_info_s
mp_colorkey_t	libavfilter/libmpcodecs/libvo/video_out.h	/^} mp_colorkey_t;$/;"	t	typeref:struct:__anon30
mp_dbg	libavfilter/libmpcodecs/mp_msg.h	149;"	d
mp_dbg	libavfilter/libmpcodecs/mp_msg.h	151;"	d
mp_dbg	libavfilter/libmpcodecs/mp_msg.h	156;"	d
mp_dbg	libavfilter/libmpcodecs/mp_msg.h	158;"	d
mp_decode_end	libavcodec/motionpixels.c	/^static av_cold int mp_decode_end(AVCodecContext *avctx)$/;"	f	file:
mp_decode_frame	libavcodec/motionpixels.c	/^static int mp_decode_frame(AVCodecContext *avctx,$/;"	f	file:
mp_decode_frame	libavcodec/mpegaudiodec.c	/^static int mp_decode_frame(MPADecodeContext *s,$/;"	f	file:
mp_decode_frame_helper	libavcodec/motionpixels.c	/^static void mp_decode_frame_helper(MotionPixelsContext *mp, GetBitContext *gb)$/;"	f	file:
mp_decode_init	libavcodec/motionpixels.c	/^static av_cold int mp_decode_init(AVCodecContext *avctx)$/;"	f	file:
mp_decode_layer1	libavcodec/mpegaudiodec.c	/^static int mp_decode_layer1(MPADecodeContext *s)$/;"	f	file:
mp_decode_layer2	libavcodec/mpegaudiodec.c	/^static int mp_decode_layer2(MPADecodeContext *s)$/;"	f	file:
mp_decode_layer3	libavcodec/mpegaudiodec.c	/^static int mp_decode_layer3(MPADecodeContext *s)$/;"	f	file:
mp_decode_line	libavcodec/motionpixels.c	/^static void mp_decode_line(MotionPixelsContext *mp, GetBitContext *gb, int y)$/;"	f	file:
mp_get_chroma_shift	libavfilter/libmpcodecs/img_format.c	/^int mp_get_chroma_shift(int format, int *x_shift, int *y_shift)$/;"	f
mp_get_code	libavcodec/motionpixels.c	/^static void mp_get_code(MotionPixelsContext *mp, GetBitContext *gb, int size, int code)$/;"	f	file:
mp_get_vlc	libavcodec/motionpixels.c	/^static int mp_get_vlc(MotionPixelsContext *mp, GetBitContext *gb)$/;"	f	file:
mp_get_yuv_from_rgb	libavcodec/motionpixels.c	/^static YuvPixel mp_get_yuv_from_rgb(MotionPixelsContext *mp, int x, int y)$/;"	f	file:
mp_gradient	libavcodec/motionpixels.c	/^static int mp_gradient(MotionPixelsContext *mp, int component, int v)$/;"	f	file:
mp_image	libavfilter/libmpcodecs/mp_image.h	/^typedef struct mp_image {$/;"	s
mp_image_alloc_planes	libavfilter/libmpcodecs/mp_image.c	/^void mp_image_alloc_planes(mp_image_t *mpi) {$/;"	f
mp_image_setfmt	libavfilter/libmpcodecs/mp_image.c	/^void mp_image_setfmt(mp_image_t* mpi,unsigned int out_fmt){$/;"	f
mp_image_t	libavfilter/libmpcodecs/mp_image.h	/^} mp_image_t;$/;"	t	typeref:struct:mp_image
mp_keymap	libavfilter/libmpcodecs/libvo/video_out.h	/^struct mp_keymap {$/;"	s
mp_msg	libavfilter/vf_mp.c	/^void mp_msg(int mod, int lev, const char *format, ... ){$/;"	f
mp_msg_test	libavfilter/vf_mp.c	/^int mp_msg_test(int mod, int lev){$/;"	f
mp_read_changes_map	libavcodec/motionpixels.c	/^static void mp_read_changes_map(MotionPixelsContext *mp, GetBitContext *gb, int count, int bits_len, int read_color)$/;"	f	file:
mp_read_codes_table	libavcodec/motionpixels.c	/^static void mp_read_codes_table(MotionPixelsContext *mp, GetBitContext *gb)$/;"	f	file:
mp_rgb_yuv_table	libavcodec/motionpixels_tablegen.h	/^static YuvPixel mp_rgb_yuv_table[1 << 15];$/;"	v
mp_set_rgb_from_yuv	libavcodec/motionpixels.c	/^static void mp_set_rgb_from_yuv(MotionPixelsContext *mp, int x, int y, const YuvPixel *p)$/;"	f	file:
mp_set_zero_yuv	libavcodec/motionpixels_tablegen.h	/^static void mp_set_zero_yuv(YuvPixel *p)$/;"	f
mp_win_t	libavfilter/libmpcodecs/libvo/video_out.h	/^} mp_win_t;$/;"	t	typeref:struct:__anon31
mp_yuv_to_rgb	libavcodec/motionpixels_tablegen.h	/^static int mp_yuv_to_rgb(int y, int v, int u, int clip_rgb) {$/;"	f
mpa_huff_data	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huff_data[32][2] = {$/;"	v
mpa_huff_tables	libavcodec/mpegaudiodectab.h	/^static const HuffTable mpa_huff_tables[16] = {$/;"	v
mpa_huffbits_1	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_1[4] = {$/;"	v
mpa_huffbits_10	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_10[64] = {$/;"	v
mpa_huffbits_11	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_11[64] = {$/;"	v
mpa_huffbits_12	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_12[64] = {$/;"	v
mpa_huffbits_13	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_13[256] = {$/;"	v
mpa_huffbits_15	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_15[256] = {$/;"	v
mpa_huffbits_16	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_16[256] = {$/;"	v
mpa_huffbits_2	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_2[9] = {$/;"	v
mpa_huffbits_24	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_24[256] = {$/;"	v
mpa_huffbits_3	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_3[9] = {$/;"	v
mpa_huffbits_5	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_5[16] = {$/;"	v
mpa_huffbits_6	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_6[16] = {$/;"	v
mpa_huffbits_7	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_7[36] = {$/;"	v
mpa_huffbits_8	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_8[36] = {$/;"	v
mpa_huffbits_9	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_huffbits_9[36] = {$/;"	v
mpa_huffcodes_1	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_1[4] = {$/;"	v
mpa_huffcodes_10	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_10[64] = {$/;"	v
mpa_huffcodes_11	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_11[64] = {$/;"	v
mpa_huffcodes_12	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_12[64] = {$/;"	v
mpa_huffcodes_13	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_13[256] = {$/;"	v
mpa_huffcodes_15	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_15[256] = {$/;"	v
mpa_huffcodes_16	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_16[256] = {$/;"	v
mpa_huffcodes_2	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_2[9] = {$/;"	v
mpa_huffcodes_24	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_24[256] = {$/;"	v
mpa_huffcodes_3	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_3[9] = {$/;"	v
mpa_huffcodes_5	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_5[16] = {$/;"	v
mpa_huffcodes_6	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_6[16] = {$/;"	v
mpa_huffcodes_7	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_7[36] = {$/;"	v
mpa_huffcodes_8	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_8[36] = {$/;"	v
mpa_huffcodes_9	libavcodec/mpegaudiodectab.h	/^static const uint16_t mpa_huffcodes_9[36] = {$/;"	v
mpa_pretab	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_pretab[2][22] = {$/;"	v
mpa_quad_bits	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_quad_bits[2][16] = {$/;"	v
mpa_quad_codes	libavcodec/mpegaudiodectab.h	/^static const uint8_t mpa_quad_codes[2][16] = {$/;"	v
mpadsp	libavcodec/mpc.h	/^    MPADSPContext mpadsp;$/;"	m	struct:__anon179
mpadsp	libavcodec/mpegaudiodec.c	/^    MPADSPContext mpadsp;$/;"	m	struct:MPADecodeContext	file:
mpadsp	libavcodec/qdm2.c	/^    MPADSPContext mpadsp;$/;"	m	struct:__anon200	file:
mpc7_decode_flush	libavcodec/mpc7.c	/^static void mpc7_decode_flush(AVCodecContext *avctx)$/;"	f	file:
mpc7_decode_frame	libavcodec/mpc7.c	/^static int mpc7_decode_frame(AVCodecContext * avctx,$/;"	f	file:
mpc7_decode_init	libavcodec/mpc7.c	/^static av_cold int mpc7_decode_init(AVCodecContext * avctx)$/;"	f	file:
mpc7_dscf	libavcodec/mpc7data.h	/^static const uint8_t mpc7_dscf[MPC7_DSCF_SIZE * 2] = {$/;"	v
mpc7_hdr	libavcodec/mpc7data.h	/^static const uint8_t mpc7_hdr[MPC7_HDR_SIZE * 2] = {$/;"	v
mpc7_idx30	libavcodec/mpc7data.h	/^static const int8_t mpc7_idx30[] = { -1, 0, 1,-1, 0, 1,-1, 0, 1,-1, 0, 1,-1, 0, 1,-1, 0, 1,-1, 0, 1,-1, 0, 1,-1, 0, 1};$/;"	v
mpc7_idx31	libavcodec/mpc7data.h	/^static const int8_t mpc7_idx31[] = { -1,-1,-1, 0, 0, 0, 1, 1, 1,-1,-1,-1, 0, 0, 0, 1, 1, 1,-1,-1,-1, 0, 0, 0, 1, 1, 1};$/;"	v
mpc7_idx32	libavcodec/mpc7data.h	/^static const int8_t mpc7_idx32[] = { -1,-1,-1,-1,-1,-1,-1,-1,-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1};$/;"	v
mpc7_idx50	libavcodec/mpc7data.h	/^static const int8_t mpc7_idx50[] = { -2,-1, 0, 1, 2,-2,-1, 0, 1, 2,-2,-1, 0, 1, 2,-2,-1, 0, 1, 2,-2,-1, 0, 1, 2};$/;"	v
mpc7_idx51	libavcodec/mpc7data.h	/^static const int8_t mpc7_idx51[] = { -2,-2,-2,-2,-2,-1,-1,-1,-1,-1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2};$/;"	v
mpc7_quant_vlc	libavcodec/mpc7data.h	/^static const uint16_t mpc7_quant_vlc[MPC7_QUANT_VLC_TABLES][2][64 * 2] = {$/;"	v
mpc7_quant_vlc_off	libavcodec/mpc7data.h	/^static const uint8_t mpc7_quant_vlc_off[MPC7_QUANT_VLC_TABLES] = {$/;"	v
mpc7_quant_vlc_sizes	libavcodec/mpc7data.h	/^static const uint8_t mpc7_quant_vlc_sizes[MPC7_QUANT_VLC_TABLES * 2] = {$/;"	v
mpc7_scfi	libavcodec/mpc7data.h	/^static const uint8_t mpc7_scfi[MPC7_SCFI_SIZE * 2] = {$/;"	v
mpc8_bands_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_bands_bits[MPC8_BANDS_SIZE] = {$/;"	v
mpc8_bands_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_bands_codes[MPC8_BANDS_SIZE] = {$/;"	v
mpc8_cnk	libavcodec/mpc8data.h	/^static const uint32_t mpc8_cnk[16][32] =$/;"	v
mpc8_cnk_len	libavcodec/mpc8data.h	/^static const uint8_t mpc8_cnk_len[16][33] =$/;"	v
mpc8_cnk_lost	libavcodec/mpc8data.h	/^static const uint32_t mpc8_cnk_lost[16][33] =$/;"	v
mpc8_dec_base	libavcodec/mpc8.c	/^static inline int mpc8_dec_base(GetBitContext *gb, int k, int n)$/;"	f	file:
mpc8_dec_enum	libavcodec/mpc8.c	/^static inline int mpc8_dec_enum(GetBitContext *gb, int k, int n)$/;"	f	file:
mpc8_decode_frame	libavcodec/mpc8.c	/^static int mpc8_decode_frame(AVCodecContext * avctx,$/;"	f	file:
mpc8_decode_init	libavcodec/mpc8.c	/^static av_cold int mpc8_decode_init(AVCodecContext * avctx)$/;"	f	file:
mpc8_dscf0_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_dscf0_bits[MPC8_DSCF0_SIZE] = {$/;"	v
mpc8_dscf0_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_dscf0_codes[MPC8_DSCF0_SIZE] = {$/;"	v
mpc8_dscf1_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_dscf1_bits[MPC8_DSCF1_SIZE] = {$/;"	v
mpc8_dscf1_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_dscf1_codes[MPC8_DSCF1_SIZE] = {$/;"	v
mpc8_get_chunk_header	libavformat/mpc8.c	/^static void mpc8_get_chunk_header(AVIOContext *pb, int *tag, int64_t *size)$/;"	f	file:
mpc8_get_mask	libavcodec/mpc8.c	/^static int mpc8_get_mask(GetBitContext *gb, int size, int t)$/;"	f	file:
mpc8_get_mod_golomb	libavcodec/mpc8.c	/^static inline int mpc8_get_mod_golomb(GetBitContext *gb, int m)$/;"	f	file:
mpc8_handle_chunk	libavformat/mpc8.c	/^static void mpc8_handle_chunk(AVFormatContext *s, int tag, int64_t chunk_pos, int64_t size)$/;"	f	file:
mpc8_huffq2	libavcodec/mpc8data.h	/^static const int8_t mpc8_huffq2[5*5*5] = {$/;"	v
mpc8_idx50	libavcodec/mpc8data.h	/^static const int8_t mpc8_idx50[125] = {$/;"	v
mpc8_idx51	libavcodec/mpc8data.h	/^static const int8_t mpc8_idx51[125] = {$/;"	v
mpc8_idx52	libavcodec/mpc8data.h	/^static const int8_t mpc8_idx52[125] = {$/;"	v
mpc8_parse_seektable	libavformat/mpc8.c	/^static void mpc8_parse_seektable(AVFormatContext *s, int64_t off)$/;"	f	file:
mpc8_probe	libavformat/mpc8.c	/^static int mpc8_probe(AVProbeData *p)$/;"	f	file:
mpc8_q1_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_q1_bits[MPC8_Q1_SIZE] = {$/;"	v
mpc8_q1_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_q1_codes[MPC8_Q1_SIZE] = {$/;"	v
mpc8_q2_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_q2_bits[2][MPC8_Q2_SIZE] = {$/;"	v
mpc8_q2_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_q2_codes[2][MPC8_Q2_SIZE] = {$/;"	v
mpc8_q3_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_q3_bits[MPC8_Q3_SIZE] = {$/;"	v
mpc8_q3_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_q3_codes[MPC8_Q3_SIZE] = {$/;"	v
mpc8_q3_syms	libavcodec/mpc8huff.h	/^static const int8_t mpc8_q3_syms[MPC8_Q3_SIZE] = {$/;"	v
mpc8_q4_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_q4_bits[MPC8_Q4_SIZE] = {$/;"	v
mpc8_q4_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_q4_codes[MPC8_Q4_SIZE] = {$/;"	v
mpc8_q4_syms	libavcodec/mpc8huff.h	/^static const int8_t mpc8_q4_syms[MPC8_Q4_SIZE] = {$/;"	v
mpc8_q5_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_q5_bits[2][MPC8_Q5_SIZE] = {$/;"	v
mpc8_q5_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_q5_codes[2][MPC8_Q5_SIZE] = {$/;"	v
mpc8_q6_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_q6_bits[2][MPC8_Q6_SIZE] = {$/;"	v
mpc8_q6_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_q6_codes[2][MPC8_Q6_SIZE] = {$/;"	v
mpc8_q7_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_q7_bits[2][MPC8_Q7_SIZE] = {$/;"	v
mpc8_q7_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_q7_codes[2][MPC8_Q7_SIZE] = {$/;"	v
mpc8_q8_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_q8_bits[2][MPC8_Q8_SIZE] = {$/;"	v
mpc8_q8_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_q8_codes[2][MPC8_Q8_SIZE] = {$/;"	v
mpc8_q9up_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_q9up_bits[MPC8_Q9UP_SIZE] = {$/;"	v
mpc8_q9up_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_q9up_codes[MPC8_Q9UP_SIZE] = {$/;"	v
mpc8_rate	libavformat/mpc8.c	/^static const int mpc8_rate[8] = { 44100, 48000, 37800, 32000, -1, -1, -1, -1 };$/;"	v	file:
mpc8_read_header	libavformat/mpc8.c	/^static int mpc8_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
mpc8_read_packet	libavformat/mpc8.c	/^static int mpc8_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mpc8_read_seek	libavformat/mpc8.c	/^static int mpc8_read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
mpc8_res_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_res_bits[2][MPC8_RES_SIZE] = {$/;"	v
mpc8_res_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_res_codes[2][MPC8_RES_SIZE] = {$/;"	v
mpc8_scfi0_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_scfi0_bits[MPC8_SCFI0_SIZE] = {$/;"	v
mpc8_scfi0_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_scfi0_codes[MPC8_SCFI0_SIZE] = {$/;"	v
mpc8_scfi1_bits	libavcodec/mpc8huff.h	/^static const int8_t mpc8_scfi1_bits[MPC8_SCFI1_SIZE] = {$/;"	v
mpc8_scfi1_codes	libavcodec/mpc8huff.h	/^static const uint8_t mpc8_scfi1_codes[MPC8_SCFI1_SIZE] = {$/;"	v
mpc8_thres	libavcodec/mpc8data.h	/^static const unsigned int mpc8_thres[] = {0, 0, 3, 0, 0, 1, 3, 4, 8};$/;"	v
mpc_CC	libavcodec/mpcdata.h	/^static const float mpc_CC[18] = {$/;"	v
mpc_SCF	libavcodec/mpcdata.h	/^static const float mpc_SCF[128] = {$/;"	v
mpc_probe	libavformat/mpc.c	/^static int mpc_probe(AVProbeData *p)$/;"	f	file:
mpc_rate	libavformat/mpc.c	/^static const int mpc_rate[4] = { 44100, 48000, 37800, 32000 };$/;"	v	file:
mpc_read_close	libavformat/mpc.c	/^static int mpc_read_close(AVFormatContext *s)$/;"	f	file:
mpc_read_header	libavformat/mpc.c	/^static int mpc_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
mpc_read_packet	libavformat/mpc.c	/^static int mpc_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mpc_read_seek	libavformat/mpc.c	/^static int mpc_read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
mpc_synth	libavcodec/mpc.c	/^static void mpc_synth(MPCContext *c, int16_t *out, int channels)$/;"	f	file:
mpeg	libavcodec/vdpau.h	/^        VdpPictureInfoMPEG1Or2    mpeg;$/;"	m	union:vdpau_render_state::VdpPictureInfo
mpeg1_chr_dc_uni	libavcodec/mpeg12enc.c	/^static uint32_t mpeg1_chr_dc_uni[512];$/;"	v	file:
mpeg1_decode_block_inter	libavcodec/mpeg12.c	/^static inline int mpeg1_decode_block_inter(MpegEncContext *s,$/;"	f	file:
mpeg1_decode_block_intra	libavcodec/mpeg12.c	/^static inline int mpeg1_decode_block_intra(MpegEncContext *s,$/;"	f	file:
mpeg1_decode_picture	libavcodec/mpeg12.c	/^static int mpeg1_decode_picture(AVCodecContext *avctx,$/;"	f	file:
mpeg1_decode_sequence	libavcodec/mpeg12.c	/^static int mpeg1_decode_sequence(AVCodecContext *avctx,$/;"	f	file:
mpeg1_encode_block	libavcodec/mpeg12enc.c	/^static void mpeg1_encode_block(MpegEncContext *s,$/;"	f	file:
mpeg1_encode_mb	libavcodec/mpeg12enc.c	/^void mpeg1_encode_mb(MpegEncContext *s, DCTELEM block[6][64], int motion_x, int motion_y)$/;"	f
mpeg1_encode_mb_internal	libavcodec/mpeg12enc.c	/^static av_always_inline void mpeg1_encode_mb_internal(MpegEncContext *s,$/;"	f	file:
mpeg1_encode_motion	libavcodec/mpeg12enc.c	/^static void mpeg1_encode_motion(MpegEncContext *s, int val, int f_or_b_code)$/;"	f	file:
mpeg1_encode_picture_header	libavcodec/mpeg12enc.c	/^void mpeg1_encode_picture_header(MpegEncContext *s, int picture_number)$/;"	f
mpeg1_encode_sequence_header	libavcodec/mpeg12enc.c	/^static void mpeg1_encode_sequence_header(MpegEncContext *s)$/;"	f	file:
mpeg1_fast_decode_block_inter	libavcodec/mpeg12.c	/^static inline int mpeg1_fast_decode_block_inter(MpegEncContext *s, DCTELEM *block, int n)$/;"	f	file:
mpeg1_hwaccel_pixfmt_list_420	libavcodec/mpeg12.c	/^static const enum PixelFormat mpeg1_hwaccel_pixfmt_list_420[] = {$/;"	v	typeref:enum:PixelFormat	file:
mpeg1_index_run	libavcodec/mpeg12enc.c	/^static uint8_t mpeg1_index_run[2][64];$/;"	v	file:
mpeg1_level	libavcodec/mpeg12data.c	/^static const int8_t mpeg1_level[111] = {$/;"	v	file:
mpeg1_lum_dc_uni	libavcodec/mpeg12enc.c	/^static uint32_t mpeg1_lum_dc_uni[512];$/;"	v	file:
mpeg1_max_level	libavcodec/mpeg12enc.c	/^static int8_t mpeg1_max_level[2][64];$/;"	v	file:
mpeg1_run	libavcodec/mpeg12data.c	/^static const int8_t mpeg1_run[111] = {$/;"	v	file:
mpeg1_vlc	libavcodec/mpeg12data.c	/^static const uint16_t mpeg1_vlc[113][2] = {$/;"	v	file:
mpeg2	libavfilter/libmpcodecs/vf_fspp.c	/^    int mpeg2;$/;"	m	struct:vf_priv_s	file:
mpeg2	libavfilter/libmpcodecs/vf_pp7.c	/^    int mpeg2;$/;"	m	struct:vf_priv_s	file:
mpeg2	libavfilter/libmpcodecs/vf_spp.c	/^        int mpeg2;$/;"	m	struct:vf_priv_s	file:
mpeg2	libavfilter/libmpcodecs/vf_uspp.c	/^    int mpeg2;$/;"	m	struct:vf_priv_s	file:
mpeg2_class	libavcodec/crystalhd.c	/^static AVClass mpeg2_class = {$/;"	v	file:
mpeg2_dc_scale_table1	libavcodec/mpegvideo.c	/^static const uint8_t mpeg2_dc_scale_table1[128]={$/;"	v	file:
mpeg2_dc_scale_table2	libavcodec/mpegvideo.c	/^static const uint8_t mpeg2_dc_scale_table2[128]={$/;"	v	file:
mpeg2_dc_scale_table3	libavcodec/mpegvideo.c	/^static const uint8_t mpeg2_dc_scale_table3[128]={$/;"	v	file:
mpeg2_decode_block_intra	libavcodec/mpeg12.c	/^static inline int mpeg2_decode_block_intra(MpegEncContext *s,$/;"	f	file:
mpeg2_decode_block_non_intra	libavcodec/mpeg12.c	/^static inline int mpeg2_decode_block_non_intra(MpegEncContext *s,$/;"	f	file:
mpeg2_fast_decode_block_intra	libavcodec/mpeg12.c	/^static inline int mpeg2_fast_decode_block_intra(MpegEncContext *s,$/;"	f	file:
mpeg2_fast_decode_block_non_intra	libavcodec/mpeg12.c	/^static inline int mpeg2_fast_decode_block_non_intra(MpegEncContext *s,$/;"	f	file:
mpeg2_get_f_code	libavcodec/vaapi_mpeg2.c	/^static inline int mpeg2_get_f_code(MpegEncContext *s)$/;"	f	file:
mpeg2_get_is_frame_start	libavcodec/vaapi_mpeg2.c	/^static inline int mpeg2_get_is_frame_start(MpegEncContext *s)$/;"	f	file:
mpeg2_hwaccel_pixfmt_list_420	libavcodec/mpeg12.c	/^static const enum PixelFormat mpeg2_hwaccel_pixfmt_list_420[] = {$/;"	v	typeref:enum:PixelFormat	file:
mpeg2_video_profiles	libavcodec/mpeg12.c	/^static const AVProfile mpeg2_video_profiles[] = {$/;"	v	file:
mpeg2_vlc	libavcodec/mpeg12data.c	/^static const uint16_t mpeg2_vlc[113][2] = {$/;"	v	file:
mpeg2ts_compute_pcr	libavformat/avformat.h	/^    attribute_deprecated unsigned int mpeg2ts_compute_pcr:1;$/;"	m	struct:AVFormatParameters
mpeg2ts_compute_pcr	libavformat/mpegts.c	/^    int mpeg2ts_compute_pcr;$/;"	m	struct:MpegTSContext	file:
mpeg2ts_raw	libavformat/avformat.h	/^    attribute_deprecated unsigned int mpeg2ts_raw:1;  \/**< deprecated, use mpegtsraw demuxer *\/$/;"	m	struct:AVFormatParameters
mpeg4	libavcodec/vdpau.h	/^        VdpPictureInfoMPEG4Part2 mpeg4;$/;"	m	union:vdpau_render_state::VdpPictureInfo
mpeg4_class	libavcodec/crystalhd.c	/^static AVClass mpeg4_class = {$/;"	v	file:
mpeg4_dc_threshold	libavcodec/mpeg4data.h	/^const uint8_t mpeg4_dc_threshold[8]={$/;"	v
mpeg4_decode_block	libavcodec/mpeg4videodec.c	/^static inline int mpeg4_decode_block(MpegEncContext * s, DCTELEM * block,$/;"	f	file:
mpeg4_decode_dc	libavcodec/mpeg4videodec.c	/^static inline int mpeg4_decode_dc(MpegEncContext * s, int n, int *dir_ptr)$/;"	f	file:
mpeg4_decode_gop_header	libavcodec/mpeg4videodec.c	/^static int mpeg4_decode_gop_header(MpegEncContext * s, GetBitContext *gb){$/;"	f	file:
mpeg4_decode_mb	libavcodec/mpeg4videodec.c	/^static int mpeg4_decode_mb(MpegEncContext *s,$/;"	f	file:
mpeg4_decode_partition_a	libavcodec/mpeg4videodec.c	/^static int mpeg4_decode_partition_a(MpegEncContext *s){$/;"	f	file:
mpeg4_decode_partition_b	libavcodec/mpeg4videodec.c	/^static int mpeg4_decode_partition_b(MpegEncContext *s, int mb_count){$/;"	f	file:
mpeg4_decode_partitioned_mb	libavcodec/mpeg4videodec.c	/^static int mpeg4_decode_partitioned_mb(MpegEncContext *s, DCTELEM block[6][64])$/;"	f	file:
mpeg4_decode_sprite_trajectory	libavcodec/mpeg4videodec.c	/^static void mpeg4_decode_sprite_trajectory(MpegEncContext * s, GetBitContext *gb)$/;"	f	file:
mpeg4_decode_video_packet_header	libavcodec/mpeg4videodec.c	/^int mpeg4_decode_video_packet_header(MpegEncContext *s)$/;"	f
mpeg4_encode_block	libavcodec/mpeg4videoenc.c	/^static inline void mpeg4_encode_block(MpegEncContext * s, DCTELEM * block, int n, int intra_dc,$/;"	f	file:
mpeg4_encode_blocks	libavcodec/mpeg4videoenc.c	/^static inline void mpeg4_encode_blocks(MpegEncContext * s, DCTELEM block[6][64], int intra_dc[6],$/;"	f	file:
mpeg4_encode_dc	libavcodec/mpeg4videoenc.c	/^static inline void mpeg4_encode_dc(PutBitContext * s, int level, int n)$/;"	f	file:
mpeg4_encode_gop_header	libavcodec/mpeg4videoenc.c	/^static void mpeg4_encode_gop_header(MpegEncContext * s){$/;"	f	file:
mpeg4_encode_mb	libavcodec/mpeg4videoenc.c	/^void mpeg4_encode_mb(MpegEncContext * s,$/;"	f
mpeg4_encode_picture_header	libavcodec/mpeg4videoenc.c	/^void mpeg4_encode_picture_header(MpegEncContext * s, int picture_number)$/;"	f
mpeg4_encode_visual_object_header	libavcodec/mpeg4videoenc.c	/^static void mpeg4_encode_visual_object_header(MpegEncContext * s){$/;"	f	file:
mpeg4_encode_vol_header	libavcodec/mpeg4videoenc.c	/^static void mpeg4_encode_vol_header(MpegEncContext * s, int vo_number, int vol_number)$/;"	f	file:
mpeg4_get_block_length	libavcodec/mpeg4videoenc.c	/^static int mpeg4_get_block_length(MpegEncContext * s, DCTELEM * block, int n, int intra_dc,$/;"	f	file:
mpeg4_get_dc_length	libavcodec/mpeg4videoenc.c	/^static inline int mpeg4_get_dc_length(int level, int n){$/;"	f	file:
mpeg4_get_intra_dc_vlc_thr	libavcodec/vaapi_mpeg4.c	/^static int mpeg4_get_intra_dc_vlc_thr(MpegEncContext *s)$/;"	f	file:
mpeg4_is_resync	libavcodec/mpeg4videodec.c	/^static inline int mpeg4_is_resync(MpegEncContext *s){$/;"	f	file:
mpeg4_pred_ac	libavcodec/mpeg4videodec.c	/^void mpeg4_pred_ac(MpegEncContext * s, DCTELEM *block, int n,$/;"	f
mpeg4video_parse	libavcodec/mpeg4video_parser.c	/^static int mpeg4video_parse(AVCodecParserContext *s,$/;"	f	file:
mpeg4video_parse_init	libavcodec/mpeg4video_parser.c	/^static av_cold int mpeg4video_parse_init(AVCodecParserContext *s)$/;"	f	file:
mpeg4video_probe	libavformat/m4vdec.c	/^static int mpeg4video_probe(AVProbeData *probe_packet)$/;"	f	file:
mpeg_data_type	libavformat/spdifenc.c	/^static const enum IEC61937DataType mpeg_data_type[2][3] = {$/;"	v	typeref:enum:IEC61937DataType	file:
mpeg_decode_end	libavcodec/mpeg12.c	/^static int mpeg_decode_end(AVCodecContext *avctx)$/;"	f	file:
mpeg_decode_frame	libavcodec/mpeg12.c	/^static int mpeg_decode_frame(AVCodecContext *avctx,$/;"	f	file:
mpeg_decode_gop	libavcodec/mpeg12.c	/^static void mpeg_decode_gop(AVCodecContext *avctx,$/;"	f	file:
mpeg_decode_init	libavcodec/mpeg12.c	/^static av_cold int mpeg_decode_init(AVCodecContext *avctx)$/;"	f	file:
mpeg_decode_mb	libavcodec/mpeg12.c	/^static int mpeg_decode_mb(MpegEncContext *s,$/;"	f	file:
mpeg_decode_motion	libavcodec/mpeg12.c	/^static int mpeg_decode_motion(MpegEncContext *s, int fcode, int pred)$/;"	f	file:
mpeg_decode_picture_coding_extension	libavcodec/mpeg12.c	/^static void mpeg_decode_picture_coding_extension(Mpeg1Context *s1)$/;"	f	file:
mpeg_decode_picture_display_extension	libavcodec/mpeg12.c	/^static void mpeg_decode_picture_display_extension(Mpeg1Context *s1)$/;"	f	file:
mpeg_decode_postinit	libavcodec/mpeg12.c	/^static int mpeg_decode_postinit(AVCodecContext *avctx){$/;"	f	file:
mpeg_decode_quant_matrix_extension	libavcodec/mpeg12.c	/^static void mpeg_decode_quant_matrix_extension(MpegEncContext *s)$/;"	f	file:
mpeg_decode_sequence_display_extension	libavcodec/mpeg12.c	/^static void mpeg_decode_sequence_display_extension(Mpeg1Context *s1)$/;"	f	file:
mpeg_decode_sequence_extension	libavcodec/mpeg12.c	/^static void mpeg_decode_sequence_extension(Mpeg1Context *s1)$/;"	f	file:
mpeg_decode_slice	libavcodec/mpeg12.c	/^static int mpeg_decode_slice(Mpeg1Context *s1, int mb_y,$/;"	f	file:
mpeg_decode_update_thread_context	libavcodec/mpeg12.c	/^static int mpeg_decode_update_thread_context(AVCodecContext *avctx, const AVCodecContext *avctx_from)$/;"	f	file:
mpeg_decode_user_data	libavcodec/mpeg12.c	/^static void mpeg_decode_user_data(AVCodecContext *avctx,$/;"	f	file:
mpeg_enc_ctx	libavcodec/mpeg12.c	/^    MpegEncContext mpeg_enc_ctx;$/;"	m	struct:Mpeg1Context	file:
mpeg_enc_ctx_allocated	libavcodec/mpeg12.c	/^    int mpeg_enc_ctx_allocated; \/* true if decoding context allocated *\/$/;"	m	struct:Mpeg1Context	file:
mpeg_f_code	libavcodec/mpegvideo.h	/^    int mpeg_f_code[2][2];$/;"	m	struct:MpegEncContext
mpeg_field_start	libavcodec/mpeg12.c	/^static int mpeg_field_start(MpegEncContext *s, const uint8_t *buf, int buf_size){$/;"	f	file:
mpeg_get_pixelformat	libavcodec/mpeg12.c	/^static enum PixelFormat mpeg_get_pixelformat(AVCodecContext *avctx){$/;"	f	file:
mpeg_mc_decode_init	libavcodec/mpeg12.c	/^static av_cold int mpeg_mc_decode_init(AVCodecContext *avctx){$/;"	f	file:
mpeg_motion	libavcodec/mpegvideo_common.h	/^void mpeg_motion(MpegEncContext *s,$/;"	f
mpeg_motion_internal	libavcodec/mpegvideo_common.h	/^void mpeg_motion_internal(MpegEncContext *s,$/;"	f
mpeg_motion_lowres	libavcodec/mpegvideo.c	/^static av_always_inline void mpeg_motion_lowres(MpegEncContext *s,$/;"	f	file:
mpeg_mux_end	libavformat/mpegenc.c	/^static int mpeg_mux_end(AVFormatContext *ctx)$/;"	f	file:
mpeg_mux_init	libavformat/mpegenc.c	/^static int mpeg_mux_init(AVFormatContext *ctx)$/;"	f	file:
mpeg_mux_write_packet	libavformat/mpegenc.c	/^static int mpeg_mux_write_packet(AVFormatContext *ctx, AVPacket *pkt)$/;"	f	file:
mpeg_quant	libavcodec/avcodec.h	/^    int mpeg_quant;$/;"	m	struct:AVCodecContext
mpeg_quant	libavcodec/mpegvideo.h	/^    int mpeg_quant;$/;"	m	struct:MpegEncContext
mpeg_tracks	libavformat/gxfenc.c	/^    uint16_t mpeg_tracks;$/;"	m	struct:GXFContext	file:
mpegaudio_parse	libavcodec/mpegaudio_parser.c	/^static int mpegaudio_parse(AVCodecParserContext *s1,$/;"	f	file:
mpegaudio_tableinit	libavcodec/mpegaudio_tablegen.h	/^static void mpegaudio_tableinit(void)$/;"	f
mpegaudio_tableinit	libavcodec/mpegaudio_tablegen.h	31;"	d
mpegps_probe	libavformat/mpeg.c	/^static int mpegps_probe(AVProbeData *p)$/;"	f	file:
mpegps_psm_parse	libavformat/mpeg.c	/^static long mpegps_psm_parse(MpegDemuxContext *m, AVIOContext *pb)$/;"	f	file:
mpegps_read_dts	libavformat/mpeg.c	/^static int64_t mpegps_read_dts(AVFormatContext *s, int stream_index,$/;"	f	file:
mpegps_read_header	libavformat/mpeg.c	/^static int mpegps_read_header(AVFormatContext *s,$/;"	f	file:
mpegps_read_packet	libavformat/mpeg.c	/^static int mpegps_read_packet(AVFormatContext *s,$/;"	f	file:
mpegps_read_pes_header	libavformat/mpeg.c	/^static int mpegps_read_pes_header(AVFormatContext *s,$/;"	f	file:
mpegts_add_service	libavformat/mpegtsenc.c	/^static MpegTSService *mpegts_add_service(MpegTSWrite *ts,$/;"	f	file:
mpegts_close_filter	libavformat/mpegts.c	/^static void mpegts_close_filter(MpegTSContext *ts, MpegTSFilter *filter)$/;"	f	file:
mpegts_find_stream_type	libavformat/mpegts.c	/^static void mpegts_find_stream_type(AVStream *st,$/;"	f	file:
mpegts_get_pcr	libavformat/mpegts.c	/^static int64_t mpegts_get_pcr(AVFormatContext *s, int stream_index,$/;"	f	file:
mpegts_insert_null_packet	libavformat/mpegtsenc.c	/^static void mpegts_insert_null_packet(AVFormatContext *s)$/;"	f	file:
mpegts_insert_pcr_only	libavformat/mpegtsenc.c	/^static void mpegts_insert_pcr_only(AVFormatContext *s, AVStream *st)$/;"	f	file:
mpegts_muxer_class	libavformat/mpegtsenc.c	/^static const AVClass mpegts_muxer_class = {$/;"	v	file:
mpegts_open_pes_filter	libavformat/mpegts.c	/^static MpegTSFilter *mpegts_open_pes_filter(MpegTSContext *ts, unsigned int pid,$/;"	f	file:
mpegts_open_section_filter	libavformat/mpegts.c	/^static MpegTSFilter *mpegts_open_section_filter(MpegTSContext *ts, unsigned int pid,$/;"	f	file:
mpegts_probe	libavformat/mpegts.c	/^static int mpegts_probe(AVProbeData *p)$/;"	f	file:
mpegts_push_data	libavformat/mpegts.c	/^static int mpegts_push_data(MpegTSFilter *filter,$/;"	f	file:
mpegts_raw_read_packet	libavformat/mpegts.c	/^static int mpegts_raw_read_packet(AVFormatContext *s,$/;"	f	file:
mpegts_read_close	libavformat/mpegts.c	/^static int mpegts_read_close(AVFormatContext *s)$/;"	f	file:
mpegts_read_header	libavformat/mpegts.c	/^static int mpegts_read_header(AVFormatContext *s,$/;"	f	file:
mpegts_read_packet	libavformat/mpegts.c	/^static int mpegts_read_packet(AVFormatContext *s,$/;"	f	file:
mpegts_resync	libavformat/mpegts.c	/^static int mpegts_resync(AVFormatContext *s)$/;"	f	file:
mpegts_set_stream_info	libavformat/mpegts.c	/^static int mpegts_set_stream_info(AVStream *st, PESContext *pes,$/;"	f	file:
mpegts_write_end	libavformat/mpegtsenc.c	/^static int mpegts_write_end(AVFormatContext *s)$/;"	f	file:
mpegts_write_header	libavformat/mpegtsenc.c	/^static int mpegts_write_header(AVFormatContext *s)$/;"	f	file:
mpegts_write_packet	libavformat/mpegtsenc.c	/^static int mpegts_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mpegts_write_pat	libavformat/mpegtsenc.c	/^static void mpegts_write_pat(AVFormatContext *s)$/;"	f	file:
mpegts_write_pes	libavformat/mpegtsenc.c	/^static void mpegts_write_pes(AVFormatContext *s, AVStream *st,$/;"	f	file:
mpegts_write_pmt	libavformat/mpegtsenc.c	/^static void mpegts_write_pmt(AVFormatContext *s, MpegTSService *service)$/;"	f	file:
mpegts_write_sdt	libavformat/mpegtsenc.c	/^static void mpegts_write_sdt(AVFormatContext *s)$/;"	f	file:
mpegts_write_section	libavformat/mpegtsenc.c	/^static void mpegts_write_section(MpegTSSection *s, uint8_t *buf, int len)$/;"	f	file:
mpegts_write_section1	libavformat/mpegtsenc.c	/^static int mpegts_write_section1(MpegTSSection *s, int tid, int id,$/;"	f	file:
mpegtsraw_class	libavformat/mpegts.c	/^static const AVClass mpegtsraw_class = {$/;"	v	file:
mpegvideo_extract_headers	libavcodec/mpegvideo_parser.c	/^static void mpegvideo_extract_headers(AVCodecParserContext *s,$/;"	f	file:
mpegvideo_parse	libavcodec/mpegvideo_parser.c	/^static int mpegvideo_parse(AVCodecParserContext *s,$/;"	f	file:
mpegvideo_probe	libavformat/mpegvideodec.c	/^static int mpegvideo_probe(AVProbeData *p)$/;"	f	file:
mpegvideo_split	libavcodec/mpegvideo_parser.c	/^static int mpegvideo_split(AVCodecContext *avctx,$/;"	f	file:
mpi	libavfilter/libmpcodecs/vf_geq.c	/^    mp_image_t *mpi;$/;"	m	struct:vf_priv_s	file:
mpjpeg_write_header	libavformat/mpjpeg.c	/^static int mpjpeg_write_header(AVFormatContext *s)$/;"	f	file:
mpjpeg_write_packet	libavformat/mpjpeg.c	/^static int mpjpeg_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mpjpeg_write_trailer	libavformat/mpjpeg.c	/^static int mpjpeg_write_trailer(AVFormatContext *s)$/;"	f	file:
mppm	libavcodec/arm/fft_neon.S	/^mppm:   .float  -M_SQRT1_2, M_SQRT1_2, M_SQRT1_2, -M_SQRT1_2$/;"	l
mps_state	libavcodec/cabac.c	/^static const uint8_t mps_state[64]= {$/;"	v	file:
mqc	libavcodec/j2k.h	/^    MqcState mqc;$/;"	m	struct:__anon209
ms_compat	libavformat/matroskadec.c	/^    int ms_compat;$/;"	m	struct:__anon361	file:
ms_mask	libavcodec/aac.h	/^    uint8_t ms_mask[128];     \/\/\/< Set if mid\/side stereo is used for each scalefactor window band$/;"	m	struct:__anon245
ms_mode	libavcodec/aac.h	/^    int     ms_mode;          \/\/\/< Signals mid\/side stereo flags coding mode (used by encoder)$/;"	m	struct:__anon245
ms_stereo	libavcodec/wma.h	/^    uint8_t ms_stereo;                      \/\/\/< true if mid\/side stereo mode$/;"	m	struct:WMACodecContext
msb_first	libavcodec/alsdec.c	/^    int msb_first;            \/\/\/< 1 = original CRC calculated on big-endian system, 0 = little-endian$/;"	m	struct:__anon150	file:
msb_pts_shift	libavformat/nut.h	/^    int msb_pts_shift;$/;"	m	struct:__anon492
msf	libavcodec/mpc.h	/^    int msf; \/\/\/< mid-stereo flag$/;"	m	struct:__anon178
msip	libavcodec/dnxhdenc.h	/^    uint8_t *msip; \/\/\/< Macroblock Scan Indexes Payload$/;"	m	struct:DNXHDEncContext
msizeX	libavfilter/libmpcodecs/vf_unsharp.c	/^    int msizeX, msizeY;$/;"	m	struct:FilterParam	file:
msizeY	libavfilter/libmpcodecs/vf_unsharp.c	/^    int msizeX, msizeY;$/;"	m	struct:FilterParam	file:
msize_x	libavfilter/vf_unsharp.c	/^    int msize_x;                             \/\/\/< matrix width$/;"	m	struct:FilterParam	file:
msize_y	libavfilter/vf_unsharp.c	/^    int msize_y;                             \/\/\/< matrix height$/;"	m	struct:FilterParam	file:
msmpeg4_class	libavcodec/crystalhd.c	/^static AVClass msmpeg4_class = {$/;"	v	file:
msmpeg4_decode_dc	libavcodec/msmpeg4.c	/^static int msmpeg4_decode_dc(MpegEncContext * s, int n, int *dir_ptr)$/;"	f	file:
msmpeg4_decode_ext_header	libavcodec/msmpeg4.c	/^int msmpeg4_decode_ext_header(MpegEncContext * s, int buf_size)$/;"	f
msmpeg4_decode_picture_header	libavcodec/msmpeg4.c	/^int msmpeg4_decode_picture_header(MpegEncContext * s)$/;"	f
msmpeg4_encode_dc	libavcodec/msmpeg4.c	/^static void msmpeg4_encode_dc(MpegEncContext * s, int level, int n, int *dir_ptr)$/;"	f	file:
msmpeg4_encode_ext_header	libavcodec/msmpeg4.c	/^void msmpeg4_encode_ext_header(MpegEncContext * s)$/;"	f
msmpeg4_encode_mb	libavcodec/msmpeg4.c	/^void msmpeg4_encode_mb(MpegEncContext * s,$/;"	f
msmpeg4_encode_picture_header	libavcodec/msmpeg4.c	/^void msmpeg4_encode_picture_header(MpegEncContext * s, int picture_number)$/;"	f
msmpeg4_pred_dc	libavcodec/msmpeg4.c	/^static inline int msmpeg4_pred_dc(MpegEncContext * s, int n,$/;"	f	file:
msmpeg4_version	libavcodec/mpegvideo.h	/^    int msmpeg4_version;   \/\/\/< 0=not msmpeg4, 1=mp41, 2=mp42, 3=mp43\/divx3 4=wmv1\/7 5=wmv2\/8$/;"	m	struct:MpegEncContext
msmpeg4v12_decode_mb	libavcodec/msmpeg4.c	/^static int msmpeg4v12_decode_mb(MpegEncContext *s, DCTELEM block[6][64])$/;"	f	file:
msmpeg4v1_pred_dc	libavcodec/msmpeg4.c	/^static inline int msmpeg4v1_pred_dc(MpegEncContext * s, int n,$/;"	f	file:
msmpeg4v2_decode_motion	libavcodec/msmpeg4.c	/^static int msmpeg4v2_decode_motion(MpegEncContext * s, int pred, int f_code)$/;"	f	file:
msmpeg4v2_encode_motion	libavcodec/msmpeg4.c	/^static void msmpeg4v2_encode_motion(MpegEncContext * s, int val)$/;"	f	file:
msmpeg4v34_decode_mb	libavcodec/msmpeg4.c	/^static int msmpeg4v34_decode_mb(MpegEncContext *s, DCTELEM block[6][64])$/;"	f	file:
msnwc_tcp_probe	libavformat/msnwc_tcp.c	/^static int msnwc_tcp_probe(AVProbeData *p)$/;"	f	file:
msnwc_tcp_read_header	libavformat/msnwc_tcp.c	/^static int msnwc_tcp_read_header(AVFormatContext *ctx, AVFormatParameters *ap)$/;"	f	file:
msnwc_tcp_read_packet	libavformat/msnwc_tcp.c	/^static int msnwc_tcp_read_packet(AVFormatContext *ctx, AVPacket *pkt)$/;"	f	file:
mspel	libavcodec/mpegvideo.h	/^    int mspel;$/;"	m	struct:MpegEncContext
mspel_bit	libavcodec/wmv2.h	/^    int mspel_bit;$/;"	m	struct:Wmv2Context
msr	libavcodec/gsmdec_data.h	/^    int msr;$/;"	m	struct:__anon67
msrle_decode_8_16_24_32	libavcodec/msrledec.c	/^static int msrle_decode_8_16_24_32(AVCodecContext *avctx, AVPicture *pic, int depth,$/;"	f	file:
msrle_decode_end	libavcodec/msrle.c	/^static av_cold int msrle_decode_end(AVCodecContext *avctx)$/;"	f	file:
msrle_decode_frame	libavcodec/msrle.c	/^static int msrle_decode_frame(AVCodecContext *avctx,$/;"	f	file:
msrle_decode_init	libavcodec/msrle.c	/^static av_cold int msrle_decode_init(AVCodecContext *avctx)$/;"	f	file:
msrle_decode_pal4	libavcodec/msrledec.c	/^static int msrle_decode_pal4(AVCodecContext *avctx, AVPicture *pic,$/;"	f	file:
msvideo1_decode_16bit	libavcodec/msvideo1.c	/^static void msvideo1_decode_16bit(Msvideo1Context *s)$/;"	f	file:
msvideo1_decode_8bit	libavcodec/msvideo1.c	/^static void msvideo1_decode_8bit(Msvideo1Context *s)$/;"	f	file:
msvideo1_decode_end	libavcodec/msvideo1.c	/^static av_cold int msvideo1_decode_end(AVCodecContext *avctx)$/;"	f	file:
msvideo1_decode_frame	libavcodec/msvideo1.c	/^static int msvideo1_decode_frame(AVCodecContext *avctx,$/;"	f	file:
msvideo1_decode_init	libavcodec/msvideo1.c	/^static av_cold int msvideo1_decode_init(AVCodecContext *avctx)$/;"	f	file:
mszh_decomp	libavcodec/lcldec.c	/^static unsigned int mszh_decomp(const unsigned char * srcptr, int srclen, unsigned char * destptr, unsigned int destsize)$/;"	f	file:
mtab	libavcodec/twinvq.c	/^    const ModeTab *mtab;$/;"	m	struct:TwinContext	file:
mtv_probe	libavformat/mtv.c	/^static int mtv_probe(AVProbeData *p)$/;"	f	file:
mtv_read_header	libavformat/mtv.c	/^static int mtv_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
mtv_read_packet	libavformat/mtv.c	/^static int mtv_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mtype	libavcodec/h261.h	/^    int mtype;$/;"	m	struct:H261Context
mul	libavcodec/xan.c	/^static inline unsigned mul(unsigned a, unsigned b)$/;"	f	file:
mul32	libavcodec/dcaenc.c	/^static inline int32_t mul32(int32_t a, int32_t b)$/;"	f	file:
mul_bias	libavcodec/ac3dec.h	/^    float mul_bias;                         \/\/\/< scaling for float_to_int16 conversion$/;"	m	struct:__anon88
mul_poly	libavcodec/ac3enc.c	/^static unsigned int mul_poly(unsigned int a, unsigned int b, unsigned int poly)$/;"	f	file:
mul_thrmat_c	libavfilter/libmpcodecs/vf_fspp.c	/^static void mul_thrmat_c(struct vf_priv_s *p,int q)$/;"	f	file:
mul_thrmat_mmx	libavfilter/libmpcodecs/vf_fspp.c	/^static void mul_thrmat_mmx(struct vf_priv_s *p, int q)$/;"	f	file:
mul_thrmat_s	libavfilter/libmpcodecs/vf_fspp.c	175;"	d	file:
mul_thrmat_s	libavfilter/libmpcodecs/vf_fspp.c	403;"	d	file:
mulawinv	libavcodec/twinvq.c	/^static inline float mulawinv(float y, float clip, float mu)$/;"	f	file:
mult	libavcodec/g726.c	/^static inline int16_t mult(Float11* f1, Float11* f2)$/;"	f	file:
multi_dither_patterns	libavcodec/a64tables.h	/^static const uint8_t multi_dither_patterns[9][4][4] = {$/;"	v
multi_payloads_present	libavformat/asfenc.c	/^    unsigned char multi_payloads_present;$/;"	m	struct:__anon470	file:
multicast_ip	ffserver.c	/^    struct in_addr multicast_ip;$/;"	m	struct:FFStream	typeref:struct:FFStream::in_addr	file:
multicast_port	ffserver.c	/^    int multicast_port; \/* first port used for multicast *\/$/;"	m	struct:FFStream	file:
multicast_ttl	ffserver.c	/^    int multicast_ttl;$/;"	m	struct:FFStream	file:
multichannel	libavcodec/wavpack.c	/^    int multichannel;$/;"	m	struct:WavpackContext	file:
multichannel	libavformat/wv.c	/^    int multichannel;$/;"	m	struct:__anon327	file:
multiple_desc_ul	libavformat/mxfenc.c	/^static const uint8_t multiple_desc_ul[]     = { 0x06,0x0E,0x2B,0x34,0x04,0x01,0x01,0x03,0x0D,0x01,0x03,0x01,0x02,0x7F,0x01,0x00 };$/;"	v	file:
multiplier	libavcodec/vorbisdec.c	/^            uint8_t       multiplier;$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor1_s	file:
multiplier	libavcodec/vorbisenc.c	/^    int multiplier;$/;"	m	struct:__anon190	file:
multirate_inter	libavcodec/dca.c	/^    int multirate_inter;        \/\/\/< multirate interpolator switch$/;"	m	struct:__anon93	file:
multires	libavcodec/vc1.h	/^    int multires;         \/\/\/< frame-level RESPIC syntax element present$/;"	m	struct:VC1Context
multiswap_dec	libavformat/asfcrypt.c	/^static uint64_t multiswap_dec(const uint32_t keys[12], uint64_t key, uint64_t data) {$/;"	f	file:
multiswap_enc	libavformat/asfcrypt.c	/^static uint64_t multiswap_enc(const uint32_t keys[12], uint64_t key, uint64_t data) {$/;"	f	file:
multiswap_init	libavformat/asfcrypt.c	/^static void multiswap_init(const uint8_t keybuf[48], uint32_t keys[12]) {$/;"	f	file:
multiswap_inv_step	libavformat/asfcrypt.c	/^static uint32_t multiswap_inv_step(const uint32_t keys[12], uint32_t v) {$/;"	f	file:
multiswap_invert_keys	libavformat/asfcrypt.c	/^static void multiswap_invert_keys(uint32_t keys[12]) {$/;"	f	file:
multiswap_step	libavformat/asfcrypt.c	/^static uint32_t multiswap_step(const uint32_t keys[12], uint32_t v) {$/;"	f	file:
must_flush	libavformat/avio.h	/^    int must_flush;         \/**< true if the next seek should flush *\/$/;"	m	struct:__anon396
mutex	ffplay.c	/^    SDL_mutex *mutex;$/;"	m	struct:PacketQueue	file:
mutex	libavcodec/pthread.c	/^    pthread_mutex_t mutex;          \/\/\/< Mutex used to protect the contents of the PerThreadContext.$/;"	m	struct:PerThreadContext	file:
mutex	libavdevice/dshow.c	/^    HANDLE mutex;$/;"	m	struct:dshow_ctx	file:
mutex	libavdevice/vfwcap.c	/^    HANDLE mutex;$/;"	m	struct:vfw_ctx	file:
mux	libavcodec/vorbisdec.c	/^    uint8_t      *mux;$/;"	m	struct:__anon261	file:
mux	libavcodec/vorbisenc.c	/^    int *mux;$/;"	m	struct:__anon192	file:
mux_max_delay	ffmpeg.c	/^static float mux_max_delay= 0.7;$/;"	v	file:
mux_max_delay	ffmpeg/ffmpeg.c	/^static float mux_max_delay= 0.7;$/;"	v	file:
mux_preload	ffmpeg.c	/^static float mux_preload= 0.5;$/;"	v	file:
mux_preload	ffmpeg/ffmpeg.c	/^static float mux_preload= 0.5;$/;"	v	file:
mux_rate	libavformat/avformat.h	/^    int mux_rate;$/;"	m	struct:AVFormatContext
mux_rate	libavformat/mpegenc.c	/^    int mux_rate; \/* bitrate in units of 50 bytes\/s *\/$/;"	m	struct:__anon429	file:
mux_rate	libavformat/mpegtsenc.c	/^    int mux_rate; \/\/\/< set to 1 when VBR$/;"	m	struct:MpegTSWrite	file:
mv	libavcodec/4xm.c	/^    int mv[256];$/;"	m	struct:FourXContext	file:
mv	libavcodec/4xm.c	/^static const int8_t mv[256][2]={$/;"	v	file:
mv	libavcodec/cavs.h	/^    cavs_vector mv[2*4*3];$/;"	m	struct:__anon207
mv	libavcodec/mpegvideo.h	/^    int mv[2][4][2];$/;"	m	struct:MpegEncContext
mv	libavcodec/vp56.h	/^    VP56mv mv;$/;"	m	struct:__anon222
mv	libavcodec/vp56.h	/^    VP56mv mv[6];  \/* vectors for each block in MB *\/$/;"	m	struct:vp56_context
mv	libavcodec/vp8.h	/^    VP56mv mv;$/;"	m	struct:__anon181
mv0_threshold	libavcodec/avcodec.h	/^    int mv0_threshold;$/;"	m	struct:AVCodecContext
mv1Test	libavfilter/libmpcodecs/vf_test.c	/^static void mv1Test(uint8_t *dst, int stride, int off)$/;"	f	file:
mv_bits	libavcodec/avcodec.h	/^    int mv_bits;$/;"	m	struct:AVCodecContext
mv_bits	libavcodec/mpegvideo.h	/^    int mv_bits;$/;"	m	struct:MpegEncContext
mv_bits	libavcodec/ratecontrol.h	/^    int mv_bits;$/;"	m	struct:RateControlEntry
mv_bits_sum	libavcodec/ratecontrol.h	/^    uint64_t mv_bits_sum[5];$/;"	m	struct:RateControlContext
mv_blocks	libavcodec/xvmc.h	/^    XvMCMacroBlock* mv_blocks;$/;"	m	struct:xvmc_pix_fmt
mv_cache_clean	libavcodec/h264.h	/^    int mv_cache_clean[2];$/;"	m	struct:H264Context
mv_codebook	libavcodec/eatgv.c	/^    int (*mv_codebook)[2];$/;"	m	struct:TgvContext	file:
mv_dir	libavcodec/mpegvideo.h	/^    int mv_dir;$/;"	m	struct:MpegEncContext
mv_end	libavcodec/interplayvideo.c	/^    const uint8_t *mv_end;$/;"	m	struct:IpvideoContext	file:
mv_max	libavcodec/vp8.h	/^    VP56mv mv_max;$/;"	m	struct:__anon182
mv_min	libavcodec/vp8.h	/^    VP56mv mv_min;$/;"	m	struct:__anon182
mv_mode	libavcodec/vc1.h	/^    uint8_t mv_mode;      \/\/\/< MV coding monde$/;"	m	struct:VC1Context
mv_mode2	libavcodec/vc1.h	/^    uint8_t mv_mode2;     \/\/\/< Secondary MV coding mode (B frames)$/;"	m	struct:VC1Context
mv_penalty	libavcodec/ituh263enc.c	/^static uint8_t mv_penalty[MAX_FCODE+1][MAX_MV*2+1];$/;"	v	file:
mv_penalty	libavcodec/mpeg12enc.c	/^static uint8_t mv_penalty[MAX_FCODE+1][MAX_MV*2+1];$/;"	v	file:
mv_penalty	libavcodec/mpegvideo.h	/^    uint8_t (*mv_penalty)[MAX_MV*2+1];  \/\/\/< amount of bits needed to encode a MV$/;"	m	struct:MotionEstContext
mv_pred_direct	libavcodec/cavsdec.c	/^static inline void mv_pred_direct(AVSContext *h, cavs_vector *pmv_fw,$/;"	f	file:
mv_pred_median	libavcodec/cavs.c	/^static inline void mv_pred_median(AVSContext *h, cavs_vector *mvP,$/;"	f	file:
mv_pred_sym	libavcodec/cavsdec.c	/^static inline void mv_pred_sym(AVSContext *h, cavs_vector *src, enum cavs_block size) {$/;"	f	file:
mv_ptr	libavcodec/interplayvideo.c	/^    const uint8_t *mv_ptr;$/;"	m	struct:IpvideoContext	file:
mv_scale	libavcodec/snow.c	/^    int mv_scale;$/;"	m	struct:SnowContext	file:
mv_scan	libavcodec/cavsdec.c	/^static const uint8_t mv_scan[4] = {$/;"	v	file:
mv_table_index	libavcodec/mpegvideo.h	/^    int mv_table_index;$/;"	m	struct:MpegEncContext
mv_tables	libavcodec/msmpeg4data.c	/^MVTable mv_tables[2] = {$/;"	v
mv_type	libavcodec/mpegvideo.h	/^    int mv_type;$/;"	m	struct:MpegEncContext
mv_type_is_raw	libavcodec/vc1.h	/^    int mv_type_is_raw;           \/\/\/< mv type mb plane is not coded$/;"	m	struct:VC1Context
mv_type_mb_plane	libavcodec/vc1.h	/^    uint8_t* mv_type_mb_plane;    \/\/\/< bitplane for mv_type == (4MV)$/;"	m	struct:VC1Context
mv_vlc	libavcodec/ituh263dec.c	/^static VLC mv_vlc;$/;"	v	file:
mv_vlc	libavcodec/mpeg12.c	/^static VLC mv_vlc;$/;"	v	file:
mv_x	libavcodec/ivi_common.h	/^    int8_t      mv_x;     \/\/\/< motion vector (x component)$/;"	m	struct:__anon105
mv_y	libavcodec/ivi_common.h	/^    int8_t      mv_y;     \/\/\/< motion vector (y component)$/;"	m	struct:__anon105
mvc	libavcodec/vp8.h	/^        uint8_t mvc[2][19];$/;"	m	struct:__anon182::__anon187
mvd_table	libavcodec/h264.h	/^    uint8_t     (*mvd_table[2])[2];$/;"	m	struct:H264Context
mvmap	libavcodec/h261data.h	/^static const int mvmap[17] =$/;"	v
mvrange	libavcodec/vc1.h	/^    uint8_t mvrange;$/;"	m	struct:VC1Context
mvtab	libavcodec/h263data.h	/^const uint8_t mvtab[33][2] =$/;"	v
mx	libavcodec/snow.c	/^    int16_t mx;$/;"	m	struct:BlockNode	file:
mxf_add_metadata_set	libavformat/mxfdec.c	/^static int mxf_add_metadata_set(MXFContext *mxf, void *metadata_set)$/;"	f	file:
mxf_aes3_descriptor_key	libavformat/mxfenc.c	/^static const UID mxf_aes3_descriptor_key      = { 0x06,0x0E,0x2B,0x34,0x02,0x53,0x01,0x01,0x0d,0x01,0x01,0x01,0x01,0x01,0x47,0x00 };$/;"	v	file:
mxf_cdci_descriptor_key	libavformat/mxfenc.c	/^static const UID mxf_cdci_descriptor_key      = { 0x06,0x0E,0x2B,0x34,0x02,0x53,0x01,0x01,0x0D,0x01,0x01,0x01,0x01,0x01,0x28,0x00 };$/;"	v	file:
mxf_compare_timestamps	libavformat/mxfenc.c	/^static int mxf_compare_timestamps(AVFormatContext *s, AVPacket *next, AVPacket *pkt)$/;"	f	file:
mxf_crypto_source_container_ul	libavformat/mxfdec.c	/^static const uint8_t mxf_crypto_source_container_ul[]      = { 0x06,0x0e,0x2b,0x34,0x01,0x01,0x01,0x09,0x06,0x01,0x01,0x02,0x02,0x00,0x00,0x00 };$/;"	v	file:
mxf_decrypt_triplet	libavformat/mxfdec.c	/^static int mxf_decrypt_triplet(AVFormatContext *s, AVPacket *pkt, KLVPacket *klv)$/;"	f	file:
mxf_encrypted_essence_container	libavformat/mxfdec.c	/^static const uint8_t mxf_encrypted_essence_container[]     = { 0x06,0x0e,0x2b,0x34,0x04,0x01,0x01,0x07,0x0d,0x01,0x03,0x01,0x02,0x0b,0x01,0x00 };$/;"	v	file:
mxf_encrypted_triplet_key	libavformat/mxfdec.c	/^static const uint8_t mxf_encrypted_triplet_key[]           = { 0x06,0x0e,0x2b,0x34,0x02,0x04,0x01,0x07,0x0d,0x01,0x03,0x01,0x02,0x7e,0x01,0x00 };$/;"	v	file:
mxf_essence_container_uls	libavformat/mxfdec.c	/^static const MXFCodecUL mxf_essence_container_uls[] = {$/;"	v	file:
mxf_essence_container_uls	libavformat/mxfenc.c	/^static const MXFContainerEssenceEntry mxf_essence_container_uls[] = {$/;"	v	file:
mxf_essence_element_key	libavformat/mxfdec.c	/^static const uint8_t mxf_essence_element_key[]             = { 0x06,0x0e,0x2b,0x34,0x01,0x02,0x01,0x01,0x0d,0x01,0x03,0x01 };$/;"	v	file:
mxf_essence_mappings	libavformat/mxfenc.c	/^} mxf_essence_mappings[] = {$/;"	v	typeref:struct:__anon460	file:
mxf_free	libavformat/mxfenc.c	/^static void mxf_free(AVFormatContext *s)$/;"	f	file:
mxf_gen_umid	libavformat/mxfenc.c	/^static void mxf_gen_umid(AVFormatContext *s)$/;"	f	file:
mxf_generic_sound_descriptor_key	libavformat/mxfenc.c	/^static const UID mxf_generic_sound_descriptor_key = { 0x06,0x0E,0x2B,0x34,0x02,0x53,0x01,0x01,0x0D,0x01,0x01,0x01,0x01,0x01,0x42,0x00 };$/;"	v	file:
mxf_get_codec_ul	libavformat/mxfdec.c	/^static const MXFCodecUL *mxf_get_codec_ul(const MXFCodecUL *uls, UID *uid)$/;"	f	file:
mxf_get_d10_aes3_packet	libavformat/mxfdec.c	/^static int mxf_get_d10_aes3_packet(AVIOContext *pb, AVStream *st, AVPacket *pkt, int64_t length)$/;"	f	file:
mxf_get_data_definition_ul	libavformat/mxfenc.c	/^static const MXFCodecUL *mxf_get_data_definition_ul(int type)$/;"	f	file:
mxf_get_essence_container_ul_index	libavformat/mxfenc.c	/^static int mxf_get_essence_container_ul_index(enum CodecID id)$/;"	f	file:
mxf_get_mpeg2_codec_ul	libavformat/mxfenc.c	/^static const UID *mxf_get_mpeg2_codec_ul(AVCodecContext *avctx)$/;"	f	file:
mxf_get_stream_index	libavformat/mxfdec.c	/^static int mxf_get_stream_index(AVFormatContext *s, KLVPacket *klv)$/;"	f	file:
mxf_header_partition_pack_key	libavformat/mxfdec.c	/^static const uint8_t mxf_header_partition_pack_key[]       = { 0x06,0x0e,0x2b,0x34,0x02,0x05,0x01,0x01,0x0d,0x01,0x02,0x01,0x01,0x02 };$/;"	v	file:
mxf_interleave	libavformat/mxfenc.c	/^static int mxf_interleave(AVFormatContext *s, AVPacket *out, AVPacket *pkt, int flush)$/;"	f	file:
mxf_interleave_get_packet	libavformat/mxfenc.c	/^static int mxf_interleave_get_packet(AVFormatContext *s, AVPacket *out, AVPacket *pkt, int flush)$/;"	f	file:
mxf_klv_key	libavformat/mxfdec.c	/^static const uint8_t mxf_klv_key[]                         = { 0x06,0x0e,0x2b,0x34 };$/;"	v	file:
mxf_local_tag_batch	libavformat/mxfenc.c	/^static const MXFLocalTagPair mxf_local_tag_batch[] = {$/;"	v	file:
mxf_match_uid	libavformat/mxfdec.c	/^static int mxf_match_uid(const UID key, const UID uid, int len)$/;"	f	file:
mxf_metadata_read_table	libavformat/mxfdec.c	/^static const MXFMetadataReadTableEntry mxf_metadata_read_table[] = {$/;"	v	file:
mxf_mpeg2_codec_uls	libavformat/mxfenc.c	/^static const UID mxf_mpeg2_codec_uls[] = {$/;"	v	file:
mxf_mpegvideo_descriptor_key	libavformat/mxfenc.c	/^static const UID mxf_mpegvideo_descriptor_key = { 0x06,0x0E,0x2B,0x34,0x02,0x53,0x01,0x01,0x0d,0x01,0x01,0x01,0x01,0x01,0x51,0x00 };$/;"	v	file:
mxf_parse_mpeg2_frame	libavformat/mxfenc.c	/^static int mxf_parse_mpeg2_frame(AVFormatContext *s, AVStream *st,$/;"	f	file:
mxf_parse_structural_metadata	libavformat/mxfdec.c	/^static int mxf_parse_structural_metadata(MXFContext *mxf)$/;"	f	file:
mxf_parse_timestamp	libavformat/mxfenc.c	/^static uint64_t mxf_parse_timestamp(time_t timestamp)$/;"	f	file:
mxf_probe	libavformat/mxfdec.c	/^static int mxf_probe(AVProbeData *p) {$/;"	f	file:
mxf_read_close	libavformat/mxfdec.c	/^static int mxf_read_close(AVFormatContext *s)$/;"	f	file:
mxf_read_content_storage	libavformat/mxfdec.c	/^static int mxf_read_content_storage(void *arg, AVIOContext *pb, int tag, int size, UID uid)$/;"	f	file:
mxf_read_cryptographic_context	libavformat/mxfdec.c	/^static int mxf_read_cryptographic_context(void *arg, AVIOContext *pb, int tag, int size, UID uid)$/;"	f	file:
mxf_read_generic_descriptor	libavformat/mxfdec.c	/^static int mxf_read_generic_descriptor(void *arg, AVIOContext *pb, int tag, int size, UID uid)$/;"	f	file:
mxf_read_header	libavformat/mxfdec.c	/^static int mxf_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
mxf_read_index_table_segment	libavformat/mxfdec.c	/^static int mxf_read_index_table_segment(void *arg, AVIOContext *pb, int tag, int size, UID uid)$/;"	f	file:
mxf_read_local_tags	libavformat/mxfdec.c	/^static int mxf_read_local_tags(MXFContext *mxf, KLVPacket *klv, MXFMetadataReadFunc *read_child, int ctx_size, enum MXFMetadataSetType type)$/;"	f	file:
mxf_read_material_package	libavformat/mxfdec.c	/^static int mxf_read_material_package(void *arg, AVIOContext *pb, int tag, int size, UID uid)$/;"	f	file:
mxf_read_packet	libavformat/mxfdec.c	/^static int mxf_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mxf_read_pixel_layout	libavformat/mxfdec.c	/^static void mxf_read_pixel_layout(AVIOContext *pb, MXFDescriptor *descriptor)$/;"	f	file:
mxf_read_primer_pack	libavformat/mxfdec.c	/^static int mxf_read_primer_pack(void *arg, AVIOContext *pb, int tag, int size, UID uid)$/;"	f	file:
mxf_read_seek	libavformat/mxfdec.c	/^static int mxf_read_seek(AVFormatContext *s, int stream_index, int64_t sample_time, int flags)$/;"	f	file:
mxf_read_sequence	libavformat/mxfdec.c	/^static int mxf_read_sequence(void *arg, AVIOContext *pb, int tag, int size, UID uid)$/;"	f	file:
mxf_read_source_clip	libavformat/mxfdec.c	/^static int mxf_read_source_clip(void *arg, AVIOContext *pb, int tag, int size, UID uid)$/;"	f	file:
mxf_read_source_package	libavformat/mxfdec.c	/^static int mxf_read_source_package(void *arg, AVIOContext *pb, int tag, int size, UID uid)$/;"	f	file:
mxf_read_sync	libavformat/mxfdec.c	/^static int mxf_read_sync(AVIOContext *pb, const uint8_t *key, unsigned size)$/;"	f	file:
mxf_read_track	libavformat/mxfdec.c	/^static int mxf_read_track(void *arg, AVIOContext *pb, int tag, int size, UID uid)$/;"	f	file:
mxf_resolve_strong_ref	libavformat/mxfdec.c	/^static void *mxf_resolve_strong_ref(MXFContext *mxf, UID *strong_ref, enum MXFMetadataSetType type)$/;"	f	file:
mxf_sony_mpeg4_extradata	libavformat/mxfdec.c	/^static const uint8_t mxf_sony_mpeg4_extradata[]            = { 0x06,0x0e,0x2b,0x34,0x04,0x01,0x01,0x01,0x0e,0x06,0x06,0x02,0x02,0x01,0x00,0x00 };$/;"	v	file:
mxf_wav_descriptor_key	libavformat/mxfenc.c	/^static const UID mxf_wav_descriptor_key       = { 0x06,0x0E,0x2B,0x34,0x02,0x53,0x01,0x01,0x0d,0x01,0x01,0x01,0x01,0x01,0x48,0x00 };$/;"	v	file:
mxf_write_aes3_desc	libavformat/mxfenc.c	/^static void mxf_write_aes3_desc(AVFormatContext *s, AVStream *st)$/;"	f	file:
mxf_write_cdci_common	libavformat/mxfenc.c	/^static void mxf_write_cdci_common(AVFormatContext *s, AVStream *st, const UID key, unsigned size)$/;"	f	file:
mxf_write_cdci_desc	libavformat/mxfenc.c	/^static void mxf_write_cdci_desc(AVFormatContext *s, AVStream *st)$/;"	f	file:
mxf_write_common_fields	libavformat/mxfenc.c	/^static void mxf_write_common_fields(AVFormatContext *s, AVStream *st)$/;"	f	file:
mxf_write_content_storage	libavformat/mxfenc.c	/^static void mxf_write_content_storage(AVFormatContext *s)$/;"	f	file:
mxf_write_d10_audio_packet	libavformat/mxfenc.c	/^static void mxf_write_d10_audio_packet(AVFormatContext *s, AVStream *st, AVPacket *pkt)$/;"	f	file:
mxf_write_d10_video_packet	libavformat/mxfenc.c	/^static void mxf_write_d10_video_packet(AVFormatContext *s, AVStream *st, AVPacket *pkt)$/;"	f	file:
mxf_write_essence_container_data	libavformat/mxfenc.c	/^static int mxf_write_essence_container_data(AVFormatContext *s)$/;"	f	file:
mxf_write_essence_container_refs	libavformat/mxfenc.c	/^static void mxf_write_essence_container_refs(AVFormatContext *s)$/;"	f	file:
mxf_write_footer	libavformat/mxfenc.c	/^static int mxf_write_footer(AVFormatContext *s)$/;"	f	file:
mxf_write_generic_desc	libavformat/mxfenc.c	/^static void mxf_write_generic_desc(AVFormatContext *s, AVStream *st, const UID key, unsigned size)$/;"	f	file:
mxf_write_generic_sound_common	libavformat/mxfenc.c	/^static void mxf_write_generic_sound_common(AVFormatContext *s, AVStream *st, const UID key, unsigned size)$/;"	f	file:
mxf_write_generic_sound_desc	libavformat/mxfenc.c	/^static void mxf_write_generic_sound_desc(AVFormatContext *s, AVStream *st)$/;"	f	file:
mxf_write_header	libavformat/mxfenc.c	/^static int mxf_write_header(AVFormatContext *s)$/;"	f	file:
mxf_write_header_metadata_sets	libavformat/mxfenc.c	/^static int mxf_write_header_metadata_sets(AVFormatContext *s)$/;"	f	file:
mxf_write_identification	libavformat/mxfenc.c	/^static void mxf_write_identification(AVFormatContext *s)$/;"	f	file:
mxf_write_index_table_segment	libavformat/mxfenc.c	/^static void mxf_write_index_table_segment(AVFormatContext *s)$/;"	f	file:
mxf_write_klv_fill	libavformat/mxfenc.c	/^static void mxf_write_klv_fill(AVFormatContext *s)$/;"	f	file:
mxf_write_local_tag	libavformat/mxfenc.c	/^static void mxf_write_local_tag(AVIOContext *pb, int size, int tag)$/;"	f	file:
mxf_write_local_tag_utf16	libavformat/mxfenc.c	/^static void mxf_write_local_tag_utf16(AVIOContext *pb, int tag, const char *value)$/;"	f	file:
mxf_write_metadata_key	libavformat/mxfenc.c	/^static void mxf_write_metadata_key(AVIOContext *pb, unsigned int value)$/;"	f	file:
mxf_write_mpegvideo_desc	libavformat/mxfenc.c	/^static void mxf_write_mpegvideo_desc(AVFormatContext *s, AVStream *st)$/;"	f	file:
mxf_write_multi_descriptor	libavformat/mxfenc.c	/^static void mxf_write_multi_descriptor(AVFormatContext *s)$/;"	f	file:
mxf_write_package	libavformat/mxfenc.c	/^static void mxf_write_package(AVFormatContext *s, enum MXFMetadataSetType type)$/;"	f	file:
mxf_write_packet	libavformat/mxfenc.c	/^static int mxf_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mxf_write_partition	libavformat/mxfenc.c	/^static void mxf_write_partition(AVFormatContext *s, int bodysid,$/;"	f	file:
mxf_write_preface	libavformat/mxfenc.c	/^static void mxf_write_preface(AVFormatContext *s)$/;"	f	file:
mxf_write_primer_pack	libavformat/mxfenc.c	/^static void mxf_write_primer_pack(AVFormatContext *s)$/;"	f	file:
mxf_write_random_index_pack	libavformat/mxfenc.c	/^static void mxf_write_random_index_pack(AVFormatContext *s)$/;"	f	file:
mxf_write_refs_count	libavformat/mxfenc.c	/^static void mxf_write_refs_count(AVIOContext *pb, int ref_count)$/;"	f	file:
mxf_write_sequence	libavformat/mxfenc.c	/^static void mxf_write_sequence(AVFormatContext *s, AVStream *st, enum MXFMetadataSetType type)$/;"	f	file:
mxf_write_structural_component	libavformat/mxfenc.c	/^static void mxf_write_structural_component(AVFormatContext *s, AVStream *st, enum MXFMetadataSetType type)$/;"	f	file:
mxf_write_system_item	libavformat/mxfenc.c	/^static void mxf_write_system_item(AVFormatContext *s)$/;"	f	file:
mxf_write_timecode_component	libavformat/mxfenc.c	/^static void mxf_write_timecode_component(AVFormatContext *s, AVStream *st, enum MXFMetadataSetType type)$/;"	f	file:
mxf_write_track	libavformat/mxfenc.c	/^static void mxf_write_track(AVFormatContext *s, AVStream *st, enum MXFMetadataSetType type)$/;"	f	file:
mxf_write_umid	libavformat/mxfenc.c	/^static void mxf_write_umid(AVFormatContext *s, int type)$/;"	f	file:
mxf_write_uuid	libavformat/mxfenc.c	/^static void mxf_write_uuid(AVIOContext *pb, enum MXFMetadataSetType type, int value)$/;"	f	file:
mxf_write_wav_common	libavformat/mxfenc.c	/^static void mxf_write_wav_common(AVFormatContext *s, AVStream *st, const UID key, unsigned size)$/;"	f	file:
mxf_write_wav_desc	libavformat/mxfenc.c	/^static void mxf_write_wav_desc(AVFormatContext *s, AVStream *st)$/;"	f	file:
mxg_close	libavformat/mxg.c	/^static int mxg_close(struct AVFormatContext *s)$/;"	f	file:
mxg_find_startmarker	libavformat/mxg.c	/^static uint8_t* mxg_find_startmarker(uint8_t *p, uint8_t *end)$/;"	f	file:
mxg_read_header	libavformat/mxg.c	/^static int mxg_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
mxg_read_packet	libavformat/mxg.c	/^static int mxg_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
mxg_update_cache	libavformat/mxg.c	/^static int mxg_update_cache(AVFormatContext *s, unsigned int cache_size)$/;"	f	file:
mxm_bitmask	libavcodec/mxpegdec.c	/^    uint8_t *mxm_bitmask; \/* bitmask buffer *\/$/;"	m	struct:MXpegDecodeContext	file:
mxpeg_check_dimensions	libavcodec/mxpegdec.c	/^static int mxpeg_check_dimensions(MXpegDecodeContext *s, MJpegDecodeContext *jpg,$/;"	f	file:
mxpeg_decode_app	libavcodec/mxpegdec.c	/^static int mxpeg_decode_app(MXpegDecodeContext *s,$/;"	f	file:
mxpeg_decode_com	libavcodec/mxpegdec.c	/^static int mxpeg_decode_com(MXpegDecodeContext *s,$/;"	f	file:
mxpeg_decode_end	libavcodec/mxpegdec.c	/^static av_cold int mxpeg_decode_end(AVCodecContext *avctx)$/;"	f	file:
mxpeg_decode_frame	libavcodec/mxpegdec.c	/^static int mxpeg_decode_frame(AVCodecContext *avctx,$/;"	f	file:
mxpeg_decode_init	libavcodec/mxpegdec.c	/^static av_cold int mxpeg_decode_init(AVCodecContext *avctx)$/;"	f	file:
mxpeg_decode_mxm	libavcodec/mxpegdec.c	/^static int mxpeg_decode_mxm(MXpegDecodeContext *s,$/;"	f	file:
my	libavcodec/snow.c	/^    int16_t my;$/;"	m	struct:BlockNode	file:
my_http_addr	ffserver.c	/^static struct sockaddr_in my_http_addr;$/;"	v	typeref:struct:sockaddr_in	file:
my_memcpy_pic	libavfilter/libmpcodecs/libvo/fastmemcpy.h	63;"	d
my_program_dir	ffserver.c	/^static const char *my_program_dir;$/;"	v	file:
my_program_name	ffserver.c	/^static const char *my_program_name;$/;"	v	file:
my_rtsp_addr	ffserver.c	/^static struct sockaddr_in my_rtsp_addr;$/;"	v	typeref:struct:sockaddr_in	file:
myrnd	tests/audiogen.c	/^static unsigned int myrnd(unsigned int *seed_ptr, int n)$/;"	f	file:
myrnd	tests/videogen.c	/^static unsigned int myrnd(unsigned int *seed_ptr, int n)$/;"	f	file:
n	libavcodec/acelp_vectors.h	/^    int      n;$/;"	m	struct:__anon122
n	libavcodec/msmpeg4data.h	/^    int n;$/;"	m	struct:MVTable
n	libavcodec/rl.h	/^    int n;                         \/\/\/< number of entries of table_vlc minus 1$/;"	m	struct:RLTable
n	libavcodec/sbr.h	/^    unsigned           n[2];$/;"	m	struct:__anon57
n	libavcodec/wma.h	/^    int n;                      \/\/\/< total number of codes$/;"	m	struct:CoefVLCTable
n	libavformat/matroskadec.c	/^        const struct EbmlSyntax *n;$/;"	m	union:EbmlSyntax::__anon351	typeref:struct:EbmlSyntax::__anon351::EbmlSyntax	file:
n	libavutil/pca.c	/^    int n;$/;"	m	struct:PCA	file:
n0	libavcodec/huffman.h	/^    int16_t  n0;$/;"	m	struct:__anon149
n_allocated_blks	libavcodec/vc1.h	/^    int n_allocated_blks, cur_blk_idx, left_blk_idx, topleft_blk_idx, top_blk_idx;$/;"	m	struct:VC1Context
n_ast	libavformat/dvenc.c	/^    int               n_ast;         \/* number of stereo audio streams (up to 2) *\/$/;"	m	struct:DVMuxContext	file:
n_blocks	libavcodec/wmavoice.c	/^    uint8_t n_blocks;     \/\/\/< amount of blocks per frame (each block$/;"	m	struct:frame_type_desc	file:
n_clear_frames	libavdevice/dv1394.h	/^        unsigned int n_clear_frames;$/;"	m	struct:dv1394_status
n_difchan	libavcodec/dvdata.h	/^    int              n_difchan;             \/* number of DIF channels per frame *\/$/;"	m	struct:DVprofile
n_div	libavcodec/twinvq.c	/^    int n_div[4];$/;"	m	struct:TwinContext	file:
n_filt	libavcodec/aac.h	/^    int n_filt[8];$/;"	m	struct:__anon240
n_frames	libavdevice/dv1394.h	/^        unsigned int n_frames;$/;"	m	struct:dv1394_init
n_lim	libavcodec/sbr.h	/^    unsigned           n_lim;$/;"	m	struct:__anon57
n_lsp	libavcodec/twinvq.c	/^    uint8_t      n_lsp;       \/\/\/< number of lsp coefficients$/;"	m	struct:__anon66	file:
n_master	libavcodec/sbr.h	/^    unsigned           n_master;$/;"	m	struct:__anon57
n_pkts	libavformat/rtpdec_qdm2.c	/^    unsigned int n_pkts;       \/\/\/< number of RTP packets received since last packet output \/ config$/;"	m	struct:PayloadContext	file:
n_q	libavcodec/sbr.h	/^    unsigned           n_q;$/;"	m	struct:__anon57
n_segments	libavformat/applehttp.c	/^    int n_segments;$/;"	m	struct:variant	file:
n_segments	libavformat/applehttpproto.c	/^    int n_segments;$/;"	m	struct:AppleHTTPContext	file:
n_slice_buf_ids	libavcodec/vaapi.h	/^    unsigned int n_slice_buf_ids;$/;"	m	struct:vaapi_context
n_streams	libavformat/rdt.c	/^    int n_streams; \/**< streams with identifical content in this set *\/$/;"	m	struct:RDTDemuxContext	file:
n_variants	libavformat/applehttp.c	/^    int n_variants;$/;"	m	struct:AppleHTTPContext	file:
n_variants	libavformat/applehttpproto.c	/^    int n_variants;$/;"	m	struct:AppleHTTPContext	file:
nal_hrd_parameters_present_flag	libavcodec/h264.h	/^    int nal_hrd_parameters_present_flag;$/;"	m	struct:SPS
nal_length_size	libavcodec/h264.h	/^    int nal_length_size; \/\/\/< Number of bytes used for nal length (1, 2 or 4)$/;"	m	struct:H264Context
nal_length_size	libavformat/rtpenc.h	/^    int nal_length_size;$/;"	m	struct:RTPMuxContext
nal_ref_idc	libavcodec/h264.h	/^    int nal_ref_idc;$/;"	m	struct:H264Context
nal_send	libavformat/rtpenc_h264.c	/^static void nal_send(AVFormatContext *s1, const uint8_t *buf, int size, int last)$/;"	f	file:
nal_unit_type	libavcodec/h264.h	/^    int nal_unit_type;$/;"	m	struct:H264Context
name	cmdutils.h	/^    const char *name;$/;"	m	struct:__anon290
name	ffmpeg/cmdutils.h	/^    const char *name;$/;"	m	struct:__anon288
name	libavcodec/ass_split.c	/^    const char *name;$/;"	m	struct:__anon144	file:
name	libavcodec/ass_split.h	/^    char *name;           \/**< name of the tyle (case sensitive) *\/$/;"	m	struct:__anon249
name	libavcodec/avcodec.h	/^    const char *name; \/\/\/< short name for the profile$/;"	m	struct:AVProfile
name	libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVBitStreamFilter
name	libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVCodec
name	libavcodec/avcodec.h	/^    const char *name;$/;"	m	struct:AVHWAccel
name	libavcodec/dct-test.c	/^  const char *name;$/;"	m	struct:algo	file:
name	libavcodec/huffyuv.c	/^    int name;$/;"	m	struct:__anon201	file:
name	libavcodec/psymodel.h	/^    const char *name;$/;"	m	struct:FFPsyModel
name	libavdevice/dshow.h	/^    const wchar_t *name;$/;"	m	struct:libAVFilter
name	libavfilter/avfilter.h	/^    char *name;                     \/\/\/< name of this filter instance$/;"	m	struct:AVFilterContext
name	libavfilter/avfilter.h	/^    const char *name;         \/\/\/< filter name$/;"	m	struct:AVFilter
name	libavfilter/avfilter.h	/^    const char *name;$/;"	m	struct:AVFilterPad
name	libavfilter/avfiltergraph.h	/^    char *name;$/;"	m	struct:AVFilterInOut
name	libavfilter/libmpcodecs/libvo/video_out.h	/^    const char *name;$/;"	m	struct:vo_info_s
name	libavfilter/libmpcodecs/mpc_info.h	/^        const char *name;$/;"	m	struct:mp_codec_info_s
name	libavfilter/libmpcodecs/vf.h	/^    const char *name;$/;"	m	struct:vf_info_s
name	libavfilter/libmpcodecs/vf_detc.c	/^        const char *name;$/;"	m	struct:__anon29	file:
name	libavfilter/vf_libopencv.c	/^    const char *name;$/;"	m	struct:__anon13	file:
name	libavfilter/vf_libopencv.c	/^    const char *name;$/;"	m	struct:__anon16	file:
name	libavformat/avformat.h	/^    const char *name;$/;"	m	struct:AVInputFormat
name	libavformat/avformat.h	/^    const char *name;$/;"	m	struct:AVOutputFormat
name	libavformat/avio.h	/^    const char *name;$/;"	m	struct:URLProtocol
name	libavformat/matroskadec.c	/^    char    *name;$/;"	m	struct:__anon361	file:
name	libavformat/matroskadec.c	/^    char *name;$/;"	m	struct:__anon366	file:
name	libavformat/mpegtsenc.c	/^    char *name;$/;"	m	struct:MpegTSService	file:
name	libavformat/oggdec.h	/^    const int8_t *name;$/;"	m	struct:ogg_codec
name	libavformat/sdp.c	/^    const char *name;     \/**< session name (can be an empty string) *\/$/;"	m	struct:sdp_session_level	file:
name	libavformat/url.h	/^    const char *name;$/;"	m	struct:URLProtocol
name	libavutil/audioconvert.c	/^    const char *name;$/;"	m	struct:__anon302	file:
name	libavutil/opt.h	/^    const char *name;$/;"	m	struct:AVOption
name	libavutil/parseutils.c	/^    const char *name;            \/\/\/< a string representing the name of the color$/;"	m	struct:__anon294	file:
name	libavutil/pixdesc.h	/^    const char *name;$/;"	m	struct:AVPixFmtDescriptor
name	libavutil/samplefmt.c	/^    const char *name;$/;"	m	struct:SampleFmtInfo	file:
name_TAG	libavformat/4xm.c	42;"	d	file:
native	libavformat/metadata.h	/^    const char *native;$/;"	m	struct:AVMetadataConv
nb_args	libavcodec/ansi.c	/^    int nb_args;          \/**< number of arguments (may exceed MAX_NB_ARGS) *\/$/;"	m	struct:__anon173	file:
nb_au_headers	libavformat/rtpdec_mpeg4.c	/^    int nb_au_headers;$/;"	m	struct:PayloadContext	file:
nb_bits	libavcodec/vorbisdec.c	/^    unsigned int nb_bits;$/;"	m	struct:__anon258	file:
nb_block_sizes	libavcodec/wma.h	/^    int nb_block_sizes;                     \/\/\/< number of block sizes$/;"	m	struct:WMACodecContext
nb_blocks	libavcodec/mjpegdec.h	/^    int nb_blocks[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext
nb_byes	libavformat/rtsp.h	/^    int nb_byes;$/;"	m	struct:RTSPState
nb_channels	libavcodec/cook.c	/^    int                 nb_channels;$/;"	m	struct:cook	file:
nb_channels	libavcodec/imgconvert.c	/^    uint8_t nb_channels;     \/**< number of channels (including alpha) *\/$/;"	m	struct:PixFmtInfo	file:
nb_channels	libavcodec/mpegaudioenc.c	/^    int nb_channels;$/;"	m	struct:MpegAudioContext	file:
nb_channels	libavcodec/qdm2.c	/^    int nb_channels;         \/\/\/< number of channels$/;"	m	struct:__anon200	file:
nb_channels	libavcodec/wma.h	/^    int nb_channels;$/;"	m	struct:WMACodecContext
nb_channels	libavutil/audioconvert.c	/^    int         nb_channels;$/;"	m	struct:__anon302	file:
nb_chapter_maps	ffmpeg.c	/^static int nb_chapter_maps;$/;"	v	file:
nb_chapter_maps	ffmpeg/ffmpeg.c	/^static int nb_chapter_maps;$/;"	v	file:
nb_chapters	libavformat/avformat.h	/^    unsigned int nb_chapters;$/;"	m	struct:AVFormatContext
nb_colors	libavcodec/avcodec.h	/^    int nb_colors; \/\/\/< number of colors in pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
nb_components	libavcodec/mjpegdec.h	/^    int nb_components;$/;"	m	struct:MJpegDecodeContext
nb_components	libavutil/pixdesc.h	/^    uint8_t nb_components;      \/\/\/< The number of components each pixel has, (1-4)$/;"	m	struct:AVPixFmtDescriptor
nb_connections	ffserver.c	/^static unsigned int nb_connections;$/;"	v	file:
nb_elem	libavformat/matroskadec.c	/^    int nb_elem;$/;"	m	struct:__anon352	file:
nb_fields	libavformat/gxfenc.c	/^    uint32_t nb_fields;$/;"	m	struct:GXFContext	file:
nb_frames	libavformat/avformat.h	/^    int64_t nb_frames;                 \/\/\/< number of frames in this stream if known or 0$/;"	m	struct:AVStream
nb_frames	libavformat/avs.c	/^    int nb_frames;$/;"	m	struct:avs_format	file:
nb_frames	libavformat/filmstripenc.c	/^    int nb_frames;$/;"	m	struct:__anon484	file:
nb_frames	libavformat/rmenc.c	/^    int nb_frames;    \/* current frame number *\/$/;"	m	struct:__anon382	file:
nb_frames_drop	ffmpeg.c	/^static int nb_frames_drop = 0;$/;"	v	file:
nb_frames_drop	ffmpeg/ffmpeg.c	/^static int nb_frames_drop = 0;$/;"	v	file:
nb_frames_dup	ffmpeg.c	/^static int nb_frames_dup = 0;$/;"	v	file:
nb_frames_dup	ffmpeg/ffmpeg.c	/^static int nb_frames_dup = 0;$/;"	v	file:
nb_headers_buffered	libavcodec/flac_parser.c	/^    int nb_headers_buffered;       \/**< number of headers that are buffered   *\/$/;"	m	struct:FLACParseContext	file:
nb_headers_found	libavcodec/flac_parser.c	/^    int nb_headers_found;          \/**< number of headers found in the last$/;"	m	struct:FLACParseContext	file:
nb_index_count	libavformat/asfenc.c	/^    uint32_t nb_index_count;$/;"	m	struct:__anon470	file:
nb_index_entries	libavformat/avformat.h	/^    int nb_index_entries;$/;"	m	struct:AVStream
nb_index_entries	libavformat/wtvdec.c	/^    int nb_index_entries;$/;"	m	struct:__anon323	file:
nb_index_memory_alloc	libavformat/asfenc.c	/^    uint32_t nb_index_memory_alloc;$/;"	m	struct:__anon470	file:
nb_input_codecs	ffmpeg.c	/^static int nb_input_codecs = 0;$/;"	v	file:
nb_input_codecs	ffmpeg/ffmpeg.c	/^static int nb_input_codecs = 0;$/;"	v	file:
nb_input_files	ffmpeg.c	/^static int         nb_input_files   = 0;$/;"	v	file:
nb_input_files	ffmpeg/ffmpeg.c	/^static int         nb_input_files   = 0;$/;"	v	file:
nb_input_files_ts_scale	ffmpeg.c	/^static int nb_input_files_ts_scale[MAX_FILES] = {0};$/;"	v	file:
nb_input_files_ts_scale	ffmpeg/ffmpeg.c	/^static int nb_input_files_ts_scale[MAX_FILES] = {0};$/;"	v	file:
nb_input_streams	ffmpeg.c	/^static int         nb_input_streams = 0;$/;"	v	file:
nb_input_streams	ffmpeg/ffmpeg.c	/^static int         nb_input_streams = 0;$/;"	v	file:
nb_iterations	libavfilter/vf_libopencv.c	/^    int nb_iterations;$/;"	m	struct:__anon15	file:
nb_max_connections	ffserver.c	/^static unsigned int nb_max_connections = 5;$/;"	v	file:
nb_max_http_connections	ffserver.c	/^static unsigned int nb_max_http_connections = 2000;$/;"	v	file:
nb_meta_data_maps	ffmpeg.c	/^static int nb_meta_data_maps;$/;"	v	file:
nb_meta_data_maps	ffmpeg/ffmpeg.c	/^static int nb_meta_data_maps;$/;"	v	file:
nb_null	libavcodec/vp56.h	/^    unsigned int nb_null[2][2];       \/* number of consecutive NULL DC\/AC *\/$/;"	m	struct:vp56_context
nb_output_files	ffmpeg.c	/^static int nb_output_files = 0;$/;"	v	file:
nb_output_files	ffmpeg/ffmpeg.c	/^static int nb_output_files = 0;$/;"	v	file:
nb_output_streams_for_file	ffmpeg.c	/^static int nb_output_streams_for_file[MAX_FILES] = { 0 };$/;"	v	file:
nb_output_streams_for_file	ffmpeg/ffmpeg.c	/^static int nb_output_streams_for_file[MAX_FILES] = { 0 };$/;"	v	file:
nb_packets	ffplay.c	/^    int nb_packets;$/;"	m	struct:PacketQueue	file:
nb_packets	libavformat/asfenc.c	/^    uint64_t nb_packets;                 \/\/\/< how many packets are there in the file, invalid if broadcasting$/;"	m	struct:__anon470	file:
nb_packets	libavformat/rmdec.c	/^    int nb_packets;$/;"	m	struct:__anon436	file:
nb_packets	libavformat/rmenc.c	/^    int nb_packets;$/;"	m	struct:__anon382	file:
nb_pages	libavformat/anm.c	/^    unsigned int nb_pages;    \/**< total pages in file *\/$/;"	m	struct:__anon435	file:
nb_pids	libavformat/mpegts.c	/^    unsigned int nb_pids;$/;"	m	struct:Program	file:
nb_planes	libavcodec/pictordec.c	/^    int nb_planes;$/;"	m	struct:PicContext	file:
nb_positions	libavfilter/vf_drawtext.c	/^    size_t nb_positions;            \/\/\/< number of elements of positions array$/;"	m	struct:__anon24	file:
nb_prg	libavformat/mpegts.c	/^    unsigned int nb_prg;$/;"	m	struct:MpegTSContext	file:
nb_programs	libavformat/avformat.h	/^    unsigned int nb_programs;$/;"	m	struct:AVFormatContext
nb_records	libavformat/anm.c	/^    unsigned int nb_records;  \/**< total records in file *\/$/;"	m	struct:__anon435	file:
nb_records	libavformat/anm.c	/^    unsigned int nb_records;$/;"	m	struct:__anon434	file:
nb_rmst	libavformat/rdt.c	/^    int nb_rmst;$/;"	m	struct:PayloadContext	file:
nb_rtsp_streams	libavformat/rtsp.h	/^    int nb_rtsp_streams;$/;"	m	struct:RTSPState
nb_samples	libavfilter/avfilter.h	/^    int nb_samples;             \/\/\/< number of audio samples per channel$/;"	m	struct:AVFilterBufferRefAudioProps
nb_scale_factors	libavcodec/mpegaudiotab.h	/^static const unsigned char nb_scale_factors[4] = { 3, 2, 1, 2 };$/;"	v
nb_sectors	libavformat/wtvdec.c	/^    int nb_sectors;      \/** number of sectors *\/$/;"	m	struct:__anon321	file:
nb_services	libavformat/mpegtsenc.c	/^    int nb_services;$/;"	m	struct:MpegTSWrite	file:
nb_stream_indexes	libavformat/avformat.h	/^    unsigned int   nb_stream_indexes;$/;"	m	struct:AVProgram
nb_stream_maps	ffmpeg.c	/^static int nb_stream_maps;$/;"	v	file:
nb_stream_maps	ffmpeg/ffmpeg.c	/^static int nb_stream_maps;$/;"	v	file:
nb_streamid_map	ffmpeg.c	/^static int nb_streamid_map = 0;$/;"	v	file:
nb_streamid_map	ffmpeg/ffmpeg.c	/^static int nb_streamid_map = 0;$/;"	v	file:
nb_streams	ffmpeg.c	/^    int nb_streams;       \/* nb streams we are aware of *\/$/;"	m	struct:AVInputFile	file:
nb_streams	ffmpeg/ffmpeg.c	/^    int nb_streams;       \/* nb streams we are aware of *\/$/;"	m	struct:AVInputFile	file:
nb_streams	ffserver.c	/^    int nb_streams;$/;"	m	struct:FFStream	file:
nb_streams	libavformat/avformat.h	/^    unsigned int nb_streams;$/;"	m	struct:AVFormatContext
nb_streams	libavformat/avisynth.c	/^  int nb_streams;$/;"	m	struct:__anon475	file:
nb_streams	libavformat/movenc.h	/^    int     nb_streams;$/;"	m	struct:MOVMuxContext
nb_streams	libavformat/seek.h	/^    int                  nb_streams;        \/\/\/< number of streams with stored state$/;"	m	struct:AVParserState
nb_streams_allocated	libavformat/mms.h	/^    unsigned int nb_streams_allocated;   \/\/\/< allocated size of streams$/;"	m	struct:__anon455
nb_transports	libavformat/rtsp.h	/^    int nb_transports;$/;"	m	struct:RTSPMessageHeader
nbands	libavcodec/j2k.h	/^    uint8_t nbands;$/;"	m	struct:__anon216
nbits	libavcodec/dct.h	/^    int nbits;$/;"	m	struct:DCTContext
nbits	libavcodec/fft.h	/^    int nbits;$/;"	m	struct:FFTContext
nbits	libavcodec/rdft.h	/^    int nbits;$/;"	m	struct:RDFTContext
nblack	libavfilter/vf_blackframe.c	/^    unsigned int nblack;  \/\/\/< number of black pixels counted so far$/;"	m	struct:__anon49	file:
nblocks	libavformat/ape.c	/^    int nblocks;$/;"	m	struct:__anon334	file:
nbooks	libavcodec/vorbis_enc_data.h	/^    const int *nbooks;$/;"	m	struct:__anon274
nbuffers	libavfilter/libmpcodecs/pullup.h	/^    int nbuffers;$/;"	m	struct:pullup_context
nc	libavformat/httpauth.h	/^    int nc;                \/**< Nonce count, the number of earlier replies$/;"	m	struct:__anon404
nc_probe	libavformat/ncdec.c	/^static int nc_probe(AVProbeData *probe_packet)$/;"	f	file:
nc_read_header	libavformat/ncdec.c	/^static int nc_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
nc_read_packet	libavformat/ncdec.c	/^static int nc_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
nclasses	libavcodec/vorbisenc.c	/^    int nclasses;$/;"	m	struct:__anon190	file:
ncodebooks	libavcodec/vorbisenc.c	/^    int ncodebooks;$/;"	m	struct:__anon194	file:
ncomponents	libavcodec/j2kdec.c	/^    int ncomponents;$/;"	m	struct:__anon98	file:
ncomponents	libavcodec/j2kenc.c	/^    int ncomponents;$/;"	m	struct:__anon63	file:
ndeclevels	libavcodec/j2k_dwt.h	/^    uint8_t  ndeclevels;                 \/\/\/< number of decomposition levels$/;"	m	struct:__anon233
ndimentions	libavcodec/vorbisenc.c	/^    int ndimentions;$/;"	m	struct:__anon188	file:
near	libavcodec/jpegls.h	/^    int near, twonear;$/;"	m	struct:JLSState
near	libavcodec/mjpegdec.h	/^    int near;         \/\/\/< near lossless bound (si 0 for lossless)$/;"	m	struct:MJpegDecodeContext
nearest_cb	libavcodec/elbg.c	/^    int *nearest_cb;$/;"	m	struct:__anon247	file:
need_next_header	libavcodec/aac_ac3_parser.h	/^    int need_next_header;$/;"	m	struct:AACAC3ParseContext
need_parsing	libavformat/avformat.h	/^    enum AVStreamParseType need_parsing;$/;"	m	struct:AVStream	typeref:enum:AVStream::AVStreamParseType
need_second_field	libavcodec/crystalhd.c	/^    uint8_t need_second_field;$/;"	m	struct:__anon268	file:
need_subscription	libavformat/rtsp.h	/^    int need_subscription;$/;"	m	struct:RTSPState
need_to_start_children	ffserver.c	/^static int need_to_start_children;$/;"	v	file:
needed	libavformat/applehttp.c	/^    int needed, cur_needed;$/;"	m	struct:variant	file:
needread	libavfilter/libmpcodecs/vf_detc.c	/^        int needread;$/;"	m	struct:__anon29	file:
needread	libavfilter/libmpcodecs/vf_detc.c	/^        int needread;$/;"	m	struct:vf_priv_s	file:
needs_copy	libavfilter/vf_pad.c	/^    int needs_copy;$/;"	m	struct:__anon52	file:
needs_hcscale	libswscale/swscale_internal.h	/^    int needs_hcscale; \/\/\/< Set if there are chroma planes to be converted.$/;"	m	struct:SwsContext
needs_reordering	libavcodec/mlpdec.c	/^    uint8_t     needs_reordering;$/;"	m	struct:MLPDecodeContext	file:
negate_alpha	libavfilter/vf_lut.c	/^    int negate_alpha; \/* only used by negate *\/$/;"	m	struct:__anon23	file:
negate_init	libavfilter/vf_lut.c	/^static int negate_init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
neighbor_transform_size	libavcodec/h264.h	/^    int neighbor_transform_size;$/;"	m	struct:H264Context
neighbour_offs_x	libavcodec/rv40.c	/^static const int neighbour_offs_x[4] = { 0,  0, -1, 0 };$/;"	v	file:
neighbour_offs_y	libavcodec/rv40.c	/^static const int neighbour_offs_y[4] = { 0, -1,  0, 1 };$/;"	v	file:
nelly_decode_block	libavcodec/nellymoserdec.c	/^static void nelly_decode_block(NellyMoserDecodeContext *s,$/;"	f	file:
nentries	libavcodec/vorbisenc.c	/^    int nentries;$/;"	m	struct:__anon188	file:
new_audio_stream	ffmpeg.c	/^static void new_audio_stream(AVFormatContext *oc, int file_idx)$/;"	f	file:
new_audio_stream	ffmpeg/ffmpeg.c	/^static void new_audio_stream(AVFormatContext *oc, int file_idx)$/;"	f	file:
new_connection	ffserver.c	/^static void new_connection(int server_fd, int is_rtsp)$/;"	f	file:
new_context	libavformat/rtpdec_mpeg4.c	/^static PayloadContext *new_context(void)$/;"	f	file:
new_cpl_coords	libavcodec/ac3enc.h	/^    uint8_t  new_cpl_coords;                    \/\/\/< send new coupling coordinates      (cplcoe)$/;"	m	struct:AC3Block
new_cpl_leak	libavcodec/ac3enc.h	/^    int      new_cpl_leak;                      \/\/\/< send new coupling leak info$/;"	m	struct:AC3Block
new_cpl_strategy	libavcodec/ac3enc.h	/^    int      new_cpl_strategy;                  \/\/\/< send new coupling strategy$/;"	m	struct:AC3Block
new_data_stream	ffmpeg.c	/^static void new_data_stream(AVFormatContext *oc, int file_idx)$/;"	f	file:
new_data_stream	ffmpeg/ffmpeg.c	/^static void new_data_stream(AVFormatContext *oc, int file_idx)$/;"	f	file:
new_eval_expr	libavutil/eval.c	/^static AVExpr *new_eval_expr(int type, int value, AVExpr *p0, AVExpr *p1)$/;"	f	file:
new_frame_offset	libavformat/nsvdec.c	/^    int new_frame_offset; \/* temporary storage (used during seek) *\/$/;"	m	struct:NSVStream	file:
new_key_frame	libavcodec/flashsv2enc.c	/^static int new_key_frame(FlashSV2Context * s)$/;"	f	file:
new_line	libavcodec/ass_split.h	/^    void (*new_line)(void *priv, int forced);$/;"	m	struct:__anon252
new_mp_image	libavfilter/libmpcodecs/mp_image.c	/^mp_image_t* new_mp_image(int w,int h){$/;"	f
new_output_stream	ffmpeg.c	/^static AVOutputStream *new_output_stream(AVFormatContext *oc, int file_idx)$/;"	f	file:
new_output_stream	ffmpeg/ffmpeg.c	/^static AVOutputStream *new_output_stream(AVFormatContext *oc, int file_idx)$/;"	f	file:
new_palette	libavcodec/flicvideo.c	/^    int new_palette;$/;"	m	struct:FlicDecodeContext	file:
new_pes_packet	libavformat/mpegts.c	/^static void new_pes_packet(PESContext *pes, AVPacket *pkt)$/;"	f	file:
new_pict_type	libavcodec/ratecontrol.h	/^    int new_pict_type;$/;"	m	struct:RateControlEntry
new_picture	libavcodec/mpegvideo.h	/^    Picture new_picture;$/;"	m	struct:MpegEncContext
new_picture	libavcodec/snow.c	/^    AVFrame new_picture;$/;"	m	struct:SnowContext	file:
new_pkts	libavdevice/jack_audio.c	/^    AVFifoBuffer *  new_pkts;$/;"	m	struct:__anon315	file:
new_pred	libavcodec/mpegvideo.h	/^    int new_pred;$/;"	m	struct:MpegEncContext
new_qscale	libavcodec/ratecontrol.h	/^    float new_qscale;$/;"	m	struct:RateControlEntry
new_rematrixing_strategy	libavcodec/ac3enc.h	/^    uint8_t  new_rematrixing_strategy;          \/\/\/< send new rematrixing flags in this block$/;"	m	struct:AC3Block
new_snr_offsets	libavcodec/ac3enc.h	/^    int      new_snr_offsets;                   \/\/\/< send new SNR offsets$/;"	m	struct:AC3Block
new_sprite	libavcodec/vc1.h	/^    int new_sprite;$/;"	m	struct:VC1Context
new_stream	libavformat/wtvdec.c	/^static AVStream * new_stream(AVFormatContext *s, AVStream *st, int sid, int codec_type)$/;"	f	file:
new_subtitle_stream	ffmpeg.c	/^static void new_subtitle_stream(AVFormatContext *oc, int file_idx)$/;"	f	file:
new_subtitle_stream	ffmpeg/ffmpeg.c	/^static void new_subtitle_stream(AVFormatContext *oc, int file_idx)$/;"	f	file:
new_variant	libavformat/applehttp.c	/^static struct variant *new_variant(AppleHTTPContext *c, int bandwidth,$/;"	f	file:
new_video_stream	ffmpeg.c	/^static void new_video_stream(AVFormatContext *oc, int file_idx)$/;"	f	file:
new_video_stream	ffmpeg/ffmpeg.c	/^static void new_video_stream(AVFormatContext *oc, int file_idx)$/;"	f	file:
newcodes	libavcodec/lzw.c	/^    int newcodes;               \/\/\/< First available code$/;"	m	struct:LZWState	file:
newvec	libavcodec/truespeech.c	/^    int16_t newvec[60]; \/\/ tmp vector$/;"	m	struct:__anon160	file:
next	ffserver.c	/^    struct FFStream *next;$/;"	m	struct:FFStream	typeref:struct:FFStream::FFStream	file:
next	ffserver.c	/^    struct HTTPContext *next;$/;"	m	struct:HTTPContext	typeref:struct:HTTPContext::HTTPContext	file:
next	ffserver.c	/^    struct IPAddressACL *next;$/;"	m	struct:IPAddressACL	typeref:struct:IPAddressACL::IPAddressACL	file:
next	libavcodec/avcodec.h	/^    struct AVBitStreamFilter *next;$/;"	m	struct:AVBitStreamFilter	typeref:struct:AVBitStreamFilter::AVBitStreamFilter
next	libavcodec/avcodec.h	/^    struct AVBitStreamFilterContext *next;$/;"	m	struct:AVBitStreamFilterContext	typeref:struct:AVBitStreamFilterContext::AVBitStreamFilterContext
next	libavcodec/avcodec.h	/^    struct AVCodec *next;$/;"	m	struct:AVCodec	typeref:struct:AVCodec::AVCodec
next	libavcodec/avcodec.h	/^    struct AVCodecParser *next;$/;"	m	struct:AVCodecParser	typeref:struct:AVCodecParser::AVCodecParser
next	libavcodec/avcodec.h	/^    struct AVHWAccel *next;$/;"	m	struct:AVHWAccel	typeref:struct:AVHWAccel::AVHWAccel
next	libavcodec/crystalhd.c	/^    struct OpaqueList *next;$/;"	m	struct:OpaqueList	typeref:struct:OpaqueList::OpaqueList	file:
next	libavcodec/dv.c	/^    uint8_t  next[64];$/;"	m	struct:EncBlockInfo	file:
next	libavcodec/dvbsubdec.c	/^    struct DVBSubCLUT *next;$/;"	m	struct:DVBSubCLUT	typeref:struct:DVBSubCLUT::DVBSubCLUT	file:
next	libavcodec/dvbsubdec.c	/^    struct DVBSubObject *next;$/;"	m	struct:DVBSubObject	typeref:struct:DVBSubObject::DVBSubObject	file:
next	libavcodec/dvbsubdec.c	/^    struct DVBSubRegion *next;$/;"	m	struct:DVBSubRegion	typeref:struct:DVBSubRegion::DVBSubRegion	file:
next	libavcodec/dvbsubdec.c	/^    struct DVBSubRegionDisplay *next;$/;"	m	struct:DVBSubRegionDisplay	typeref:struct:DVBSubRegionDisplay::DVBSubRegionDisplay	file:
next	libavcodec/elbg.c	/^    struct cell_s *next;$/;"	m	struct:cell_s	typeref:struct:cell_s::cell_s	file:
next	libavcodec/flac_parser.c	/^    struct FLACHeaderMarker *next;       \/**< next CRC-8 verified header that$/;"	m	struct:FLACHeaderMarker	typeref:struct:FLACHeaderMarker::FLACHeaderMarker	file:
next	libavcodec/libdirac_libschro.h	/^    struct FfmpegDiracSchroQueueElement *next;$/;"	m	struct:FfmpegDiracSchroQueueElement	typeref:struct:FfmpegDiracSchroQueueElement::FfmpegDiracSchroQueueElement
next	libavcodec/libvpxenc.c	/^    struct FrameListData *next;$/;"	m	struct:FrameListData	typeref:struct:FrameListData::FrameListData	file:
next	libavcodec/qdm2.c	/^    struct QDM2SubPNode *next; \/\/\/< pointer to next packet in the list, NULL if leaf node$/;"	m	struct:QDM2SubPNode	typeref:struct:QDM2SubPNode::QDM2SubPNode	file:
next	libavfilter/avfiltergraph.h	/^    struct AVFilterInOut *next;$/;"	m	struct:AVFilterInOut	typeref:struct:AVFilterInOut::AVFilterInOut
next	libavfilter/libmpcodecs/pullup.h	/^    struct pullup_field *prev, *next;$/;"	m	struct:pullup_field	typeref:struct:pullup_field::
next	libavfilter/libmpcodecs/vf.h	/^    struct vf_instance *next;$/;"	m	struct:vf_instance	typeref:struct:vf_instance::vf_instance
next	libavfilter/vf_fifo.c	/^    struct BufPic     *next;$/;"	m	struct:BufPic	typeref:struct:BufPic::BufPic	file:
next	libavfilter/vf_yadif.c	/^    AVFilterBufferRef *next;$/;"	m	struct:__anon6	file:
next	libavformat/avformat.h	/^    struct AVInputFormat *next;$/;"	m	struct:AVInputFormat	typeref:struct:AVInputFormat::AVInputFormat
next	libavformat/avformat.h	/^    struct AVOutputFormat *next;$/;"	m	struct:AVOutputFormat	typeref:struct:AVOutputFormat::AVOutputFormat
next	libavformat/avformat.h	/^    struct AVPacketList *next;$/;"	m	struct:AVPacketList	typeref:struct:AVPacketList::AVPacketList
next	libavformat/avio.h	/^    struct URLProtocol *next;$/;"	m	struct:URLProtocol	typeref:struct:URLProtocol::URLProtocol
next	libavformat/mpegenc.c	/^    struct PacketDesc *next;$/;"	m	struct:PacketDesc	typeref:struct:PacketDesc::PacketDesc	file:
next	libavformat/oggdec.h	/^    struct ogg_state *next;$/;"	m	struct:ogg_state	typeref:struct:ogg_state::ogg_state
next	libavformat/oggenc.c	/^    struct OGGPageList *next;$/;"	m	struct:OGGPageList	typeref:struct:OGGPageList::OGGPageList	file:
next	libavformat/rtpdec.h	/^    struct RTPDynamicProtocolHandler_s *next;$/;"	m	struct:RTPDynamicProtocolHandler_s	typeref:struct:RTPDynamicProtocolHandler_s::RTPDynamicProtocolHandler_s
next	libavformat/rtpdec.h	/^    struct RTPPacket *next;$/;"	m	struct:RTPPacket	typeref:struct:RTPPacket::RTPPacket
next	libavformat/url.h	/^    struct URLProtocol *next;$/;"	m	struct:URLProtocol	typeref:struct:URLProtocol::URLProtocol
next	tools/graph2dot.c	/^    struct line *next;$/;"	m	struct:line	typeref:struct:line::line	file:
next2	libavfilter/x86/yadif_template.c	238;"	d	file:
next2	libavfilter/x86/yadif_template.c	241;"	d	file:
next2	libavfilter/x86/yadif_template.c	244;"	d	file:
next2	libavfilter/x86/yadif_template.c	247;"	d	file:
next_block_len_bits	libavcodec/wma.h	/^    int next_block_len_bits;                \/\/\/< log2 of next block length$/;"	m	struct:WMACodecContext
next_chunk	libavformat/isom.h	/^    int next_chunk;$/;"	m	struct:MOVStreamContext
next_chunk_is_video	libavformat/idcin.c	/^    int next_chunk_is_video;$/;"	m	struct:IdcinDemuxContext	file:
next_chunk_offset	libavformat/ipmovie.c	/^    int64_t next_chunk_offset;$/;"	m	struct:IPMVEContext	file:
next_codebook_buffer	libavcodec/vqavideo.c	/^    unsigned char *next_codebook_buffer;  \/* accumulator for next codebook *\/$/;"	m	struct:VqaContext	file:
next_codebook_buffer_index	libavcodec/vqavideo.c	/^    int next_codebook_buffer_index;$/;"	m	struct:VqaContext	file:
next_cur_index	libavcodec/mimic.c	/^    int             next_cur_index;$/;"	m	struct:__anon282	file:
next_data	libavformat/rtpdec_qcelp.c	/^    uint8_t  next_data[1 + 35*10];$/;"	m	struct:PayloadContext	file:
next_decoding	libavcodec/pthread.c	/^    int next_decoding;             \/\/\/< The next context to submit a packet to.$/;"	m	struct:FrameThreadContext	file:
next_equivalent	libavformat/avlanguage.c	/^    uint16_t next_equivalent;$/;"	m	struct:LangEntry	file:
next_feed	ffserver.c	/^    struct FFStream *next_feed;$/;"	m	struct:FFStream	typeref:struct:FFStream::FFStream	file:
next_finished	libavcodec/pthread.c	/^    int next_finished;             \/\/\/< The next context to return output from.$/;"	m	struct:FrameThreadContext	file:
next_frame	libavformat/thp.c	/^    int              next_frame;$/;"	m	struct:ThpDemuxContext	file:
next_frame_offset	libavcodec/avcodec.h	/^    int64_t next_frame_offset; \/* offset of the next frame *\/$/;"	m	struct:AVCodecParserContext
next_framep	libavcodec/vp8.h	/^    AVFrame *next_framep[4];$/;"	m	struct:__anon182
next_framesz	libavformat/thp.c	/^    int              next_framesz;$/;"	m	struct:ThpDemuxContext	file:
next_free_data_block_num	libavcodec/xvmc.h	/^    int             next_free_data_block_num;$/;"	m	struct:xvmc_pix_fmt
next_grouping	libavcodec/aacpsy.c	/^    uint8_t     next_grouping;           \/\/\/< stored grouping scheme for the next frame (in case of 8 short window sequence)$/;"	m	struct:AacPsyChannel	file:
next_lambda	libavcodec/mpegvideo.h	/^    int next_lambda;               \/\/\/< next lambda used for retrying to encode a frame$/;"	m	struct:MpegEncContext
next_mb_skipped	libavcodec/h264.h	/^    int next_mb_skipped;$/;"	m	struct:H264Context
next_output_pic	libavcodec/h264.h	/^    Picture *next_output_pic;$/;"	m	struct:H264Context
next_outputed_poc	libavcodec/h264.h	/^    int next_outputed_poc;$/;"	m	struct:H264Context
next_p_frame_damaged	libavcodec/mpegvideo.h	/^    int next_p_frame_damaged;        \/\/\/< set if the next p frame is damaged, to avoid showing trashed b frames$/;"	m	struct:MpegEncContext
next_packet	libavformat/mpegenc.c	/^    PacketDesc **next_packet;$/;"	m	struct:__anon428	file:
next_packet_start	libavcodec/wmaprodec.c	/^    int              next_packet_start;             \/\/\/< start offset of the next wma packet in the demuxer packet$/;"	m	struct:WMAProDecodeCtx	file:
next_picture	libavcodec/mpegvideo.h	/^    Picture next_picture;$/;"	m	struct:MpegEncContext
next_picture_ptr	libavcodec/mpegvideo.h	/^    Picture *next_picture_ptr;     \/\/\/< pointer to the next picture (for bidir pred)$/;"	m	struct:MpegEncContext
next_pkt_is_audio	libavformat/c93.c	/^    int next_pkt_is_audio;$/;"	m	struct:__anon482	file:
next_prev_index	libavcodec/mimic.c	/^    int             next_prev_index;$/;"	m	struct:__anon282	file:
next_pts	ffmpeg.c	/^    int64_t       next_pts;  \/* synthetic pts for cases where pkt.pts$/;"	m	struct:AVInputStream	file:
next_pts	ffmpeg/ffmpeg.c	/^    int64_t       next_pts;  \/* synthetic pts for cases where pkt.pts$/;"	m	struct:AVInputStream	file:
next_pts	libavcodec/rv34.h	/^    int cur_pts, last_pts, next_pts;$/;"	m	struct:RV34DecContext
next_pu_offset	libavcodec/dirac_parser.c	/^    int next_pu_offset;$/;"	m	struct:DiracParseUnit	file:
next_registered_avfilter_idx	libavfilter/avfilter.c	/^static int next_registered_avfilter_idx = 0;$/;"	v	file:
next_size	libavformat/rtpdec_qcelp.c	/^    int      next_size;$/;"	m	struct:PayloadContext	file:
next_slice_index	libavcodec/svq3.c	/^    int next_slice_index;$/;"	m	struct:__anon141	file:
next_startcode	libavformat/nut.h	/^    uint64_t next_startcode;     \/\/\/< stores the next startcode if it has already been parsed but the stream is not seekable$/;"	m	struct:__anon494
next_stream	libavformat/avisynth.c	/^  int next_stream;$/;"	m	struct:__anon475	file:
next_tag	libavformat/wav.c	/^static int64_t next_tag(AVIOContext *pb, unsigned int *tag)$/;"	f	file:
next_timestamp	libavformat/rtpdec_qcelp.c	/^    uint32_t next_timestamp;$/;"	m	struct:PayloadContext	file:
next_vf	libavfilter/vf_mp.c	/^    vf_instance_t next_vf;$/;"	m	struct:__anon47	file:
next_window_seq	libavcodec/aacpsy.c	/^    enum WindowSequence next_window_seq; \/\/\/< window sequence to be used in the next frame$/;"	m	struct:AacPsyChannel	typeref:enum:AacPsyChannel::WindowSequence	file:
nextpos	libavformat/smacker.c	/^    int64_t nextpos;$/;"	m	struct:SmackerContext	file:
nfds_t	libavformat/os_support.h	/^typedef unsigned long nfds_t;$/;"	t
nfloors	libavcodec/vorbisenc.c	/^    int nfloors;$/;"	m	struct:__anon194	file:
nframes	libavformat/bethsoftvid.c	/^    int nframes;$/;"	m	struct:BVID_DemuxContext	file:
nframes	libavformat/bfi.c	/^    int nframes;$/;"	m	struct:BFIContext	file:
nguardbits	libavcodec/j2k.h	/^    uint8_t  nguardbits;   \/\/\/< number of guard bits$/;"	m	struct:__anon211
nibble	libavcodec/adpcm.c	/^    int nibble;$/;"	m	struct:TrellisPath	file:
ninclpasses	libavcodec/j2k.h	/^    uint8_t ninclpasses; \/\/\/< number coding of passes included in codestream$/;"	m	struct:__anon213
nitris_compat	libavcodec/dnxhdenc.h	/^    int nitris_compat;$/;"	m	struct:DNXHDEncContext
nlayers	libavcodec/j2k.h	/^    uint8_t nlayers;          \/\/\/< number of layers$/;"	m	struct:__anon210
nlps	libavcodec/mqc.c	/^        uint8_t  nlps;$/;"	m	struct:__anon71	file:
nlvl_from	libavformat/isom.h	/^    int16_t nlvl_to, nlvl_from;$/;"	m	struct:__anon466
nlvl_to	libavformat/isom.h	/^    int16_t nlvl_to, nlvl_from;$/;"	m	struct:__anon466
nmappings	libavcodec/vorbisenc.c	/^    int nmappings;$/;"	m	struct:__anon194	file:
nmean	libavcodec/shorten.c	/^    int nmean;$/;"	m	struct:ShortenContext	file:
nmodes	libavcodec/vorbisenc.c	/^    int nmodes;$/;"	m	struct:__anon194	file:
nmps	libavcodec/mqc.c	/^        uint8_t  nmps;$/;"	m	struct:__anon71	file:
no_background	ffplay.c	/^    int no_background;$/;"	m	struct:VideoState	file:
no_launch	ffserver.c	/^static int no_launch;$/;"	v	file:
no_motion_search	libavcodec/motion_est.c	/^static inline void no_motion_search(MpegEncContext * s,$/;"	f	file:
no_repeat_mask	libavcodec/acelp_vectors.h	/^    int      no_repeat_mask;$/;"	m	struct:__anon122
no_rnd_PACK	libavcodec/sh4/dsputil_align.c	39;"	d	file:
no_rnd_avg32	libavcodec/dsputil.h	/^static inline uint32_t no_rnd_avg32(uint32_t a, uint32_t b)$/;"	f
no_rnd_avg64	libavcodec/dsputil.h	/^static inline uint64_t no_rnd_avg64(uint64_t a, uint64_t b)$/;"	f
no_rnd_avg_pixel4	libavcodec/high_bit_depth.h	31;"	d
no_rnd_avg_pixel4	libavcodec/high_bit_depth.h	64;"	d
no_rounding	libavcodec/mpegvideo.h	/^    int no_rounding;  \/**< apply no rounding to motion compensation (MPEG4, msmpeg4, ...)$/;"	m	struct:MpegEncContext
no_sub_motion_search	libavcodec/motion_est_template.c	/^static int no_sub_motion_search(MpegEncContext * s,$/;"	f	file:
node_buf	libavcodec/adpcm.c	/^    TrellisNode *node_buf;$/;"	m	struct:ADPCMContext	file:
node_buf	libavcodec/g722.c	/^    } *node_buf[2], **nodep_buf[2];$/;"	m	struct:__anon140	typeref:struct:__anon140::TrellisNode	file:
nodep_buf	libavcodec/adpcm.c	/^    TrellisNode **nodep_buf;$/;"	m	struct:ADPCMContext	file:
nodep_buf	libavcodec/g722.c	/^    } *node_buf[2], **nodep_buf[2];$/;"	m	struct:__anon140	typeref:struct:__anon140::TrellisNode	file:
nodes	libavcodec/truemotion2.c	/^    int nodes; \/\/\/< total number of nodes in tree$/;"	m	struct:TM2Huff	file:
nodes	libavformat/concat.c	/^    struct concat_nodes *nodes;    \/\/\/< list of nodes to concat$/;"	m	struct:concat_data	typeref:struct:concat_data::concat_nodes	file:
noise	libavcodec/noise_bsf.c	/^static int noise(AVBitStreamFilterContext *bsfc, AVCodecContext *avctx, const char *args,$/;"	f	file:
noise	libavfilter/libmpcodecs/vf_detc.c	/^        int noise;$/;"	m	struct:metrics	file:
noise	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct { unsigned int even, odd, noise, temp; } sad;$/;"	m	struct:frame_stats::__anon35	file:
noise	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned short int noise;$/;"	m	struct:metrics	file:
noise	libavfilter/libmpcodecs/vf_noise.c	/^        int8_t *noise;$/;"	m	struct:FilterParam	file:
noise	libavfilter/libmpcodecs/vf_noise.c	/^static void noise(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int width, int height, FilterParam *fp){$/;"	f	file:
noise_buffer	libavcodec/mlpdec.c	/^    int8_t      noise_buffer[MAX_BLOCKSIZE_POW2];$/;"	m	struct:MLPDecodeContext	file:
noise_enhancer	libavcodec/amrwbdec.c	/^static float noise_enhancer(float fixed_gain, float *prev_tr_gain,$/;"	f	file:
noise_facs	libavcodec/sbr.h	/^    float              noise_facs[3][5];$/;"	m	struct:__anon56
noise_idx	libavcodec/qdm2.c	/^    int noise_idx; \/\/\/< index for dithering noise table$/;"	m	struct:__anon200	file:
noise_index	libavcodec/wma.h	/^    int noise_index;$/;"	m	struct:WMACodecContext
noise_mult	libavcodec/wma.h	/^    float noise_mult; \/* XXX: suppress that and integrate it in the noise array *\/$/;"	m	struct:WMACodecContext
noise_reduction	libavcodec/avcodec.h	/^    int noise_reduction;$/;"	m	struct:AVCodecContext
noise_samples	libavcodec/qdm2_tablegen.h	/^static float noise_samples[128];$/;"	v
noise_shift	libavcodec/mlpdec.c	/^    uint8_t     noise_shift;$/;"	m	struct:SubStream	file:
noise_table	libavcodec/mlpdec.c	/^static const int8_t noise_table[256] = {$/;"	v	file:
noise_table	libavcodec/qdm2_tablegen.h	/^static float noise_table[4096];$/;"	v
noise_table	libavcodec/wma.h	/^    float noise_table[NOISE_TAB_SIZE];$/;"	m	struct:WMACodecContext
noise_type	libavcodec/mlpdec.c	/^    uint16_t    noise_type;$/;"	m	struct:SubStream	file:
noisegen_seed	libavcodec/mlpdec.c	/^    uint32_t    noisegen_seed;$/;"	m	struct:SubStream	file:
nomouse	libavdevice/x11grab.c	/^    int nomouse;$/;"	m	struct:x11_grab	file:
nonBQP	libpostproc/postprocess_internal.h	/^    int nonBQP;$/;"	m	struct:PPContext
nonBQPTable	libpostproc/postprocess_internal.h	/^    QP_STORE_T *nonBQPTable;$/;"	m	struct:PPContext
nonTempRandShift	libavfilter/libmpcodecs/vf_noise.c	/^static int nonTempRandShift[MAX_RES];$/;"	v	file:
nonTempRandShift_init	libavfilter/libmpcodecs/vf_noise.c	/^static int nonTempRandShift_init;$/;"	v	file:
non_b_qp	libavfilter/libmpcodecs/vf_fspp.c	/^    char *non_b_qp;$/;"	m	struct:vf_priv_s	file:
non_b_qp	libavfilter/libmpcodecs/vf_spp.c	/^        char *non_b_qp;$/;"	m	struct:vf_priv_s	file:
non_interleaved	libavformat/avidec.c	/^    int non_interleaved;$/;"	m	struct:__anon451	file:
non_lavc_opaque	libavcodec/ratecontrol.h	/^    void *non_lavc_opaque;        \/\/\/< context for non lavc rc code (for example xvid)$/;"	m	struct:RateControlContext
non_linear_qscale	libavcodec/mpeg12decdata.h	/^static const uint8_t non_linear_qscale[32] = {$/;"	v
non_simple	libavformat/matroskadec.c	/^    uint64_t non_simple;$/;"	m	struct:__anon372	file:
non_zero_count	libavcodec/h264.h	/^    uint8_t (*non_zero_count)[48];$/;"	m	struct:H264Context
nonce	libavformat/httpauth.h	/^    char nonce[300];       \/**< Server specified nonce *\/$/;"	m	struct:__anon404
nonzerobits	libavcodec/j2k.h	/^    uint8_t nonzerobits;$/;"	m	struct:__anon213
noop	libavcodec/ppc/h264_template_altivec.c	291;"	d	file:
noop	libavcodec/ppc/h264_template_altivec.c	74;"	d	file:
nop	libavcodec/arm/dsputil_iwmmxt.c	/^static void nop(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
norm_fac	libavcodec/aacpsy.c	/^    float norm_fac;     \/\/\/< normalization factor for linearization$/;"	m	struct:AacPsyBand	file:
norm_qscale	libavfilter/libmpcodecs/vf.h	/^static inline int norm_qscale(int qscale, int type)$/;"	f
normal_limit	libavcodec/vp8dsp.c	/^static av_always_inline int normal_limit(uint8_t *p, int stride, int E, int I)$/;"	f	file:
normalize_double	libavfilter/vf_crop.c	/^static inline int normalize_double(int *n, double d)$/;"	f	file:
normalize_samples	libavcodec/ac3enc.h	/^    int  (*normalize_samples)(struct AC3EncodeContext *s);$/;"	m	struct:AC3EncodeContext
normalize_samples	libavcodec/ac3enc_fixed.c	/^int AC3_NAME(normalize_samples)(AC3EncodeContext *s)$/;"	f
not_null_dc	libavcodec/vp56.h	/^    uint8_t not_null_dc;$/;"	m	struct:__anon221
nothing	libavdevice/dshow.h	/^static inline void nothing(void *foo)$/;"	f
notice	libavformat/rtsp.h	/^    int notice;$/;"	m	struct:RTSPMessageHeader
notout	libavfilter/libmpcodecs/vf_filmdint.c	/^    long notout;$/;"	m	struct:vf_priv_s	file:
now	libavcodec/cook.c	/^    int *now;$/;"	m	struct:__anon229	file:
npasses	libavcodec/j2k.h	/^    uint8_t npasses;$/;"	m	struct:__anon213
nplanes	libavfilter/libmpcodecs/pullup.h	/^    int nplanes;$/;"	m	struct:pullup_context
nplanes	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long w, h, cw, ch, stride, chroma_stride, nplanes;$/;"	m	struct:vf_priv_s	file:
nports	libavdevice/jack_audio.c	/^    int             nports;$/;"	m	struct:__anon315	file:
nqps	libavcodec/vp3.c	/^    int nqps;$/;"	m	struct:Vp3DecodeContext	file:
nr_icc_par	libavcodec/aacps.h	/^    int    nr_icc_par;$/;"	m	struct:__anon257
nr_iid_par	libavcodec/aacps.h	/^    int    nr_iid_par;$/;"	m	struct:__anon257
nr_iidicc_par_tab	libavcodec/aacps.c	/^static const int8_t nr_iidicc_par_tab[] = {$/;"	v	file:
nr_iidopd_par_tab	libavcodec/aacps.c	/^static const int8_t nr_iidopd_par_tab[] = {$/;"	v	file:
nr_ipdopd_par	libavcodec/aacps.h	/^    int    nr_ipdopd_par;$/;"	m	struct:__anon257
nresidues	libavcodec/vorbisenc.c	/^    int nresidues;$/;"	m	struct:__anon194	file:
nreslevels	libavcodec/j2k.h	/^    uint8_t nreslevels;       \/\/\/< number of resolution levels$/;"	m	struct:__anon210
nsegs	libavformat/oggdec.h	/^    int nsegs, segp;$/;"	m	struct:ogg_stream
nsignals	libavdevice/bktr.c	/^volatile sig_atomic_t nsignals;$/;"	v
nsse	libavcodec/dsputil.h	/^    me_cmp_func nsse[6];$/;"	m	struct:DSPContext
nsse16_c	libavcodec/dsputil.c	/^static int nsse16_c(void *v, uint8_t *s1, uint8_t *s2, int stride, int h){$/;"	f	file:
nsse16_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static int nsse16_mmx(void *p, uint8_t * pix1, uint8_t * pix2, int line_size, int h) {$/;"	f	file:
nsse8_c	libavcodec/dsputil.c	/^static int nsse8_c(void *v, uint8_t *s1, uint8_t *s2, int stride, int h){$/;"	f	file:
nsse8_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static int nsse8_mmx(void *p, uint8_t * pix1, uint8_t * pix2, int line_size, int h) {$/;"	f	file:
nsse_weight	libavcodec/avcodec.h	/^     int nsse_weight;$/;"	m	struct:AVCodecContext
nstreams	libavformat/oggdec.h	/^    int nstreams;$/;"	m	struct:ogg
nstreams	libavformat/oggdec.h	/^    int nstreams;$/;"	m	struct:ogg_state
nsv_codec_audio_tags	libavformat/nsvdec.c	/^static const AVCodecTag nsv_codec_audio_tags[] = {$/;"	v	file:
nsv_codec_video_tags	libavformat/nsvdec.c	/^static const AVCodecTag nsv_codec_video_tags[] = {$/;"	v	file:
nsv_parse_NSVf_header	libavformat/nsvdec.c	/^static int nsv_parse_NSVf_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
nsv_parse_NSVs_header	libavformat/nsvdec.c	/^static int nsv_parse_NSVs_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
nsv_probe	libavformat/nsvdec.c	/^static int nsv_probe(AVProbeData *p)$/;"	f	file:
nsv_read_chunk	libavformat/nsvdec.c	/^static int nsv_read_chunk(AVFormatContext *s, int fill_header)$/;"	f	file:
nsv_read_close	libavformat/nsvdec.c	/^static int nsv_read_close(AVFormatContext *s)$/;"	f	file:
nsv_read_header	libavformat/nsvdec.c	/^static int nsv_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
nsv_read_packet	libavformat/nsvdec.c	/^static int nsv_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
nsv_read_seek	libavformat/nsvdec.c	/^static int nsv_read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
nsv_resync	libavformat/nsvdec.c	/^static int nsv_resync(AVFormatContext *s)$/;"	f	file:
nsvs_file_offset	libavformat/nsvdec.c	/^    uint32_t *nsvs_file_offset;$/;"	m	struct:__anon345	file:
nsvs_timestamps	libavformat/nsvdec.c	/^    uint32_t *nsvs_timestamps;$/;"	m	struct:__anon345	file:
null_block	libavcodec/snow.c	/^static const BlockNode null_block= { \/\/FIXME add border maybe$/;"	v	file:
null_draw_slice	libavfilter/vf_drawtext.c	/^static void null_draw_slice(AVFilterLink *link, int y, int h, int slice_dir) { }$/;"	f	file:
null_draw_slice	libavfilter/vf_frei0r.c	/^static void null_draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir) { }$/;"	f	file:
null_draw_slice	libavfilter/vf_gradfun.c	/^static void null_draw_slice(AVFilterLink *link, int y, int h, int slice_dir) { }$/;"	f	file:
null_draw_slice	libavfilter/vf_hqdn3d.c	/^static void null_draw_slice(AVFilterLink *link, int y, int h, int slice_dir) { }$/;"	f	file:
null_draw_slice	libavfilter/vf_libopencv.c	/^static void null_draw_slice(AVFilterLink *link, int y, int h, int slice_dir) { }$/;"	f	file:
null_draw_slice	libavfilter/vf_mp.c	/^static void null_draw_slice(AVFilterLink *link, int y, int h, int slice_dir)$/;"	f	file:
null_draw_slice	libavfilter/vf_overlay.c	/^static void null_draw_slice(AVFilterLink *inlink, int y, int h, int slice_dir) { }$/;"	f	file:
null_draw_slice	libavfilter/vf_transpose.c	/^static void null_draw_slice(AVFilterLink *link, int y, int h, int slice_dir) { }$/;"	f	file:
null_draw_slice	libavfilter/vf_yadif.c	/^static void null_draw_slice(AVFilterLink *link, int y, int h, int slice_dir) { }$/;"	f	file:
null_end_frame	libavfilter/vf_overlay.c	/^static void null_end_frame(AVFilterLink *inlink) { }$/;"	f	file:
null_filter_samples	libavfilter/asink_anullsink.c	/^static void null_filter_samples(AVFilterLink *link, AVFilterBufferRef *samplesref) { }$/;"	f	file:
null_write_packet	libavformat/nullenc.c	/^static int null_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
num	libavcodec/truemotion2.c	/^    int num; \/\/\/< current number filled$/;"	m	struct:TM2Huff	file:
num	libavformat/asf.h	/^    int num;$/;"	m	struct:__anon399
num	libavformat/avformat.h	/^    int64_t val, num, den;$/;"	m	struct:AVFrac
num	libavformat/matroskadec.c	/^    uint64_t num;$/;"	m	struct:__anon361	file:
num	libavformat/rmenc.c	/^    int num;$/;"	m	struct:__anon382	file:
num	libavutil/opt.c	/^    int num;$/;"	m	struct:TestContext	file:
num	libavutil/rational.h	/^    int num; \/\/\/< numerator$/;"	m	struct:AVRational
numCB	libavcodec/elbg.c	/^    int numCB;$/;"	m	struct:__anon247	file:
numCB2	libavcodec/roqvideoenc.c	/^    int numCB2;$/;"	m	struct:RoqTempData	file:
numCB2	libavcodec/roqvideoenc.c	/^    int numCB2;$/;"	m	struct:__anon74	file:
numCB4	libavcodec/roqvideoenc.c	/^    int numCB4;$/;"	m	struct:RoqTempData	file:
numCB4	libavcodec/roqvideoenc.c	/^    int numCB4;$/;"	m	struct:__anon74	file:
numCoefs	libavcodec/atrac3.c	/^    int     numCoefs;$/;"	m	struct:__anon129	file:
numComponents	libavcodec/atrac3.c	/^    int               numComponents;$/;"	m	struct:__anon130	file:
numQMFSlots	libavcodec/aacps.c	35;"	d	file:
numXtiles	libavcodec/j2kdec.c	/^    int numXtiles, numYtiles;$/;"	m	struct:__anon98	file:
numXtiles	libavcodec/j2kenc.c	/^    int numXtiles, numYtiles;$/;"	m	struct:__anon63	file:
numYtiles	libavcodec/j2kdec.c	/^    int numXtiles, numYtiles;$/;"	m	struct:__anon98	file:
numYtiles	libavcodec/j2kenc.c	/^    int numXtiles, numYtiles;$/;"	m	struct:__anon63	file:
num_MBs	libavcodec/ivi_common.h	/^    int         num_MBs;   \/\/\/< number of macroblocks in this tile$/;"	m	struct:__anon106
num_aac_frames	libavcodec/aacadtsdec.h	/^    uint8_t  num_aac_frames;$/;"	m	struct:__anon121
num_audio_tracks	libavformat/bink.c	/^    uint32_t num_audio_tracks;$/;"	m	struct:__anon403	file:
num_bands	libavcodec/binkaudio.c	/^    int num_bands;$/;"	m	struct:__anon136	file:
num_bands	libavcodec/ivi_common.h	/^    uint8_t     num_bands;  \/\/\/< number of bands this plane subdivided into$/;"	m	struct:__anon108
num_bands	libavcodec/psymodel.h	/^    int     *num_bands;               \/\/\/< number of scalefactor bands for possible frame sizes$/;"	m	struct:FFPsyContext
num_bands	libavcodec/wmaprodec.c	/^    int8_t           num_bands;                     \/\/\/< number of scale factor bands$/;"	m	struct:WMAProDecodeCtx	file:
num_bfus	libavcodec/atrac1.c	/^    int                 num_bfus;                           \/\/\/< number of Block Floating Units$/;"	m	struct:__anon119	file:
num_blocks	libavcodec/ac3.h	/^    int num_blocks;                         \/\/\/< number of audio blocks$/;"	m	struct:__anon170
num_blocks	libavcodec/ac3dec.h	/^    int num_blocks;                         \/\/\/< number of audio blocks$/;"	m	struct:__anon88
num_blocks	libavcodec/alsdec.c	/^    unsigned int num_blocks;        \/\/\/< number of blocks used in the current frame$/;"	m	struct:__anon152	file:
num_blocks	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned short num_blocks;$/;"	m	struct:frame_stats	file:
num_blocks_packed	libavcodec/eatgv.c	/^    int num_blocks_packed; \/\/\/< current length of block_codebook$/;"	m	struct:TgvContext	file:
num_books	libavcodec/vorbisdec.c	/^            uint8_t       num_books;$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor0_s	file:
num_breaks	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long num_breaks;$/;"	m	struct:vf_priv_s	file:
num_bytes	libavformat/cafdec.c	/^    int64_t num_bytes;              \/\/\/< total number of bytes in stream$/;"	m	struct:__anon422	file:
num_channel	libavcodec/dcaenc.c	/^    int num_channel;$/;"	m	struct:__anon231	file:
num_channels	libavcodec/cook.c	/^    int                 num_channels;$/;"	m	struct:__anon230	file:
num_channels	libavcodec/wmaprodec.c	/^    int8_t           num_channels;                  \/\/\/< number of channels in the stream (same as AVCodecContext.num_channels)$/;"	m	struct:WMAProDecodeCtx	file:
num_channels	libavcodec/wmaprodec.c	/^    uint8_t num_channels;                                     \/\/\/< number of channels in the group$/;"	m	struct:__anon83	file:
num_channels	libavformat/electronicarts.c	/^    int num_channels;$/;"	m	struct:EaDemuxContext	file:
num_chgroups	libavcodec/wmaprodec.c	/^    uint8_t          num_chgroups;                  \/\/\/< number of channel groups$/;"	m	struct:WMAProDecodeCtx	file:
num_coded_frags	libavcodec/vp3.c	/^    int num_coded_frags[3][64];$/;"	m	struct:Vp3DecodeContext	file:
num_coeff_partitions	libavcodec/vp8.h	/^    int num_coeff_partitions;$/;"	m	struct:__anon182
num_copies	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long num_copies;$/;"	m	struct:vf_priv_s	file:
num_corr	libavcodec/ivi_common.h	/^    int             num_corr;       \/\/\/< number of correction entries$/;"	m	struct:__anon107
num_coupled	libavcodec/aac.h	/^    int num_coupled;       \/\/\/< number of target elements$/;"	m	struct:__anon243
num_cpl_bands	libavcodec/ac3dec.h	/^    int num_cpl_bands;                      \/\/\/< number of coupling bands               (ncplbnd)$/;"	m	struct:__anon88
num_cpl_bands	libavcodec/ac3enc.h	/^    int num_cpl_bands;                      \/\/\/< number of coupling bands               (ncplbnd)$/;"	m	struct:AC3EncodeContext
num_cpl_channels	libavcodec/ac3enc.h	/^    int      num_cpl_channels;                  \/\/\/< number of channels in coupling$/;"	m	struct:AC3Block
num_cpl_subbands	libavcodec/ac3enc.h	/^    int num_cpl_subbands;                   \/\/\/< number of coupling subbands            (ncplsubnd)$/;"	m	struct:AC3EncodeContext
num_entries	libavcodec/ratecontrol.h	/^    int num_entries;              \/\/\/< number of RateControlEntries$/;"	m	struct:RateControlContext
num_entries	libavcodec/tiffenc.c	/^    int num_entries;                    \/\/\/< number of entires$/;"	m	struct:TiffEncoderContext	file:
num_entries	libavformat/matroskaenc.c	/^    int                     num_entries;$/;"	m	struct:mkv_seekhead	file:
num_entries	libavformat/matroskaenc.c	/^    int             num_entries;$/;"	m	struct:__anon477	file:
num_env	libavcodec/aacps.h	/^    int    num_env;$/;"	m	struct:__anon257
num_env_old	libavcodec/aacps.h	/^    int    num_env_old;$/;"	m	struct:__anon257
num_env_tab	libavcodec/aacps.c	/^static const int8_t num_env_tab[2][4] = {$/;"	v	file:
num_exp_groups	libavcodec/ac3dec.h	/^    int num_exp_groups[AC3_MAX_CHANNELS];           \/\/\/< Number of exponent groups      (nexpgrp)$/;"	m	struct:__anon88
num_fields	libavfilter/libmpcodecs/vf_filmdint.c	/^    long num_fields;$/;"	m	struct:vf_priv_s	file:
num_frames	libavformat/rtpenc.h	/^    int num_frames;$/;"	m	struct:RTPMuxContext
num_gain_data	libavcodec/atrac3.c	/^    int   num_gain_data;$/;"	m	struct:__anon127	file:
num_h_slices	libavcodec/ffv1.c	/^    int num_h_slices;$/;"	m	struct:FFV1Context	file:
num_hblocks	libavcodec/mimic.c	/^    int             num_hblocks[3];$/;"	m	struct:__anon282	file:
num_huff_nodes	libavcodec/idcinvideo.c	/^    int num_huff_nodes[256];$/;"	m	struct:IdcinContext	file:
num_lens	libavcodec/psymodel.h	/^    int num_lens;                     \/\/\/< number of scalefactor band sets$/;"	m	struct:FFPsyContext
num_levels	libavformat/matroskadec.c	/^    int num_levels;$/;"	m	struct:__anon371	file:
num_mix_configs	libavcodec/dca.c	/^    int num_mix_configs;        \/\/\/< number of mix out configurations$/;"	m	struct:__anon93	file:
num_mvs	libavcodec/eatgv.c	/^    int num_mvs;           \/\/\/< current length of mv_codebook$/;"	m	struct:TgvContext	file:
num_mvs	libavcodec/rv34.c	/^static const int num_mvs[RV34_MB_TYPES] = { 0, 0, 1, 4, 1, 1, 0, 0, 2, 2, 2, 1 };$/;"	v	file:
num_packets	libavformat/matroskadec.c	/^    int num_packets;$/;"	m	struct:__anon371	file:
num_pal_colors	libavcodec/yop.c	/^    int num_pal_colors;$/;"	m	struct:YopDecContext	file:
num_patches	libavcodec/sbr.h	/^    unsigned           num_patches;$/;"	m	struct:__anon57
num_pixel_layouts	libavformat/mxf.c	/^static const int num_pixel_layouts = FF_ARRAY_ELEMS(ff_mxf_pixel_layouts);$/;"	v	file:
num_planes	libavfilter/libmpcodecs/mp_image.h	/^    int num_planes;$/;"	m	struct:mp_image
num_precincts_x	libavcodec/j2k.h	/^    uint16_t num_precincts_x, num_precincts_y; \/\/\/< number of precincts in x\/y direction$/;"	m	struct:__anon216
num_precincts_y	libavcodec/j2k.h	/^    uint16_t num_precincts_x, num_precincts_y; \/\/\/< number of precincts in x\/y direction$/;"	m	struct:__anon216
num_primitive_matrices	libavcodec/mlpdec.c	/^    uint8_t     num_primitive_matrices;$/;"	m	struct:SubStream	file:
num_pulse	libavcodec/aac.h	/^    int num_pulse;$/;"	m	struct:__anon242
num_rects	libavcodec/avcodec.h	/^    unsigned num_rects;$/;"	m	struct:AVSubtitle
num_released_buffers	libavcodec/pthread.c	/^    int     num_released_buffers;$/;"	m	struct:PerThreadContext	file:
num_rematrixing_bands	libavcodec/ac3dec.h	/^    int num_rematrixing_bands;              \/\/\/< number of rematrixing bands            (nrematbnd)$/;"	m	struct:__anon88
num_rematrixing_bands	libavcodec/ac3enc.h	/^    int      num_rematrixing_bands;             \/\/\/< number of rematrixing bands$/;"	m	struct:AC3Block
num_reorder_frames	libavcodec/h264.h	/^    int num_reorder_frames;$/;"	m	struct:SPS
num_rows	libavcodec/ivi_common.h	/^    int32_t     num_rows;$/;"	m	struct:__anon101
num_samples	libavformat/electronicarts.c	/^    int num_samples;$/;"	m	struct:EaDemuxContext	file:
num_saved_bits	libavcodec/wmaprodec.c	/^    int              num_saved_bits;                \/\/\/< saved number of bits$/;"	m	struct:WMAProDecodeCtx	file:
num_sfb	libavcodec/wmaprodec.c	/^    int8_t           num_sfb[WMAPRO_BLOCK_SIZES];   \/\/\/< scale factor bands per block size$/;"	m	struct:WMAProDecodeCtx	file:
num_sprite_warping_points	libavcodec/mpegvideo.h	/^    int num_sprite_warping_points;$/;"	m	struct:MpegEncContext
num_spx_bands	libavcodec/ac3dec.h	/^    int num_spx_bands;                          \/\/\/< number of spx bands                    (nspxbnds)$/;"	m	struct:__anon88
num_streams	libavformat/pmpdec.c	/^    int num_streams;$/;"	m	struct:__anon331	file:
num_subframes	libavcodec/wmaprodec.c	/^    uint8_t  num_subframes;$/;"	m	struct:__anon82	file:
num_subpackets	libavcodec/cook.c	/^    int                 num_subpackets;$/;"	m	struct:cook	file:
num_substreams	libavcodec/mlp_parser.c	/^    int num_substreams;$/;"	m	struct:MLPParseContext	file:
num_substreams	libavcodec/mlp_parser.h	/^    int num_substreams;         \/\/\/< Number of substreams within stream$/;"	m	struct:MLPHeaderInfo
num_substreams	libavcodec/mlpdec.c	/^    uint8_t     num_substreams;$/;"	m	struct:MLPDecodeContext	file:
num_superblocks	libavcodec/escape124.c	/^    unsigned num_superblocks;$/;"	m	struct:Escape124Context	file:
num_swb	libavcodec/aac.h	/^    int num_swb;                \/\/\/< number of scalefactor window bands$/;"	m	struct:__anon239
num_taps	libavcodec/sonic.c	/^    int num_taps, downsampling;$/;"	m	struct:SonicContext	file:
num_tiles	libavcodec/ivi_common.h	/^    int             num_tiles;      \/\/\/< number of tiles in this band$/;"	m	struct:__anon107
num_units_in_tick	libavcodec/h264.h	/^    uint32_t num_units_in_tick;$/;"	m	struct:SPS
num_v_slices	libavcodec/ffv1.c	/^    int num_v_slices;$/;"	m	struct:FFV1Context	file:
num_vblocks	libavcodec/mimic.c	/^    int             num_vblocks[3];$/;"	m	struct:__anon282	file:
num_vec_coeffs	libavcodec/wmaprodec.c	/^    uint16_t num_vec_coeffs;                          \/\/\/< number of vector coded coefficients$/;"	m	struct:__anon82	file:
num_vectors	libavcodec/cook.c	/^    int                 num_vectors;$/;"	m	struct:cook	file:
num_window_groups	libavcodec/aac.h	/^    int num_window_groups;$/;"	m	struct:__anon239
num_windows	libavcodec/aac.h	/^    int num_windows;$/;"	m	struct:__anon239
num_windows	libavcodec/psymodel.h	/^    int num_windows;                  \/\/\/< number of windows in a frame$/;"	m	struct:FFPsyWindowInfo
number	libavfilter/libmpcodecs/mp_image.h	/^    int number;$/;"	m	struct:mp_image
number_of_fc_indexes	libavcodec/sipr.c	/^    uint8_t number_of_fc_indexes;$/;"	m	struct:__anon112	file:
numbered_images	libavfilter/libmpcodecs/vf.h	/^    mp_image_t* numbered_images[NUM_NUMBERED_MPI];$/;"	m	struct:vf_image_context_s
numchannels	libavcodec/alac.c	/^    int numchannels;$/;"	m	struct:__anon266	file:
numpanscanwin	libavcodec/vc1.h	/^    uint8_t numpanscanwin;$/;"	m	struct:VC1Context
nums	libavcodec/truemotion2.c	/^    int *nums; \/\/\/< literals$/;"	m	struct:TM2Huff	file:
numvector_size	libavcodec/cook.c	/^    int                 numvector_size;       \/\/\/< 1 << log2_numvector_size;$/;"	m	struct:__anon230	file:
nut	libavformat/libnut.c	/^    nut_context_tt * nut;$/;"	m	struct:__anon424	file:
nut_probe	libavformat/libnut.c	/^static int nut_probe(AVProbeData *p) {$/;"	f	file:
nut_probe	libavformat/nutdec.c	/^static int nut_probe(AVProbeData *p){$/;"	f	file:
nut_read_close	libavformat/libnut.c	/^static int nut_read_close(AVFormatContext *s) {$/;"	f	file:
nut_read_close	libavformat/nutdec.c	/^static int nut_read_close(AVFormatContext *s)$/;"	f	file:
nut_read_header	libavformat/libnut.c	/^static int nut_read_header(AVFormatContext * avf, AVFormatParameters * ap) {$/;"	f	file:
nut_read_header	libavformat/nutdec.c	/^static int nut_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
nut_read_packet	libavformat/libnut.c	/^static int nut_read_packet(AVFormatContext * avf, AVPacket * pkt) {$/;"	f	file:
nut_read_packet	libavformat/nutdec.c	/^static int nut_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
nut_read_seek	libavformat/libnut.c	/^static int nut_read_seek(AVFormatContext * avf, int stream_index, int64_t target_ts, int flags) {$/;"	f	file:
nut_read_timestamp	libavformat/nutdec.c	/^static int64_t nut_read_timestamp(AVFormatContext *s, int stream_index, int64_t *pos_arg, int64_t pos_limit){$/;"	f	file:
nut_tags	libavformat/libnut.c	/^static const AVCodecTag nut_tags[] = {$/;"	v	file:
nut_write_header	libavformat/libnut.c	/^static int nut_write_header(AVFormatContext * avf) {$/;"	f	file:
nut_write_packet	libavformat/libnut.c	/^static int nut_write_packet(AVFormatContext * avf, AVPacket * pkt) {$/;"	f	file:
nut_write_trailer	libavformat/libnut.c	/^static int nut_write_trailer(AVFormatContext * avf) {$/;"	f	file:
nuv_frametype	libavformat/nuv.c	/^} nuv_frametype;$/;"	t	typeref:enum:__anon388	file:
nuv_header	libavformat/nuv.c	/^static int nuv_header(AVFormatContext *s, AVFormatParameters *ap) {$/;"	f	file:
nuv_packet	libavformat/nuv.c	/^static int nuv_packet(AVFormatContext *s, AVPacket *pkt) {$/;"	f	file:
nuv_probe	libavformat/nuv.c	/^static int nuv_probe(AVProbeData *p) {$/;"	f	file:
nv12ToUV	libswscale/x86/swscale_template.c	/^static void RENAME(nv12ToUV)(uint8_t *dstU, uint8_t *dstV,$/;"	f	file:
nv12ToUV_c	libswscale/swscale_template.c	/^static inline void nv12ToUV_c(uint8_t *dstU, uint8_t *dstV,$/;"	f	file:
nv21ToUV	libswscale/x86/swscale_template.c	/^static void RENAME(nv21ToUV)(uint8_t *dstU, uint8_t *dstV,$/;"	f	file:
nv21ToUV_c	libswscale/swscale_template.c	/^static inline void nv21ToUV_c(uint8_t *dstU, uint8_t *dstV,$/;"	f	file:
nvXXtoUV	libswscale/x86/swscale_template.c	/^static av_always_inline void RENAME(nvXXtoUV)(uint8_t *dst1, uint8_t *dst2,$/;"	f	file:
nvXXtoUV_c	libswscale/swscale_template.c	/^static inline void nvXXtoUV_c(uint8_t *dst1, uint8_t *dst2,$/;"	f	file:
nwrap	libavcodec/shorten.c	/^    int nwrap;$/;"	m	struct:ShortenContext	file:
nz_lines	libavcodec/aacpsy.c	/^    float nz_lines;     \/\/\/< number of non-zero spectral lines$/;"	m	struct:AacPsyBand	file:
o	libavfilter/libmpcodecs/vf_ivtc.c	/^    int d, e, o;$/;"	m	struct:metrics	file:
obits	libavcodec/flacenc.c	/^    int obits;$/;"	m	struct:FlacSubframe	file:
object_id	libavcodec/dvbsubdec.c	/^    int object_id;$/;"	m	struct:DVBSubObjectDisplay	file:
object_list	libavcodec/dvbsubdec.c	/^    DVBSubObject *object_list;$/;"	m	struct:DVBSubContext	file:
object_list_next	libavcodec/dvbsubdec.c	/^    struct DVBSubObjectDisplay *object_list_next;$/;"	m	struct:DVBSubObjectDisplay	typeref:struct:DVBSubObjectDisplay::DVBSubObjectDisplay	file:
object_number	libavcodec/pgssubdec.c	/^    int object_number;$/;"	m	struct:PGSSubPresentation	file:
object_type	libavcodec/aacadtsdec.h	/^    uint8_t  object_type;$/;"	m	struct:__anon121
object_type	libavcodec/mpeg4audio.h	/^    int object_type;$/;"	m	struct:__anon208
object_version	libavcodec/dvbsub.c	/^    int object_version;$/;"	m	struct:DVBSubtitleContext	file:
objecttype	libavformat/adts.h	/^    int objecttype;$/;"	m	struct:__anon431
objecttype	libavformat/rtpdec_mpeg4.c	/^    int objecttype;$/;"	m	struct:PayloadContext	file:
objs	tests/videogen.c	/^VObj objs[NB_OBJS];$/;"	v
obmc	libavcodec/mpegvideo.h	/^    int obmc;                       \/\/\/< overlapped block motion compensation$/;"	m	struct:MpegEncContext
obmc16	libavcodec/snow.c	/^static const uint8_t obmc16[256]={$/;"	v	file:
obmc32	libavcodec/snow.c	/^static const uint8_t obmc32[1024]={$/;"	v	file:
obmc4	libavcodec/snow.c	/^static const uint8_t obmc4[16]={$/;"	v	file:
obmc8	libavcodec/snow.c	/^static const uint8_t obmc8[64]={$/;"	v	file:
obmc_motion	libavcodec/mpegvideo_common.h	/^static inline void obmc_motion(MpegEncContext *s,$/;"	f
obmc_scratchpad	libavcodec/mpegvideo.h	/^    uint8_t *obmc_scratchpad;$/;"	m	struct:MpegEncContext
obmc_tab	libavcodec/snow.c	/^static const uint8_t * const obmc_tab[4]={$/;"	v	file:
oc	libavcodec/lzw.c	/^    int fc, oc;$/;"	m	struct:LZWState	file:
ocount	libavfilter/libmpcodecs/vf_divtc.c	/^      ocount, sum[5];$/;"	m	struct:vf_priv_s	file:
octave_count	libavcodec/qcelpdec.c	/^    uint8_t  octave_count;      \/*!< count the consecutive RATE_OCTAVE frames *\/$/;"	m	struct:__anon225	file:
octet_align	libavformat/rtpdec_amr.c	/^    int octet_align;$/;"	m	struct:PayloadContext	file:
octet_count	libavformat/rtpdec.h	/^    unsigned int octet_count;      \/\/ TODO: move into statistics (outgoing)$/;"	m	struct:RTPDemuxContext
octet_count	libavformat/rtpenc.h	/^    unsigned int octet_count;      \/\/ TODO: move into statistics (outgoing)$/;"	m	struct:RTPMuxContext
ocv_filter_entries	libavfilter/vf_libopencv.c	/^static OCVFilterEntry ocv_filter_entries[] = {$/;"	v	file:
odd	libavfilter/libmpcodecs/vf_detc.c	/^        int odd;$/;"	m	struct:metrics	file:
odd	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct { unsigned int even, odd, noise, temp; } sad;$/;"	m	struct:frame_stats::__anon35	file:
odd	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned short int odd;$/;"	m	struct:metrics	file:
odd_frame	libavformat/yop.c	/^    int odd_frame;$/;"	m	struct:yop_dec_context	file:
odd_table	libavcodec/sh4/idct_sh4.c	/^static const float odd_table[] __attribute__ ((aligned(8))) = {$/;"	v	file:
odml_depth	libavformat/avidec.c	/^    int odml_depth;$/;"	m	struct:__anon451	file:
odml_list	libavformat/avienc.c	/^    int64_t riff_start, movi_list, odml_list;$/;"	m	struct:__anon343	file:
off	libavcodec/bfin/dsputil_bfin.c	/^int off;$/;"	v
off	libavformat/http.c	/^    int64_t off, filesize;$/;"	m	struct:__anon462	file:
offMASK_MSHW	libavcodec/arm/simple_idct_arm.S	/^#define offMASK_MSHW 28$/;"	d
offW1	libavcodec/arm/simple_idct_arm.S	/^#define offW1  0$/;"	d
offW2	libavcodec/arm/simple_idct_arm.S	/^#define offW2  4$/;"	d
offW3	libavcodec/arm/simple_idct_arm.S	/^#define offW3  8$/;"	d
offW4	libavcodec/arm/simple_idct_arm.S	/^#define offW4  12$/;"	d
offW5	libavcodec/arm/simple_idct_arm.S	/^#define offW5  16$/;"	d
offW6	libavcodec/arm/simple_idct_arm.S	/^#define offW6  20$/;"	d
offW7	libavcodec/arm/simple_idct_arm.S	/^#define offW7  24$/;"	d
offset	libavcodec/ass_split.c	/^    int         offset;$/;"	m	struct:__anon145	file:
offset	libavcodec/ass_split.c	/^    int offset;$/;"	m	struct:__anon144	file:
offset	libavcodec/avcodec.h	/^    int64_t offset;      \/\/\/< byte offset from starting packet start$/;"	m	struct:AVCodecParserContext
offset	libavcodec/cljr.c	/^    int offset[4];$/;"	m	struct:CLJRContext	file:
offset	libavcodec/dca.c	/^    int offset;                 \/\/\/< code values offset$/;"	m	struct:__anon92	file:
offset	libavcodec/flac_parser.c	/^    int offset;       \/**< byte offset from start of FLACParseContext->buffer *\/$/;"	m	struct:FLACHeaderMarker	file:
offset	libavcodec/qdm2.c	/^    int16_t offset;$/;"	m	struct:__anon198	file:
offset	libavcodec/shorten.c	/^    int32_t *offset[MAX_CHANNELS];$/;"	m	struct:ShortenContext	file:
offset	libavcodec/vcr1.c	/^    int offset[4];$/;"	m	struct:VCR1Context	file:
offset	libavcodec/wavpack.c	/^    int offset;$/;"	m	struct:SavedContext	file:
offset	libavdevice/dshow.h	/^    int offset;$/;"	m	struct:GUIDoffset
offset	libavfilter/libmpcodecs/vf_spp.c	/^static const uint8_t offset[127][2]= {$/;"	v	file:
offset	libavfilter/libmpcodecs/vf_uspp.c	/^static const uint8_t offset[511][2]= {$/;"	v	file:
offset	libavformat/movenc.h	/^    int offset;$/;"	m	struct:HintSample
offset	libavformat/mxf.h	/^    int64_t offset;$/;"	m	struct:__anon325
offset	libavformat/mxfenc.c	/^    uint64_t offset;$/;"	m	struct:__anon457	file:
offset	libavformat/r3d.c	/^    uint64_t offset;$/;"	m	struct:__anon487	file:
offset	libavformat/rtpdec_mpeg4.c	/^    uint32_t    offset;$/;"	m	struct:__anon463	file:
offset	libavutil/opt.h	/^    int offset;$/;"	m	struct:AVOption
offset1	libavcodec/truespeech.c	/^    int offset1[2];     \/\/< 8-bit value, used in one copying offset$/;"	m	struct:__anon160	file:
offset2	libavcodec/truespeech.c	/^    int offset2[4];     \/\/< 7-bit value, encodes offsets for copying and for two-point filter$/;"	m	struct:__anon160	file:
offset_bits_len	libavcodec/motionpixels.c	/^    int offset_bits_len;$/;"	m	struct:MotionPixelsContext	file:
offset_count	libavcodec/ass_split.c	/^    int         offset_count;$/;"	m	struct:__anon145	file:
offset_for_non_ref_pic	libavcodec/h264.h	/^    int offset_for_non_ref_pic;$/;"	m	struct:SPS
offset_for_ref_frame	libavcodec/h264.h	/^    short offset_for_ref_frame[256]; \/\/FIXME dyn aloc?$/;"	m	struct:SPS
offset_for_top_to_bottom_field	libavcodec/h264.h	/^    int offset_for_top_to_bottom_field;$/;"	m	struct:SPS
offset_plus1	libavutil/pixdesc.h	/^    uint16_t offset_plus1 :3;$/;"	m	struct:AVComponentDescriptor
offset_table	libavcodec/vc1dec.c	/^static const int offset_table[6] = { 0, 1, 3, 7, 15, 31 };$/;"	v	file:
offsetof	libavutil/internal.h	93;"	d
ofields	libavfilter/libmpcodecs/pullup.h	/^    struct pullup_buffer **ifields, *ofields[2];$/;"	m	struct:pullup_frame	typeref:struct:pullup_frame::
oformat	libavformat/avformat.h	/^    struct AVOutputFormat *oformat;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVOutputFormat
ogg	libavformat/oggdec.h	/^struct ogg {$/;"	s
ogg_buffer_data	libavformat/oggenc.c	/^static int ogg_buffer_data(AVFormatContext *s, AVStream *st,$/;"	f	file:
ogg_buffer_page	libavformat/oggenc.c	/^static int ogg_buffer_page(AVFormatContext *s, OGGStreamContext *oggstream)$/;"	f	file:
ogg_build_flac_headers	libavformat/oggenc.c	/^static int ogg_build_flac_headers(AVCodecContext *avctx,$/;"	f	file:
ogg_build_speex_headers	libavformat/oggenc.c	/^static int ogg_build_speex_headers(AVCodecContext *avctx,$/;"	f	file:
ogg_calc_pts	libavformat/oggdec.c	/^static int64_t ogg_calc_pts(AVFormatContext *s, int idx, int64_t *dts)$/;"	f	file:
ogg_codec	libavformat/oggdec.h	/^struct ogg_codec {$/;"	s
ogg_codecs	libavformat/oggdec.c	/^static const struct ogg_codec * const ogg_codecs[] = {$/;"	v	file:
ogg_compare_granule	libavformat/oggenc.c	/^static int ogg_compare_granule(AVFormatContext *s, OGGPage *next, OGGPage *page)$/;"	f	file:
ogg_find_codec	libavformat/oggdec.c	/^static const struct ogg_codec *ogg_find_codec(uint8_t *buf, int size)$/;"	f	file:
ogg_find_stream	libavformat/oggdec.h	/^ogg_find_stream (struct ogg * ogg, int serial)$/;"	f
ogg_get_headers	libavformat/oggdec.c	/^static int ogg_get_headers(AVFormatContext *s)$/;"	f	file:
ogg_get_length	libavformat/oggdec.c	/^static int ogg_get_length(AVFormatContext *s)$/;"	f	file:
ogg_gptopts	libavformat/oggdec.h	/^ogg_gptopts (AVFormatContext * s, int i, uint64_t gp, int64_t *dts)$/;"	f
ogg_granule_to_timestamp	libavformat/oggenc.c	/^static int64_t ogg_granule_to_timestamp(OGGStreamContext *oggstream, int64_t granule)$/;"	f	file:
ogg_muxer_class	libavformat/oggenc.c	/^static const AVClass ogg_muxer_class = {$/;"	v	file:
ogg_new_buf	libavformat/oggdec.c	/^static int ogg_new_buf(struct ogg *ogg, int idx)$/;"	f	file:
ogg_new_stream	libavformat/oggdec.c	/^static int ogg_new_stream(AVFormatContext *s, uint32_t serial, int new_avstream)$/;"	f	file:
ogg_packet	libavformat/oggdec.c	/^static int ogg_packet(AVFormatContext *s, int *str, int *dstart, int *dsize,$/;"	f	file:
ogg_page_packets	libavformat/oggparsespeex.c	/^static int ogg_page_packets(struct ogg_stream *os)$/;"	f	file:
ogg_probe	libavformat/oggdec.c	/^static int ogg_probe(AVProbeData *p)$/;"	f	file:
ogg_read_close	libavformat/oggdec.c	/^static int ogg_read_close(AVFormatContext *s)$/;"	f	file:
ogg_read_header	libavformat/oggdec.c	/^static int ogg_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
ogg_read_packet	libavformat/oggdec.c	/^static int ogg_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
ogg_read_page	libavformat/oggdec.c	/^static int ogg_read_page(AVFormatContext *s, int *str)$/;"	f	file:
ogg_read_seek	libavformat/oggdec.c	/^static int ogg_read_seek(AVFormatContext *s, int stream_index,$/;"	f	file:
ogg_read_timestamp	libavformat/oggdec.c	/^static int64_t ogg_read_timestamp(AVFormatContext *s, int stream_index,$/;"	f	file:
ogg_reset	libavformat/oggdec.c	/^static int ogg_reset(struct ogg *ogg)$/;"	f	file:
ogg_reset_cur_page	libavformat/oggenc.c	/^static int ogg_reset_cur_page(OGGStreamContext *oggstream)$/;"	f	file:
ogg_restore	libavformat/oggdec.c	/^static int ogg_restore(AVFormatContext *s, int discard)$/;"	f	file:
ogg_save	libavformat/oggdec.c	/^static int ogg_save(AVFormatContext *s)$/;"	f	file:
ogg_state	libavformat/oggdec.h	/^struct ogg_state {$/;"	s
ogg_stream	libavformat/oggdec.h	/^struct ogg_stream {$/;"	s
ogg_update_checksum	libavformat/oggenc.c	/^static void ogg_update_checksum(AVFormatContext *s, AVIOContext *pb, int64_t crc_offset)$/;"	f	file:
ogg_write_header	libavformat/oggenc.c	/^static int ogg_write_header(AVFormatContext *s)$/;"	f	file:
ogg_write_packet	libavformat/oggenc.c	/^static int ogg_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
ogg_write_page	libavformat/oggenc.c	/^static int ogg_write_page(AVFormatContext *s, OGGPage *page, int extra_flags)$/;"	f	file:
ogg_write_pages	libavformat/oggenc.c	/^static void ogg_write_pages(AVFormatContext *s, int flush)$/;"	f	file:
ogg_write_trailer	libavformat/oggenc.c	/^static int ogg_write_trailer(AVFormatContext *s)$/;"	f	file:
ogg_write_vorbiscomment	libavformat/oggenc.c	/^static uint8_t *ogg_write_vorbiscomment(int offset, int bitexact,$/;"	f	file:
oggcelt_private	libavformat/oggparsecelt.c	/^struct oggcelt_private {$/;"	s	file:
oggvorbis_encode_close	libavcodec/libvorbis.c	/^static av_cold int oggvorbis_encode_close(AVCodecContext *avccontext) {$/;"	f	file:
oggvorbis_encode_frame	libavcodec/libvorbis.c	/^static int oggvorbis_encode_frame(AVCodecContext *avccontext,$/;"	f	file:
oggvorbis_encode_init	libavcodec/libvorbis.c	/^static av_cold int oggvorbis_encode_init(AVCodecContext *avccontext) {$/;"	f	file:
oggvorbis_init_encoder	libavcodec/libvorbis.c	/^static av_cold int oggvorbis_init_encoder(vorbis_info *vi, AVCodecContext *avccontext) {$/;"	f	file:
oggvorbis_private	libavformat/oggparsevorbis.c	/^struct oggvorbis_private {$/;"	s	file:
ogm_chapter	libavformat/oggparsevorbis.c	/^static int ogm_chapter(AVFormatContext *as, uint8_t *key, uint8_t *val)$/;"	f	file:
ogm_dshow_header	libavformat/oggparseogm.c	/^ogm_dshow_header(AVFormatContext *s, int idx)$/;"	f	file:
ogm_header	libavformat/oggparseogm.c	/^ogm_header(AVFormatContext *s, int idx)$/;"	f	file:
ogm_packet	libavformat/oggparseogm.c	/^ogm_packet(AVFormatContext *s, int idx)$/;"	f	file:
oh_expr	libavfilter/vf_crop.c	/^    char x_expr[256], y_expr[256], ow_expr[256], oh_expr[256];$/;"	m	struct:__anon5	file:
oldDSCF	libavcodec/mpc.h	/^    int oldDSCF[2][BANDS];$/;"	m	struct:__anon179
old_dirac_gptopts	libavformat/oggparsedirac.c	/^static uint64_t old_dirac_gptopts(AVFormatContext *s, int idx, uint64_t gp,$/;"	f	file:
old_dirac_header	libavformat/oggparsedirac.c	/^static int old_dirac_header(AVFormatContext *s, int idx)$/;"	f	file:
old_energy	libavcodec/ra144.h	/^    unsigned int     old_energy;        \/\/\/< previous frame energy$/;"	m	struct:__anon167
old_ff_y_dc_scale_table	libavcodec/msmpeg4data.c	/^const uint8_t old_ff_y_dc_scale_table[32]={$/;"	v
old_flac_header	libavformat/oggparseflac.c	/^old_flac_header (AVFormatContext * s, int idx)$/;"	f	file:
old_floor	libavcodec/imc.c	/^    float old_floor[BANDS];$/;"	m	struct:__anon90	file:
old_format	libavformat/rmdec.c	/^    int old_format;$/;"	m	struct:__anon436	file:
old_planes	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned char **old_planes;$/;"	m	struct:vf_priv_s	file:
old_twopassbuffer	libavcodec/libxvidff.c	/^    char *old_twopassbuffer;       \/**< Old character buffer (two-pass) *\/$/;"	m	struct:xvid_context	file:
oldtty	ffmpeg.c	/^static struct termios oldtty;$/;"	v	typeref:struct:termios	file:
oldtty	ffmpeg/ffmpeg.c	/^static struct termios oldtty;$/;"	v	typeref:struct:termios	file:
oledate_to_iso8601	libavformat/wtvdec.c	/^static int oledate_to_iso8601(char *buf, int buf_size, int64_t value)$/;"	f	file:
oma_read_header	libavformat/oma.c	/^static int oma_read_header(AVFormatContext *s,$/;"	f	file:
oma_read_packet	libavformat/oma.c	/^static int oma_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
oma_read_probe	libavformat/oma.c	/^static int oma_read_probe(AVProbeData *p)$/;"	f	file:
one	libavcodec/wavpack.c	/^    int zero, one, zeroes;$/;"	m	struct:WavpackFrameContext	file:
one_div_log2	libavcodec/imc.c	/^    float one_div_log2;$/;"	m	struct:__anon90	file:
one_state	libavcodec/rangecoder.h	/^    uint8_t  one_state[256];$/;"	m	struct:RangeCoder
oneoff	tests/fate-run.sh	/^oneoff(){$/;"	f
onid	libavformat/mpegtsenc.c	/^    int onid;$/;"	m	struct:MpegTSWrite	file:
op	libavcodec/anm.c	/^static inline int op(uint8_t **dst, const uint8_t *dst_end,$/;"	f	file:
op	libavcodec/libvorbis.c	/^    ogg_packet op;$/;"	m	struct:OggVorbisContext	file:
op1a_ul	libavformat/mxfenc.c	/^static const uint8_t op1a_ul[]                     = { 0x06,0x0E,0x2B,0x34,0x04,0x01,0x01,0x01,0x0D,0x01,0x02,0x01,0x01,0x01,0x09,0x00 };$/;"	v	file:
op2_avg	libavcodec/dsputil_template.c	1332;"	d	file:
op2_avg	libavcodec/dsputil_template.c	1347;"	d	file:
op2_avg	libavcodec/sh4/qpel.c	1284;"	d	file:
op2_avg	libavcodec/sh4/qpel.c	1298;"	d	file:
op2_put	libavcodec/dsputil_template.c	1333;"	d	file:
op2_put	libavcodec/dsputil_template.c	1348;"	d	file:
op2_put	libavcodec/sh4/qpel.c	1285;"	d	file:
op2_put	libavcodec/sh4/qpel.c	1299;"	d	file:
op_avg	libavcodec/dsputil.c	1319;"	d	file:
op_avg	libavcodec/dsputil.c	1328;"	d	file:
op_avg	libavcodec/dsputil_template.c	1329;"	d	file:
op_avg	libavcodec/dsputil_template.c	1345;"	d	file:
op_avg	libavcodec/dsputil_template.c	751;"	d	file:
op_avg	libavcodec/dsputil_template.c	757;"	d	file:
op_avg	libavcodec/dsputil_template.c	881;"	d	file:
op_avg	libavcodec/dsputil_template.c	886;"	d	file:
op_avg	libavcodec/ppc/dsputil_altivec.c	664;"	d	file:
op_avg	libavcodec/rv30dsp.c	244;"	d	file:
op_avg	libavcodec/rv40dsp.c	185;"	d	file:
op_avg	libavcodec/rv40dsp.c	191;"	d	file:
op_avg	libavcodec/rv40dsp.c	281;"	d	file:
op_avg	libavcodec/sh4/qpel.c	1281;"	d	file:
op_avg	libavcodec/sh4/qpel.c	1296;"	d	file:
op_avg	libavcodec/sh4/qpel.c	315;"	d	file:
op_avg	libavcodec/sh4/qpel.c	320;"	d	file:
op_avg	libavcodec/sh4/qpel.c	500;"	d	file:
op_avg	libavcodec/sh4/qpel.c	505;"	d	file:
op_avg	libavcodec/sh4/qpel.c	886;"	d	file:
op_avg	libavcodec/sh4/qpel.c	895;"	d	file:
op_avg	libavcodec/vc1dsp.c	633;"	d	file:
op_avg1	libavcodec/cavsdsp.c	487;"	d	file:
op_avg2	libavcodec/cavsdsp.c	488;"	d	file:
op_avg3	libavcodec/cavsdsp.c	489;"	d	file:
op_avg4	libavcodec/cavsdsp.c	490;"	d	file:
op_avg_no_rnd	libavcodec/dsputil.c	1320;"	d	file:
op_avg_no_rnd	libavcodec/dsputil.c	1329;"	d	file:
op_avg_no_rnd	libavcodec/sh4/qpel.c	887;"	d	file:
op_avg_no_rnd	libavcodec/sh4/qpel.c	896;"	d	file:
op_fill_func	libavcodec/dsputil.h	/^typedef void (*op_fill_func)(uint8_t *block\/*align width (8 or 16)*\/, uint8_t value, int line_size, int h);$/;"	t
op_pixels_func	libavcodec/dsputil.h	/^typedef void (*op_pixels_func)(uint8_t *block\/*align width (8 or 16)*\/, const uint8_t *pixels\/*align 1*\/, int line_size, int h);$/;"	t
op_put	libavcodec/dsputil.c	1321;"	d	file:
op_put	libavcodec/dsputil.c	1330;"	d	file:
op_put	libavcodec/dsputil_template.c	1331;"	d	file:
op_put	libavcodec/dsputil_template.c	1346;"	d	file:
op_put	libavcodec/dsputil_template.c	753;"	d	file:
op_put	libavcodec/dsputil_template.c	758;"	d	file:
op_put	libavcodec/dsputil_template.c	882;"	d	file:
op_put	libavcodec/dsputil_template.c	887;"	d	file:
op_put	libavcodec/rv30dsp.c	245;"	d	file:
op_put	libavcodec/rv40dsp.c	186;"	d	file:
op_put	libavcodec/rv40dsp.c	192;"	d	file:
op_put	libavcodec/rv40dsp.c	282;"	d	file:
op_put	libavcodec/sh4/qpel.c	1283;"	d	file:
op_put	libavcodec/sh4/qpel.c	1297;"	d	file:
op_put	libavcodec/sh4/qpel.c	316;"	d	file:
op_put	libavcodec/sh4/qpel.c	321;"	d	file:
op_put	libavcodec/sh4/qpel.c	501;"	d	file:
op_put	libavcodec/sh4/qpel.c	506;"	d	file:
op_put	libavcodec/sh4/qpel.c	888;"	d	file:
op_put	libavcodec/sh4/qpel.c	897;"	d	file:
op_put	libavcodec/vc1dsp.c	632;"	d	file:
op_put1	libavcodec/cavsdsp.c	483;"	d	file:
op_put2	libavcodec/cavsdsp.c	484;"	d	file:
op_put3	libavcodec/cavsdsp.c	485;"	d	file:
op_put4	libavcodec/cavsdsp.c	486;"	d	file:
op_put_no_rnd	libavcodec/dsputil.c	1322;"	d	file:
op_put_no_rnd	libavcodec/dsputil.c	1331;"	d	file:
op_put_no_rnd	libavcodec/sh4/qpel.c	889;"	d	file:
op_put_no_rnd	libavcodec/sh4/qpel.c	898;"	d	file:
op_scale1	libavcodec/h264dsp_template.c	102;"	d	file:
op_scale1	libavcodec/h264dsp_template.c	30;"	d	file:
op_scale2	libavcodec/h264dsp_template.c	103;"	d	file:
op_scale2	libavcodec/h264dsp_template.c	31;"	d	file:
opaque	libavcodec/avcodec.h	/^    void *opaque;$/;"	m	struct:AVCodecContext
opaque	libavcodec/mpegvideo.h	/^    void *opaque;              \/\/\/< private data for the user$/;"	m	struct:MpegEncContext
opaque	libavformat/avio.h	/^    void *opaque;           \/**< A private pointer, passed to the read\/write\/seek\/...$/;"	m	struct:__anon396
opaque	libavformat/httpauth.h	/^    char opaque[300];      \/**< A server-specified string that should be$/;"	m	struct:__anon404
opaque	libavformat/mpegts.c	/^    void *opaque;$/;"	m	struct:MpegTSPESFilter	file:
opaque	libavformat/mpegts.c	/^    void *opaque;$/;"	m	struct:MpegTSSectionFilter	file:
opaque	libavformat/mpegtsenc.c	/^    void *opaque;$/;"	m	struct:MpegTSSection	file:
opaque	libavutil/eval.c	/^    void *opaque;$/;"	m	struct:Parser	file:
opaque_list_pop	libavcodec/crystalhd.c	/^static OpaqueList *opaque_list_pop(CHDContext *priv, uint64_t fake_timestamp)$/;"	f	file:
opaque_list_push	libavcodec/crystalhd.c	/^static uint64_t opaque_list_push(CHDContext *priv, uint64_t reordered_opaque,$/;"	f	file:
opcode	libavcodec/h264.h	/^    MMCOOpcode opcode;$/;"	m	struct:MMCO
opd_hist	libavcodec/aacps.h	/^    int8_t opd_hist[PS_MAX_NR_IIDICC];$/;"	m	struct:__anon257
opd_par	libavcodec/aacps.h	/^    int8_t opd_par[PS_MAX_NUM_ENV][PS_MAX_NR_IIDICC]; \/\/<Overall Phase Difference Parameters$/;"	m	struct:__anon257
open	libavfilter/libmpcodecs/vf_fixpts.c	/^static int open(vf_instance_t *vf, char *args)$/;"	f	file:
open	libavformat/os_support.c	33;"	d	file:
open	libavformat/os_support.h	50;"	d
open_audio	doc/examples/muxing-example.c	/^static void open_audio(AVFormatContext *oc, AVStream *st)$/;"	f	file:
open_input	libavformat/applehttp.c	/^static int open_input(struct variant *var)$/;"	f	file:
open_input_file	ffprobe.c	/^static int open_input_file(AVFormatContext **fmt_ctx_ptr, const char *filename)$/;"	f	file:
open_input_stream	ffserver.c	/^static int open_input_stream(HTTPContext *c, const char *info)$/;"	f	file:
open_parser	ffserver.c	/^static void open_parser(AVFormatContext *s, int i)$/;"	f	file:
open_video	doc/examples/muxing-example.c	/^static void open_video(AVFormatContext *oc, AVStream *st)$/;"	f	file:
operation	libavformat/matroskadec.c	/^    MatroskaTrackOperation operation;$/;"	m	struct:__anon361	file:
opt	libavcodec/nellymoserenc.c	/^    float           (*opt )[NELLY_BANDS];$/;"	m	struct:NellyMoserEncodeContext	file:
opt_audio_channels	ffmpeg.c	/^static int opt_audio_channels(const char *opt, const char *arg)$/;"	f	file:
opt_audio_channels	ffmpeg/ffmpeg.c	/^static int opt_audio_channels(const char *opt, const char *arg)$/;"	f	file:
opt_audio_codec	ffserver.c	/^static enum CodecID opt_audio_codec(const char *arg)$/;"	f	file:
opt_audio_rate	ffmpeg.c	/^static int opt_audio_rate(const char *opt, const char *arg)$/;"	f	file:
opt_audio_rate	ffmpeg/ffmpeg.c	/^static int opt_audio_rate(const char *opt, const char *arg)$/;"	f	file:
opt_audio_sample_fmt	ffmpeg.c	/^static int opt_audio_sample_fmt(const char *opt, const char *arg)$/;"	f	file:
opt_audio_sample_fmt	ffmpeg/ffmpeg.c	/^static int opt_audio_sample_fmt(const char *opt, const char *arg)$/;"	f	file:
opt_bitrate	ffmpeg.c	/^static int opt_bitrate(const char *opt, const char *arg)$/;"	f	file:
opt_bitrate	ffmpeg/ffmpeg.c	/^static int opt_bitrate(const char *opt, const char *arg)$/;"	f	file:
opt_bsf	ffmpeg.c	/^static int opt_bsf(const char *opt, const char *arg)$/;"	f	file:
opt_bsf	ffmpeg/ffmpeg.c	/^static int opt_bsf(const char *opt, const char *arg)$/;"	f	file:
opt_bsfs	cmdutils.c	/^int opt_bsfs(const char *opt, const char *arg)$/;"	f
opt_bsfs	ffmpeg/cmdutils.c	/^int opt_bsfs(const char *opt, const char *arg)$/;"	f
opt_codec	ffmpeg.c	/^static int opt_codec(const char *opt, const char *arg)$/;"	f	file:
opt_codec	ffmpeg/ffmpeg.c	/^static int opt_codec(const char *opt, const char *arg)$/;"	f	file:
opt_codec_tag	ffmpeg.c	/^static int opt_codec_tag(const char *opt, const char *arg)$/;"	f	file:
opt_codec_tag	ffmpeg/ffmpeg.c	/^static int opt_codec_tag(const char *opt, const char *arg)$/;"	f	file:
opt_codecs	cmdutils.c	/^int opt_codecs(const char *opt, const char *arg)$/;"	f
opt_codecs	ffmpeg/cmdutils.c	/^int opt_codecs(const char *opt, const char *arg)$/;"	f
opt_debug	ffserver.c	/^static void opt_debug(void)$/;"	f	file:
opt_default	cmdutils.c	/^int opt_default(const char *opt, const char *arg){$/;"	f
opt_default	ffmpeg/cmdutils.c	/^int opt_default(const char *opt, const char *arg){$/;"	f
opt_default2	cmdutils.c	/^static int opt_default2(const char *opt, const char *arg)$/;"	f	file:
opt_default2	ffmpeg/cmdutils.c	/^static int opt_default2(const char *opt, const char *arg)$/;"	f	file:
opt_duration	ffplay.c	/^static int opt_duration(const char *opt, const char *arg)$/;"	f	file:
opt_filters	cmdutils.c	/^int opt_filters(const char *opt, const char *arg)$/;"	f
opt_filters	ffmpeg/cmdutils.c	/^int opt_filters(const char *opt, const char *arg)$/;"	f
opt_find	libavcodec/options.c	/^static const AVOption *opt_find(void *obj, const char *name, const char *unit, int opt_flags, int search_flags)$/;"	f	file:
opt_find	libavformat/options.c	/^static const AVOption *opt_find(void *obj, const char *name, const char *unit, int opt_flags, int search_flags)$/;"	f	file:
opt_find	libavutil/log.h	/^    const struct AVOption* (*opt_find)(void *obj, const char *name, const char *unit,$/;"	m	struct:__anon308	typeref:struct:__anon308::opt_find
opt_format	ffmpeg.c	/^static int opt_format(const char *opt, const char *arg)$/;"	f	file:
opt_format	ffmpeg/ffmpeg.c	/^static int opt_format(const char *opt, const char *arg)$/;"	f	file:
opt_format	ffplay.c	/^static int opt_format(const char *opt, const char *arg)$/;"	f	file:
opt_format	ffprobe.c	/^static int opt_format(const char *opt, const char *arg)$/;"	f	file:
opt_formats	cmdutils.c	/^int opt_formats(const char *opt, const char *arg)$/;"	f
opt_formats	ffmpeg/cmdutils.c	/^int opt_formats(const char *opt, const char *arg)$/;"	f
opt_frame_aspect_ratio	ffmpeg.c	/^static int opt_frame_aspect_ratio(const char *opt, const char *arg)$/;"	f	file:
opt_frame_aspect_ratio	ffmpeg/ffmpeg.c	/^static int opt_frame_aspect_ratio(const char *opt, const char *arg)$/;"	f	file:
opt_frame_crop	ffmpeg.c	/^static int opt_frame_crop(const char *opt, const char *arg)$/;"	f	file:
opt_frame_crop	ffmpeg/ffmpeg.c	/^static int opt_frame_crop(const char *opt, const char *arg)$/;"	f	file:
opt_frame_pix_fmt	ffmpeg.c	/^static int opt_frame_pix_fmt(const char *opt, const char *arg)$/;"	f	file:
opt_frame_pix_fmt	ffmpeg/ffmpeg.c	/^static int opt_frame_pix_fmt(const char *opt, const char *arg)$/;"	f	file:
opt_frame_pix_fmt	ffplay.c	/^static int opt_frame_pix_fmt(const char *opt, const char *arg)$/;"	f	file:
opt_frame_rate	ffmpeg.c	/^static int opt_frame_rate(const char *opt, const char *arg)$/;"	f	file:
opt_frame_rate	ffmpeg/ffmpeg.c	/^static int opt_frame_rate(const char *opt, const char *arg)$/;"	f	file:
opt_frame_size	ffmpeg.c	/^static int opt_frame_size(const char *opt, const char *arg)$/;"	f	file:
opt_frame_size	ffmpeg/ffmpeg.c	/^static int opt_frame_size(const char *opt, const char *arg)$/;"	f	file:
opt_frame_size	ffplay.c	/^static int opt_frame_size(const char *opt, const char *arg)$/;"	f	file:
opt_height	ffplay.c	/^static int opt_height(const char *opt, const char *arg)$/;"	f	file:
opt_help	ffmpeg.c	/^static int opt_help(const char *opt, const char *arg)$/;"	f	file:
opt_help	ffmpeg/ffmpeg.c	/^static int opt_help(const char *opt, const char *arg)$/;"	f	file:
opt_help	ffplay.c	/^static int opt_help(const char *opt, const char *arg)$/;"	f	file:
opt_help	ffprobe.c	/^static int opt_help(const char *opt, const char *arg)$/;"	f	file:
opt_help	ffserver.c	/^static int opt_help(const char *opt, const char *arg)$/;"	f	file:
opt_input_file	ffmpeg.c	/^static int opt_input_file(const char *opt, const char *filename)$/;"	f	file:
opt_input_file	ffmpeg/ffmpeg.c	/^static int opt_input_file(const char *opt, const char *filename)$/;"	f	file:
opt_input_file	ffplay.c	/^static int opt_input_file(const char *opt, const char *filename)$/;"	f	file:
opt_input_file	ffprobe.c	/^static int opt_input_file(const char *opt, const char *arg)$/;"	f	file:
opt_input_ts_offset	ffmpeg.c	/^static int opt_input_ts_offset(const char *opt, const char *arg)$/;"	f	file:
opt_input_ts_offset	ffmpeg/ffmpeg.c	/^static int opt_input_ts_offset(const char *opt, const char *arg)$/;"	f	file:
opt_input_ts_scale	ffmpeg.c	/^static int opt_input_ts_scale(const char *opt, const char *arg)$/;"	f	file:
opt_input_ts_scale	ffmpeg/ffmpeg.c	/^static int opt_input_ts_scale(const char *opt, const char *arg)$/;"	f	file:
opt_inter_matrix	ffmpeg.c	/^static int opt_inter_matrix(const char *opt, const char *arg)$/;"	f	file:
opt_inter_matrix	ffmpeg/ffmpeg.c	/^static int opt_inter_matrix(const char *opt, const char *arg)$/;"	f	file:
opt_intra_matrix	ffmpeg.c	/^static int opt_intra_matrix(const char *opt, const char *arg)$/;"	f	file:
opt_intra_matrix	ffmpeg/ffmpeg.c	/^static int opt_intra_matrix(const char *opt, const char *arg)$/;"	f	file:
opt_license	cmdutils.c	/^int opt_license(const char *opt, const char *arg)$/;"	f
opt_license	ffmpeg/cmdutils.c	/^int opt_license(const char *opt, const char *arg)$/;"	f
opt_list	libavutil/opt.c	/^static void opt_list(void *obj, void *av_log_obj, const char *unit,$/;"	f	file:
opt_loglevel	cmdutils.c	/^int opt_loglevel(const char *opt, const char *arg)$/;"	f
opt_loglevel	ffmpeg/cmdutils.c	/^int opt_loglevel(const char *opt, const char *arg)$/;"	f
opt_map	ffmpeg.c	/^static int opt_map(const char *opt, const char *arg)$/;"	f	file:
opt_map	ffmpeg/ffmpeg.c	/^static int opt_map(const char *opt, const char *arg)$/;"	f	file:
opt_map_chapters	ffmpeg.c	/^static int opt_map_chapters(const char *opt, const char *arg)$/;"	f	file:
opt_map_chapters	ffmpeg/ffmpeg.c	/^static int opt_map_chapters(const char *opt, const char *arg)$/;"	f	file:
opt_map_meta_data	ffmpeg.c	/^static int opt_map_meta_data(const char *opt, const char *arg)$/;"	f	file:
opt_map_meta_data	ffmpeg/ffmpeg.c	/^static int opt_map_meta_data(const char *opt, const char *arg)$/;"	f	file:
opt_map_metadata	ffmpeg.c	/^static int opt_map_metadata(const char *opt, const char *arg)$/;"	f	file:
opt_map_metadata	ffmpeg/ffmpeg.c	/^static int opt_map_metadata(const char *opt, const char *arg)$/;"	f	file:
opt_me_threshold	ffmpeg.c	/^static int opt_me_threshold(const char *opt, const char *arg)$/;"	f	file:
opt_me_threshold	ffmpeg/ffmpeg.c	/^static int opt_me_threshold(const char *opt, const char *arg)$/;"	f	file:
opt_metadata	ffmpeg.c	/^static int opt_metadata(const char *opt, const char *arg)$/;"	f	file:
opt_metadata	ffmpeg/ffmpeg.c	/^static int opt_metadata(const char *opt, const char *arg)$/;"	f	file:
opt_name_count	cmdutils.c	/^static int opt_name_count;$/;"	v	file:
opt_name_count	ffmpeg/cmdutils.c	/^static int opt_name_count;$/;"	v	file:
opt_names	cmdutils.c	/^const char **opt_names;$/;"	v
opt_names	ffmpeg/cmdutils.c	/^const char **opt_names;$/;"	v
opt_new_stream	ffmpeg.c	/^static int opt_new_stream(const char *opt, const char *arg)$/;"	f	file:
opt_new_stream	ffmpeg/ffmpeg.c	/^static int opt_new_stream(const char *opt, const char *arg)$/;"	f	file:
opt_order	libavcodec/alsdec.c	/^    unsigned int *opt_order;        \/\/\/< contains opt_order flags for all channels$/;"	m	struct:__anon152	file:
opt_order	libavcodec/alsdec.c	/^    unsigned int *opt_order;        \/\/\/< prediction order of this block$/;"	m	struct:__anon153	file:
opt_output_file	ffmpeg.c	/^static int opt_output_file(const char *opt, const char *filename)$/;"	f	file:
opt_output_file	ffmpeg/ffmpeg.c	/^static int opt_output_file(const char *opt, const char *filename)$/;"	f	file:
opt_pad	ffmpeg.c	/^static int opt_pad(const char *opt, const char *arg) {$/;"	f	file:
opt_pad	ffmpeg/ffmpeg.c	/^static int opt_pad(const char *opt, const char *arg) {$/;"	f	file:
opt_pass	ffmpeg.c	/^static int opt_pass(const char *opt, const char *arg)$/;"	f	file:
opt_pass	ffmpeg/ffmpeg.c	/^static int opt_pass(const char *opt, const char *arg)$/;"	f	file:
opt_passlogfile	ffmpeg.c	/^static int opt_passlogfile(const char *opt, const char *arg)$/;"	f	file:
opt_passlogfile	ffmpeg/ffmpeg.c	/^static int opt_passlogfile(const char *opt, const char *arg)$/;"	f	file:
opt_pix_fmts	cmdutils.c	/^int opt_pix_fmts(const char *opt, const char *arg)$/;"	f
opt_pix_fmts	ffmpeg/cmdutils.c	/^int opt_pix_fmts(const char *opt, const char *arg)$/;"	f
opt_preset	ffmpeg.c	/^static int opt_preset(const char *opt, const char *arg)$/;"	f	file:
opt_preset	ffmpeg/ffmpeg.c	/^static int opt_preset(const char *opt, const char *arg)$/;"	f	file:
opt_pretty	ffprobe.c	/^static void opt_pretty(void)$/;"	f	file:
opt_programid	ffmpeg.c	/^static int opt_programid = 0;$/;"	v	file:
opt_programid	ffmpeg/ffmpeg.c	/^static int opt_programid = 0;$/;"	v	file:
opt_protocols	cmdutils.c	/^int opt_protocols(const char *opt, const char *arg)$/;"	f
opt_protocols	ffmpeg/cmdutils.c	/^int opt_protocols(const char *opt, const char *arg)$/;"	f
opt_qscale	ffmpeg.c	/^static int opt_qscale(const char *opt, const char *arg)$/;"	f	file:
opt_qscale	ffmpeg/ffmpeg.c	/^static int opt_qscale(const char *opt, const char *arg)$/;"	f	file:
opt_recording_time	ffmpeg.c	/^static int opt_recording_time(const char *opt, const char *arg)$/;"	f	file:
opt_recording_time	ffmpeg/ffmpeg.c	/^static int opt_recording_time(const char *opt, const char *arg)$/;"	f	file:
opt_recording_timestamp	ffmpeg.c	/^static int opt_recording_timestamp(const char *opt, const char *arg)$/;"	f	file:
opt_recording_timestamp	ffmpeg/ffmpeg.c	/^static int opt_recording_timestamp(const char *opt, const char *arg)$/;"	f	file:
opt_seek	ffplay.c	/^static int opt_seek(const char *opt, const char *arg)$/;"	f	file:
opt_shortest	ffmpeg.c	/^static int opt_shortest = 0;$/;"	v	file:
opt_shortest	ffmpeg/ffmpeg.c	/^static int opt_shortest = 0;$/;"	v	file:
opt_show_mode	ffplay.c	/^static int opt_show_mode(const char *opt, const char *arg)$/;"	f	file:
opt_start_time	ffmpeg.c	/^static int opt_start_time(const char *opt, const char *arg)$/;"	f	file:
opt_start_time	ffmpeg/ffmpeg.c	/^static int opt_start_time(const char *opt, const char *arg)$/;"	f	file:
opt_streamid	ffmpeg.c	/^static int opt_streamid(const char *opt, const char *arg)$/;"	f	file:
opt_streamid	ffmpeg/ffmpeg.c	/^static int opt_streamid(const char *opt, const char *arg)$/;"	f	file:
opt_sync	ffplay.c	/^static int opt_sync(const char *opt, const char *arg)$/;"	f	file:
opt_target	ffmpeg.c	/^static int opt_target(const char *opt, const char *arg)$/;"	f	file:
opt_target	ffmpeg/ffmpeg.c	/^static int opt_target(const char *opt, const char *arg)$/;"	f	file:
opt_thread_count	ffmpeg.c	/^static int opt_thread_count(const char *opt, const char *arg)$/;"	f	file:
opt_thread_count	ffmpeg/ffmpeg.c	/^static int opt_thread_count(const char *opt, const char *arg)$/;"	f	file:
opt_thread_count	ffplay.c	/^static int opt_thread_count(const char *opt, const char *arg)$/;"	f	file:
opt_timelimit	cmdutils.c	/^int opt_timelimit(const char *opt, const char *arg)$/;"	f
opt_timelimit	ffmpeg/cmdutils.c	/^int opt_timelimit(const char *opt, const char *arg)$/;"	f
opt_top_field_first	ffmpeg.c	/^static int opt_top_field_first(const char *opt, const char *arg)$/;"	f	file:
opt_top_field_first	ffmpeg/ffmpeg.c	/^static int opt_top_field_first(const char *opt, const char *arg)$/;"	f	file:
opt_values	cmdutils.c	/^const char **opt_values;$/;"	v
opt_values	ffmpeg/cmdutils.c	/^const char **opt_values;$/;"	v
opt_verbose	ffmpeg.c	/^static int opt_verbose(const char *opt, const char *arg)$/;"	f	file:
opt_verbose	ffmpeg/ffmpeg.c	/^static int opt_verbose(const char *opt, const char *arg)$/;"	f	file:
opt_version	cmdutils.c	/^int opt_version(const char *opt, const char *arg) {$/;"	f
opt_version	ffmpeg/cmdutils.c	/^int opt_version(const char *opt, const char *arg) {$/;"	f
opt_video_channel	ffmpeg.c	/^static int opt_video_channel(const char *opt, const char *arg)$/;"	f	file:
opt_video_channel	ffmpeg/ffmpeg.c	/^static int opt_video_channel(const char *opt, const char *arg)$/;"	f	file:
opt_video_codec	ffserver.c	/^static enum CodecID opt_video_codec(const char *arg)$/;"	f	file:
opt_video_rc_override_string	ffmpeg.c	/^static int opt_video_rc_override_string(const char *opt, const char *arg)$/;"	f	file:
opt_video_rc_override_string	ffmpeg/ffmpeg.c	/^static int opt_video_rc_override_string(const char *opt, const char *arg)$/;"	f	file:
opt_video_standard	ffmpeg.c	/^static int opt_video_standard(const char *opt, const char *arg)$/;"	f	file:
opt_video_standard	ffmpeg/ffmpeg.c	/^static int opt_video_standard(const char *opt, const char *arg)$/;"	f	file:
opt_vstats	ffmpeg.c	/^static int opt_vstats(const char *opt, const char *arg)$/;"	f	file:
opt_vstats	ffmpeg/ffmpeg.c	/^static int opt_vstats(const char *opt, const char *arg)$/;"	f	file:
opt_vstats_file	ffmpeg.c	/^static int opt_vstats_file(const char *opt, const char *arg)$/;"	f	file:
opt_vstats_file	ffmpeg/ffmpeg.c	/^static int opt_vstats_file(const char *opt, const char *arg)$/;"	f	file:
opt_width	ffplay.c	/^static int opt_width(const char *opt, const char *arg)$/;"	f	file:
optimum_block_height	libavcodec/flashsv2enc.c	/^static int optimum_block_height(FlashSV2Context * s)$/;"	f	file:
optimum_block_width	libavcodec/flashsv2enc.c	/^static int optimum_block_width(FlashSV2Context * s)$/;"	f	file:
optimum_dist	libavcodec/flashsv2enc.c	/^static int optimum_dist(FlashSV2Context * s)$/;"	f	file:
optimum_use15_7	libavcodec/flashsv2enc.c	/^static int optimum_use15_7(FlashSV2Context * s)$/;"	f	file:
option	libavutil/log.h	/^    const struct AVOption *option;$/;"	m	struct:__anon308	typeref:struct:__anon308::AVOption
options	ffmpeg.c	/^static const OptionDef options[] = {$/;"	v	file:
options	ffmpeg.c	/^static const OptionDef options[];$/;"	v	file:
options	ffmpeg/ffmpeg.c	/^static const OptionDef options[] = {$/;"	v	file:
options	ffmpeg/ffmpeg.c	/^static const OptionDef options[];$/;"	v	file:
options	ffplay.c	/^static const OptionDef options[] = {$/;"	v	file:
options	ffprobe.c	/^static const OptionDef options[] = {$/;"	v	file:
options	ffprobe.c	/^static const OptionDef options[];$/;"	v	file:
options	ffserver.c	/^static const OptionDef options[] = {$/;"	v	file:
options	ffserver.c	/^static const OptionDef options[];$/;"	v	file:
options	libavcodec/aacenc.h	/^    AACEncOptions options;                       \/\/\/< encoding options$/;"	m	struct:AACEncContext
options	libavcodec/ac3enc.h	/^    AC3EncOptions options;                  \/\/\/< encoding options$/;"	m	struct:AC3EncodeContext
options	libavcodec/ac3enc_combined.c	/^    AC3EncOptions options;                  \/\/\/< encoding options$/;"	m	struct:CombineContext	file:
options	libavcodec/crystalhd.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavcodec/dnxhdenc.c	/^static const AVOption options[]={$/;"	v	file:
options	libavcodec/flacenc.c	/^    CompressionOptions options;$/;"	m	struct:FlacEncodeContext	file:
options	libavcodec/flacenc.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavcodec/libopencore-amr.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavcodec/libvo-amrwbenc.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavcodec/libvorbis.c	/^static const AVOption options[]={$/;"	v	file:
options	libavcodec/libvpxenc.c	/^static const AVOption options[]={$/;"	v	file:
options	libavcodec/libx264.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavcodec/options.c	/^static const AVOption options[]={$/;"	v	file:
options	libavcodec/rawdec.c	/^static const AVOption options[]={$/;"	v	file:
options	libavcodec/resample.c	/^static const AVOption options[] = {{NULL}};$/;"	v	file:
options	libavdevice/alsa-audio-dec.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavdevice/bktr.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavdevice/dv1394.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavdevice/fbdev.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavdevice/libdc1394.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavdevice/oss_audio.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavdevice/sdl.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavdevice/sndio_dec.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavdevice/v4l.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavdevice/v4l2.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavdevice/vfwcap.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavdevice/x11grab.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/avidec.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/avio.c	/^static const AVOption options[] = {{NULL}};$/;"	v	file:
options	libavformat/crypto.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/http.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/img2.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/movenc.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/mp3enc.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/mpegts.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/mpegtsenc.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/oggenc.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/options.c	/^static const AVOption options[]={$/;"	v	file:
options	libavformat/rtpenc.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/rtspdec.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/rtspenc.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/spdifenc.c	/^static const AVOption options[] = {$/;"	v	file:
options	libavformat/tty.c	/^static const AVOption options[] = {$/;"	v	file:
options	libswscale/options.c	/^static const AVOption options[] = {$/;"	v	file:
opts	libavfilter/libmpcodecs/vf.h	/^    const void* opts;$/;"	m	struct:vf_info_s
or	libavcodec/wavpack.c	/^    int and, or, shift;$/;"	m	struct:WavpackFrameContext	file:
order	libavcodec/aac.h	/^    int order[8][4];$/;"	m	struct:__anon240
order	libavcodec/flacenc.c	/^    int order;$/;"	m	struct:FlacSubframe	file:
order	libavcodec/iirfilter.c	/^    int   order;$/;"	m	struct:FFIIRFilterCoeffs	file:
order	libavcodec/mlp.h	/^    uint8_t     order; \/\/\/< number of taps in filter$/;"	m	struct:__anon77
order	libavcodec/vorbisdec.c	/^            uint8_t       order;$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor0_s	file:
order	libavfilter/libmpcodecs/vf_kerndeint.c	/^    int    order;$/;"	m	struct:vf_priv_s	file:
order	libavformat/gxfenc.c	/^    unsigned order;   \/\/\/< interleaving order$/;"	m	struct:GXFStreamContext	file:
order	libavformat/mxfenc.c	/^    int order;               \/\/\/< interleaving order if dts are equal$/;"	m	struct:__anon458	file:
order_MODE_10k2	libavcodec/amrnbdata.h	/^static const uint8_t order_MODE_10k2[] = {$/;"	v
order_MODE_12k2	libavcodec/amrnbdata.h	/^static const uint8_t order_MODE_12k2[] = {$/;"	v
order_MODE_12k65	libavcodec/amrwbdata.h	/^static const uint16_t order_MODE_12k65[] = {$/;"	v
order_MODE_14k25	libavcodec/amrwbdata.h	/^static const uint16_t order_MODE_14k25[] = {$/;"	v
order_MODE_15k85	libavcodec/amrwbdata.h	/^static const uint16_t order_MODE_15k85[] = {$/;"	v
order_MODE_18k25	libavcodec/amrwbdata.h	/^static const uint16_t order_MODE_18k25[] = {$/;"	v
order_MODE_19k85	libavcodec/amrwbdata.h	/^static const uint16_t order_MODE_19k85[] = {$/;"	v
order_MODE_23k05	libavcodec/amrwbdata.h	/^static const uint16_t order_MODE_23k05[] = {$/;"	v
order_MODE_23k85	libavcodec/amrwbdata.h	/^static const uint16_t order_MODE_23k85[] = {$/;"	v
order_MODE_4k75	libavcodec/amrnbdata.h	/^static const uint8_t order_MODE_4k75[] = {$/;"	v
order_MODE_5k15	libavcodec/amrnbdata.h	/^static const uint8_t order_MODE_5k15[] = {$/;"	v
order_MODE_5k9	libavcodec/amrnbdata.h	/^static const uint8_t order_MODE_5k9[] = {$/;"	v
order_MODE_6k60	libavcodec/amrwbdata.h	/^static const uint16_t order_MODE_6k60[] = {$/;"	v
order_MODE_6k7	libavcodec/amrnbdata.h	/^static const uint8_t order_MODE_6k7[] = {$/;"	v
order_MODE_7k4	libavcodec/amrnbdata.h	/^static const uint8_t order_MODE_7k4[] = {$/;"	v
order_MODE_7k95	libavcodec/amrnbdata.h	/^static const uint8_t order_MODE_7k95[] = {$/;"	v
order_MODE_8k85	libavcodec/amrwbdata.h	/^static const uint16_t order_MODE_8k85[] = {$/;"	v
org_height	libavcodec/mjpegdec.h	/^    int org_height;  \/* size given at codec init *\/$/;"	m	struct:MJpegDecodeContext
orient	libavcodec/intrax8.h	/^    int orient;$/;"	m	struct:__anon134
orig_fmt	libavfilter/libmpcodecs/vf.h	/^    int orig_width, orig_height, orig_fmt;$/;"	m	struct:vf_format_context_t
orig_height	libavcodec/mpegvideo.h	/^    int orig_width, orig_height;$/;"	m	struct:MpegEncContext
orig_height	libavfilter/libmpcodecs/vf.h	/^    int orig_width, orig_height, orig_fmt;$/;"	m	struct:vf_format_context_t
orig_width	libavcodec/mpegvideo.h	/^    int orig_width, orig_height;$/;"	m	struct:MpegEncContext
orig_width	libavfilter/libmpcodecs/vf.h	/^    int orig_width, orig_height, orig_fmt;$/;"	m	struct:vf_format_context_t
origin	libavcodec/ass_split.h	/^    void (*origin)(void *priv, int x, int y);$/;"	m	struct:__anon252
original	libavcodec/ac3.h	/^    int original;$/;"	m	struct:AC3EncOptions
original_network_id	libavformat/mpegtsenc.c	/^    int original_network_id;$/;"	m	struct:MpegTSWrite	file:
orthogonalize	libavcodec/ra144enc.c	/^static void orthogonalize(float *v, const float *u)$/;"	f	file:
oss_demuxer_class	libavdevice/oss_audio.c	/^static const AVClass oss_demuxer_class = {$/;"	v	file:
out	libavfilter/libmpcodecs/vf_softpulldown.c	/^    long long out;$/;"	m	struct:vf_priv_s	file:
out	libavfilter/vf_yadif.c	/^    AVFilterBufferRef *out;$/;"	m	struct:__anon6	file:
out	libavutil/lzo.c	/^    uint8_t *out_start, *out, *out_end;$/;"	m	struct:LZOContext	file:
outSamples	libavcodec/atrac3.c	/^    float               outSamples[2048];$/;"	m	struct:__anon131	file:
out_1	libswscale/yuv2rgb.c	/^        char out_1 = 0, out_2 = 0;$/;"	v
out_2	libswscale/yuv2rgb.c	/^        char out_1 = 0, out_2 = 0;$/;"	v
out_abgr	libswscale/ppc/yuv2rgb_altivec.c	444;"	d	file:
out_argb	libswscale/ppc/yuv2rgb_altivec.c	447;"	d	file:
out_bgr24	libswscale/ppc/yuv2rgb_altivec.c	449;"	d	file:
out_bgra	libswscale/ppc/yuv2rgb_altivec.c	445;"	d	file:
out_bps	libavcodec/vmdav.c	/^    int out_bps;$/;"	m	struct:VmdAudioContext	file:
out_buf	libavcodec/roqvideo.h	/^    uint8_t *out_buf;$/;"	m	struct:RoqContext
out_buf	libavfilter/avfilter.h	/^    AVFilterBufferRef *out_buf;$/;"	m	struct:AVFilterLink
out_buf	libavformat/spdifenc.c	/^    uint8_t *out_buf;               \/\/\/< pointer to the outgoing data before byte-swapping$/;"	m	struct:IEC61937Context	file:
out_buffer	libavformat/mms.h	/^    uint8_t out_buffer[512];            \/\/\/< Buffer for outgoing packet.$/;"	m	struct:__anon455
out_bytes	libavformat/spdifenc.c	/^    int out_bytes;                  \/\/\/< amount of outgoing bytes$/;"	m	struct:IEC61937Context	file:
out_channels	libavcodec/ac3dec.h	/^    int out_channels;                           \/\/\/< number of output channels$/;"	m	struct:__anon88
out_channels	libavcodec/audioconvert.c	/^    int in_channels, out_channels;$/;"	m	struct:AVAudioConvert	file:
out_chlayouts	libavfilter/avfilter.h	/^    AVFilterFormats *out_chlayouts;$/;"	m	struct:AVFilterLink
out_dec	libavfilter/libmpcodecs/vf_filmdint.c	/^    long in_inc, out_dec, iosync;$/;"	m	struct:vf_priv_s	file:
out_end	libavutil/lzo.c	/^    uint8_t *out_start, *out, *out_end;$/;"	m	struct:LZOContext	file:
out_file	ffmpeg.c	/^    int out_file;$/;"	m	struct:AVChapterMap	file:
out_file	ffmpeg/ffmpeg.c	/^    int out_file;$/;"	m	struct:AVChapterMap	file:
out_format	libavcodec/mpegvideo.h	/^    enum OutputFormat out_format; \/\/\/< output format$/;"	m	struct:MpegEncContext	typeref:enum:MpegEncContext::OutputFormat
out_formats	libavfilter/avfilter.h	/^    AVFilterFormats *out_formats;$/;"	m	struct:AVFilterLink
out_pic	libavcodec/libx264.c	/^    AVFrame         out_pic;$/;"	m	struct:X264Context	file:
out_pic	libavcodec/libxavs.c	/^    AVFrame         out_pic;$/;"	m	struct:XavsContext	file:
out_pkt	libavformat/rtmpproto.c	/^    RTMPPacket    out_pkt;                    \/\/\/< rtmp packet, created from flv a\/v or metadata (for output)$/;"	m	struct:RTMPContext	file:
out_rgb24	libswscale/ppc/yuv2rgb_altivec.c	448;"	d	file:
out_rgba	libswscale/ppc/yuv2rgb_altivec.c	446;"	d	file:
out_samplerate	libavformat/matroskadec.c	/^    double   out_samplerate;$/;"	m	struct:__anon358	file:
out_samples	libavcodec/imc.c	/^    float *out_samples;$/;"	m	struct:__anon90	file:
out_size	libavformat/xa.c	/^    uint32_t out_size;$/;"	m	struct:MaxisXADemuxContext	file:
out_start	libavutil/lzo.c	/^    uint8_t *out_start, *out, *out_end;$/;"	m	struct:LZOContext	file:
out_video_filter	ffplay.c	/^    AVFilterContext *out_video_filter;          \/\/\/<the last filter in the video chain$/;"	m	struct:VideoState	file:
outbuf	libavfilter/libmpcodecs/vf_mcdeint.c	/^    uint8_t *outbuf;$/;"	m	struct:vf_priv_s	file:
outbuf	libavfilter/libmpcodecs/vf_uspp.c	/^    uint8_t *outbuf;$/;"	m	struct:vf_priv_s	file:
outbuf_size	libavfilter/libmpcodecs/vf_mcdeint.c	/^    int outbuf_size;$/;"	m	struct:vf_priv_s	file:
outbuf_size	libavfilter/libmpcodecs/vf_uspp.c	/^    int outbuf_size;$/;"	m	struct:vf_priv_s	file:
outbuffer	libavfilter/libmpcodecs/vf_screenshot.c	/^    uint8_t *outbuffer;$/;"	m	struct:vf_priv_s	file:
outbuffer	libavformat/crypto.c	/^            outbuffer[BLOCKSIZE*MAX_BUFFER_BLOCKS];$/;"	m	struct:__anon432	file:
outbuffer_size	libavfilter/libmpcodecs/vf_screenshot.c	/^    int outbuffer_size;$/;"	m	struct:vf_priv_s	file:
outdata	libavformat/crypto.c	/^    int indata, indata_used, outdata;$/;"	m	struct:__anon432	file:
outfile	tests/audiogen.c	/^FILE *outfile;$/;"	v
outfmt	libavfilter/libmpcodecs/vf_delogo.c	/^    unsigned int outfmt;$/;"	m	struct:vf_priv_s	file:
outfmt	libavfilter/libmpcodecs/vf_noise.c	/^        unsigned int outfmt;$/;"	m	struct:vf_priv_s	file:
outfmt	libavfilter/libmpcodecs/vf_unsharp.c	/^    unsigned int outfmt;$/;"	m	struct:vf_priv_s	file:
outframes	libavfilter/libmpcodecs/vf_detc.c	/^        int inframes, outframes;$/;"	m	struct:vf_priv_s	file:
outframes	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long outframes;$/;"	m	struct:vf_priv_s	file:
outframes	libavfilter/libmpcodecs/vf_ivtc.c	/^    int inframes, outframes;$/;"	m	struct:vf_priv_s	file:
outgoing_packet_seq	libavformat/mmst.c	/^    int outgoing_packet_seq;             \/\/\/< Outgoing packet sequence number.$/;"	m	struct:__anon341	file:
outptr	libavformat/crypto.c	/^    uint8_t *outptr;$/;"	m	struct:__anon432	file:
output	libavcodec/dca.c	/^    int output;                 \/\/\/< type of output$/;"	m	struct:__anon93	file:
output	libavcodec/msvideo1enc.c	/^    int output[16*3];$/;"	m	struct:Msvideo1EncContext	file:
output2	libavcodec/msvideo1enc.c	/^    int output2[16*3];$/;"	m	struct:Msvideo1EncContext	file:
output_audio_block	libavcodec/ac3enc.c	/^static void output_audio_block(AC3EncodeContext *s, int blk)$/;"	f	file:
output_buffer	libavcodec/qdm2.c	/^    float output_buffer[QDM2_MAX_FRAME_SIZE * MPA_MAX_CHANNELS * 2];$/;"	m	struct:__anon200	file:
output_bytes	libavcodec/lzwenc.c	/^    int output_bytes;        \/\/\/< Number of written bytes$/;"	m	struct:LZWEncodeState	file:
output_channels	libavcodec/resample.c	/^    int input_channels, output_channels, filter_channels;$/;"	m	struct:ReSampleContext	file:
output_cond	libavcodec/pthread.c	/^    pthread_cond_t output_cond;     \/\/\/< Used by the main thread to wait for frames to finish.$/;"	m	struct:PerThreadContext	file:
output_configure	libavcodec/aacdec.c	/^static av_cold int output_configure(AACContext *ac,$/;"	f	file:
output_configured	libavcodec/aac.h	/^    enum OCStatus output_configured;$/;"	m	struct:__anon246	typeref:enum:__anon246::OCStatus
output_count	libavfilter/avfilter.h	/^    unsigned output_count;          \/\/\/< number of output pads$/;"	m	struct:AVFilterContext
output_data	libavcodec/aac.h	/^    float *output_data[MAX_CHANNELS];                 \/\/\/< Points to each element's 'ret' buffer (PCM output).$/;"	m	struct:__anon246
output_data	libavcodec/mlpdec.c	/^static int output_data(MLPDecodeContext *m, unsigned int substr,$/;"	f	file:
output_data_internal	libavcodec/mlpdec.c	/^static int output_data_internal(MLPDecodeContext *m, unsigned int substr,$/;"	f	file:
output_files	ffmpeg.c	/^static AVFormatContext *output_files[MAX_FILES];$/;"	v	file:
output_files	ffmpeg/ffmpeg.c	/^static AVFormatContext *output_files[MAX_FILES];$/;"	v	file:
output_frame	libavcodec/ac3enc.c	/^static void output_frame(AC3EncodeContext *s, unsigned char *frame)$/;"	f	file:
output_frame_end	libavcodec/ac3enc.c	/^static void output_frame_end(AC3EncodeContext *s)$/;"	f	file:
output_frame_header	libavcodec/ac3enc.h	/^    void (*output_frame_header)(struct AC3EncodeContext *s);$/;"	m	struct:AC3EncodeContext
output_immediate	libavformat/movenchint.c	/^static void output_immediate(const uint8_t *data, int size,$/;"	f	file:
output_match	libavformat/movenchint.c	/^static void output_match(AVIOContext *out, int match_sample,$/;"	f	file:
output_mode	libavcodec/ac3dec.h	/^    int output_mode;                            \/\/\/< output channel configuration$/;"	m	struct:__anon88
output_packet	ffmpeg.c	/^static int output_packet(AVInputStream *ist, int ist_index,$/;"	f	file:
output_packet	ffmpeg/ffmpeg.c	/^static int output_packet(AVInputStream *ist, int ist_index,$/;"	f	file:
output_packet	libavformat/mpegenc.c	/^static int output_packet(AVFormatContext *ctx, int flush){$/;"	f	file:
output_pads	libavfilter/avfilter.h	/^    AVFilterPad   *output_pads;     \/\/\/< array of output pads$/;"	m	struct:AVFilterContext
output_pixel	libswscale/swscale.c	305;"	d	file:
output_pixel	libswscale/swscale.c	356;"	d	file:
output_pixel	libswscale/swscale.c	509;"	d	file:
output_pixel	libswscale/swscale.c	589;"	d	file:
output_pixel	libswscale/swscale.c	631;"	d	file:
output_pixel	libswscale/swscale.c	726;"	d	file:
output_pixels	libswscale/swscale.c	731;"	d	file:
output_pixels	libswscale/swscale.c	837;"	d	file:
output_ready	libavcodec/crystalhd.c	/^    uint8_t output_ready;$/;"	m	struct:__anon268	file:
output_shift	libavcodec/mlpdec.c	/^    int8_t      output_shift[MAX_CHANNELS];$/;"	m	struct:SubStream	file:
output_streams_for_file	ffmpeg.c	/^static AVOutputStream **output_streams_for_file[MAX_FILES] = { NULL };$/;"	v	file:
output_streams_for_file	ffmpeg/ffmpeg.c	/^static AVOutputStream **output_streams_for_file[MAX_FILES] = { NULL };$/;"	v	file:
output_video_filter	ffmpeg.c	/^    AVFilterContext *output_video_filter;$/;"	m	struct:AVOutputStream	file:
output_video_filter	ffmpeg/ffmpeg.c	/^    AVFilterContext *output_video_filter;$/;"	m	struct:AVOutputStream	file:
outputed_poc	libavcodec/h264.h	/^    int outputed_poc;$/;"	m	struct:H264Context
outputs	libavfilter/avfilter.h	/^    AVFilterLink **outputs;         \/\/\/< array of pointers to output links$/;"	m	struct:AVFilterContext
outputs	libavfilter/avfilter.h	/^    const AVFilterPad *outputs; \/\/\/< NULL terminated list of outputs. NULL if none$/;"	m	struct:AVFilter
outputsamples_buffer	libavcodec/alac.c	/^    int32_t *outputsamples_buffer[MAX_CHANNELS];$/;"	m	struct:__anon266	file:
outstanding_byte	libavcodec/rangecoder.h	/^    int outstanding_byte;$/;"	m	struct:RangeCoder
outstanding_count	libavcodec/cabac.h	/^    int outstanding_count;$/;"	m	struct:CABACContext
outstanding_count	libavcodec/rangecoder.h	/^    int outstanding_count;$/;"	m	struct:RangeCoder
over_flags_plane	libavcodec/vc1.h	/^    uint8_t* over_flags_plane;   \/\/\/< Overflags bitplane$/;"	m	struct:VC1Context
overflg_is_raw	libavcodec/vc1.h	/^    int overflg_is_raw;$/;"	m	struct:VC1Context
overlap	libavcodec/vc1.h	/^    int overlap;          \/\/\/< overlapped transforms in use$/;"	m	struct:VC1Context
overlap_and_window	libavcodec/nellymoserdec.c	/^static void overlap_and_window(NellyMoserDecodeContext *s, float *state, float *audio, float *a_in)$/;"	f	file:
overlap_len	libavcodec/binkaudio.c	/^    int overlap_len;        \/\/\/< overlap size (samples)$/;"	m	struct:__anon136	file:
overlay	libavdevice/sdl.c	/^    SDL_Overlay *overlay;$/;"	m	struct:__anon309	file:
overlay_fmt	libavdevice/sdl.c	/^    enum PixelFormat pix_fmt; int overlay_fmt;$/;"	m	struct:sdl_overlay_pix_fmt_entry	file:
overlay_fmt	libavdevice/sdl.c	/^    int overlay_fmt;$/;"	m	struct:__anon309	file:
overlay_height	libavdevice/sdl.c	/^    int overlay_width, overlay_height;$/;"	m	struct:__anon309	file:
overlay_width	libavdevice/sdl.c	/^    int overlay_width, overlay_height;$/;"	m	struct:__anon309	file:
overpicref	libavfilter/vf_overlay.c	/^    AVFilterBufferRef *overpicref;$/;"	m	struct:__anon7	file:
overread	libavcodec/parser.h	/^    int overread;               \/\/\/< the number of bytes which where irreversibly read from the next frame$/;"	m	struct:ParseContext
overread_err	libavcodec/aacdec.c	/^static const char overread_err[] = "Input buffer exhausted before END element found\\n";$/;"	v	file:
overread_index	libavcodec/dirac_parser.c	/^    int overread_index;$/;"	m	struct:DiracParseContext	file:
overread_index	libavcodec/parser.h	/^    int overread_index;         \/\/\/< the index into ParseContext.buffer of the overread bytes$/;"	m	struct:ParseContext
ow_expr	libavfilter/vf_crop.c	/^    char x_expr[256], y_expr[256], ow_expr[256], oh_expr[256];$/;"	m	struct:__anon5	file:
own_data	libavformat/movenc.h	/^    int own_data;$/;"	m	struct:HintSample
owner2	libavcodec/mpegvideo.h	/^    struct MpegEncContext *owner2; \/\/\/< pointer to the MpegEncContext that allocated this picture$/;"	m	struct:Picture	typeref:struct:Picture::MpegEncContext
p	libavfilter/libmpcodecs/vf_ivtc.c	/^    int t, s, p;$/;"	m	struct:metrics	file:
p	libavfilter/libmpcodecs/vf_ivtc.c	/^    struct metrics p, r, m;$/;"	m	struct:frameinfo	typeref:struct:frameinfo::metrics	file:
p	libavformat/rtsp.h	/^    struct pollfd *p;$/;"	m	struct:RTSPState	typeref:struct:RTSPState::pollfd
p0	libswscale/bfin/internal_bfin.S	/^          p0 = p0 + p2;$/;"	d
p0	libswscale/bfin/internal_bfin.S	/^        p0 = p0>>2;$/;"	d
p0	libswscale/bfin/internal_bfin.S	/^        p0 = r1;       \/\/ Y top even$/;"	d
p0	libswscale/bfin/internal_bfin.S	/^        p0 = r3;$/;"	d
p1	libswscale/bfin/internal_bfin.S	/^        p1 = [fp+ARG_OUT];$/;"	d
p1	libswscale/bfin/internal_bfin.S	/^        p1 = p0 + p2;  \/\/ Y bot odd$/;"	d
p16weight	libavcodec/arm/h264pred_neon.S	/^p16weight:$/;"	l
p2	libswscale/bfin/internal_bfin.S	/^        p2 = [fp + ARG_lumStride];$/;"	d
p2	libswscale/bfin/internal_bfin.S	/^        p2 = p1;$/;"	d
p4	libswscale/bfin/internal_bfin.S	/^        p4 = [fp + ARG_height];$/;"	d
p4	libswscale/bfin/internal_bfin.S	/^        p4 = p4 >> 1;$/;"	d
p5	libswscale/bfin/internal_bfin.S	/^        p5 = [fp + ARG_width];$/;"	d
p5	libswscale/bfin/internal_bfin.S	/^        p5 = p5 >> 2;$/;"	d
p8idct	libavcodec/faanidct.c	/^static inline void p8idct(DCTELEM data[64], FLOAT temp[64], uint8_t *dest, int stride, int x, int y, int type){$/;"	f	file:
pBs	libavcodec/atrac3.c	/^    int                 pBs;$/;"	m	struct:__anon131	file:
pIQT_TAG	libavformat/electronicarts.c	55;"	d	file:
pQGT_TAG	libavformat/electronicarts.c	54;"	d	file:
pRNG	libavcodec/wmavoice.c	/^static int pRNG(int frame_cntr, int block_num, int block_size)$/;"	f	file:
pUnits	libavcodec/atrac3.c	/^    channel_unit*       pUnits;$/;"	m	struct:__anon131	file:
p_count	libavcodec/avcodec.h	/^    int p_count;$/;"	m	struct:AVCodecContext
p_cplx_sum	libavcodec/ratecontrol.h	/^    uint64_t p_cplx_sum[5];$/;"	m	struct:RateControlContext
p_decoder	libavcodec/libdiracdec.c	/^    dirac_decoder_t* p_decoder;$/;"	m	struct:FfmpegDiracDecoderParams	file:
p_encbuf	libavcodec/libdirac_libschro.h	/^    uint8_t *p_encbuf;$/;"	m	struct:FfmpegDiracSchroEncodedFrame
p_encoder	libavcodec/libdiracenc.c	/^    dirac_encoder_t* p_encoder;$/;"	m	struct:FfmpegDiracEncoderParams	file:
p_field_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*p_field_mv_table[2][2])[2];   \/\/\/< MV table (2MV per MB) interlaced p-frame encoding$/;"	m	struct:MpegEncContext
p_field_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*p_field_mv_table_base[2][2])[2];$/;"	m	struct:MpegEncContext
p_field_select_table	libavcodec/mpegvideo.h	/^    uint8_t (*p_field_select_table[2]);$/;"	m	struct:MpegEncContext
p_frame_skipped	libavcodec/vc1.h	/^    int p_frame_skipped;$/;"	m	struct:VC1Context
p_future_surface	libavcodec/xvmc.h	/^    XvMCSurface*    p_future_surface;$/;"	m	struct:xvmc_pix_fmt
p_gain	libavcodec/amrnbdata.h	/^    uint16_t p_gain;     \/\/\/< index to decode the pitch gain$/;"	m	struct:__anon283
p_head	libavcodec/libdirac_libschro.h	/^    FfmpegDiracSchroQueueElement *p_head;$/;"	m	struct:FfmpegDiracSchroQueue
p_in_frame_buf	libavcodec/libdiracenc.c	/^    unsigned char *p_in_frame_buf;$/;"	m	struct:FfmpegDiracEncoderParams	file:
p_lag	libavcodec/amrnbdata.h	/^    uint16_t p_lag;      \/\/\/< index to decode the pitch lag$/;"	m	struct:__anon283
p_masking	libavcodec/avcodec.h	/^    float p_masking;$/;"	m	struct:AVCodecContext
p_mb_type_info	libavcodec/h264data.h	/^static const PMbInfo p_mb_type_info[5]={$/;"	v
p_mv_table	libavcodec/mpegvideo.h	/^    int16_t (*p_mv_table)[2];            \/\/\/< MV table (1MV per MB) p-frame encoding$/;"	m	struct:MpegEncContext
p_mv_table_base	libavcodec/mpegvideo.h	/^    int16_t (*p_mv_table_base)[2];$/;"	m	struct:MpegEncContext
p_out_frame_buf	libavcodec/libdiracdec.c	/^    unsigned char* p_out_frame_buf;$/;"	m	struct:FfmpegDiracDecoderParams	file:
p_past_surface	libavcodec/xvmc.h	/^    XvMCSurface*    p_past_surface;$/;"	m	struct:xvmc_pix_fmt
p_per_gop	libavformat/gxfenc.c	/^    int p_per_gop;$/;"	m	struct:GXFStreamContext	file:
p_sub_mb_type_info	libavcodec/h264data.h	/^static const PMbInfo p_sub_mb_type_info[4]={$/;"	v
p_surface	libavcodec/xvmc.h	/^    XvMCSurface*    p_surface;$/;"	m	struct:xvmc_pix_fmt
p_tail	libavcodec/libdirac_libschro.h	/^    FfmpegDiracSchroQueueElement *p_tail;$/;"	m	struct:FfmpegDiracSchroQueue
p_tex_bits	libavcodec/avcodec.h	/^    int p_tex_bits;$/;"	m	struct:AVCodecContext
p_tex_bits	libavcodec/mpegvideo.h	/^    int p_tex_bits;$/;"	m	struct:MpegEncContext
p_tex_bits	libavcodec/ratecontrol.h	/^    int p_tex_bits;$/;"	m	struct:RateControlEntry
pack	libavfilter/libmpcodecs/vf_ilpack.c	/^    pack_func_t *pack[2];$/;"	m	struct:vf_priv_s	file:
pack16to32	libavcodec/h264.h	/^static av_always_inline uint32_t pack16to32(int a, int b){$/;"	f
pack8to16	libavcodec/h264.h	/^static av_always_inline uint16_t pack8to16(int a, int b){$/;"	f
pack_func_t	libavfilter/libmpcodecs/vf_ilpack.c	/^typedef void (pack_func_t)(unsigned char *dst, unsigned char *y,$/;"	t	file:
pack_header_freq	libavformat/mpegenc.c	/^    int pack_header_freq;     \/* frequency (in packets^-1) at which we send pack headers *\/$/;"	m	struct:__anon429	file:
pack_li_0	libavfilter/libmpcodecs/vf_ilpack.c	/^static pack_func_t *pack_li_0;$/;"	v	file:
pack_li_0_C	libavfilter/libmpcodecs/vf_ilpack.c	/^static void pack_li_0_C(unsigned char *dst, unsigned char *y,$/;"	f	file:
pack_li_0_MMX	libavfilter/libmpcodecs/vf_ilpack.c	/^static void pack_li_0_MMX(unsigned char *dst, unsigned char *y,$/;"	f	file:
pack_li_1	libavfilter/libmpcodecs/vf_ilpack.c	/^static pack_func_t *pack_li_1;$/;"	v	file:
pack_li_1_C	libavfilter/libmpcodecs/vf_ilpack.c	/^static void pack_li_1_C(unsigned char *dst, unsigned char *y,$/;"	f	file:
pack_li_1_MMX	libavfilter/libmpcodecs/vf_ilpack.c	/^static void pack_li_1_MMX(unsigned char *dst, unsigned char *y,$/;"	f	file:
pack_nn	libavfilter/libmpcodecs/vf_ilpack.c	/^static pack_func_t *pack_nn;$/;"	v	file:
pack_nn_C	libavfilter/libmpcodecs/vf_ilpack.c	/^static void pack_nn_C(unsigned char *dst, unsigned char *y,$/;"	f	file:
pack_nn_MMX	libavfilter/libmpcodecs/vf_ilpack.c	/^static void pack_nn_MMX(unsigned char *dst, unsigned char *y,$/;"	f	file:
pack_yuv	libavcodec/tiffenc.c	/^static void pack_yuv(TiffEncoderContext * s, uint8_t * dst, int lnum)$/;"	f	file:
package_uid	libavformat/mxfdec.c	/^    UID package_uid;$/;"	m	struct:__anon445	file:
packages_count	libavformat/mxfdec.c	/^    int packages_count;$/;"	m	struct:__anon447	file:
packages_refs	libavformat/mxfdec.c	/^    UID *packages_refs;$/;"	m	struct:__anon447	file:
packedCopyWrapper	libswscale/swscale_unscaled.c	/^static int packedCopyWrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
packed_at_lsb	libavcodec/ffv1.c	/^    int packed_at_lsb;$/;"	m	struct:FFV1Context	file:
packet	libavcodec/dvdsub_parser.c	/^    uint8_t *packet;$/;"	m	struct:DVDSubParseContext	file:
packet	libavcodec/qdm2.c	/^    QDM2SubPacket *packet;      \/\/\/< packet$/;"	m	struct:QDM2SubPNode	file:
packet	libavdevice/libdc1394.c	/^    AVPacket packet;$/;"	m	struct:dc1394_data	file:
packet	libavformat/ffm.h	/^    uint8_t packet[FFM_PACKET_SIZE];$/;"	m	struct:FFMContext
packet	libavformat/oggdec.h	/^    int (*packet)(AVFormatContext *, int);$/;"	m	struct:ogg_codec
packet	libavformat/oggparsevorbis.c	/^    unsigned char *packet[3];$/;"	m	struct:oggvorbis_private	file:
packet_buf	libavcodec/dvbsub_parser.c	/^    uint8_t *packet_buf;$/;"	m	struct:DVBSubParseContext	file:
packet_buf	libavformat/asfenc.c	/^    uint8_t packet_buf[PACKET_SIZE];$/;"	m	struct:__anon470	file:
packet_buffer	ffserver.c	/^    uint8_t *packet_buffer, *packet_buffer_ptr, *packet_buffer_end;$/;"	m	struct:HTTPContext	file:
packet_buffer	libavformat/avformat.h	/^    struct AVPacketList *packet_buffer;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVPacketList
packet_buffer	libavformat/seek.h	/^    AVPacketList   *packet_buffer;          \/\/\/< packet buffer of original state$/;"	m	struct:AVParserState
packet_buffer_end	ffserver.c	/^    uint8_t *packet_buffer, *packet_buffer_ptr, *packet_buffer_end;$/;"	m	struct:HTTPContext	file:
packet_buffer_end	libavformat/avformat.h	/^    struct AVPacketList *packet_buffer_end;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVPacketList
packet_buffer_ptr	ffserver.c	/^    uint8_t *packet_buffer, *packet_buffer_ptr, *packet_buffer_end;$/;"	m	struct:HTTPContext	file:
packet_cnt	libavformat/cafdec.c	/^    int64_t packet_cnt;             \/\/\/< packet counter$/;"	m	struct:__anon422	file:
packet_count	libavdevice/jack_audio.c	/^    sem_t           packet_count;$/;"	m	struct:__anon315	file:
packet_count	libavformat/asf.h	/^    uint16_t packet_count;$/;"	m	struct:__anon401
packet_count	libavformat/avienc.c	/^    int packet_count;$/;"	m	struct:__anon344	file:
packet_count	libavformat/gxfenc.c	/^    unsigned packet_count;$/;"	m	struct:GXFContext	file:
packet_count	libavformat/rtpdec.h	/^    unsigned int packet_count;     \/\/ TODO: move into statistics (outgoing)$/;"	m	struct:RTPDemuxContext
packet_count	libavformat/rtpenc.h	/^    unsigned int packet_count;     \/\/ TODO: move into statistics (outgoing)$/;"	m	struct:RTPMuxContext
packet_done	libavcodec/wmaprodec.c	/^    uint8_t          packet_done;                   \/\/\/< set when a packet is fully decoded$/;"	m	struct:WMAProDecodeCtx	file:
packet_end	libavformat/ffm.h	/^    uint8_t *packet_ptr, *packet_end;$/;"	m	struct:FFMContext
packet_flags	libavformat/asfdec.c	/^    int packet_flags;$/;"	m	struct:__anon332	file:
packet_frag_offset	libavformat/asfdec.c	/^    unsigned int packet_frag_offset;$/;"	m	struct:__anon332	file:
packet_frag_size	libavformat/asfdec.c	/^    unsigned int packet_frag_size;$/;"	m	struct:__anon332	file:
packet_frag_timestamp	libavformat/asfdec.c	/^    int64_t packet_frag_timestamp;$/;"	m	struct:__anon332	file:
packet_id	libavformat/mmst.c	/^    int packet_id;                       \/\/\/< Identifier for packets in the current stream.$/;"	m	struct:__anon341	file:
packet_index	libavcodec/dvbsub_parser.c	/^    int packet_index;$/;"	m	struct:DVBSubParseContext	file:
packet_index	libavcodec/dvdsub_parser.c	/^    int packet_index;$/;"	m	struct:DVDSubParseContext	file:
packet_key_frame	libavformat/asfdec.c	/^    int packet_key_frame;$/;"	m	struct:__anon332	file:
packet_len	libavcodec/dvdsub_parser.c	/^    int packet_len;$/;"	m	struct:DVDSubParseContext	file:
packet_loss	libavcodec/wmaprodec.c	/^    uint8_t          packet_loss;                   \/\/\/< set in case of bitstream error$/;"	m	struct:WMAProDecodeCtx	file:
packet_max_size	libavformat/rmenc.c	/^    int packet_max_size;$/;"	m	struct:__anon382	file:
packet_multi_size	libavformat/asfdec.c	/^    int packet_multi_size;$/;"	m	struct:__anon332	file:
packet_nb_payloads	libavformat/asfenc.c	/^    unsigned int packet_nb_payloads;$/;"	m	struct:__anon470	file:
packet_number	libavformat/asf.h	/^    uint32_t packet_number;$/;"	m	struct:__anon401
packet_number	libavformat/mpegenc.c	/^    int packet_number;$/;"	m	struct:__anon428	file:
packet_number	libavformat/mpegenc.c	/^    int packet_number;$/;"	m	struct:__anon429	file:
packet_obj_size	libavformat/asfdec.c	/^    int packet_obj_size;$/;"	m	struct:__anon332	file:
packet_offset	libavcodec/wmaprodec.c	/^    uint8_t          packet_offset;                 \/\/\/< frame offset in the packet$/;"	m	struct:WMAProDecodeCtx	file:
packet_padsize	libavformat/asfdec.c	/^    int packet_padsize;$/;"	m	struct:__anon332	file:
packet_pos	libavformat/asf.h	/^    int64_t packet_pos;$/;"	m	struct:__anon399
packet_pos	libavformat/asfdec.c	/^    int64_t packet_pos;$/;"	m	struct:__anon332	file:
packet_property	libavformat/asfdec.c	/^    int packet_property;$/;"	m	struct:__anon332	file:
packet_ptr	libavformat/ffm.h	/^    uint8_t *packet_ptr, *packet_end;$/;"	m	struct:FFMContext
packet_queue_abort	ffplay.c	/^static void packet_queue_abort(PacketQueue *q)$/;"	f	file:
packet_queue_end	ffplay.c	/^static void packet_queue_end(PacketQueue *q)$/;"	f	file:
packet_queue_flush	ffplay.c	/^static void packet_queue_flush(PacketQueue *q)$/;"	f	file:
packet_queue_get	ffplay.c	/^static int packet_queue_get(PacketQueue *q, AVPacket *pkt, int block)$/;"	f	file:
packet_queue_init	ffplay.c	/^static void packet_queue_init(PacketQueue *q)$/;"	f	file:
packet_queue_put	ffplay.c	/^static int packet_queue_put(PacketQueue *q, AVPacket *pkt)$/;"	f	file:
packet_replic_size	libavformat/asfdec.c	/^    int packet_replic_size;$/;"	m	struct:__anon332	file:
packet_segments	libavformat/asfdec.c	/^    int packet_segments;$/;"	m	struct:__anon332	file:
packet_segsizetype	libavformat/asfdec.c	/^    int packet_segsizetype;$/;"	m	struct:__anon332	file:
packet_seq	libavformat/asfdec.c	/^    int packet_seq;$/;"	m	struct:__anon332	file:
packet_sequence_number	libavcodec/wmaprodec.c	/^    uint8_t          packet_sequence_number;        \/\/\/< current packet number$/;"	m	struct:WMAProDecodeCtx	file:
packet_size	libavformat/avformat.h	/^    unsigned int packet_size;$/;"	m	struct:AVFormatContext
packet_size	libavformat/avidec.c	/^    int packet_size;$/;"	m	struct:AVIStream	file:
packet_size	libavformat/ffm.h	/^    int packet_size;$/;"	m	struct:FFMContext
packet_size	libavformat/iss.c	/^    int packet_size;$/;"	m	struct:__anon410	file:
packet_size	libavformat/mpegenc.c	/^    int packet_size; \/* required packet size *\/$/;"	m	struct:__anon429	file:
packet_size_left	libavformat/asfdec.c	/^    int packet_size_left;$/;"	m	struct:__anon332	file:
packet_size_left	libavformat/asfenc.c	/^    int packet_size_left;$/;"	m	struct:__anon470	file:
packet_sizes	libavformat/pmpdec.c	/^    uint32_t *packet_sizes;$/;"	m	struct:__anon331	file:
packet_sizes_alloc	libavformat/pmpdec.c	/^    int packet_sizes_alloc;$/;"	m	struct:__anon331	file:
packet_start	libavcodec/dvbsub_parser.c	/^    int packet_start;$/;"	m	struct:DVBSubParseContext	file:
packet_stream_index	ffserver.c	/^    int packet_stream_index; \/* current stream for output in state machine *\/$/;"	m	struct:HTTPContext	file:
packet_time_delta	libavformat/asfdec.c	/^    int packet_time_delta;$/;"	m	struct:__anon332	file:
packet_time_start	libavformat/asfdec.c	/^    int packet_time_start;$/;"	m	struct:__anon332	file:
packet_timestamp	libavformat/asfdec.c	/^    int packet_timestamp;$/;"	m	struct:__anon332	file:
packet_timestamp_end	libavformat/asfenc.c	/^    int packet_timestamp_end;$/;"	m	struct:__anon470	file:
packet_timestamp_start	libavformat/asfenc.c	/^    int packet_timestamp_start;$/;"	m	struct:__anon470	file:
packet_total_size	libavformat/rmenc.c	/^    int packet_total_size;$/;"	m	struct:__anon382	file:
packet_types_received	libavformat/rtpdec_h264.c	/^    int packet_types_received[32];$/;"	m	struct:PayloadContext	file:
packetization_mode	libavformat/rtpdec_h264.c	/^    int packetization_mode;     \/\/\/< from the sdp setup parameters.$/;"	m	struct:PayloadContext	file:
packetizer_read	libavformat/rtpdec_asf.c	/^static int packetizer_read(void *opaque, uint8_t *buf, int buf_size)$/;"	f	file:
packets	libavformat/matroskadec.c	/^    AVPacket **packets;$/;"	m	struct:__anon371	file:
packets	libavformat/rtsp.h	/^    uint64_t packets;$/;"	m	struct:RTSPState
pad	libavformat/smacker.c	/^    uint32_t pad;$/;"	m	struct:SmackerContext	file:
pad_count	libavfilter/avfilter.c	/^static int pad_count(const AVFilterPad *pads)$/;"	f	file:
pad_idx	libavfilter/avfiltergraph.h	/^    int pad_idx;$/;"	m	struct:AVFilterInOut
pad_media_packet	libavformat/mmst.c	/^static void pad_media_packet(MMSContext *mms)$/;"	f	file:
paddh	libavcodec/ps2/mmi.h	156;"	d
padding	libavformat/tmv.c	/^    unsigned padding;$/;"	m	struct:TMVContext	file:
padding1	libavformat/ape.c	/^    int16_t padding1;$/;"	m	struct:__anon335	file:
padding_bug_score	libavcodec/mpegvideo.h	/^    int padding_bug_score;             \/\/\/< used to detect the VERY common padding bug in MPEG4$/;"	m	struct:MpegEncContext
paddw	libavcodec/ps2/mmi.h	114;"	d
page	libavformat/anm.c	/^    int page;                 \/**< current page (or AVERROR_xxx code) *\/$/;"	m	struct:__anon435	file:
page	libavformat/oggenc.c	/^    OGGPage page; \/\/\/< current page$/;"	m	struct:__anon380	file:
page	libavformat/oggenc.c	/^    OGGPage page;$/;"	m	struct:OGGPageList	file:
page_count	libavformat/oggenc.c	/^    unsigned page_count; \/\/\/< number of page buffered$/;"	m	struct:__anon380	file:
page_counter	libavformat/oggenc.c	/^    unsigned page_counter;$/;"	m	struct:__anon380	file:
page_end	libavformat/oggdec.h	/^    int page_end;   \/\/\/< current packet is the last one completed in the page$/;"	m	struct:ogg_stream
page_list	libavformat/oggenc.c	/^    OGGPageList *page_list;$/;"	m	struct:__anon381	file:
page_pos	libavformat/oggdec.h	/^    int64_t page_pos;   \/\/\/< file offset of the current page$/;"	m	struct:ogg_stream
page_table_offset	libavformat/anm.c	/^    int page_table_offset;$/;"	m	struct:__anon435	file:
paint_lut	libavcodec/yop.c	/^static const uint8_t paint_lut[15][4] =$/;"	v	file:
paint_mouse_pointer	libavdevice/x11grab.c	/^paint_mouse_pointer(XImage *image, struct x11_grab *s)$/;"	f	file:
paint_raw	libavcodec/vmnc.c	/^static av_always_inline void paint_raw(uint8_t *dst, int w, int h, const uint8_t* src, int bpp, int be, int stride)$/;"	f	file:
paint_rect	libavcodec/vmnc.c	/^static av_always_inline void paint_rect(uint8_t *dst, int dx, int dy, int w, int h, int color, int bpp, int stride)$/;"	f	file:
pal	libavcodec/8bps.c	/^        uint32_t pal[256];$/;"	m	struct:EightBpsContext	file:
pal	libavcodec/bfi.c	/^    uint32_t pal[256];$/;"	m	struct:BFIContext	file:
pal	libavcodec/cinepak.c	/^    uint32_t pal[256];$/;"	m	struct:CinepakContext	file:
pal	libavcodec/dfa.c	/^    uint32_t pal[256];$/;"	m	struct:DfaContext	file:
pal	libavcodec/dxa.c	/^    uint32_t pal[256];$/;"	m	struct:DxaDecContext	file:
pal	libavcodec/idcinvideo.c	/^    uint32_t pal[256];$/;"	m	struct:IdcinContext	file:
pal	libavcodec/interplayvideo.c	/^    uint32_t pal[256];$/;"	m	struct:IpvideoContext	file:
pal	libavcodec/kmvc.c	/^    uint32_t pal[256];$/;"	m	struct:KmvcContext	file:
pal	libavcodec/msrle.c	/^    uint32_t pal[256];$/;"	m	struct:MsrleContext	file:
pal	libavcodec/msvideo1.c	/^    uint32_t pal[256];$/;"	m	struct:Msvideo1Context	file:
pal	libavcodec/qpeg.c	/^    uint32_t pal[256];$/;"	m	struct:QpegContext	file:
pal	libavcodec/qtrle.c	/^    uint32_t pal[256];$/;"	m	struct:QtrleContext	file:
pal	libavcodec/smc.c	/^    uint32_t pal[256];$/;"	m	struct:SmcContext	file:
pal	libavcodec/tscc.c	/^    uint32_t pal[256];$/;"	m	struct:TsccContext	file:
pal	libavcodec/vb.c	/^    uint32_t pal[AVPALETTE_COUNT];$/;"	m	struct:VBDecContext	file:
pal	libavcodec/vmnc.c	/^    uint8_t pal[768];$/;"	m	struct:VmncContext	file:
pal	libavcodec/zmbv.c	/^    uint8_t pal[768];$/;"	m	struct:ZmbvContext	file:
pal	libavcodec/zmbvenc.c	/^    uint8_t pal[768];$/;"	m	struct:ZmbvEncContext	file:
pal	libavformat/avidec.c	/^    uint32_t pal[256];$/;"	m	struct:AVIStream	file:
pal	libavformat/smacker.c	/^    uint8_t pal[768];$/;"	m	struct:SmackerContext	file:
pal2	libavcodec/zmbvenc.c	/^    uint32_t pal2[256]; \/\/for quick comparisons$/;"	m	struct:ZmbvEncContext	file:
palToRgbWrapper	libswscale/swscale_unscaled.c	/^static int palToRgbWrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
pal_colors_count	libavformat/dsicin.c	/^    int pal_colors_count;$/;"	m	struct:CinFrameHeader	file:
pal_msg	libavfilter/libmpcodecs/vf_palette.c	/^    int pal_msg;$/;"	m	struct:vf_priv_s	file:
pal_or_ntsc	libavdevice/dv1394.h	/^enum pal_or_ntsc {$/;"	g
pal_rgb	libswscale/swscale_internal.h	/^    uint32_t pal_rgb[256];$/;"	m	struct:SwsContext
pal_yuv	libswscale/swscale_internal.h	/^    uint32_t pal_yuv[256];$/;"	m	struct:SwsContext
palctrl	libavcodec/avcodec.h	/^    struct AVPaletteControl *palctrl;$/;"	m	struct:AVCodecContext	typeref:struct:AVCodecContext::AVPaletteControl
palette	libavcodec/anm.c	/^    int palette[AVPALETTE_COUNT];$/;"	m	struct:AnmContext	file:
palette	libavcodec/avcodec.h	/^    unsigned int palette[AVPALETTE_COUNT];$/;"	m	struct:AVPaletteControl
palette	libavcodec/dsicinav.c	/^    uint32_t palette[256];$/;"	m	struct:CinVideoContext	file:
palette	libavcodec/eacmv.c	/^    unsigned int palette[AVPALETTE_COUNT];$/;"	m	struct:CmvContext	file:
palette	libavcodec/eatgv.c	/^    unsigned int palette[AVPALETTE_COUNT];$/;"	m	struct:TgvContext	file:
palette	libavcodec/flashsv2enc.c	/^    Palette palette;$/;"	m	struct:FlashSV2Context	file:
palette	libavcodec/flicvideo.c	/^    unsigned int palette[256];$/;"	m	struct:FlicDecodeContext	file:
palette	libavcodec/jvdec.c	/^    uint32_t   palette[AVPALETTE_COUNT];$/;"	m	struct:JvContext	file:
palette	libavcodec/mmvideo.c	/^    int palette[AVPALETTE_COUNT];$/;"	m	struct:MmContext	file:
palette	libavcodec/png.h	/^    uint32_t palette[256];$/;"	m	struct:PNGDecContext
palette	libavcodec/rawdec.c	/^    uint32_t palette[AVPALETTE_COUNT];$/;"	m	struct:RawVideoContext	file:
palette	libavcodec/rl2.c	/^    unsigned int palette[AVPALETTE_COUNT];$/;"	m	struct:Rl2Context	file:
palette	libavcodec/tiff.c	/^    uint32_t palette[256];$/;"	m	struct:TiffContext	file:
palette	libavcodec/vmdav.c	/^    unsigned char palette[PALETTE_COUNT * 4];$/;"	m	struct:VmdVideoContext	file:
palette	libavcodec/vqavideo.c	/^    uint32_t palette[PALETTE_COUNT];$/;"	m	struct:VqaContext	file:
palette	libavdevice/v4l.c	/^    int palette;$/;"	m	struct:__anon317	file:
palette	libavformat/asf.h	/^    uint32_t palette[256];$/;"	m	struct:__anon399
palette	libavformat/ipmovie.c	/^    uint32_t     palette[256];$/;"	m	struct:IPMVEContext	file:
palette	libavformat/isom.h	/^    uint32_t palette[256];$/;"	m	struct:MOVStreamContext
palette8tobgr16	libavfilter/libmpcodecs/vf_palette.c	/^static void palette8tobgr16(const uint8_t *src, uint8_t *dst, long num_pixels, const uint8_t *palette)$/;"	f	file:
palette8tobgr16	libswscale/rgb2rgb.c	/^void palette8tobgr16(const uint8_t *src, uint8_t *dst, long num_pixels, const uint8_t *palette)$/;"	f
palette8topacked24	libswscale/rgb2rgb.c	/^void palette8topacked24(const uint8_t *src, uint8_t *dst, long num_pixels, const uint8_t *palette)$/;"	f
palette8topacked32	libswscale/rgb2rgb.c	/^void palette8topacked32(const uint8_t *src, uint8_t *dst, long num_pixels, const uint8_t *palette)$/;"	f
palette8torgb16	libavfilter/libmpcodecs/vf_palette.c	/^static void palette8torgb16(const uint8_t *src, uint8_t *dst, long num_pixels, const uint8_t *palette)$/;"	f	file:
palette8torgb16	libswscale/rgb2rgb.c	/^void palette8torgb16(const uint8_t *src, uint8_t *dst, long num_pixels, const uint8_t *palette)$/;"	f
palette_changed	libavcodec/avcodec.h	/^    int palette_changed;$/;"	m	struct:AVPaletteControl
palette_changed	libavformat/asf.h	/^    int      palette_changed;$/;"	m	struct:__anon399
palette_has_changed	libavcodec/jvdec.c	/^    int        palette_has_changed;$/;"	m	struct:JvContext	file:
palette_is_set	libavcodec/tiff.c	/^    int palette_is_set;$/;"	m	struct:TiffContext	file:
palette_size	libavformat/jvdec.c	/^    int palette_size;  \/** palette size (bytes) *\/$/;"	m	struct:__anon425	file:
palette_size	libavformat/yop.c	/^    int palette_size;$/;"	m	struct:yop_dec_context	file:
palette_type	libavcodec/flashsv2enc.c	/^    uint8_t palette_type;       \/\/\/< 0=>default, 1=>custom - changed when palette regenerated.$/;"	m	struct:FlashSV2Context	file:
palette_video	libavcodec/cinepak.c	/^    int palette_video;$/;"	m	struct:CinepakContext	file:
palettes	libavcodec/xan.c	/^    unsigned *palettes;$/;"	m	struct:XanContext	file:
palettes_count	libavcodec/xan.c	/^    int palettes_count;$/;"	m	struct:XanContext	file:
palsize	libavcodec/kmvc.c	/^    int palsize;$/;"	m	struct:KmvcContext	file:
pam_encode_frame	libavcodec/pamenc.c	/^static int pam_encode_frame(AVCodecContext *avctx, unsigned char *outbuf,$/;"	f	file:
pan_scan	libavcodec/mpeg12.c	/^    AVPanScan pan_scan;              \/**< some temporary storage for the panscan *\/$/;"	m	struct:Mpeg1Context	file:
panscanflag	libavcodec/vc1.h	/^    int panscanflag;      \/\/\/< NUMPANSCANWIN, TOPLEFT{X,Y}, BOTRIGHT{X,Y} present$/;"	m	struct:VC1Context
param	libavcodec/srtdec.c	/^    char param[PARAM_NUMBER][128];$/;"	m	struct:__anon205	file:
param	libavfilter/libmpcodecs/vf_eq2.c	/^  eq2_param_t param[3];$/;"	m	struct:vf_priv_s	file:
param	libavutil/eval.c	/^    struct AVExpr *param[2];$/;"	m	struct:AVExpr	typeref:struct:AVExpr::AVExpr	file:
param	libswscale/swscale_internal.h	/^    double param[2];              \/\/\/< Input parameters for scaling algorithms that need them.$/;"	m	struct:SwsContext
param1	libavfilter/vf_libopencv.c	/^    int    param1, param2;$/;"	m	struct:__anon14	file:
param2	libavfilter/vf_libopencv.c	/^    int    param1, param2;$/;"	m	struct:__anon14	file:
param3	libavfilter/vf_libopencv.c	/^    double param3, param4;$/;"	m	struct:__anon14	file:
param4	libavfilter/vf_libopencv.c	/^    double param3, param4;$/;"	m	struct:__anon14	file:
param_presence_flags	libavcodec/mlpdec.c	/^    uint8_t     param_presence_flags;$/;"	m	struct:SubStream	file:
param_written	libavformat/vocenc.c	/^    int param_written;$/;"	m	struct:voc_enc_context	file:
params	libavcodec/flacenc.c	/^    int params[MAX_PARTITIONS];$/;"	m	struct:RiceContext	file:
params	libavcodec/libx264.c	/^    x264_param_t    params;$/;"	m	struct:X264Context	file:
params	libavcodec/libxavs.c	/^    xavs_param_t    params;$/;"	m	struct:XavsContext	file:
params	libavfilter/vf_frei0r.c	/^    char params[256];$/;"	m	struct:Frei0rContext	file:
params_valid	libavcodec/mlpdec.c	/^    uint8_t     params_valid;$/;"	m	struct:MLPDecodeContext	file:
parcor_rice_table	libavcodec/alsdec.c	/^static const int8_t parcor_rice_table[3][20][2] = {$/;"	v	file:
parcor_scaled_values	libavcodec/alsdec.c	/^static const int16_t parcor_scaled_values[] = {$/;"	v	file:
parcor_to_lpc	libavcodec/alsdec.c	/^static void parcor_to_lpc(unsigned int k, const int32_t *par, int32_t *cof)$/;"	f	file:
parent	libavcodec/j2k.h	/^    struct J2kTgtNode *parent;$/;"	m	struct:J2kTgtNode	typeref:struct:J2kTgtNode::J2kTgtNode
parent	libavcodec/pthread.c	/^    struct FrameThreadContext *parent;$/;"	m	struct:PerThreadContext	typeref:struct:PerThreadContext::FrameThreadContext	file:
parent	libavcodec/snow.c	/^    struct SubBand *parent;$/;"	m	struct:SubBand	typeref:struct:SubBand::SubBand	file:
parent	libavformat/applehttp.c	/^    AVFormatContext *parent;$/;"	m	struct:variant	file:
parent_log_context_offset	libavutil/log.h	/^    int parent_log_context_offset;$/;"	m	struct:__anon308
parity	libavfilter/libmpcodecs/pullup.h	/^    int parity;$/;"	m	struct:pullup_field
parity	libavfilter/libmpcodecs/pullup.h	/^    int parity;$/;"	m	struct:pullup_frame
parity	libavfilter/libmpcodecs/vf_mcdeint.c	/^    int parity;$/;"	m	struct:vf_priv_s	file:
parity	libavfilter/vf_yadif.c	/^    int parity;$/;"	m	struct:__anon6	file:
parity_bit	libavcodec/g729dec.c	/^    uint8_t parity_bit;         \/\/\/< parity bit for pitch delay$/;"	m	struct:__anon271	file:
park_frame_worker_threads	libavcodec/pthread.c	/^static void park_frame_worker_threads(FrameThreadContext *fctx, int thread_count)$/;"	f	file:
parse	libavcodec/vp3_parser.c	/^static int parse(AVCodecParserContext *s,$/;"	f	file:
parse	libavcodec/vp8_parser.c	/^static int parse(AVCodecParserContext *s,$/;"	f	file:
parse	libavfilter/libmpcodecs/vf_il.c	/^static void parse(FilterParam *fp, char* args){$/;"	f	file:
parse	libavfilter/libmpcodecs/vf_noise.c	/^static void parse(FilterParam *fp, char* args){$/;"	f	file:
parse	libavfilter/libmpcodecs/vf_unsharp.c	/^static void parse( FilterParam *fp, char* args ) {$/;"	f	file:
parse	libavformat/mov.c	/^    int (*parse)(MOVContext *ctx, AVIOContext *pb, MOVAtom atom);$/;"	m	struct:MOVParseTableEntry	file:
parse_acl_row	ffserver.c	/^static void parse_acl_row(FFStream *stream, FFStream* feed, IPAddressACL *ext_acl,$/;"	f	file:
parse_adts_frame_header	libavcodec/aacdec.c	/^static int parse_adts_frame_header(AACContext *ac, GetBitContext *gb)$/;"	f	file:
parse_args	libavfilter/libmpcodecs/vf_detc.c	/^static void parse_args(struct vf_priv_s *p, char *args)$/;"	f	file:
parse_args	libavfilter/libmpcodecs/vf_filmdint.c	/^static const char *parse_args(struct vf_priv_s *p, const char *args)$/;"	f	file:
parse_args	libavfilter/libmpcodecs/vf_fixpts.c	/^static int parse_args(struct vf_priv_s *p, const char *args)$/;"	f	file:
parse_bs_info	libavcodec/alsdec.c	/^static void parse_bs_info(const uint32_t bs_info, unsigned int n,$/;"	f	file:
parse_chunks	libavformat/wtvdec.c	/^static int parse_chunks(AVFormatContext *s, int mode, int64_t seekts, int *len_ptr)$/;"	f	file:
parse_coeff	libavcodec/vp56.h	/^    VP56ParseCoeff parse_coeff;$/;"	m	struct:vp56_context
parse_coeff_models	libavcodec/vp56.h	/^    VP56ParseCoeffModels parse_coeff_models;$/;"	m	struct:vp56_context
parse_config_ALS	libavcodec/mpeg4audio.c	/^static int parse_config_ALS(GetBitContext *gb, MPEG4AudioConfig *c)$/;"	f	file:
parse_context	libavcodec/mpegvideo.h	/^    ParseContext parse_context;$/;"	m	struct:MpegEncContext
parse_date	libavformat/utils.c	/^int64_t parse_date(const char *timestr, int duration)$/;"	f
parse_device_name	libavdevice/dshow.c	/^static int parse_device_name(AVFormatContext *avctx)$/;"	f	file:
parse_dynamic_acl	ffserver.c	/^static IPAddressACL* parse_dynamic_acl(FFStream *stream, HTTPContext *c)$/;"	f	file:
parse_expr	libavutil/eval.c	/^static int parse_expr(AVExpr **e, Parser *p)$/;"	f	file:
parse_factor	libavutil/eval.c	/^static int parse_factor(AVExpr **e, Parser *p)$/;"	f	file:
parse_ffconfig	ffserver.c	/^static int parse_ffconfig(const char *filename)$/;"	f	file:
parse_filter	libavfilter/graphparser.c	/^static int parse_filter(AVFilterContext **filt_ctx, const char **buf, AVFilterGraph *graph,$/;"	f	file:
parse_fmtp	libavformat/rtpdec_latm.c	/^static int parse_fmtp(AVStream *stream, PayloadContext *data,$/;"	f	file:
parse_fmtp	libavformat/rtpdec_mpeg4.c	/^static int parse_fmtp(AVStream *stream, PayloadContext *data,$/;"	f	file:
parse_fmtp_config	libavformat/rtpdec_latm.c	/^static int parse_fmtp_config(AVStream *st, char *value)$/;"	f	file:
parse_fmtp_config	libavformat/rtpdec_mpeg4.c	/^static int parse_fmtp_config(AVCodecContext * codec, char *value)$/;"	f	file:
parse_forced_key_frames	ffmpeg.c	/^static void parse_forced_key_frames(char *kf, AVOutputStream *ost,$/;"	f	file:
parse_forced_key_frames	ffmpeg/ffmpeg.c	/^static void parse_forced_key_frames(char *kf, AVOutputStream *ost,$/;"	f	file:
parse_frame_header	libavcodec/ac3dec.c	/^static int parse_frame_header(AC3DecodeContext *s)$/;"	f	file:
parse_h264_sdp_line	libavformat/rtpdec_h264.c	/^static int parse_h264_sdp_line(AVFormatContext *s, int st_index,$/;"	f	file:
parse_header	libavcodec/vp56.h	/^    VP56ParseHeader parse_header;$/;"	m	struct:vp56_context
parse_inputs	libavfilter/graphparser.c	/^static int parse_inputs(const char **buf, AVFilterInOut **curr_inputs,$/;"	f	file:
parse_int	libavfilter/libmpcodecs/vf_tile.c	/^static int parse_int(char **s, int *rt, int def_val)$/;"	f	file:
parse_iplconvkernel	libavfilter/vf_libopencv.c	/^static int parse_iplconvkernel(IplConvKernel **kernel, char *buf, void *log_ctx)$/;"	f	file:
parse_key_value_pair	libavutil/opt.c	/^static int parse_key_value_pair(void *ctx, const char **buf,$/;"	f	file:
parse_keyframes_index	libavformat/flvdec.c	/^static int parse_keyframes_index(AVFormatContext *s, AVIOContext *ioc, AVStream *vstream, int64_t max_pos) {$/;"	f	file:
parse_legacy_attrib	libavformat/wtvdec.c	/^static void parse_legacy_attrib(AVFormatContext *s, AVIOContext *pb)$/;"	f	file:
parse_link_name	libavfilter/graphparser.c	/^static char *parse_link_name(const char **buf, void *log_ctx)$/;"	f	file:
parse_matrix_coeffs	ffmpeg.c	/^static void parse_matrix_coeffs(uint16_t *dest, const char *str)$/;"	f	file:
parse_matrix_coeffs	ffmpeg/ffmpeg.c	/^static void parse_matrix_coeffs(uint16_t *dest, const char *str)$/;"	f	file:
parse_mb_skip	libavcodec/wmv2dec.c	/^static void parse_mb_skip(Wmv2Context * w){$/;"	f	file:
parse_media_type	libavformat/wtvdec.c	/^static AVStream * parse_media_type(AVFormatContext *s, AVStream *st, int sid,$/;"	f	file:
parse_meta_type	ffmpeg.c	/^static void parse_meta_type(char *arg, char *type, int *index, char **endptr)$/;"	f	file:
parse_meta_type	ffmpeg/ffmpeg.c	/^static void parse_meta_type(char *arg, char *type, int *index, char **endptr)$/;"	f	file:
parse_mpeg1waveformatex	libavformat/wtvdec.c	/^static void parse_mpeg1waveformatex(AVStream *st)$/;"	f	file:
parse_nal_units	libavcodec/h264_parser.c	/^static inline int parse_nal_units(AVCodecParserContext *s,$/;"	f	file:
parse_number_or_die	cmdutils.c	/^double parse_number_or_die(const char *context, const char *numstr, int type, double min, double max)$/;"	f
parse_number_or_die	ffmpeg/cmdutils.c	/^double parse_number_or_die(const char *context, const char *numstr, int type, double min, double max)$/;"	f
parse_only	libavcodec/avcodec.h	/^    int parse_only; \/* - decoding only: If true, only parsing is done$/;"	m	struct:AVCodecContext
parse_only	libavcodec/vc1.h	/^    int parse_only;             \/\/\/< Context is used within parser$/;"	m	struct:VC1Context
parse_options	cmdutils.c	/^void parse_options(int argc, char **argv, const OptionDef *options,$/;"	f
parse_options	ffmpeg/cmdutils.c	/^void parse_options(int argc, char **argv, const OptionDef *options,$/;"	f
parse_outputs	libavfilter/graphparser.c	/^static int parse_outputs(const char **buf, AVFilterInOut **curr_inputs,$/;"	f	file:
parse_packed_headers	libavformat/rtpdec_xiph.c	/^parse_packed_headers(const uint8_t * packed_headers,$/;"	f	file:
parse_packet	libavformat/rdt.c	/^    DynamicPayloadPacketHandlerProc parse_packet;$/;"	m	struct:RDTDemuxContext	file:
parse_packet	libavformat/rtpdec.h	/^    DynamicPayloadPacketHandlerProc parse_packet;     \/\/\/< This is also copied from the dynamic protocol handler structure$/;"	m	struct:RTPDemuxContext
parse_packet	libavformat/rtpdec.h	/^    DynamicPayloadPacketHandlerProc parse_packet; \/\/\/< parse handler for this dynamic packet.$/;"	m	struct:RTPDynamicProtocolHandler_s
parse_packet_header	libavcodec/wmavoice.c	/^static int parse_packet_header(WMAVoiceContext *s)$/;"	f	file:
parse_packet_header	libavformat/gxf.c	/^static int parse_packet_header(AVIOContext *pb, GXFPktType *type, int *length) {$/;"	f	file:
parse_palette_segment	libavcodec/pgssubdec.c	/^static void parse_palette_segment(AVCodecContext *avctx,$/;"	f	file:
parse_pcr	libavformat/mpegts.c	/^static int parse_pcr(int64_t *ppcr_high, int *ppcr_low,$/;"	f	file:
parse_picture_segment	libavcodec/pgssubdec.c	/^static int parse_picture_segment(AVCodecContext *avctx,$/;"	f	file:
parse_playlist	libavformat/applehttp.c	/^static int parse_playlist(AppleHTTPContext *c, const char *url,$/;"	f	file:
parse_playlist	libavformat/applehttpproto.c	/^static int parse_playlist(URLContext *h, const char *url)$/;"	f	file:
parse_pow	libavutil/eval.c	/^static int parse_pow(AVExpr **e, Parser *p, int *sign)$/;"	f	file:
parse_presentation_segment	libavcodec/pgssubdec.c	/^static void parse_presentation_segment(AVCodecContext *avctx,$/;"	f	file:
parse_primary	libavutil/eval.c	/^static int parse_primary(AVExpr **e, Parser *p)$/;"	f	file:
parse_sdp_a_line	libavformat/rtpdec.h	/^    int (*parse_sdp_a_line) (AVFormatContext *s,$/;"	m	struct:RTPDynamicProtocolHandler_s
parse_sdp_line	libavformat/rtpdec_mpeg4.c	/^static int parse_sdp_line(AVFormatContext *s, int st_index,$/;"	f	file:
parse_section_header	libavformat/mpegts.c	/^static int parse_section_header(SectionHeader *h,$/;"	f	file:
parse_segment_info	libavcodec/vp8.c	/^static void parse_segment_info(VP8Context *s)$/;"	f	file:
parse_slice_header	libavcodec/rv34.h	/^    int (*parse_slice_header)(struct RV34DecContext *r, GetBitContext *gb, SliceInfo *si);$/;"	m	struct:RV34DecContext
parse_source_parameters	libavcodec/dirac.c	/^static int parse_source_parameters(AVCodecContext *avctx, GetBitContext *gb,$/;"	f	file:
parse_streaminfo	libavcodec/flacdec.c	/^static int parse_streaminfo(FLACContext *s, const uint8_t *buf, int buf_size)$/;"	f	file:
parse_subexpr	libavutil/eval.c	/^static int parse_subexpr(AVExpr **e, Parser *p)$/;"	f	file:
parse_tag	libavformat/id3v1.c	/^static int parse_tag(AVFormatContext *s, const uint8_t *buf)$/;"	f	file:
parse_term	libavutil/eval.c	/^static int parse_term(AVExpr **e, Parser *p)$/;"	f	file:
parse_time_or_die	cmdutils.c	/^int64_t parse_time_or_die(const char *context, const char *timestr, int is_duration)$/;"	f
parse_time_or_die	ffmpeg/cmdutils.c	/^int64_t parse_time_or_die(const char *context, const char *timestr, int is_duration)$/;"	f
parse_timecode	libavcodec/xsubdec.c	/^static int64_t parse_timecode(const uint8_t *buf, int64_t packet_time) {$/;"	f	file:
parse_var	libavfilter/libmpcodecs/vf_detc.c	/^static void parse_var(struct vf_priv_s *p, char *var)$/;"	f	file:
parse_vector_adjustment	libavcodec/vp56.h	/^    VP56ParseVectorAdjustment parse_vector_adjustment;$/;"	m	struct:vp56_context
parse_vector_models	libavcodec/vp56.h	/^    VP56ParseVectorModels parse_vector_models;$/;"	m	struct:vp56_context
parse_videoinfoheader2	libavformat/wtvdec.c	/^static int parse_videoinfoheader2(AVFormatContext *s, AVStream *st)$/;"	f	file:
parsed_all_subframes	libavcodec/wmaprodec.c	/^    int8_t           parsed_all_subframes;          \/\/\/< all subframes decoded?$/;"	m	struct:WMAProDecodeCtx	file:
parser	libavcodec/avcodec.h	/^    AVCodecParserContext *parser;$/;"	m	struct:AVBitStreamFilterContext
parser	libavcodec/avcodec.h	/^    struct AVCodecParser *parser;$/;"	m	struct:AVCodecParserContext	typeref:struct:AVCodecParserContext::AVCodecParser
parser	libavcodec/crystalhd.c	/^    AVCodecParserContext *parser;$/;"	m	struct:__anon268	file:
parser	libavformat/avformat.h	/^    struct AVCodecParserContext *parser;$/;"	m	struct:AVStream	typeref:struct:AVStream::AVCodecParserContext
parser	libavformat/seek.h	/^    AVCodecParserContext   *parser;$/;"	m	struct:AVParserStreamState
parser_close	libavcodec/avcodec.h	/^    void (*parser_close)(AVCodecParserContext *s);$/;"	m	struct:AVCodecParser
parser_init	libavcodec/avcodec.h	/^    int (*parser_init)(AVCodecParserContext *s);$/;"	m	struct:AVCodecParser
parser_parse	libavcodec/avcodec.h	/^    int (*parser_parse)(AVCodecParserContext *s,$/;"	m	struct:AVCodecParser
part2_3_length	libavcodec/mpegaudiodec.c	/^    int part2_3_length;$/;"	m	struct:GranuleDef	file:
part_reconst_mem	libavcodec/g722.c	/^        int8_t  part_reconst_mem[2]; \/\/\/< signs of previous partially reconstructed signals$/;"	m	struct:__anon140::G722Band	file:
part_sizes_h	libavcodec/rv34.c	/^static const uint8_t part_sizes_h[RV34_MB_TYPES] = { 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2 };$/;"	v	file:
part_sizes_w	libavcodec/rv34.c	/^static const uint8_t part_sizes_w[RV34_MB_TYPES] = { 2, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2 };$/;"	v	file:
partial_bit_buffer	libavcodec/dv.c	/^    uint16_t partial_bit_buffer;$/;"	m	struct:BlockInfo	file:
partial_bit_buffer	libavcodec/dv.c	/^    uint32_t partial_bit_buffer; \/* we can't use uint16_t here *\/$/;"	m	struct:EncBlockInfo	file:
partial_bit_count	libavcodec/dv.c	/^    uint8_t  partial_bit_count;$/;"	m	struct:EncBlockInfo	file:
partial_bit_count	libavcodec/dv.c	/^    uint8_t partial_bit_count;$/;"	m	struct:BlockInfo	file:
partial_count	libavcodec/vqavideo.c	/^    int partial_count;$/;"	m	struct:VqaContext	file:
partial_countdown	libavcodec/vqavideo.c	/^    int partial_countdown;$/;"	m	struct:VqaContext	file:
partial_samples	libavcodec/dca.c	/^    int partial_samples[DCA_SUBFRAMES_MAX];        \/\/\/< partial subsubframe samples count$/;"	m	struct:__anon93	file:
partition_class	libavcodec/vorbisdec.c	/^            uint8_t       partition_class[32];$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor1_s	file:
partition_count	libavcodec/h264data.h	/^    uint8_t partition_count;$/;"	m	struct:PMbInfo
partition_size	libavcodec/vorbisdec.c	/^    unsigned      partition_size;$/;"	m	struct:__anon260	file:
partition_size	libavcodec/vorbisenc.c	/^    int partition_size;$/;"	m	struct:__anon191	file:
partition_to_class	libavcodec/vorbisenc.c	/^    int *partition_to_class;$/;"	m	struct:__anon190	file:
partitioned_frame	libavcodec/mpegvideo.h	/^    int partitioned_frame;           \/\/\/< is current frame partitioned$/;"	m	struct:MpegEncContext
partitioning	libavcodec/vp8.h	/^    uint8_t partitioning;$/;"	m	struct:__anon181
partitions	libavcodec/avcodec.h	/^    int partitions;$/;"	m	struct:AVCodecContext
partitions	libavcodec/vorbisdec.c	/^            uint8_t       partitions;$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor1_s	file:
partitions	libavcodec/vorbisenc.c	/^    int partitions;$/;"	m	struct:__anon190	file:
pass	libavcodec/fft.c	334;"	d	file:
pass	libavcodec/png.h	/^    int pass;$/;"	m	struct:PNGDecContext
pass	libavfilter/libmpcodecs/vf_divtc.c	/^   int deghost, pass, phase, window, fcount, bcount, frameno, misscount,$/;"	m	struct:vf_priv_s	file:
pass1_rc	libavcodec/snow.c	/^    int pass1_rc;$/;"	m	struct:SnowContext	file:
pass1_rc_eq_output_sum	libavcodec/ratecontrol.h	/^    double pass1_rc_eq_output_sum;\/\/\/< sum of the output of the rc equation, this is used for normalization$/;"	m	struct:RateControlContext
pass1_wanted_bits	libavcodec/ratecontrol.h	/^    double pass1_wanted_bits;     \/\/\/< bits which should have been outputed by the pass1 code (including complexity init)$/;"	m	struct:RateControlContext
pass_logfilename_prefix	ffmpeg.c	/^static const char *pass_logfilename_prefix;$/;"	v	file:
pass_logfilename_prefix	ffmpeg/ffmpeg.c	/^static const char *pass_logfilename_prefix;$/;"	v	file:
pass_row_size	libavcodec/png.h	/^    int pass_row_size; \/* decompress row size of the current pass *\/$/;"	m	struct:PNGDecContext
passes	libavcodec/j2k.h	/^    J2kPass passes[100];$/;"	m	struct:__anon213
past_pitch_gain	libavcodec/sipr.h	/^    float past_pitch_gain;$/;"	m	struct:__anon235
past_quantizer_output_buf	libavcodec/g729dec.c	/^    int16_t  past_quantizer_output_buf[MA_NP + 1][10];$/;"	m	struct:__anon272	file:
past_quantizer_outputs	libavcodec/g729dec.c	/^    int16_t* past_quantizer_outputs[MA_NP + 1];$/;"	m	struct:__anon272	file:
pat	libavformat/mpegtsenc.c	/^    MpegTSSection pat; \/* MPEG2 pat table *\/$/;"	m	struct:MpegTSWrite	file:
pat_cb	libavformat/mpegts.c	/^static void pat_cb(MpegTSFilter *filter, const uint8_t *section, int section_len)$/;"	f	file:
pat_packet_count	libavformat/mpegtsenc.c	/^    int pat_packet_count;$/;"	m	struct:MpegTSWrite	file:
pat_packet_period	libavformat/mpegtsenc.c	/^    int pat_packet_period;$/;"	m	struct:MpegTSWrite	file:
patch_num_subbands	libavcodec/sbr.h	/^    uint8_t            patch_num_subbands[6];$/;"	m	struct:__anon57
patch_start_subband	libavcodec/sbr.h	/^    uint8_t            patch_start_subband[6];$/;"	m	struct:__anon57
path	libavcodec/adpcm.c	/^    int path;$/;"	m	struct:TrellisNode	file:
path	libavcodec/g722.c	/^        int path;$/;"	m	struct:__anon140::TrellisNode	file:
path	libavcodec/nellymoserenc.c	/^    uint8_t         (*path)[NELLY_BANDS];$/;"	m	struct:NellyMoserEncodeContext	file:
path	libavformat/img2.c	/^    char path[1024];$/;"	m	struct:__anon389	file:
path	libavformat/isom.h	/^    char *path;$/;"	m	struct:__anon466
path	libavformat/mmst.c	/^    char path[256];                      \/\/\/< Path of the resource being asked for.$/;"	m	struct:__anon341	file:
paths	libavcodec/adpcm.c	/^    TrellisPath *paths;$/;"	m	struct:ADPCMContext	file:
paths	libavcodec/g722.c	/^    } *paths[2];$/;"	m	struct:__anon140	typeref:struct:__anon140::TrellisPath	file:
patt	libavfilter/libmpcodecs/vf_noise.c	/^static int patt[4] = {$/;"	v	file:
pattern	libavfilter/libmpcodecs/vf_noise.c	/^        int pattern;$/;"	m	struct:FilterParam	file:
paused	ffplay.c	/^    int paused;$/;"	m	struct:VideoState	file:
payload	libavformat/mpegtsenc.c	/^    uint8_t payload[DEFAULT_PES_PAYLOAD_SIZE];$/;"	m	struct:MpegTSWriteStream	file:
payload_dts	libavformat/mpegtsenc.c	/^    int64_t payload_dts;$/;"	m	struct:MpegTSWriteStream	file:
payload_index	libavformat/mpegtsenc.c	/^    int payload_index;$/;"	m	struct:MpegTSWriteStream	file:
payload_pts	libavformat/mpegtsenc.c	/^    int64_t payload_pts;$/;"	m	struct:MpegTSWriteStream	file:
payload_type	libavformat/rtpdec.h	/^    int payload_type;$/;"	m	struct:RTPDemuxContext
payload_type	libavformat/rtpenc.h	/^    int payload_type;$/;"	m	struct:RTPMuxContext
pb	ffserver.c	/^    AVIOContext *pb;$/;"	m	struct:HTTPContext	file:
pb	libavcodec/aacenc.h	/^    PutBitContext pb;$/;"	m	struct:AACEncContext
pb	libavcodec/ac3enc.h	/^    PutBitContext pb;                       \/\/\/< bitstream writer context$/;"	m	struct:AC3EncodeContext
pb	libavcodec/asv1.c	/^    PutBitContext pb;$/;"	m	struct:ASV1Context	file:
pb	libavcodec/cabac.h	/^    PutBitContext pb;$/;"	m	struct:CABACContext
pb	libavcodec/dcaenc.c	/^    PutBitContext pb;$/;"	m	struct:__anon231	file:
pb	libavcodec/ffv1.c	/^    PutBitContext pb;$/;"	m	struct:FFV1Context	file:
pb	libavcodec/flacenc.c	/^    PutBitContext pb;$/;"	m	struct:FlacEncodeContext	file:
pb	libavcodec/huffyuv.c	/^    PutBitContext pb;$/;"	m	struct:HYuvContext	file:
pb	libavcodec/lzwenc.c	/^    PutBitContext pb;        \/\/\/< Put bit context for output$/;"	m	struct:LZWEncodeState	file:
pb	libavcodec/mpegaudioenc.c	/^    PutBitContext pb;$/;"	m	struct:MpegAudioContext	file:
pb	libavcodec/mpegvideo.h	/^    PutBitContext pb;$/;"	m	struct:MpegEncContext
pb	libavcodec/svq1enc.c	/^    PutBitContext pb;$/;"	m	struct:SVQ1Context	file:
pb	libavcodec/wma.h	/^    PutBitContext pb;$/;"	m	struct:WMACodecContext
pb	libavcodec/wmaprodec.c	/^    PutBitContext    pb;                            \/\/\/< context for filling the frame_data buffer$/;"	m	struct:WMAProDecodeCtx	file:
pb	libavcodec/wmavoice.c	/^    PutBitContext pb;             \/\/\/< bitstream writer for #sframe_cache$/;"	m	struct:__anon157	file:
pb	libavformat/applehttp.c	/^    AVIOContext pb;$/;"	m	struct:variant	file:
pb	libavformat/asfenc.c	/^    AVIOContext pb;$/;"	m	struct:__anon470	file:
pb	libavformat/avformat.h	/^    AVIOContext *pb;$/;"	m	struct:AVFormatContext
pb	libavformat/isom.h	/^    AVIOContext *pb;$/;"	m	struct:MOVStreamContext
pb	libavformat/rtpdec_asf.c	/^    AVIOContext *pktbuf, pb;$/;"	m	struct:PayloadContext	file:
pb	libavformat/wtvdec.c	/^    AVIOContext *pb;       \/** timeline file *\/$/;"	m	struct:__anon323	file:
pb2	libavcodec/mpegvideo.h	/^    PutBitContext pb2;               \/\/\/< used for data partitioned VOPs$/;"	m	struct:MpegEncContext
pb_18_63	libavcodec/x86/vp8dsp.asm	/^pb_18_63: times 8 db 18, 63$/;"	l
pb_27_63	libavcodec/x86/vp8dsp.asm	/^pb_27_63: times 8 db 27, 63$/;"	l
pb_7	libavcodec/x86/dsputil_yasm.asm	/^pb_7: times 8 db 7$/;"	l
pb_7f	libavcodec/dsputil.c	57;"	d	file:
pb_7f	libavcodec/pngdec.c	104;"	d	file:
pb_80	libavcodec/dsputil.c	58;"	d	file:
pb_80	libavcodec/pngdec.c	105;"	d	file:
pb_9_63	libavcodec/x86/vp8dsp.asm	/^pb_9_63:  times 8 db  9, 63$/;"	l
pb_buffer	ffserver.c	/^    uint8_t *pb_buffer; \/* XXX: use that in all the code *\/$/;"	m	struct:HTTPContext	file:
pb_f	libavcodec/x86/dsputil_yasm.asm	/^pb_f: times 16 db 15$/;"	l
pb_field_time	libavcodec/mpegvideo.h	/^    uint16_t pb_field_time;         \/\/\/< like above, just for interlaced$/;"	m	struct:MpegEncContext
pb_filesystem	libavformat/wtvdec.c	/^    AVIOContext *pb_filesystem;  \/** file system (AVFormatContext->pb) *\/$/;"	m	struct:__anon321	file:
pb_frame	libavcodec/mpegvideo.h	/^    int pb_frame;     \/\/\/< PB frame mode (0 = none, 1 = base, 2 = improved)$/;"	m	struct:MpegEncContext
pb_revwords	libavcodec/x86/dsputil_yasm.asm	/^pb_revwords: db 14, 15, 12, 13, 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 0, 1$/;"	d
pb_time	libavcodec/mpegvideo.h	/^    uint16_t pb_time;               \/\/\/< time distance between the last b and p,s,i frame$/;"	m	struct:MpegEncContext
pb_zz11zz55zz99zzdd	libavcodec/x86/dsputil_yasm.asm	/^pb_zz11zz55zz99zzdd: db -1,-1,1,1,-1,-1,5,5,-1,-1,9,9,-1,-1,13,13$/;"	d
pb_zzzz3333zzzzbbbb	libavcodec/x86/dsputil_yasm.asm	/^pb_zzzz3333zzzzbbbb: db -1,-1,-1,-1,3,3,3,3,-1,-1,-1,-1,11,11,11,11$/;"	d
pb_zzzzzzzz77777777	libavcodec/x86/dsputil_yasm.asm	/^pb_zzzzzzzz77777777: times 8 db -1$/;"	l
pbctx	libavcodec/alacenc.c	/^    PutBitContext pbctx;$/;"	m	struct:AlacEncodeContext	file:
pblocks	libavcodec/mpegvideo.h	/^    DCTELEM (*pblocks[12])[64];$/;"	m	struct:MpegEncContext
pbuf	libavcodec/dvbsubdec.c	/^    uint8_t *pbuf;$/;"	m	struct:DVBSubRegion	file:
pbuf	libavcodec/lzw.c	/^    const uint8_t *pbuf, *ebuf;$/;"	m	struct:LZWState	file:
pc	libavcodec/aac_ac3_parser.h	/^    ParseContext pc;$/;"	m	struct:AACAC3ParseContext
pc	libavcodec/dca_parser.c	/^    ParseContext pc;$/;"	m	struct:DCAParseContext	file:
pc	libavcodec/latm_parser.c	/^    ParseContext pc;$/;"	m	struct:LATMParseContext	file:
pc	libavcodec/mlp_parser.c	/^    ParseContext pc;$/;"	m	struct:MLPParseContext	file:
pc	libavcodec/mpegaudio_parser.c	/^    ParseContext pc;$/;"	m	struct:MpegAudioParseContext	file:
pc	libavcodec/parser.h	/^    ParseContext pc;$/;"	m	struct:ParseContext1
pc	libavcodec/vc1_parser.c	/^    ParseContext pc;$/;"	m	struct:__anon138	file:
pc_tbl2	libavcodec/truemotion1data.h	/^static const uint8_t pc_tbl2[] = {$/;"	v
pc_tbl3	libavcodec/truemotion1data.h	/^static const uint8_t pc_tbl3[] = {$/;"	v
pc_tbl4	libavcodec/truemotion1data.h	/^static const uint8_t pc_tbl4[] = {$/;"	v
pce_data	libavformat/adts.h	/^    uint8_t pce_data[MAX_PCE_SIZE];$/;"	m	struct:__anon431
pce_instance_tag	libavcodec/aac.h	/^    int pce_instance_tag;                           \/\/\/< Indicates with which program the DRC info is associated.$/;"	m	struct:__anon241
pce_size	libavformat/adts.h	/^    int pce_size;$/;"	m	struct:__anon431
pcm	libavcodec/dcaenc.c	/^    int32_t pcm[FFMAX(LFE_INTERPOLATION, DCA_SUBBANDS_32)];$/;"	m	struct:__anon231	file:
pcm	tests/fate-run.sh	/^pcm(){$/;"	f
pcm_alaw_tableinit	libavcodec/pcm_tablegen.h	/^static void pcm_alaw_tableinit(void)$/;"	f
pcm_alaw_tableinit	libavcodec/pcm_tablegen.h	76;"	d
pcm_bluray_decode_frame	libavcodec/pcm-mpeg.c	/^static int pcm_bluray_decode_frame(AVCodecContext *avctx,$/;"	f	file:
pcm_bluray_parse_header	libavcodec/pcm-mpeg.c	/^static int pcm_bluray_parse_header(AVCodecContext *avctx,$/;"	f	file:
pcm_decode_frame	libavcodec/pcm.c	/^static int pcm_decode_frame(AVCodecContext *avctx,$/;"	f	file:
pcm_decode_init	libavcodec/pcm.c	/^static av_cold int pcm_decode_init(AVCodecContext * avctx)$/;"	f	file:
pcm_encode_close	libavcodec/pcm.c	/^static av_cold int pcm_encode_close(AVCodecContext *avctx)$/;"	f	file:
pcm_encode_frame	libavcodec/pcm.c	/^static int pcm_encode_frame(AVCodecContext *avctx,$/;"	f	file:
pcm_encode_init	libavcodec/pcm.c	/^static av_cold int pcm_encode_init(AVCodecContext *avctx)$/;"	f	file:
pcm_read_seek	libavformat/pcm.c	/^int pcm_read_seek(AVFormatContext *s,$/;"	f
pcm_ulaw_tableinit	libavcodec/pcm_tablegen.h	/^static void pcm_ulaw_tableinit(void)$/;"	f
pcm_ulaw_tableinit	libavcodec/pcm_tablegen.h	77;"	d
pcpyh	libavcodec/ps2/mmi.h	111;"	d
pcpyld	libavcodec/ps2/mmi.h	108;"	d
pcpyud	libavcodec/ps2/mmi.h	105;"	d
pcr_incr	libavformat/mpegts.c	/^    int pcr_incr;       \/**< used to estimate the exact PCR  *\/$/;"	m	struct:MpegTSContext	file:
pcr_packet_count	libavformat/mpegtsenc.c	/^    int pcr_packet_count;$/;"	m	struct:MpegTSService	file:
pcr_packet_period	libavformat/mpegtsenc.c	/^    int pcr_packet_period;$/;"	m	struct:MpegTSService	file:
pcr_pid	libavformat/avformat.h	/^    int pcr_pid;$/;"	m	struct:AVProgram
pcr_pid	libavformat/mpegts.c	/^    int pcr_pid; \/**< if -1 then all packets containing PCR are considered *\/$/;"	m	struct:PESContext	file:
pcr_pid	libavformat/mpegtsenc.c	/^    int pcr_pid;$/;"	m	struct:MpegTSService	file:
pcx_decode_frame	libavcodec/pcx.c	/^static int pcx_decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
pcx_encode_frame	libavcodec/pcxenc.c	/^static int pcx_encode_frame(AVCodecContext *avctx,$/;"	f	file:
pcx_encode_init	libavcodec/pcxenc.c	/^static av_cold int pcx_encode_init(AVCodecContext *avctx)$/;"	f	file:
pcx_end	libavcodec/pcx.c	/^static av_cold int pcx_end(AVCodecContext *avctx) {$/;"	f	file:
pcx_init	libavcodec/pcx.c	/^static av_cold int pcx_init(AVCodecContext *avctx) {$/;"	f	file:
pcx_palette	libavcodec/pcx.c	/^static void pcx_palette(const uint8_t **src, uint32_t *dst, unsigned int pallen) {$/;"	f	file:
pcx_rle_decode	libavcodec/pcx.c	/^static const uint8_t *pcx_rle_decode(const uint8_t *src, uint8_t *dst,$/;"	f	file:
pcx_rle_encode	libavcodec/pcxenc.c	/^static int pcx_rle_encode(      uint8_t *dst, int dst_size,$/;"	f	file:
pd_16384	libavcodec/x86/dsputil_yasm.asm	/^pd_16384: times 4 dd 16384$/;"	l
pd_32	libavcodec/x86/h264_idct_10bit.asm	/^pd_32:        times 4 dd 32$/;"	l
pd_im_smooth	libavcodec/aacps_tablegen.h	/^static float pd_im_smooth[8*8*8];$/;"	v
pd_re_smooth	libavcodec/aacps_tablegen.h	/^static float pd_re_smooth[8*8*8];$/;"	v
pduration	libavformat/oggdec.h	/^    unsigned int pduration;$/;"	m	struct:ogg_stream
pe	libavcodec/aacpsy.c	/^    float pe;           \/\/\/< perceptual entropy$/;"	m	struct:AacPsyBand	file:
pe	libavcodec/aacpsy.c	/^    } pe;$/;"	m	struct:AacPsyContext	typeref:struct:AacPsyContext::__anon255	file:
pe	libavcodec/psymodel.h	/^    float pe[PSY_MAX_CHANS];          \/\/\/< total PE for each channel in the frame$/;"	m	struct:FFPsyContext
pe_const	libavcodec/aacpsy.c	/^    float pe_const;     \/\/\/< constant part of the PE calculation$/;"	m	struct:AacPsyBand	file:
peak_bitrate	libavcodec/mlp_parser.h	/^    int peak_bitrate;           \/\/\/< Peak bitrate for VBR, actual bitrate (==peak) for CBR$/;"	m	struct:MLPHeaderInfo
peak_decay_diff_smooth	libavcodec/aacps.h	/^    float  peak_decay_diff_smooth[34];$/;"	m	struct:__anon257
peak_decay_nrg	libavcodec/aacps.h	/^    float  peak_decay_nrg[34];$/;"	m	struct:__anon257
peak_per2wid	libavcodec/twinvq.c	/^    uint16_t     peak_per2wid;$/;"	m	struct:__anon66	file:
pegasus_rct	libavcodec/mjpegdec.h	/^    int pegasus_rct;    \/* pegasus reversible colorspace transform *\/$/;"	m	struct:MJpegDecodeContext
penalty_factor	libavcodec/mpegvideo.h	/^    int penalty_factor;                \/*!< an estimate of the bits required to$/;"	m	struct:MotionEstContext
pending_frames	libavfilter/vf_select.c	/^    AVFifoBuffer *pending_frames; \/\/\/< FIFO buffer of video frames$/;"	m	struct:__anon10	file:
per_block_abt	libavcodec/wmv2.h	/^    int per_block_abt;$/;"	m	struct:Wmv2Context
per_frame	libavdevice/bktr.c	/^    uint64_t per_frame;$/;"	m	struct:__anon312	file:
per_mb_abt	libavcodec/wmv2.h	/^    int per_mb_abt;$/;"	m	struct:Wmv2Context
per_mb_rl_bit	libavcodec/wmv2.h	/^    int per_mb_rl_bit;$/;"	m	struct:Wmv2Context
per_mb_rl_table	libavcodec/mpegvideo.h	/^    int per_mb_rl_table;$/;"	m	struct:MpegEncContext
perceptual_weight	libavcodec/psymodel.h	/^    float perceptual_weight;$/;"	m	struct:FFPsyBand
period_size	libavdevice/alsa-audio.h	/^    int period_size; \/\/\/< bytes per sample * channels$/;"	m	struct:__anon313
perm1	libavcodec/x86/fft_mmx.asm	/^perm1: dd 0x00, 0x02, 0x03, 0x01, 0x03, 0x00, 0x02, 0x01$/;"	d
perm2	libavcodec/x86/fft_mmx.asm	/^perm2: dd 0x00, 0x01, 0x02, 0x03, 0x01, 0x00, 0x02, 0x03$/;"	d
perm_rgb_0	libswscale/ppc/yuv2rgb_altivec.c	/^  perm_rgb_0 = {0x00,0x01,0x10,0x02,0x03,0x11,0x04,0x05,$/;"	v	file:
perm_rgb_1	libswscale/ppc/yuv2rgb_altivec.c	/^  perm_rgb_1 = {0x0b,0x15,0x0c,0x0d,0x16,0x0e,0x0f,0x17,$/;"	v	file:
perm_rgb_2	libswscale/ppc/yuv2rgb_altivec.c	/^  perm_rgb_2 = {0x10,0x11,0x12,0x13,0x14,0x15,0x16,0x17,$/;"	v	file:
perm_rgb_3	libswscale/ppc/yuv2rgb_altivec.c	/^  perm_rgb_3 = {0x1a,0x06,0x07,0x1b,0x08,0x09,0x1c,0x0a,$/;"	v	file:
perms	libavfilter/avfilter.h	/^    int perms;                  \/\/\/< permissions, see the AV_PERM_* flags$/;"	m	struct:AVFilterBufferRef
permut	libavcodec/twinvq.c	/^    int16_t permut[4][4096];$/;"	m	struct:TwinContext	file:
permutate_in_line	libavcodec/twinvq.c	/^static void permutate_in_line(int16_t *tab, int num_vect, int num_blocks,$/;"	f	file:
permutated	libavcodec/dsputil.h	/^    uint8_t permutated[64];$/;"	m	struct:ScanTable
perr	libavcodec/alpha/asm.h	128;"	d
perr	libavcodec/alpha/asm.h	142;"	d
perr	libavcodec/alpha/asm.h	175;"	d
perror	libavcodec/dvbsubdec.c	38;"	d	file:
perror	libavcodec/dvdsubdec.c	435;"	d	file:
perror	libavutil/internal.h	157;"	d
perror	libavutil/internal.h	158;"	d
pes_cb	libavformat/mpegts.c	/^    PESCallback *pes_cb;$/;"	m	struct:MpegTSPESFilter	file:
pes_filter	libavformat/mpegts.c	/^        MpegTSPESFilter pes_filter;$/;"	m	union:MpegTSFilter::__anon471	file:
pes_header_size	libavformat/mpegts.c	/^    int pes_header_size;$/;"	m	struct:PESContext	file:
pextlb	libavcodec/ps2/mmi.h	168;"	d
pextlh	libavcodec/ps2/mmi.h	123;"	d
pextlw	libavcodec/ps2/mmi.h	117;"	d
pextuh	libavcodec/ps2/mmi.h	126;"	d
pextuw	libavcodec/ps2/mmi.h	120;"	d
pf_1_24	libavcodec/x86/ac3dsp.asm	/^pf_1_24: times 4 dd 0x4B800000$/;"	l
pflags	libavformat/oggdec.h	/^    unsigned int pflags;$/;"	m	struct:ogg_stream
pfr2_TAG	libavformat/4xm.c	49;"	d	file:
pfrac	libavcodec/qcelpdata.h	/^    uint8_t pfrac[4];   \/\/\/!< fractional pitch lag for each pitch subframe$/;"	m	struct:__anon84
pframes	libavformat/gxfenc.c	/^    int pframes;$/;"	m	struct:GXFStreamContext	file:
pfrm_TAG	libavformat/4xm.c	46;"	d	file:
pgain	libavcodec/qcelpdata.h	/^    uint8_t pgain[4];   \/\/\/!< pitch gain for each pitch subframe$/;"	m	struct:__anon84
pgain_bit	libavcodec/twinvq.c	/^    uint8_t      pgain_bit;      \/\/\/< bits for PPC gain$/;"	m	struct:__anon66	file:
pgb	libavcodec/wmaprodec.c	/^    GetBitContext    pgb;                           \/\/\/< bitstream reader context for the packet$/;"	m	struct:WMAProDecodeCtx	file:
pgm_save	doc/examples/encoding-example.c	/^static void pgm_save(unsigned char *buf, int wrap, int xsize, int ysize,$/;"	f	file:
pgm_structure	libavfilter/libmpcodecs/vf_remove_logo.c	/^} pgm_structure;$/;"	t	typeref:struct:__anon34	file:
pgmyuv_save	tests/rotozoom.c	/^static void pgmyuv_save(const char *filename, int w, int h,$/;"	f	file:
pgmyuv_save	tests/videogen.c	/^static void pgmyuv_save(const char *filename, int w, int h,$/;"	f	file:
phase	libavcodec/qdm2.c	/^    int   phase;$/;"	m	struct:__anon197	file:
phase	libavcodec/qdm2.c	/^    uint8_t phase;$/;"	m	struct:__anon198	file:
phase	libavfilter/libmpcodecs/vf_divtc.c	/^   int deghost, pass, phase, window, fcount, bcount, frameno, misscount,$/;"	m	struct:vf_priv_s	file:
phase_flags	libavcodec/ac3dec.h	/^    int phase_flags[AC3_MAX_CPL_BANDS];     \/\/\/< phase flags                            (phsflg)$/;"	m	struct:__anon88
phase_flags_in_use	libavcodec/ac3dec.h	/^    int phase_flags_in_use;                 \/\/\/< phase flags in use                     (phsflginu)$/;"	m	struct:__anon88
phase_mask	libavcodec/resample2.c	/^    int phase_mask;$/;"	m	struct:AVResampleContext	file:
phase_shift	libavcodec/qdm2.c	/^    int   phase_shift;$/;"	m	struct:__anon197	file:
phase_shift	libavcodec/resample2.c	/^    int phase_shift;$/;"	m	struct:AVResampleContext	file:
phi_fract	libavcodec/aacps_tablegen.h	/^static float phi_fract[2][50][2];$/;"	v
phmadh	libavcodec/ps2/mmi.h	102;"	d
photometric_interpretation	libavcodec/tiffenc.c	/^    int photometric_interpretation;     \/\/\/< photometric interpretation$/;"	m	struct:TiffEncoderContext	file:
pic	libavcodec/8bps.c	/^        AVFrame pic;$/;"	m	struct:EightBpsContext	file:
pic	libavcodec/bink.c	/^    AVFrame        pic, last;$/;"	m	struct:BinkContext	file:
pic	libavcodec/crystalhd.c	/^    AVFrame pic;$/;"	m	struct:__anon268	file:
pic	libavcodec/cscd.c	/^    AVFrame pic;$/;"	m	struct:__anon232	file:
pic	libavcodec/dfa.c	/^    AVFrame pic;$/;"	m	struct:DfaContext	file:
pic	libavcodec/dxa.c	/^    AVFrame pic, prev;$/;"	m	struct:DxaDecContext	file:
pic	libavcodec/kgv1dec.c	/^    AVFrame pic;$/;"	m	struct:__anon115	file:
pic	libavcodec/kmvc.c	/^    AVFrame pic;$/;"	m	struct:KmvcContext	file:
pic	libavcodec/lcldec.c	/^    AVFrame pic;$/;"	m	struct:LclDecContext	file:
pic	libavcodec/lclenc.c	/^    AVFrame pic;$/;"	m	struct:LclEncContext	file:
pic	libavcodec/libx264.c	/^    x264_picture_t  pic;$/;"	m	struct:X264Context	file:
pic	libavcodec/libxavs.c	/^    xavs_picture_t  pic;$/;"	m	struct:XavsContext	file:
pic	libavcodec/loco.c	/^    AVFrame pic;$/;"	m	struct:LOCOContext	file:
pic	libavcodec/msvideo1enc.c	/^    AVFrame pic;$/;"	m	struct:Msvideo1EncContext	file:
pic	libavcodec/nuv.c	/^    AVFrame pic;$/;"	m	struct:__anon100	file:
pic	libavcodec/qdrw.c	/^    AVFrame pic;$/;"	m	struct:QdrawContext	file:
pic	libavcodec/qpeg.c	/^    AVFrame pic, ref;$/;"	m	struct:QpegContext	file:
pic	libavcodec/rawdec.c	/^    AVFrame pic;             \/\/\/< AVCodecContext.coded_frame$/;"	m	struct:RawVideoContext	file:
pic	libavcodec/smacker.c	/^    AVFrame pic;$/;"	m	struct:SmackVContext	file:
pic	libavcodec/tmv.c	/^    AVFrame pic;$/;"	m	struct:TMVContext	file:
pic	libavcodec/truemotion2.c	/^    AVFrame pic;$/;"	m	struct:TM2Context	file:
pic	libavcodec/tscc.c	/^    AVFrame pic;$/;"	m	struct:TsccContext	file:
pic	libavcodec/vb.c	/^    AVFrame pic;$/;"	m	struct:VBDecContext	file:
pic	libavcodec/vmnc.c	/^    AVFrame pic;$/;"	m	struct:VmncContext	file:
pic	libavcodec/wnv1.c	/^    AVFrame pic;$/;"	m	struct:WNV1Context	file:
pic	libavcodec/xl.c	/^    AVFrame pic;$/;"	m	struct:VideoXLContext	file:
pic	libavcodec/xxan.c	/^    AVFrame pic;$/;"	m	struct:XanContext	file:
pic	libavcodec/zmbv.c	/^    AVFrame pic;$/;"	m	struct:ZmbvContext	file:
pic	libavcodec/zmbvenc.c	/^    AVFrame pic;$/;"	m	struct:ZmbvEncContext	file:
pic	libavfilter/internal.h	/^    AVFilterBufferRef *pic[POOL_SIZE];$/;"	m	struct:AVFilterPool
pic_as_field	libavcodec/h264_refs.c	/^static void pic_as_field(Picture *pic, const int parity){$/;"	f	file:
pic_conf	libavcodec/indeo5.c	/^    IVIPicConfig    pic_conf;$/;"	m	struct:__anon203	file:
pic_hdr_size	libavcodec/indeo5.c	/^    uint32_t        pic_hdr_size;    \/\/\/< picture header size in bytes$/;"	m	struct:__anon203	file:
pic_height	libavcodec/ivi_common.h	/^    uint16_t    pic_height;$/;"	m	struct:__anon109
pic_id	libavcodec/mpegvideo.h	/^    int pic_id;                 \/**< h264 pic_num (short -> no wrap version of pic_num,$/;"	m	struct:Picture
pic_num_extract	libavcodec/h264_refs.c	/^static int pic_num_extract(H264Context *h, int pic_num, int *structure){$/;"	f	file:
pic_order_present	libavcodec/h264.h	/^    int pic_order_present;      \/\/\/< pic_order_present_flag$/;"	m	struct:PPS
pic_param_buf_id	libavcodec/vaapi.h	/^    uint32_t pic_param_buf_id;$/;"	m	struct:vaapi_context
pic_struct_present_flag	libavcodec/h264.h	/^    int pic_struct_present_flag;$/;"	m	struct:SPS
pic_structure	libavcodec/cavs.h	/^    int pic_structure;$/;"	m	struct:__anon207
pic_type	libavcodec/cavs.h	/^    int pic_type;$/;"	m	struct:__anon207
pic_type	libavcodec/crystalhd.c	/^    uint8_t pic_type;$/;"	m	struct:OpaqueList	file:
pic_width	libavcodec/ivi_common.h	/^    uint16_t    pic_width;$/;"	m	struct:__anon109
pick_format	libavfilter/avfiltergraph.c	/^static void pick_format(AVFilterLink *link)$/;"	f	file:
pick_formats	libavfilter/avfiltergraph.c	/^static void pick_formats(AVFilterGraph *graph)$/;"	f	file:
picmemset	libavcodec/pictordec.c	/^static void picmemset(PicContext *s, int value, int run, int *x, int *y, int *plane, int bits_per_plane)$/;"	f	file:
picmemset_8bpp	libavcodec/pictordec.c	/^static void picmemset_8bpp(PicContext *s, int value, int run, int *x, int *y)$/;"	f	file:
picref	ffmpeg.c	/^    AVFilterBufferRef *picref;$/;"	m	struct:AVOutputStream	file:
picref	ffmpeg/ffmpeg.c	/^    AVFilterBufferRef *picref;$/;"	m	struct:AVOutputStream	file:
picref	ffplay.c	/^    AVFilterBufferRef *picref;$/;"	m	struct:VideoPicture	file:
picref	libavfilter/vf_fifo.c	/^    AVFilterBufferRef *picref;$/;"	m	struct:BufPic	file:
picref	libavfilter/vsink_buffer.c	/^    AVFilterBufferRef *picref;   \/\/\/< cached picref$/;"	m	struct:__anon39	file:
picref	libavfilter/vsrc_buffer.c	/^    AVFilterBufferRef *picref;$/;"	m	struct:__anon25	file:
picref	libavfilter/vsrc_movie.c	/^    AVFilterBufferRef *picref;$/;"	m	struct:__anon38	file:
pict	libavcodec/avcodec.h	/^    AVPicture pict;$/;"	m	struct:AVSubtitleRect
pict_type	libavcodec/avcodec.h	/^    int pict_type; \/* XXX: Put it back in AVCodecContext. *\/$/;"	m	struct:AVCodecParserContext
pict_type	libavcodec/mpegvideo.h	/^    int pict_type;              \/\/\/< AV_PICTURE_TYPE_I, AV_PICTURE_TYPE_P, AV_PICTURE_TYPE_B, ...$/;"	m	struct:MpegEncContext
pict_type	libavcodec/ratecontrol.h	/^    int pict_type;$/;"	m	struct:RateControlEntry
pict_type	libavfilter/avfilter.h	/^    enum AVPictureType pict_type; \/\/\/< picture type of the frame$/;"	m	struct:AVFilterBufferRefVideoProps	typeref:enum:AVFilterBufferRefVideoProps::AVPictureType
pict_type	libavfilter/libmpcodecs/mp_image.h	/^    int pict_type; \/\/ 0->unknown, 1->I, 2->P, 3->B$/;"	m	struct:mp_image
pictq	ffplay.c	/^    VideoPicture pictq[VIDEO_PICTURE_QUEUE_SIZE];$/;"	m	struct:VideoState	file:
pictq_cond	ffplay.c	/^    SDL_cond *pictq_cond;$/;"	m	struct:VideoState	file:
pictq_mutex	ffplay.c	/^    SDL_mutex *pictq_mutex;$/;"	m	struct:VideoState	file:
pictq_rindex	ffplay.c	/^    int pictq_size, pictq_rindex, pictq_windex;$/;"	m	struct:VideoState	file:
pictq_size	ffplay.c	/^    int pictq_size, pictq_rindex, pictq_windex;$/;"	m	struct:VideoState	file:
pictq_windex	ffplay.c	/^    int pictq_size, pictq_rindex, pictq_windex;$/;"	m	struct:VideoState	file:
picture	doc/examples/muxing-example.c	/^AVFrame *picture, *tmp_picture;$/;"	v
picture	libavcodec/a64enc.h	/^    AVFrame picture;$/;"	m	struct:A64Context
picture	libavcodec/asv1.c	/^    AVFrame picture;$/;"	m	struct:ASV1Context	file:
picture	libavcodec/avs.c	/^    AVFrame picture;$/;"	m	struct:__anon175	file:
picture	libavcodec/bmp.h	/^    AVFrame picture;$/;"	m	struct:BMPContext
picture	libavcodec/cavs.h	/^    Picture picture; \/\/\/< currently decoded frame$/;"	m	struct:__anon207
picture	libavcodec/cljr.c	/^    AVFrame picture;$/;"	m	struct:CLJRContext	file:
picture	libavcodec/dnxhddec.c	/^    AVFrame picture;$/;"	m	struct:__anon154	file:
picture	libavcodec/dpx.c	/^    AVFrame picture;$/;"	m	struct:DPXContext	file:
picture	libavcodec/dpxenc.c	/^    AVFrame picture;$/;"	m	struct:DPXContext	file:
picture	libavcodec/dv.c	/^    AVFrame          picture;$/;"	m	struct:DVVideoContext	file:
picture	libavcodec/ffv1.c	/^    AVFrame picture;$/;"	m	struct:FFV1Context	file:
picture	libavcodec/gif.c	/^    AVFrame picture;$/;"	m	struct:__anon89	file:
picture	libavcodec/gifdec.c	/^    AVFrame picture;$/;"	m	struct:GifState	file:
picture	libavcodec/huffyuv.c	/^    AVFrame picture;$/;"	m	struct:HYuvContext	file:
picture	libavcodec/indeo2.c	/^    AVFrame picture;$/;"	m	struct:Ir2Context	file:
picture	libavcodec/j2kdec.c	/^    AVFrame picture;$/;"	m	struct:__anon98	file:
picture	libavcodec/j2kenc.c	/^    AVFrame *picture;$/;"	m	struct:__anon63	file:
picture	libavcodec/jpegls.h	/^    AVFrame picture;$/;"	m	struct:JpeglsContext
picture	libavcodec/lagarith.c	/^    AVFrame picture;$/;"	m	struct:LagarithContext	file:
picture	libavcodec/libdiracenc.c	/^    AVFrame picture;$/;"	m	struct:FfmpegDiracEncoderParams	file:
picture	libavcodec/libschroedingerenc.c	/^    AVFrame picture;$/;"	m	struct:FfmpegSchroEncoderParams	file:
picture	libavcodec/mdec.c	/^    AVFrame picture;$/;"	m	struct:MDECContext	file:
picture	libavcodec/mjpegdec.h	/^    AVFrame picture; \/* picture structure *\/$/;"	m	struct:MJpegDecodeContext
picture	libavcodec/mpegvideo.h	/^    Picture *picture;          \/\/\/< main picture buffer$/;"	m	struct:MpegEncContext
picture	libavcodec/mxpegdec.c	/^    AVFrame picture[2]; \/* pictures array *\/$/;"	m	struct:MXpegDecodeContext	file:
picture	libavcodec/pcx.c	/^    AVFrame picture;$/;"	m	struct:PCXContext	file:
picture	libavcodec/pcxenc.c	/^    AVFrame picture;$/;"	m	struct:PCXContext	file:
picture	libavcodec/pgssubdec.c	/^    PGSSubPicture      picture;$/;"	m	struct:PGSSubContext	file:
picture	libavcodec/pngenc.c	/^    AVFrame picture;$/;"	m	struct:PNGEncContext	file:
picture	libavcodec/pnm.h	/^    AVFrame picture;$/;"	m	struct:PNMContext
picture	libavcodec/ptx.c	/^    AVFrame picture;$/;"	m	struct:PTXContext	file:
picture	libavcodec/sgidec.c	/^    AVFrame picture;$/;"	m	struct:SgiState	file:
picture	libavcodec/sgienc.c	/^    AVFrame picture;$/;"	m	struct:SgiContext	file:
picture	libavcodec/sunrast.c	/^    AVFrame picture;$/;"	m	struct:SUNRASTContext	file:
picture	libavcodec/svq1enc.c	/^    AVFrame picture;$/;"	m	struct:SVQ1Context	file:
picture	libavcodec/targa.c	/^    AVFrame picture;$/;"	m	struct:TargaContext	file:
picture	libavcodec/targaenc.c	/^    AVFrame picture;$/;"	m	struct:TargaContext	file:
picture	libavcodec/tiff.c	/^    AVFrame picture;$/;"	m	struct:TiffContext	file:
picture	libavcodec/tiffenc.c	/^    AVFrame picture;$/;"	m	struct:TiffEncoderContext	file:
picture	libavcodec/txd.c	/^    AVFrame picture;$/;"	m	struct:TXDContext	file:
picture	libavcodec/vcr1.c	/^    AVFrame picture;$/;"	m	struct:VCR1Context	file:
picture1	libavcodec/png.h	/^    AVFrame picture1, picture2;$/;"	m	struct:PNGDecContext
picture2	libavcodec/png.h	/^    AVFrame picture1, picture2;$/;"	m	struct:PNGDecContext
picture_count	libavcodec/mpegvideo.h	/^    int picture_count;             \/\/\/< number of allocated pictures (MAX_PICTURE_COUNT * avctx->thread_count)$/;"	m	struct:MpegEncContext
picture_in_gop_number	libavcodec/mpegvideo.h	/^    int picture_in_gop_number; \/\/\/< 0-> first pic in gop, ...$/;"	m	struct:MpegEncContext
picture_index	libavcodec/mxpegdec.c	/^    int picture_index; \/* index of current picture *\/$/;"	m	struct:MXpegDecodeContext	file:
picture_number	libavcodec/ffv1.c	/^    int picture_number;$/;"	m	struct:FFV1Context	file:
picture_number	libavcodec/huffyuv.c	/^    int picture_number;$/;"	m	struct:HYuvContext	file:
picture_number	libavcodec/mpegvideo.h	/^    int picture_number;       \/\/FIXME remove, unclear definition$/;"	m	struct:MpegEncContext
picture_ptr	libavcodec/mjpegdec.h	/^    AVFrame *picture_ptr; \/* pointer to picture structure *\/$/;"	m	struct:MJpegDecodeContext
picture_range_end	libavcodec/mpegvideo.h	/^    int picture_range_start, picture_range_end; \/\/\/< the part of picture that this context can allocate in$/;"	m	struct:MpegEncContext
picture_range_start	libavcodec/mpegvideo.h	/^    int picture_range_start, picture_range_end; \/\/\/< the part of picture that this context can allocate in$/;"	m	struct:MpegEncContext
picture_structure	libavcodec/mpegvideo.h	/^    int picture_structure;$/;"	m	struct:MpegEncContext
picture_structure	libavcodec/xvmc.h	/^    unsigned int    picture_structure;$/;"	m	struct:xvmc_pix_fmt
pictures	libavcodec/c93.c	/^    AVFrame pictures[2];$/;"	m	struct:__anon276	file:
pid	ffserver.c	/^    pid_t pid;  \/* Of ffmpeg process *\/$/;"	m	struct:FFStream	file:
pid	libavformat/mpegts.c	/^    int pid;$/;"	m	struct:MpegTSFilter	file:
pid	libavformat/mpegts.c	/^    int pid;$/;"	m	struct:PESContext	file:
pid	libavformat/mpegtsenc.c	/^    int pid; \/* stream associated pid *\/$/;"	m	struct:MpegTSWriteStream	file:
pid	libavformat/mpegtsenc.c	/^    int pid;$/;"	m	struct:MpegTSSection	file:
pid_start	ffserver.c	/^    time_t pid_start;  \/* Of ffmpeg process *\/$/;"	m	struct:FFStream	file:
pids	libavformat/mpegts.c	/^    MpegTSFilter *pids[NB_PID_MAX];$/;"	m	struct:MpegTSContext	file:
pids	libavformat/mpegts.c	/^    unsigned int pids[MAX_PIDS_PER_PROGRAM];$/;"	m	struct:Program	file:
pin	libavdevice/dshow.h	/^    libAVPin *pin;$/;"	m	struct:libAVEnumPins
pin	libavdevice/dshow.h	/^    libAVPin *pin;$/;"	m	struct:libAVFilter
pinteh	libavcodec/ps2/mmi.h	153;"	d
pinth	libavcodec/ps2/mmi.h	99;"	d
pipe_open	libavformat/file.c	/^static int pipe_open(URLContext *h, const char *filename, int flags)$/;"	f	file:
pitch	libavcodec/ivi_common.h	/^    int             pitch;          \/\/\/< pitch associated with the buffers above$/;"	m	struct:__anon107
pitch_delay	libavcodec/sipr.h	/^    int pitch_delay[5];        \/\/\/< pitch delay$/;"	m	struct:__anon236
pitch_delay_bits	libavcodec/sipr.c	/^    uint8_t pitch_delay_bits[5];$/;"	m	struct:__anon112	file:
pitch_delay_int_prev	libavcodec/g729dec.c	/^    int pitch_delay_int_prev;   \/\/\/< integer part of previous subframe's pitch delay (4.1.3)$/;"	m	struct:__anon272	file:
pitch_diff_sh16	libavcodec/wmavoice.c	/^    int pitch_diff_sh16;          \/\/\/< ((cur_pitch_val - #last_pitch_val)$/;"	m	struct:__anon157	file:
pitch_enhancer	libavcodec/amrwbdec.c	/^static void pitch_enhancer(float *fixed_vector, float voice_fac)$/;"	f	file:
pitch_fac	libavcodec/acelp_vectors.h	/^    float    pitch_fac;$/;"	m	struct:__anon122
pitch_gain	libavcodec/amrnbdec.c	/^    float                     pitch_gain[5]; \/\/\/< quantified pitch gains for the current and previous four subframes$/;"	m	struct:AMRContext	file:
pitch_gain	libavcodec/amrwbdec.c	/^    float                          pitch_gain[6]; \/\/\/< quantified pitch gains for the current and previous five subframes$/;"	m	struct:__anon64	file:
pitch_gain	libavcodec/qcelpdec.c	/^    float    pitch_gain[4];$/;"	m	struct:__anon225	file:
pitch_lag	libavcodec/acelp_vectors.h	/^    int      pitch_lag;$/;"	m	struct:__anon122
pitch_lag	libavcodec/qcelpdec.c	/^    uint8_t  pitch_lag[4];$/;"	m	struct:__anon225	file:
pitch_lag_int	libavcodec/amrnbdec.c	/^    uint8_t                   pitch_lag_int; \/\/\/< integer part of pitch lag from current subframe$/;"	m	struct:AMRContext	file:
pitch_lag_int	libavcodec/amrwbdec.c	/^    uint8_t                        pitch_lag_int; \/\/\/< integer part of pitch lag of the previous subframe$/;"	m	struct:__anon64	file:
pitch_lag_prev	libavcodec/sipr.h	/^    int pitch_lag_prev;$/;"	m	struct:__anon235
pitch_nbits	libavcodec/wmavoice.c	/^    int pitch_nbits;              \/\/\/< number of bits used to specify the$/;"	m	struct:__anon157	file:
pitch_pre_filter_mem	libavcodec/qcelpdec.c	/^    float    pitch_pre_filter_mem[303];$/;"	m	struct:__anon225	file:
pitch_sharp_factor	libavcodec/sipr.c	/^    float pitch_sharp_factor;$/;"	m	struct:__anon112	file:
pitch_sharpening	libavcodec/amrnbdec.c	/^static void pitch_sharpening(AMRContext *p, int subframe, enum Mode mode,$/;"	f	file:
pitch_sharpening	libavcodec/amrwbdec.c	/^static void pitch_sharpening(AMRWBContext *ctx, float *fixed_vector)$/;"	f	file:
pitch_sharpening	libavcodec/sipr.c	/^static void pitch_sharpening(int pitch_lag_int, float beta,$/;"	f	file:
pitch_synthesis_filter_mem	libavcodec/qcelpdec.c	/^    float    pitch_synthesis_filter_mem[303];$/;"	m	struct:__anon225	file:
pitch_vector	libavcodec/amrnbdec.c	/^    float   pitch_vector[AMR_SUBFRAME_SIZE]; \/\/\/< adaptive code book (pitch) vector$/;"	m	struct:AMRContext	file:
pitch_vector	libavcodec/amrwbdec.c	/^    float           pitch_vector[AMRWB_SFR_SIZE]; \/\/\/< adaptive codebook (pitch) vector for current subframe$/;"	m	struct:__anon64	file:
pix_abs	libavcodec/dsputil.h	/^    me_cmp_func pix_abs[2][4];$/;"	m	struct:DSPContext
pix_abs16_c	libavcodec/dsputil.c	/^static inline int pix_abs16_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs16_x2_c	libavcodec/dsputil.c	/^static int pix_abs16_x2_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs16_xy2_c	libavcodec/dsputil.c	/^static int pix_abs16_xy2_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs16_y2_c	libavcodec/dsputil.c	/^static int pix_abs16_y2_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs16x16_mvi_asm	libavcodec/alpha/motion_est_mvi_asm.S	/^pix_abs16x16_mvi_asm:$/;"	l
pix_abs16x16_x2_mvi	libavcodec/alpha/motion_est_alpha.c	/^int pix_abs16x16_x2_mvi(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
pix_abs16x16_xy2_mvi	libavcodec/alpha/motion_est_alpha.c	/^int pix_abs16x16_xy2_mvi(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
pix_abs16x16_y2_mvi	libavcodec/alpha/motion_est_alpha.c	/^int pix_abs16x16_y2_mvi(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
pix_abs8_c	libavcodec/dsputil.c	/^static inline int pix_abs8_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs8_x2_c	libavcodec/dsputil.c	/^static int pix_abs8_x2_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs8_xy2_c	libavcodec/dsputil.c	/^static int pix_abs8_xy2_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs8_y2_c	libavcodec/dsputil.c	/^static int pix_abs8_y2_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
pix_abs8x8_mvi	libavcodec/alpha/motion_est_alpha.c	/^int pix_abs8x8_mvi(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f
pix_bgr_map	libavcodec/huffyuv.c	/^    uint32_t pix_bgr_map[1<<VLC_BITS];$/;"	m	struct:HYuvContext	file:
pix_desc	libavfilter/vf_pixdesctest.c	/^    const AVPixFmtDescriptor *pix_desc;$/;"	m	struct:__anon3	file:
pix_fmt	ffplay.c	/^    enum PixelFormat pix_fmt;$/;"	m	struct:VideoPicture	typeref:enum:VideoPicture::PixelFormat	file:
pix_fmt	libavcodec/avcodec.h	/^    enum PixelFormat pix_fmt;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::PixelFormat
pix_fmt	libavcodec/avcodec.h	/^    enum PixelFormat pix_fmt;$/;"	m	struct:AVHWAccel	typeref:enum:AVHWAccel::PixelFormat
pix_fmt	libavcodec/dvdata.h	/^    enum PixelFormat pix_fmt;               \/* picture pixel format *\/$/;"	m	struct:DVprofile	typeref:enum:DVprofile::PixelFormat
pix_fmt	libavcodec/raw.h	/^    enum PixelFormat pix_fmt;$/;"	m	struct:PixelFormatTag	typeref:enum:PixelFormatTag::PixelFormat
pix_fmt	libavcodec/utils.c	/^    enum PixelFormat pix_fmt;$/;"	m	struct:InternalBuffer	typeref:enum:InternalBuffer::PixelFormat	file:
pix_fmt	libavdevice/libdc1394.c	/^    int pix_fmt;$/;"	m	struct:dc1394_color_coding	file:
pix_fmt	libavdevice/sdl.c	/^    enum PixelFormat pix_fmt; int overlay_fmt;$/;"	m	struct:sdl_overlay_pix_fmt_entry	typeref:enum:sdl_overlay_pix_fmt_entry::PixelFormat	file:
pix_fmt	libavdevice/v4l.c	/^    enum PixelFormat pix_fmt;$/;"	m	struct:__anon317	typeref:enum:__anon317::PixelFormat	file:
pix_fmt	libavfilter/vf_mp.c	/^    enum PixelFormat pix_fmt;$/;"	m	struct:__anon46	typeref:enum:__anon46::PixelFormat	file:
pix_fmt	libavfilter/vsrc_buffer.c	/^    enum PixelFormat  pix_fmt;$/;"	m	struct:__anon25	typeref:enum:__anon25::PixelFormat	file:
pix_fmt	libavformat/avformat.h	/^    attribute_deprecated enum PixelFormat pix_fmt;$/;"	m	struct:AVFormatParameters	typeref:enum:AVFormatParameters::PixelFormat
pix_fmt	libavformat/movenc.c	/^    enum PixelFormat pix_fmt;$/;"	m	struct:__anon423	typeref:enum:__anon423::PixelFormat	file:
pix_fmt	libavformat/mxf.c	/^    enum PixelFormat pix_fmt;$/;"	m	struct:__anon329	typeref:enum:__anon329::PixelFormat	file:
pix_fmt	libavformat/mxfdec.c	/^    enum PixelFormat pix_fmt;$/;"	m	struct:__anon443	typeref:enum:__anon443::PixelFormat	file:
pix_fmt_bps_avi	libavcodec/rawdec.c	/^static const PixelFormatTag pix_fmt_bps_avi[] = {$/;"	v	file:
pix_fmt_bps_mov	libavcodec/rawdec.c	/^static const PixelFormatTag pix_fmt_bps_mov[] = {$/;"	v	file:
pix_fmt_info	libavcodec/imgconvert.c	/^static const PixFmtInfo pix_fmt_info[PIX_FMT_NB] = {$/;"	v	file:
pix_fmt_is_in	libavfilter/vf_lut.c	/^static int pix_fmt_is_in(enum PixelFormat pix_fmt, enum PixelFormat *pix_fmts)$/;"	f	file:
pix_fmts	libavcodec/avcodec.h	/^    const enum PixelFormat *pix_fmts;       \/\/\/< array of supported pixel formats, or NULL if unknown, array is terminated by -1$/;"	m	struct:AVCodec	typeref:enum:AVCodec::PixelFormat
pix_fmts	libavfilter/vsink_buffer.c	/^    enum PixelFormat *pix_fmts;  \/\/\/< accepted pixel formats, must be terminated with -1$/;"	m	struct:__anon39	typeref:enum:__anon39::PixelFormat	file:
pix_norm1	libavcodec/dsputil.h	/^    int (*pix_norm1)(uint8_t * pix, int line_size);$/;"	m	struct:DSPContext
pix_norm1	libavcodec/snow.c	/^static int pix_norm1(uint8_t * pix, int line_size, int w)$/;"	f	file:
pix_norm1_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int pix_norm1_altivec(uint8_t *pix, int line_size)$/;"	f	file:
pix_norm1_c	libavcodec/dsputil.c	/^static int pix_norm1_c(uint8_t * pix, int line_size)$/;"	f	file:
pix_norm1_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static int pix_norm1_mmx(uint8_t *pix, int line_size) {$/;"	f	file:
pix_sum	libavcodec/dsputil.h	/^    int (*pix_sum)(uint8_t * pix, int line_size);$/;"	m	struct:DSPContext
pix_sum	libavcodec/snow.c	/^static int pix_sum(uint8_t * pix, int line_size, int w)$/;"	f	file:
pix_sum16_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static int pix_sum16_mmx(uint8_t * pix, int line_size){$/;"	f	file:
pix_sum_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int pix_sum_altivec(uint8_t * pix, int line_size)$/;"	f	file:
pix_sum_c	libavcodec/dsputil.c	/^static int pix_sum_c(uint8_t * pix, int line_size)$/;"	f	file:
pixel	libavcodec/high_bit_depth.h	26;"	d
pixel	libavcodec/high_bit_depth.h	58;"	d
pixel	libavfilter/libmpcodecs/vf_remove_logo.c	/^  unsigned char * pixel;$/;"	m	struct:__anon34	file:
pixel2	libavcodec/high_bit_depth.h	27;"	d
pixel2	libavcodec/high_bit_depth.h	59;"	d
pixel4	libavcodec/high_bit_depth.h	28;"	d
pixel4	libavcodec/high_bit_depth.h	60;"	d
pixel_aspect	libavcodec/h264_ps.c	/^static const AVRational pixel_aspect[17]={$/;"	v	file:
pixel_bgr	libavcodec/flashsv2enc.c	/^static inline unsigned pixel_bgr(const uint8_t * src)$/;"	f	file:
pixel_color15	libavcodec/flashsv2enc.c	/^static inline unsigned pixel_color15(const uint8_t * src)$/;"	f	file:
pixel_color7_fast	libavcodec/flashsv2enc.c	/^static inline int pixel_color7_fast(Palette * palette, unsigned c15)$/;"	f	file:
pixel_color7_slow	libavcodec/flashsv2enc.c	/^static int pixel_color7_slow(Palette * palette, unsigned color)$/;"	f	file:
pixel_format	libavdevice/libdc1394.c	/^    char *pixel_format;     \/**< Set by a private option. *\/$/;"	m	struct:dc1394_data	file:
pixel_format	libavdevice/v4l2.c	/^    char *pixel_format; \/**< Set by a private option. *\/$/;"	m	struct:video_data	file:
pixel_format	libavformat/img2.c	/^    char *pixel_format;     \/**< Set by a private option. *\/$/;"	m	struct:__anon389	file:
pixel_format	libavformat/rawdec.h	/^    char *pixel_format;       \/**< Set by a private option. *\/$/;"	m	struct:FFRawVideoDemuxerContext
pixel_height	libavformat/matroskadec.c	/^    uint64_t pixel_height;$/;"	m	struct:__anon357	file:
pixel_ptr	libavcodec/interplayvideo.c	/^    unsigned char *pixel_ptr;$/;"	m	struct:IpvideoContext	file:
pixel_range_index	libavcodec/dirac.h	/^    uint8_t pixel_range_index;      \/\/\/< index into dirac_pixel_range_presets[]$/;"	m	struct:__anon227
pixel_range_presets	libavcodec/dirac.c	/^} pixel_range_presets[] = {$/;"	v	typeref:struct:__anon94	file:
pixel_shift	libavcodec/h264.h	/^    int pixel_shift;    \/\/\/< 0 for 8-bit H264, 1 for high-bit-depth H264$/;"	m	struct:H264Context
pixel_size	libavcodec/qtrleenc.c	/^    int pixel_size;$/;"	m	struct:QtrleEncContext	file:
pixel_step	libavfilter/vf_drawtext.c	/^    int pixel_step[4];              \/\/\/< distance in bytes between the component of each pixel$/;"	m	struct:__anon24	file:
pixel_type	libavcodec/imgconvert.c	/^    uint8_t pixel_type;      \/**< pixel storage type (see FF_PIXEL_xxx constants) *\/$/;"	m	struct:PixFmtInfo	file:
pixel_width	libavformat/matroskadec.c	/^    uint64_t pixel_width;$/;"	m	struct:__anon357	file:
pixels	libavcodec/escape124.c	/^    uint16_t pixels[4];$/;"	m	union:MacroBlock	file:
pixels	libavcodec/escape124.c	/^    uint16_t pixels[64];$/;"	m	union:SuperBlock	file:
pixels32	libavcodec/escape124.c	/^    uint32_t pixels32[2];$/;"	m	union:MacroBlock	file:
pixels32	libavcodec/escape124.c	/^    uint32_t pixels32[32];$/;"	m	union:SuperBlock	file:
pixfmt	libavdevice/fbdev.c	/^    enum PixelFormat pixfmt;$/;"	m	struct:rgb_pixfmt_map_entry	typeref:enum:rgb_pixfmt_map_entry::PixelFormat	file:
pixfmt_rgb24	libavcodec/8bps.c	/^static const enum PixelFormat pixfmt_rgb24[] = {PIX_FMT_BGR24, PIX_FMT_RGB32, PIX_FMT_NONE};$/;"	v	typeref:enum:PixelFormat	file:
pixsteps	libavfilter/vf_transpose.c	/^    int pixsteps[4];$/;"	m	struct:__anon45	file:
pk	libavcodec/g726.c	/^    int pk[2];          \/**< signs of prev. 2 sez + dq *\/$/;"	m	struct:G726Context	file:
pkgconfig_generate	configure	/^pkgconfig_generate(){$/;"	f
pklb	libavcodec/alpha/asm.h	129;"	d
pklb	libavcodec/alpha/asm.h	143;"	d
pklb	libavcodec/alpha/asm.h	176;"	d
pkt	libavcodec/avcodec.h	/^    AVPacket *pkt;$/;"	m	struct:AVCodecContext
pkt	libavformat/applehttp.c	/^    AVPacket pkt;$/;"	m	struct:variant	file:
pkt	libavformat/asf.h	/^    AVPacket pkt;$/;"	m	struct:__anon399
pkt	libavformat/avformat.h	/^    AVPacket pkt;$/;"	m	struct:AVPacketList
pkt	libavformat/mpegts.c	/^    AVPacket *pkt;$/;"	m	struct:MpegTSContext	file:
pkt	libavformat/rmdec.c	/^    AVPacket pkt;      \/\/\/< place to store merged video frame \/ reordered audio data$/;"	m	struct:RMStream	file:
pkt	libavformat/rtpdec_qt.c	/^    AVPacket pkt;$/;"	m	struct:PayloadContext	file:
pkt_cnt	libavformat/matroskadec.c	/^    int      pkt_cnt;$/;"	m	struct:__anon358	file:
pkt_dump_internal	libavformat/utils.c	/^static void pkt_dump_internal(void *avcl, FILE *f, int level, AVPacket *pkt, int dump_payload, AVRational time_base)$/;"	f	file:
pkt_offset	libavformat/spdifenc.c	/^    int pkt_offset;                 \/\/\/< data burst repetition period in bytes$/;"	m	struct:IEC61937Context	file:
pkt_xrun	libavdevice/jack_audio.c	/^    int             pkt_xrun;$/;"	m	struct:__anon315	file:
pktbuf	libavformat/rtpdec_asf.c	/^    AVIOContext *pktbuf, pb;$/;"	m	struct:PayloadContext	file:
pktbuf	libavformat/rtpdec_svq3.c	/^    AVIOContext *pktbuf;$/;"	m	struct:PayloadContext	file:
pktl	libavdevice/dshow.c	/^    AVPacketList *pktl;$/;"	m	struct:dshow_ctx	file:
pktl	libavdevice/vfwcap.c	/^    AVPacketList *pktl;$/;"	m	struct:vfw_ctx	file:
pktpos	libavformat/rmdec.c	/^    int64_t pktpos;    \/\/\/< first slice position in file$/;"	m	struct:RMStream	file:
pktsize	libavformat/siff.c	/^    int pktsize;$/;"	m	struct:SIFFContext	file:
pkwb	libavcodec/alpha/asm.h	130;"	d
pkwb	libavcodec/alpha/asm.h	144;"	d
pkwb	libavcodec/alpha/asm.h	177;"	d
plag	libavcodec/qcelpdata.h	/^    uint8_t plag[4];    \/\/\/!< pitch lag for each pitch subframe$/;"	m	struct:__anon84
planar	libavcodec/j2kenc.c	/^    uint8_t planar;$/;"	m	struct:__anon63	file:
planar	libavfilter/avfilter.h	/^    int planar;                 \/\/\/< audio buffer - planar or packed$/;"	m	struct:AVFilterBufferRefAudioProps
planar2x	libswscale/rgb2rgb.c	/^void (*planar2x)(const uint8_t *src, uint8_t *dst, int width, int height,$/;"	v
planar2x	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(planar2x)(const uint8_t *src, uint8_t *dst, int srcWidth, int srcHeight, int srcStride, int dstStride)$/;"	f	file:
planar2x_c	libswscale/rgb2rgb_template.c	/^static inline void planar2x_c(const uint8_t *src, uint8_t *dst, int srcWidth,$/;"	f	file:
planarCopyWrapper	libswscale/swscale_unscaled.c	/^static int planarCopyWrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
planarToNv12Wrapper	libswscale/swscale_unscaled.c	/^static int planarToNv12Wrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
planarToUyvyWrapper	libswscale/swscale_unscaled.c	/^static int planarToUyvyWrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
planarToYuy2Wrapper	libswscale/swscale_unscaled.c	/^static int planarToYuy2Wrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
planar_samples	libavcodec/ac3enc.h	/^    SampleType **planar_samples;$/;"	m	struct:AC3EncodeContext
plane	libavcodec/ffv1.c	/^    PlaneContext plane[MAX_PLANES];$/;"	m	struct:FFV1Context	file:
plane	libavcodec/ivi_common.h	/^    int             plane;          \/\/\/< plane number this band belongs to$/;"	m	struct:__anon107
plane	libavcodec/snow.c	/^    Plane plane[MAX_PLANES];$/;"	m	struct:SnowContext	file:
plane	libavfilter/libmpcodecs/vf_ow.c	/^    float *plane[16][4];$/;"	m	struct:vf_priv_s	file:
plane	libavutil/pixdesc.h	/^    uint16_t plane        :2;            \/\/\/< which of the 4 planes contains the component$/;"	m	struct:AVComponentDescriptor
plane32_lut	libavcodec/iff.c	/^static const uint32_t plane32_lut[32][16*4] = {$/;"	v	file:
plane8_lut	libavcodec/iff.c	/^static const uint64_t plane8_lut[8][256] = {$/;"	v	file:
plane8_shuf	libavcodec/x86/h264_intrapred.asm	/^plane8_shuf: db -4, -3, -2, -1,  0,  0,  0,  0$/;"	d
plane_count	libavcodec/ffv1.c	/^    int plane_count;$/;"	m	struct:FFV1Context	file:
plane_height	libavcodec/vp56.h	/^    int plane_height[4];$/;"	m	struct:vp56_context
plane_shuf	libavcodec/x86/h264_intrapred.asm	/^plane_shuf:  db -8, -7, -6, -5, -4, -3, -2, -1$/;"	d
plane_width	libavcodec/vp56.h	/^    int plane_width[4];$/;"	m	struct:vp56_context
planebuf	libavcodec/iff.c	/^    uint8_t * planebuf;$/;"	m	struct:__anon114	file:
planemap	libavcodec/8bps.c	/^        unsigned char planemap[4];$/;"	m	struct:EightBpsContext	file:
planes	libavcodec/8bps.c	/^        unsigned char planes;$/;"	m	struct:EightBpsContext	file:
planes	libavcodec/indeo5.c	/^    IVIPlaneDesc    planes[3];       \/\/\/< color planes$/;"	m	struct:__anon203	file:
planes	libavfilter/libmpcodecs/mp_image.h	/^    unsigned char* planes[MP_MAX_PLANES];$/;"	m	struct:mp_image
planes	libavfilter/libmpcodecs/pullup.h	/^    unsigned char **planes;$/;"	m	struct:pullup_buffer
planes	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned char *planes[2*NUM_STORED][4];$/;"	m	struct:vf_priv_s	file:
planesize	libavcodec/iff.c	/^    int planesize;$/;"	m	struct:__anon114	file:
play_res_x	libavcodec/ass_split.h	/^    int   play_res_x;     \/**< video width that ASS coords are referring to *\/$/;"	m	struct:__anon248
play_res_y	libavcodec/ass_split.h	/^    int   play_res_y;     \/**< video height that ASS coords are referring to *\/$/;"	m	struct:__anon248
play_time	libavformat/asf.h	/^    uint64_t play_time;         \/**< play time, in 100-nanosecond units$/;"	m	struct:__anon400
playlisturl	libavformat/applehttpproto.c	/^    char playlisturl[MAX_URL_SIZE];$/;"	m	struct:AppleHTTPContext	file:
playpath	libavformat/rtmpproto.c	/^    char          playpath[256];              \/\/\/< path to filename to play (with possible "mp4:" prefix)$/;"	m	struct:RTMPContext	file:
plugin_info	libavfilter/vf_frei0r.c	/^    f0r_plugin_info_t plugin_info;$/;"	m	struct:Frei0rContext	file:
pm	libavfilter/libmpcodecs/vf_detc.c	/^        struct metrics pm;$/;"	m	struct:vf_priv_s	typeref:struct:vf_priv_s::metrics	file:
pmaxh	libavcodec/ps2/mmi.h	147;"	d
pmfhl_uw	libavcodec/ps2/mmi.h	165;"	d
pminh	libavcodec/ps2/mmi.h	150;"	d
pmmp	libavcodec/arm/fft_neon.S	/^pmmp:   .float  +1.0, -1.0, -1.0, +1.0$/;"	l
pmp_close	libavformat/pmpdec.c	/^static int pmp_close(AVFormatContext *s)$/;"	f	file:
pmp_header	libavformat/pmpdec.c	/^static int pmp_header(AVFormatContext *s, AVFormatParameters *ap) {$/;"	f	file:
pmp_packet	libavformat/pmpdec.c	/^static int pmp_packet(AVFormatContext *s, AVPacket *pkt) {$/;"	f	file:
pmp_probe	libavformat/pmpdec.c	/^static int pmp_probe(AVProbeData *p) {$/;"	f	file:
pmp_seek	libavformat/pmpdec.c	/^static int pmp_seek(AVFormatContext *s, int stream_index,$/;"	f	file:
pmpi	libavfilter/libmpcodecs/vf_denoise3d.c	/^        mp_image_t *pmpi;$/;"	m	struct:vf_priv_s	file:
pmpi	libavfilter/libmpcodecs/vf_dint.c	/^  mp_image_t *pmpi; \/\/ previous mpi$/;"	m	struct:vf_priv_s	file:
pmt	libavformat/mpegtsenc.c	/^    MpegTSSection pmt; \/* MPEG2 pmt table context *\/$/;"	m	struct:MpegTSService	file:
pmt_cb	libavformat/mpegts.c	/^static void pmt_cb(MpegTSFilter *filter, const uint8_t *section, int section_len)$/;"	f	file:
pmt_pid	libavformat/avformat.h	/^    int pmt_pid;$/;"	m	struct:AVProgram
pmt_start_pid	libavformat/mpegtsenc.c	/^    int pmt_start_pid;$/;"	m	struct:MpegTSWrite	file:
pmulth	libavcodec/ps2/mmi.h	144;"	d
png_choose_filter	libavcodec/pngenc.c	/^static uint8_t *png_choose_filter(PNGEncContext *s, uint8_t *dst,$/;"	f	file:
png_dec_end	libavcodec/pngdec.c	/^static av_cold int png_dec_end(AVCodecContext *avctx)$/;"	f	file:
png_dec_init	libavcodec/pngdec.c	/^static av_cold int png_dec_init(AVCodecContext *avctx)$/;"	f	file:
png_decode_idat	libavcodec/pngdec.c	/^static int png_decode_idat(PNGDecContext *s, int length)$/;"	f	file:
png_enc_init	libavcodec/pngenc.c	/^static av_cold int png_enc_init(AVCodecContext *avctx){$/;"	f	file:
png_filter_row	libavcodec/pngdec.c	/^static void png_filter_row(PNGDecContext *s, uint8_t *dst, int filter_type,$/;"	f	file:
png_filter_row	libavcodec/pngenc.c	/^static void png_filter_row(DSPContext *dsp, uint8_t *dst, int filter_type,$/;"	f	file:
png_get_interlaced_row	libavcodec/pngenc.c	/^static void png_get_interlaced_row(uint8_t *dst, int row_size,$/;"	f	file:
png_handle_row	libavcodec/pngdec.c	/^static void png_handle_row(PNGDecContext *s)$/;"	f	file:
png_pass_dsp_mask	libavcodec/pngdec.c	/^static const uint8_t png_pass_dsp_mask[NB_PASSES] = {$/;"	v	file:
png_pass_dsp_ymask	libavcodec/pngdec.c	/^static const uint8_t png_pass_dsp_ymask[NB_PASSES] = {$/;"	v	file:
png_put_interlaced_row	libavcodec/pngdec.c	/^static void png_put_interlaced_row(uint8_t *dst, int width,$/;"	f	file:
png_save2	libavcodec/dvbsubdec.c	/^static void png_save2(const char *filename, uint32_t *bitmap, int w, int h)$/;"	f	file:
png_write_chunk	libavcodec/pngenc.c	/^static void png_write_chunk(uint8_t **f, uint32_t tag,$/;"	f	file:
png_write_row	libavcodec/pngenc.c	/^static int png_write_row(PNGEncContext *s, const uint8_t *data, int size)$/;"	f	file:
pnm_decode_frame	libavcodec/pnmdec.c	/^static int pnm_decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
pnm_encode_frame	libavcodec/pnmenc.c	/^static int pnm_encode_frame(AVCodecContext *avctx, unsigned char *outbuf,$/;"	f	file:
pnm_get	libavcodec/pnm.c	/^static void pnm_get(PNMContext *sc, char *str, int buf_size)$/;"	f	file:
pnm_parse	libavcodec/pnm_parser.c	/^static int pnm_parse(AVCodecParserContext *s, AVCodecContext *avctx,$/;"	f	file:
pnm_space	libavcodec/pnm.c	/^static inline int pnm_space(int c)$/;"	f	file:
poc	libavcodec/mpegvideo.h	/^    int poc;                    \/\/\/< h264 frame POC$/;"	m	struct:Picture
poc_cycle_length	libavcodec/h264.h	/^    int poc_cycle_length;              \/\/\/< num_ref_frames_in_pic_order_cnt_cycle$/;"	m	struct:SPS
poc_lsb	libavcodec/h264.h	/^    int poc_lsb;$/;"	m	struct:H264Context
poc_msb	libavcodec/h264.h	/^    int poc_msb;$/;"	m	struct:H264Context
poc_type	libavcodec/h264.h	/^    int poc_type;                      \/\/\/< pic_order_cnt_type$/;"	m	struct:SPS
points	libavcodec/elbg.c	/^    int *points;$/;"	m	struct:__anon247	file:
pole_mem	libavcodec/g722.c	/^        int16_t pole_mem[2];         \/\/\/< second-order pole section coefficient buffer$/;"	m	struct:__anon140::G722Band	file:
poll	libavformat/os_support.c	/^int poll(struct pollfd *fds, nfds_t numfds, int timeout)$/;"	f
poll_entry	ffserver.c	/^    struct pollfd *poll_entry; \/* used when polling *\/$/;"	m	struct:HTTPContext	typeref:struct:HTTPContext::pollfd	file:
poll_frame	libavfilter/avfilter.h	/^    int (*poll_frame)(AVFilterLink *link);$/;"	m	struct:AVFilterPad
poll_frame	libavfilter/vf_select.c	/^static int poll_frame(AVFilterLink *outlink)$/;"	f	file:
poll_frame	libavfilter/vf_yadif.c	/^static int poll_frame(AVFilterLink *link)$/;"	f	file:
poll_frame	libavfilter/vsrc_buffer.c	/^static int poll_frame(AVFilterLink *link)$/;"	f	file:
pollfd	libavformat/os_support.h	/^struct pollfd {$/;"	s
poly	libavutil/crc.c	/^    uint32_t poly;$/;"	m	struct:__anon307	file:
pool	libavfilter/avfilter.h	/^    struct AVFilterPool *pool;$/;"	m	struct:AVFilterLink	typeref:struct:AVFilterLink::AVFilterPool
popvar	configure	/^popvar(){$/;"	f
porder	libavcodec/flacenc.c	/^    int porder;$/;"	m	struct:RiceContext	file:
port_max	libavformat/rtsp.h	/^    int port_min, port_max;$/;"	m	struct:RTSPTransportField
port_min	libavformat/rtsp.h	/^    int port_min, port_max;$/;"	m	struct:RTSPTransportField
ports	libavdevice/jack_audio.c	/^    jack_port_t **  ports;$/;"	m	struct:__anon315	file:
pos	ffplay.c	/^    int64_t pos;                                 \/\/\/<byte position in file$/;"	m	struct:VideoPicture	file:
pos	libavcodec/aac.h	/^    int pos[4];$/;"	m	struct:__anon242
pos	libavcodec/atrac3.c	/^    int     pos;$/;"	m	struct:__anon129	file:
pos	libavcodec/avcodec.h	/^    int64_t pos;                            \/\/\/< byte position in stream, -1 if unknown$/;"	m	struct:AVPacket
pos	libavcodec/avcodec.h	/^    int64_t pos;$/;"	m	struct:AVCodecParserContext
pos	libavcodec/dv.c	/^    uint8_t pos; \/* position in block *\/$/;"	m	struct:BlockInfo	file:
pos	libavcodec/wavpack.c	/^    int pos;$/;"	m	struct:WavpackFrameContext	file:
pos	libavdevice/dshow.h	/^    int pos;$/;"	m	struct:libAVEnumMediaTypes
pos	libavdevice/dshow.h	/^    int pos;$/;"	m	struct:libAVEnumPins
pos	libavfilter/avfilter.h	/^    int64_t pos;                \/\/\/< byte position in stream, -1 if unknown$/;"	m	struct:AVFilterBufferRef
pos	libavformat/ape.c	/^    int64_t pos;$/;"	m	struct:__anon334	file:
pos	libavformat/avformat.h	/^    int64_t pos;$/;"	m	struct:AVIndexEntry
pos	libavformat/avienc.c	/^    unsigned int flags, pos, len;$/;"	m	struct:AVIIentry	file:
pos	libavformat/avio.h	/^    int64_t pos;            \/**< position in the file of the current buffer *\/$/;"	m	struct:__anon396
pos	libavformat/aviobuf.c	/^    int pos, size, allocated_size;$/;"	m	struct:DynBuffer	file:
pos	libavformat/matroskadec.c	/^    EbmlList pos;$/;"	m	struct:__anon365	file:
pos	libavformat/matroskadec.c	/^    int64_t  pos;$/;"	m	struct:__anon353	file:
pos	libavformat/matroskadec.c	/^    uint64_t pos;$/;"	m	struct:__anon364	file:
pos	libavformat/matroskadec.c	/^    uint64_t pos;$/;"	m	struct:__anon369	file:
pos	libavformat/matroskaenc.c	/^    int64_t         pos;                \/\/\/< absolute offset in the file where the master's elements start$/;"	m	struct:ebml_master	file:
pos	libavformat/microdvddec.c	/^    int64_t pos[3];$/;"	m	struct:__anon378	file:
pos	libavformat/movenc.h	/^    uint64_t     pos;$/;"	m	struct:MOVIentry
pos	libavformat/mp3enc.c	/^    uint32_t pos;$/;"	m	struct:MP3Context	file:
pos	libavformat/mpc.c	/^    int64_t pos;$/;"	m	struct:__anon375	file:
pos	libavformat/nut.h	/^    uint64_t pos;$/;"	m	struct:__anon490
pos	libavformat/oggdec.h	/^    uint64_t pos;$/;"	m	struct:ogg_state
pos	libavformat/rtpdec_latm.c	/^    int pos, len;$/;"	m	struct:PayloadContext	file:
pos	libavformat/rtpdec_qcelp.c	/^    int pos;$/;"	m	struct:__anon386	file:
pos	libavformat/wv.c	/^    int64_t pos;$/;"	m	struct:__anon327	file:
pos47	libavformat/mpegts.c	/^    int pos47;$/;"	m	struct:MpegTSContext	file:
pos_hi	libavformat/seek.c	/^    int64_t     pos_hi;      \/\/\/< position of the frame with high timestamp in file or INT64_MAX if not found (yet)$/;"	m	struct:__anon438	file:
pos_lo	libavformat/seek.c	/^    int64_t     pos_lo;      \/\/\/< position of the frame with low timestamp in file or INT64_MAX if not found (yet)$/;"	m	struct:__anon438	file:
position	libavcodec/avcodec.h	/^    int16_t position[3][2];$/;"	m	struct:AVPanScan
position	libavformat/wtvdec.c	/^    int64_t position;$/;"	m	struct:__anon321	file:
positions	libavfilter/vf_drawtext.c	/^    FT_Vector *positions;           \/\/\/< positions for each element in the text$/;"	m	struct:__anon24	file:
posix_memalign	libavutil/mem.c	50;"	d	file:
post	ffserver.c	/^    int post;$/;"	m	struct:HTTPContext	file:
postProcess	libpostproc/postprocess.c	/^static inline void postProcess(const uint8_t src[], int srcStride, uint8_t dst[], int dstStride, int width, int height,$/;"	f	file:
postProcess	libpostproc/postprocess_template.c	/^static void RENAME(postProcess)(const uint8_t src[], int srcStride, uint8_t dst[], int dstStride, int width, int height,$/;"	f	file:
post_cos	libavcodec/imc.c	/^    float post_cos[COEFFS];$/;"	m	struct:__anon90	file:
post_shift	libavcodec/wavpack.c	/^    int post_shift;$/;"	m	struct:WavpackFrameContext	file:
post_sin	libavcodec/imc.c	/^    float post_sin[COEFFS];$/;"	m	struct:__anon90	file:
postfilter	libavcodec/amrnbdec.c	/^static void postfilter(AMRContext *p, float *lpc, float *buf_out)$/;"	f	file:
postfilter	libavcodec/qcelpdec.c	/^static void postfilter(QCELPContext *q, float *samples, float *lpc)$/;"	f	file:
postfilter	libavcodec/sipr16k.c	/^static void postfilter(float *out_data, float* synth, float* iir_mem,$/;"	f	file:
postfilter	libavcodec/wmavoice.c	/^static void postfilter(WMAVoiceContext *s, const float *synth,$/;"	f	file:
postfilter_5k0	libavcodec/sipr.c	/^static void postfilter_5k0(SiprContext *ctx, const float *lpc, float *samples)$/;"	f	file:
postfilter_agc	libavcodec/amrnbdec.c	/^    float                    postfilter_agc; \/\/\/< previous factor used for adaptive gain control$/;"	m	struct:AMRContext	file:
postfilter_agc	libavcodec/sipr.h	/^    float postfilter_agc;$/;"	m	struct:__anon235
postfilter_agc	libavcodec/wmavoice.c	/^    float postfilter_agc;         \/\/\/< gain control memory, used in$/;"	m	struct:__anon157	file:
postfilter_agc_mem	libavcodec/qcelpdec.c	/^    float    postfilter_agc_mem;$/;"	m	struct:__anon225	file:
postfilter_mem	libavcodec/amrnbdec.c	/^    float                postfilter_mem[10]; \/\/\/< previous intermediate values in the formant filter$/;"	m	struct:AMRContext	file:
postfilter_mem	libavcodec/sipr.h	/^    float postfilter_mem[PITCH_DELAY_MAX + LP_FILTER_ORDER];$/;"	m	struct:__anon235
postfilter_mem5k0	libavcodec/sipr.h	/^    float postfilter_mem5k0[PITCH_DELAY_MAX + LP_FILTER_ORDER];$/;"	m	struct:__anon235
postfilter_syn5k0	libavcodec/sipr.h	/^    float postfilter_syn5k0[LP_FILTER_ORDER + SUBFR_SIZE*5];$/;"	m	struct:__anon235
postfilter_synth_mem	libavcodec/qcelpdec.c	/^    float    postfilter_synth_mem[10];$/;"	m	struct:__anon225	file:
postfilter_tilt_mem	libavcodec/qcelpdec.c	/^    float    postfilter_tilt_mem;$/;"	m	struct:__anon225	file:
postproc	libavcodec/vc1.h	/^    uint8_t postproc;$/;"	m	struct:VC1Context
postproc_configuration	libpostproc/postprocess.c	/^const char *postproc_configuration(void)$/;"	f
postproc_license	libpostproc/postprocess.c	/^const char *postproc_license(void)$/;"	f
postproc_version	libpostproc/postprocess.c	/^unsigned postproc_version(void)$/;"	f
postprocess	doc/texi2pod.pl	/^sub postprocess$/;"	s
postprocess	libavcodec/gsmdec_template.c	/^static int postprocess(int16_t *data, int msr)$/;"	f	file:
postprocflag	libavcodec/vc1.h	/^    int postprocflag;     \/\/\/< Per-frame processing suggestion flag present$/;"	m	struct:VC1Context
postscale	libavcodec/faandct.c	/^static const FLOAT postscale[64]={$/;"	v	file:
pout	libavcodec/roqvideoenc.c	/^    uint8_t **pout;$/;"	m	struct:__anon75	file:
pow2	libavcodec/vorbisenc.c	/^    float *pow2;$/;"	m	struct:__anon188	file:
pow2tab	libavcodec/cook.c	/^static float     pow2tab[127];$/;"	v	file:
pow4	libavcodec/xan.c	/^static inline unsigned pow4(unsigned a)$/;"	f	file:
pow5	libavcodec/xan.c	/^static inline unsigned pow5(unsigned a)$/;"	f	file:
pow_m1_4	libavcodec/wmadec.c	/^static inline float pow_m1_4(WMACodecContext *s, float x)$/;"	f	file:
pow_poly	libavcodec/ac3enc.c	/^static unsigned int pow_poly(unsigned int a, unsigned int n, unsigned int poly)$/;"	f	file:
pow_tab	libavcodec/wmadec.c	/^static const float pow_tab[] = {$/;"	v	file:
pow_table	libavcodec/nellymoserenc.c	/^static float pow_table[POW_TABLE_SIZE];     \/\/\/< -pow(2, -i \/ 2048.0 - 3.0);$/;"	v	file:
power	libavfilter/libmpcodecs/vf_boxblur.c	/^        int power;$/;"	m	struct:FilterParam	file:
power_smooth	libavcodec/aacps.h	/^    float  power_smooth[34];$/;"	m	struct:__anon257
pp	libavcodec/dxva2_h264.c	/^    DXVA_PicParams_H264   pp;$/;"	m	struct:dxva2_picture_context	file:
pp	libavcodec/dxva2_mpeg2.c	/^    DXVA_PictureParameters pp;$/;"	m	struct:dxva2_picture_context	file:
pp	libavcodec/dxva2_vc1.c	/^    DXVA_PictureParameters pp;$/;"	m	struct:dxva2_picture_context	file:
pp16$0	libavcodec/bfin/pixels_bfin.S	/^pp16$0:  DISALGNEXCPT                || R1 = [I0++]   || R3  =[I1++];$/;"	l
pp16$1	libavcodec/bfin/pixels_bfin.S	/^pp16$1:  DISALGNEXCPT                || R2 = [I1++]   || [I3++M3] = R7;$/;"	l
pp16$2	libavcodec/bfin/pixels_bfin.S	/^pp16$2:$/;"	l
pp16$3	libavcodec/bfin/pixels_bfin.S	/^pp16$3: DISALGNEXCPT                || R2 = [I1++]   || [I3++M3] = R7;$/;"	l
pp8$0	libavcodec/bfin/pixels_bfin.S	/^pp8$0:  DISALGNEXCPT                || R1 = [I0++]  || R3  =[I1++];$/;"	l
pp8$1	libavcodec/bfin/pixels_bfin.S	/^pp8$1:  DISALGNEXCPT                || R2 = [I1++]  || [I3++M3] = R7;$/;"	l
pp8$2	libavcodec/bfin/pixels_bfin.S	/^pp8$2:  DISALGNEXCPT                || R1 = [I0++]  || R3  =[I1++];$/;"	l
pp8$3	libavcodec/bfin/pixels_bfin.S	/^pp8$3:  DISALGNEXCPT                || R2 = [I1++]  || [I3++M3] = R7;$/;"	l
ppMode	libpostproc/postprocess_internal.h	/^    PPMode ppMode;$/;"	m	struct:PPContext
pp_context	libpostproc/postprocess.h	/^typedef void pp_context;$/;"	t
pp_context_t	libpostproc/postprocess.h	/^typedef pp_context pp_context_t;$/;"	t
pp_field_time	libavcodec/mpegvideo.h	/^    uint16_t pp_field_time;$/;"	m	struct:MpegEncContext
pp_free_context	libpostproc/postprocess.c	/^void pp_free_context(void *vc){$/;"	f
pp_free_mode	libpostproc/postprocess.c	/^void pp_free_mode(pp_mode *mode){$/;"	f
pp_get_context	libpostproc/postprocess.c	/^pp_context *pp_get_context(int width, int height, int cpuCaps){$/;"	f
pp_get_mode_by_name_and_quality	libpostproc/postprocess.c	/^pp_mode *pp_get_mode_by_name_and_quality(const char *name, int quality)$/;"	f
pp_help	libpostproc/postprocess.c	/^const char *const pp_help=$/;"	v
pp_mode	libpostproc/postprocess.h	/^typedef void pp_mode;$/;"	t
pp_mode_t	libpostproc/postprocess.h	/^typedef pp_mode pp_mode_t;$/;"	t
pp_postprocess	libpostproc/postprocess.c	/^void  pp_postprocess(const uint8_t * src[3], const int srcStride[3],$/;"	f
pp_time	libavcodec/mpegvideo.h	/^    uint16_t pp_time;               \/\/\/< time distance between the last 2 p,s,i frames$/;"	m	struct:MpegEncContext
ppacb	libavcodec/ps2/mmi.h	138;"	d
ppach	libavcodec/ps2/mmi.h	135;"	d
ppc$0	libavcodec/bfin/pixels_bfin.S	/^ppc$0: R2 = MIN(R2, R5) (V);$/;"	l
ppc$1	libavcodec/bfin/pixels_bfin.S	/^ppc$1: R2 = Max(R0, R4) (V)      || [I1++M1] = R6;$/;"	l
ppc_period_bit	libavcodec/twinvq.c	/^    uint8_t      ppc_period_bit;$/;"	m	struct:__anon66	file:
ppc_shape_bit	libavcodec/twinvq.c	/^    uint8_t      ppc_shape_bit;  \/\/\/< number of bits of the PPC shape CB coeffs$/;"	m	struct:__anon66	file:
ppc_shape_cb	libavcodec/twinvq.c	/^    const int16_t *ppc_shape_cb; \/\/\/< PPC shape CB$/;"	m	struct:__anon66	file:
ppc_shape_len	libavcodec/twinvq.c	/^    uint8_t      ppc_shape_len;  \/\/\/< size of PPC shape CB$/;"	m	struct:__anon66	file:
ppm_save	libavcodec/dvdsubdec.c	/^static void ppm_save(const char *filename, uint8_t *bitmap, int w, int h,$/;"	f	file:
pprs	libavfilter/libmpcodecs/vf_filmdint.c	/^static const struct frame_stats pprs = {PPR,PPR,PPR,PPR,PPR,PPR,PPR,0,0,9999};$/;"	v	typeref:struct:frame_stats	file:
pps	libavcodec/h264.h	/^    PPS pps; \/\/FIXME move to Picture perhaps? (->no) do we need that?$/;"	m	struct:H264Context
pps_buffers	libavcodec/h264.h	/^    PPS *pps_buffers[MAX_PPS_COUNT];$/;"	m	struct:H264Context
ppzs	libavfilter/libmpcodecs/vf_filmdint.c	/^static const struct frame_stats ppzs = {PPZ,PPZ,PPZ,PPZ,PPZ,PPZ,PPZ,0,0,9999};$/;"	v	typeref:struct:frame_stats	file:
pq	libavcodec/vc1.h	/^    uint8_t pq, altpq;    \/\/\/< Current\/alternate frame quantizer scale$/;"	m	struct:VC1Context
pqindex	libavcodec/vc1.h	/^    int pqindex;          \/\/\/< raw pqindex used in coding set selection$/;"	m	struct:VC1Context
pquantizer	libavcodec/vc1.h	/^    uint8_t pquantizer;           \/\/\/< Uniform (over sequence) quantizer in use$/;"	m	struct:VC1Context
preFilterBuf	libavfilter/libmpcodecs/vf_sab.c	/^    uint8_t *preFilterBuf;$/;"	m	struct:FilterParam	file:
preFilterContext	libavfilter/libmpcodecs/vf_sab.c	/^    struct SwsContext *preFilterContext;$/;"	m	struct:FilterParam	typeref:struct:FilterParam::SwsContext	file:
preFilterRadius	libavfilter/libmpcodecs/vf_sab.c	/^    float preFilterRadius;$/;"	m	struct:FilterParam	file:
preFilterStride	libavfilter/libmpcodecs/vf_sab.c	/^    int preFilterStride;$/;"	m	struct:FilterParam	file:
pre_coef1	libavcodec/imc.c	/^    float pre_coef1[COEFFS];$/;"	m	struct:__anon90	file:
pre_coef2	libavcodec/imc.c	/^    float pre_coef2[COEFFS];$/;"	m	struct:__anon90	file:
pre_dia_size	libavcodec/avcodec.h	/^    int pre_dia_size;$/;"	m	struct:AVCodecContext
pre_estimate_motion_thread	libavcodec/mpegvideo_enc.c	/^static int pre_estimate_motion_thread(AVCodecContext *c, void *arg){$/;"	f	file:
pre_gb	libavcodec/4xm.c	/^    GetBitContext pre_gb;          \/\/\/< ac\/dc prefix$/;"	m	struct:FourXContext	file:
pre_mantissa	libavcodec/ac3dec.h	/^    int pre_mantissa[AC3_MAX_CHANNELS][AC3_MAX_COEFS][AC3_MAX_BLOCKS];  \/\/\/< pre-IDCT mantissas$/;"	m	struct:__anon88
pre_me	libavcodec/avcodec.h	/^    int pre_me;$/;"	m	struct:AVCodecContext
pre_pass	libavcodec/mpegvideo.h	/^    int pre_pass;                      \/\/\/< = 1 for the pre pass$/;"	m	struct:MotionEstContext
pre_penalty_factor	libavcodec/mpegvideo.h	/^    int pre_penalty_factor;$/;"	m	struct:MotionEstContext
pre_process_video_frame	ffmpeg.c	/^static void pre_process_video_frame(AVInputStream *ist, AVPicture *picture, void **bufp)$/;"	f	file:
pre_process_video_frame	ffmpeg/ffmpeg.c	/^static void pre_process_video_frame(AVInputStream *ist, AVPicture *picture, void **bufp)$/;"	f	file:
pre_vlc	libavcodec/4xm.c	/^    VLC pre_vlc;$/;"	m	struct:FourXContext	file:
prealloced_context	libavformat/avformat.h	/^    attribute_deprecated unsigned int prealloced_context:1;$/;"	m	struct:AVFormatParameters
prebuffer	ffserver.c	/^    int prebuffer;      \/* Number of millseconds early to start *\/$/;"	m	struct:FFStream	file:
prec	libavcodec/j2k.h	/^    J2kPrec *prec;$/;"	m	struct:__anon215
precision	libavcodec/j2kdec.c	/^    int precision;$/;"	m	struct:__anon98	file:
pred	libavcodec/ratecontrol.h	/^    Predictor pred[5];$/;"	m	struct:RateControlContext
pred	libavcodec/siprdata.h	/^static const float pred[4] = {$/;"	v
pred16x16	libavcodec/h264pred.h	/^    void (*pred16x16[4+3+2])(uint8_t *src, int stride);$/;"	m	struct:H264PredContext
pred16x16	libavcodec/vp8.h	/^        uint8_t pred16x16[4];$/;"	m	struct:__anon182::__anon187
pred16x16_add	libavcodec/h264pred.h	/^    void (*pred16x16_add[3])(uint8_t *pix\/*align 16*\/, const int *block_offset, const DCTELEM *block\/*align 16*\/, int stride);$/;"	m	struct:H264PredContext
pred16x16_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred16x16_dc)(uint8_t *_src, int stride){$/;"	f	file:
pred16x16_horizontal	libavcodec/h264pred_template.c	/^static void FUNCC(pred16x16_horizontal)(uint8_t *_src, int stride){$/;"	f	file:
pred16x16_horizontal_add	libavcodec/h264pred_template.c	/^static void FUNCC(pred16x16_horizontal_add)(uint8_t *pix, const int *block_offset, const DCTELEM *block, int stride){$/;"	f	file:
pred16x16_left_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred16x16_left_dc)(uint8_t *_src, int stride){$/;"	f	file:
pred16x16_plane	libavcodec/h264pred_template.c	/^static void FUNCC(pred16x16_plane)(uint8_t *src, int stride){$/;"	f	file:
pred16x16_plane_compat	libavcodec/h264pred_template.c	/^static inline void FUNCC(pred16x16_plane_compat)(uint8_t *p_src, int p_stride, const int svq3, const int rv40){$/;"	f	file:
pred16x16_plane_rv40_c	libavcodec/h264pred.c	/^static void pred16x16_plane_rv40_c(uint8_t *src, int stride){$/;"	f	file:
pred16x16_plane_svq3_c	libavcodec/h264pred.c	/^static void pred16x16_plane_svq3_c(uint8_t *src, int stride){$/;"	f	file:
pred16x16_tm_vp8_c	libavcodec/h264pred.c	/^static void pred16x16_tm_vp8_c(uint8_t *src, int stride){$/;"	f	file:
pred16x16_top_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred16x16_top_dc)(uint8_t *_src, int stride){$/;"	f	file:
pred16x16_vertical	libavcodec/h264pred_template.c	/^static void FUNCC(pred16x16_vertical)(uint8_t *_src, int _stride){$/;"	f	file:
pred16x16_vertical_add	libavcodec/h264pred_template.c	/^static void FUNCC(pred16x16_vertical_add)(uint8_t *pix, const int *block_offset, const DCTELEM *block, int stride){$/;"	f	file:
pred4x4	libavcodec/h264pred.h	/^    void (*pred4x4  [9+3+3])(uint8_t *src, const uint8_t *topright, int stride);\/\/FIXME move to dsp?$/;"	m	struct:H264PredContext
pred4x4_127_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_127_dc)(uint8_t *_src, const uint8_t *topright, int _stride){$/;"	f	file:
pred4x4_128_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_128_dc)(uint8_t *_src, const uint8_t *topright, int _stride){$/;"	f	file:
pred4x4_129_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_129_dc)(uint8_t *_src, const uint8_t *topright, int _stride){$/;"	f	file:
pred4x4_add	libavcodec/h264pred.h	/^    void (*pred4x4_add  [2])(uint8_t *pix\/*align  4*\/, const DCTELEM *block\/*align 16*\/, int stride);$/;"	m	struct:H264PredContext
pred4x4_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_dc)(uint8_t *_src, const uint8_t *topright, int _stride){$/;"	f	file:
pred4x4_down_left	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_down_left)(uint8_t *_src, const uint8_t *_topright, int _stride){$/;"	f	file:
pred4x4_down_left_rv40_c	libavcodec/h264pred.c	/^static void pred4x4_down_left_rv40_c(uint8_t *src, const uint8_t *topright, int stride){$/;"	f	file:
pred4x4_down_left_rv40_nodown_c	libavcodec/h264pred.c	/^static void pred4x4_down_left_rv40_nodown_c(uint8_t *src, const uint8_t *topright, int stride){$/;"	f	file:
pred4x4_down_left_svq3_c	libavcodec/h264pred.c	/^static void pred4x4_down_left_svq3_c(uint8_t *src, const uint8_t *topright, int stride){$/;"	f	file:
pred4x4_down_right	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_down_right)(uint8_t *_src, const uint8_t *topright, int _stride){$/;"	f	file:
pred4x4_horizontal	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_horizontal)(uint8_t *_src, const uint8_t *topright, int _stride){$/;"	f	file:
pred4x4_horizontal_add	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_horizontal_add)(uint8_t *p_pix, const DCTELEM *p_block, int stride){$/;"	f	file:
pred4x4_horizontal_down	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_horizontal_down)(uint8_t *_src, const uint8_t *topright, int _stride){$/;"	f	file:
pred4x4_horizontal_up	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_horizontal_up)(uint8_t *_src, const uint8_t *topright, int _stride){$/;"	f	file:
pred4x4_horizontal_up_rv40_c	libavcodec/h264pred.c	/^static void pred4x4_horizontal_up_rv40_c(uint8_t *src, const uint8_t *topright, int stride){$/;"	f	file:
pred4x4_horizontal_up_rv40_nodown_c	libavcodec/h264pred.c	/^static void pred4x4_horizontal_up_rv40_nodown_c(uint8_t *src, const uint8_t *topright, int stride){$/;"	f	file:
pred4x4_horizontal_vp8_c	libavcodec/h264pred.c	/^static void pred4x4_horizontal_vp8_c(uint8_t *src, const uint8_t *topright, int stride){$/;"	f	file:
pred4x4_left_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_left_dc)(uint8_t *_src, const uint8_t *topright, int _stride){$/;"	f	file:
pred4x4_tm_vp8_c	libavcodec/h264pred.c	/^static void pred4x4_tm_vp8_c(uint8_t *src, const uint8_t *topright, int stride){$/;"	f	file:
pred4x4_top_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_top_dc)(uint8_t *_src, const uint8_t *topright, int _stride){$/;"	f	file:
pred4x4_vertical	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_vertical)(uint8_t *_src, const uint8_t *topright, int _stride){$/;"	f	file:
pred4x4_vertical_add	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_vertical_add)(uint8_t *p_pix, const DCTELEM *p_block, int stride){$/;"	f	file:
pred4x4_vertical_left	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_vertical_left)(uint8_t *_src, const uint8_t *_topright, int _stride){$/;"	f	file:
pred4x4_vertical_left_rv40	libavcodec/h264pred.c	/^static void pred4x4_vertical_left_rv40(uint8_t *src, const uint8_t *topright, int stride,$/;"	f	file:
pred4x4_vertical_left_rv40_c	libavcodec/h264pred.c	/^static void pred4x4_vertical_left_rv40_c(uint8_t *src, const uint8_t *topright, int stride){$/;"	f	file:
pred4x4_vertical_left_rv40_nodown_c	libavcodec/h264pred.c	/^static void pred4x4_vertical_left_rv40_nodown_c(uint8_t *src, const uint8_t *topright, int stride){$/;"	f	file:
pred4x4_vertical_left_vp8_c	libavcodec/h264pred.c	/^static void pred4x4_vertical_left_vp8_c(uint8_t *src, const uint8_t *topright, int stride){$/;"	f	file:
pred4x4_vertical_right	libavcodec/h264pred_template.c	/^static void FUNCC(pred4x4_vertical_right)(uint8_t *_src, const uint8_t *topright, int _stride){$/;"	f	file:
pred4x4_vertical_vp8_c	libavcodec/h264pred.c	/^static void pred4x4_vertical_vp8_c(uint8_t *src, const uint8_t *topright, int stride){$/;"	f	file:
pred8x8	libavcodec/h264pred.h	/^    void (*pred8x8  [4+3+4])(uint8_t *src, int stride);$/;"	m	struct:H264PredContext
pred8x8_add	libavcodec/h264pred.h	/^    void (*pred8x8_add  [3])(uint8_t *pix\/*align  8*\/, const int *block_offset, const DCTELEM *block\/*align 16*\/, int stride);$/;"	m	struct:H264PredContext
pred8x8_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8_dc)(uint8_t *_src, int stride){$/;"	f	file:
pred8x8_dc_rv40_c	libavcodec/h264pred.c	/^static void pred8x8_dc_rv40_c(uint8_t *src, int stride){$/;"	f	file:
pred8x8_horizontal	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8_horizontal)(uint8_t *_src, int stride){$/;"	f	file:
pred8x8_horizontal_add	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8_horizontal_add)(uint8_t *pix, const int *block_offset, const DCTELEM *block, int stride){$/;"	f	file:
pred8x8_left_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8_left_dc)(uint8_t *_src, int stride){$/;"	f	file:
pred8x8_left_dc_rv40_c	libavcodec/h264pred.c	/^static void pred8x8_left_dc_rv40_c(uint8_t *src, int stride){$/;"	f	file:
pred8x8_mad_cow_dc_0l0	libavcodec/h264pred_template.c	/^static void FUNC(pred8x8_mad_cow_dc_0l0)(uint8_t *src, int stride){$/;"	f	file:
pred8x8_mad_cow_dc_0lt	libavcodec/h264pred_template.c	/^static void FUNC(pred8x8_mad_cow_dc_0lt)(uint8_t *src, int stride){$/;"	f	file:
pred8x8_mad_cow_dc_l00	libavcodec/h264pred_template.c	/^static void FUNC(pred8x8_mad_cow_dc_l00)(uint8_t *src, int stride){$/;"	f	file:
pred8x8_mad_cow_dc_l0t	libavcodec/h264pred_template.c	/^static void FUNC(pred8x8_mad_cow_dc_l0t)(uint8_t *src, int stride){$/;"	f	file:
pred8x8_plane	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8_plane)(uint8_t *_src, int _stride){$/;"	f	file:
pred8x8_tm_vp8_c	libavcodec/h264pred.c	/^static void pred8x8_tm_vp8_c(uint8_t *src, int stride){$/;"	f	file:
pred8x8_top_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8_top_dc)(uint8_t *_src, int stride){$/;"	f	file:
pred8x8_top_dc_rv40_c	libavcodec/h264pred.c	/^static void pred8x8_top_dc_rv40_c(uint8_t *src, int stride){$/;"	f	file:
pred8x8_vertical	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8_vertical)(uint8_t *_src, int _stride){$/;"	f	file:
pred8x8_vertical_add	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8_vertical_add)(uint8_t *pix, const int *block_offset, const DCTELEM *block, int stride){$/;"	f	file:
pred8x8c	libavcodec/vp8.h	/^        uint8_t pred8x8c[3];$/;"	m	struct:__anon182::__anon187
pred8x8l	libavcodec/h264pred.h	/^    void (*pred8x8l [9+3])(uint8_t *src, int topleft, int topright, int stride);$/;"	m	struct:H264PredContext
pred8x8l_128_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_128_dc)(uint8_t *_src, int has_topleft, int has_topright, int _stride)$/;"	f	file:
pred8x8l_add	libavcodec/h264pred.h	/^    void (*pred8x8l_add [2])(uint8_t *pix\/*align  8*\/, const DCTELEM *block\/*align 16*\/, int stride);$/;"	m	struct:H264PredContext
pred8x8l_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_dc)(uint8_t *p_src, int has_topleft, int has_topright, int p_stride)$/;"	f	file:
pred8x8l_down_left	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_down_left)(uint8_t *p_src, int has_topleft, int has_topright, int p_stride)$/;"	f	file:
pred8x8l_down_right	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_down_right)(uint8_t *p_src, int has_topleft, int has_topright, int p_stride)$/;"	f	file:
pred8x8l_horizontal	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_horizontal)(uint8_t *p_src, int has_topleft, int has_topright, int p_stride)$/;"	f	file:
pred8x8l_horizontal_add	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_horizontal_add)(uint8_t *p_pix, const DCTELEM *p_block, int stride){$/;"	f	file:
pred8x8l_horizontal_down	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_horizontal_down)(uint8_t *p_src, int has_topleft, int has_topright, int p_stride)$/;"	f	file:
pred8x8l_horizontal_up	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_horizontal_up)(uint8_t *p_src, int has_topleft, int has_topright, int p_stride)$/;"	f	file:
pred8x8l_left_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_left_dc)(uint8_t *_src, int has_topleft, int has_topright, int _stride)$/;"	f	file:
pred8x8l_top_dc	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_top_dc)(uint8_t *p_src, int has_topleft, int has_topright, int p_stride)$/;"	f	file:
pred8x8l_vertical	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_vertical)(uint8_t *_src, int has_topleft, int has_topright, int _stride)$/;"	f	file:
pred8x8l_vertical_add	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_vertical_add)(uint8_t *p_pix, const DCTELEM *p_block, int stride){$/;"	f	file:
pred8x8l_vertical_left	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_vertical_left)(uint8_t *p_src, int has_topleft, int has_topright, int p_stride)$/;"	f	file:
pred8x8l_vertical_right	libavcodec/h264pred_template.c	/^static void FUNCC(pred8x8l_vertical_right)(uint8_t *p_src, int has_topleft, int has_topright, int p_stride)$/;"	f	file:
pred_16k	libavcodec/sipr16kdata.h	/^static const float pred_16k[2] = {0.8, 0.6};$/;"	v
pred_16x8_motion	libavcodec/h264_mvpred.h	/^static inline void pred_16x8_motion(H264Context * const h, int n, int list, int ref, int * const mx, int * const my){$/;"	f
pred_8x16_motion	libavcodec/h264_mvpred.h	/^static inline void pred_8x16_motion(H264Context * const h, int n, int list, int ref, int * const mx, int * const my){$/;"	f
pred_block	libavcodec/snow.c	/^static void pred_block(SnowContext *s, uint8_t *dst, uint8_t *tmp, int stride, int sx, int sy, int b_w, int b_h, BlockNode *block, int plane_index, int w, int h){$/;"	f	file:
pred_dir_table	libavcodec/mpegvideo.h	/^    uint8_t *pred_dir_table;      \/\/\/< used to store pred_dir for partitioned decoding$/;"	m	struct:MpegEncContext
pred_fac	libavcodec/amrnbdata.h	/^static const float pred_fac[LP_FILTER_ORDER] = {$/;"	v
pred_intra_mode	libavcodec/h264.h	/^static inline int pred_intra_mode(H264Context *h, int n){$/;"	f
pred_mode	libavcodec/h264data.h	/^    uint8_t pred_mode;$/;"	m	struct:IMbInfo
pred_mode_Y	libavcodec/cavs.h	/^    int pred_mode_Y[3*3];$/;"	m	struct:__anon207
pred_motion	libavcodec/h264_mvpred.h	/^static inline void pred_motion(H264Context * const h, int n, int part_width, int list, int ref, int * const mx, int * const my){$/;"	f
pred_mv	libavcodec/snow.c	/^static inline void pred_mv(SnowContext *s, int *mx, int *my, int ref,$/;"	f	file:
pred_non_zero_count	libavcodec/h264_cavlc.c	/^static inline int pred_non_zero_count(H264Context *h, int n){$/;"	f	file:
pred_pskip_motion	libavcodec/h264_mvpred.h	/^static inline void pred_pskip_motion(H264Context * const h, int * const mx, int * const my){$/;"	f
pred_spatial_direct_motion	libavcodec/h264_direct.c	/^static void pred_spatial_direct_motion(H264Context * const h, int *mb_type){$/;"	f	file:
pred_temp_direct_motion	libavcodec/h264_direct.c	/^static void pred_temp_direct_motion(H264Context * const h, int *mb_type){$/;"	f	file:
pred_weight_table	libavcodec/h264.c	/^static int pred_weight_table(H264Context *h){$/;"	f	file:
pred_x	libavcodec/mpegvideo.h	/^    int pred_x;$/;"	m	struct:MotionEstContext
pred_y	libavcodec/mpegvideo.h	/^    int pred_y;$/;"	m	struct:MotionEstContext
predecode_packet	libavformat/mpegenc.c	/^    PacketDesc *predecode_packet;$/;"	m	struct:__anon428	file:
predict	libavcodec/aacdec.c	/^static av_always_inline void predict(PredictorState *ps, float *coef,$/;"	f	file:
predict	libavcodec/ffv1.c	/^static inline int predict(int16_t *src, int16_t *last)$/;"	f	file:
predict_field_decoding_flag	libavcodec/h264.c	/^static void predict_field_decoding_flag(H264Context *h){$/;"	f	file:
predict_plane	libavcodec/snow.c	/^static av_always_inline void predict_plane(SnowContext *s, IDWTELEM *buf, int plane_index, int add){$/;"	f	file:
predict_size	libavcodec/ratecontrol.c	/^static double predict_size(Predictor *p, double q, double var)$/;"	f	file:
predict_slice	libavcodec/snow.c	/^static av_always_inline void predict_slice(SnowContext *s, IDWTELEM *buf, int plane_index, int add, int mb_y){$/;"	f	file:
predict_slice_buffered	libavcodec/snow.c	/^static av_always_inline void predict_slice_buffered(SnowContext *s, slice_buffer * sb, IDWTELEM * old_buffer, int plane_index, int add, int mb_y){$/;"	f	file:
predicted_dc	libavcodec/intrax8.h	/^    int predicted_dc;$/;"	m	struct:__anon134
predicterror_buffer	libavcodec/alac.c	/^    int32_t *predicterror_buffer[MAX_CHANNELS];$/;"	m	struct:__anon266	file:
prediction_error	libavcodec/amrnbdec.c	/^    float               prediction_error[4]; \/\/\/< quantified prediction errors {20log10(^gamma_gc)} for previous four subframes$/;"	m	struct:AMRContext	file:
prediction_error	libavcodec/amrwbdec.c	/^    float                    prediction_error[4]; \/\/\/< quantified prediction errors {20log10(^gamma_gc)} for previous four subframes$/;"	m	struct:__anon64	file:
prediction_method	libavcodec/avcodec.h	/^     int prediction_method;$/;"	m	struct:AVCodecContext
prediction_mode	libavcodec/dca.c	/^    int prediction_mode[DCA_PRIM_CHANNELS_MAX][DCA_SUBBANDS];    \/\/\/< prediction mode (ADPCM used or not)$/;"	m	struct:__anon93	file:
prediction_order_method	libavcodec/avcodec.h	/^    attribute_deprecated int prediction_order_method;$/;"	m	struct:AVCodecContext
prediction_order_method	libavcodec/flacenc.c	/^    int prediction_order_method;$/;"	m	struct:CompressionOptions	file:
prediction_table	libavcodec/intrax8.h	/^    uint8_t * prediction_table;\/\/2*(mb_w*2)$/;"	m	struct:__anon134
prediction_used	libavcodec/aac.h	/^    uint8_t prediction_used[41];$/;"	m	struct:__anon239
prediction_vq	libavcodec/dca.c	/^    int prediction_vq[DCA_PRIM_CHANNELS_MAX][DCA_SUBBANDS];      \/\/\/< prediction VQ coefs$/;"	m	struct:__anon93	file:
predictor	libavcodec/adpcm.c	/^    int predictor;$/;"	m	struct:ADPCMChannelStatus	file:
predictor	libavcodec/apedec.c	/^    APEPredictor predictor;                  \/\/\/< predictor used for final reconstruction$/;"	m	struct:APEContext	file:
predictor	libavcodec/huffyuv.c	/^    Predictor predictor;$/;"	m	struct:HYuvContext	file:
predictor	libavcodec/tiff.c	/^    int predictor;$/;"	m	struct:TiffContext	file:
predictor	libavcodec/tta.c	/^    int32_t predictor;$/;"	m	struct:TTAChannel	file:
predictor_buf	libavcodec/alacenc.c	/^    int32_t predictor_buf[DEFAULT_FRAME_SIZE];$/;"	m	struct:AlacEncodeContext	file:
predictor_calc_error	libavcodec/sonic.c	/^static int predictor_calc_error(int *k, int *state, int order, int error)$/;"	f	file:
predictor_decode_mono	libavcodec/apedec.c	/^static void predictor_decode_mono(APEContext * ctx, int count)$/;"	f	file:
predictor_decode_stereo	libavcodec/apedec.c	/^static void predictor_decode_stereo(APEContext * ctx, int count)$/;"	f	file:
predictor_decompress_fir_adapt	libavcodec/alac.c	/^static void predictor_decompress_fir_adapt(int32_t *error_buffer,$/;"	f	file:
predictor_history	libavcodec/dca.c	/^    int predictor_history;      \/\/\/< predictor history flag$/;"	m	struct:__anon93	file:
predictor_init_state	libavcodec/sonic.c	/^static void predictor_init_state(int *k, int *state, int order)$/;"	f	file:
predictor_initialized	libavcodec/aac.h	/^    int predictor_initialized;$/;"	m	struct:__anon239
predictor_k	libavcodec/sonic.c	/^    int *predictor_k;$/;"	m	struct:SonicContext	file:
predictor_lspf	libavcodec/qcelpdec.c	/^    float    predictor_lspf[10];\/*!< LSP predictor for RATE_OCTAVE and I_F_Q *\/$/;"	m	struct:__anon225	file:
predictor_present	libavcodec/aac.h	/^    int predictor_present;$/;"	m	struct:__anon239
predictor_reset_group	libavcodec/aac.h	/^    int predictor_reset_group;$/;"	m	struct:__anon239
predictor_state	libavcodec/aac.h	/^    PredictorState predictor_state[MAX_PREDICTORS];$/;"	m	struct:__anon244
predictor_state	libavcodec/sonic.c	/^    int *predictor_state[MAX_CHANNELS];$/;"	m	struct:SonicContext	file:
predictor_update_filter	libavcodec/apedec.c	/^static av_always_inline int predictor_update_filter(APEPredictor *p, const int decoded, const int filter, const int delayA, const int delayB, const int adaptA, const int adaptB)$/;"	f	file:
predictors	libavcodec/vmdav.c	/^    int predictors[2];$/;"	m	struct:VmdAudioContext	file:
pref_size	libavformat/oggenc.c	/^    int pref_size; \/\/\/< preferred page size (0 => fill all segments)$/;"	m	struct:__anon381	file:
preferred_stereo_downmix	libavcodec/ac3.h	/^    int preferred_stereo_downmix;$/;"	m	struct:AC3EncOptions
prefetch	libavcodec/alpha/asm.h	103;"	d
prefetch	libavcodec/alpha/asm.h	88;"	d
prefetch	libavcodec/dsputil.h	/^    void (*prefetch)(void *mem, int stride, int h);$/;"	m	struct:DSPContext
prefetch_en	libavcodec/alpha/asm.h	104;"	d
prefetch_en	libavcodec/alpha/asm.h	89;"	d
prefetch_m	libavcodec/alpha/asm.h	105;"	d
prefetch_m	libavcodec/alpha/asm.h	90;"	d
prefetch_men	libavcodec/alpha/asm.h	106;"	d
prefetch_men	libavcodec/alpha/asm.h	91;"	d
prefetch_motion	libavcodec/h264.c	/^static inline void prefetch_motion(H264Context *h, int list, int pixel_shift, int chroma444){$/;"	f	file:
prefetch_motion	libavcodec/mpegvideo_common.h	/^static inline void prefetch_motion(MpegEncContext *s, uint8_t **pix, int dir){$/;"	f
prefetch_motion	libavcodec/vp8.c	/^static av_always_inline void prefetch_motion(VP8Context *s, VP8Macroblock *mb, int mb_x, int mb_y, int mb_xy, int ref)$/;"	f	file:
prefetch_ppc	libavcodec/ppc/dsputil_ppc.c	/^static void prefetch_ppc(void *mem, int stride, int h)$/;"	f	file:
prefetchnta	libpostproc/postprocess.c	/^static inline void prefetchnta(void *p)$/;"	f	file:
prefetcht0	libpostproc/postprocess.c	/^static inline void prefetcht0(void *p)$/;"	f	file:
prefetcht1	libpostproc/postprocess.c	/^static inline void prefetcht1(void *p)$/;"	f	file:
prefetcht2	libpostproc/postprocess.c	/^static inline void prefetcht2(void *p)$/;"	f	file:
prefix	config.mak	/^prefix=\/home\/taoanran\/git\/anrdroid4.0\/ffmpeg_android_bin$/;"	m
prefix	libavcodec/lzw.c	/^    uint16_t prefix[LZW_SIZTABLE];$/;"	m	struct:LZWState	file:
prefix	libavformat/avidec.c	/^    int prefix;                       \/\/\/< normally 'd'<<8 + 'c' or 'w'<<8 + 'b'$/;"	m	struct:AVIStream	file:
prefix_count	libavformat/avidec.c	/^    int prefix_count;$/;"	m	struct:AVIStream	file:
preflag	libavcodec/mpegaudiodec.c	/^    int preflag;$/;"	m	struct:GranuleDef	file:
preinit	libavfilter/libmpcodecs/libvo/video_out.h	/^    int (*preinit)(const char *arg);$/;"	m	struct:vo_functions_s
preload	libavformat/avformat.h	/^    int preload;$/;"	m	struct:AVFormatContext
premux_packet	libavformat/mpegenc.c	/^    PacketDesc *premux_packet;$/;"	m	struct:__anon428	file:
prepare_app_arguments	cmdutils.c	/^static inline void prepare_app_arguments(int *argc_ptr, char ***argv_ptr)$/;"	f	file:
prepare_app_arguments	cmdutils.c	/^static void prepare_app_arguments(int *argc_ptr, char ***argv_ptr)$/;"	f	file:
prepare_app_arguments	ffmpeg/cmdutils.c	/^static inline void prepare_app_arguments(int *argc_ptr, char ***argv_ptr)$/;"	f	file:
prepare_app_arguments	ffmpeg/cmdutils.c	/^static void prepare_app_arguments(int *argc_ptr, char ***argv_ptr)$/;"	f	file:
prepare_avpic	libavcodec/mimic.c	/^static void prepare_avpic(MimicContext *ctx, AVPicture *dst, AVPicture *src)$/;"	f	file:
prepare_packet	libavformat/rtpdec_vp8.c	/^static void prepare_packet(AVPacket *pkt, PayloadContext *vp8, int stream)$/;"	f	file:
prepare_sdp_description	ffserver.c	/^static int prepare_sdp_description(FFStream *stream, uint8_t **pbuffer,$/;"	f	file:
prepend	configure	/^prepend(){$/;"	f
preroll	libavformat/asf.h	/^    uint32_t preroll;           \/**< timestamp of the first packet, in milliseconds$/;"	m	struct:__anon400
prescale	libavcodec/faanidct.c	/^static const FLOAT prescale[64]={$/;"	v	file:
present	libavcodec/aac.h	/^    int present;$/;"	m	struct:__anon240
present	libavcodec/aac.h	/^    int8_t present;$/;"	m	struct:__anon238
presentation	libavcodec/pgssubdec.c	/^    PGSSubPresentation presentation;$/;"	m	struct:PGSSubContext	file:
preset	libavcodec/libx264.c	/^    char *preset;$/;"	m	struct:X264Context	file:
prev	libavcodec/aaccoder.c	/^    int prev;$/;"	m	struct:TrellisPath	file:
prev	libavcodec/adpcm.c	/^    int prev;$/;"	m	struct:TrellisPath	file:
prev	libavcodec/adx.h	/^    PREV prev[2];$/;"	m	struct:__anon159
prev	libavcodec/dv.c	/^    int      prev[5];$/;"	m	struct:EncBlockInfo	file:
prev	libavcodec/dxa.c	/^    AVFrame pic, prev;$/;"	m	struct:DxaDecContext	file:
prev	libavcodec/g722.c	/^        int prev;$/;"	m	struct:__anon140::TrellisPath	file:
prev	libavcodec/kgv1dec.c	/^    uint16_t *prev, *cur;$/;"	m	struct:__anon115	file:
prev	libavcodec/kmvc.c	/^    uint8_t *cur, *prev;$/;"	m	struct:KmvcContext	file:
prev	libavcodec/msvideo1enc.c	/^    uint8_t *prev;$/;"	m	struct:Msvideo1EncContext	file:
prev	libavcodec/zmbv.c	/^    uint8_t *prev, *cur;$/;"	m	struct:ZmbvContext	file:
prev	libavcodec/zmbvenc.c	/^    uint8_t *prev;$/;"	m	struct:ZmbvEncContext	file:
prev	libavfilter/libmpcodecs/pullup.h	/^    struct pullup_field *prev, *next;$/;"	m	struct:pullup_field	typeref:struct:pullup_field::pullup_field
prev	libavfilter/vf_yadif.c	/^    AVFilterBufferRef *prev;$/;"	m	struct:__anon6	file:
prev2	libavcodec/mace.c	/^    int16_t index, factor, prev2, previous, level;$/;"	m	struct:ChannelData	file:
prev2	libavfilter/x86/yadif_template.c	237;"	d	file:
prev2	libavfilter/x86/yadif_template.c	240;"	d	file:
prev2	libavfilter/x86/yadif_template.c	243;"	d	file:
prev2	libavfilter/x86/yadif_template.c	246;"	d	file:
prevFrame	libavcodec/atrac3.c	/^    float             prevFrame[1024];$/;"	m	struct:__anon130	file:
prev_attack	libavcodec/aacpsy.c	/^    int   prev_attack;                   \/\/\/< attack value for the last short block in the previous sequence$/;"	m	struct:AacPsyChannel	file:
prev_band	libavcodec/aacpsy.c	/^    AacPsyBand prev_band[128];          \/\/\/< bands information from the previous frame$/;"	m	struct:AacPsyChannel	file:
prev_bitrate	libavcodec/qcelpdec.c	/^    int      prev_bitrate;$/;"	m	struct:__anon225	file:
prev_block_len	libavcodec/wmaprodec.c	/^    int16_t  prev_block_len;                          \/\/\/< length of the previous block$/;"	m	struct:__anon82	file:
prev_block_len_bits	libavcodec/wma.h	/^    int prev_block_len_bits;                \/\/\/< log2 of prev block length$/;"	m	struct:WMACodecContext
prev_dc	libavcodec/vp56.h	/^    DCTELEM prev_dc[3][3];    \/* [plan][ref_frame] *\/$/;"	m	struct:vp56_context
prev_energy_subshort	libavcodec/aacpsy.c	/^    float prev_energy_subshort[AAC_NUM_BLOCKS_SHORT * PSY_LAME_NUM_SUBBLOCKS];$/;"	m	struct:AacPsyChannel	file:
prev_fields	libavfilter/libmpcodecs/vf_filmdint.c	/^    long prev_fields;$/;"	m	struct:vf_priv_s	file:
prev_frame	libavcodec/twinvq.c	/^    float *prev_frame;               \/\/\/< non-interleaved previous frame$/;"	m	struct:TwinContext	file:
prev_frame	libavcodec/vb.c	/^    uint8_t *frame, *prev_frame;$/;"	m	struct:VBDecContext	file:
prev_frame	libavcodec/vmdav.c	/^    AVFrame prev_frame;$/;"	m	struct:VmdVideoContext	file:
prev_frame_count	libavformat/a64.c	/^    int prev_frame_count;$/;"	m	struct:A64MuxerContext	file:
prev_frame_num	libavcodec/h264.h	/^    int prev_frame_num;           \/\/\/< frame_num of the last pic for POC type 1\/2$/;"	m	struct:H264Context
prev_frame_num_offset	libavcodec/h264.h	/^    int prev_frame_num_offset;    \/\/\/< for POC type 2$/;"	m	struct:H264Context
prev_frame_type	libavcodec/indeo5.c	/^    int             prev_frame_type; \/\/\/< frame type of the previous frame$/;"	m	struct:__anon203	file:
prev_g1	libavcodec/qcelpdec.c	/^    int      prev_g1[2];$/;"	m	struct:__anon225	file:
prev_idx	libavcodec/aaccoder.c	/^    int prev_idx; \/\/\/< pointer to the previous path point$/;"	m	struct:BandCodingPath	file:
prev_index	libavcodec/mimic.c	/^    int             prev_index;$/;"	m	struct:__anon282	file:
prev_interlaced_frame	libavcodec/h264.h	/^    int prev_interlaced_frame;$/;"	m	struct:H264Context
prev_ir_filter_nr	libavcodec/amrnbdec.c	/^    uint8_t               prev_ir_filter_nr; \/\/\/< previous impulse response filter "impNr": 0 - strong, 1 - medium, 2 - none$/;"	m	struct:AMRContext	file:
prev_ir_filter_nr	libavcodec/amrwbdec.c	/^    uint8_t                    prev_ir_filter_nr; \/\/\/< previous impulse response filter "impNr": 0 - strong, 1 - medium, 2 - none$/;"	m	struct:__anon64	file:
prev_lsf_r	libavcodec/amrnbdec.c	/^    int16_t     prev_lsf_r[LP_FILTER_ORDER]; \/\/\/< residual LSF vector from previous subframe$/;"	m	struct:AMRContext	file:
prev_lsp_sub4	libavcodec/amrnbdec.c	/^    double   prev_lsp_sub4[LP_FILTER_ORDER]; \/\/\/< lsp vector for the 4th subframe of the previous frame$/;"	m	struct:AMRContext	file:
prev_lspf	libavcodec/qcelpdec.c	/^    float    prev_lspf[10];$/;"	m	struct:__anon225	file:
prev_lsps	libavcodec/wmavoice.c	/^    double prev_lsps[MAX_LSPS];   \/\/\/< LSPs of the last frame of the previous$/;"	m	struct:__anon157	file:
prev_mb_skipped	libavcodec/h264.h	/^    int prev_mb_skipped;$/;"	m	struct:H264Context
prev_pict_types	libavcodec/mpegvideo.h	/^    uint8_t *prev_pict_types;     \/\/\/< previous picture types in bitstream order, used for mb skip$/;"	m	struct:MpegEncContext
prev_pkt	libavformat/a64.c	/^    AVPacket prev_pkt;$/;"	m	struct:A64MuxerContext	file:
prev_pkt	libavformat/matroskadec.c	/^    AVPacket *prev_pkt;$/;"	m	struct:__anon371	file:
prev_pkt	libavformat/rtmpproto.c	/^    RTMPPacket    prev_pkt[2][RTMP_CHANNELS]; \/\/\/< packet history used when reading and sending packets$/;"	m	struct:RTMPContext	file:
prev_poc_lsb	libavcodec/h264.h	/^    int prev_poc_lsb;             \/\/\/< poc_lsb of the last reference pic for POC type 0$/;"	m	struct:H264Context
prev_poc_msb	libavcodec/h264.h	/^    int prev_poc_msb;             \/\/\/< poc_msb of the last reference pic for POC type 0$/;"	m	struct:H264Context
prev_pu_offset	libavcodec/dirac_parser.c	/^    int prev_pu_offset;$/;"	m	struct:DiracParseUnit	file:
prev_q	libavfilter/libmpcodecs/vf_fspp.c	/^    int prev_q;$/;"	m	struct:vf_priv_s	file:
prev_qtzd_reconst	libavcodec/g722.c	/^        int16_t prev_qtzd_reconst;   \/\/\/< previous quantized reconstructed signal (internal value, using low_inv_quant4)$/;"	m	struct:__anon140::G722Band	file:
prev_raw_samples	libavcodec/alsdec.c	/^    int32_t      *prev_raw_samples; \/\/\/< contains unshifted raw samples from the previous block$/;"	m	struct:__anon153	file:
prev_raw_samples	libavcodec/alsdec.c	/^    int32_t *prev_raw_samples;      \/\/\/< contains unshifted raw samples from the previous block$/;"	m	struct:__anon152	file:
prev_ret	libavformat/rtpdec.h	/^    int prev_ret;     \/\/\/< The return value of the actual parsing of the previous packet$/;"	m	struct:RTPDemuxContext
prev_rtp_ts	libavformat/movenc.h	/^    uint32_t    prev_rtp_ts;$/;"	m	struct:MOVIndex
prev_sample	libavcodec/adpcm.c	/^    int prev_sample;$/;"	m	struct:ADPCMChannelStatus	file:
prev_samples	libavcodec/g722.c	/^    int16_t prev_samples[PREV_SAMPLES_BUF_SIZE]; \/\/\/< memory of past decoded samples$/;"	m	struct:__anon140	file:
prev_samples_pos	libavcodec/g722.c	/^    int     prev_samples_pos;        \/\/\/< the number of values in prev_samples$/;"	m	struct:__anon140	file:
prev_set_id	libavformat/rdt.c	/^    int prev_set_id, prev_stream_id;$/;"	m	struct:RDTDemuxContext	file:
prev_shift	libavfilter/libmpcodecs/vf_noise.c	/^        int8_t *prev_shift[MAX_RES][3];$/;"	m	struct:FilterParam	file:
prev_sparse_fixed_gain	libavcodec/amrnbdec.c	/^    float            prev_sparse_fixed_gain; \/\/\/< previous fixed gain; used by anti-sparseness processing to determine "onset"$/;"	m	struct:AMRContext	file:
prev_sparse_fixed_gain	libavcodec/amrwbdec.c	/^    float                 prev_sparse_fixed_gain; \/\/\/< previous fixed gain; used by anti-sparseness to determine "onset"$/;"	m	struct:__anon64	file:
prev_stream_id	libavformat/rdt.c	/^    int prev_set_id, prev_stream_id;$/;"	m	struct:RDTDemuxContext	file:
prev_thread	libavcodec/pthread.c	/^    PerThreadContext *prev_thread; \/\/\/< The last thread submit_packet() was called on.$/;"	m	struct:FrameThreadContext	file:
prev_timestamp	libavformat/rdt.c	/^    uint32_t prev_timestamp;$/;"	m	struct:RDTDemuxContext	file:
prev_tr_gain	libavcodec/amrwbdec.c	/^    float                           prev_tr_gain; \/\/\/< previous initial gain used by noise enhancer for threshold$/;"	m	struct:__anon64	file:
prev_type	libavfilter/libmpcodecs/vf_filmdint.c	/^    enum pu_field_type_t prev_type;$/;"	m	struct:vf_priv_s	typeref:enum:vf_priv_s::pu_field_type_t	file:
prevfilt	libavcodec/truespeech.c	/^    int prevfilt[8];    \/\/ filter from previous frame$/;"	m	struct:__anon160	file:
prevh	libavcodec/ps2/mmi.h	141;"	d
preview_obmc	libavcodec/ituh263dec.c	/^static void preview_obmc(MpegEncContext *s){$/;"	f	file:
previous	libavcodec/aacpsy.c	/^        float previous;   \/\/\/< allowed PE of the previous frame$/;"	m	struct:AacPsyContext::__anon255	file:
previous	libavcodec/cook.c	/^    int *previous;$/;"	m	struct:__anon229	file:
previous	libavcodec/mace.c	/^    int16_t index, factor, prev2, previous, level;$/;"	m	struct:ChannelData	file:
previous_frame	libavcodec/flashsvenc.c	/^    uint8_t        *previous_frame;$/;"	m	struct:FlashSVContext	file:
previous_frame	libavcodec/qtrleenc.c	/^    AVPicture previous_frame;$/;"	m	struct:QtrleEncContext	file:
previous_mba	libavcodec/h261.h	/^    int previous_mba;$/;"	m	struct:H261Context
previous_window	libavcodec/vorbisdec.c	/^    uint8_t       previous_window;$/;"	m	struct:vorbis_context_s	file:
prg	libavformat/mpegts.c	/^    struct Program *prg;$/;"	m	struct:MpegTSContext	typeref:struct:MpegTSContext::Program	file:
prim_channels	libavcodec/dca.c	/^    int prim_channels;          \/\/\/< number of primary audio channels$/;"	m	struct:__anon93	file:
prim_channels	libavcodec/dcaenc.c	/^    int prim_channels;$/;"	m	struct:__anon231	file:
primary_color	libavcodec/ass_split.h	/^    int   primary_color;  \/**< color that a subtitle will normally appear in *\/$/;"	m	struct:__anon249
primer_pack_key	libavformat/mxfenc.c	/^static const uint8_t primer_pack_key[]             = { 0x06,0x0E,0x2B,0x34,0x02,0x05,0x01,0x01,0x0D,0x01,0x02,0x01,0x01,0x05,0x01,0x00 };$/;"	v	file:
print	libavfilter/libmpcodecs/vf_fixpts.c	/^    unsigned print:1;$/;"	m	struct:vf_priv_s	file:
print	libavutil/tree.c	/^static void print(AVTreeNode *t, int depth){$/;"	f	file:
print_aff_and_breaks	libavfilter/libmpcodecs/pullup.c	/^static void print_aff_and_breaks(struct pullup_context *c, struct pullup_field *f)$/;"	f	file:
print_all_libs_info	cmdutils.c	/^static void print_all_libs_info(FILE* outstream, int flags)$/;"	f	file:
print_all_libs_info	ffmpeg/cmdutils.c	/^static void print_all_libs_info(FILE* outstream, int flags)$/;"	f	file:
print_bin	libavcodec/get_bits.h	/^static inline void print_bin(int bits, int n){$/;"	f
print_config	configure	/^print_config(){$/;"	f
print_config_asm	configure	/^print_config_asm(){$/;"	f
print_config_h	configure	/^print_config_h(){$/;"	f
print_config_mak	configure	/^print_config_mak(){$/;"	f
print_digraph	tools/graph2dot.c	/^static void print_digraph(FILE *outfile, AVFilterGraph *graph)$/;"	f	file:
print_enabled	configure	/^print_enabled(){$/;"	f
print_error	cmdutils.c	/^void print_error(const char *filename, int err)$/;"	f
print_error	ffmpeg/cmdutils.c	/^void print_error(const char *filename, int err)$/;"	f
print_fps	libavformat/utils.c	/^static void print_fps(double d, const char *postfix){$/;"	f	file:
print_frame_info	libavcodec/crystalhd.c	/^static inline void print_frame_info(CHDContext *priv, BC_DTS_PROC_OUT *output)$/;"	f	file:
print_guid	libavformat/asfdec.c	/^static void print_guid(const ff_asf_guid *g)$/;"	f	file:
print_guid	libavformat/asfdec.c	133;"	d	file:
print_long_term	libavcodec/h264_refs.c	/^static void print_long_term(H264Context *h) {$/;"	f	file:
print_report	ffmpeg.c	/^static void print_report(AVFormatContext **output_files,$/;"	f	file:
print_report	ffmpeg/ffmpeg.c	/^static void print_report(AVFormatContext **output_files,$/;"	f	file:
print_sdp	ffmpeg.c	/^static void print_sdp(AVFormatContext **avc, int n)$/;"	f	file:
print_sdp	ffmpeg/ffmpeg.c	/^static void print_sdp(AVFormatContext **avc, int n)$/;"	f	file:
print_short_term	libavcodec/h264_refs.c	/^static void print_short_term(H264Context *h) {$/;"	f	file:
print_tag	libavformat/avidec.c	103;"	d	file:
print_tag	libavformat/nsvdec.c	213;"	d	file:
print_values	libavfilter/libmpcodecs/vf_eq2.c	/^void print_values (vf_eq2_t *eq2)$/;"	f	file:
printf	libavcodec/dct-test.c	46;"	d	file:
printf	libavcodec/h264.c	4034;"	d	file:
printf	libavcodec/motion-test.c	37;"	d	file:
printf	libavcodec/snow.c	4006;"	d	file:
printf	libavfilter/libmpcodecs/mp_image.h	25;"	d
printf	libavfilter/libmpcodecs/mp_image.h	35;"	d
printf	libavformat/timefilter.c	82;"	d	file:
printf	libavutil/avstring.c	139;"	d	file:
printf	libavutil/base64.c	104;"	d	file:
printf	libavutil/cpu.c	44;"	d	file:
printf	libavutil/crc.c	139;"	d	file:
printf	libavutil/des.c	329;"	d	file:
printf	libavutil/eval.c	578;"	d	file:
printf	libavutil/file.c	134;"	d	file:
printf	libavutil/internal.h	151;"	d
printf	libavutil/internal.h	152;"	d
printf	libavutil/mathematics.c	159;"	d	file:
printf	libavutil/md5.c	167;"	d	file:
printf	libavutil/opt.c	587;"	d	file:
printf	libavutil/parseutils.c	653;"	d	file:
printf	libavutil/pca.c	166;"	d	file:
printf	libavutil/sha.c	328;"	d	file:
printf	libavutil/softfloat.c	28;"	d	file:
printf	tests/seek_test.c	31;"	d	file:
printval	libavcodec/cos_tablegen.c	/^static void printval(double val, int fixed)$/;"	f	file:
priv	libavcodec/avcodec.h	/^    void  *priv;$/;"	m	struct:AVPacket
priv	libavfilter/avfilter.h	/^    void *priv;                     \/\/\/< private data for use by the filter$/;"	m	struct:AVFilterContext
priv	libavfilter/avfilter.h	/^    void *priv;$/;"	m	struct:AVFilterBuffer
priv	libavfilter/libmpcodecs/mp_image.h	/^    void* priv;$/;"	m	struct:mp_image
priv	libavfilter/libmpcodecs/vf.h	/^    struct vf_priv_s* priv;$/;"	m	struct:vf_instance	typeref:struct:vf_instance::vf_priv_s
priv	libavfilter/vf_libopencv.c	/^    void *priv;$/;"	m	struct:__anon13	file:
priv_class	libavcodec/avcodec.h	/^    const AVClass *priv_class;              \/\/\/< AVClass for the private context$/;"	m	struct:AVCodec
priv_class	libavformat/avformat.h	/^    const AVClass *priv_class; \/\/\/< AVClass for the private context$/;"	m	struct:AVInputFormat
priv_class	libavformat/avformat.h	/^    const AVClass *priv_class; \/\/\/< AVClass for the private context$/;"	m	struct:AVOutputFormat
priv_data	libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVBitStreamFilterContext
priv_data	libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVCodecContext
priv_data	libavcodec/avcodec.h	/^    void *priv_data;$/;"	m	struct:AVCodecParserContext
priv_data	libavdevice/dshow.h	/^    void *priv_data;$/;"	m	struct:libAVFilter
priv_data	libavformat/avformat.h	/^    void *priv_data;$/;"	m	struct:AVFormatContext
priv_data	libavformat/avformat.h	/^    void *priv_data;$/;"	m	struct:AVStream
priv_data	libavformat/avio.h	/^    void *priv_data;$/;"	m	struct:URLContext
priv_data	libavformat/url.h	/^    void *priv_data;$/;"	m	struct:URLContext
priv_data_class	libavformat/avio.h	/^    const AVClass *priv_data_class;$/;"	m	struct:URLProtocol
priv_data_class	libavformat/url.h	/^    const AVClass *priv_data_class;$/;"	m	struct:URLProtocol
priv_data_size	libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVBitStreamFilter
priv_data_size	libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVCodec
priv_data_size	libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVCodecParser
priv_data_size	libavcodec/avcodec.h	/^    int priv_data_size;$/;"	m	struct:AVHWAccel
priv_data_size	libavformat/avformat.h	/^    int priv_data_size;$/;"	m	struct:AVInputFormat
priv_data_size	libavformat/avformat.h	/^    int priv_data_size;$/;"	m	struct:AVOutputFormat
priv_data_size	libavformat/avio.h	/^    int priv_data_size;$/;"	m	struct:URLProtocol
priv_data_size	libavformat/url.h	/^    int priv_data_size;$/;"	m	struct:URLProtocol
priv_size	libavfilter/avfilter.h	/^    int priv_size;      \/\/\/< size of private data to allocate for the filter$/;"	m	struct:AVFilter
priv_size	libavfilter/vf_libopencv.c	/^    size_t priv_size;$/;"	m	struct:__anon16	file:
prng	libavcodec/amrwbdec.c	/^    AVLFG                                   prng; \/\/\/< random number generator for white noise excitation$/;"	m	struct:__anon64	file:
prob	libavcodec/lagarithrac.h	/^    uint32_t prob[258];         \/*!< Table of cumulative probability for each symbol. *\/$/;"	m	struct:lag_rac
prob	libavcodec/vp8.h	/^    } prob[2];$/;"	m	struct:__anon182	typeref:struct:__anon182::__anon187
prob_idx	libavcodec/vp56data.h	/^  int8_t prob_idx;$/;"	m	struct:__anon148
probation	libavformat/rtpdec.h	/^    int probation;              \/\/\/< sequence packets till source is valid$/;"	m	struct:__anon333
probe	libavformat/anm.c	/^static int probe(AVProbeData *p)$/;"	f	file:
probe	libavformat/assdec.c	/^static int probe(AVProbeData *p)$/;"	f	file:
probe	libavformat/bink.c	/^static int probe(AVProbeData *p)$/;"	f	file:
probe	libavformat/c93.c	/^static int probe(AVProbeData *p)$/;"	f	file:
probe	libavformat/cafdec.c	/^static int probe(AVProbeData *p)$/;"	f	file:
probe	libavformat/ffmetadec.c	/^static int probe(AVProbeData *p)$/;"	f	file:
probe	libavformat/iv8.c	/^static int probe(AVProbeData *p)$/;"	f	file:
probe	libavformat/ivfdec.c	/^static int probe(AVProbeData *p)$/;"	f	file:
probe	libavformat/mm.c	/^static int probe(AVProbeData *p)$/;"	f	file:
probe	tools/probetest.c	/^static void probe(AVProbeData *pd, int type, int p, int size)$/;"	f	file:
probe_data	libavformat/avformat.h	/^    AVProbeData probe_data;$/;"	m	struct:AVStream
probe_file	ffprobe.c	/^static int probe_file(const char *filename)$/;"	f	file:
probe_packets	libavformat/avformat.h	/^    int probe_packets;$/;"	m	struct:AVStream
probe_packets	libavformat/seek.h	/^    int                     probe_packets;$/;"	m	struct:AVParserStreamState
probesize	libavformat/avformat.h	/^    unsigned int probesize;$/;"	m	struct:AVFormatContext
process	libavfilter/libmpcodecs/vf_eq.c	/^static void (*process)(unsigned char *dest, int dstride, unsigned char *src, int sstride,$/;"	v	file:
process	libavfilter/libmpcodecs/vf_hue.c	/^static void (*process)(uint8_t *udst, uint8_t *vdst, uint8_t *usrc, uint8_t *vsrc, int dststride, int srcstride,$/;"	v	file:
process_C	libavfilter/libmpcodecs/vf_eq.c	/^static void process_C(unsigned char *dest, int dstride, unsigned char *src, int sstride,$/;"	f	file:
process_C	libavfilter/libmpcodecs/vf_hue.c	/^static void process_C(uint8_t *udst, uint8_t *vdst, uint8_t *usrc, uint8_t *vsrc, int dststride, int srcstride,$/;"	f	file:
process_MMX	libavfilter/libmpcodecs/vf_eq.c	/^static void process_MMX(unsigned char *dest, int dstride, unsigned char *src, int sstride,$/;"	f	file:
process_audio_header_eacs	libavformat/electronicarts.c	/^static int process_audio_header_eacs(AVFormatContext *s)$/;"	f	file:
process_audio_header_elements	libavformat/electronicarts.c	/^static int process_audio_header_elements(AVFormatContext *s)$/;"	f	file:
process_audio_header_sead	libavformat/electronicarts.c	/^static int process_audio_header_sead(AVFormatContext *s)$/;"	f	file:
process_callback	libavdevice/jack_audio.c	/^static int process_callback(jack_nframes_t nframes, void *arg)$/;"	f	file:
process_ea_header	libavformat/electronicarts.c	/^static int process_ea_header(AVFormatContext *s) {$/;"	f	file:
process_exponents	libavcodec/ac3enc.c	/^static void process_exponents(AC3EncodeContext *s)$/;"	f	file:
process_ipmovie_chunk	libavformat/ipmovie.c	/^static int process_ipmovie_chunk(IPMVEContext *s, AVIOContext *pb,$/;"	f	file:
process_line	libavformat/http.c	/^static int process_line(URLContext *h, char *line, int line_count,$/;"	f	file:
process_subpacket_10	libavcodec/qdm2.c	/^static void process_subpacket_10 (QDM2Context *q, QDM2SubPNode *node, int length)$/;"	f	file:
process_subpacket_11	libavcodec/qdm2.c	/^static void process_subpacket_11 (QDM2Context *q, QDM2SubPNode *node, int length)$/;"	f	file:
process_subpacket_12	libavcodec/qdm2.c	/^static void process_subpacket_12 (QDM2Context *q, QDM2SubPNode *node, int length)$/;"	f	file:
process_subpacket_9	libavcodec/qdm2.c	/^static void process_subpacket_9 (QDM2Context *q, QDM2SubPNode *node)$/;"	f	file:
process_synthesis_subpackets	libavcodec/qdm2.c	/^static void process_synthesis_subpackets (QDM2Context *q, QDM2SubPNode *list)$/;"	f	file:
process_video_header_mdec	libavformat/electronicarts.c	/^static int process_video_header_mdec(AVFormatContext *s)$/;"	f	file:
process_video_header_vp6	libavformat/electronicarts.c	/^static int process_video_header_vp6(AVFormatContext *s)$/;"	f	file:
prof_report	libavcodec/bfin/dsputil_bfin.h	/^static void prof_report (void)$/;"	f
profile	libavcodec/avcodec.h	/^     int profile;$/;"	m	struct:AVCodecContext
profile	libavcodec/avcodec.h	/^    int profile;$/;"	m	struct:AVProfile
profile	libavcodec/cavs.h	/^    int profile, level;$/;"	m	struct:__anon207
profile	libavcodec/dca.c	/^    int profile;$/;"	m	struct:__anon93	file:
profile	libavcodec/libx264.c	/^    char *profile;$/;"	m	struct:X264Context	file:
profile	libavcodec/vc1.h	/^    int profile;          \/\/\/< 2bits, Profile$/;"	m	struct:VC1Context
profile	libavcodec/vp8.h	/^    uint8_t profile;$/;"	m	struct:__anon182
profile_idc	libavcodec/h264.h	/^    int profile_idc;$/;"	m	struct:SPS
profile_idc	libavformat/rtpdec_h264.c	/^    uint8_t profile_idc;        \/\/\/< from the sdp setup parameters.$/;"	m	struct:PayloadContext	file:
profile_iop	libavformat/rtpdec_h264.c	/^    uint8_t profile_iop;        \/\/\/< from the sdp setup parameters.$/;"	m	struct:PayloadContext	file:
profile_level_id	libavformat/rtpdec_mpeg4.c	/^    int profile_level_id;$/;"	m	struct:PayloadContext	file:
profiles	libavcodec/avcodec.h	/^    const AVProfile *profiles;              \/\/\/< array of recognized profiles, or NULL if unknown, array is terminated by {FF_PROFILE_UNKNOWN}$/;"	m	struct:AVCodec
profiles	libavcodec/dca.c	/^static const AVProfile profiles[] = {$/;"	v	file:
profiles	libavcodec/h264.c	/^static const AVProfile profiles[] = {$/;"	v	file:
profiles	libavcodec/libfaac.c	/^static const AVProfile profiles[] = {$/;"	v	file:
profiles	libavcodec/vc1dec.c	/^static const AVProfile profiles[] = {$/;"	v	file:
prog_ref_level	libavcodec/aac.h	/^    int prog_ref_level;                             \/**< A reference level for the long-term program audio level for all$/;"	m	struct:__anon241
program_birth_year	ffmpeg.c	/^const int program_birth_year = 2000;$/;"	v
program_birth_year	ffmpeg/ffmpeg.c	/^const int program_birth_year = 2000;$/;"	v
program_birth_year	ffplay.c	/^const int program_birth_year = 2003;$/;"	v
program_birth_year	ffprobe.c	/^const int program_birth_year = 2007;$/;"	v
program_birth_year	ffserver.c	/^const int program_birth_year = 2000;$/;"	v
program_name	ffmpeg.c	/^const char program_name[] = "ffmpeg";$/;"	v
program_name	ffmpeg/ffmpeg.c	/^const char program_name[] = "ffmpeg";$/;"	v
program_name	ffplay.c	/^const char program_name[] = "ffplay";$/;"	v
program_name	ffprobe.c	/^const char program_name[] = "ffprobe";$/;"	v
program_name	ffserver.c	/^const char program_name[] = "ffserver";$/;"	v
program_num	libavformat/avformat.h	/^    int program_num;$/;"	m	struct:AVProgram
programs	libavformat/avformat.h	/^    AVProgram **programs;$/;"	m	struct:AVFormatContext
progress	libavcodec/pthread.c	/^    int     progress[MAX_BUFFERS][2];$/;"	m	struct:PerThreadContext	file:
progress_cond	libavcodec/pthread.c	/^    pthread_cond_t progress_cond;   \/\/\/< Used by child threads to wait for progress to change.$/;"	m	struct:PerThreadContext	file:
progress_mutex	libavcodec/pthread.c	/^    pthread_mutex_t progress_mutex; \/\/\/< Mutex used to protect frame progress values and progress_cond.$/;"	m	struct:PerThreadContext	file:
progress_used	libavcodec/pthread.c	/^    uint8_t progress_used[MAX_BUFFERS];$/;"	m	struct:PerThreadContext	file:
progressive	libavcodec/cavs.h	/^    int progressive;$/;"	m	struct:__anon207
progressive	libavcodec/mjpegdec.h	/^    int progressive;$/;"	m	struct:MJpegDecodeContext
progressive_frame	libavcodec/mpegvideo.h	/^    int progressive_frame;$/;"	m	struct:MpegEncContext
progressive_sequence	libavcodec/mpegvideo.h	/^    int progressive_sequence;$/;"	m	struct:MpegEncContext
progressive_sequence	libavcodec/parser.h	/^    int progressive_sequence;$/;"	m	struct:ParseContext1
properties	libavcodec/j2kdec.c	/^    uint8_t properties[4];$/;"	m	struct:__anon98	file:
properties	libavcodec/j2kdec.c	/^   uint8_t properties[4];$/;"	m	struct:__anon97	file:
prot	libavformat/avio.h	/^    struct URLProtocol *prot;$/;"	m	struct:URLContext	typeref:struct:URLContext::URLProtocol
prot	libavformat/url.h	/^    struct URLProtocol *prot;$/;"	m	struct:URLContext	typeref:struct:URLContext::URLProtocol
protocol	ffserver.c	/^    char protocol[16];$/;"	m	struct:HTTPContext	file:
provider_name	libavformat/mpegtsenc.c	/^    char *provider_name;$/;"	m	struct:MpegTSService	file:
ps	libavcodec/mpeg4audio.h	/^    int ps;  \/\/< -1 implicit, 1 presence$/;"	m	struct:__anon208
ps	libavcodec/sbr.h	/^    PSContext          ps;$/;"	m	struct:__anon57
ps_cos16_1	libavcodec/x86/fft_mmx.asm	/^ps_cos16_1: dd 1.0, M_COS_PI_1_8, M_SQRT1_2, M_COS_PI_3_8, 1.0, M_COS_PI_1_8, M_SQRT1_2, M_COS_PI_3_8$/;"	d
ps_cos16_2	libavcodec/x86/fft_mmx.asm	/^ps_cos16_2: dd 0, M_COS_PI_3_8, M_SQRT1_2, M_COS_PI_1_8, 0, -M_COS_PI_3_8, -M_SQRT1_2, -M_COS_PI_1_8$/;"	d
ps_cos_vec	libavcodec/x86/dct32_sse.asm	/^ps_cos_vec: dd   0.500603,  0.505471,  0.515447,  0.531043$/;"	d
ps_m1m1p1m1p1m1m1m1	libavcodec/x86/fft_mmx.asm	/^ps_m1m1p1m1p1m1m1m1: dd 1<<31, 1<<31, 0, 1<<31, 0, 1<<31, 1<<31, 1<<31$/;"	d
ps_m1p1	libavcodec/x86/fft_mmx.asm	/^ps_m1p1: dd 1<<31, 0$/;"	d
ps_p1p1m1m1	libavcodec/x86/dct32_sse.asm	/^ps_p1p1m1m1: dd 0, 0, 0x80000000, 0x80000000, 0, 0, 0x80000000, 0x80000000$/;"	d
ps_p1p1m1p1	libavcodec/x86/fft_mmx.asm	/^ps_p1p1m1p1: dd 0, 0, 1<<31, 0, 0, 0, 1<<31, 0$/;"	d
ps_p1p1m1p1root2	libavcodec/x86/fft_mmx.asm	/^ps_p1p1m1p1root2: dd 1.0, 1.0, -1.0, 1.0, M_SQRT1_2, M_SQRT1_2, M_SQRT1_2, M_SQRT1_2$/;"	d
ps_read_extension_data	libavcodec/aacps.c	/^static int ps_read_extension_data(GetBitContext *gb, PSContext *ps, int ps_extension_id)$/;"	f	file:
ps_root2	libavcodec/x86/fft_mmx.asm	/^ps_root2: times 8 dd M_SQRT1_2$/;"	l
ps_root2mppm	libavcodec/x86/fft_mmx.asm	/^ps_root2mppm: dd -M_SQRT1_2, M_SQRT1_2, M_SQRT1_2, -M_SQRT1_2, -M_SQRT1_2, M_SQRT1_2, M_SQRT1_2, -M_SQRT1_2$/;"	d
ps_tableinit	libavcodec/aacps_tablegen.h	/^static void ps_tableinit(void)$/;"	f
ps_tableinit	libavcodec/aacps_tablegen.h	29;"	d
psd	libavcodec/ac3dec.h	/^    int16_t psd[AC3_MAX_CHANNELS][AC3_MAX_COEFS];   \/\/\/< scaled exponents$/;"	m	struct:__anon88
psd	libavcodec/ac3enc.h	/^    int16_t  **psd;                             \/\/\/< psd per frequency bin$/;"	m	struct:AC3Block
psd_buffer	libavcodec/ac3enc.h	/^    int16_t *psd_buffer;$/;"	m	struct:AC3EncodeContext
pseudo_stream_id	libavformat/isom.h	/^    int pseudo_stream_id; \/\/\/< -1 means demux all ids$/;"	m	struct:MOVStreamContext
psf	libavcodec/vc1.h	/^    int psf;              \/\/\/< Progressive Segmented Frame$/;"	m	struct:VC1Context
psize	libavformat/oggdec.h	/^    unsigned int psize;$/;"	m	struct:ogg_stream
psm_es_type	libavformat/mpeg.c	/^    unsigned char psm_es_type[256];$/;"	m	struct:MpegDemuxContext	file:
psnr	ffmpeg.c	/^static double psnr(double d){$/;"	f	file:
psnr	ffmpeg/ffmpeg.c	/^static double psnr(double d){$/;"	f	file:
psrah	libavcodec/ps2/mmi.h	162;"	d
psraw	libavcodec/ps2/mmi.h	132;"	d
pstart	libavformat/oggdec.h	/^    unsigned int pstart;$/;"	m	struct:ogg_stream
pstride	libavcodec/zmbvenc.c	/^    int pstride;$/;"	m	struct:ZmbvEncContext	file:
psubh	libavcodec/ps2/mmi.h	159;"	d
psubw	libavcodec/ps2/mmi.h	129;"	d
psy	libavcodec/aacenc.h	/^    FFPsyContext psy;$/;"	m	struct:AACEncContext
psy_3gpp_analyze	libavcodec/aacpsy.c	/^static void psy_3gpp_analyze(FFPsyContext *ctx, int channel,$/;"	f	file:
psy_3gpp_end	libavcodec/aacpsy.c	/^static av_cold void psy_3gpp_end(FFPsyContext *apc)$/;"	f	file:
psy_3gpp_init	libavcodec/aacpsy.c	/^static av_cold int psy_3gpp_init(FFPsyContext *ctx) {$/;"	f	file:
psy_3gpp_window	libavcodec/aacpsy.c	/^static FFPsyWindowInfo psy_3gpp_window(FFPsyContext *ctx,$/;"	f	file:
psy_abr_map	libavcodec/aacpsy.c	/^static const PsyLamePreset psy_abr_map[] = {$/;"	v	file:
psy_bands	libavcodec/psymodel.h	/^    FFPsyBand *psy_bands;             \/\/\/< frame bands information$/;"	m	struct:FFPsyContext
psy_coef	libavcodec/aacpsy.c	/^    AacPsyCoeffs psy_coef[2][64];$/;"	m	struct:AacPsyContext	file:
psy_fir_coeffs	libavcodec/aacpsy.c	/^static const float psy_fir_coeffs[] = {$/;"	v	file:
psy_lame_window	libavcodec/aacpsy.c	/^static FFPsyWindowInfo psy_lame_window(FFPsyContext *ctx,$/;"	f	file:
psy_rd	libavcodec/avcodec.h	/^    float psy_rd;$/;"	m	struct:AVCodecContext
psy_trellis	libavcodec/avcodec.h	/^    float psy_trellis;$/;"	m	struct:AVCodecContext
psy_vbr_map	libavcodec/aacpsy.c	/^static const PsyLamePreset psy_vbr_map[] = {$/;"	v	file:
psycho_acoustic_model	libavcodec/mpegaudioenc.c	/^static void psycho_acoustic_model(MpegAudioContext *s, short smr[SBLIMIT])$/;"	f	file:
psypp	libavcodec/aacenc.h	/^    struct FFPsyPreprocessContext* psypp;$/;"	m	struct:AACEncContext	typeref:struct:AACEncContext::FFPsyPreprocessContext
pt	libavformat/anm.c	/^    Page pt[MAX_PAGES];       \/**< page table *\/$/;"	m	struct:__anon435	file:
pt	libavformat/rtp.c	/^    int pt;$/;"	m	struct:__anon392	file:
ptns_to_read	libavcodec/vorbisdec.c	/^    uint16_t      ptns_to_read;$/;"	m	struct:__anon260	file:
ptr	libavcodec/apedec.c	/^    const uint8_t *ptr;                      \/\/\/< current position in frame data$/;"	m	struct:APEContext	file:
ptr	libavcodec/srtenc.c	/^    char *ptr;$/;"	m	struct:__anon139	file:
ptr_lastgob	libavcodec/mpegvideo.h	/^    uint8_t *ptr_lastgob;$/;"	m	struct:MpegEncContext
pts	ffmpeg.c	/^    int64_t       pts;       \/* current pts *\/$/;"	m	struct:AVInputStream	file:
pts	ffmpeg/ffmpeg.c	/^    int64_t       pts;       \/* current pts *\/$/;"	m	struct:AVInputStream	file:
pts	ffplay.c	/^    double pts;                                  \/\/\/<presentation time stamp for this picture$/;"	m	struct:VideoPicture	file:
pts	ffplay.c	/^    double pts; \/* presentation time stamp for this picture *\/$/;"	m	struct:SubPicture	file:
pts	libavcodec/avcodec.h	/^    int64_t pts;     \/* pts of the current frame *\/$/;"	m	struct:AVCodecParserContext
pts	libavcodec/avcodec.h	/^    int64_t pts;    \/\/\/< Same as packet pts, in AV_TIME_BASE$/;"	m	struct:AVSubtitle
pts	libavcodec/avcodec.h	/^    int64_t pts;$/;"	m	struct:AVPacket
pts	libavcodec/libvpxenc.c	/^    int64_t pts;                     \/**< time stamp to show frame$/;"	m	struct:FrameListData	file:
pts	libavcodec/rv34.h	/^    int pts;               \/\/\/< frame timestamp$/;"	m	struct:SliceInfo
pts	libavfilter/avfilter.h	/^    int64_t pts;$/;"	m	struct:AVFilterBufferRef
pts	libavfilter/vf_frei0r.c	/^    uint64_t pts;$/;"	m	struct:Frei0rContext	file:
pts	libavfilter/vsrc_color.c	/^    uint64_t pts;$/;"	m	struct:__anon27	file:
pts	libavformat/ape.c	/^    int64_t pts;$/;"	m	struct:__anon334	file:
pts	libavformat/avformat.h	/^    struct AVFrac pts;$/;"	m	struct:AVStream	typeref:struct:AVStream::AVFrac
pts	libavformat/idcin.c	/^    int64_t pts;$/;"	m	struct:IdcinDemuxContext	file:
pts	libavformat/jvdec.c	/^    int64_t pts;$/;"	m	struct:__anon426	file:
pts	libavformat/matroskaenc.c	/^    uint64_t        pts;$/;"	m	struct:__anon476	file:
pts	libavformat/mpegenc.c	/^    int64_t pts;$/;"	m	struct:PacketDesc	file:
pts	libavformat/mpegts.c	/^    int64_t pts, dts;$/;"	m	struct:PESContext	file:
pts	libavformat/segafilm.c	/^  int64_t pts;$/;"	m	struct:__anon328	file:
pts	libavformat/sierravmd.c	/^  int64_t pts;$/;"	m	struct:__anon349	file:
pts	libavformat/smacker.c	/^    int64_t pts;$/;"	m	struct:SmackerFrame	file:
pts	libavformat/wc3movie.c	/^    int64_t pts;$/;"	m	struct:Wc3DemuxContext	file:
pts	libavformat/wtvdec.c	/^    int64_t pts;             \/** pts for next data chunk *\/$/;"	m	struct:__anon323	file:
pts_buffer	libavformat/avformat.h	/^    int64_t pts_buffer[MAX_REORDER_DELAY+1];$/;"	m	struct:AVStream
pts_correction_last_dts	libavcodec/avcodec.h	/^    int64_t pts_correction_last_dts;       \/\/\/ DTS of the last frame$/;"	m	struct:AVCodecContext
pts_correction_last_pts	libavcodec/avcodec.h	/^    int64_t pts_correction_last_pts;       \/\/\/ PTS of the last frame$/;"	m	struct:AVCodecContext
pts_correction_num_faulty_dts	libavcodec/avcodec.h	/^    int64_t pts_correction_num_faulty_dts; \/\/\/ Number of incorrect DTS values so far$/;"	m	struct:AVCodecContext
pts_correction_num_faulty_pts	libavcodec/avcodec.h	/^    int64_t pts_correction_num_faulty_pts; \/\/\/ Number of incorrect PTS values so far$/;"	m	struct:AVCodecContext
pts_delta	libavformat/nut.h	/^    int16_t  pts_delta;$/;"	m	struct:__anon491
pts_dts_delta	libavcodec/avcodec.h	/^    int pts_dts_delta;$/;"	m	struct:AVCodecParserContext
pts_inc	libavformat/smacker.c	/^    int      pts_inc;$/;"	m	struct:SmackerContext	file:
pts_stream_index	ffserver.c	/^    int pts_stream_index;        \/* stream we choose as clock reference *\/$/;"	m	struct:HTTPContext	file:
pts_wrap_bits	libavformat/avformat.h	/^    int pts_wrap_bits; \/**< number of bits in pts (used for wrapping control) *\/$/;"	m	struct:AVStream
ptx_decode_frame	libavcodec/ptx.c	/^static int ptx_decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
ptx_end	libavcodec/ptx.c	/^static av_cold int ptx_end(AVCodecContext *avctx) {$/;"	f	file:
ptx_init	libavcodec/ptx.c	/^static av_cold int ptx_init(AVCodecContext *avctx) {$/;"	f	file:
ptype2mb_type	libavcodec/mpeg12decdata.h	/^static const uint32_t ptype2mb_type[7] = {$/;"	v
ptype_vlc	libavcodec/rv40.c	/^static VLC ptype_vlc[NUM_PTYPE_VLCS], btype_vlc[NUM_BTYPE_VLCS];$/;"	v	file:
ptype_vlc_bits	libavcodec/rv40vlc2.h	/^static const uint8_t ptype_vlc_bits[NUM_PTYPE_VLCS][PTYPE_VLC_SIZE] = {$/;"	v
ptype_vlc_codes	libavcodec/rv40vlc2.h	/^static const uint8_t ptype_vlc_codes[NUM_PTYPE_VLCS][PTYPE_VLC_SIZE] = {$/;"	v
ptype_vlc_syms	libavcodec/rv40vlc2.h	/^static const uint8_t ptype_vlc_syms[PTYPE_VLC_SIZE] = {$/;"	v
pu_field_type_t	libavfilter/libmpcodecs/vf_filmdint.c	/^enum pu_field_type_t {$/;"	g	file:
pu_type	libavcodec/dirac_parser.c	/^    uint8_t pu_type;$/;"	m	struct:DiracParseUnit	file:
pul_ih	libavcodec/amrwbdata.h	/^    uint16_t pul_ih[4];                    \/\/\/< MSBs part of codebook index (high modes only)$/;"	m	struct:__anon110
pul_il	libavcodec/amrwbdata.h	/^    uint16_t pul_il[4];                    \/\/\/< LSBs part of codebook index$/;"	m	struct:__anon110
pullup_alloc_context	libavfilter/libmpcodecs/pullup.c	/^struct pullup_context *pullup_alloc_context(void)$/;"	f
pullup_buffer	libavfilter/libmpcodecs/pullup.h	/^struct pullup_buffer$/;"	s
pullup_context	libavfilter/libmpcodecs/pullup.h	/^struct pullup_context$/;"	s
pullup_field	libavfilter/libmpcodecs/pullup.h	/^struct pullup_field$/;"	s
pullup_flush_fields	libavfilter/libmpcodecs/pullup.c	/^void pullup_flush_fields(struct pullup_context *c)$/;"	f
pullup_frame	libavfilter/libmpcodecs/pullup.h	/^struct pullup_frame$/;"	s
pullup_free_context	libavfilter/libmpcodecs/pullup.c	/^void pullup_free_context(struct pullup_context *c)$/;"	f
pullup_get_buffer	libavfilter/libmpcodecs/pullup.c	/^struct pullup_buffer *pullup_get_buffer(struct pullup_context *c, int parity)$/;"	f
pullup_get_frame	libavfilter/libmpcodecs/pullup.c	/^struct pullup_frame *pullup_get_frame(struct pullup_context *c)$/;"	f
pullup_init_context	libavfilter/libmpcodecs/pullup.c	/^void pullup_init_context(struct pullup_context *c)$/;"	f
pullup_lock_buffer	libavfilter/libmpcodecs/pullup.c	/^struct pullup_buffer *pullup_lock_buffer(struct pullup_buffer *b, int parity)$/;"	f
pullup_pack_frame	libavfilter/libmpcodecs/pullup.c	/^void pullup_pack_frame(struct pullup_context *c, struct pullup_frame *fr)$/;"	f
pullup_preinit_context	libavfilter/libmpcodecs/pullup.c	/^void pullup_preinit_context(struct pullup_context *c)$/;"	f
pullup_release_buffer	libavfilter/libmpcodecs/pullup.c	/^void pullup_release_buffer(struct pullup_buffer *b, int parity)$/;"	f
pullup_release_frame	libavfilter/libmpcodecs/pullup.c	/^void pullup_release_frame(struct pullup_frame *fr)$/;"	f
pullup_submit_field	libavfilter/libmpcodecs/pullup.c	/^void pullup_submit_field(struct pullup_context *c, struct pullup_buffer *b, int parity)$/;"	f
pulse	libavcodec/aac.h	/^    Pulse pulse;$/;"	m	struct:__anon244
pulseoff	libavcodec/truespeech.c	/^    int pulseoff[4];    \/\/< 4-bit offset of pulse values block$/;"	m	struct:__anon160	file:
pulsepos	libavcodec/truespeech.c	/^    int pulsepos[4];    \/\/< 27-bit variable, encodes 7 pulse positions$/;"	m	struct:__anon160	file:
pulses	libavcodec/amrnbdata.h	/^    uint16_t pulses[10]; \/\/\/< pulses: 10 for MODE_12k2, 7 for MODE_10k2, and index and sign for others$/;"	m	struct:__anon283
pulses_nb_per_mode	libavcodec/amrnbdata.h	/^static const uint8_t pulses_nb_per_mode[] = {2, 2, 2, 3, 4, 4, 8, 10};$/;"	v
pulses_nb_per_mode_tr	libavcodec/amrwbdata.h	/^static const uint8_t pulses_nb_per_mode_tr[][4] = {$/;"	v
pulseval	libavcodec/truespeech.c	/^    int pulseval[4];    \/\/< 7x2-bit pulse values$/;"	m	struct:__anon160	file:
pushvar	configure	/^pushvar(){$/;"	f
put	libavcodec/sh4/dsputil_align.c	50;"	d	file:
put16	libavformat/mpegtsenc.c	/^static inline void put16(uint8_t **q_ptr, int val)$/;"	f	file:
putDescr	libavformat/movenc.c	/^static void putDescr(AVIOContext *pb, int tag, unsigned int size)$/;"	f	file:
put_2tap_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func put_2tap_qpel_pixels_tab[4][16];$/;"	m	struct:DSPContext
put_amf_bool	libavformat/flvenc.c	/^static void put_amf_bool(AVIOContext *pb, int b) {$/;"	f	file:
put_amf_double	libavformat/flvenc.c	/^static void put_amf_double(AVIOContext *pb, double d)$/;"	f	file:
put_amf_string	libavformat/flvenc.c	/^static void put_amf_string(AVIOContext *pb, const char *str)$/;"	f	file:
put_au_header	libavformat/au.c	/^static int put_au_header(AVIOContext *pb, AVCodecContext *enc)$/;"	f	file:
put_audio_specific_config	libavcodec/aacenc.c	/^static void put_audio_specific_config(AVCodecContext *avctx)$/;"	f	file:
put_avc_eos_tag	libavformat/flvenc.c	/^static void put_avc_eos_tag(AVIOContext *pb, unsigned ts) {$/;"	f	file:
put_bits	libavcodec/j2kenc.c	/^static void put_bits(J2kEncoderContext *s, int val, int n) \/\/ TODO: optimize$/;"	f	file:
put_bits	libavcodec/lzwenc.c	/^    void (*put_bits)(PutBitContext *, int, unsigned); \/\/\/< GIF is LE while TIFF is BE$/;"	m	struct:LZWEncodeState	file:
put_bits	libavcodec/put_bits.h	/^static inline void put_bits(PutBitContext *s, int n, unsigned int value)$/;"	f
put_bits32	libavcodec/put_bits.h	/^static void av_unused put_bits32(PutBitContext *s, uint32_t value)$/;"	f
put_bits_count	libavcodec/put_bits.h	/^static inline int put_bits_count(PutBitContext *s)$/;"	f
put_bits_left	libavcodec/dv.c	/^static inline int put_bits_left(PutBitContext* s)$/;"	f	file:
put_bits_ptr	libavcodec/put_bits.h	/^static inline uint8_t* put_bits_ptr(PutBitContext *s)$/;"	f
put_bitstream_info	libavcodec/aacenc.c	/^static void put_bitstream_info(AVCodecContext *avctx, AACEncContext *s,$/;"	f	file:
put_buffer	libavformat/aviobuf.c	/^void put_buffer(AVIOContext *s, const unsigned char *buf, int size)$/;"	f
put_byte	libavformat/aviobuf.c	/^void put_byte(AVIOContext *s, int val)$/;"	f
put_cabac	libavcodec/cabac.h	/^static void put_cabac(CABACContext *c, uint8_t * const state, int bit){$/;"	f
put_cabac_bit	libavcodec/cabac.h	/^static inline void put_cabac_bit(CABACContext *c, int b){$/;"	f
put_cabac_bypass	libavcodec/cabac.h	/^static void put_cabac_bypass(CABACContext *c, int bit){$/;"	f
put_cabac_static	libavcodec/cabac.h	/^static void put_cabac_static(CABACContext *c, int RangeLPS, int bit){$/;"	f
put_cabac_terminate	libavcodec/cabac.h	/^static int put_cabac_terminate(CABACContext *c, int bit){$/;"	f
put_cabac_u	libavcodec/cabac.h	/^static void put_cabac_u(CABACContext *c, uint8_t * state, int v, int max, int max_index, int truncated){$/;"	f
put_cabac_ueg	libavcodec/cabac.h	/^static void put_cabac_ueg(CABACContext *c, uint8_t * state, int v, int max, int is_signed, int k, int max_index){$/;"	f
put_cavs_qpel_pixels_tab	libavcodec/cavsdsp.h	/^    qpel_mc_func put_cavs_qpel_pixels_tab[2][16];$/;"	m	struct:CAVSDSPContext
put_chunk	libavformat/asfenc.c	/^static void put_chunk(AVFormatContext *s, int type, int payload_length, int flags)$/;"	f	file:
put_cod	libavcodec/j2kenc.c	/^static int put_cod(J2kEncoderContext *s)$/;"	f	file:
put_codebook_header	libavcodec/vorbisenc.c	/^static void put_codebook_header(PutBitContext *pb, vorbis_enc_codebook *cb)$/;"	f	file:
put_codeword	libavcodec/vorbisenc.c	/^static inline void put_codeword(PutBitContext *pb, vorbis_enc_codebook *cb,$/;"	f	file:
put_cursor	libavcodec/vmnc.c	/^static void put_cursor(uint8_t *dst, int stride, VmncContext *c, int dx, int dy)$/;"	f	file:
put_dc	libavcodec/error_resilience.c	/^static void put_dc(MpegEncContext *s, uint8_t *dest_y, uint8_t *dest_cb, uint8_t *dest_cr, int mb_x, int mb_y)$/;"	f	file:
put_dct	libavcodec/mpegvideo.c	/^static inline void put_dct(MpegEncContext *s,$/;"	f	file:
put_ebml_binary	libavformat/matroskaenc.c	/^static void put_ebml_binary(AVIOContext *pb, unsigned int elementid,$/;"	f	file:
put_ebml_float	libavformat/matroskaenc.c	/^static void put_ebml_float(AVIOContext *pb, unsigned int elementid, double val)$/;"	f	file:
put_ebml_id	libavformat/matroskaenc.c	/^static void put_ebml_id(AVIOContext *pb, unsigned int id)$/;"	f	file:
put_ebml_num	libavformat/matroskaenc.c	/^static void put_ebml_num(AVIOContext *pb, uint64_t num, int bytes)$/;"	f	file:
put_ebml_size_unknown	libavformat/matroskaenc.c	/^static void put_ebml_size_unknown(AVIOContext *pb, int bytes)$/;"	f	file:
put_ebml_string	libavformat/matroskaenc.c	/^static void put_ebml_string(AVIOContext *pb, unsigned int elementid, const char *str)$/;"	f	file:
put_ebml_uint	libavformat/matroskaenc.c	/^static void put_ebml_uint(AVIOContext *pb, unsigned int elementid, uint64_t val)$/;"	f	file:
put_ebml_void	libavformat/matroskaenc.c	/^static void put_ebml_void(AVIOContext *pb, uint64_t size)$/;"	f	file:
put_float	libavcodec/vorbisenc.c	/^static void put_float(PutBitContext *pb, float f)$/;"	f	file:
put_floor_header	libavcodec/vorbisenc.c	/^static void put_floor_header(PutBitContext *pb, vorbis_enc_floor *fc)$/;"	f	file:
put_flush_packet	libavformat/aviobuf.c	/^void put_flush_packet(AVIOContext *s)$/;"	f
put_frame	libavcodec/dcaenc.c	/^static void put_frame(DCAContext *c,$/;"	f	file:
put_frame	libavformat/asfenc.c	/^static void put_frame($/;"	f	file:
put_frame_header	libavcodec/dcaenc.c	/^static void put_frame_header(DCAContext *c)$/;"	f	file:
put_guid	libavformat/asfenc.c	/^static void put_guid(AVIOContext *s, const ff_asf_guid *g)$/;"	f	file:
put_h264_chroma_pixels_tab	libavcodec/dsputil.h	/^    h264_chroma_mc_func put_h264_chroma_pixels_tab[3];$/;"	m	struct:DSPContext
put_h264_qpel16_h_lowpass_l2_sse2	libavcodec/x86/h264_qpel_mmx.c	1022;"	d	file:
put_h264_qpel16_mc00_8_c	libavcodec/dsputil_template.c	1353;"	d	file:
put_h264_qpel16_mc00_sse2	libavcodec/x86/h264_qpel_mmx.c	/^static void put_h264_qpel16_mc00_sse2 (uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_h264_qpel16_v_lowpass_ssse3	libavcodec/x86/h264_qpel_mmx.c	1027;"	d	file:
put_h264_qpel8_h_lowpass_l2_sse2	libavcodec/x86/h264_qpel_mmx.c	1020;"	d	file:
put_h264_qpel8_mc00_8_c	libavcodec/dsputil_template.c	1351;"	d	file:
put_h264_qpel8_mc00_sse2	libavcodec/x86/h264_qpel_mmx.c	1045;"	d	file:
put_h264_qpel8_v_lowpass_ssse3	libavcodec/x86/h264_qpel_mmx.c	1025;"	d	file:
put_h264_qpel8or16_hv1_lowpass_sse2	libavcodec/x86/h264_qpel_mmx.c	/^static av_always_inline void put_h264_qpel8or16_hv1_lowpass_sse2(int16_t *tmp, uint8_t *src, int tmpStride, int srcStride, int size){$/;"	f	file:
put_h264_qpel8or16_hv2_lowpass_sse2	libavcodec/x86/h264_qpel_mmx.c	1030;"	d	file:
put_h264_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func put_h264_qpel_pixels_tab[4][16];$/;"	m	struct:DSPContext
put_header	libavcodec/mpeg12enc.c	/^static void put_header(MpegEncContext *s, int header)$/;"	f	file:
put_header	libavformat/asfenc.c	/^static int64_t put_header(AVIOContext *pb, const ff_asf_guid *g)$/;"	f	file:
put_huffman_table	libavcodec/mjpegenc.c	/^static int put_huffman_table(MpegEncContext *s, int table_class, int table_id,$/;"	f	file:
put_ics_info	libavcodec/aacenc.c	/^static void put_ics_info(AACEncContext *s, IndividualChannelStream *info)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf.h	/^    int (*put_image)(struct vf_instance *vf,$/;"	m	struct:vf_instance
put_image	libavfilter/libmpcodecs/vf_2xsai.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_blackframe.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_boxblur.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_cropdetect.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_decimate.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_delogo.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_denoise3d.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_detc.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_dint.c	/^static int put_image (struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_divtc.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_down3dright.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_eq.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_eq2.c	/^int put_image (vf_instance_t *vf, mp_image_t *src, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_field.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_fil.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_filmdint.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_fixpts.c	/^static int put_image(vf_instance_t *vf, mp_image_t *src, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_framestep.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_fspp.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_geq.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_gradfun.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_harddup.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_hqdn3d.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_hue.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_il.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_ilpack.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_ivtc.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_kerndeint.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_mirror.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_noise.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_ow.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_palette.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_perspective.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_phase.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_pp7.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_pullup.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_qp.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_rectangle.c	/^put_image(struct vf_instance *vf, mp_image_t* mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_remove_logo.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_rgbtest.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_rotate.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_sab.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_screenshot.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_smartblur.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_softpulldown.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_softskip.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_spp.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_swapuv.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_telecine.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_test.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_tile.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_tinterlace.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts)$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_unsharp.c	/^static int put_image( struct vf_instance *vf, mp_image_t *mpi, double pts) {$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_uspp.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_yuvcsp.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_image	libavfilter/libmpcodecs/vf_yvu9.c	/^static int put_image(struct vf_instance *vf, mp_image_t *mpi, double pts){$/;"	f	file:
put_line	libavcodec/faxcompr.c	/^static void put_line(uint8_t *dst, int size, int width, const int *runs)$/;"	f	file:
put_main_header	libavcodec/vorbisenc.c	/^static int put_main_header(vorbis_enc_context *venc, uint8_t **out)$/;"	f	file:
put_marker	libavcodec/mjpeg.h	/^static inline void put_marker(PutBitContext *p, int code)$/;"	f
put_mb_modes	libavcodec/mpeg12enc.c	/^static inline void put_mb_modes(MpegEncContext *s, int n, int bits,$/;"	f	file:
put_mspel8_mc00_sh4	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc00_sh4 (uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc02_c	libavcodec/dsputil.c	/^static void put_mspel8_mc02_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc02_sh4	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc02_sh4(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc10_c	libavcodec/dsputil.c	/^static void put_mspel8_mc10_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc10_sh4	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc10_sh4(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc12_c	libavcodec/dsputil.c	/^static void put_mspel8_mc12_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc12_sh4	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc12_sh4(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc20_c	libavcodec/dsputil.c	/^static void put_mspel8_mc20_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc20_sh4	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc20_sh4(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc22_c	libavcodec/dsputil.c	/^static void put_mspel8_mc22_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc22_sh4	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc22_sh4(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc30_c	libavcodec/dsputil.c	/^static void put_mspel8_mc30_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc30_sh4	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc30_sh4(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc32_c	libavcodec/dsputil.c	/^static void put_mspel8_mc32_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel8_mc32_sh4	libavcodec/sh4/qpel.c	/^static void put_mspel8_mc32_sh4(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_mspel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func put_mspel_pixels_tab[8];$/;"	m	struct:DSPContext
put_nbyte	libavformat/aviobuf.c	/^void put_nbyte(AVIOContext *s, int b, int count)$/;"	f
put_no_rnd_pixels16_3dnow	libavcodec/x86/dsputil_mmx.c	229;"	d	file:
put_no_rnd_pixels16_c	libavcodec/dsputil_template.c	761;"	d	file:
put_no_rnd_pixels16_c	libavcodec/sh4/dsputil_align.c	322;"	d	file:
put_no_rnd_pixels16_l2	libavcodec/dsputil_template.c	/^static void FUNCC(put_no_rnd_pixels16_l2)(uint8_t *dst, const uint8_t *a, const uint8_t *b, int stride, int h){$/;"	f	file:
put_no_rnd_pixels16_l2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_no_rnd_pixels16_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f	file:
put_no_rnd_pixels16_mmx	libavcodec/x86/dsputil_mmx.c	219;"	d	file:
put_no_rnd_pixels16_mmx2	libavcodec/x86/dsputil_mmx.c	224;"	d	file:
put_no_rnd_pixels16_o	libavcodec/sh4/dsputil_align.c	313;"	d	file:
put_no_rnd_pixels16_x2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_no_rnd_pixels16_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f	file:
put_no_rnd_pixels16_xy2_altivec	libavcodec/ppc/dsputil_altivec.c	/^static void put_no_rnd_pixels16_xy2_altivec(uint8_t * block, const uint8_t * pixels, int line_size, int h)$/;"	f	file:
put_no_rnd_pixels16_y2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_no_rnd_pixels16_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f	file:
put_no_rnd_pixels8_3dnow	libavcodec/x86/dsputil_mmx.c	230;"	d	file:
put_no_rnd_pixels8_c	libavcodec/dsputil_template.c	760;"	d	file:
put_no_rnd_pixels8_c	libavcodec/sh4/dsputil_align.c	321;"	d	file:
put_no_rnd_pixels8_l2	libavcodec/dsputil_template.c	/^static void FUNCC(put_no_rnd_pixels8_l2)(uint8_t *dst, const uint8_t *a, const uint8_t *b, int stride, int h){$/;"	f	file:
put_no_rnd_pixels8_l2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_no_rnd_pixels8_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f	file:
put_no_rnd_pixels8_mmx	libavcodec/x86/dsputil_mmx.c	220;"	d	file:
put_no_rnd_pixels8_mmx2	libavcodec/x86/dsputil_mmx.c	225;"	d	file:
put_no_rnd_pixels8_o	libavcodec/sh4/dsputil_align.c	312;"	d	file:
put_no_rnd_pixels8_x2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_no_rnd_pixels8_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_no_rnd_pixels8_x2_exact	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_no_rnd_pixels8_x2_exact)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_no_rnd_pixels8_xy2_altivec	libavcodec/ppc/dsputil_altivec.c	/^static void put_no_rnd_pixels8_xy2_altivec(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_no_rnd_pixels8_y2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_no_rnd_pixels8_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_no_rnd_pixels8_y2_exact	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_no_rnd_pixels8_y2_exact)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_no_rnd_pixels8_y2_iwmmxt	libavcodec/arm/dsputil_iwmmxt.c	/^void put_no_rnd_pixels8_y2_iwmmxt(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
put_no_rnd_pixels_l2	libavcodec/dsputil.h	/^    void (*put_no_rnd_pixels_l2[2])(uint8_t *block\/*align width (8 or 16)*\/, const uint8_t *a\/*align 1*\/, const uint8_t *b\/*align 1*\/, int line_size, int h);$/;"	m	struct:DSPContext
put_no_rnd_pixels_tab	libavcodec/dsputil.h	/^    op_pixels_func put_no_rnd_pixels_tab[4][4];$/;"	m	struct:DSPContext
put_no_rnd_qpel16_mc00_c	libavcodec/dsputil.c	1338;"	d	file:
put_no_rnd_qpel8_mc00_c	libavcodec/dsputil.c	1337;"	d	file:
put_no_rnd_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func put_no_rnd_qpel_pixels_tab[2][16];$/;"	m	struct:DSPContext
put_no_rnd_vc1_chroma_mc8_c	libavcodec/vc1dsp.c	/^static void put_no_rnd_vc1_chroma_mc8_c(uint8_t *dst\/*align 8*\/, uint8_t *src\/*align 1*\/, int stride, int h, int x, int y){$/;"	f	file:
put_no_rnd_vc1_chroma_pixels_tab	libavcodec/vc1dsp.h	/^    h264_chroma_mc_func put_no_rnd_vc1_chroma_pixels_tab[3];$/;"	m	struct:VC1DSPContext
put_num	libavcodec/j2kenc.c	/^static void put_num(J2kEncoderContext *s, int num, int n)$/;"	f	file:
put_obmc	libavcodec/mpegvideo_common.h	/^static inline void put_obmc(uint8_t *dst, uint8_t *src[5], int stride){$/;"	f
put_pack_header	libavformat/mpegenc.c	/^static int put_pack_header(AVFormatContext *ctx,$/;"	f	file:
put_packet	libavformat/nutenc.c	/^static void put_packet(NUTContext *nut, AVIOContext *bc, AVIOContext *dyn_bc, int calculate_checksum, uint64_t startcode){$/;"	f	file:
put_padding_packet	libavformat/mpegenc.c	/^static void put_padding_packet(AVFormatContext *ctx, AVIOContext *pb,int packet_bytes)$/;"	f	file:
put_payload_header	libavformat/asfenc.c	/^static void put_payload_header($/;"	f	file:
put_payload_parsing_info	libavformat/asfenc.c	/^static int put_payload_parsing_info($/;"	f	file:
put_pixel	libavfilter/libmpcodecs/vf_rgbtest.c	/^static void put_pixel(uint8_t *buf, int x, int y, int stride, int r, int g, int b, int fmt){$/;"	f	file:
put_pixel	tests/rotozoom.c	/^static void put_pixel(int x, int y, int r, int g, int b)$/;"	f	file:
put_pixel	tests/videogen.c	/^static void put_pixel(int x, int y, int r, int g, int b)$/;"	f	file:
put_pixels16_3dnow	libavcodec/x86/dsputil_mmx.c	226;"	d	file:
put_pixels16_altivec	libavcodec/ppc/dsputil_altivec.c	/^void put_pixels16_altivec(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f
put_pixels16_axp_asm	libavcodec/alpha/dsputil_alpha.c	/^static void put_pixels16_axp_asm(uint8_t *block, const uint8_t *pixels,$/;"	f	file:
put_pixels16_c	libavcodec/sh4/dsputil_align.c	318;"	d	file:
put_pixels16_l2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_pixels16_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f	file:
put_pixels16_l2_altivec	libavcodec/ppc/h264_altivec.c	/^static inline void put_pixels16_l2_altivec( uint8_t * dst, const uint8_t * src1,$/;"	f	file:
put_pixels16_l2_shift5_sse2	libavcodec/x86/h264_qpel_mmx.c	1013;"	d	file:
put_pixels16_l2_shift5_ssse3	libavcodec/x86/h264_qpel_mmx.c	1017;"	d	file:
put_pixels16_l2_sse2	libavcodec/x86/h264_qpel_mmx.c	1004;"	d	file:
put_pixels16_l2_ssse3	libavcodec/x86/h264_qpel_mmx.c	1008;"	d	file:
put_pixels16_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels16_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels16_mmi	libavcodec/ps2/dsputil_mmi.c	/^static void put_pixels16_mmi(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels16_mmx	libavcodec/x86/dsputil_mmx.c	/^static void put_pixels16_mmx(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels16_mmx2	libavcodec/x86/dsputil_mmx.c	221;"	d	file:
put_pixels16_sse2	libavcodec/x86/dsputil_mmx.c	/^static void put_pixels16_sse2(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels16_x2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_pixels16_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels16_x2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels16_x2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels16_xy2_altivec	libavcodec/ppc/dsputil_altivec.c	/^static void put_pixels16_xy2_altivec(uint8_t * block, const uint8_t * pixels, int line_size, int h)$/;"	f	file:
put_pixels16_xy2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels16_xy2_mlib(uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels16_y2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_pixels16_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h){$/;"	f	file:
put_pixels16_y2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels16_y2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels4_3dnow	libavcodec/x86/dsputil_mmx.c	228;"	d	file:
put_pixels4_c	libavcodec/sh4/dsputil_align.c	/^static void put_pixels4_c(uint8_t *dest,const uint8_t *ref, const int stride,int height)$/;"	f	file:
put_pixels4_l2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_pixels4_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f	file:
put_pixels4_mmx	libavcodec/x86/dsputil_mmx.c	/^static void put_pixels4_mmx(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels4_mmx2	libavcodec/x86/dsputil_mmx.c	223;"	d	file:
put_pixels8_3dnow	libavcodec/x86/dsputil_mmx.c	227;"	d	file:
put_pixels8_c	libavcodec/sh4/dsputil_align.c	317;"	d	file:
put_pixels8_l2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_pixels8_l2)(uint8_t *dst, uint8_t *src1, uint8_t *src2, int dstStride, int src1Stride, int h)$/;"	f	file:
put_pixels8_l2_shift5_sse2	libavcodec/x86/h264_qpel_mmx.c	1011;"	d	file:
put_pixels8_l2_shift5_ssse3	libavcodec/x86/h264_qpel_mmx.c	1015;"	d	file:
put_pixels8_l2_sse2	libavcodec/x86/h264_qpel_mmx.c	1002;"	d	file:
put_pixels8_l2_ssse3	libavcodec/x86/h264_qpel_mmx.c	1006;"	d	file:
put_pixels8_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels8_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels8_mmi	libavcodec/ps2/dsputil_mmi.c	/^static void put_pixels8_mmi(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels8_mmx	libavcodec/x86/dsputil_mmx.c	/^static void put_pixels8_mmx(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels8_mmx2	libavcodec/x86/dsputil_mmx.c	222;"	d	file:
put_pixels8_x2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_pixels8_x2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels8_x2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels8_x2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels8_xy2_altivec	libavcodec/ppc/dsputil_altivec.c	/^static void put_pixels8_xy2_altivec(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels8_xy2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels8_xy2_mlib(uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels8_y2	libavcodec/x86/dsputil_mmx_avg_template.c	/^static void DEF(put_pixels8_y2)(uint8_t *block, const uint8_t *pixels, int line_size, int h)$/;"	f	file:
put_pixels8_y2_iwmmxt	libavcodec/arm/dsputil_iwmmxt.c	/^void put_pixels8_y2_iwmmxt(uint8_t *block, const uint8_t *pixels, const int line_size, int h)$/;"	f
put_pixels8_y2_mlib	libavcodec/mlib/dsputil_mlib.c	/^static void put_pixels8_y2_mlib (uint8_t * dest, const uint8_t * ref,$/;"	f	file:
put_pixels8x8_overlapped	libavcodec/bink.c	/^static inline void put_pixels8x8_overlapped(uint8_t *dst, uint8_t *src, int stride)$/;"	f	file:
put_pixels_axp_asm	libavcodec/alpha/dsputil_alpha_asm.S	/^put_pixels_axp_asm:$/;"	l
put_pixels_clamped	libavcodec/dsputil.h	/^    void (*put_pixels_clamped)(const DCTELEM *block\/*align 16*\/, uint8_t *pixels\/*align 8*\/, int line_size);$/;"	m	struct:DSPContext
put_pixels_clamped2_c	libavcodec/dsputil.c	/^static void put_pixels_clamped2_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f	file:
put_pixels_clamped4_c	libavcodec/dsputil.c	/^static void put_pixels_clamped4_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f	file:
put_pixels_clamped_axp_p	libavcodec/alpha/dsputil_alpha.c	/^void (*put_pixels_clamped_axp_p)(const DCTELEM *block, uint8_t *pixels,$/;"	v
put_pixels_clamped_mvi_asm	libavcodec/alpha/dsputil_alpha_asm.S	/^put_pixels_clamped_mvi_asm:$/;"	l
put_pixels_nonclamped	libavcodec/dsputil.h	/^    void (*put_pixels_nonclamped)(const DCTELEM *block\/*align 16*\/, uint8_t *pixels\/*align 8*\/, int line_size);$/;"	m	struct:DSPContext
put_pixels_nonclamped_c	libavcodec/dsputil.c	/^static void put_pixels_nonclamped_c(const DCTELEM *block, uint8_t *restrict pixels,$/;"	f	file:
put_pixels_tab	libavcodec/dsputil.h	/^    op_pixels_func put_pixels_tab[4][4];$/;"	m	struct:DSPContext
put_pixels_tab	libavcodec/vp8.h	/^    vp8_mc_func put_pixels_tab[3][3][3];$/;"	m	struct:__anon182
put_primary_audio_header	libavcodec/dcaenc.c	/^static void put_primary_audio_header(DCAContext *c)$/;"	f	file:
put_qcd	libavcodec/j2kenc.c	/^static int put_qcd(J2kEncoderContext *s, int compno)$/;"	f	file:
put_qpel16_mc00_c	libavcodec/dsputil.c	1335;"	d	file:
put_qpel8_mc00_c	libavcodec/dsputil.c	1333;"	d	file:
put_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func put_qpel_pixels_tab[2][16];$/;"	m	struct:DSPContext
put_qscale	libavcodec/mpeg12enc.c	/^static av_always_inline void put_qscale(MpegEncContext *s)$/;"	f	file:
put_rac	libavcodec/ffv1.c	354;"	d	file:
put_rac	libavcodec/ffv1.c	395;"	d	file:
put_rac	libavcodec/rangecoder.h	/^static inline void put_rac(RangeCoder *c, uint8_t * const state, int bit){$/;"	f
put_residue_header	libavcodec/vorbisenc.c	/^static void put_residue_header(PutBitContext *pb, vorbis_enc_residue *rc)$/;"	f	file:
put_rv30_tpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func put_rv30_tpel_pixels_tab[4][16];$/;"	m	struct:DSPContext
put_rv40_chroma_pixels_tab	libavcodec/dsputil.h	/^    h264_chroma_mc_func put_rv40_chroma_pixels_tab[3];$/;"	m	struct:DSPContext
put_rv40_qpel16_mc33_c	libavcodec/dsputil.c	/^static void put_rv40_qpel16_mc33_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_rv40_qpel8_mc33_c	libavcodec/dsputil.c	/^static void put_rv40_qpel8_mc33_c(uint8_t *dst, uint8_t *src, int stride){$/;"	f	file:
put_rv40_qpel_pixels_tab	libavcodec/dsputil.h	/^    qpel_mc_func put_rv40_qpel_pixels_tab[4][16];$/;"	m	struct:DSPContext
put_s	libavformat/nutenc.c	/^static void put_s(AVIOContext *bc, int64_t val){$/;"	f	file:
put_s	libavformat/nutenc.c	279;"	d	file:
put_s_trace	libavformat/nutenc.c	/^static inline void put_s_trace(AVIOContext *bc, int64_t v, char *file, char *func, int line){$/;"	f	file:
put_sample	tests/audiogen.c	/^static void put_sample(int v)$/;"	f	file:
put_sample7	libavcodec/dcaenc.c	/^static inline void put_sample7(DCAContext *c, int64_t sample, int bits,$/;"	f	file:
put_sbits	libavcodec/put_bits.h	/^static inline void put_sbits(PutBitContext *pb, int n, int32_t value)$/;"	f
put_signed_pixels_clamped	libavcodec/dsputil.h	/^    void (*put_signed_pixels_clamped)(const DCTELEM *block\/*align 16*\/, uint8_t *pixels\/*align 8*\/, int line_size);$/;"	m	struct:DSPContext
put_signed_pixels_clamped_mmx_half	libavcodec/x86/dsputil_mmx.c	290;"	d	file:
put_siz	libavcodec/j2kenc.c	/^static int put_siz(J2kEncoderContext *s)$/;"	f	file:
put_sot	libavcodec/j2kenc.c	/^static uint8_t *put_sot(J2kEncoderContext *s, int tileno)$/;"	f	file:
put_str	libavformat/nutenc.c	/^static void put_str(AVIOContext *bc, const char *string){$/;"	f	file:
put_str	libavformat/rmenc.c	/^static void put_str(AVIOContext *s, const char *tag)$/;"	f	file:
put_str16	libavformat/asfenc.c	/^static void put_str16(AVIOContext *s, const char *tag)$/;"	f	file:
put_str8	libavformat/rmenc.c	/^static void put_str8(AVIOContext *s, const char *tag)$/;"	f	file:
put_strz	libavformat/aviobuf.c	/^void put_strz(AVIOContext *s, const char *str)$/;"	f
put_subframe	libavcodec/dcaenc.c	/^static void put_subframe(DCAContext *c,$/;"	f	file:
put_swf_end_tag	libavformat/swfenc.c	/^static void put_swf_end_tag(AVFormatContext *s)$/;"	f	file:
put_swf_line_edge	libavformat/swfenc.c	/^static void put_swf_line_edge(PutBitContext *pb, int dx, int dy)$/;"	f	file:
put_swf_matrix	libavformat/swfenc.c	/^static void put_swf_matrix(AVIOContext *pb,$/;"	f	file:
put_swf_rect	libavformat/swfenc.c	/^static void put_swf_rect(AVIOContext *pb,$/;"	f	file:
put_swf_tag	libavformat/swfenc.c	/^static void put_swf_tag(AVFormatContext *s, int tag)$/;"	f	file:
put_symbol	libavcodec/ffv1.c	/^static void av_noinline put_symbol(RangeCoder *c, uint8_t *state, int v, int is_signed){$/;"	f	file:
put_symbol	libavcodec/snow.c	/^static inline void put_symbol(RangeCoder *c, uint8_t *state, int v, int is_signed){$/;"	f	file:
put_symbol2	libavcodec/snow.c	/^static inline void put_symbol2(RangeCoder *c, uint8_t *state, int v, int log2){$/;"	f	file:
put_symbol_inline	libavcodec/ffv1.c	/^static av_always_inline av_flatten void put_symbol_inline(RangeCoder *c, uint8_t *state, int v, int is_signed, uint64_t rc_stat[256][2], uint64_t rc_stat2[32][2]){$/;"	f	file:
put_system_header	libavformat/mpegenc.c	/^static int put_system_header(AVFormatContext *ctx, uint8_t *buf,int only_for_stream_id)$/;"	f	file:
put_tag	libavformat/aviobuf.c	/^void put_tag(AVIOContext *s, const char *tag)$/;"	f
put_timestamp	libavformat/mpegenc.c	/^static inline void put_timestamp(AVIOContext *pb, int id, int64_t timestamp)$/;"	f	file:
put_tpel_pixels_mc00_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc00_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc01_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc01_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc02_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc02_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc10_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc10_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc11_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc11_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc12_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc12_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc20_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc20_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc21_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc21_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_mc22_c	libavcodec/dsputil.c	/^static inline void put_tpel_pixels_mc22_c(uint8_t *dst, const uint8_t *src, int stride, int width, int height){$/;"	f	file:
put_tpel_pixels_tab	libavcodec/dsputil.h	/^    tpel_mc_func put_tpel_pixels_tab[11]; \/\/FIXME individual func ptr per width?$/;"	m	struct:DSPContext
put_tt	libavformat/nutenc.c	/^static void put_tt(NUTContext *nut, AVRational *time_base, AVIOContext *bc, uint64_t val){$/;"	f	file:
put_varlength	libavformat/mmf.c	/^static void put_varlength(AVIOContext *pb, int val)$/;"	f	file:
put_vc1_mspel_pixels_tab	libavcodec/vc1dsp.h	/^    op_pixels_func put_vc1_mspel_pixels_tab[16];$/;"	m	struct:VC1DSPContext
put_vcd_padding_sector	libavformat/mpegenc.c	/^static void put_vcd_padding_sector(AVFormatContext *ctx)$/;"	f	file:
put_vector	libavcodec/vorbisenc.c	/^static float *put_vector(vorbis_enc_codebook *book, PutBitContext *pb,$/;"	f	file:
put_vlc_symbol	libavcodec/ffv1.c	/^static inline void put_vlc_symbol(PutBitContext *pb, VlcState * const state, int v, int bits){$/;"	f	file:
put_vp8_bilinear_pixels_tab	libavcodec/vp8dsp.h	/^    vp8_mc_func put_vp8_bilinear_pixels_tab[3][3][3];$/;"	m	struct:VP8DSPContext
put_vp8_epel_h_altivec_core	libavcodec/ppc/vp8dsp_altivec.c	/^void put_vp8_epel_h_altivec_core(uint8_t *dst, int dst_stride,$/;"	f	file:
put_vp8_epel_pixels_tab	libavcodec/vp8dsp.h	/^    vp8_mc_func put_vp8_epel_pixels_tab[3][3][3];$/;"	m	struct:VP8DSPContext
put_vp8_epel_v_altivec_core	libavcodec/ppc/vp8dsp_altivec.c	/^void put_vp8_epel_v_altivec_core(uint8_t *dst, int dst_stride,$/;"	f	file:
put_vp8_pixels16_altivec	libavcodec/ppc/vp8dsp_altivec.c	/^static void put_vp8_pixels16_altivec(uint8_t *dst, int stride, uint8_t *src, int s, int h, int mx, int my)$/;"	f	file:
put_xiph_codecpriv	libavformat/matroskaenc.c	/^static int put_xiph_codecpriv(AVFormatContext *s, AVIOContext *pb, AVCodecContext *codec)$/;"	f	file:
put_xiph_size	libavformat/matroskaenc.c	/^static void put_xiph_size(AVIOContext *pb, int size)$/;"	f	file:
put_xsub_rle	libavcodec/xsubenc.c	/^static void put_xsub_rle(PutBitContext *pb, int len, int color)$/;"	f	file:
putb64	tests/base64.c	34;"	d	file:
putnumpasses	libavcodec/j2kenc.c	/^static void putnumpasses(J2kEncoderContext *s, int n)$/;"	f	file:
puts	libavutil/internal.h	155;"	d
puts	libavutil/internal.h	156;"	d
putstr8	libavformat/mpegtsenc.c	/^static void putstr8(uint8_t **q_ptr, const char *str)$/;"	f	file:
pv	libavcodec/alpha/regdef.h	60;"	d
pv	libavfilter/libmpcodecs/vf_perspective.c	/^    int32_t (*pv)[2];$/;"	m	struct:vf_priv_s	file:
pvStride	libavfilter/libmpcodecs/vf_perspective.c	/^    int pvStride;$/;"	m	struct:vf_priv_s	file:
pva_log	libavformat/pva.c	66;"	d	file:
pva_probe	libavformat/pva.c	/^static int pva_probe(AVProbeData * pd) {$/;"	f	file:
pva_read_header	libavformat/pva.c	/^static int pva_read_header(AVFormatContext *s, AVFormatParameters *ap) {$/;"	f	file:
pva_read_packet	libavformat/pva.c	/^static int pva_read_packet(AVFormatContext *s, AVPacket *pkt) {$/;"	f	file:
pva_read_timestamp	libavformat/pva.c	/^static int64_t pva_read_timestamp(struct AVFormatContext *s, int stream_index,$/;"	f	file:
pw_0to7	libavcodec/x86/h264_intrapred.asm	/^pw_0to7:     dw  0,  1,  2,  3,  4,  5,  6,  7$/;"	d
pw_17734	libavcodec/x86/vp8dsp.asm	/^pw_17734: times 4 dw 17734$/;"	l
pw_1to8	libavcodec/x86/h264_intrapred.asm	/^pw_1to8:     dw  1,  2,  3,  4,  5,  6,  7,  8$/;"	d
pw_20091	libavcodec/x86/vp8dsp.asm	/^pw_20091: times 4 dw 20091$/;"	l
pw_7f	libavfilter/libmpcodecs/vf_gradfun.c	/^static const uint16_t __attribute__((aligned(16))) pw_7f[8] = {127,127,127,127,127,127,127,127};$/;"	v	file:
pw_bap_mul1	libavcodec/x86/ac3dsp.asm	/^pw_bap_mul1: dw 21846, 21846, 0, 32768, 21846, 21846, 0, 32768$/;"	d
pw_bap_mul2	libavcodec/x86/ac3dsp.asm	/^pw_bap_mul2: dw 5, 7, 0, 7, 5, 7, 0, 7$/;"	d
pw_ff	libavfilter/libmpcodecs/vf_gradfun.c	/^static const uint16_t __attribute__((aligned(16))) pw_ff[8] = {255,255,255,255,255,255,255,255};$/;"	v	file:
pw_ff00	libavcodec/x86/h264_intrapred.asm	/^pw_ff00: times 8 dw 0xff00$/;"	l
pw_m4to4	libavcodec/x86/h264_intrapred.asm	/^pw_m4to4:    dw -4, -3, -2, -1,  1,  2,  3,  4$/;"	d
pw_m8tom1	libavcodec/x86/h264_intrapred.asm	/^pw_m8tom1:   dw -8, -7, -6, -5, -4, -3, -2, -1$/;"	d
pw_pixel_max	libavcodec/x86/h264_deblock_10bit.asm	/^pw_pixel_max: times 8 dw ((1 << 10)-1)$/;"	l
pw_pixel_max	libavcodec/x86/h264_idct_10bit.asm	/^pw_pixel_max: times 8 dw ((1 << 10)-1)$/;"	l
q	libavutil/opt.h	/^        AVRational q;$/;"	m	union:AVOption::__anon304
q1_vlc	libavcodec/mpc8.c	/^static VLC q1_vlc, q2_vlc[2], q3_vlc[2], quant_vlc[4][2], q9up_vlc;$/;"	v	file:
q2_vlc	libavcodec/mpc8.c	/^static VLC q1_vlc, q2_vlc[2], q3_vlc[2], quant_vlc[4][2], q9up_vlc;$/;"	v	file:
q3_offsets	libavcodec/mpc8.c	/^static const int q3_offsets[2] = { MPC8_Q3_OFFSET, MPC8_Q4_OFFSET };$/;"	v	file:
q3_vlc	libavcodec/mpc8.c	/^static VLC q1_vlc, q2_vlc[2], q3_vlc[2], quant_vlc[4][2], q9up_vlc;$/;"	v	file:
q9up_vlc	libavcodec/mpc8.c	/^static VLC q1_vlc, q2_vlc[2], q3_vlc[2], quant_vlc[4][2], q9up_vlc;$/;"	v	file:
q_delta	libavcodec/ivi_common.h	/^    int8_t      q_delta;  \/\/\/< quant delta$/;"	m	struct:__anon105
q_inter_matrix	libavcodec/mpegvideo.h	/^    int (*q_inter_matrix)[64];$/;"	m	struct:MpegEncContext
q_inter_matrix16	libavcodec/mpegvideo.h	/^    uint16_t (*q_inter_matrix16)[2][64];$/;"	m	struct:MpegEncContext
q_intra_matrix	libavcodec/asv1.c	/^    int q_intra_matrix[64];$/;"	m	struct:ASV1Context	file:
q_intra_matrix	libavcodec/mpegvideo.h	/^    int (*q_intra_matrix)[64];$/;"	m	struct:MpegEncContext
q_intra_matrix16	libavcodec/mpegvideo.h	/^    uint16_t (*q_intra_matrix16)[2][64];$/;"	m	struct:MpegEncContext
q_m	libavcodec/sbr.h	/^    float              q_m[7][48];$/;"	m	struct:__anon57
q_mapped	libavcodec/sbr.h	/^    float              q_mapped[7][48];$/;"	m	struct:__anon57
q_pressed	ffmpeg.c	/^static int q_pressed = 0;$/;"	v	file:
q_pressed	ffmpeg/ffmpeg.c	/^static int q_pressed = 0;$/;"	v	file:
q_scale_type	libavcodec/mpegvideo.h	/^    int q_scale_type;$/;"	m	struct:MpegEncContext
q_temp	libavcodec/sbr.h	/^    float              q_temp[42][48];$/;"	m	struct:__anon56
qbias	libavcodec/snow.c	/^    int qbias;$/;"	m	struct:SnowContext	file:
qblur	libavcodec/avcodec.h	/^    float qblur;      \/\/\/< amount of qscale smoothing over time (0.0-1.0)$/;"	m	struct:AVCodecContext
qbpp	libavcodec/jpegls.h	/^    int limit, reset, bpp, qbpp, maxval, range;$/;"	m	struct:JLSState
qbuf	libavfilter/libmpcodecs/vf_pullup.c	/^    char *qbuf;$/;"	m	struct:vf_priv_s	file:
qcelp_decode_frame	libavcodec/qcelpdec.c	/^static int qcelp_decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
qcelp_decode_init	libavcodec/qcelpdec.c	/^static av_cold int qcelp_decode_init(AVCodecContext *avctx)$/;"	f	file:
qcelp_free_context	libavformat/rtpdec_qcelp.c	/^static void qcelp_free_context(PayloadContext *data)$/;"	f	file:
qcelp_g12ga	libavcodec/qcelpdata.h	/^static const float qcelp_g12ga[61] = {$/;"	v
qcelp_hammsinc_table	libavcodec/qcelpdata.h	/^static const float qcelp_hammsinc_table[4] = { -0.006822,  0.041249, -0.143459,  0.588863};$/;"	v
qcelp_lspvq	libavcodec/qcelpdata.h	/^static const qcelp_vector * const qcelp_lspvq[5] = {$/;"	v
qcelp_lspvq1	libavcodec/qcelpdata.h	/^static const qcelp_vector qcelp_lspvq1[64]= {$/;"	v
qcelp_lspvq2	libavcodec/qcelpdata.h	/^static const qcelp_vector qcelp_lspvq2[128]= {$/;"	v
qcelp_lspvq3	libavcodec/qcelpdata.h	/^static const qcelp_vector qcelp_lspvq3[128]= {$/;"	v
qcelp_lspvq4	libavcodec/qcelpdata.h	/^static const qcelp_vector qcelp_lspvq4[64]= {$/;"	v
qcelp_lspvq5	libavcodec/qcelpdata.h	/^static const qcelp_vector qcelp_lspvq5[64]= {$/;"	v
qcelp_new_context	libavformat/rtpdec_qcelp.c	/^static PayloadContext *qcelp_new_context(void)$/;"	f	file:
qcelp_packet_rate	libavcodec/qcelpdec.c	/^} qcelp_packet_rate;$/;"	t	typeref:enum:__anon224	file:
qcelp_parse_packet	libavformat/rtpdec_qcelp.c	/^static int qcelp_parse_packet(AVFormatContext *ctx, PayloadContext *data,$/;"	f	file:
qcelp_rate_full_bitmap	libavcodec/qcelpdata.h	/^static const QCELPBitmap qcelp_rate_full_bitmap[] = {$/;"	v
qcelp_rate_full_codebook	libavcodec/qcelpdata.h	/^static const int16_t qcelp_rate_full_codebook[128] = {$/;"	v
qcelp_rate_half_bitmap	libavcodec/qcelpdata.h	/^static const QCELPBitmap qcelp_rate_half_bitmap[] = {$/;"	v
qcelp_rate_half_codebook	libavcodec/qcelpdata.h	/^static const int8_t qcelp_rate_half_codebook[128] = {$/;"	v
qcelp_rate_octave_bitmap	libavcodec/qcelpdata.h	/^static const QCELPBitmap qcelp_rate_octave_bitmap[] = {$/;"	v
qcelp_rate_quarter_bitmap	libavcodec/qcelpdata.h	/^static const QCELPBitmap qcelp_rate_quarter_bitmap[] = {$/;"	v
qcelp_rnd_fir_coefs	libavcodec/qcelpdata.h	/^static const double qcelp_rnd_fir_coefs[11] = {$/;"	v
qcelp_unpacking_bitmaps_lengths	libavcodec/qcelpdata.h	/^static const uint16_t qcelp_unpacking_bitmaps_lengths[5] = {$/;"	v
qcelp_unpacking_bitmaps_per_rate	libavcodec/qcelpdata.h	/^static const QCELPBitmap * const qcelp_unpacking_bitmaps_per_rate[5] = {$/;"	v
qcelp_vector	libavcodec/qcelpdata.h	/^typedef uint16_t qcelp_vector[2];$/;"	t
qcolorMask	libavfilter/libmpcodecs/vf_2xsai.c	/^static uint32_t qcolorMask = 0xE79CE79C;$/;"	v	file:
qcompress	libavcodec/avcodec.h	/^    float qcompress;  \/\/\/< amount of qscale change between easy & hard scenes (0.0-1.0)$/;"	m	struct:AVCodecContext
qcp_probe	libavformat/qcp.c	/^static int qcp_probe(AVProbeData *pd)$/;"	f	file:
qcp_read_header	libavformat/qcp.c	/^static int qcp_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
qcp_read_packet	libavformat/qcp.c	/^static int qcp_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
qdelta_present	libavcodec/ivi_common.h	/^    int             qdelta_present; \/\/\/< tells if Qdelta signal is present in the bitstream (Indeo5 only)$/;"	m	struct:__anon107
qdm2_calculate_fft	libavcodec/qdm2.c	/^static void qdm2_calculate_fft (QDM2Context *q, int channel, int sub_packet)$/;"	f	file:
qdm2_decode	libavcodec/qdm2.c	/^static int qdm2_decode (QDM2Context *q, const uint8_t *in, int16_t *out)$/;"	f	file:
qdm2_decode_close	libavcodec/qdm2.c	/^static av_cold int qdm2_decode_close(AVCodecContext *avctx)$/;"	f	file:
qdm2_decode_fft_packets	libavcodec/qdm2.c	/^static void qdm2_decode_fft_packets (QDM2Context *q)$/;"	f	file:
qdm2_decode_frame	libavcodec/qdm2.c	/^static int qdm2_decode_frame(AVCodecContext *avctx,$/;"	f	file:
qdm2_decode_init	libavcodec/qdm2.c	/^static av_cold int qdm2_decode_init(AVCodecContext *avctx)$/;"	f	file:
qdm2_decode_sub_packet_header	libavcodec/qdm2.c	/^static void qdm2_decode_sub_packet_header (GetBitContext *gb, QDM2SubPacket *sub_packet)$/;"	f	file:
qdm2_decode_super_block	libavcodec/qdm2.c	/^static void qdm2_decode_super_block (QDM2Context *q)$/;"	f	file:
qdm2_extradata_free	libavformat/rtpdec_qdm2.c	/^static void qdm2_extradata_free(PayloadContext *qdm)$/;"	f	file:
qdm2_extradata_new	libavformat/rtpdec_qdm2.c	/^static PayloadContext *qdm2_extradata_new(void)$/;"	f	file:
qdm2_fft_decode_tones	libavcodec/qdm2.c	/^static void qdm2_fft_decode_tones (QDM2Context *q, int duration, GetBitContext *gb, int b)$/;"	f	file:
qdm2_fft_generate_tone	libavcodec/qdm2.c	/^static void qdm2_fft_generate_tone (QDM2Context *q, FFTTone *tone)$/;"	f	file:
qdm2_fft_init_coefficient	libavcodec/qdm2.c	/^static void qdm2_fft_init_coefficient (QDM2Context *q, int sub_packet,$/;"	f	file:
qdm2_fft_tone_synthesizer	libavcodec/qdm2.c	/^static void qdm2_fft_tone_synthesizer (QDM2Context *q, int sub_packet)$/;"	f	file:
qdm2_get_se_vlc	libavcodec/qdm2.c	/^static int qdm2_get_se_vlc (VLC *vlc, GetBitContext *gb, int depth)$/;"	f	file:
qdm2_get_vlc	libavcodec/qdm2.c	/^static int qdm2_get_vlc (GetBitContext *gb, VLC *vlc, int flag, int depth)$/;"	f	file:
qdm2_init	libavcodec/qdm2.c	/^static av_cold void qdm2_init(QDM2Context *q) {$/;"	f	file:
qdm2_init_vlc	libavcodec/qdm2.c	/^static av_cold void qdm2_init_vlc(void)$/;"	f	file:
qdm2_packet_checksum	libavcodec/qdm2.c	/^static uint16_t qdm2_packet_checksum (const uint8_t *data, int length, int value) {$/;"	f	file:
qdm2_parse_config	libavformat/rtpdec_qdm2.c	/^static int qdm2_parse_config(PayloadContext *qdm, AVStream *st,$/;"	f	file:
qdm2_parse_packet	libavformat/rtpdec_qdm2.c	/^static int qdm2_parse_packet(AVFormatContext *s, PayloadContext *qdm,$/;"	f	file:
qdm2_parse_subpacket	libavformat/rtpdec_qdm2.c	/^static int qdm2_parse_subpacket(PayloadContext *qdm, AVStream *st,$/;"	f	file:
qdm2_restore_block	libavformat/rtpdec_qdm2.c	/^static int qdm2_restore_block(PayloadContext *qdm, AVStream *st, AVPacket *pkt)$/;"	f	file:
qdm2_search_subpacket_type_in_list	libavcodec/qdm2.c	/^static QDM2SubPNode* qdm2_search_subpacket_type_in_list (QDM2SubPNode *list, int type)$/;"	f	file:
qdm2_synthesis_filter	libavcodec/qdm2.c	/^static void qdm2_synthesis_filter (QDM2Context *q, int index)$/;"	f	file:
qdm2_vlc_offs	libavcodec/qdm2.c	/^static const uint16_t qdm2_vlc_offs[] = {$/;"	v	file:
qe	libavcodec/mqc.c	/^        uint16_t qe;$/;"	m	struct:__anon71	file:
qexp	libavcodec/snow.c	/^static uint8_t qexp[QROOT];$/;"	v	file:
qexp	libavcodec/snow.c	501;"	d	file:
qlog	libavcodec/snow.c	/^    int qlog;        \/\/\/< log(qscale)\/log[2^(1\/6)]$/;"	m	struct:SubBand	file:
qlog	libavcodec/snow.c	/^    int qlog;$/;"	m	struct:SnowContext	file:
qlowpixelMask	libavfilter/libmpcodecs/vf_2xsai.c	/^static uint32_t qlowpixelMask = 0x18631863;$/;"	v	file:
qm	libavcodec/dxva2_h264.c	/^    DXVA_Qmatrix_H264     qm;$/;"	m	struct:dxva2_picture_context	file:
qm	libavcodec/dxva2_mpeg2.c	/^    DXVA_QmatrixData       qm;$/;"	m	struct:dxva2_picture_context	file:
qm	libavcodec/tta.c	/^    int32_t qm[MAX_ORDER];$/;"	m	struct:TTAFilter	file:
qmant	libavcodec/ac3enc.h	/^    uint16_t **qmant;                           \/\/\/< quantized mantissas$/;"	m	struct:AC3Block
qmant1_ptr	libavcodec/ac3enc.c	/^    uint16_t *qmant1_ptr, *qmant2_ptr, *qmant4_ptr; \/\/\/< mantissa pointers for bap=1,2,4$/;"	m	struct:AC3Mant	file:
qmant2_ptr	libavcodec/ac3enc.c	/^    uint16_t *qmant1_ptr, *qmant2_ptr, *qmant4_ptr; \/\/\/< mantissa pointers for bap=1,2,4$/;"	m	struct:AC3Mant	file:
qmant4_ptr	libavcodec/ac3enc.c	/^    uint16_t *qmant1_ptr, *qmant2_ptr, *qmant4_ptr; \/\/\/< mantissa pointers for bap=1,2,4$/;"	m	struct:AC3Mant	file:
qmant_buffer	libavcodec/ac3enc.h	/^    uint16_t *qmant_buffer;$/;"	m	struct:AC3EncodeContext
qmat	libavcodec/vp8.h	/^    } qmat[4];$/;"	m	struct:__anon182	typeref:struct:__anon182::__anon185
qmatrix_c	libavcodec/dnxhdenc.h	/^    int      (*qmatrix_c)     [64];$/;"	m	struct:DNXHDEncContext
qmatrix_c16	libavcodec/dnxhdenc.h	/^    uint16_t (*qmatrix_c16)[2][64];$/;"	m	struct:DNXHDEncContext
qmatrix_l	libavcodec/dnxhdenc.h	/^    int      (*qmatrix_l)     [64];$/;"	m	struct:DNXHDEncContext
qmatrix_l16	libavcodec/dnxhdenc.h	/^    uint16_t (*qmatrix_l16)[2][64];$/;"	m	struct:DNXHDEncContext
qmax	libavcodec/avcodec.h	/^    int qmax;$/;"	m	struct:AVCodecContext
qmf_32_subbands	libavcodec/dca.c	/^static void qmf_32_subbands(DCAContext * s, int chans,$/;"	f	file:
qmf_48tap_half	libavcodec/atrac.c	/^static const float qmf_48tap_half[24] = {$/;"	v	file:
qmf_coeffs	libavcodec/g722.c	/^static const int16_t qmf_coeffs[12] = {$/;"	v	file:
qmf_decompose	libavcodec/dcaenc.c	/^static void qmf_decompose(DCAContext *c, int32_t in[32], int32_t out[32],$/;"	f	file:
qmf_init	libavcodec/dcaenc.c	/^static void qmf_init(void)$/;"	f	file:
qmf_window	libavcodec/atrac.c	/^static float qmf_window[48];$/;"	v	file:
qmin	libavcodec/avcodec.h	/^    int qmin;$/;"	m	struct:AVCodecContext
qntsty	libavcodec/j2kdec.c	/^    J2kQuantStyle  qntsty[4];$/;"	m	struct:__anon98	file:
qntsty	libavcodec/j2kdec.c	/^   J2kQuantStyle  qntsty[4];$/;"	m	struct:__anon97	file:
qntsty	libavcodec/j2kenc.c	/^    J2kQuantStyle  qntsty;$/;"	m	struct:__anon63	file:
qop	libavformat/httpauth.h	/^    char qop[30];          \/**< Quality of protection, containing the one$/;"	m	struct:__anon404
qp	libavcodec/cavs.h	/^    int qp;$/;"	m	struct:__anon207
qp	libavfilter/libmpcodecs/vf_fspp.c	/^    int qp;$/;"	m	struct:vf_priv_s	file:
qp	libavfilter/libmpcodecs/vf_mcdeint.c	/^    int qp;$/;"	m	struct:vf_priv_s	file:
qp	libavfilter/libmpcodecs/vf_pp7.c	/^    int qp;$/;"	m	struct:vf_priv_s	file:
qp	libavfilter/libmpcodecs/vf_qp.c	/^        int8_t *qp;$/;"	m	struct:vf_priv_s	file:
qp	libavfilter/libmpcodecs/vf_spp.c	/^        int qp;$/;"	m	struct:vf_priv_s	file:
qp	libavfilter/libmpcodecs/vf_uspp.c	/^    int qp;$/;"	m	struct:vf_priv_s	file:
qp2bits	libavcodec/ratecontrol.c	/^static inline double qp2bits(RateControlEntry *rce, double qp){$/;"	f	file:
qpStride	libpostproc/postprocess_internal.h	/^    int qpStride; \/\/\/<size of qp buffers (needed to realloc them if needed)$/;"	m	struct:PPContext
qp_fixed	libavcodec/cavs.h	/^    int qp_fixed;$/;"	m	struct:__anon207
qp_hist	ffmpeg.c	/^static int qp_hist = 0;$/;"	v	file:
qp_hist	ffmpeg/ffmpeg.c	/^static int qp_hist = 0;$/;"	v	file:
qp_stride	libavfilter/libmpcodecs/vf_qp.c	/^        int qp_stride;$/;"	m	struct:vf_priv_s	file:
qp_thresh	libavcodec/h264.h	/^    int qp_thresh;      \/\/\/< QP threshold to skip loopfilter$/;"	m	struct:H264Context
qpeg_decode_inter	libavcodec/qpeg.c	/^static void qpeg_decode_inter(const uint8_t *src, uint8_t *dst, int size,$/;"	f	file:
qpeg_decode_intra	libavcodec/qpeg.c	/^static void qpeg_decode_intra(const uint8_t *src, uint8_t *dst, int size,$/;"	f	file:
qpeg_table_h	libavcodec/qpeg.c	/^static const int qpeg_table_h[16] =$/;"	v	file:
qpeg_table_w	libavcodec/qpeg.c	/^static const int qpeg_table_w[16] =$/;"	v	file:
qpel_avg	libavcodec/mpegvideo.h	/^    qpel_mc_func (*qpel_avg)[16];$/;"	m	struct:MotionEstContext
qpel_mc_func	libavcodec/dsputil.h	/^typedef void (*qpel_mc_func)(uint8_t *dst\/*align width (8 or 16)*\/, uint8_t *src\/*align 1*\/, int stride);$/;"	t
qpel_motion	libavcodec/mpegvideo_common.h	/^static inline void qpel_motion(MpegEncContext *s,$/;"	f
qpel_motion_search	libavcodec/motion_est_template.c	/^static int qpel_motion_search(MpegEncContext * s,$/;"	f	file:
qpel_put	libavcodec/mpegvideo.h	/^    qpel_mc_func (*qpel_put)[16];$/;"	m	struct:MotionEstContext
qpi	libavcodec/vp3.c	/^    uint8_t qpi;$/;"	m	struct:Vp3Fragment	file:
qps	libavcodec/vp3.c	/^    int qps[3];$/;"	m	struct:Vp3DecodeContext	file:
qr_base	libavcodec/vp3.c	/^    uint16_t qr_base[2][3][64];$/;"	m	struct:Vp3DecodeContext	file:
qr_count	libavcodec/vp3.c	/^    uint8_t qr_count[2][3];$/;"	m	struct:Vp3DecodeContext	file:
qr_size	libavcodec/vp3.c	/^    uint8_t qr_size [2][3][64];$/;"	m	struct:Vp3DecodeContext	file:
qscale	libavcodec/avcodec.h	/^    int qscale; \/\/ If this is 0 then quality_factor will be used instead.$/;"	m	struct:RcOverride
qscale	libavcodec/dnxhdenc.h	/^    unsigned qscale;$/;"	m	struct:DNXHDEncContext
qscale	libavcodec/libxvidff.c	/^    int qscale;                    \/**< Do we use constant scale? *\/$/;"	m	struct:xvid_context	file:
qscale	libavcodec/mdec.c	/^    int qscale;$/;"	m	struct:MDECContext	file:
qscale	libavcodec/mjpegdec.h	/^    int qscale[4];      \/\/\/< quantizer scale calculated from quant_matrixes$/;"	m	struct:MJpegDecodeContext
qscale	libavcodec/mpegvideo.h	/^    int qscale;                 \/\/\/< QP$/;"	m	struct:MpegEncContext
qscale	libavcodec/ratecontrol.h	/^    float qscale;$/;"	m	struct:RateControlEntry
qscale	libavfilter/libmpcodecs/mp_image.h	/^    char * qscale;$/;"	m	struct:mp_image
qscale2qlog	libavcodec/snow.c	/^static int qscale2qlog(int qscale){$/;"	f	file:
qscale_sum	libavcodec/ratecontrol.h	/^    uint64_t qscale_sum[5];$/;"	m	struct:RateControlContext
qscale_table	libavcodec/mjpegdec.h	/^    int8_t *qscale_table;$/;"	m	struct:MJpegDecodeContext
qscale_table	libavcodec/vp56.h	/^    int8_t *qscale_table;$/;"	m	struct:vp56_context
qscale_table_base	libavcodec/mpegvideo.h	/^    int8_t *qscale_table_base;$/;"	m	struct:Picture
qscale_type	libavfilter/libmpcodecs/mp_image.h	/^    int qscale_type; \/\/ 0->mpeg1\/4\/h263, 1->mpeg2$/;"	m	struct:mp_image
qsort_comparison_function_int16	libavcodec/aacsbr.c	/^static int qsort_comparison_function_int16(const void *a, const void *b)$/;"	f	file:
qstride	libavfilter/libmpcodecs/mp_image.h	/^    int qstride;$/;"	m	struct:mp_image
qsum	libavcodec/intrax8.h	/^    int qsum;$/;"	m	struct:__anon134
qt_rtp_free	libavformat/rtpdec_qt.c	/^static void qt_rtp_free(PayloadContext *qt)$/;"	f	file:
qt_rtp_new	libavformat/rtpdec_qt.c	/^static PayloadContext *qt_rtp_new(void)$/;"	f	file:
qt_rtp_parse_packet	libavformat/rtpdec_qt.c	/^static int qt_rtp_parse_packet(AVFormatContext *s, PayloadContext *qt,$/;"	f	file:
qtable	libavcodec/eatgq.c	/^    int qtable[64];$/;"	m	struct:TgqContext	file:
qtrle_decode_16bpp	libavcodec/qtrle.c	/^static void qtrle_decode_16bpp(QtrleContext *s, int stream_ptr, int row_ptr, int lines_to_change)$/;"	f	file:
qtrle_decode_1bpp	libavcodec/qtrle.c	/^static void qtrle_decode_1bpp(QtrleContext *s, int stream_ptr, int row_ptr, int lines_to_change)$/;"	f	file:
qtrle_decode_24bpp	libavcodec/qtrle.c	/^static void qtrle_decode_24bpp(QtrleContext *s, int stream_ptr, int row_ptr, int lines_to_change)$/;"	f	file:
qtrle_decode_2n4bpp	libavcodec/qtrle.c	/^static inline void qtrle_decode_2n4bpp(QtrleContext *s, int stream_ptr,$/;"	f	file:
qtrle_decode_32bpp	libavcodec/qtrle.c	/^static void qtrle_decode_32bpp(QtrleContext *s, int stream_ptr, int row_ptr, int lines_to_change)$/;"	f	file:
qtrle_decode_8bpp	libavcodec/qtrle.c	/^static void qtrle_decode_8bpp(QtrleContext *s, int stream_ptr, int row_ptr, int lines_to_change)$/;"	f	file:
qtrle_decode_end	libavcodec/qtrle.c	/^static av_cold int qtrle_decode_end(AVCodecContext *avctx)$/;"	f	file:
qtrle_decode_frame	libavcodec/qtrle.c	/^static int qtrle_decode_frame(AVCodecContext *avctx,$/;"	f	file:
qtrle_decode_init	libavcodec/qtrle.c	/^static av_cold int qtrle_decode_init(AVCodecContext *avctx)$/;"	f	file:
qtrle_encode_end	libavcodec/qtrleenc.c	/^static av_cold int qtrle_encode_end(AVCodecContext *avctx)$/;"	f	file:
qtrle_encode_frame	libavcodec/qtrleenc.c	/^static int qtrle_encode_frame(AVCodecContext *avctx, uint8_t *buf, int buf_size, void *data)$/;"	f	file:
qtrle_encode_init	libavcodec/qtrleenc.c	/^static av_cold int qtrle_encode_init(AVCodecContext *avctx)$/;"	f	file:
qtrle_encode_line	libavcodec/qtrleenc.c	/^static void qtrle_encode_line(QtrleEncContext *s, AVFrame *p, int line, uint8_t **buf)$/;"	f	file:
qu	libavcodec/sipr16kdata.h	/^static const float qu[2] = { 0.12, 0.5};$/;"	v
qua_gain_6b	libavcodec/amrwbdata.h	/^static const int16_t qua_gain_6b[64][2] = {$/;"	v
qua_gain_7b	libavcodec/amrwbdata.h	/^static const int16_t qua_gain_7b[128][2] = {$/;"	v
qua_gain_code	libavcodec/amrnbdata.h	/^static const uint16_t qua_gain_code[32] = {$/;"	v
qua_gain_pit	libavcodec/amrnbdata.h	/^static const uint16_t qua_gain_pit[16] = {$/;"	v
qua_hb_gain	libavcodec/amrwbdata.h	/^static const uint16_t qua_hb_gain[16] = {$/;"	v
quality	libavcodec/aacpsy.c	/^    int   quality;  \/\/\/< Quality to map the rest of the vaules to.$/;"	m	struct:__anon256	file:
quality	libavcodec/nuv.c	/^    int quality;$/;"	m	struct:__anon100	file:
quality	libavcodec/vorbisenc.c	/^    float quality;$/;"	m	struct:__anon194	file:
quality	libavfilter/libmpcodecs/vf_noise.c	/^        int quality;$/;"	m	struct:FilterParam	file:
quality	libavfilter/libmpcodecs/vf_sab.c	/^    float quality;$/;"	m	struct:FilterParam	file:
quality	libavfilter/libmpcodecs/vf_smartblur.c	/^    float quality;$/;"	m	struct:FilterParam	file:
quality	libavformat/avformat.h	/^    float quality;$/;"	m	struct:AVStream
quality_factor	libavcodec/avcodec.h	/^    float quality_factor;$/;"	m	struct:RcOverride
quant	libavcodec/aaccoder.c	/^static av_always_inline int quant(float coef, const float Q)$/;"	f	file:
quant	libavcodec/g726.c	/^    const int* quant;         \/**< quantization table *\/$/;"	m	struct:G726Tables	file:
quant	libavcodec/g726.c	/^static inline uint8_t quant(G726Context* c, int d)$/;"	f	file:
quant	libavcodec/intrax8.h	/^    int quant;$/;"	m	struct:__anon134
quant	libavcodec/rv34.h	/^    int quant;             \/\/\/< quantizer used for this slice$/;"	m	struct:SliceInfo
quant	libavcodec/vorbis_enc_data.h	/^    const uint8_t *quant;$/;"	m	struct:__anon273
quant11	libavcodec/ffv1.c	/^static const int8_t quant11[256]={$/;"	v	file:
quant11	libavcodec/snow.c	/^static const int8_t quant11[256]={$/;"	v	file:
quant13	libavcodec/ffv1.c	/^static const int8_t quant13[256]={$/;"	v	file:
quant13	libavcodec/snow.c	/^static const int8_t quant13[256]={$/;"	v	file:
quant3	libavcodec/ffv1.c	/^static const int8_t quant3[256]={$/;"	v	file:
quant3	libavcodec/snow.c	/^static const int8_t quant3[256]={$/;"	v	file:
quant3b	libavcodec/snow.c	/^static const int8_t quant3b[256]={$/;"	v	file:
quant3bA	libavcodec/snow.c	/^static const int8_t quant3bA[256]={$/;"	v	file:
quant5	libavcodec/ffv1.c	/^static const int8_t quant5[256]={$/;"	v	file:
quant5	libavcodec/snow.c	/^static const int8_t quant5[256]={$/;"	v	file:
quant5_10bit	libavcodec/ffv1.c	/^static const int8_t quant5_10bit[256]={$/;"	v	file:
quant7	libavcodec/ffv1.c	/^static const int8_t quant7[256]={$/;"	v	file:
quant7	libavcodec/snow.c	/^static const int8_t quant7[256]={$/;"	v	file:
quant9	libavcodec/ffv1.c	/^static const int8_t quant9[256]={$/;"	v	file:
quant9	libavcodec/snow.c	/^static const int8_t quant9[256]={$/;"	v	file:
quant9_10bit	libavcodec/ffv1.c	/^static const int8_t quant9_10bit[256]={$/;"	v	file:
quant_centroid_tab	libavcodec/cookdata.h	/^static const float quant_centroid_tab[7][14] = {$/;"	v
quant_cof	libavcodec/alsdec.c	/^    int32_t      *quant_cof;        \/\/\/< quantized parcor coefficients$/;"	m	struct:__anon153	file:
quant_cof	libavcodec/alsdec.c	/^    int32_t **quant_cof;            \/\/\/< quantized parcor coefficients for a channel$/;"	m	struct:__anon152	file:
quant_cof_buffer	libavcodec/alsdec.c	/^    int32_t *quant_cof_buffer;      \/\/\/< contains all quantized parcor coefficients$/;"	m	struct:__anon152	file:
quant_dc_chroma	libavcodec/intrax8.h	/^    int quant_dc_chroma;$/;"	m	struct:__anon134
quant_index	libavcodec/mjpegdec.h	/^    int quant_index[4];   \/* quant table index for each component *\/$/;"	m	struct:MJpegDecodeContext
quant_index_huffman	libavcodec/dca.c	/^    int quant_index_huffman[DCA_PRIM_CHANNELS_MAX][DCA_ABITS_MAX]; \/\/\/< quantization index codebook select$/;"	m	struct:__anon93	file:
quant_lut	libavcodec/nellymoserenc.c	/^static const uint8_t quant_lut[230] = {$/;"	v	file:
quant_lut_add	libavcodec/nellymoserenc.c	/^static const float quant_lut_add[7] = { 0.0,  0.0,  2.0,  7.0, 21.0, 56.0, 157.0 };$/;"	v	file:
quant_lut_mul	libavcodec/nellymoserenc.c	/^static const float quant_lut_mul[7] = { 0.0,  0.0,  2.0,  2.0,  5.0, 12.0,  36.6 };$/;"	v	file:
quant_lut_offset	libavcodec/nellymoserenc.c	/^static const uint8_t quant_lut_offset[8] = { 0, 0, 1, 4, 11, 32, 81, 230 };$/;"	v	file:
quant_mat	libavcodec/ivi_common.h	/^    int             quant_mat;      \/\/\/< dequant matrix index$/;"	m	struct:__anon107
quant_matrix_rebuild	libavcodec/mpeg12.c	/^static void quant_matrix_rebuild(uint16_t *matrix, const uint8_t *old_perm,$/;"	f	file:
quant_matrixes	libavcodec/mjpegdec.h	/^    int16_t quant_matrixes[4][64];$/;"	m	struct:MJpegDecodeContext
quant_offsets	libavcodec/mpc7.c	/^static const uint16_t quant_offsets[MPC7_QUANT_VLC_TABLES*2 + 1] =$/;"	v	file:
quant_offsets	libavcodec/mpc8.c	/^static const int quant_offsets[6] = { MPC8_Q5_OFFSET, MPC8_Q6_OFFSET, MPC8_Q7_OFFSET, MPC8_Q8_OFFSET };$/;"	v	file:
quant_precision	libavcodec/mpegvideo.h	/^    int quant_precision;$/;"	m	struct:MpegEncContext
quant_psnr	libavcodec/dsputil.h	/^    me_cmp_func quant_psnr[6];$/;"	m	struct:DSPContext
quant_psnr8x8_c	libavcodec/dsputil.c	/^static int quant_psnr8x8_c(\/*MpegEncContext*\/ void *c, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
quant_snr	libavcodec/mpegaudiotab.h	/^static const unsigned short quant_snr[17] = {$/;"	v
quant_step	libavcodec/wmaprodec.c	/^    int      quant_step;                              \/\/\/< quantization step for the current subframe$/;"	m	struct:__anon82	file:
quant_step_size	libavcodec/mlpdec.c	/^    uint8_t     quant_step_size[MAX_CHANNELS];$/;"	m	struct:SubStream	file:
quant_table	libavcodec/ffv1.c	/^    int16_t quant_table[MAX_CONTEXT_INPUTS][256];$/;"	m	struct:FFV1Context	file:
quant_table	libavcodec/ffv1.c	/^    int16_t quant_table[MAX_CONTEXT_INPUTS][256];$/;"	m	struct:PlaneContext	file:
quant_table	libavcodec/intrax8.c	/^static const int16_t quant_table[64] = {$/;"	v	file:
quant_table_count	libavcodec/ffv1.c	/^    int quant_table_count;$/;"	m	struct:FFV1Context	file:
quant_table_index	libavcodec/ffv1.c	/^    int quant_table_index;$/;"	m	struct:PlaneContext	file:
quant_tables	libavcodec/ffv1.c	/^    int16_t quant_tables[MAX_QUANT_TABLES][MAX_CONTEXT_INPUTS][256];$/;"	m	struct:FFV1Context	file:
quant_tbl16	libavcodec/g726.c	/^static const int quant_tbl16[] =                  \/**< 16kbit\/s 2bits per sample *\/$/;"	v	file:
quant_tbl24	libavcodec/g726.c	/^static const int quant_tbl24[] =                  \/**< 24kbit\/s 3bits per sample *\/$/;"	v	file:
quant_tbl32	libavcodec/g726.c	/^static const int quant_tbl32[] =                  \/**< 32kbit\/s 4bits per sample *\/$/;"	v	file:
quant_tbl40	libavcodec/g726.c	/^static const int quant_tbl40[] =                  \/**< 40kbit\/s 5bits per sample *\/$/;"	v	file:
quant_vlc	libavcodec/mpc7.c	/^static VLC scfi_vlc, dscf_vlc, hdr_vlc, quant_vlc[MPC7_QUANT_VLC_TABLES][2];$/;"	v	file:
quant_vlc	libavcodec/mpc8.c	/^static VLC q1_vlc, q2_vlc[2], q3_vlc[2], quant_vlc[4][2], q9up_vlc;$/;"	v	file:
quantization	libavcodec/sonic.c	/^    double quantization;$/;"	m	struct:SonicContext	file:
quantization_tab	libavcodec/ac3dec.c	/^static const uint8_t quantization_tab[16] = {$/;"	v	file:
quantize	libavcodec/dcaenc.c	/^static inline uint32_t quantize(int32_t sample, int bits)$/;"	f	file:
quantize	libavcodec/ra144enc.c	/^static int quantize(int value, const int16_t *table, unsigned int size)$/;"	f	file:
quantize	libavcodec/snow.c	/^static void quantize(SnowContext *s, SubBand *b, IDWTELEM *dst, DWTELEM *src, int stride, int bias){$/;"	f	file:
quantize_and_encode_band	libavcodec/aaccoder.c	/^static void quantize_and_encode_band(struct AACEncContext *s, PutBitContext *pb,$/;"	f	file:
quantize_and_encode_band	libavcodec/aacenc.h	/^    void (*quantize_and_encode_band)(struct AACEncContext *s, PutBitContext *pb, const float *in, int size,$/;"	m	struct:AACCoefficientsEncoder
quantize_and_encode_band_cost	libavcodec/aaccoder.c	249;"	d	file:
quantize_and_encode_band_cost_arr	libavcodec/aaccoder.c	/^static float (*const quantize_and_encode_band_cost_arr[])($/;"	v	file:
quantize_and_encode_band_cost_template	libavcodec/aaccoder.c	/^static av_always_inline float quantize_and_encode_band_cost_template($/;"	f	file:
quantize_band_cost	libavcodec/aaccoder.c	/^static float quantize_band_cost(struct AACEncContext *s, const float *in,$/;"	f	file:
quantize_bands	libavcodec/aaccoder.c	/^static void quantize_bands(int *out, const float *in, const float *scaled,$/;"	f	file:
quantize_lpc_coefs	libavcodec/lpc.c	/^static void quantize_lpc_coefs(double *lpc_in, int order, int precision,$/;"	f	file:
quantize_mantissas	libavcodec/ac3enc.c	/^static void quantize_mantissas(AC3EncodeContext *s)$/;"	f	file:
quantize_mantissas_blk_ch	libavcodec/ac3enc.c	/^static void quantize_mantissas_blk_ch(AC3Mant *s, int32_t *fixed_coef,$/;"	f	file:
quantized_coeffs	libavcodec/qdm2.c	/^    int8_t quantized_coeffs[MPA_MAX_CHANNELS][10][8];$/;"	m	struct:__anon200	file:
quantizer	libavcodec/vp56.h	/^    int quantizer;$/;"	m	struct:vp56_context
quantizer_mode	libavcodec/vc1.h	/^    int quantizer_mode;   \/\/\/< 2bits, quantizer mode used for sequence, see QUANT_*$/;"	m	struct:VC1Context
quantizer_noise_shaping	libavcodec/avcodec.h	/^    int quantizer_noise_shaping;$/;"	m	struct:AVCodecContext
quantlist	libavcodec/vorbisenc.c	/^    int *quantlist;$/;"	m	struct:__anon188	file:
quantsty	libavcodec/j2k.h	/^    uint8_t  quantsty;     \/\/\/< quantization style$/;"	m	struct:__anon211
quarter_sample	libavcodec/mpegvideo.h	/^    int quarter_sample;              \/\/\/< 1->qpel, 0->half pel ME\/MC$/;"	m	struct:MpegEncContext
query_format	libavfilter/libmpcodecs/vf.h	/^    int (*query_format)(struct vf_instance *vf,$/;"	m	struct:vf_instance
query_format	libavfilter/libmpcodecs/vf_2xsai.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_blackframe.c	/^static int query_format(struct vf_instance *vf, unsigned fmt) {$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_boxblur.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_cropdetect.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt) {$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_delogo.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_denoise3d.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_detc.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_divtc.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_down3dright.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_eq.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_eq2.c	/^int query_format (vf_instance_t *vf, unsigned fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_filmdint.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_fspp.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_gradfun.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_hqdn3d.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_hue.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_ilpack.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_ivtc.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_kerndeint.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_noise.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_ow.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_palette.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_perspective.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_pp7.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_pullup.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_remove_logo.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_rgbtest.c	/^static int query_format(struct vf_instance *vf, unsigned int outfmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_rotate.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_sab.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_screenshot.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_smartblur.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_spp.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_swapuv.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_test.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_tile.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_tinterlace.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt)$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_unsharp.c	/^static int query_format( struct vf_instance *vf, unsigned int fmt ) {$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_uspp.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_yuvcsp.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_format	libavfilter/libmpcodecs/vf_yvu9.c	/^static int query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
query_formats	libavfilter/avfilter.h	/^    int (*query_formats)(AVFilterContext *);$/;"	m	struct:AVFilter
query_formats	libavfilter/avfiltergraph.c	/^static int query_formats(AVFilterGraph *graph, AVClass *log_ctx)$/;"	f	file:
query_formats	libavfilter/vf_blackframe.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_crop.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_cropdetect.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_drawbox.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_drawtext.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_fade.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_fieldorder.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_frei0r.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_gradfun.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_hflip.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_hqdn3d.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_libopencv.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_lut.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_mp.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_overlay.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_pad.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_scale.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_transpose.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_unsharp.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vf_yadif.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vsink_buffer.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vsrc_buffer.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vsrc_color.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats	libavfilter/vsrc_movie.c	/^static int query_formats(AVFilterContext *ctx)$/;"	f	file:
query_formats_format	libavfilter/vf_format.c	/^static int query_formats_format(AVFilterContext *ctx)$/;"	f	file:
query_formats_noformat	libavfilter/vf_format.c	/^static int query_formats_noformat(AVFilterContext *ctx)$/;"	f	file:
queue	libavformat/rtpdec.h	/^    RTPPacket* queue; \/\/\/< A sorted queue of buffered packets not yet returned$/;"	m	struct:RTPDemuxContext
queue_frames	libavcodec/libvpxenc.c	/^static int queue_frames(AVCodecContext *avctx, uint8_t *buf, int buf_size,$/;"	f	file:
queue_len	libavformat/rtpdec.h	/^    int queue_len;    \/\/\/< The number of packets in queue$/;"	m	struct:RTPDemuxContext
queue_length	libavfilter/libmpcodecs/pullup.c	/^static int queue_length(struct pullup_field *begin, struct pullup_field *end)$/;"	f	file:
queue_picture	ffplay.c	/^static int queue_picture(VideoState *is, AVFrame *src_frame, double pts1, int64_t pos)$/;"	f	file:
queue_size	libavformat/rtpdec.h	/^    int queue_size;   \/\/\/< The size of queue, or 0 if reordering is disabled$/;"	m	struct:RTPDemuxContext
quicktime_format	libavcodec/libxvidff.c	/^    int quicktime_format;          \/**< Are we in a QT-based format? *\/$/;"	m	struct:xvid_context	file:
r	libavcodec/ppc/regs.h	28;"	d
r	libavcodec/ppc/regs.h	32;"	d
r	libavfilter/libmpcodecs/libvo/video_out.h	/^  uint16_t r,g,b;$/;"	m	struct:__anon30
r	libavfilter/libmpcodecs/vf_ivtc.c	/^    struct metrics p, r, m;$/;"	m	struct:frameinfo	typeref:struct:frameinfo::	file:
r	libavformat/gif.c	/^    unsigned char r;$/;"	m	struct:__anon384	file:
r	tests/videogen.c	/^    int r, g, b;$/;"	m	struct:VObj	file:
r0	libavcodec/aac.h	/^    float r0;$/;"	m	struct:__anon237
r0	libavcodec/bfin/pixels_bfin.S	/^        r0 = [sp+12]; \/\/ rwidth$/;"	d
r0	libavcodec/bfin/pixels_bfin.S	/^        r0 = a0;$/;"	d
r0	libswscale/bfin/internal_bfin.S	/^            r0 = bytepack(r0, r1);$/;"	d
r0	libswscale/bfin/internal_bfin.S	/^        r0   = [i0++];         \/\/ 2Y$/;"	d
r0	libswscale/bfin/internal_bfin.S	/^        r0 = [fp+ARG_COEFF]; \/\/ coeff buffer$/;"	d
r0	libswscale/bfin/internal_bfin.S	/^        r0 = [fp+ARG_COEFF];$/;"	d
r0	libswscale/bfin/internal_bfin.S	/^        r0 = p5;$/;"	d
r0	libswscale/bfin/internal_bfin.S	/^        r0 = r0 >> 1;$/;"	d
r1	libavcodec/aac.h	/^    float r1;$/;"	m	struct:__anon237
r1	libswscale/bfin/internal_bfin.S	/^            r1 = r1 >> 8(v) || [p1++] = r5;  \/\/ yyyy-odd$/;"	d
r1	libswscale/bfin/internal_bfin.S	/^            r1 = r1 >> 8(v);$/;"	d
r1	libswscale/bfin/internal_bfin.S	/^          r1 = [i0++] || r3 = [i1++];$/;"	d
r1	libswscale/bfin/internal_bfin.S	/^        r1 = [fp + ARG_srcStride];$/;"	d
r1	libswscale/bfin/internal_bfin.S	/^        r1 = r1 - r2;  \/\/ srcStride + (srcStride - 2*width)$/;"	d
r1	libswscale/bfin/internal_bfin.S	/^        r1 = r1 << 1;$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^            r2 = bytepack(r2, r3)         ||  [p0++] = r0;    \/\/ yyyy$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^            r2 = r2 >> 8(v);$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = [fp + ARG_chromStride];$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = [fp + ARG_vdst];$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = byteop3p(r3:2, r1:0)(LO)                      || r0   =  [i0++];        \/\/ 2Y$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = byteop3p(r3:2, r1:0)(LO)                      || r0=[i0++];     \/\/ 4Y$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = byteop3p(r3:2, r1:0)(LO)                      || r1=[i1++]; \/\/ cbu$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = byteop3p(r3:2, r1:0)(LO)                      || r1=[i1++]; \/\/ cgu$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = byteop3p(r3:2, r1:0)(LO)                      || r5=[i1++]; \/\/ gmask$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = byteop3p(r3:2, r1:0)(LO)                      || r5=[i1++m0]; \/\/ gmask$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = byteop3p(r3:2, r1:0)(LO)                      || r5=[i1++m0]; \/\/ gmask, oy,cy,zero$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = r0 + r1;$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = r0 << 1;$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = r2 & r5;$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = r2 - r0;$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = r2 << 2 (v)                                   || r1.l=w[i2++];  \/\/ 2u$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = r2 << 2 (v);$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = r2 << 3 (v)                                   || r1.l = w[i2++];        \/\/ 2u$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = r2 << 3 (v);$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = r2 << 7 (v);$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = r2 << 8 (v);$/;"	d
r2	libswscale/bfin/internal_bfin.S	/^        r2 = r2 >> 3 (v);$/;"	d
r3	libswscale/bfin/internal_bfin.S	/^            r3 = r3 >> 8(v);$/;"	d
r3	libswscale/bfin/internal_bfin.S	/^        r3 = [fp+ARG_W];$/;"	d
r3	libswscale/bfin/internal_bfin.S	/^        r3 = byteop3p(r3:2, r1:0)(LO)                      || r1=[i1++]; \/\/ cgu$/;"	d
r3	libswscale/bfin/internal_bfin.S	/^        r3 = r2 & r5;$/;"	d
r3	libswscale/bfin/internal_bfin.S	/^        r3 = r3 | r2;$/;"	d
r3d_close	libavformat/r3d.c	/^static int r3d_close(AVFormatContext *s)$/;"	f	file:
r3d_probe	libavformat/r3d.c	/^static int r3d_probe(AVProbeData *p)$/;"	f	file:
r3d_read_header	libavformat/r3d.c	/^static int r3d_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
r3d_read_packet	libavformat/r3d.c	/^static int r3d_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
r3d_read_rdvo	libavformat/r3d.c	/^static int r3d_read_rdvo(AVFormatContext *s, Atom *atom)$/;"	f	file:
r3d_read_red1	libavformat/r3d.c	/^static int r3d_read_red1(AVFormatContext *s)$/;"	f	file:
r3d_read_reda	libavformat/r3d.c	/^static int r3d_read_reda(AVFormatContext *s, AVPacket *pkt, Atom *atom)$/;"	f	file:
r3d_read_redv	libavformat/r3d.c	/^static int r3d_read_redv(AVFormatContext *s, AVPacket *pkt, Atom *atom)$/;"	f	file:
r3d_read_reos	libavformat/r3d.c	/^static void r3d_read_reos(AVFormatContext *s)$/;"	f	file:
r3d_seek	libavformat/r3d.c	/^static int r3d_seek(AVFormatContext *s, int stream_index, int64_t sample_time, int flags)$/;"	f	file:
r4	libswscale/bfin/internal_bfin.S	/^            r4 = byteop1p(r1:0, r3:2)     ||  w[i2++] = r6.l; \/\/ uu$/;"	d
r4	libswscale/bfin/internal_bfin.S	/^            r4 = byteop1p(r1:0, r3:2);$/;"	d
r4	libswscale/bfin/internal_bfin.S	/^            r4 = bytepack(r0, r1)         ||  w[i2++] = r6.l; \/\/ uu$/;"	d
r4	libswscale/bfin/internal_bfin.S	/^          r4 = byteop1p(r1:0, r3:2);$/;"	d
r4	libswscale/bfin/internal_bfin.S	/^          r4 = bytepack(r0, r1);$/;"	d
r4	libswscale/bfin/internal_bfin.S	/^        r4 = r4 << 2 (v);                                                \/\/ y3,y2$/;"	d
r4	libswscale/bfin/internal_bfin.S	/^        r4 = r4 << 2 (v);               \/\/ y3,y2$/;"	d
r5	libswscale/bfin/internal_bfin.S	/^            r5 = byteop1p(r1:0, r3:2) (r);$/;"	d
r5	libswscale/bfin/internal_bfin.S	/^          r5 = byteop1p(r1:0, r3:2) (r);$/;"	d
r5	libswscale/bfin/internal_bfin.S	/^          r5 = bytepack(r2, r3);$/;"	d
r5	libswscale/bfin/internal_bfin.S	/^        r5 = r5 << 2 (v);                                                \/\/ y1,y0$/;"	d
r5	libswscale/bfin/internal_bfin.S	/^        r5 = r5 << 2 (v);               \/\/ y1,y0$/;"	d
r6	libswscale/bfin/internal_bfin.S	/^            r6 = bytepack(r6, r7)         ||  r1 = [i0++] || r3 = [i1++];$/;"	d
r6	libswscale/bfin/internal_bfin.S	/^            r6 = pack(r5.l, r4.l)         ||  [p1++] = r2;    \/\/ yyyy$/;"	d
r6	libswscale/bfin/internal_bfin.S	/^            r6 = pack(r5.l, r4.l);$/;"	d
r6	libswscale/bfin/internal_bfin.S	/^        r6 = r6 << 2 (v)                                   || r0=[i1++]; \/\/ u1,u0, r0=zero$/;"	d
r6	libswscale/bfin/internal_bfin.S	/^        r6 = r6 << 2 (v) || r0=[i1++];  \/\/ u1,u0, r0=zero$/;"	d
r7	libswscale/bfin/internal_bfin.S	/^            r7 = pack(r5.h, r4.h)         ||  r0 = [i0++] || r2 = [i1++];$/;"	d
r7	libswscale/bfin/internal_bfin.S	/^        r7 = r7 << 2 (v)                                   || r1=[i1++]; \/\/ v1,v0  r1=cy$/;"	d
r7	libswscale/bfin/internal_bfin.S	/^        r7 = r7 << 2 (v) || r1=[i1++];  \/\/ v1,v0  r1=cy$/;"	d
r_b	libswscale/swscale.c	842;"	d	file:
r_b	libswscale/swscale.c	978;"	d	file:
r_frame_rate	libavformat/avformat.h	/^    AVRational r_frame_rate;$/;"	m	struct:AVStream
ra	libavcodec/alpha/regdef.h	57;"	d
ra144_decode_frame	libavcodec/ra144dec.c	/^static int ra144_decode_frame(AVCodecContext * avctx, void *vdata,$/;"	f	file:
ra144_decode_init	libavcodec/ra144dec.c	/^static av_cold int ra144_decode_init(AVCodecContext * avctx)$/;"	f	file:
ra144_encode_close	libavcodec/ra144enc.c	/^static av_cold int ra144_encode_close(AVCodecContext *avctx)$/;"	f	file:
ra144_encode_frame	libavcodec/ra144enc.c	/^static int ra144_encode_frame(AVCodecContext *avctx, uint8_t *frame,$/;"	f	file:
ra144_encode_init	libavcodec/ra144enc.c	/^static av_cold int ra144_encode_init(AVCodecContext * avctx)$/;"	f	file:
ra144_encode_subblock	libavcodec/ra144enc.c	/^static void ra144_encode_subblock(RA144Context *ractx,$/;"	f	file:
ra288_decode_frame	libavcodec/ra288.c	/^static int ra288_decode_frame(AVCodecContext * avctx, void *data,$/;"	f	file:
ra288_decode_init	libavcodec/ra288.c	/^static av_cold int ra288_decode_init(AVCodecContext *avctx)$/;"	f	file:
ra_block	libavcodec/alsdec.c	/^    unsigned int ra_block;          \/\/\/< if true, this is a random access block$/;"	m	struct:__anon153	file:
ra_distance	libavcodec/alsdec.c	/^    int ra_distance;          \/\/\/< distance between RA frames (in frames, 0...255)$/;"	m	struct:__anon150	file:
ra_flag	libavcodec/alsdec.c	/^    enum RA_Flag ra_flag;     \/\/\/< indicates where the size of ra units is stored$/;"	m	struct:__anon150	typeref:enum:__anon150::RA_Flag	file:
ract_vlc	libavcodec/vp56.h	/^    VLC ract_vlc[2][3][6];$/;"	m	struct:vp56_context
radius	libavfilter/gradfun.h	/^    int radius;    \/\/\/< blur radius$/;"	m	struct:__anon17
radius	libavfilter/libmpcodecs/vf_boxblur.c	/^        int radius;$/;"	m	struct:FilterParam	file:
radius	libavfilter/libmpcodecs/vf_gradfun.c	/^    int radius;$/;"	m	struct:vf_priv_s	file:
radius	libavfilter/libmpcodecs/vf_sab.c	/^    float radius;$/;"	m	struct:FilterParam	file:
radius	libavfilter/libmpcodecs/vf_smartblur.c	/^    float radius;$/;"	m	struct:FilterParam	file:
radix_count	libavcodec/dnxhdenc.c	/^static void radix_count(const RCCMPEntry *data, int size, int buckets[RADIX_PASSES][NBUCKETS])$/;"	f	file:
radix_sort	libavcodec/dnxhdenc.c	/^static void radix_sort(RCCMPEntry *data, int size)$/;"	f	file:
radix_sort_pass	libavcodec/dnxhdenc.c	/^static void radix_sort_pass(RCCMPEntry *dst, const RCCMPEntry *data, int size, int buckets[NBUCKETS], int pass)$/;"	f	file:
ran	tools/trasher.c	/^static uint32_t ran(void){$/;"	f	file:
rand	libavfilter/libmpcodecs/mp_image.h	33;"	d
rand	libavutil/des.c	330;"	d	file:
rand	libavutil/internal.h	137;"	d
rand	libavutil/internal.h	138;"	d
rand64	libavutil/des.c	/^static uint64_t rand64(void) {$/;"	f	file:
rand_state	libavcodec/elbg.c	/^    AVLFG *rand_state;$/;"	m	struct:__anon247	file:
randctx	libavcodec/a64enc.h	/^    AVLFG randctx;$/;"	m	struct:A64Context
randctx	libavcodec/roqvideo.h	/^    AVLFG randctx;$/;"	m	struct:RoqContext
random	libavcodec/h264.c	4035;"	d	file:
random	libavutil/internal.h	141;"	d
random	libavutil/internal.h	142;"	d
random_dequant_index	libavcodec/qdm2_tablegen.h	/^static uint8_t random_dequant_index[256][5];$/;"	v
random_dequant_type24	libavcodec/qdm2_tablegen.h	/^static uint8_t random_dequant_type24[128][3];$/;"	v
random_index_pack_key	libavformat/mxfenc.c	/^static const uint8_t random_index_pack_key[]       = { 0x06,0x0E,0x2B,0x34,0x02,0x05,0x01,0x01,0x0D,0x01,0x02,0x01,0x01,0x11,0x01,0x00 };$/;"	v	file:
random_state	ffserver.c	/^static AVLFG random_state;$/;"	v	file:
random_state	libavcodec/aac.h	/^    int random_state;$/;"	m	struct:__anon246
random_state	libavcodec/cook.c	/^    AVLFG               random_state;$/;"	m	struct:cook	file:
random_state	libavcodec/nellymoserdec.c	/^    AVLFG           random_state;$/;"	m	struct:NellyMoserDecodeContext	file:
range	libavcodec/apedec.c	/^    uint32_t range;         \/\/\/< length of interval$/;"	m	struct:APERangecoder	file:
range	libavcodec/cabac.h	/^    int range;$/;"	m	struct:CABACContext
range	libavcodec/jpegls.h	/^    int limit, reset, bpp, qbpp, maxval, range;$/;"	m	struct:JLSState
range	libavcodec/lagarithrac.h	/^    unsigned range;$/;"	m	struct:lag_rac
range	libavcodec/rangecoder.h	/^    int range;$/;"	m	struct:RangeCoder
range	libavcodec/zmbvenc.c	/^    int range;$/;"	m	struct:ZmbvEncContext	file:
range_dec_normalize	libavcodec/apedec.c	/^static inline void range_dec_normalize(APEContext * ctx)$/;"	f	file:
range_decode_bits	libavcodec/apedec.c	/^static inline int range_decode_bits(APEContext * ctx, int n)$/;"	f	file:
range_decode_culfreq	libavcodec/apedec.c	/^static inline int range_decode_culfreq(APEContext * ctx, int tot_f)$/;"	f	file:
range_decode_culshift	libavcodec/apedec.c	/^static inline int range_decode_culshift(APEContext * ctx, int shift)$/;"	f	file:
range_decode_update	libavcodec/apedec.c	/^static inline void range_decode_update(APEContext * ctx, int sy_f, int lt_f)$/;"	f	file:
range_end	libavformat/rtsp.h	/^    int64_t range_start, range_end;$/;"	m	struct:RTSPMessageHeader
range_get_symbol	libavcodec/apedec.c	/^static inline int range_get_symbol(APEContext * ctx,$/;"	f	file:
range_hash	libavcodec/lagarithrac.h	/^    uint8_t  range_hash[256];   \/*!< Hash table mapping upper byte to approximate symbol. *\/$/;"	m	struct:lag_rac
range_mapuv	libavcodec/vc1.h	/^    uint8_t range_mapuv;$/;"	m	struct:VC1Context
range_mapuv_flag	libavcodec/vc1.h	/^    uint8_t range_mapuv_flag;$/;"	m	struct:VC1Context
range_mapy	libavcodec/vc1.h	/^    uint8_t range_mapy;$/;"	m	struct:VC1Context
range_mapy_flag	libavcodec/vc1.h	/^    uint8_t range_mapy_flag;$/;"	m	struct:VC1Context
range_start	libavformat/rtsp.h	/^    int64_t range_start, range_end;$/;"	m	struct:RTSPMessageHeader
range_start_decoding	libavcodec/apedec.c	/^static inline void range_start_decoding(APEContext * ctx)$/;"	f	file:
range_start_offset	libavformat/rtpdec.h	/^    int64_t  range_start_offset;$/;"	m	struct:RTPDemuxContext
range_t	libavfilter/libmpcodecs/libvo/video_out.h	/^        } range_t;$/;"	t	typeref:struct:__anon32
range_x	libavcodec/vc1.h	/^    int range_x, range_y; \/\/\/< MV range$/;"	m	struct:VC1Context
range_y	libavcodec/vc1.h	/^    int range_x, range_y; \/\/\/< MV range$/;"	m	struct:VC1Context
rangebits	libavcodec/vorbisenc.c	/^    int rangebits;$/;"	m	struct:__anon190	file:
rangered	libavcodec/vc1.h	/^    int rangered;         \/\/\/< RANGEREDFRM (range reduction) syntax element present$/;"	m	struct:VC1Context
rangeredfrm	libavcodec/vc1.h	/^    uint8_t rangeredfrm; \/\/\/< out_sample = CLIP((in_sample-128)*2+128)$/;"	m	struct:VC1Context
rap_flag	libavformat/rtpdec_mpeg4.c	/^        int rap_flag;$/;"	m	struct:PayloadContext::AUHeaders	file:
raster_end	libavcodec/dsputil.h	/^    uint8_t raster_end[64];$/;"	m	struct:ScanTable
rate	libavcodec/j2k.h	/^    uint16_t rate;$/;"	m	struct:__anon212
rate	libavcodec/libopencore-amr.c	/^    int       rate;$/;"	m	struct:AMR_bitrates	file:
rate	libavcodec/vorbisdec.c	/^            uint16_t      rate;$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor0_s	file:
rate	libavformat/avidec.c	/^    int rate;$/;"	m	struct:AVIStream	file:
rate	libavformat/nsvdec.c	/^    int rate;$/;"	m	struct:NSVStream	file:
rate	libavformat/siff.c	/^    int rate;$/;"	m	struct:SIFFContext	file:
rate	libavformat/wv.c	/^    int rate, chan, bpp;$/;"	m	struct:__anon327	file:
rate	libavutil/parseutils.c	/^    AVRational rate;$/;"	m	struct:__anon293	file:
rate_emu	ffmpeg.c	/^static int rate_emu = 0;$/;"	v	file:
rate_emu	ffmpeg/ffmpeg.c	/^static int rate_emu = 0;$/;"	v	file:
ratecontrol_1pass	libavcodec/snow.c	/^static int ratecontrol_1pass(SnowContext *s, AVFrame *pict)$/;"	f	file:
rates	libavformat/smacker.c	/^    uint32_t rates[7];$/;"	m	struct:SmackerContext	file:
rates_per_mode	libavformat/qcp.c	/^    int16_t rates_per_mode[QCP_MAX_MODE+1]; \/\/\/< contains the packet size corresponding$/;"	m	struct:__anon479	file:
ratio	libavcodec/resample.c	/^    float ratio;$/;"	m	struct:ReSampleContext	file:
rational	libavutil/opt.c	/^    AVRational rational;$/;"	m	struct:TestContext	file:
raw_buffer	libavcodec/alsdec.c	/^    int32_t *raw_buffer;            \/\/\/< contains all decoded raw samples including carryover samples$/;"	m	struct:__anon152	file:
raw_close_decoder	libavcodec/rawdec.c	/^static av_cold int raw_close_decoder(AVCodecContext *avctx)$/;"	f	file:
raw_decode	libavcodec/rawdec.c	/^static int raw_decode(AVCodecContext *avctx,$/;"	f	file:
raw_encode	libavcodec/rawenc.c	/^static int raw_encode(AVCodecContext *avctx,$/;"	f	file:
raw_init_decoder	libavcodec/rawdec.c	/^static av_cold int raw_init_decoder(AVCodecContext *avctx)$/;"	f	file:
raw_init_encoder	libavcodec/rawenc.c	/^static av_cold int raw_init_encoder(AVCodecContext *avctx)$/;"	f	file:
raw_orient	libavcodec/intrax8.h	/^    int raw_orient;$/;"	m	struct:__anon134
raw_other	libavcodec/alsdec.c	/^    int32_t      *raw_other;        \/\/\/< decoded raw samples of the other channel of a channel pair$/;"	m	struct:__anon153	file:
raw_packet_buffer	libavformat/avformat.h	/^    struct AVPacketList *raw_packet_buffer;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVPacketList
raw_packet_buffer	libavformat/seek.h	/^    AVPacketList   *raw_packet_buffer;      \/\/\/< raw packet buffer of original state$/;"	m	struct:AVParserState
raw_packet_buffer_end	libavformat/avformat.h	/^    struct AVPacketList *raw_packet_buffer_end;$/;"	m	struct:AVFormatContext	typeref:struct:AVFormatContext::AVPacketList
raw_packet_buffer_remaining_size	libavformat/avformat.h	/^    int raw_packet_buffer_remaining_size;$/;"	m	struct:AVFormatContext
raw_packet_buffer_remaining_size	libavformat/seek.h	/^    int raw_packet_buffer_remaining_size;   \/\/\/< remaining space in raw_packet_buffer$/;"	m	struct:AVParserState
raw_packet_size	libavformat/mpegts.c	/^    int raw_packet_size;$/;"	m	struct:MpegTSContext	file:
raw_read_packet	libavformat/pcmdec.c	/^static int raw_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
raw_samples	libavcodec/alsdec.c	/^    int32_t      *raw_samples;      \/\/\/< decoded raw samples \/ residuals for this block$/;"	m	struct:__anon153	file:
raw_samples	libavcodec/alsdec.c	/^    int32_t **raw_samples;          \/\/\/< decoded raw samples for each channel$/;"	m	struct:__anon152	file:
raw_size	libavcodec/flashsv2enc.c	/^    double raw_size;            \/\/\/< size of raw frames since last keyframe$/;"	m	struct:FlashSV2Context	file:
rawimg	libavcodec/libvpxenc.c	/^    struct vpx_image rawimg;$/;"	m	struct:VP8EncoderContext	typeref:struct:VP8EncoderContext::vpx_image	file:
rawvideo_read_packet	libavformat/rawvideodec.c	/^static int rawvideo_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
rbsp_buffer	libavcodec/h264.h	/^    uint8_t *rbsp_buffer[2];$/;"	m	struct:H264Context
rbsp_buffer_size	libavcodec/h264.h	/^    unsigned int rbsp_buffer_size[2];$/;"	m	struct:H264Context
rc	libavcodec/alacenc.c	/^    RiceContext rc;$/;"	m	struct:AlacEncodeContext	file:
rc	libavcodec/apedec.c	/^    APERangecoder rc;                        \/\/\/< rangecoder used to decode actual values$/;"	m	struct:APEContext	file:
rc	libavcodec/flacenc.c	/^    RiceContext rc;$/;"	m	struct:FlacSubframe	file:
rc_buffer_aggressivity	libavcodec/avcodec.h	/^    float rc_buffer_aggressivity;$/;"	m	struct:AVCodecContext
rc_buffer_size	libavcodec/avcodec.h	/^    int rc_buffer_size;$/;"	m	struct:AVCodecContext
rc_context	libavcodec/mpegvideo.h	/^    RateControlContext rc_context; \/\/\/< contains stuff only accessed in ratecontrol.c$/;"	m	struct:MpegEncContext
rc_eq	libavcodec/avcodec.h	/^    const char *rc_eq;$/;"	m	struct:AVCodecContext
rc_eq_eval	libavcodec/ratecontrol.h	/^    AVExpr * rc_eq_eval;$/;"	m	struct:RateControlContext
rc_initial_buffer_occupancy	libavcodec/avcodec.h	/^    int rc_initial_buffer_occupancy;$/;"	m	struct:AVCodecContext
rc_initial_cplx	libavcodec/avcodec.h	/^    float rc_initial_cplx;$/;"	m	struct:AVCodecContext
rc_lookahead	libavcodec/avcodec.h	/^    int rc_lookahead;$/;"	m	struct:AVCodecContext
rc_max_available_vbv_use	libavcodec/avcodec.h	/^    float rc_max_available_vbv_use;$/;"	m	struct:AVCodecContext
rc_max_rate	libavcodec/avcodec.h	/^    int rc_max_rate;$/;"	m	struct:AVCodecContext
rc_min_rate	libavcodec/avcodec.h	/^    int rc_min_rate;$/;"	m	struct:AVCodecContext
rc_min_vbv_overflow_use	libavcodec/avcodec.h	/^    float rc_min_vbv_overflow_use;$/;"	m	struct:AVCodecContext
rc_override	libavcodec/avcodec.h	/^    RcOverride *rc_override;$/;"	m	struct:AVCodecContext
rc_override_count	libavcodec/avcodec.h	/^    int rc_override_count;$/;"	m	struct:AVCodecContext
rc_qmod_amp	libavcodec/avcodec.h	/^    float rc_qmod_amp;$/;"	m	struct:AVCodecContext
rc_qmod_freq	libavcodec/avcodec.h	/^    int rc_qmod_freq;$/;"	m	struct:AVCodecContext
rc_qsquish	libavcodec/avcodec.h	/^    float rc_qsquish;$/;"	m	struct:AVCodecContext
rc_stat	libavcodec/ffv1.c	/^    uint64_t rc_stat[256][2];$/;"	m	struct:FFV1Context	file:
rc_stat2	libavcodec/ffv1.c	/^    uint64_t (*rc_stat2[MAX_QUANT_TABLES])[32][2];$/;"	m	struct:FFV1Context	file:
rc_strategy	libavcodec/avcodec.h	/^    int rc_strategy;$/;"	m	struct:AVCodecContext
rcon	libavutil/aes.c	/^static const uint8_t rcon[10] = {$/;"	v	file:
rct	libavcodec/mjpegdec.h	/^    int rct;            \/* standard rct *\/$/;"	m	struct:MJpegDecodeContext
rd	libavcodec/dsputil.h	/^    me_cmp_func rd[6];$/;"	m	struct:DSPContext
rd8x8_c	libavcodec/dsputil.c	/^static int rd8x8_c(\/*MpegEncContext*\/ void *c, uint8_t *src1, uint8_t *src2, int stride, int h){$/;"	f	file:
rd_scratchpad	libavcodec/mpegvideo.h	/^    uint8_t *rd_scratchpad;       \/\/\/< scratchpad for rate distortion mb decision$/;"	m	struct:MpegEncContext
rd_total	libavcodec/svq1enc.c	/^    int64_t rd_total;$/;"	m	struct:SVQ1Context	file:
rdft	ffplay.c	/^    RDFTContext *rdft;$/;"	m	struct:VideoState	file:
rdft	libavcodec/binkaudio.c	/^        RDFTContext rdft;$/;"	m	union:__anon136::__anon137	file:
rdft	libavcodec/dct.h	/^    RDFTContext rdft;$/;"	m	struct:DCTContext
rdft	libavcodec/wmavoice.c	/^    RDFTContext rdft, irdft;      \/\/\/< contexts for FFT-calculation in the$/;"	m	struct:__anon157	file:
rdft_bits	ffplay.c	/^    int rdft_bits;$/;"	m	struct:VideoState	file:
rdft_calc	libavcodec/rdft.h	/^    void (*rdft_calc)(struct RDFTContext *s, FFTSample *z);$/;"	m	struct:RDFTContext
rdft_ctx	libavcodec/qdm2.c	/^    RDFTContext rdft_ctx;$/;"	m	struct:__anon200	file:
rdft_data	ffplay.c	/^    FFTSample *rdft_data;$/;"	m	struct:VideoState	file:
rdftspeed	ffplay.c	/^static int rdftspeed=20;$/;"	v	file:
rdt_free_context	libavformat/rdt.c	/^rdt_free_context (PayloadContext *rdt)$/;"	f	file:
rdt_load_mdpr	libavformat/rdt.c	/^rdt_load_mdpr (PayloadContext *rdt, AVStream *st, int rule_nr)$/;"	f	file:
rdt_new_context	libavformat/rdt.c	/^rdt_new_context (void)$/;"	f	file:
rdt_parse_b64buf	libavformat/rdt.c	/^rdt_parse_b64buf (unsigned int *target_len, const char *p)$/;"	f	file:
rdt_parse_packet	libavformat/rdt.c	/^rdt_parse_packet (AVFormatContext *ctx, PayloadContext *rdt, AVStream *st,$/;"	f	file:
rdt_parse_sdp_line	libavformat/rdt.c	/^rdt_parse_sdp_line (AVFormatContext *s, int st_index,$/;"	f	file:
rdvo_offset	libavformat/r3d.c	/^    unsigned rdvo_offset;$/;"	m	struct:__anon486	file:
re	libavcodec/avfft.h	/^    FFTSample re, im;$/;"	m	struct:FFTComplex
re	libavcodec/fft-test.c	/^    float re, im;$/;"	m	struct:__anon275	file:
re	libavcodec/fft.h	/^    FFTDouble re, im;$/;"	m	struct:FFTDComplex
re	libavcodec/fft.h	/^    int16_t re, im;$/;"	m	struct:FFTComplex
re	libavcodec/qdm2.c	/^    float re;$/;"	m	struct:__anon196	file:
read	libavformat/avisynth.c	/^  DWORD read;$/;"	m	struct:__anon474	file:
read	libavformat/mxfdec.c	/^    MXFMetadataReadFunc *read;$/;"	m	struct:__anon448	file:
read32	libavcodec/dpx.c	/^static unsigned int read32(const uint8_t **ptr, int is_big)$/;"	f	file:
readAndTranspose16x6	libavcodec/ppc/h264_altivec.c	622;"	d	file:
readQuantSpectralCoeffs	libavcodec/atrac3.c	/^static void readQuantSpectralCoeffs (GetBitContext *gb, int selector, int codingFlag, int* mantissas, int numCodes)$/;"	f	file:
read_access_unit	libavcodec/mlpdec.c	/^static int read_access_unit(AVCodecContext *avctx, void* data, int *data_size,$/;"	f	file:
read_and_decode_spectrum	libavcodec/twinvq.c	/^static void read_and_decode_spectrum(TwinContext *tctx, GetBitContext *gb,$/;"	f	file:
read_arbitary	libavformat/electronicarts.c	/^static uint32_t read_arbitary(AVIOContext *pb) {$/;"	f	file:
read_atom	libavformat/r3d.c	/^static int read_atom(AVFormatContext *s, Atom *atom)$/;"	f	file:
read_audio_mux_element	libavcodec/aacdec.c	/^static int read_audio_mux_element(struct LATMContext *latmctx,$/;"	f	file:
read_block	libavcodec/alsdec.c	/^static int read_block(ALSDecContext *ctx, ALSBlockData *bd)$/;"	f	file:
read_block_data	libavcodec/mlpdec.c	/^static int read_block_data(MLPDecodeContext *m, GetBitContext *gbp,$/;"	f	file:
read_block_types	libavcodec/bink.c	/^static int read_block_types(AVCodecContext *avctx, GetBitContext *gb, Bundle *b)$/;"	f	file:
read_braindead_odml_indx	libavformat/avidec.c	/^static int read_braindead_odml_indx(AVFormatContext *s, int frame_num){$/;"	f	file:
read_buf_index	libavformat/rtpdec.h	/^    int read_buf_index;$/;"	m	struct:RTPDemuxContext
read_buf_size	libavformat/rtpdec.h	/^    int read_buf_size;$/;"	m	struct:RTPDemuxContext
read_buffer	libavformat/applehttp.c	/^    uint8_t* read_buffer;$/;"	m	struct:variant	file:
read_bundle	libavcodec/bink.c	/^static void read_bundle(GetBitContext *gb, BinkContext *c, int bundle_num)$/;"	f	file:
read_channel_data	libavcodec/alsdec.c	/^static int read_channel_data(ALSDecContext *ctx, ALSChannelData *cd, int c)$/;"	f	file:
read_channel_params	libavcodec/mlpdec.c	/^static int read_channel_params(MLPDecodeContext *m, unsigned int substr,$/;"	f	file:
read_chapter	libavformat/ffmetadec.c	/^static AVChapter *read_chapter(AVFormatContext *s)$/;"	f	file:
read_chomp_line	libavformat/applehttp.c	/^static int read_chomp_line(AVIOContext *s, char *buf, int maxlen)$/;"	f	file:
read_chomp_line	libavformat/applehttpproto.c	/^static int read_chomp_line(AVIOContext *s, char *buf, int maxlen)$/;"	f	file:
read_close	libavformat/assdec.c	/^static int read_close(AVFormatContext *s)$/;"	f	file:
read_close	libavformat/avformat.h	/^    int (*read_close)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_close	libavformat/wtvdec.c	/^static int read_close(AVFormatContext *s)$/;"	f	file:
read_colors	libavcodec/bink.c	/^static int read_colors(GetBitContext *gb, Bundle *b, BinkContext *c)$/;"	f	file:
read_const_block_data	libavcodec/alsdec.c	/^static void read_const_block_data(ALSDecContext *ctx, ALSBlockData *bd)$/;"	f	file:
read_data	libavformat/applehttp.c	/^static int read_data(void *opaque, uint8_t *buf, int buf_size)$/;"	f	file:
read_data_packet	libavformat/mmsh.c	/^static int read_data_packet(MMSHContext *mmsh, const int len)$/;"	f	file:
read_dcs	libavcodec/bink.c	/^static int read_dcs(AVCodecContext *avctx, GetBitContext *gb, Bundle *b,$/;"	f	file:
read_dct_coeffs	libavcodec/bink.c	/^static int read_dct_coeffs(GetBitContext *gb, DCTELEM block[64], const uint8_t *scan,$/;"	f	file:
read_decode_block	libavcodec/alsdec.c	/^static int read_decode_block(ALSDecContext *ctx, ALSBlockData *bd)$/;"	f	file:
read_decoding_params	libavcodec/mlpdec.c	/^static int read_decoding_params(MLPDecodeContext *m, GetBitContext *gbp,$/;"	f	file:
read_desc_chunk	libavformat/cafdec.c	/^static int read_desc_chunk(AVFormatContext *s)$/;"	f	file:
read_extra_header	libavcodec/ffv1.c	/^static int read_extra_header(FFV1Context *f){$/;"	f	file:
read_ffserver_streams	ffmpeg.c	/^static int read_ffserver_streams(AVFormatContext *s, const char *filename)$/;"	f	file:
read_ffserver_streams	ffmpeg/ffmpeg.c	/^static int read_ffserver_streams(AVFormatContext *s, const char *filename)$/;"	f	file:
read_file	cmdutils.c	/^int read_file(const char *filename, char **bufptr, size_t *size)$/;"	f
read_file	ffmpeg/cmdutils.c	/^int read_file(const char *filename, char **bufptr, size_t *size)$/;"	f
read_filter_params	libavcodec/mlpdec.c	/^static int read_filter_params(MLPDecodeContext *m, GetBitContext *gbp,$/;"	f	file:
read_fps	libavformat/rpl.c	/^static AVRational read_fps(const char* line, int* error)$/;"	f	file:
read_frame	libavdevice/v4l2.c	/^static int read_frame(AVFormatContext *ctx, AVPacket *pkt)$/;"	f	file:
read_frame	libavformat/bethsoftvid.c	/^static int read_frame(BVID_DemuxContext *vid, AVIOContext *pb, AVPacket *pkt,$/;"	f	file:
read_frame_data	libavcodec/alsdec.c	/^static int read_frame_data(ALSDecContext *ctx, unsigned int ra_frame)$/;"	f	file:
read_gab2_sub	libavformat/avidec.c	/^static int read_gab2_sub(AVStream *st, AVPacket *pkt) {$/;"	f	file:
read_header	libavcodec/ffv1.c	/^static int read_header(FFV1Context *f){$/;"	f	file:
read_header	libavformat/anm.c	/^static int read_header(AVFormatContext *s,$/;"	f	file:
read_header	libavformat/assdec.c	/^static int read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
read_header	libavformat/avformat.h	/^    int (*read_header)(struct AVFormatContext *,$/;"	m	struct:AVInputFormat
read_header	libavformat/bink.c	/^static int read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
read_header	libavformat/c93.c	/^static int read_header(AVFormatContext *s,$/;"	f	file:
read_header	libavformat/cafdec.c	/^static int read_header(AVFormatContext *s,$/;"	f	file:
read_header	libavformat/cdg.c	/^static int read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
read_header	libavformat/ffmetadec.c	/^static int read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
read_header	libavformat/filmstripdec.c	/^static int read_header(AVFormatContext *s,$/;"	f	file:
read_header	libavformat/img2.c	/^static int read_header(AVFormatContext *s1, AVFormatParameters *ap)$/;"	f	file:
read_header	libavformat/iv8.c	/^static int read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
read_header	libavformat/ivfdec.c	/^static int read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
read_header	libavformat/jvdec.c	/^static int read_header(AVFormatContext *s,$/;"	f	file:
read_header	libavformat/mm.c	/^static int read_header(AVFormatContext *s,$/;"	f	file:
read_header	libavformat/mvi.c	/^static int read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
read_header	libavformat/tty.c	/^static int read_header(AVFormatContext *avctx,$/;"	f	file:
read_header	libavformat/wtvdec.c	/^static int read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
read_huff_channels	libavcodec/mlpdec.c	/^static inline int read_huff_channels(MLPDecodeContext *m, GetBitContext *gbp,$/;"	f	file:
read_huffman_tables	libavcodec/4xm.c	/^static const uint8_t *read_huffman_tables(FourXContext *f, const uint8_t * const buf, int buf_size){$/;"	f	file:
read_huffman_tables	libavcodec/huffyuv.c	/^static int read_huffman_tables(HYuvContext *s, const uint8_t *src, int length){$/;"	f	file:
read_huffman_tree	libavcodec/vp3.c	/^static int read_huffman_tree(AVCodecContext *avctx, GetBitContext *gb)$/;"	f	file:
read_in_ptr	libavformat/mms.h	/^    uint8_t *read_in_ptr;                \/\/\/< Pointer for reading from incoming buffer.$/;"	m	struct:__anon455
read_info_chunk	libavformat/cafdec.c	/^static void read_info_chunk(AVFormatContext *s, int64_t size)$/;"	f	file:
read_init	libavdevice/v4l2.c	/^static int read_init(AVFormatContext *ctx)$/;"	f	file:
read_int	libavformat/rpl.c	/^static int32_t read_int(const char* line, const char** endptr, int* error)$/;"	f	file:
read_ints	libavformat/wtvdec.c	/^static int read_ints(AVIOContext *pb, uint32_t *data, int count)$/;"	f	file:
read_key	ffmpeg.c	/^static int read_key(void)$/;"	f	file:
read_key	ffmpeg/ffmpeg.c	/^static int read_key(void)$/;"	f	file:
read_kuki_chunk	libavformat/cafdec.c	/^static int read_kuki_chunk(AVFormatContext *s, int64_t size)$/;"	f	file:
read_len_table	libavcodec/huffyuv.c	/^static int read_len_table(uint8_t *dst, GetBitContext *gb){$/;"	f	file:
read_line	libavformat/rpl.c	/^static int read_line(AVIOContext * pb, char* line, int bufsize)$/;"	f	file:
read_line_and_int	libavformat/rpl.c	/^static int32_t read_line_and_int(AVIOContext * pb, int* error)$/;"	f	file:
read_major_sync	libavcodec/mlpdec.c	/^static int read_major_sync(MLPDecodeContext *m, GetBitContext *gb)$/;"	f	file:
read_matrix_params	libavcodec/mlpdec.c	/^static int read_matrix_params(MLPDecodeContext *m, unsigned int substr, GetBitContext *gbp)$/;"	f	file:
read_motion_values	libavcodec/bink.c	/^static int read_motion_values(AVCodecContext *avctx, GetBitContext *gb, Bundle *b)$/;"	f	file:
read_mv_component	libavcodec/vp8.c	/^static int read_mv_component(VP56RangeCoder *c, const uint8_t *p)$/;"	f	file:
read_offs	libavcodec/mjpegbdec.c	/^static uint32_t read_offs(AVCodecContext *avctx, GetBitContext *gb, uint32_t size, const char *err_msg){$/;"	f	file:
read_old_huffman_tables	libavcodec/huffyuv.c	/^static int read_old_huffman_tables(HYuvContext *s){$/;"	f	file:
read_packet	libavformat/anm.c	/^static int read_packet(AVFormatContext *s,$/;"	f	file:
read_packet	libavformat/assdec.c	/^static int read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
read_packet	libavformat/avformat.h	/^    int (*read_packet)(struct AVFormatContext *, AVPacket *pkt);$/;"	m	struct:AVInputFormat
read_packet	libavformat/avio.h	/^    int (*read_packet)(void *opaque, uint8_t *buf, int buf_size);$/;"	m	struct:__anon396
read_packet	libavformat/bink.c	/^static int read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
read_packet	libavformat/c93.c	/^static int read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
read_packet	libavformat/cafdec.c	/^static int read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
read_packet	libavformat/cdg.c	/^static int read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
read_packet	libavformat/ffmetadec.c	/^static int read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
read_packet	libavformat/filmstripdec.c	/^static int read_packet(AVFormatContext *s,$/;"	f	file:
read_packet	libavformat/img2.c	/^static int read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
read_packet	libavformat/iv8.c	/^static int read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
read_packet	libavformat/ivfdec.c	/^static int read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
read_packet	libavformat/jvdec.c	/^static int read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
read_packet	libavformat/mm.c	/^static int read_packet(AVFormatContext *s,$/;"	f	file:
read_packet	libavformat/mpegts.c	/^static int read_packet(AVFormatContext *s, uint8_t *buf, int raw_packet_size)$/;"	f	file:
read_packet	libavformat/mvi.c	/^static int read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
read_packet	libavformat/tty.c	/^static int read_packet(AVFormatContext *avctx, AVPacket *pkt)$/;"	f	file:
read_packet	libavformat/wtvdec.c	/^static int read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
read_pakt_chunk	libavformat/cafdec.c	/^static int read_pakt_chunk(AVFormatContext *s, int64_t size)$/;"	f	file:
read_part_of_packet	libavformat/pva.c	/^static int read_part_of_packet(AVFormatContext *s, int64_t *pts,$/;"	f	file:
read_patterns	libavcodec/bink.c	/^static int read_patterns(AVCodecContext *avctx, GetBitContext *gb, Bundle *b)$/;"	f	file:
read_pause	libavformat/avformat.h	/^    int (*read_pause)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_pause	libavformat/avio.h	/^    int (*read_pause)(void *opaque, int pause);$/;"	m	struct:__anon396
read_pause_return	ffplay.c	/^    int read_pause_return;$/;"	m	struct:VideoState	file:
read_payload_length_info	libavcodec/aacdec.c	/^static int read_payload_length_info(struct LATMContext *ctx, GetBitContext *gb)$/;"	f	file:
read_play	libavformat/avformat.h	/^    int (*read_play)(struct AVFormatContext *);$/;"	m	struct:AVInputFormat
read_probe	libavformat/avformat.h	/^    int (*read_probe)(AVProbeData *);$/;"	m	struct:AVInputFormat
read_probe	libavformat/img2.c	/^static int read_probe(AVProbeData *p)$/;"	f	file:
read_probe	libavformat/jvdec.c	/^static int read_probe(AVProbeData *pd)$/;"	f	file:
read_probe	libavformat/wtvdec.c	/^static int read_probe(AVProbeData *p)$/;"	f	file:
read_quant_table	libavcodec/ffv1.c	/^static int read_quant_table(RangeCoder *c, int16_t *quant_table, int scale){$/;"	f	file:
read_quant_tables	libavcodec/ffv1.c	/^static int read_quant_tables(RangeCoder *c, int16_t quant_table[MAX_CONTEXT_INPUTS][256]){$/;"	f	file:
read_random	libavutil/random_seed.c	/^static int read_random(uint32_t *dst, const char *file)$/;"	f	file:
read_residue	libavcodec/bink.c	/^static int read_residue(GetBitContext *gb, DCTELEM block[64], int masks_count)$/;"	f	file:
read_restart_header	libavcodec/mlpdec.c	/^static int read_restart_header(MLPDecodeContext *m, GetBitContext *gbp,$/;"	f	file:
read_rle_sgi	libavcodec/sgidec.c	/^static int read_rle_sgi(unsigned char* out_buf, const uint8_t *in_buf,$/;"	f	file:
read_runs	libavcodec/bink.c	/^static int read_runs(AVCodecContext *avctx, GetBitContext *gb, Bundle *b)$/;"	f	file:
read_sbr_channel_pair_element	libavcodec/aacsbr.c	/^static int read_sbr_channel_pair_element(AACContext *ac,$/;"	f	file:
read_sbr_data	libavcodec/aacsbr.c	/^static unsigned int read_sbr_data(AACContext *ac, SpectralBandReplication *sbr,$/;"	f	file:
read_sbr_dtdf	libavcodec/aacsbr.c	/^static void read_sbr_dtdf(SpectralBandReplication *sbr, GetBitContext *gb,$/;"	f	file:
read_sbr_envelope	libavcodec/aacsbr.c	/^static void read_sbr_envelope(SpectralBandReplication *sbr, GetBitContext *gb,$/;"	f	file:
read_sbr_extension	libavcodec/aacsbr.c	/^static void read_sbr_extension(AACContext *ac, SpectralBandReplication *sbr,$/;"	f	file:
read_sbr_grid	libavcodec/aacsbr.c	/^static int read_sbr_grid(AACContext *ac, SpectralBandReplication *sbr,$/;"	f	file:
read_sbr_header	libavcodec/aacsbr.c	/^static unsigned int read_sbr_header(SpectralBandReplication *sbr, GetBitContext *gb)$/;"	f	file:
read_sbr_invf	libavcodec/aacsbr.c	/^static void read_sbr_invf(SpectralBandReplication *sbr, GetBitContext *gb,$/;"	f	file:
read_sbr_noise	libavcodec/aacsbr.c	/^static void read_sbr_noise(SpectralBandReplication *sbr, GetBitContext *gb,$/;"	f	file:
read_sbr_single_channel_element	libavcodec/aacsbr.c	/^static int read_sbr_single_channel_element(AACContext *ac,$/;"	f	file:
read_seek	libavformat/avformat.h	/^    attribute_deprecated int (*read_seek)(struct AVFormatContext *,$/;"	m	struct:AVInputFormat
read_seek	libavformat/avio.h	/^    int64_t (*read_seek)(void *opaque, int stream_index,$/;"	m	struct:__anon396
read_seek	libavformat/bink.c	/^static int read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
read_seek	libavformat/cafdec.c	/^static int read_seek(AVFormatContext *s, int stream_index,$/;"	f	file:
read_seek	libavformat/filmstripdec.c	/^static int read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
read_seek	libavformat/jvdec.c	/^static int read_seek(AVFormatContext *s, int stream_index,$/;"	f	file:
read_seek	libavformat/mpegts.c	/^static int read_seek(AVFormatContext *s, int stream_index, int64_t target_ts, int flags)$/;"	f	file:
read_seek	libavformat/mpegts.c	/^static int read_seek(AVFormatContext *s, int stream_index, int64_t target_ts, int flags){$/;"	f	file:
read_seek	libavformat/nutdec.c	/^static int read_seek(AVFormatContext *s, int stream_index, int64_t pts, int flags){$/;"	f	file:
read_seek	libavformat/wtvdec.c	/^static int read_seek(AVFormatContext *s, int stream_index,$/;"	f	file:
read_seek2	libavformat/assdec.c	/^static int read_seek2(AVFormatContext *s, int stream_index,$/;"	f	file:
read_seek2	libavformat/avformat.h	/^    int (*read_seek2)(struct AVFormatContext *s, int stream_index, int64_t min_ts, int64_t ts, int64_t max_ts, int flags);$/;"	m	struct:AVInputFormat
read_seek2	libavformat/mpegts.c	/^static int read_seek2(AVFormatContext *s,$/;"	f	file:
read_shape_from_file	libavfilter/vf_libopencv.c	/^static int read_shape_from_file(int *cols, int *rows, int **values, const char *filename,$/;"	f	file:
read_specific_config	libavcodec/alsdec.c	/^static av_cold int read_specific_config(ALSDecContext *ctx)$/;"	f	file:
read_state	libavformat/ffm.h	/^    int read_state;$/;"	m	struct:FFMContext
read_stream_mux_config	libavcodec/aacdec.c	/^static int read_stream_mux_config(struct LATMContext *latmctx,$/;"	f	file:
read_table	libavcodec/mace.c	/^static int16_t read_table(ChannelData *chd, uint8_t val, int tab_idx)$/;"	f	file:
read_tag	libavformat/ffmetadec.c	/^static int read_tag(uint8_t *line, AVDictionary **m)$/;"	f	file:
read_thread	ffplay.c	/^static int read_thread(void *arg)$/;"	f	file:
read_tid	ffplay.c	/^    SDL_Thread *read_tid;$/;"	m	struct:VideoState	file:
read_time	libavutil/arm/timer.h	/^static inline uint64_t read_time(void)$/;"	f
read_time	libavutil/bfin/timer.h	/^static inline uint64_t read_time(void)$/;"	f
read_time	libavutil/ppc/timer.h	/^static inline uint64_t read_time(void)$/;"	f
read_time	libavutil/x86/timer.h	/^static inline uint64_t read_time(void)$/;"	f
read_timestamp	libavformat/avformat.h	/^    int64_t (*read_timestamp)(struct AVFormatContext *s, int stream_index,$/;"	m	struct:AVInputFormat
read_tree	libavcodec/bink.c	/^static void read_tree(GetBitContext *gb, Tree *tree)$/;"	f	file:
read_ts	libavcodec/srtdec.c	/^static const char *read_ts(const char *buf, int *ts_start, int *ts_end,$/;"	f	file:
read_ttag	libavformat/id3v2.c	/^static void read_ttag(AVFormatContext *s, AVIOContext *pb, int taglen, const char *key)$/;"	f	file:
read_uint_max	libavcodec/sonic.c	/^static unsigned int read_uint_max(GetBitContext *gb, int max)$/;"	f	file:
read_uncompressed_sgi	libavcodec/sgidec.c	/^static int read_uncompressed_sgi(unsigned char* out_buf, uint8_t* out_end,$/;"	f	file:
read_var_block_data	libavcodec/alsdec.c	/^static int read_var_block_data(ALSDecContext *ctx, ALSBlockData *bd)$/;"	f	file:
read_yesno	cmdutils.c	/^int read_yesno(void)$/;"	f
read_yesno	ffmpeg/cmdutils.c	/^int read_yesno(void)$/;"	f
readonly	ffserver.c	/^    int readonly;        \/* True if writing is prohibited to the file *\/$/;"	m	struct:FFStream	file:
readvid	libavformat/dxa.c	/^    int readvid;$/;"	m	struct:__anon330	file:
ready_codebook	libavcodec/vorbisenc.c	/^static void ready_codebook(vorbis_enc_codebook *cb)$/;"	f	file:
ready_residue	libavcodec/vorbisenc.c	/^static void ready_residue(vorbis_enc_residue *rc, vorbis_enc_context *venc)$/;"	f	file:
real_challenge	libavformat/rtsp.h	/^    char real_challenge[64];$/;"	m	struct:RTSPMessageHeader
real_challenge	libavformat/rtsp.h	/^    char real_challenge[64];$/;"	m	struct:RTSPState
real_len	libavcodec/vorbis_enc_data.h	/^    int real_len;$/;"	m	struct:__anon273
real_parse_asm_rule	libavformat/rdt.c	/^real_parse_asm_rule(AVStream *st, const char *p, const char *end)$/;"	f	file:
real_parse_asm_rulebook	libavformat/rdt.c	/^real_parse_asm_rulebook(AVFormatContext *s, AVStream *orig_st,$/;"	f	file:
real_setup	libavformat/rtsp.h	/^    enum AVDiscard *real_setup;$/;"	m	struct:RTSPState	typeref:enum:RTSPState::AVDiscard
real_setup_cache	libavformat/rtsp.h	/^    enum AVDiscard *real_setup_cache;$/;"	m	struct:RTSPState	typeref:enum:RTSPState::AVDiscard
real_sprite_warping_points	libavcodec/mpegvideo.h	/^    int real_sprite_warping_points;$/;"	m	struct:MpegEncContext
realloc	libavfilter/libmpcodecs/mp_image.h	30;"	d
realloc	libavutil/internal.h	133;"	d
realloc	libavutil/internal.h	134;"	d
realloc	libavutil/mem.c	44;"	d	file:
realloc	libavutil/mem.c	51;"	d	file:
reallocAlign	libpostproc/postprocess.c	/^static void reallocAlign(void **p, int alignment, int size){$/;"	f	file:
reallocBuffers	libpostproc/postprocess.c	/^static void reallocBuffers(PPContext *c, int width, int height, int stride, int qpStride){$/;"	f	file:
realloc_section_array	libavcodec/ass_split.c	/^static uint8_t *realloc_section_array(ASSSplitContext *ctx)$/;"	f	file:
realm	libavformat/httpauth.h	/^    char realm[200];$/;"	m	struct:__anon405
rearrange_lsp	libavcodec/twinvq.c	/^static void rearrange_lsp(int order, float *lsp, float min_dist)$/;"	f	file:
reason	libavformat/rtsp.h	/^    char reason[256];$/;"	m	struct:RTSPMessageHeader
receive_frame	libavcodec/crystalhd.c	/^static inline CopyRet receive_frame(AVCodecContext *avctx,$/;"	f	file:
received	libavformat/rtpdec.h	/^    int received;               \/\/\/< packets received$/;"	m	struct:__anon333
received_prior	libavformat/rtpdec.h	/^    int received_prior;         \/\/\/< packets received in last interval$/;"	m	struct:__anon333
received_sigterm	ffmpeg.c	/^static volatile int received_sigterm = 0;$/;"	v	file:
received_sigterm	ffmpeg/ffmpeg.c	/^static volatile int received_sigterm = 0;$/;"	v	file:
recheck_discard_flags	libavformat/applehttp.c	/^static int recheck_discard_flags(AVFormatContext *s, int first)$/;"	f	file:
recode	libavcodec/truemotion2.c	/^    int *recode; \/\/\/< table for converting from code indexes to values$/;"	m	struct:TM2Codes	file:
recode1	libavcodec/smacker.c	/^    int *recode1, *recode2;$/;"	m	struct:DBCtx	file:
recode2	libavcodec/smacker.c	/^    int *recode1, *recode2;$/;"	m	struct:DBCtx	file:
recommend_keyframe	libavcodec/flashsv2enc.c	/^static void recommend_keyframe(FlashSV2Context * s, int *keyframe)$/;"	f	file:
reconfigure_at_keyframe	libavcodec/flashsv2enc.c	/^static int reconfigure_at_keyframe(FlashSV2Context * s, const uint8_t * image,$/;"	f	file:
reconstruct_and_encode_image	libavcodec/roqvideoenc.c	/^static void reconstruct_and_encode_image(RoqContext *enc, RoqTempdata *tempData, int w, int h, int numBlocks)$/;"	f	file:
reconstruct_stereo_16	libavcodec/alac.c	/^static void reconstruct_stereo_16(int32_t *buffer[MAX_CHANNELS],$/;"	f	file:
record	libavformat/anm.c	/^    int record;               \/**< current record (with in page) *\/$/;"	m	struct:__anon435	file:
recording_time	ffmpeg.c	/^static int64_t recording_time = INT64_MAX;$/;"	v	file:
recording_time	ffmpeg/ffmpeg.c	/^static int64_t recording_time = INT64_MAX;$/;"	v	file:
recording_timestamp	ffmpeg.c	/^static int64_t recording_timestamp = 0;$/;"	v	file:
recording_timestamp	ffmpeg/ffmpeg.c	/^static int64_t recording_timestamp = 0;$/;"	v	file:
rects	libavcodec/avcodec.h	/^    AVSubtitleRect **rects;$/;"	m	struct:AVSubtitle
recvbuf	libavformat/rtsp.h	/^    uint8_t* recvbuf;$/;"	m	struct:RTSPState
recvtime	libavformat/rtpdec.h	/^    int64_t recvtime;$/;"	m	struct:RTPPacket
red_offset	libavdevice/fbdev.c	/^    int red_offset, green_offset, blue_offset, alpha_offset;$/;"	m	struct:rgb_pixfmt_map_entry	file:
redblueMask	libavfilter/libmpcodecs/vf_2xsai.c	/^static uint32_t redblueMask = 0xF81F;$/;"	v	file:
reduced_res_vop	libavcodec/mpegvideo.h	/^    int reduced_res_vop;$/;"	m	struct:MpegEncContext
redundant_pic_cnt_present	libavcodec/h264.h	/^    int redundant_pic_cnt_present; \/\/\/< redundant_pic_cnt_present_flag$/;"	m	struct:PPS
redundant_pic_count	libavcodec/h264.h	/^    int redundant_pic_count;$/;"	m	struct:H264Context
ref	libavcodec/dct-test.c	/^  void (* ref)  (DCTELEM *block);$/;"	m	struct:algo	file:
ref	libavcodec/mpegvideo.h	/^    uint8_t *ref[4][4];$/;"	m	struct:MotionEstContext
ref	libavcodec/qpeg.c	/^    AVFrame pic, ref;$/;"	m	struct:QpegContext	file:
ref	libavcodec/snow.c	/^    uint8_t ref;$/;"	m	struct:BlockNode	file:
ref	libavcodec/vp8.h	/^        int8_t ref[4];$/;"	m	struct:__anon182::__anon186
ref	libavdevice/dshow.h	/^    long ref;$/;"	m	struct:libAVEnumMediaTypes
ref	libavdevice/dshow.h	/^    long ref;$/;"	m	struct:libAVEnumPins
ref	libavdevice/dshow.h	/^    long ref;$/;"	m	struct:libAVFilter
ref	libavdevice/dshow.h	/^    long ref;$/;"	m	struct:libAVPin
ref	libavfilter/libmpcodecs/vf_perspective.c	/^    double ref[4][2];$/;"	m	struct:vf_priv_s	file:
ref2_buf	libavcodec/indeo5.c	/^    int             ref2_buf;        \/\/\/< temporal storage for switching buffers$/;"	m	struct:__anon203	file:
ref2frm	libavcodec/h264.h	/^    int ref2frm[MAX_SLICES][2][64];  \/\/\/< reference to frame number lists, used in the loop filter, the first 2 are for -2,-1$/;"	m	struct:H264Context
ref_bap	libavcodec/ac3enc.h	/^    uint8_t *ref_bap     [AC3_MAX_CHANNELS][AC3_MAX_BLOCKS]; \/\/\/< bit allocation pointers (bap)$/;"	m	struct:AC3EncodeContext
ref_bap_set	libavcodec/ac3enc.h	/^    int ref_bap_set;                                         \/\/\/< indicates if ref_bap pointers have been set$/;"	m	struct:AC3EncodeContext
ref_buf	libavcodec/gsmdec_data.h	/^    int16_t ref_buf[280];$/;"	m	struct:__anon67
ref_buf	libavcodec/indeo5.c	/^    int             ref_buf;         \/\/\/< inter frame reference buffer index$/;"	m	struct:__anon203	file:
ref_buf	libavcodec/ivi_common.h	/^    int16_t         *ref_buf;       \/\/\/< pointer to the reference frame buffer (for motion compensation)$/;"	m	struct:__anon107
ref_count	libavcodec/h264.h	/^    unsigned int ref_count[2];   \/\/\/< counts frames or fields, depending on current mb mode$/;"	m	struct:H264Context
ref_count	libavcodec/h264.h	/^    unsigned int ref_count[2];  \/\/\/< num_ref_idx_l0\/1_active_minus1 + 1$/;"	m	struct:PPS
ref_count	libavcodec/mpegvideo.h	/^    int ref_count[2][2];        \/\/\/< number of entries in ref_poc              (FIXME need per slice)$/;"	m	struct:Picture
ref_count	libavcodec/vp8.h	/^    int ref_count[3];$/;"	m	struct:__anon182
ref_flag	libavcodec/cavs.h	/^    int ref_flag;$/;"	m	struct:__anon207
ref_frame	libavcodec/indeo3.c	/^    YUVBufs *ref_frame;$/;"	m	struct:Indeo3DecodeContext	file:
ref_frame	libavcodec/vp56.h	/^    VP56Frame ref_frame;$/;"	m	struct:__anon221
ref_frame	libavcodec/vp8.h	/^    uint8_t ref_frame;$/;"	m	struct:__anon181
ref_frame_count	libavcodec/h264.h	/^    int ref_frame_count;               \/\/\/< num_ref_frames$/;"	m	struct:SPS
ref_frames	libavcodec/snow.c	/^    int ref_frames;$/;"	m	struct:SnowContext	file:
ref_list	libavcodec/h264.h	/^    Picture ref_list[2][48];         \/**< 0..15: frame refs, 16..47: mbaff field refs.$/;"	m	struct:H264Context
ref_mbs	libavcodec/ivi_common.h	/^    IVIMbInfo   *ref_mbs;  \/\/\/< ptr to the macroblock descriptors of the reference tile$/;"	m	struct:__anon106
ref_mvs	libavcodec/snow.c	/^    int16_t (*ref_mvs[MAX_REF_FRAMES])[2];$/;"	m	struct:SnowContext	file:
ref_poc	libavcodec/mpegvideo.h	/^    int ref_poc[2][2][32];      \/\/\/< h264 POCs of the frames\/fields used as reference (FIXME need per slice)$/;"	m	struct:Picture
ref_scores	libavcodec/snow.c	/^    uint32_t *ref_scores[MAX_REF_FRAMES];$/;"	m	struct:SnowContext	file:
ref_to_update	libavcodec/vp8.c	/^static VP56Frame ref_to_update(VP8Context *s, int update, VP56Frame ref)$/;"	f	file:
refcount	libavfilter/avfilter.h	/^    unsigned refcount;          \/\/\/< number of references to this buffer$/;"	m	struct:AVFilterBuffer
refcount	libavfilter/avfilter.h	/^    unsigned refcount;          \/\/\/< number of references to this list$/;"	m	struct:AVFilterFormats
refdist_flag	libavcodec/vc1.h	/^    int refdist_flag;     \/\/\/< REFDIST syntax element present in II, IP, PI or PP field picture headers$/;"	m	struct:VC1Context
reference	libavformat/matroskadec.c	/^    int64_t  reference;$/;"	m	struct:__anon372	file:
reference_dts	libavformat/avformat.h	/^    int64_t reference_dts;$/;"	m	struct:AVStream
reference_dts	libavformat/seek.h	/^    int64_t                 reference_dts;$/;"	m	struct:AVParserStreamState
refill	libavcodec/cabac.h	/^static void refill(CABACContext *c){$/;"	f
refill	libavcodec/rangecoder.h	/^static inline void refill(RangeCoder *c){$/;"	f
refill2	libavcodec/cabac.h	/^static void refill2(CABACContext *c){$/;"	f
reformat_ctx	ffmpeg.c	/^    AVAudioConvert *reformat_ctx;$/;"	m	struct:AVOutputStream	file:
reformat_ctx	ffmpeg/ffmpeg.c	/^    AVAudioConvert *reformat_ctx;$/;"	m	struct:AVOutputStream	file:
reformat_ctx	ffplay.c	/^    AVAudioConvert *reformat_ctx;$/;"	m	struct:VideoState	file:
reformat_pair	ffmpeg.c	/^    int reformat_pair;$/;"	m	struct:AVOutputStream	file:
reformat_pair	ffmpeg/ffmpeg.c	/^    int reformat_pair;$/;"	m	struct:AVOutputStream	file:
refresh	ffplay.c	/^    int refresh;$/;"	m	struct:VideoState	file:
refresh_thread	ffplay.c	/^static int refresh_thread(void *opaque)$/;"	f	file:
refresh_tid	ffplay.c	/^    SDL_Thread *refresh_tid;$/;"	m	struct:VideoState	file:
refs	libavcodec/avcodec.h	/^    int refs;$/;"	m	struct:AVCodecContext
refs	libavfilter/avfilter.h	/^    struct AVFilterFormats ***refs; \/\/\/< references to this list$/;"	m	struct:AVFilterFormats	typeref:struct:AVFilterFormats::AVFilterFormats
reget_buffer	libavcodec/avcodec.h	/^    int (*reget_buffer)(struct AVCodecContext *c, AVFrame *pic);$/;"	m	struct:AVCodecContext
region_id	libavcodec/dvbsubdec.c	/^    int region_id;$/;"	m	struct:DVBSubObjectDisplay	file:
region_id	libavcodec/dvbsubdec.c	/^    int region_id;$/;"	m	struct:DVBSubRegionDisplay	file:
region_list	libavcodec/dvbsubdec.c	/^    DVBSubRegion *region_list;$/;"	m	struct:DVBSubContext	file:
region_list_next	libavcodec/dvbsubdec.c	/^    struct DVBSubObjectDisplay *region_list_next;$/;"	m	struct:DVBSubObjectDisplay	typeref:struct:DVBSubObjectDisplay::DVBSubObjectDisplay	file:
region_size	libavcodec/mpegaudiodec.c	/^    int region_size[3]; \/* number of huffman codes in each region *\/$/;"	m	struct:GranuleDef	file:
registered_avfilters	libavfilter/avfilter.c	/^static AVFilter *registered_avfilters[MAX_REGISTERED_AVFILTERS_NB + 1];$/;"	v	file:
regtest	tests/fate-run.sh	/^regtest(){$/;"	f
reinit	libavcodec/j2kenc.c	/^static void reinit(J2kEncoderContext *s)$/;"	f	file:
rej_perms	libavfilter/avfilter.h	/^    int rej_perms;$/;"	m	struct:AVFilterPad
release_buffer	libavcodec/avcodec.h	/^    void (*release_buffer)(struct AVCodecContext *c, AVFrame *pic);$/;"	m	struct:AVCodecContext
release_buffer	libavcodec/snow.c	/^static void release_buffer(AVCodecContext *avctx){$/;"	f	file:
release_delayed_buffers	libavcodec/pthread.c	/^static void release_delayed_buffers(PerThreadContext *p)$/;"	f	file:
released_buffers	libavcodec/pthread.c	/^    AVFrame released_buffers[MAX_BUFFERS];$/;"	m	struct:PerThreadContext	file:
rem6	libavcodec/h264.c	/^static const uint8_t rem6[QP_MAX_NUM+1]={$/;"	v	file:
remain_packet_size	libavformat/bink.c	/^    uint32_t remain_packet_size;$/;"	m	struct:__anon403	file:
remaining	libavformat/avidec.c	/^    int remaining;$/;"	m	struct:AVIStream	file:
remaining	libavformat/rtpdec_qt.c	/^    int bytes_per_frame, remaining;$/;"	m	struct:PayloadContext	file:
remaining_audio_size	libavformat/avs.c	/^    int remaining_audio_size;$/;"	m	struct:avs_format	file:
remaining_bits	libavcodec/wmaprodec.c	/^static int remaining_bits(WMAProDecodeCtx *s, GetBitContext *gb)$/;"	f	file:
remaining_bits	libavformat/vqf.c	/^    int remaining_bits;$/;"	m	struct:VqfContext	file:
remaining_frame_size	libavformat/avs.c	/^    int remaining_frame_size;$/;"	m	struct:avs_format	file:
remaining_in_len	libavformat/mms.h	/^    int remaining_in_len;                \/\/\/< Reading length from incoming buffer.$/;"	m	struct:__anon455
remaining_len	libavformat/rmdec.c	/^    int remaining_len;$/;"	m	struct:__anon436	file:
remaining_size	libavcodec/aac_ac3_parser.h	/^    int remaining_size;$/;"	m	struct:AACAC3ParseContext
remaining_size	libavformat/voc.h	/^    int64_t remaining_size;$/;"	m	struct:voc_dec_context
remap	libavcodec/msvideo1enc.c	/^static const int remap[16] = { 0, 1, 4, 5, 2, 3, 6, 7, 8, 9, 12, 13, 10, 11, 14, 15 };$/;"	v	file:
remap20	libavcodec/aacps.c	/^static void remap20(int8_t (**p_par_mapped)[PS_MAX_NR_IIDICC],$/;"	f	file:
remap34	libavcodec/aacps.c	/^static void remap34(int8_t (**p_par_mapped)[PS_MAX_NR_IIDICC],$/;"	f	file:
remap_codebooks	libavcodec/roqvideoenc.c	/^static void remap_codebooks(RoqContext *enc, RoqTempdata *tempData)$/;"	f	file:
rematrix_channels	libavcodec/mlpdec.c	/^static void rematrix_channels(MLPDecodeContext *m, unsigned int substr)$/;"	f	file:
rematrixing_enabled	libavcodec/ac3enc.h	/^    int rematrixing_enabled;                \/\/\/< stereo rematrixing enabled$/;"	m	struct:AC3EncodeContext
rematrixing_flags	libavcodec/ac3dec.h	/^    int rematrixing_flags[4];               \/\/\/< rematrixing flags                      (rematflg)$/;"	m	struct:__anon88
rematrixing_flags	libavcodec/ac3enc.h	/^    uint8_t  rematrixing_flags[4];              \/\/\/< rematrixing flags$/;"	m	struct:AC3Block
remove_decoded_packets	libavformat/mpegenc.c	/^static int remove_decoded_packets(AVFormatContext *ctx, int64_t scr){$/;"	f	file:
remove_dithering	libavcodec/ac3dec.c	/^static void remove_dithering(AC3DecodeContext *s) {$/;"	f	file:
remove_extradata	libavcodec/remove_extradata_bsf.c	/^static int remove_extradata(AVBitStreamFilterContext *bsfc, AVCodecContext *avctx, const char *args,$/;"	f	file:
remove_long	libavcodec/h264_refs.c	/^static Picture * remove_long(H264Context *h, int i, int ref_mask){$/;"	f	file:
remove_short	libavcodec/h264_refs.c	/^static Picture * remove_short(H264Context *h, int frame_num, int ref_mask){$/;"	f	file:
remove_short_at_index	libavcodec/h264_refs.c	/^static void remove_short_at_index(H264Context *h, int i){$/;"	f	file:
remove_stream	ffserver.c	/^static void remove_stream(FFStream *stream)$/;"	f	file:
render_charset	libavcodec/a64multienc.c	/^static void render_charset(AVCodecContext *avctx, uint8_t *charset,$/;"	f	file:
render_line	libavcodec/vorbis.c	/^static void render_line(int x0, int y0, int x1, int y1, float *buf)$/;"	f	file:
render_line_unrolled	libavcodec/vorbis.c	/^static inline void render_line_unrolled(intptr_t x, intptr_t y, int x1,$/;"	f	file:
render_picture	libavcodec/vaapi.c	/^static int render_picture(struct vaapi_context *vactx, VASurfaceID surface)$/;"	f	file:
render_point	libavcodec/vorbisenc.c	/^static int render_point(int x0, int y0, int x1, int y1, int x)$/;"	f	file:
render_slice	libavcodec/vp3.c	/^static void render_slice(Vp3DecodeContext *s, int slice)$/;"	f	file:
renorm_cabac_decoder	libavcodec/cabac.h	/^static inline void renorm_cabac_decoder(CABACContext *c){$/;"	f
renorm_cabac_decoder_once	libavcodec/cabac.h	/^static inline void renorm_cabac_decoder_once(CABACContext *c){$/;"	f
renorm_cabac_encoder	libavcodec/cabac.h	/^static inline void renorm_cabac_encoder(CABACContext *c){$/;"	f
renorm_encoder	libavcodec/rangecoder.h	/^static inline void renorm_encoder(RangeCoder *c){$/;"	f
renorme	libavcodec/mqcenc.c	/^static void renorme(MqcState *mqc)$/;"	f	file:
reorder_block	libavcodec/mpegaudiodec.c	/^static void reorder_block(MPADecodeContext *s, GranuleDef *g)$/;"	f	file:
reorder_buf	libavdevice/alsa-audio.h	/^    void *reorder_buf;$/;"	m	struct:__anon313
reorder_buf_size	libavdevice/alsa-audio.h	/^    int reorder_buf_size; \/\/\/< in frames$/;"	m	struct:__anon313
reorder_func	libavdevice/alsa-audio.h	/^    ff_reorder_func reorder_func;$/;"	m	struct:__anon313
reorder_pb	libavcodec/svq1enc.c	/^    PutBitContext reorder_pb[6]; \/\/why ooh why this sick breadth first order, everything is slower and more complex$/;"	m	struct:SVQ1Context	file:
reordered_input_picture	libavcodec/mpegvideo.h	/^    Picture **reordered_input_picture; \/\/\/< pointer to the next pictures in codedorder for encoding$/;"	m	struct:MpegEncContext
reordered_opaque	libavcodec/avcodec.h	/^    int64_t reordered_opaque;$/;"	m	struct:AVCodecContext
reordered_opaque	libavcodec/crystalhd.c	/^    uint64_t reordered_opaque;$/;"	m	struct:OpaqueList	file:
repeat_field	libavcodec/mpeg12.c	/^    int repeat_field; \/* true if we must repeat the field *\/$/;"	m	struct:Mpeg1Context	file:
repeat_first_field	libavcodec/mpegvideo.h	/^    int repeat_first_field;$/;"	m	struct:MpegEncContext
repeat_pict	libavcodec/avcodec.h	/^    int repeat_pict; \/* XXX: Put it back in AVCodecContext. *\/$/;"	m	struct:AVCodecParserContext
replaceTable	libpostproc/postprocess.c	/^static const char *replaceTable[]=$/;"	v	file:
report	tests/fate.sh	/^report(){$/;"	f
report_config_error	ffserver.c	/^static void report_config_error(const char *filename, int line_num, int *errors, const char *fmt, ...)$/;"	f	file:
report_id	libavcodec/dxva2.h	/^    unsigned report_id;$/;"	m	struct:dxva_context
requantize	libavfilter/libmpcodecs/vf_pp7.c	/^static int (*requantize)(DCTELEM *src, int qp)= hardthresh_c;$/;"	v	file:
requantize	libavfilter/libmpcodecs/vf_spp.c	/^static void (*requantize)(DCTELEM dst[64], DCTELEM src[64], int qp, uint8_t *permutation)= hardthresh_c;$/;"	v	file:
request_channel_layout	libavcodec/avcodec.h	/^    int64_t request_channel_layout;$/;"	m	struct:AVCodecContext
request_channels	libavcodec/avcodec.h	/^    int request_channels;$/;"	m	struct:AVCodecContext
request_frame	libavfilter/asrc_anullsrc.c	/^static int request_frame(AVFilterLink *link)$/;"	f	file:
request_frame	libavfilter/avfilter.h	/^    int (*request_frame)(AVFilterLink *link);$/;"	m	struct:AVFilterPad
request_frame	libavfilter/vf_fifo.c	/^static int request_frame(AVFilterLink *outlink)$/;"	f	file:
request_frame	libavfilter/vf_mp.c	/^static int request_frame(AVFilterLink *outlink)$/;"	f	file:
request_frame	libavfilter/vf_select.c	/^static int request_frame(AVFilterLink *outlink)$/;"	f	file:
request_frame	libavfilter/vf_yadif.c	/^static int request_frame(AVFilterLink *link)$/;"	f	file:
request_frame	libavfilter/vsrc_buffer.c	/^static int request_frame(AVFilterLink *link)$/;"	f	file:
request_frame	libavfilter/vsrc_movie.c	/^static int request_frame(AVFilterLink *outlink)$/;"	f	file:
request_frame	libavfilter/vsrc_nullsrc.c	/^static int request_frame(AVFilterLink *link)$/;"	f	file:
request_probe	libavformat/avformat.h	/^    int request_probe;$/;"	m	struct:AVStream
request_sample_fmt	libavcodec/avcodec.h	/^    enum AVSampleFormat request_sample_fmt;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVSampleFormat
request_seq	libavformat/mmsh.c	/^    int request_seq;  \/\/\/< request packet sequence$/;"	m	struct:__anon497	file:
requested_frame	libavcodec/pthread.c	/^    AVFrame *requested_frame;       \/\/\/< AVFrame the codec passed to get_buffer()$/;"	m	struct:PerThreadContext	file:
require	configure	/^require(){$/;"	f
require2	configure	/^require2(){$/;"	f
require_pkg_config	configure	/^require_pkg_config(){$/;"	f
res	libavcodec/mpc.h	/^    int res[2];$/;"	m	struct:__anon178
res_fasttx	libavcodec/vc1.h	/^    int res_fasttx;       \/\/\/< reserved, always 1$/;"	m	struct:VC1Context
res_rtm_flag	libavcodec/vc1.h	/^    int res_rtm_flag;     \/\/\/< reserved, set to 1$/;"	m	struct:VC1Context
res_sprite	libavcodec/vc1.h	/^    int res_sprite;       \/\/\/< reserved, sprite mode$/;"	m	struct:VC1Context
res_transtab	libavcodec/vc1.h	/^    int res_transtab;     \/\/\/< reserved, always 0$/;"	m	struct:VC1Context
res_vlc	libavcodec/mpc8.c	/^static VLC band_vlc, scfi_vlc[2], dscf_vlc[2], res_vlc[2];$/;"	v	file:
res_x8	libavcodec/vc1.h	/^    int res_x8;           \/\/\/< reserved$/;"	m	struct:VC1Context
res_y411	libavcodec/vc1.h	/^    int res_y411;         \/\/\/< reserved, old interlaced mode$/;"	m	struct:VC1Context
resample	ffmpeg.c	/^    ReSampleContext *resample; \/* for audio resampling *\/$/;"	m	struct:AVOutputStream	file:
resample	ffmpeg/ffmpeg.c	/^    ReSampleContext *resample; \/* for audio resampling *\/$/;"	m	struct:AVOutputStream	file:
resampleCubic	libavfilter/libmpcodecs/vf_perspective.c	/^static inline void resampleCubic(uint8_t *dst, uint8_t *src, int w, int h, int dstStride, int srcStride, struct vf_priv_s *privParam, int xShift, int yShift){$/;"	f	file:
resampleLinear	libavfilter/libmpcodecs/vf_perspective.c	/^static inline void resampleLinear(uint8_t *dst, uint8_t *src, int w, int h, int dstStride, int srcStride,$/;"	f	file:
resample_channels	ffmpeg.c	/^    int resample_channels;$/;"	m	struct:AVOutputStream	file:
resample_channels	ffmpeg/ffmpeg.c	/^    int resample_channels;$/;"	m	struct:AVOutputStream	file:
resample_context	libavcodec/resample.c	/^    struct AVResampleContext *resample_context;$/;"	m	struct:ReSampleContext	typeref:struct:ReSampleContext::AVResampleContext	file:
resample_frame	ffmpeg.c	/^    AVFrame resample_frame;              \/* temporary frame for image resampling *\/$/;"	m	struct:AVOutputStream	file:
resample_frame	ffmpeg/ffmpeg.c	/^    AVFrame resample_frame;              \/* temporary frame for image resampling *\/$/;"	m	struct:AVOutputStream	file:
resample_height	ffmpeg.c	/^    int resample_height;$/;"	m	struct:AVOutputStream	file:
resample_height	ffmpeg/ffmpeg.c	/^    int resample_height;$/;"	m	struct:AVOutputStream	file:
resample_pix_fmt	ffmpeg.c	/^    int resample_pix_fmt;$/;"	m	struct:AVOutputStream	file:
resample_pix_fmt	ffmpeg/ffmpeg.c	/^    int resample_pix_fmt;$/;"	m	struct:AVOutputStream	file:
resample_sample_fmt	ffmpeg.c	/^    int resample_sample_fmt;$/;"	m	struct:AVOutputStream	file:
resample_sample_fmt	ffmpeg/ffmpeg.c	/^    int resample_sample_fmt;$/;"	m	struct:AVOutputStream	file:
resample_sample_rate	ffmpeg.c	/^    int resample_sample_rate;$/;"	m	struct:AVOutputStream	file:
resample_sample_rate	ffmpeg/ffmpeg.c	/^    int resample_sample_rate;$/;"	m	struct:AVOutputStream	file:
resample_width	ffmpeg.c	/^    int resample_width;$/;"	m	struct:AVOutputStream	file:
resample_width	ffmpeg/ffmpeg.c	/^    int resample_width;$/;"	m	struct:AVOutputStream	file:
reserved	libavcodec/qcelpdata.h	/^    uint8_t reserved;$/;"	m	struct:__anon84
reserved	libavcodec/vc1.h	/^    int reserved;         \/\/\/< reserved$/;"	m	struct:VC1Context
reserved	libavformat/flvenc.c	/^    int reserved;$/;"	m	struct:FLVContext	file:
reserved_count	libavformat/nut.h	/^    uint8_t  reserved_count;$/;"	m	struct:__anon491
reserved_size	libavformat/matroskaenc.c	/^    int                     reserved_size;      \/\/\/< -1 if appending to file$/;"	m	struct:mkv_seekhead	file:
reset	libavcodec/jpegls.h	/^    int limit, reset, bpp, qbpp, maxval, range;$/;"	m	struct:JLSState
reset	libavcodec/mjpegdec.h	/^    int reset;        \/\/\/< context halfing intervall ?rename$/;"	m	struct:MJpegDecodeContext
reset	libavcodec/sbr.h	/^    int                reset;$/;"	m	struct:__anon57
reset_all_predictors	libavcodec/aacdec.c	/^static void reset_all_predictors(PredictorState *ps)$/;"	f	file:
reset_block_bap	libavcodec/ac3enc.c	/^static void reset_block_bap(AC3EncodeContext *s)$/;"	f	file:
reset_block_lengths	libavcodec/wma.h	/^    int reset_block_lengths;$/;"	m	struct:WMACodecContext
reset_color	libavutil/log.c	41;"	d	file:
reset_color	libavutil/log.c	45;"	d	file:
reset_contexts	libavcodec/snow.c	/^static void reset_contexts(SnowContext *s){ \/\/FIXME better initial contexts$/;"	f	file:
reset_count	libavfilter/libmpcodecs/vf_cropdetect.c	/^    int reset_count;$/;"	m	struct:vf_priv_s	file:
reset_count	libavfilter/vf_cropdetect.c	/^    int reset_count;$/;"	m	struct:__anon48	file:
reset_packet	libavformat/applehttp.c	/^static void reset_packet(AVPacket *pkt)$/;"	f	file:
reset_predict_state	libavcodec/aacdec.c	/^static av_always_inline void reset_predict_state(PredictorState *ps)$/;"	f	file:
reset_predictor_group	libavcodec/aacdec.c	/^static void reset_predictor_group(PredictorState *ps, int group_num)$/;"	f	file:
reset_ptr	libswscale/swscale_unscaled.c	/^static void reset_ptr(const uint8_t* src[], int format)$/;"	f	file:
reset_stats	libavcodec/flashsv2enc.c	/^static void reset_stats(FlashSV2Context * s)$/;"	f	file:
resetup_tcp	libavformat/rtspdec.c	/^static int resetup_tcp(AVFormatContext *s)$/;"	f	file:
residual	libavcodec/flacenc.c	/^    int32_t residual[FLAC_MAX_BLOCKSIZE+1];$/;"	m	struct:FlacSubframe	file:
residual_color_transform_flag	libavcodec/h264.h	/^    int residual_color_transform_flag; \/\/\/< residual_colour_transform_flag$/;"	m	struct:SPS
residue	libavcodec/vorbisenc.c	/^    int *residue;$/;"	m	struct:__anon192	file:
residue_count	libavcodec/vorbisdec.c	/^    uint8_t       residue_count;$/;"	m	struct:vorbis_context_s	file:
residue_encode	libavcodec/vorbisenc.c	/^static void residue_encode(vorbis_enc_context *venc, vorbis_enc_residue *rc,$/;"	f	file:
residues	libavcodec/vorbisdec.c	/^    vorbis_residue *residues;$/;"	m	struct:vorbis_context_s	file:
residues	libavcodec/vorbisenc.c	/^    vorbis_enc_residue *residues;$/;"	m	struct:__anon194	file:
reslevel	libavcodec/j2k.h	/^   J2kResLevel *reslevel;$/;"	m	struct:__anon217
resolution	libavcodec/alsdec.c	/^    int resolution;           \/\/\/< 000 = 8-bit; 001 = 16-bit; 010 = 24-bit; 011 = 32-bit$/;"	m	struct:__anon150	file:
resolve_destination	libavformat/sdp.c	/^static int resolve_destination(char *dest_addr, int size, char *type,$/;"	f	file:
resolve_host	ffserver.c	/^static int resolve_host(struct in_addr *sin_addr, const char *hostname)$/;"	f	file:
respic	libavcodec/vc1.h	/^    uint8_t respic;       \/\/\/< Frame-level flag for resized images$/;"	m	struct:VC1Context
restart_count	libavcodec/mjpegdec.h	/^    int restart_count;$/;"	m	struct:MJpegDecodeContext
restart_interval	libavcodec/mjpegdec.h	/^    int restart_interval;$/;"	m	struct:MJpegDecodeContext
restart_seen	libavcodec/mlpdec.c	/^    uint8_t     restart_seen;$/;"	m	struct:SubStream	file:
restore_ac_coeffs	libavcodec/mpeg4videoenc.c	/^static inline void restore_ac_coeffs(MpegEncContext * s, DCTELEM block[6][64], const int dir[6], uint8_t *st[6], const int zigzag_last_index[6])$/;"	f	file:
restrict	config.h	10;"	d
result	libavcodec/pthread.c	/^    int     result;                 \/\/\/< The result of the last codec decode\/encode() call.$/;"	m	struct:PerThreadContext	file:
resync_marker	libavcodec/mpegvideo.h	/^    int resync_marker;               \/\/\/< could this stream contain resync markers$/;"	m	struct:MpegEncContext
resync_mb_x	libavcodec/mpegvideo.h	/^    int resync_mb_x;                 \/\/\/< x position of last resync marker$/;"	m	struct:MpegEncContext
resync_mb_y	libavcodec/mpegvideo.h	/^    int resync_mb_y;                 \/\/\/< y position of last resync marker$/;"	m	struct:MpegEncContext
ret	libavcodec/w32thread.c	/^    int *ret;$/;"	m	struct:ThreadContext	file:
ret_str	tests/seek_test.c	/^static const char *ret_str(int v)$/;"	f	file:
retransmit_si_info	libavformat/mpegtsenc.c	/^static void retransmit_si_info(AVFormatContext *s)$/;"	f	file:
retry_transfer_wrapper	libavformat/avio.c	/^static inline int retry_transfer_wrapper(URLContext *h, unsigned char *buf, int size, int size_min,$/;"	f	file:
rets	libavcodec/pthread.c	/^    int *rets;$/;"	m	struct:ThreadContext	file:
rets_count	libavcodec/pthread.c	/^    int rets_count;$/;"	m	struct:ThreadContext	file:
return_frame	libavfilter/vf_yadif.c	/^static void return_frame(AVFilterContext *ctx, int is_second)$/;"	f	file:
return_stored_frame	libavformat/rtpdec_qcelp.c	/^static int return_stored_frame(AVFormatContext *ctx, PayloadContext *data,$/;"	f	file:
reuse_sf	libavcodec/wmaprodec.c	/^    int8_t   reuse_sf;                                \/\/\/< share scale factors between subframes$/;"	m	struct:__anon82	file:
reuse_socket	libavformat/udp.c	/^    int reuse_socket;$/;"	m	struct:__anon320	file:
revents	libavformat/avio.h	/^    int revents;$/;"	m	struct:URLPollEntry
revents	libavformat/os_support.h	/^    short revents; \/* events that occurred *\/$/;"	m	struct:pollfd
reverseMatrixing	libavcodec/atrac3.c	/^static void reverseMatrixing(float *su1, float *su2, int *pPrevCode, int *pCurrCode)$/;"	f	file:
reverse_dc_prediction	libavcodec/vp3.c	/^static void reverse_dc_prediction(Vp3DecodeContext *s,$/;"	f	file:
revert_channel_correlation	libavcodec/alsdec.c	/^static int revert_channel_correlation(ALSDecContext *ctx, ALSBlockData *bd,$/;"	f	file:
reverted_channels	libavcodec/alsdec.c	/^    int *reverted_channels;         \/\/\/< stores a flag for each reverted channel$/;"	m	struct:__anon152	file:
revtab	libavcodec/fft.h	/^    uint16_t *revtab;$/;"	m	struct:FFTContext
rff	libavcodec/vc1.h	/^    uint8_t rptfrm, tff, rff;$/;"	m	struct:VC1Context
rgamma	libavfilter/libmpcodecs/vf_eq2.c	/^  double        rgamma;$/;"	m	struct:vf_priv_s	file:
rgb	libavcodec/mjpegdec.h	/^    int rgb;$/;"	m	struct:MJpegDecodeContext
rgb15to16	libswscale/rgb2rgb.c	/^void (*rgb15to16)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb15to16	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb15to16)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb15to16_c	libswscale/rgb2rgb_template.c	/^static inline void rgb15to16_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb15to24	libswscale/rgb2rgb.c	/^void rgb15to24(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f
rgb15to32	libswscale/rgb2rgb.c	/^void (*rgb15to32)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb15to32	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb15to32)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb15to32_c	libswscale/rgb2rgb_template.c	/^static inline void rgb15to32_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb15tobgr15	libswscale/rgb2rgb.c	/^void rgb15tobgr15(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f
rgb15tobgr16	libswscale/rgb2rgb.c	/^void rgb15tobgr16(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f
rgb15tobgr24	libswscale/rgb2rgb.c	/^void (*rgb15tobgr24)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb15tobgr24	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb15tobgr24)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb15tobgr24_c	libswscale/rgb2rgb_template.c	/^static inline void rgb15tobgr24_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb15tobgr32	libswscale/rgb2rgb.c	/^void rgb15tobgr32(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f
rgb16to15	libswscale/rgb2rgb.c	/^void (*rgb16to15)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb16to15	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb16to15)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb16to15_c	libswscale/rgb2rgb_template.c	/^static inline void rgb16to15_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb16to24	libswscale/rgb2rgb.c	/^void rgb16to24(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f
rgb16to32	libswscale/rgb2rgb.c	/^void (*rgb16to32)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb16to32	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb16to32)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb16to32_c	libswscale/rgb2rgb_template.c	/^static inline void rgb16to32_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb16tobgr15	libswscale/rgb2rgb.c	/^void rgb16tobgr15(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f
rgb16tobgr16	libswscale/rgb2rgb.c	/^void rgb16tobgr16(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f
rgb16tobgr24	libswscale/rgb2rgb.c	/^void (*rgb16tobgr24)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb16tobgr24	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb16tobgr24)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb16tobgr24_c	libswscale/rgb2rgb_template.c	/^static inline void rgb16tobgr24_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb16tobgr32	libswscale/rgb2rgb.c	/^void rgb16tobgr32(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f
rgb24ToUV	libswscale/x86/swscale_template.c	/^static void RENAME(rgb24ToUV)(int16_t *dstU, int16_t *dstV,$/;"	f	file:
rgb24ToY	libswscale/x86/swscale_template.c	/^static void RENAME(rgb24ToY)(int16_t *dst, const uint8_t *src,$/;"	f	file:
rgb24_to_yuv420p	tests/rotozoom.c	/^static void rgb24_to_yuv420p(unsigned char *lum, unsigned char *cb,$/;"	f	file:
rgb24_to_yuv420p	tests/videogen.c	/^static void rgb24_to_yuv420p(uint8_t *lum, uint8_t *cb, uint8_t *cr,$/;"	f	file:
rgb24to15	libswscale/rgb2rgb.c	/^void (*rgb24to15)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb24to15	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb24to15)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb24to15_c	libswscale/rgb2rgb_template.c	/^static inline void rgb24to15_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb24to16	libswscale/rgb2rgb.c	/^void (*rgb24to16)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb24to16	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb24to16)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb24to16_c	libswscale/rgb2rgb_template.c	/^static inline void rgb24to16_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb24to32	libswscale/rgb2rgb.c	/^void rgb24to32(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f
rgb24tobgr15	libswscale/rgb2rgb.c	/^void (*rgb24tobgr15)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb24tobgr15	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb24tobgr15)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb24tobgr15_c	libswscale/rgb2rgb_template.c	/^static inline void rgb24tobgr15_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb24tobgr16	libswscale/rgb2rgb.c	/^void (*rgb24tobgr16)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb24tobgr16	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb24tobgr16)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb24tobgr16_c	libswscale/rgb2rgb_template.c	/^static inline void rgb24tobgr16_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb24tobgr24	libswscale/rgb2rgb.c	/^void (*rgb24tobgr24)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb24tobgr24	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb24tobgr24)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb24tobgr24_c	libswscale/rgb2rgb_template.c	/^static inline void rgb24tobgr24_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb24tobgr32	libswscale/rgb2rgb.c	/^void (*rgb24tobgr32)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb24tobgr32	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb24tobgr32)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb24tobgr32_c	libswscale/rgb2rgb_template.c	/^static inline void rgb24tobgr32_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb24toyv12	libswscale/rgb2rgb.c	/^void (*rgb24toyv12)(const uint8_t *src, uint8_t *ydst, uint8_t *udst, uint8_t *vdst,$/;"	v
rgb24toyv12	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb24toyv12)(const uint8_t *src, uint8_t *ydst, uint8_t *udst, uint8_t *vdst,$/;"	f	file:
rgb24toyv12_c	libswscale/rgb2rgb_template.c	/^void rgb24toyv12_c(const uint8_t *src, uint8_t *ydst, uint8_t *udst,$/;"	f
rgb2rgb_init	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb2rgb_init)(void)$/;"	f	file:
rgb2rgb_init_c	libswscale/rgb2rgb_template.c	/^static inline void rgb2rgb_init_c(void)$/;"	f	file:
rgb2rgb_init_x86	libswscale/x86/rgb2rgb.c	/^void rgb2rgb_init_x86(void)$/;"	f
rgb2yuv_table	libswscale/swscale.c	/^static const double rgb2yuv_table[8][9]={$/;"	v	file:
rgb32to15	libswscale/rgb2rgb.c	/^void (*rgb32to15)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb32to15	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb32to15)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb32to15_c	libswscale/rgb2rgb_template.c	/^static inline void rgb32to15_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb32to16	libswscale/rgb2rgb.c	/^void (*rgb32to16)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb32to16	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb32to16)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb32to16_c	libswscale/rgb2rgb_template.c	/^static inline void rgb32to16_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb32to24	libswscale/rgb2rgb.c	/^void rgb32to24(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f
rgb32tobgr15	libswscale/rgb2rgb.c	/^void (*rgb32tobgr15)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb32tobgr15	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb32tobgr15)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb32tobgr15_c	libswscale/rgb2rgb_template.c	/^static inline void rgb32tobgr15_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb32tobgr16	libswscale/rgb2rgb.c	/^void (*rgb32tobgr16)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb32tobgr16	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb32tobgr16)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb32tobgr16_c	libswscale/rgb2rgb_template.c	/^static inline void rgb32tobgr16_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb32tobgr24	libswscale/rgb2rgb.c	/^void (*rgb32tobgr24)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
rgb32tobgr24	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(rgb32tobgr24)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb32tobgr24_c	libswscale/rgb2rgb_template.c	/^static inline void rgb32tobgr24_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
rgb565_masks	libavcodec/bmpenc.c	/^static const uint32_t rgb565_masks[]  = { 0xF800, 0x07E0, 0x001F };$/;"	v	file:
rgbToRgbWrapper	libswscale/swscale_unscaled.c	/^static int rgbToRgbWrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
rgb_color	libavutil/parseutils.c	/^    uint8_t     rgb_color[3];    \/\/\/< RGB values for the color$/;"	m	struct:__anon294	file:
rgb_list	libavfilter/libmpcodecs/vf_palette.c	/^static const unsigned int rgb_list[]={$/;"	v	file:
rgb_pix_fmts	libavfilter/vf_lut.c	/^static enum PixelFormat rgb_pix_fmts[] = { RGB_FORMATS, PIX_FMT_NONE };$/;"	v	typeref:enum:PixelFormat	file:
rgb_pixfmt_map	libavdevice/fbdev.c	/^static struct rgb_pixfmt_map_entry rgb_pixfmt_map[] = {$/;"	v	typeref:struct:rgb_pixfmt_map_entry	file:
rgb_pixfmt_map_entry	libavdevice/fbdev.c	/^struct rgb_pixfmt_map_entry {$/;"	s	file:
rgb_tab	tests/rotozoom.c	/^unsigned char *rgb_tab;$/;"	v
rgb_tab	tests/videogen.c	/^unsigned char *rgb_tab;$/;"	v
rgb_triplet	libavformat/gif.c	/^} rgb_triplet;$/;"	t	typeref:struct:__anon384	file:
rgba_map	libavfilter/vf_drawtext.c	/^    uint8_t rgba_map[4];            \/\/\/< map RGBA offsets to the positions in the packed RGBA format$/;"	m	struct:__anon24	file:
rgba_map	libavfilter/vf_lut.c	/^    int rgba_map[4];$/;"	m	struct:__anon23	file:
rice	libavcodec/tta.c	/^    TTARice rice;$/;"	m	struct:TTAChannel	file:
riceX	libavcodec/apedec.c	/^    APERice riceX;                           \/\/\/< rice code parameters for the second channel$/;"	m	struct:APEContext	file:
riceY	libavcodec/apedec.c	/^    APERice riceY;                           \/\/\/< rice code parameters for the first channel$/;"	m	struct:APEContext	file:
rice_count_exact	libavcodec/flacenc.c	/^static int rice_count_exact(int32_t *res, int n, int k)$/;"	f	file:
rice_encode_count	libavcodec/flacenc.c	582;"	d	file:
rice_init	libavcodec/tta.c	/^static void rice_init(TTARice *c, uint32_t k0, uint32_t k1)$/;"	f	file:
rice_modifier	libavcodec/alacenc.c	/^    int rice_modifier;$/;"	m	struct:RiceContext	file:
riff_end	libavformat/avidec.c	/^    int64_t  riff_end;$/;"	m	struct:__anon451	file:
riff_id	libavformat/avienc.c	/^    int riff_id;$/;"	m	struct:__anon343	file:
riff_start	libavformat/avienc.c	/^    int64_t riff_start, movi_list, odml_list;$/;"	m	struct:__anon343	file:
right	libavcodec/libmp3lame.c	/^        int *right;$/;"	m	struct:Mp3AudioContext::__anon265	file:
right	libavfilter/libmpcodecs/libvo/video_out.h	/^  int left, right, top, bottom, width, height;$/;"	m	struct:vo_rect
ring	libavdevice/dv1394.c	/^    uint8_t *ring; \/* Ring buffer *\/$/;"	m	struct:dv1394_data	file:
ring1Test	libavfilter/libmpcodecs/vf_test.c	/^static void ring1Test(uint8_t *dst, int stride, int off)$/;"	f	file:
ring2Test	libavfilter/libmpcodecs/vf_test.c	/^static void ring2Test(uint8_t *dst, int stride, int off)$/;"	f	file:
rl2_decode_end	libavcodec/rl2.c	/^static av_cold int rl2_decode_end(AVCodecContext *avctx)$/;"	f	file:
rl2_decode_frame	libavcodec/rl2.c	/^static int rl2_decode_frame(AVCodecContext *avctx,$/;"	f	file:
rl2_decode_init	libavcodec/rl2.c	/^static av_cold int rl2_decode_init(AVCodecContext *avctx)$/;"	f	file:
rl2_probe	libavformat/rl2.c	/^static int rl2_probe(AVProbeData *p)$/;"	f	file:
rl2_read_header	libavformat/rl2.c	/^static av_cold int rl2_read_header(AVFormatContext *s,$/;"	f	file:
rl2_read_packet	libavformat/rl2.c	/^static int rl2_read_packet(AVFormatContext *s,$/;"	f	file:
rl2_read_seek	libavformat/rl2.c	/^static int rl2_read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
rl2_rle_decode	libavcodec/rl2.c	/^static void rl2_rle_decode(Rl2Context *s,const unsigned char* in,int size,$/;"	f	file:
rl_chroma_table_index	libavcodec/mpegvideo.h	/^    int rl_chroma_table_index;$/;"	m	struct:MpegEncContext
rl_intra_aic	libavcodec/h263data.h	/^RLTable rl_intra_aic = {$/;"	v
rl_length	libavcodec/msmpeg4.c	/^static uint8_t rl_length[NB_RL_TABLES][MAX_LEVEL+1][MAX_RUN+1][2];$/;"	v	file:
rl_table	libavcodec/msmpeg4data.c	/^RLTable rl_table[NB_RL_TABLES] = {$/;"	v
rl_table_index	libavcodec/mpegvideo.h	/^    int rl_table_index;$/;"	m	struct:MpegEncContext
rl_vlc	libavcodec/rl.h	/^    RL_VLC_ELEM *rl_vlc[32];       \/\/\/< decoding only$/;"	m	struct:RLTable
rle	libavcodec/pgssubdec.c	/^    uint8_t      *rle;$/;"	m	struct:PGSSubPicture	file:
rle_buffer_size	libavcodec/pgssubdec.c	/^    unsigned int rle_buffer_size, rle_data_len;$/;"	m	struct:PGSSubPicture	file:
rle_data_len	libavcodec/pgssubdec.c	/^    unsigned int rle_buffer_size, rle_data_len;$/;"	m	struct:PGSSubPicture	file:
rle_length_tab	libavcodec/binkaudio.c	/^static const uint8_t rle_length_tab[16] = {$/;"	v	file:
rle_remaining_len	libavcodec/pgssubdec.c	/^    unsigned int rle_remaining_len;$/;"	m	struct:PGSSubPicture	file:
rle_unpack	libavcodec/vmdav.c	/^static int rle_unpack(const unsigned char *src, int src_len, int src_count,$/;"	f	file:
rlecode_table	libavcodec/qtrleenc.c	/^    signed char *rlecode_table;$/;"	m	struct:QtrleEncContext	file:
rlslms	libavcodec/alsdec.c	/^    int rlslms;               \/\/\/< use "Recursive Least Square-Least Mean Square" predictor: 1 = on, 0 = off$/;"	m	struct:__anon150	file:
rltab	libavcodec/cavs.h	/^  int8_t rltab[59][3];$/;"	m	struct:dec_2dvlc
rm_ac3_swap_bytes	libavformat/rmdec.c	/^rm_ac3_swap_bytes (AVStream *st, AVPacket *pkt)$/;"	f	file:
rm_assemble_video_frame	libavformat/rmdec.c	/^static int rm_assemble_video_frame(AVFormatContext *s, AVIOContext *pb,$/;"	f	file:
rm_probe	libavformat/rmdec.c	/^static int rm_probe(AVProbeData *p)$/;"	f	file:
rm_read_audio_stream_info	libavformat/rmdec.c	/^static int rm_read_audio_stream_info(AVFormatContext *s, AVIOContext *pb,$/;"	f	file:
rm_read_close	libavformat/rmdec.c	/^static int rm_read_close(AVFormatContext *s)$/;"	f	file:
rm_read_dts	libavformat/rmdec.c	/^static int64_t rm_read_dts(AVFormatContext *s, int stream_index,$/;"	f	file:
rm_read_extradata	libavformat/rmdec.c	/^static int rm_read_extradata(AVIOContext *pb, AVCodecContext *avctx, unsigned size)$/;"	f	file:
rm_read_header	libavformat/rmdec.c	/^static int rm_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
rm_read_header_old	libavformat/rmdec.c	/^static int rm_read_header_old(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
rm_read_index	libavformat/rmdec.c	/^static int rm_read_index(AVFormatContext *s)$/;"	f	file:
rm_read_metadata	libavformat/rmdec.c	/^static void rm_read_metadata(AVFormatContext *s, int wide)$/;"	f	file:
rm_read_packet	libavformat/rmdec.c	/^static int rm_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
rm_write_audio	libavformat/rmenc.c	/^static int rm_write_audio(AVFormatContext *s, const uint8_t *buf, int size, int flags)$/;"	f	file:
rm_write_header	libavformat/rmenc.c	/^static int rm_write_header(AVFormatContext *s)$/;"	f	file:
rm_write_packet	libavformat/rmenc.c	/^static int rm_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
rm_write_trailer	libavformat/rmenc.c	/^static int rm_write_trailer(AVFormatContext *s)$/;"	f	file:
rm_write_video	libavformat/rmenc.c	/^static int rm_write_video(AVFormatContext *s, const uint8_t *buf, int size, int flags)$/;"	f	file:
rmctx	libavformat/rdt.c	/^    AVFormatContext *rmctx;$/;"	m	struct:PayloadContext	file:
rmst	libavformat/rdt.c	/^    RMStream **rmst;$/;"	m	struct:PayloadContext	file:
rnd	libavcodec/mpc.h	/^    AVLFG rnd;$/;"	m	struct:__anon179
rnd	libavcodec/msvideo1enc.c	/^    AVLFG rnd;$/;"	m	struct:Msvideo1EncContext	file:
rnd	libavcodec/vc1.h	/^    int rnd;                      \/\/\/< rounding control$/;"	m	struct:VC1Context
rnd_PACK	libavcodec/sh4/dsputil_align.c	38;"	d	file:
rnd_avg32	libavcodec/dsputil.h	/^static inline uint32_t rnd_avg32(uint32_t a, uint32_t b)$/;"	f
rnd_avg64	libavcodec/dsputil.h	/^static inline uint64_t rnd_avg64(uint64_t a, uint64_t b)$/;"	f
rnd_avg_pixel4	libavcodec/high_bit_depth.h	32;"	d
rnd_avg_pixel4	libavcodec/high_bit_depth.h	65;"	d
rnd_fir_filter_mem	libavcodec/qcelpdec.c	/^    float    rnd_fir_filter_mem[180];$/;"	m	struct:__anon225	file:
rnd_rv40_1d_tbl	libavcodec/x86/h264_chromamc.asm	/^rnd_rv40_1d_tbl: times 4 dw  0$/;"	l
rnd_rv40_2d_tbl	libavcodec/x86/h264_chromamc.asm	/^rnd_rv40_2d_tbl: times 4 dw  0$/;"	l
rnd_table_init	libavcodec/qdm2_tablegen.h	/^static av_cold void rnd_table_init(void) {$/;"	f
rnd_table_init	libavcodec/qdm2_tablegen.h	35;"	d
rndx	libavutil/fifo.h	/^    uint32_t rndx, wndx;$/;"	m	struct:AVFifoBuffer
rol	libavutil/sha.c	42;"	d	file:
room_type	libavcodec/ac3.h	/^    int room_type;$/;"	m	struct:AC3EncOptions
root	libavcodec/binkaudio.c	/^    float root;$/;"	m	struct:__anon136	file:
root	libavfilter/vf_fifo.c	/^    BufPic  root;$/;"	m	struct:__anon4	file:
rootpow2tab	libavcodec/cook.c	/^static float rootpow2tab[127];$/;"	v	file:
roq_cell	libavcodec/roqvideo.h	/^} roq_cell;$/;"	t	typeref:struct:__anon123
roq_decode_end	libavcodec/roqvideodec.c	/^static av_cold int roq_decode_end(AVCodecContext *avctx)$/;"	f	file:
roq_decode_frame	libavcodec/roqvideodec.c	/^static int roq_decode_frame(AVCodecContext *avctx,$/;"	f	file:
roq_decode_init	libavcodec/roqvideodec.c	/^static av_cold int roq_decode_init(AVCodecContext *avctx)$/;"	f	file:
roq_dpcm_encode_close	libavcodec/roqaudioenc.c	/^static av_cold int roq_dpcm_encode_close(AVCodecContext *avctx)$/;"	f	file:
roq_dpcm_encode_frame	libavcodec/roqaudioenc.c	/^static int roq_dpcm_encode_frame(AVCodecContext *avctx,$/;"	f	file:
roq_dpcm_encode_init	libavcodec/roqaudioenc.c	/^static av_cold int roq_dpcm_encode_init(AVCodecContext *avctx)$/;"	f	file:
roq_encode_end	libavcodec/roqvideoenc.c	/^static int roq_encode_end(AVCodecContext *avctx)$/;"	f	file:
roq_encode_frame	libavcodec/roqvideoenc.c	/^static int roq_encode_frame(AVCodecContext *avctx, unsigned char *buf, int buf_size, void *data)$/;"	f	file:
roq_encode_init	libavcodec/roqvideoenc.c	/^static int roq_encode_init(AVCodecContext *avctx)$/;"	f	file:
roq_encode_video	libavcodec/roqvideoenc.c	/^static void roq_encode_video(RoqContext *enc)$/;"	f	file:
roq_probe	libavformat/idroqdec.c	/^static int roq_probe(AVProbeData *p)$/;"	f	file:
roq_qcell	libavcodec/roqvideo.h	/^} roq_qcell;$/;"	t	typeref:struct:__anon124
roq_read_header	libavformat/idroqdec.c	/^static int roq_read_header(AVFormatContext *s,$/;"	f	file:
roq_read_packet	libavformat/idroqdec.c	/^static int roq_read_packet(AVFormatContext *s,$/;"	f	file:
roq_square_array	libavcodec/dpcm.c	/^    short roq_square_array[256];$/;"	m	struct:DPCMContext	file:
roq_write_header	libavformat/idroqenc.c	/^static int roq_write_header(struct AVFormatContext *s)$/;"	f	file:
roq_write_video_info_chunk	libavcodec/roqvideoenc.c	/^static void roq_write_video_info_chunk(RoqContext *enc)$/;"	f	file:
roqvideo_decode_frame	libavcodec/roqvideodec.c	/^static void roqvideo_decode_frame(RoqContext *ri)$/;"	f	file:
rotate	libavfilter/libmpcodecs/vf_rotate.c	/^static void rotate(unsigned char* dst,unsigned char* src,int dststride,int srcstride,int w,int h,int bpp,int dir){$/;"	f	file:
round	libavcodec/tta.c	/^    int32_t shift, round, error, mode;$/;"	m	struct:TTAFilter	file:
round	libavcodec/x86/idct_mmx.c	32;"	d	file:
round	libavfilter/libmpcodecs/vf_cropdetect.c	/^    int round;$/;"	m	struct:vf_priv_s	file:
round	libavfilter/libmpcodecs/vf_dsize.c	/^    int round;$/;"	m	struct:vf_priv_s	file:
round	libavfilter/vf_cropdetect.c	/^    int round;$/;"	m	struct:__anon48	file:
round	libavutil/libm.h	/^static av_always_inline av_const double round(double x)$/;"	f
roundToInt16	libswscale/yuv2rgb.c	/^static uint16_t roundToInt16(int64_t f)$/;"	f	file:
round_key	libavutil/aes.c	/^    av_aes_block round_key[15];$/;"	m	struct:AVAES	file:
round_keys	libavutil/des.h	/^    uint64_t round_keys[3][16];$/;"	m	struct:AVDES
round_sample	libavcodec/mpegaudiodsp_template.c	/^static inline float round_sample(float *sum)$/;"	f	file:
round_sample	libavcodec/mpegaudiodsp_template.c	/^static inline int round_sample(int64_t *sum)$/;"	f	file:
rounder	libavcodec/x86/idct_mmx.c	33;"	d	file:
roundf	libavutil/libm.h	/^static av_always_inline av_const float roundf(float x)$/;"	f
rounds	libavutil/aes.c	/^    int rounds;$/;"	m	struct:AVAES	file:
row	libavcodec/flashsv2enc.c	/^    uint8_t col, row, width, height;$/;"	m	struct:Block	file:
row_dc_only	libavcodec/arm/simple_idct_armv5te.S	/^row_dc_only:$/;"	l
row_fdct	libavcodec/faandct.c	/^static av_always_inline void row_fdct(FLOAT temp[64], DCTELEM * data)$/;"	f	file:
row_fdct	libavcodec/jfdctfst.c	/^static av_always_inline void row_fdct(DCTELEM * data){$/;"	f	file:
row_fdct	libavcodec/jfdctint.c	/^static av_always_inline void row_fdct(DCTELEM * data){$/;"	f	file:
row_fdct_c	libavfilter/libmpcodecs/vf_fspp.c	/^static void row_fdct_c(DCTELEM *data, const uint8_t *pixels, int line_size, int cnt)$/;"	f	file:
row_fdct_mmx	libavfilter/libmpcodecs/vf_fspp.c	/^static void row_fdct_mmx(DCTELEM *data,  const uint8_t *pixels,  int line_size,  int cnt)$/;"	f	file:
row_fdct_s	libavfilter/libmpcodecs/vf_fspp.c	178;"	d	file:
row_fdct_s	libavfilter/libmpcodecs/vf_fspp.c	406;"	d	file:
row_idct_c	libavfilter/libmpcodecs/vf_fspp.c	/^static void row_idct_c(DCTELEM* workspace,$/;"	f	file:
row_idct_mmx	libavfilter/libmpcodecs/vf_fspp.c	/^static void row_idct_mmx (DCTELEM* workspace,$/;"	f	file:
row_idct_s	libavfilter/libmpcodecs/vf_fspp.c	177;"	d	file:
row_idct_s	libavfilter/libmpcodecs/vf_fspp.c	405;"	d	file:
row_loop	libavcodec/arm/jrevdct_arm.S	/^row_loop:$/;"	l
row_pos	libavcodec/yop.c	/^    int row_pos;$/;"	m	struct:YopDecContext	file:
row_size	libavcodec/png.h	/^    int row_size; \/* decompressed row size *\/$/;"	m	struct:PNGDecContext
rows	libavcodec/flashsv2enc.c	/^    int rows, cols;$/;"	m	struct:FlashSV2Context	file:
rpcc	libavcodec/alpha/asm.h	101;"	d
rpcc	libavcodec/alpha/asm.h	115;"	d
rpcc	libavcodec/alpha/asm.h	166;"	d
rpl_probe	libavformat/rpl.c	/^static int rpl_probe(AVProbeData *p)$/;"	f	file:
rpl_read_header	libavformat/rpl.c	/^static int rpl_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
rpl_read_packet	libavformat/rpl.c	/^static int rpl_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
rpr	libavcodec/rv34.h	/^    int rpr;                 \/\/\/< one field size in RV30 slice header$/;"	m	struct:RV34DecContext
rps	libavcodec/tiff.c	/^    int strips, rps, sstype;$/;"	m	struct:TiffContext	file:
rps	libavcodec/tiffenc.c	/^    int rps;                            \/\/\/< row per strip$/;"	m	struct:TiffEncoderContext	file:
rptfrm	libavcodec/vc1.h	/^    uint8_t rptfrm, tff, rff;$/;"	m	struct:VC1Context
rptr	libavutil/fifo.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:AVFifoBuffer
rpza_decode_end	libavcodec/rpza.c	/^static av_cold int rpza_decode_end(AVCodecContext *avctx)$/;"	f	file:
rpza_decode_frame	libavcodec/rpza.c	/^static int rpza_decode_frame(AVCodecContext *avctx,$/;"	f	file:
rpza_decode_init	libavcodec/rpza.c	/^static av_cold int rpza_decode_init(AVCodecContext *avctx)$/;"	f	file:
rpza_decode_stream	libavcodec/rpza.c	/^static void rpza_decode_stream(RpzaContext *s)$/;"	f	file:
rso_read_header	libavformat/rsodec.c	/^static int rso_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
rso_read_packet	libavformat/rsodec.c	/^static int rso_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
rso_write_header	libavformat/rsoenc.c	/^static int rso_write_header(AVFormatContext *s)$/;"	f	file:
rso_write_packet	libavformat/rsoenc.c	/^static int rso_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
rso_write_trailer	libavformat/rsoenc.c	/^static int rso_write_trailer(AVFormatContext *s)$/;"	f	file:
rtcp_fd	libavformat/rtpproto.c	/^    int rtp_fd, rtcp_fd;$/;"	m	struct:RTPContext	file:
rtcp_hd	libavformat/rtpproto.c	/^    URLContext *rtp_hd, *rtcp_hd;$/;"	m	struct:RTPContext	file:
rtcp_parse_packet	libavformat/rtpdec.c	/^static int rtcp_parse_packet(RTPDemuxContext *s, const unsigned char *buf, int len)$/;"	f	file:
rtcp_send_sr	libavformat/rtpenc.c	/^static void rtcp_send_sr(AVFormatContext *s1, int64_t ntp_time)$/;"	f	file:
rtcp_ts_offset	libavformat/rtpdec.h	/^    int64_t rtcp_ts_offset;$/;"	m	struct:RTPDemuxContext
rtj	libavcodec/nuv.c	/^    RTJpegContext rtj;$/;"	m	struct:__anon100	file:
rtjpeg_decode_frame_yuv420	libavcodec/rtjpeg.c	/^int rtjpeg_decode_frame_yuv420(RTJpegContext *c, AVFrame *f,$/;"	f
rtjpeg_decode_init	libavcodec/rtjpeg.c	/^void rtjpeg_decode_init(RTJpegContext *c, DSPContext *dsp,$/;"	f
rtjpg_video	libavformat/nuv.c	/^    int rtjpg_video;$/;"	m	struct:__anon387	file:
rtmp_calc_digest	libavformat/rtmpproto.c	/^static void rtmp_calc_digest(const uint8_t *src, int len, int gap,$/;"	f	file:
rtmp_close	libavformat/librtmp.c	/^static int rtmp_close(URLContext *s)$/;"	f	file:
rtmp_close	libavformat/rtmpproto.c	/^static int rtmp_close(URLContext *h)$/;"	f	file:
rtmp_get_file_handle	libavformat/librtmp.c	/^static int rtmp_get_file_handle(URLContext *s)$/;"	f	file:
rtmp_handshake	libavformat/rtmpproto.c	/^static int rtmp_handshake(URLContext *s, RTMPContext *rt)$/;"	f	file:
rtmp_handshake_imprint_with_digest	libavformat/rtmpproto.c	/^static int rtmp_handshake_imprint_with_digest(uint8_t *buf)$/;"	f	file:
rtmp_log	libavformat/librtmp.c	/^static void rtmp_log(int level, const char *fmt, va_list args)$/;"	f	file:
rtmp_open	libavformat/librtmp.c	/^static int rtmp_open(URLContext *s, const char *uri, int flags)$/;"	f	file:
rtmp_open	libavformat/rtmpproto.c	/^static int rtmp_open(URLContext *s, const char *uri, int flags)$/;"	f	file:
rtmp_packet_type	libavformat/rtmppkt.c	/^static const char* rtmp_packet_type(int type)$/;"	f	file:
rtmp_parse_result	libavformat/rtmpproto.c	/^static int rtmp_parse_result(URLContext *s, RTMPContext *rt, RTMPPacket *pkt)$/;"	f	file:
rtmp_player_key	libavformat/rtmpproto.c	/^static const uint8_t rtmp_player_key[] = {$/;"	v	file:
rtmp_read	libavformat/librtmp.c	/^static int rtmp_read(URLContext *s, uint8_t *buf, int size)$/;"	f	file:
rtmp_read	libavformat/rtmpproto.c	/^static int rtmp_read(URLContext *s, uint8_t *buf, int size)$/;"	f	file:
rtmp_read_pause	libavformat/librtmp.c	/^static int rtmp_read_pause(URLContext *s, int pause)$/;"	f	file:
rtmp_read_seek	libavformat/librtmp.c	/^static int64_t rtmp_read_seek(URLContext *s, int stream_index,$/;"	f	file:
rtmp_server_key	libavformat/rtmpproto.c	/^static const uint8_t rtmp_server_key[] = {$/;"	v	file:
rtmp_validate_digest	libavformat/rtmpproto.c	/^static int rtmp_validate_digest(uint8_t *buf, int off)$/;"	f	file:
rtmp_write	libavformat/librtmp.c	/^static int rtmp_write(URLContext *s, const uint8_t *buf, int size)$/;"	f	file:
rtmp_write	libavformat/rtmpproto.c	/^static int rtmp_write(URLContext *s, const uint8_t *buf, int size)$/;"	f	file:
rtp_asf_fix_header	libavformat/rtpdec_asf.c	/^static int rtp_asf_fix_header(uint8_t *buf, int len)$/;"	f	file:
rtp_callback	libavcodec/avcodec.h	/^    void (*rtp_callback)(struct AVCodecContext *avctx, void *data, int size, int mb_nb);$/;"	m	struct:AVCodecContext
rtp_check_and_send_back_rr	libavformat/rtpdec.c	/^int rtp_check_and_send_back_rr(RTPDemuxContext *s, int count)$/;"	f
rtp_close	libavformat/rtpproto.c	/^static int rtp_close(URLContext *h)$/;"	f	file:
rtp_ctx	ffserver.c	/^    AVFormatContext *rtp_ctx[MAX_STREAMS];$/;"	m	struct:HTTPContext	file:
rtp_ctx	libavformat/movenc.h	/^    AVFormatContext *rtp_ctx; \/\/\/< the format context for the hinting rtp muxer$/;"	m	struct:MOVIndex
rtp_ctx	libavformat/rtpdec.h	/^    URLContext *rtp_ctx;$/;"	m	struct:RTPDemuxContext
rtp_fd	libavformat/rtpproto.c	/^    int rtp_fd, rtcp_fd;$/;"	m	struct:RTPContext	file:
rtp_flags	libavformat/movenc.h	/^    int rtp_flags;$/;"	m	struct:MOVMuxContext
rtp_get_file_handle	libavformat/rtpproto.c	/^static int rtp_get_file_handle(URLContext *h)$/;"	f	file:
rtp_get_local_rtcp_port	libavformat/rtpproto.c	/^int rtp_get_local_rtcp_port(URLContext *h)$/;"	f
rtp_get_local_rtp_port	libavformat/rtpproto.c	/^int rtp_get_local_rtp_port(URLContext *h)$/;"	f
rtp_get_rtcp_file_handle	libavformat/rtpproto.c	/^int rtp_get_rtcp_file_handle(URLContext *h) {$/;"	f
rtp_handle	libavformat/rtsp.h	/^    URLContext *rtp_handle;   \/**< RTP stream handle (if UDP) *\/$/;"	m	struct:RTSPStream
rtp_handles	ffserver.c	/^    URLContext *rtp_handles[MAX_STREAMS];$/;"	m	struct:HTTPContext	file:
rtp_hd	libavformat/rtpproto.c	/^    URLContext *rtp_hd, *rtcp_hd;$/;"	m	struct:RTPContext	file:
rtp_init_sequence	libavformat/rtpdec.c	/^static void rtp_init_sequence(RTPStatistics *s, uint16_t seq)$/;"	f	file:
rtp_init_statistics	libavformat/rtpdec.c	/^static void rtp_init_statistics(RTPStatistics *s, uint16_t base_sequence) \/\/ called on parse open packet.$/;"	f	file:
rtp_mode	libavcodec/mpegvideo.h	/^    int rtp_mode;$/;"	m	struct:MpegEncContext
rtp_muxer_class	libavformat/rtpenc.c	/^static const AVClass rtp_muxer_class = {$/;"	v	file:
rtp_muxer_flags	libavformat/rtsp.h	/^    int rtp_muxer_flags;$/;"	m	struct:RTSPState
rtp_new_av_stream	ffserver.c	/^static int rtp_new_av_stream(HTTPContext *c,$/;"	f	file:
rtp_new_connection	ffserver.c	/^static HTTPContext *rtp_new_connection(struct sockaddr_in *from_addr,$/;"	f	file:
rtp_open	libavformat/rtpproto.c	/^static int rtp_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
rtp_parse_close	libavformat/rtpdec.c	/^void rtp_parse_close(RTPDemuxContext *s)$/;"	f
rtp_parse_mp4_au	libavformat/rtpdec_mpeg4.c	/^static int rtp_parse_mp4_au(PayloadContext *data, const uint8_t *buf)$/;"	f	file:
rtp_parse_one_packet	libavformat/rtpdec.c	/^static int rtp_parse_one_packet(RTPDemuxContext *s, AVPacket *pkt,$/;"	f	file:
rtp_parse_open	libavformat/rtpdec.c	/^RTPDemuxContext *rtp_parse_open(AVFormatContext *s1, AVStream *st, URLContext *rtpc, int payload_type, int queue_size)$/;"	f
rtp_parse_packet	libavformat/rtpdec.c	/^int rtp_parse_packet(RTPDemuxContext *s, AVPacket *pkt,$/;"	f
rtp_parse_packet_internal	libavformat/rtpdec.c	/^static int rtp_parse_packet_internal(RTPDemuxContext *s, AVPacket *pkt,$/;"	f	file:
rtp_parse_queued_packet	libavformat/rtpdec.c	/^static int rtp_parse_queued_packet(RTPDemuxContext *s, AVPacket *pkt)$/;"	f	file:
rtp_parse_set_dynamic_protocol	libavformat/rtpdec.c	/^rtp_parse_set_dynamic_protocol(RTPDemuxContext *s, PayloadContext *ctx,$/;"	f
rtp_payload_size	libavcodec/avcodec.h	/^    int rtp_payload_size;   \/* The size of the RTP payload: the coder will  *\/$/;"	m	struct:AVCodecContext
rtp_probe	libavformat/rtsp.c	/^static int rtp_probe(AVProbeData *p)$/;"	f	file:
rtp_protocol	ffserver.c	/^    enum RTSPLowerTransport rtp_protocol;$/;"	m	struct:HTTPContext	typeref:enum:HTTPContext::RTSPLowerTransport	file:
rtp_read	libavformat/rtpproto.c	/^static int rtp_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
rtp_read_header	libavformat/rtsp.c	/^static int rtp_read_header(AVFormatContext *s,$/;"	f	file:
rtp_send_mpegaudio	libavformat/rtpenc.c	/^static void rtp_send_mpegaudio(AVFormatContext *s1,$/;"	f	file:
rtp_send_mpegts_raw	libavformat/rtpenc.c	/^static void rtp_send_mpegts_raw(AVFormatContext *s1,$/;"	f	file:
rtp_send_punch_packets	libavformat/rtpdec.c	/^void rtp_send_punch_packets(URLContext* rtp_handle)$/;"	f
rtp_send_raw	libavformat/rtpenc.c	/^static void rtp_send_raw(AVFormatContext *s1,$/;"	f	file:
rtp_send_samples	libavformat/rtpenc.c	/^static void rtp_send_samples(AVFormatContext *s1,$/;"	f	file:
rtp_set_remote_url	libavformat/rtpproto.c	/^int rtp_set_remote_url(URLContext *h, const char *uri)$/;"	f
rtp_valid_packet_in_sequence	libavformat/rtpdec.c	/^static int rtp_valid_packet_in_sequence(RTPStatistics *s, uint16_t seq)$/;"	f	file:
rtp_write	libavformat/rtpproto.c	/^static int rtp_write(URLContext *h, const uint8_t *buf, int size)$/;"	f	file:
rtp_write_header	libavformat/rtpenc.c	/^static int rtp_write_header(AVFormatContext *s1)$/;"	f	file:
rtp_write_packet	libavformat/rtpenc.c	/^static int rtp_write_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
rtp_write_trailer	libavformat/rtpenc.c	/^static int rtp_write_trailer(AVFormatContext *s1)$/;"	f	file:
rtsp_c	ffserver.c	/^    struct HTTPContext *rtsp_c;$/;"	m	struct:HTTPContext	typeref:struct:HTTPContext::HTTPContext	file:
rtsp_cmd_describe	ffserver.c	/^static void rtsp_cmd_describe(HTTPContext *c, const char *url)$/;"	f	file:
rtsp_cmd_options	ffserver.c	/^static void rtsp_cmd_options(HTTPContext *c, const char *url)$/;"	f	file:
rtsp_cmd_pause	ffserver.c	/^static void rtsp_cmd_pause(HTTPContext *c, const char *url, RTSPMessageHeader *h)$/;"	f	file:
rtsp_cmd_play	ffserver.c	/^static void rtsp_cmd_play(HTTPContext *c, const char *url, RTSPMessageHeader *h)$/;"	f	file:
rtsp_cmd_setup	ffserver.c	/^static void rtsp_cmd_setup(HTTPContext *c, const char *url,$/;"	f	file:
rtsp_cmd_teardown	ffserver.c	/^static void rtsp_cmd_teardown(HTTPContext *c, const char *url, RTSPMessageHeader *h)$/;"	f	file:
rtsp_demuxer_class	libavformat/rtspdec.c	/^const AVClass rtsp_demuxer_class = {$/;"	v
rtsp_hd	libavformat/rtsp.h	/^    URLContext *rtsp_hd; \/* RTSP TCP connection handle *\/$/;"	m	struct:RTSPState
rtsp_hd_out	libavformat/rtsp.h	/^    URLContext *rtsp_hd_out;$/;"	m	struct:RTSPState
rtsp_muxer_class	libavformat/rtspenc.c	/^static const AVClass rtsp_muxer_class = {$/;"	v	file:
rtsp_open_transport_ctx	libavformat/rtsp.c	/^static int rtsp_open_transport_ctx(AVFormatContext *s, RTSPStream *rtsp_st)$/;"	f	file:
rtsp_option	ffserver.c	/^    char *rtsp_option;$/;"	m	struct:FFStream	file:
rtsp_parse_range	libavformat/rtsp.c	/^static void rtsp_parse_range(int *min_ptr, int *max_ptr, const char **pp)$/;"	f	file:
rtsp_parse_range_npt	libavformat/rtsp.c	/^static void rtsp_parse_range_npt(const char *p, int64_t *start, int64_t *end)$/;"	f	file:
rtsp_parse_request	ffserver.c	/^static int rtsp_parse_request(HTTPContext *c)$/;"	f	file:
rtsp_parse_rtp_info	libavformat/rtsp.c	/^static void rtsp_parse_rtp_info(RTSPState *rt, const char *p)$/;"	f	file:
rtsp_parse_transport	libavformat/rtsp.c	/^static void rtsp_parse_transport(RTSPMessageHeader *reply, const char *p)$/;"	f	file:
rtsp_probe	libavformat/rtspdec.c	/^static int rtsp_probe(AVProbeData *p)$/;"	f	file:
rtsp_read_close	libavformat/rtspdec.c	/^static int rtsp_read_close(AVFormatContext *s)$/;"	f	file:
rtsp_read_header	libavformat/rtspdec.c	/^static int rtsp_read_header(AVFormatContext *s,$/;"	f	file:
rtsp_read_packet	libavformat/rtspdec.c	/^static int rtsp_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
rtsp_read_pause	libavformat/rtspdec.c	/^static int rtsp_read_pause(AVFormatContext *s)$/;"	f	file:
rtsp_read_play	libavformat/rtspdec.c	/^static int rtsp_read_play(AVFormatContext *s)$/;"	f	file:
rtsp_read_seek	libavformat/rtspdec.c	/^static int rtsp_read_seek(AVFormatContext *s, int stream_index,$/;"	f	file:
rtsp_reply_error	ffserver.c	/^static void rtsp_reply_error(HTTPContext *c, enum RTSPStatusCode error_number)$/;"	f	file:
rtsp_reply_header	ffserver.c	/^static void rtsp_reply_header(HTTPContext *c, enum RTSPStatusCode error_number)$/;"	f	file:
rtsp_streams	libavformat/rtsp.h	/^    struct RTSPStream **rtsp_streams; \/**< streams in this session *\/$/;"	m	struct:RTSPState	typeref:struct:RTSPState::RTSPStream
rtsp_write_close	libavformat/rtspenc.c	/^static int rtsp_write_close(AVFormatContext *s)$/;"	f	file:
rtsp_write_header	libavformat/rtspenc.c	/^static int rtsp_write_header(AVFormatContext *s)$/;"	f	file:
rtsp_write_packet	libavformat/rtspenc.c	/^static int rtsp_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
rtsp_write_record	libavformat/rtspenc.c	/^static int rtsp_write_record(AVFormatContext *s)$/;"	f	file:
run	libavcodec/aaccoder.c	/^    int run;$/;"	m	struct:BandCodingPath	file:
run	libavcodec/dnxhddata.h	/^    const uint8_t *run_bits, *run;$/;"	m	struct:__anon281
run	libavcodec/get_bits.h	/^    uint8_t run;$/;"	m	struct:RL_VLC_ELEM
run	libavcodec/loco.c	/^    int save, run, run2; \/* internal rice decoder state *\/$/;"	m	struct:RICEContext	file:
run	libavcodec/svq3.c	/^static const struct { uint8_t run; uint8_t level; } svq3_dct_tables[2][16] = {$/;"	m	struct:__anon142	file:
run	tests/fate-run.sh	/^run(){$/;"	f
run2	libavcodec/loco.c	/^    int save, run, run2; \/* internal rice decoder state *\/$/;"	m	struct:RICEContext	file:
run7_vlc	libavcodec/h264_cavlc.c	/^static VLC run7_vlc;$/;"	v	file:
run7_vlc_table	libavcodec/h264_cavlc.c	/^static VLC_TYPE run7_vlc_table[96][2];$/;"	v	file:
run7_vlc_table_size	libavcodec/h264_cavlc.c	/^static const int run7_vlc_table_size = 96;$/;"	v	file:
run_as_daemon	ffmpeg.c	/^static int run_as_daemon  = 0;$/;"	v	file:
run_as_daemon	ffmpeg/ffmpeg.c	/^static int run_as_daemon  = 0;$/;"	v	file:
run_bits	libavcodec/dnxhddata.h	/^    const uint8_t *run_bits, *run;$/;"	m	struct:__anon281
run_bits	libavcodec/dnxhdenc.h	/^    uint8_t  *run_bits;$/;"	m	struct:DNXHDEncContext
run_bits	libavcodec/h264_cavlc.c	/^static const uint8_t run_bits[7][16]={$/;"	v	file:
run_codes	libavcodec/dnxhddata.h	/^    const uint16_t *run_codes;$/;"	m	struct:__anon281
run_codes	libavcodec/dnxhdenc.h	/^    uint16_t *run_codes;$/;"	m	struct:DNXHDEncContext
run_ffmpeg	tests/regression-funcs.sh	/^run_ffmpeg()$/;"	f
run_index	libavcodec/ffv1.c	/^    int run_index;$/;"	m	struct:FFV1Context	file:
run_index	libavcodec/jpegls.h	/^    int run_index[3];$/;"	m	struct:JLSState
run_len	libavcodec/h264_cavlc.c	/^static const uint8_t run_len[7][16]={$/;"	v	file:
run_offset	libavcodec/intrax8.c	153;"	d	file:
run_offset	libavcodec/intrax8.c	195;"	d	file:
run_table	libavcodec/wma.h	/^    uint16_t *run_table[2];$/;"	m	struct:WMACodecContext
run_test	libavutil/des.c	/^static int run_test(int cbc, int decrypt) {$/;"	f	file:
run_value_bits	libavcodec/aaccoder.c	/^static const uint8_t *run_value_bits[2] = {$/;"	v	file:
run_value_bits_long	libavcodec/aaccoder.c	/^static const uint8_t run_value_bits_long[64] = {$/;"	v	file:
run_value_bits_short	libavcodec/aaccoder.c	/^static const uint8_t run_value_bits_short[16] = {$/;"	v	file:
run_vlc	libavcodec/dnxhddec.c	/^    VLC ac_vlc, dc_vlc, run_vlc;$/;"	m	struct:__anon154	file:
run_vlc	libavcodec/h264_cavlc.c	/^static VLC run_vlc[6];$/;"	v	file:
run_vlc_tables	libavcodec/h264_cavlc.c	/^static VLC_TYPE run_vlc_tables[6][8][2];$/;"	v	file:
run_vlc_tables_size	libavcodec/h264_cavlc.c	/^static const int run_vlc_tables_size = 8;$/;"	v	file:
runtab	libavcodec/ivi_common.h	/^    uint8_t     runtab[256];$/;"	m	struct:__anon104
runv_vlc	libavcodec/vp56.h	/^    VLC runv_vlc[2];$/;"	m	struct:vp56_context
rv10_decode_end	libavcodec/rv10.c	/^static av_cold int rv10_decode_end(AVCodecContext *avctx)$/;"	f	file:
rv10_decode_frame	libavcodec/rv10.c	/^static int rv10_decode_frame(AVCodecContext *avctx,$/;"	f	file:
rv10_decode_init	libavcodec/rv10.c	/^static av_cold int rv10_decode_init(AVCodecContext *avctx)$/;"	f	file:
rv10_decode_packet	libavcodec/rv10.c	/^static int rv10_decode_packet(AVCodecContext *avctx,$/;"	f	file:
rv10_decode_picture_header	libavcodec/rv10.c	/^static int rv10_decode_picture_header(MpegEncContext *s)$/;"	f	file:
rv10_encode_picture_header	libavcodec/rv10enc.c	/^void rv10_encode_picture_header(MpegEncContext *s, int picture_number)$/;"	f
rv10_first_dc_coded	libavcodec/mpegvideo.h	/^    int rv10_first_dc_coded[3];$/;"	m	struct:MpegEncContext
rv10_version	libavcodec/mpegvideo.h	/^    int rv10_version; \/\/\/< RV10 version: 0 or 3$/;"	m	struct:MpegEncContext
rv10_write_header	libavformat/rmenc.c	/^static int rv10_write_header(AVFormatContext *ctx,$/;"	f	file:
rv20_decode_picture_header	libavcodec/rv10.c	/^static int rv20_decode_picture_header(MpegEncContext *s)$/;"	f	file:
rv20_encode_picture_header	libavcodec/rv20enc.c	/^void rv20_encode_picture_header(MpegEncContext *s, int picture_number){$/;"	f
rv30	libavcodec/rv34.h	/^    int rv30;                \/\/\/< indicates which RV variasnt is currently decoded$/;"	m	struct:RV34DecContext
rv30_decode_init	libavcodec/rv30.c	/^static av_cold int rv30_decode_init(AVCodecContext *avctx)$/;"	f	file:
rv30_decode_intra_types	libavcodec/rv30.c	/^static int rv30_decode_intra_types(RV34DecContext *r, GetBitContext *gb, int8_t *dst)$/;"	f	file:
rv30_decode_mb_info	libavcodec/rv30.c	/^static int rv30_decode_mb_info(RV34DecContext *r)$/;"	f	file:
rv30_itype_code	libavcodec/rv30data.h	/^static const uint8_t rv30_itype_code[9*9*2] = {$/;"	v
rv30_itype_from_context	libavcodec/rv30data.h	/^static const uint8_t rv30_itype_from_context[900] = {$/;"	v
rv30_loop_filt_lim	libavcodec/rv30data.h	/^static const uint8_t rv30_loop_filt_lim[32] = {$/;"	v
rv30_loop_filter	libavcodec/rv30.c	/^static void rv30_loop_filter(RV34DecContext *r, int row)$/;"	f	file:
rv30_luma_dc_quant	libavcodec/rv30data.h	/^static const uint8_t rv30_luma_dc_quant[32] = {$/;"	v
rv30_parse_slice_header	libavcodec/rv30.c	/^static int rv30_parse_slice_header(RV34DecContext *r, GetBitContext *gb, SliceInfo *si)$/;"	f	file:
rv30_weak_loop_filter	libavcodec/rv30.c	/^static inline void rv30_weak_loop_filter(uint8_t *src, const int step,$/;"	f	file:
rv34_add_4x4_block	libavcodec/rv34.c	/^static void rv34_add_4x4_block(uint8_t *dst, int stride, DCTELEM block[64], int off)$/;"	f	file:
rv34_apply_differences	libavcodec/rv34.c	/^static void rv34_apply_differences(RV34DecContext *r, int cbp)$/;"	f	file:
rv34_cbp_code	libavcodec/rv34data.h	/^static const uint8_t rv34_cbp_code[16] = {$/;"	v
rv34_chroma_quant	libavcodec/rv34data.h	/^static const uint8_t rv34_chroma_quant[2][32] = {$/;"	v
rv34_count_ones	libavcodec/rv34data.h	/^static const uint8_t rv34_count_ones[16] = {$/;"	v
rv34_decode_block	libavcodec/rv34.c	/^static inline void rv34_decode_block(DCTELEM *dst, GetBitContext *gb, RV34VLC *rvlc, int fc, int sc)$/;"	f	file:
rv34_decode_cbp	libavcodec/rv34.c	/^static int rv34_decode_cbp(GetBitContext *gb, RV34VLC *vlc, int table)$/;"	f	file:
rv34_decode_dquant	libavcodec/rv34.c	/^static inline int rv34_decode_dquant(GetBitContext *gb, int quant)$/;"	f	file:
rv34_decode_macroblock	libavcodec/rv34.c	/^static int rv34_decode_macroblock(RV34DecContext *r, int8_t *intra_types)$/;"	f	file:
rv34_decode_mb_header	libavcodec/rv34.c	/^static int rv34_decode_mb_header(RV34DecContext *r, int8_t *intra_types)$/;"	f	file:
rv34_decode_mv	libavcodec/rv34.c	/^static int rv34_decode_mv(RV34DecContext *r, int block_type)$/;"	f	file:
rv34_decode_slice	libavcodec/rv34.c	/^static int rv34_decode_slice(RV34DecContext *r, int end, const uint8_t* buf, int buf_size)$/;"	f	file:
rv34_dequant4x4	libavcodec/rv34.c	/^static inline void rv34_dequant4x4(DCTELEM *block, int Qdc, int Q)$/;"	f	file:
rv34_dequant4x4_16x16	libavcodec/rv34.c	/^static inline void rv34_dequant4x4_16x16(DCTELEM *block, int Qdc, int Q)$/;"	f	file:
rv34_dezigzag	libavcodec/rv34data.h	/^static const uint8_t rv34_dezigzag[16] = {$/;"	v
rv34_dquant_tab	libavcodec/rv34data.h	/^static const uint8_t rv34_dquant_tab[2][32]={$/;"	v
rv34_gen_vlc	libavcodec/rv34.c	/^static void rv34_gen_vlc(const uint8_t *bits, int size, VLC *vlc, const uint8_t *insyms,$/;"	f	file:
rv34_init_tables	libavcodec/rv34.c	/^static av_cold void rv34_init_tables(void)$/;"	f	file:
rv34_inter_cbp	libavcodec/rv34vlc.h	/^static const uint8_t rv34_inter_cbp[NUM_INTER_TABLES][4][CBP_VLC_SIZE] = {$/;"	v
rv34_inter_cbppat	libavcodec/rv34vlc.h	/^static const uint8_t rv34_inter_cbppat[NUM_INTER_TABLES][CBPPAT_VLC_SIZE] = {$/;"	v
rv34_inter_coeff	libavcodec/rv34vlc.h	/^static const uint8_t rv34_inter_coeff[NUM_INTER_TABLES][COEFF_VLC_SIZE] = {$/;"	v
rv34_intra_coeff	libavcodec/rv34vlc.h	/^static const uint8_t rv34_intra_coeff[NUM_INTRA_TABLES][COEFF_VLC_SIZE] = {$/;"	v
rv34_inv_transform	libavcodec/rv34.c	/^static void rv34_inv_transform(DCTELEM *block){$/;"	f	file:
rv34_inv_transform_noround	libavcodec/rv34.c	/^static void rv34_inv_transform_noround(DCTELEM *block){$/;"	f	file:
rv34_mb_bits_sizes	libavcodec/rv34data.h	/^static const uint8_t rv34_mb_bits_sizes[6] = { 6, 7, 9, 11, 13, 14 };$/;"	v
rv34_mb_max_sizes	libavcodec/rv34data.h	/^static const uint16_t rv34_mb_max_sizes[6] = { 0x2F, 0x62, 0x18B, 0x62F, 0x18BF, 0x23FF };$/;"	v
rv34_mb_type_to_lavc	libavcodec/rv34.c	/^static const int rv34_mb_type_to_lavc[12] = {$/;"	v	file:
rv34_mc	libavcodec/rv34.c	/^static inline void rv34_mc(RV34DecContext *r, const int block_type,$/;"	f	file:
rv34_mc_1mv	libavcodec/rv34.c	/^static void rv34_mc_1mv(RV34DecContext *r, const int block_type,$/;"	f	file:
rv34_mc_2mv	libavcodec/rv34.c	/^static void rv34_mc_2mv(RV34DecContext *r, const int block_type)$/;"	f	file:
rv34_mc_2mv_skip	libavcodec/rv34.c	/^static void rv34_mc_2mv_skip(RV34DecContext *r)$/;"	f	file:
rv34_output_macroblock	libavcodec/rv34.c	/^static void rv34_output_macroblock(RV34DecContext *r, int8_t *intra_types, int cbp, int is16)$/;"	f	file:
rv34_pred_4x4_block	libavcodec/rv34.c	/^static void rv34_pred_4x4_block(RV34DecContext *r, uint8_t *dst, int stride, int itype, int up, int left, int down, int right)$/;"	f	file:
rv34_pred_b_vector	libavcodec/rv34.c	/^static inline void rv34_pred_b_vector(int A[2], int B[2], int C[2],$/;"	f	file:
rv34_pred_mv	libavcodec/rv34.c	/^static void rv34_pred_mv(RV34DecContext *r, int block_type, int subblock_no, int dmv_no)$/;"	f	file:
rv34_pred_mv_b	libavcodec/rv34.c	/^static void rv34_pred_mv_b(RV34DecContext *r, int block_type, int dir)$/;"	f	file:
rv34_pred_mv_rv3	libavcodec/rv34.c	/^static void rv34_pred_mv_rv3(RV34DecContext *r, int block_type, int dir)$/;"	f	file:
rv34_qscale_tab	libavcodec/rv34data.h	/^static const uint16_t rv34_qscale_tab[32] = {$/;"	v
rv34_quant_to_vlc_set	libavcodec/rv34data.h	/^static const uint8_t rv34_quant_to_vlc_set[2][31] = {$/;"	v
rv34_row_transform	libavcodec/rv34.c	/^static av_always_inline void rv34_row_transform(int temp[16], DCTELEM *block)$/;"	f	file:
rv34_set_deblock_coef	libavcodec/rv34.c	/^static int rv34_set_deblock_coef(RV34DecContext *r)$/;"	f	file:
rv34_table_inter_firstpat	libavcodec/rv34vlc.h	/^static const uint8_t rv34_table_inter_firstpat[NUM_INTER_TABLES][2][FIRSTBLK_VLC_SIZE] = {$/;"	v
rv34_table_inter_secondpat	libavcodec/rv34vlc.h	/^static const uint8_t rv34_table_inter_secondpat[NUM_INTER_TABLES][2][OTHERBLK_VLC_SIZE] = {$/;"	v
rv34_table_inter_thirdpat	libavcodec/rv34vlc.h	/^static const uint8_t rv34_table_inter_thirdpat[NUM_INTER_TABLES][2][OTHERBLK_VLC_SIZE] = {$/;"	v
rv34_table_intra_cbp	libavcodec/rv34vlc.h	/^static const uint8_t rv34_table_intra_cbp[NUM_INTRA_TABLES][8][CBP_VLC_SIZE] = {$/;"	v
rv34_table_intra_cbppat	libavcodec/rv34vlc.h	/^static const uint8_t rv34_table_intra_cbppat[NUM_INTRA_TABLES][2][CBPPAT_VLC_SIZE] = {$/;"	v
rv34_table_intra_firstpat	libavcodec/rv34vlc.h	/^static const uint8_t rv34_table_intra_firstpat[NUM_INTRA_TABLES][4][FIRSTBLK_VLC_SIZE] = {$/;"	v
rv34_table_intra_secondpat	libavcodec/rv34vlc.h	/^static const uint8_t rv34_table_intra_secondpat[NUM_INTRA_TABLES][2][OTHERBLK_VLC_SIZE] = {$/;"	v
rv34_table_intra_thirdpat	libavcodec/rv34vlc.h	/^static const uint8_t rv34_table_intra_thirdpat[NUM_INTRA_TABLES][2][OTHERBLK_VLC_SIZE] = {$/;"	v
rv40_adaptive_loop_filter	libavcodec/rv40.c	/^static av_always_inline void rv40_adaptive_loop_filter(uint8_t *src, const int step,$/;"	f	file:
rv40_aic_table_index	libavcodec/rv40data.h	/^static const uint16_t rv40_aic_table_index[MODE2_PATTERNS_NUM] = {$/;"	v
rv40_aic_top_vlc_bits	libavcodec/rv40vlc2.h	/^static const uint8_t rv40_aic_top_vlc_bits[AIC_TOP_SIZE] = {$/;"	v
rv40_aic_top_vlc_codes	libavcodec/rv40vlc2.h	/^static const uint8_t rv40_aic_top_vlc_codes[AIC_TOP_SIZE] = {$/;"	v
rv40_alpha_tab	libavcodec/rv40data.h	/^static const uint8_t rv40_alpha_tab[32] = {$/;"	v
rv40_beta_tab	libavcodec/rv40data.h	/^static const uint8_t rv40_beta_tab[32] = {$/;"	v
rv40_bias	libavcodec/rv40dsp.c	/^static const int rv40_bias[4][4] = {$/;"	v	file:
rv40_decode_init	libavcodec/rv40.c	/^static av_cold int rv40_decode_init(AVCodecContext *avctx)$/;"	f	file:
rv40_decode_intra_types	libavcodec/rv40.c	/^static int rv40_decode_intra_types(RV34DecContext *r, GetBitContext *gb, int8_t *dst)$/;"	f	file:
rv40_decode_mb_info	libavcodec/rv40.c	/^static int rv40_decode_mb_info(RV34DecContext *r)$/;"	f	file:
rv40_dither_l	libavcodec/rv40data.h	/^static const uint8_t rv40_dither_l[16] = {$/;"	v
rv40_dither_r	libavcodec/rv40data.h	/^static const uint8_t rv40_dither_r[16] = {$/;"	v
rv40_filter_clip_tbl	libavcodec/rv40data.h	/^static const uint8_t rv40_filter_clip_tbl[3][32] = {$/;"	v
rv40_h_loop_filter	libavcodec/rv40.c	/^static void rv40_h_loop_filter(uint8_t *src, int stride, int dmode,$/;"	f	file:
rv40_init_tables	libavcodec/rv40.c	/^static av_cold void rv40_init_tables(void)$/;"	f	file:
rv40_loop_filter	libavcodec/rv40.c	/^static void rv40_loop_filter(RV34DecContext *r, int row)$/;"	f	file:
rv40_luma_dc_quant	libavcodec/rv40data.h	/^static const uint8_t rv40_luma_dc_quant[2][32] = {$/;"	v
rv40_parse_picture_size	libavcodec/rv40.c	/^static void rv40_parse_picture_size(GetBitContext *gb, int *w, int *h)$/;"	f	file:
rv40_parse_slice_header	libavcodec/rv40.c	/^static int rv40_parse_slice_header(RV34DecContext *r, GetBitContext *gb, SliceInfo *si)$/;"	f	file:
rv40_standard_heights	libavcodec/rv40data.h	/^static const int rv40_standard_heights[]  = { 120, 132, 144, 240, 288, 480, -8, -10, 180, 360, 576, 0};$/;"	v
rv40_standard_widths	libavcodec/rv40data.h	/^static const int rv40_standard_widths[]   = { 160, 172, 240, 320, 352, 640, 704, 0};$/;"	v
rv40_v_loop_filter	libavcodec/rv40.c	/^static void rv40_v_loop_filter(uint8_t *src, int stride, int dmode,$/;"	f	file:
rv40_weak_loop_filter	libavcodec/rv40.c	/^static inline void rv40_weak_loop_filter(uint8_t *src, const int step,$/;"	f	file:
rv_chrom_bits	libavcodec/rv10.c	/^static const uint8_t rv_chrom_bits[256] =$/;"	v	file:
rv_chrom_code	libavcodec/rv10.c	/^static const uint16_t rv_chrom_code[256] =$/;"	v	file:
rv_dc_chrom	libavcodec/rv10.c	/^static VLC rv_dc_lum, rv_dc_chrom;$/;"	v	file:
rv_dc_lum	libavcodec/rv10.c	/^static VLC rv_dc_lum, rv_dc_chrom;$/;"	v	file:
rv_decode_dc	libavcodec/rv10.c	/^int rv_decode_dc(MpegEncContext *s, int n)$/;"	f
rv_lum_bits	libavcodec/rv10.c	/^static const uint8_t rv_lum_bits[256] =$/;"	v	file:
rv_lum_code	libavcodec/rv10.c	/^static const uint16_t rv_lum_code[256] =$/;"	v	file:
rv_map	libavcodec/ivi_common.h	/^    RVMapDesc       *rv_map;        \/\/\/< ptr to the RLE table for this band$/;"	m	struct:__anon107
rvlc	libavcodec/mpegvideo.h	/^    int rvlc;                        \/\/\/< reversible vlc$/;"	m	struct:MpegEncContext
rvlc_rl_inter	libavcodec/mpeg4data.h	/^RLTable rvlc_rl_inter = {$/;"	v
rvlc_rl_intra	libavcodec/mpeg4data.h	/^RLTable rvlc_rl_intra = {$/;"	v
rvmap_sel	libavcodec/ivi_common.h	/^    int             rvmap_sel;      \/\/\/< rvmap table selector$/;"	m	struct:__anon107
rvmap_tabs	libavcodec/indeo5.c	/^    RVMapDesc       rvmap_tabs[9];   \/\/\/< local corrected copy of the static rvmap tables$/;"	m	struct:__anon203	file:
s	libavcodec/cavs.h	/^    MpegEncContext s;$/;"	m	struct:__anon207
s	libavcodec/eamad.c	/^    MpegEncContext s;$/;"	m	struct:MadContext	file:
s	libavcodec/eatqi.c	/^    MpegEncContext s;$/;"	m	struct:TqiContext	file:
s	libavcodec/h261.h	/^    MpegEncContext s;$/;"	m	struct:H261Context
s	libavcodec/h264.h	/^    MpegEncContext s;$/;"	m	struct:H264Context
s	libavcodec/intrax8.h	/^    MpegEncContext * s;$/;"	m	struct:__anon134
s	libavcodec/rv34.h	/^    MpegEncContext s;$/;"	m	struct:RV34DecContext
s	libavcodec/vc1.h	/^    MpegEncContext s;$/;"	m	struct:VC1Context
s	libavcodec/wmv2.h	/^    MpegEncContext s;$/;"	m	struct:Wmv2Context
s	libavfilter/libmpcodecs/vf_ivtc.c	/^    int t, s, p;$/;"	m	struct:metrics	file:
s	libavformat/libnut.c	/^    nut_stream_header_tt * s;$/;"	m	struct:__anon424	file:
s	libavformat/matroskadec.c	/^        const char *s;$/;"	m	union:EbmlSyntax::__anon351	file:
s	libavutil/eval.c	/^    char *s;$/;"	m	struct:Parser	file:
s$16	libavcodec/bfin/pixels_bfin.S	/^s$16:   DISALGNEXCPT         || R1 = [I0++]    || R3 = [I1++];$/;"	l
s$8	libavcodec/bfin/pixels_bfin.S	/^s$8:    SAA (R1:0,R3:2)      || R0 = [I0++M0] || R2 = [I1++M1];$/;"	l
s0	libavcodec/alpha/regdef.h	37;"	d
s1	libavcodec/adx.h	/^    int s1,s2;$/;"	m	struct:__anon158
s1	libavcodec/alpha/regdef.h	38;"	d
s2	libavcodec/adx.h	/^    int s1,s2;$/;"	m	struct:__anon158
s2	libavcodec/alpha/regdef.h	39;"	d
s3	libavcodec/alpha/regdef.h	40;"	d
s302m_decode_frame	libavcodec/s302m.c	/^static int s302m_decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
s302m_parse_frame_header	libavcodec/s302m.c	/^static int s302m_parse_frame_header(AVCodecContext *avctx, const uint8_t *buf,$/;"	f	file:
s32_data	libavcodec/libmp3lame.c	/^    } s32_data;$/;"	m	struct:Mp3AudioContext	typeref:struct:Mp3AudioContext::__anon265	file:
s4	libavcodec/alpha/regdef.h	41;"	d
s5	libavcodec/alpha/regdef.h	42;"	d
s6	libavcodec/alpha/regdef.h	43;"	d
sBitRates	libavcodec/libmp3lame.c	/^static const int sBitRates[2][3][15] = {$/;"	v	file:
sBitsPerSlot	libavcodec/libmp3lame.c	/^static const int sBitsPerSlot[3] = {$/;"	v	file:
sSampleRates	libavcodec/libmp3lame.c	/^static const int sSampleRates[] = {$/;"	v	file:
sSamplesPerFrame	libavcodec/libmp3lame.c	/^static const int sSamplesPerFrame[2][3] =$/;"	v	file:
sWidth	libavcodec/crystalhd.c	/^    uint32_t sWidth;$/;"	m	struct:__anon268	file:
s_indexmapped	libavcodec/sbr.h	/^    uint8_t            s_indexmapped[8][48];$/;"	m	struct:__anon56
s_m	libavcodec/sbr.h	/^    float              s_m[7][48];$/;"	m	struct:__anon57
s_mapped	libavcodec/sbr.h	/^    uint8_t            s_mapped[7][48];$/;"	m	struct:__anon57
s_max	libavcodec/alsdec.c	/^    unsigned int s_max;             \/\/\/< maximum Rice parameter allowed in entropy coding$/;"	m	struct:__anon152	file:
s_predictor	libavcodec/g722.c	/^        int16_t s_predictor;         \/\/\/< predictor output value$/;"	m	struct:__anon140::G722Band	file:
s_zero	libavcodec/g722.c	/^        int32_t s_zero;              \/\/\/< previous output signal from zero predictor$/;"	m	struct:__anon140::G722Band	file:
sab_diamond_search	libavcodec/motion_est_template.c	/^static int sab_diamond_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
sad	libavcodec/dsputil.h	/^    me_cmp_func sad[6]; \/* identical to pix_absAxA except additional void * *\/$/;"	m	struct:DSPContext
sad	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct { unsigned int even, odd, noise, temp; } sad;$/;"	m	struct:frame_stats	typeref:struct:frame_stats::__anon35	file:
sad16_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int sad16_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
sad16_sse2	libavcodec/x86/motion_est_mmx.c	/^static int sad16_sse2(void *v, uint8_t *blk2, uint8_t *blk1, int stride, int h)$/;"	f	file:
sad16_x2_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int sad16_x2_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
sad16_xy2_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int sad16_xy2_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
sad16_y2_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int sad16_y2_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
sad8_1_mmx	libavcodec/x86/motion_est_mmx.c	/^static inline void sad8_1_mmx(uint8_t *blk1, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_1_mmx2	libavcodec/x86/motion_est_mmx.c	/^static inline void sad8_1_mmx2(uint8_t *blk1, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_2_mmx	libavcodec/x86/motion_est_mmx.c	/^static inline void sad8_2_mmx(uint8_t *blk1a, uint8_t *blk1b, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_4_mmx	libavcodec/x86/motion_est_mmx.c	/^static inline void sad8_4_mmx(uint8_t *blk1, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_4_mmx2	libavcodec/x86/motion_est_mmx.c	/^static inline void sad8_4_mmx2(uint8_t *blk1, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int sad8_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
sad8_x2a_mmx	libavcodec/x86/motion_est_mmx.c	/^static inline void sad8_x2a_mmx(uint8_t *blk1, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_x2a_mmx2	libavcodec/x86/motion_est_mmx.c	/^static inline void sad8_x2a_mmx2(uint8_t *blk1, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_y2a_mmx	libavcodec/x86/motion_est_mmx.c	/^static inline void sad8_y2a_mmx(uint8_t *blk1, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad8_y2a_mmx2	libavcodec/x86/motion_est_mmx.c	/^static inline void sad8_y2a_mmx2(uint8_t *blk1, uint8_t *blk2, int stride, int h)$/;"	f	file:
sad_hpel_motion_search	libavcodec/motion_est.c	/^static inline int sad_hpel_motion_search(MpegEncContext * s,$/;"	f	file:
sad_thres	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long sad_thres;$/;"	m	struct:vf_priv_s	file:
safe_malloc	libavfilter/libmpcodecs/vf_remove_logo.c	/^static void * safe_malloc(int size)$/;"	f	file:
same_block	libavcodec/snow.c	/^static av_always_inline int same_block(BlockNode *a, BlockNode *b){$/;"	f	file:
same_quality	ffmpeg.c	/^static int same_quality = 0;$/;"	v	file:
same_quality	ffmpeg/ffmpeg.c	/^static int same_quality = 0;$/;"	v	file:
sample	libavcodec/dpcm.c	/^    long sample[2];\/\/for SOL_DPCM$/;"	m	struct:DPCMContext	file:
sample1	libavcodec/adpcm.c	/^    int sample1;$/;"	m	struct:TrellisNode	file:
sample1	libavcodec/adpcm.c	/^    short sample1;$/;"	m	struct:ADPCMChannelStatus	file:
sample2	libavcodec/adpcm.c	/^    int sample2;$/;"	m	struct:TrellisNode	file:
sample2	libavcodec/adpcm.c	/^    short sample2;$/;"	m	struct:ADPCMChannelStatus	file:
sampleCount	libavformat/movenc.h	/^    long        sampleCount;$/;"	m	struct:MOVIndex
sampleSize	libavformat/movenc.h	/^    long        sampleSize;$/;"	m	struct:MOVIndex
sample_array	ffplay.c	/^    int16_t sample_array[SAMPLE_ARRAY_SIZE];$/;"	m	struct:VideoState	file:
sample_array_index	ffplay.c	/^    int sample_array_index;$/;"	m	struct:VideoState	file:
sample_aspect_ratio	libavcodec/avcodec.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVCodecContext
sample_aspect_ratio	libavfilter/avfilter.h	/^    AVRational sample_aspect_ratio; \/\/\/< agreed upon sample aspect ratio$/;"	m	struct:AVFilterLink
sample_aspect_ratio	libavfilter/avfilter.h	/^    AVRational sample_aspect_ratio; \/\/\/< sample aspect ratio$/;"	m	struct:AVFilterBufferRefVideoProps
sample_aspect_ratio	libavfilter/vsrc_buffer.c	/^    AVRational        sample_aspect_ratio;$/;"	m	struct:__anon25	file:
sample_aspect_ratio	libavformat/avformat.h	/^    AVRational sample_aspect_ratio;$/;"	m	struct:AVStream
sample_blocks	libavcodec/dca.c	/^    int sample_blocks;          \/\/\/< number of PCM sample blocks$/;"	m	struct:__anon93	file:
sample_buf	libavcodec/alacenc.c	/^    int32_t sample_buf[MAX_CHANNELS][DEFAULT_FRAME_SIZE];$/;"	m	struct:AlacEncodeContext	file:
sample_buffer	libavcodec/ffv1.c	/^    int16_t *sample_buffer;$/;"	m	struct:FFV1Context	file:
sample_buffer	libavcodec/mlpdec.c	/^    int32_t     sample_buffer[MAX_BLOCKSIZE][MAX_CHANNELS];$/;"	m	struct:MLPDecodeContext	file:
sample_count	libavcodec/flacenc.c	/^    uint64_t sample_count;$/;"	m	struct:FlacEncodeContext	file:
sample_count	libavcodec/vorbisenc.c	/^    int64_t sample_count;$/;"	m	struct:__anon194	file:
sample_count	libavformat/isom.h	/^    unsigned int sample_count;$/;"	m	struct:MOVStreamContext
sample_count	libavformat/segafilm.c	/^    unsigned int sample_count;$/;"	m	struct:FilmDemuxContext	file:
sample_fmt	libavcodec/avcodec.h	/^    enum AVSampleFormat sample_fmt;  \/\/\/< sample format$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVSampleFormat
sample_fmt	libavcodec/resample.c	/^    enum AVSampleFormat sample_fmt[2]; \/\/\/< input and output sample format$/;"	m	struct:ReSampleContext	typeref:enum:ReSampleContext::AVSampleFormat	file:
sample_fmt_bits_per_sample	libavdevice/dshow.c	/^static enum SampleFormat sample_fmt_bits_per_sample(int bits)$/;"	f	file:
sample_fmt_info	libavutil/samplefmt.c	/^static const SampleFmtInfo sample_fmt_info[AV_SAMPLE_FMT_NB] = {$/;"	v	file:
sample_fmts	libavcodec/avcodec.h	/^    const enum AVSampleFormat *sample_fmts; \/\/\/< array of supported sample formats, or NULL if unknown, array is terminated by -1$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVSampleFormat
sample_index	ffmpeg.c	/^    int64_t sample_index;      \/* current sample *\/$/;"	m	struct:AVInputStream	file:
sample_index	ffmpeg/ffmpeg.c	/^    int64_t sample_index;      \/* current sample *\/$/;"	m	struct:AVInputStream	file:
sample_message	libavcodec/mlpdec.c	/^static const char* sample_message =$/;"	v	file:
sample_number	libavformat/movenc.h	/^    int sample_number;$/;"	m	struct:HintSample
sample_offset	libavformat/segafilm.c	/^  int64_t sample_offset;$/;"	m	struct:__anon328	file:
sample_queue	libavformat/movenc.h	/^    HintSampleQueue sample_queue;$/;"	m	struct:MOVIndex
sample_queue_free	libavformat/movenchint.c	/^static void sample_queue_free(HintSampleQueue *queue)$/;"	f	file:
sample_queue_pop	libavformat/movenchint.c	/^static void sample_queue_pop(HintSampleQueue *queue)$/;"	f	file:
sample_queue_push	libavformat/movenchint.c	/^static void sample_queue_push(HintSampleQueue *queue, AVPacket *pkt, int sample)$/;"	f	file:
sample_queue_retain	libavformat/movenchint.c	/^static void sample_queue_retain(HintSampleQueue *queue)$/;"	f	file:
sample_rate	libavcodec/aac_ac3_parser.h	/^    int sample_rate;$/;"	m	struct:AACAC3ParseContext
sample_rate	libavcodec/aacadtsdec.h	/^    uint32_t sample_rate;$/;"	m	struct:__anon121
sample_rate	libavcodec/ac3.h	/^    uint16_t sample_rate;$/;"	m	struct:__anon170
sample_rate	libavcodec/ac3dec.h	/^    int sample_rate;                        \/\/\/< sample frequency, in Hz$/;"	m	struct:__anon88
sample_rate	libavcodec/ac3enc.h	/^    int sample_rate;                        \/\/\/< sampling frequency, in Hz$/;"	m	struct:AC3EncodeContext
sample_rate	libavcodec/atrac3.c	/^    int                 sample_rate;$/;"	m	struct:__anon131	file:
sample_rate	libavcodec/avcodec.h	/^    int sample_rate; \/\/\/< samples per second$/;"	m	struct:AVCodecContext
sample_rate	libavcodec/cook.c	/^    int                 sample_rate;$/;"	m	struct:cook	file:
sample_rate	libavcodec/dca.c	/^    int sample_rate;            \/\/\/< audio sampling rate$/;"	m	struct:__anon93	file:
sample_rate	libavcodec/mpeg4audio.h	/^    int sample_rate;$/;"	m	struct:__anon208
sample_rate	libavcodec/sbr.h	/^    int                sample_rate;$/;"	m	struct:__anon57
sample_rate	libavcodec/vorbisenc.c	/^    int sample_rate;$/;"	m	struct:__anon194	file:
sample_rate	libavcodec/wma.h	/^    int sample_rate;$/;"	m	struct:WMACodecContext
sample_rate	libavdevice/alsa-audio.h	/^    int sample_rate; \/\/\/< sample rate set by user$/;"	m	struct:__anon313
sample_rate	libavdevice/jack_audio.c	/^    jack_nframes_t  sample_rate;$/;"	m	struct:__anon315	file:
sample_rate	libavdevice/oss_audio.c	/^    int sample_rate;$/;"	m	struct:__anon311	file:
sample_rate	libavdevice/sndio_common.h	/^    int sample_rate;$/;"	m	struct:__anon318
sample_rate	libavfilter/asrc_anullsrc.c	/^    int64_t sample_rate;$/;"	m	struct:__anon41	file:
sample_rate	libavfilter/avfilter.h	/^    int64_t sample_rate;        \/\/\/< samples per second$/;"	m	struct:AVFilterLink
sample_rate	libavfilter/avfilter.h	/^    uint32_t sample_rate;       \/\/\/< audio buffer sample rate$/;"	m	struct:AVFilterBufferRefAudioProps
sample_rate	libavformat/4xm.c	/^    int sample_rate;$/;"	m	struct:AudioTrack	file:
sample_rate	libavformat/avformat.h	/^    attribute_deprecated int sample_rate;$/;"	m	struct:AVFormatParameters
sample_rate	libavformat/electronicarts.c	/^    int sample_rate;$/;"	m	struct:EaDemuxContext	file:
sample_rate	libavformat/gxfenc.c	/^    uint32_t sample_rate;$/;"	m	struct:GXFStreamContext	file:
sample_rate	libavformat/mxfdec.c	/^    AVRational sample_rate;$/;"	m	struct:__anon443	file:
sample_rate	libavformat/rawdec.h	/^    int sample_rate;$/;"	m	struct:RawAudioDemuxerContext
sample_rate	libavformat/sierravmd.c	/^    int sample_rate;$/;"	m	struct:VmdDemuxContext	file:
sample_rate_code	libavcodec/dcaenc.c	/^    int sample_rate_code;$/;"	m	struct:__anon231	file:
sample_rate_index	libavformat/adts.h	/^    int sample_rate_index;$/;"	m	struct:__anon431
sample_shift	libavcodec/flacdec.c	/^    int sample_shift;                       \/\/\/< shift required to make output samples 16-bit or 32-bit$/;"	m	struct:FLACContext	file:
sample_size	libavcodec/resample.c	/^    unsigned sample_size[2];           \/\/\/< size of one sample in sample_fmt$/;"	m	struct:ReSampleContext	file:
sample_size	libavformat/audiointerleave.h	/^    int sample_size;              \/\/\/< size of one sample all channels included$/;"	m	struct:__anon342
sample_size	libavformat/avidec.c	/^    int sample_size; \/* size of one sample (or packet) (in the rate\/scale sense) in bytes *\/$/;"	m	struct:AVIStream	file:
sample_size	libavformat/gxfenc.c	/^    uint32_t sample_size;$/;"	m	struct:GXFStreamContext	file:
sample_size	libavformat/isom.h	/^    unsigned int sample_size;$/;"	m	struct:MOVStreamContext
sample_size	libavformat/nsvdec.c	/^    int sample_size; \/* audio only data *\/$/;"	m	struct:NSVStream	file:
sample_size	libavformat/segafilm.c	/^  unsigned int sample_size;$/;"	m	struct:__anon328	file:
sample_size_table	libavcodec/flac.c	/^static const int8_t sample_size_table[] = { 0, 8, 12, 0, 16, 20, 24, 0 };$/;"	v	file:
sample_sizes	libavformat/isom.h	/^    int *sample_sizes;$/;"	m	struct:MOVStreamContext
sample_start_pos	libavformat/iss.c	/^    int sample_start_pos;$/;"	m	struct:__anon410	file:
sample_table	libavformat/segafilm.c	/^    film_sample *sample_table;$/;"	m	struct:FilmDemuxContext	file:
sample_variance_threshold	libavcodec/vp56.h	/^    int sample_variance_threshold;$/;"	m	struct:vp56_context
samplerate	libavcodec/flacenc.c	/^    int samplerate;$/;"	m	struct:FlacEncodeContext	file:
samplerate	libavcodec/sonic.c	/^    int channels, samplerate, block_align, frame_size;$/;"	m	struct:SonicContext	file:
samplerate	libavformat/ape.c	/^    uint32_t samplerate;$/;"	m	struct:__anon335	file:
samplerate	libavformat/matroskadec.c	/^    double   samplerate;$/;"	m	struct:__anon358	file:
samplerate_index	libavcodec/aacenc.h	/^    int samplerate_index;                        \/\/\/< MPEG-4 samplerate index$/;"	m	struct:AACEncContext
samplerate_table	libavcodec/sonic.c	/^static const int samplerate_table[] =$/;"	v	file:
samples	doc/examples/muxing-example.c	/^int16_t *samples;$/;"	v
samples	ffmpeg.c	/^static short *samples;$/;"	v	file:
samples	ffmpeg/ffmpeg.c	/^static short *samples;$/;"	v	file:
samples	libavcodec/8svx.c	/^    uint8_t *samples;$/;"	m	struct:EightSvxContext	file:
samples	libavcodec/aac_ac3_parser.h	/^    int samples;$/;"	m	struct:AACAC3ParseContext
samples	libavcodec/aacadtsdec.h	/^    uint32_t samples;$/;"	m	struct:__anon121
samples	libavcodec/aacenc.h	/^    int16_t *samples;                            \/\/\/< saved preprocessed input$/;"	m	struct:AACEncContext
samples	libavcodec/alsdec.c	/^    uint32_t samples;         \/\/\/< number of samples, 0xFFFFFFFF if unknown$/;"	m	struct:__anon150	file:
samples	libavcodec/apedec.c	/^    int samples;                             \/\/\/< samples left to decode in current frame$/;"	m	struct:APEContext	file:
samples	libavcodec/flacenc.c	/^    int32_t samples[FLAC_MAX_BLOCKSIZE];$/;"	m	struct:FlacSubframe	file:
samples	libavcodec/vorbisenc.c	/^    float *samples;$/;"	m	struct:__anon194	file:
samples	libavcodec/wavpack.c	/^    int samples;$/;"	m	struct:WavpackContext	file:
samples	libavcodec/wavpack.c	/^    int samples;$/;"	m	struct:WavpackFrameContext	file:
samples	libavcodec/wmaprodec.c	/^    float*           samples;                       \/\/\/< current samplebuffer pointer$/;"	m	struct:WMAProDecodeCtx	file:
samples	libavformat/audiointerleave.h	/^    const int *samples;           \/\/\/< current samples per frame, pointer to samples_per_frame$/;"	m	struct:__anon342
samples	libavformat/movenc.h	/^    HintSample *samples;$/;"	m	struct:__anon449
samples	libavformat/mpc8.c	/^    int64_t samples;$/;"	m	struct:__anon398	file:
samples	libavformat/wv.c	/^    uint32_t samples, soff;$/;"	m	struct:__anon327	file:
samplesA	libavcodec/wavpack.c	/^    int samplesA[8];$/;"	m	struct:Decorr	file:
samplesB	libavcodec/wavpack.c	/^    int samplesB[8];$/;"	m	struct:Decorr	file:
samplesInChunk	libavformat/movenc.h	/^    unsigned int samplesInChunk;$/;"	m	struct:MOVIentry
samples_az	libavcodec/amrwbdec.c	/^    float samples_az[LP_ORDER + AMRWB_SFR_SIZE];         \/\/\/< low-band samples and memory from synthesis at 12.8kHz$/;"	m	struct:__anon64	file:
samples_buf	libavcodec/mpegaudioenc.c	/^    short samples_buf[MPA_MAX_CHANNELS][SAMPLES_BUF_SIZE]; \/* buffer for filter *\/$/;"	m	struct:MpegAudioContext	file:
samples_chanptr	libavcodec/dca.c	/^    const float *samples_chanptr[DCA_PRIM_CHANNELS_MAX+1];$/;"	m	struct:__anon93	file:
samples_deficit	libavcodec/dca.c	/^    int samples_deficit;        \/\/\/< deficit sample count$/;"	m	struct:__anon93	file:
samples_end	libavcodec/wmaprodec.c	/^    float*           samples_end;                   \/\/\/< maximum samplebuffer pointer$/;"	m	struct:WMAProDecodeCtx	file:
samples_hb	libavcodec/amrwbdec.c	/^    float samples_hb[LP_ORDER_16k + AMRWB_SFR_SIZE_16k]; \/\/\/< high-band samples and memory from synthesis at 16kHz$/;"	m	struct:__anon64	file:
samples_idx	libavcodec/8svx.c	/^    int samples_idx;$/;"	m	struct:EightSvxContext	file:
samples_in	libavcodec/amrnbdec.c	/^    float samples_in[LP_FILTER_ORDER + AMR_SUBFRAME_SIZE]; \/\/\/< floating point samples$/;"	m	struct:AMRContext	file:
samples_left	libavcodec/wavpack.c	/^    int samples_left;$/;"	m	struct:WavpackContext	file:
samples_left	libavcodec/wavpack.c	/^    int samples_left;$/;"	m	struct:WavpackFrameContext	file:
samples_offset	libavcodec/mpegaudioenc.c	/^    int samples_offset[MPA_MAX_CHANNELS];       \/* offset in samples_buf *\/$/;"	m	struct:MpegAudioContext	file:
samples_per_band	libavcodec/atrac1.c	/^static const uint16_t samples_per_band[3] = {128, 128, 256};$/;"	v	file:
samples_per_channel	libavcodec/atrac3.c	/^    int                 samples_per_channel;$/;"	m	struct:__anon131	file:
samples_per_channel	libavcodec/cook.c	/^    int                 samples_per_channel;$/;"	m	struct:__anon230	file:
samples_per_channel	libavcodec/cook.c	/^    int                 samples_per_channel;$/;"	m	struct:cook	file:
samples_per_frame	libavcodec/atrac3.c	/^    int                 samples_per_frame;$/;"	m	struct:__anon131	file:
samples_per_frame	libavcodec/cook.c	/^    int                 samples_per_frame;$/;"	m	struct:__anon230	file:
samples_per_frame	libavcodec/wmaprodec.c	/^    uint16_t         samples_per_frame;             \/\/\/< number of samples to output$/;"	m	struct:WMAProDecodeCtx	file:
samples_per_frame	libavformat/audiointerleave.h	/^    const int *samples_per_frame; \/\/\/< must be 0-terminated$/;"	m	struct:__anon342
samples_per_frame	libavformat/isom.h	/^    unsigned int samples_per_frame;$/;"	m	struct:MOVStreamContext
samples_per_frame	libavformat/swf.h	/^    int samples_per_frame;$/;"	m	struct:__anon336
samples_per_packet	libavformat/cafenc.c	/^static uint32_t samples_per_packet(enum CodecID codec_id) {$/;"	f	file:
samples_size	libavcodec/8svx.c	/^    size_t samples_size;$/;"	m	struct:EightSvxContext	file:
samples_up	libavcodec/amrwbdec.c	/^    float samples_up[UPS_MEM_SIZE + AMRWB_SFR_SIZE];     \/\/\/< low-band samples and memory processed for upsampling$/;"	m	struct:__anon64	file:
samples_written	libavcodec/ac3enc.h	/^    int64_t samples_written;                \/\/\/< sample count (used to avg. bitrate)$/;"	m	struct:AC3EncodeContext
sampling_index	libavcodec/aacadtsdec.h	/^    uint8_t  sampling_index;$/;"	m	struct:__anon121
sampling_index	libavcodec/mpeg4audio.h	/^    int sampling_index;$/;"	m	struct:__anon208
sanitize	libavutil/log.c	/^static void sanitize(uint8_t *line){$/;"	f	file:
sap_fetch_packet	libavformat/sapdec.c	/^static int sap_fetch_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
sap_probe	libavformat/sapdec.c	/^static int sap_probe(AVProbeData *p)$/;"	f	file:
sap_read_close	libavformat/sapdec.c	/^static int sap_read_close(AVFormatContext *s)$/;"	f	file:
sap_read_header	libavformat/sapdec.c	/^static int sap_read_header(AVFormatContext *s,$/;"	f	file:
sap_write_close	libavformat/sapenc.c	/^static int sap_write_close(AVFormatContext *s)$/;"	f	file:
sap_write_header	libavformat/sapenc.c	/^static int sap_write_header(AVFormatContext *s)$/;"	f	file:
sap_write_packet	libavformat/sapenc.c	/^static int sap_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
sar	libavcodec/dvdata.h	/^    AVRational       sar[2];                \/* sample aspect ratios for 4:3 and 16:9 *\/$/;"	m	struct:DVprofile
sar	libavcodec/h264.h	/^    AVRational sar;$/;"	m	struct:SPS
saturate_output	libavcodec/cook.c	/^    void (* saturate_output) (struct cook *q, int chan, int16_t *out);$/;"	m	struct:cook	file:
saturate_output_float	libavcodec/cook.c	/^saturate_output_float (COOKContext *q, int chan, int16_t *out)$/;"	f	file:
saturation	libavfilter/libmpcodecs/vf_eq2.c	/^  double        saturation;$/;"	m	struct:vf_priv_s	file:
saturation	libavfilter/libmpcodecs/vf_hue.c	/^        float saturation;$/;"	m	struct:vf_priv_s	file:
saturation	libswscale/swscale_internal.h	/^    int contrast, brightness, saturation;    \/\/ for sws_getColorspaceDetails$/;"	m	struct:SwsContext
save	libavcodec/loco.c	/^    int save, run, run2; \/* internal rice decoder state *\/$/;"	m	struct:RICEContext	file:
save_aspect_info	libavcodec/mpeg12.c	/^    int save_aspect_info;$/;"	m	struct:Mpeg1Context	file:
save_bits	libavcodec/wmaprodec.c	/^static void save_bits(WMAProDecodeCtx *s, GetBitContext* gb, int len,$/;"	f	file:
save_display_set	libavcodec/dvbsubdec.c	/^static void save_display_set(DVBSubContext *ctx)$/;"	f	file:
save_height	libavcodec/mpeg12.c	/^    int save_width, save_height, save_progressive_seq;$/;"	m	struct:Mpeg1Context	file:
save_progressive_seq	libavcodec/mpeg12.c	/^    int save_width, save_height, save_progressive_seq;$/;"	m	struct:Mpeg1Context	file:
save_width	libavcodec/mpeg12.c	/^    int save_width, save_height, save_progressive_seq;$/;"	m	struct:Mpeg1Context	file:
saved	libavcodec/vorbisdec.c	/^    float        *saved;$/;"	m	struct:vorbis_context_s	file:
saved	libavcodec/vorbisenc.c	/^    float *saved;$/;"	m	struct:__anon194	file:
saved_scale_factors	libavcodec/wmaprodec.c	/^    int      saved_scale_factors[2][MAX_BANDS];       \/\/\/< resampled and (previously) transmitted scale factor values$/;"	m	struct:__anon82	file:
sb	libavcodec/snow.c	/^    slice_buffer sb;$/;"	m	struct:SnowContext	file:
sb_hybrid	libavcodec/mpegaudiodec.c	/^    INTFLOAT sb_hybrid[SBLIMIT * 18]; \/* 576 samples *\/$/;"	m	struct:GranuleDef	file:
sb_int8_array	libavcodec/qdm2.c	/^typedef int8_t sb_int8_array[2][30][64];$/;"	t	file:
sb_noise_attenuation	libavcodec/qdm2data.h	/^static const float sb_noise_attenuation[32] = {$/;"	v
sb_part	libavcodec/alsdec.c	/^    int sb_part;              \/\/\/< sub-block partition$/;"	m	struct:__anon150	file:
sb_samples	libavcodec/mpegaudioenc.c	/^    int sb_samples[MPA_MAX_CHANNELS][3][12][SBLIMIT];$/;"	m	struct:MpegAudioContext	file:
sblimit	libavcodec/mpegaudioenc.c	/^    int sblimit; \/* number of used subbands *\/$/;"	m	struct:MpegAudioContext	file:
sbox	libavutil/aes.c	/^static uint8_t     sbox[256];$/;"	v	file:
sbr	libavcodec/aac.h	/^    SpectralBandReplication sbr;$/;"	m	struct:__anon245
sbr	libavcodec/mpeg4audio.h	/^    int sbr; \/\/< -1 implicit, 1 presence$/;"	m	struct:__anon208
sbr_chirp	libavcodec/aacsbr.c	/^static void sbr_chirp(SpectralBandReplication *sbr, SBRData *ch_data)$/;"	f	file:
sbr_dequant	libavcodec/aacsbr.c	/^static void sbr_dequant(SpectralBandReplication *sbr, int id_aac)$/;"	f	file:
sbr_env_estimate	libavcodec/aacsbr.c	/^static void sbr_env_estimate(float (*e_curr)[48], float X_high[64][40][2],$/;"	f	file:
sbr_gain_calc	libavcodec/aacsbr.c	/^static void sbr_gain_calc(AACContext *ac, SpectralBandReplication *sbr,$/;"	f	file:
sbr_hf_assemble	libavcodec/aacsbr.c	/^static void sbr_hf_assemble(float Y[2][38][64][2], const float X_high[64][40][2],$/;"	f	file:
sbr_hf_calc_npatches	libavcodec/aacsbr.c	/^static int sbr_hf_calc_npatches(AACContext *ac, SpectralBandReplication *sbr)$/;"	f	file:
sbr_hf_gen	libavcodec/aacsbr.c	/^static int sbr_hf_gen(AACContext *ac, SpectralBandReplication *sbr,$/;"	f	file:
sbr_hf_inverse_filter	libavcodec/aacsbr.c	/^static void sbr_hf_inverse_filter(float (*alpha0)[2], float (*alpha1)[2],$/;"	f	file:
sbr_lf_gen	libavcodec/aacsbr.c	/^static int sbr_lf_gen(AACContext *ac, SpectralBandReplication *sbr,$/;"	f	file:
sbr_make_f_derived	libavcodec/aacsbr.c	/^static int sbr_make_f_derived(AACContext *ac, SpectralBandReplication *sbr)$/;"	f	file:
sbr_make_f_master	libavcodec/aacsbr.c	/^static int sbr_make_f_master(AACContext *ac, SpectralBandReplication *sbr,$/;"	f	file:
sbr_make_f_tablelim	libavcodec/aacsbr.c	/^static void sbr_make_f_tablelim(SpectralBandReplication *sbr)$/;"	f	file:
sbr_mapping	libavcodec/aacsbr.c	/^static void sbr_mapping(AACContext *ac, SpectralBandReplication *sbr,$/;"	f	file:
sbr_noise_table	libavcodec/aacsbrdata.h	/^static const float sbr_noise_table[512][2] = {$/;"	v
sbr_offset	libavcodec/aacsbrdata.h	/^static const int8_t sbr_offset[6][16] = {$/;"	v
sbr_qmf_analysis	libavcodec/aacsbr.c	/^static void sbr_qmf_analysis(DSPContext *dsp, FFTContext *mdct, const float *in, float *x,$/;"	f	file:
sbr_qmf_synthesis	libavcodec/aacsbr.c	/^static void sbr_qmf_synthesis(DSPContext *dsp, FFTContext *mdct,$/;"	f	file:
sbr_reset	libavcodec/aacsbr.c	/^static void sbr_reset(AACContext *ac, SpectralBandReplication *sbr)$/;"	f	file:
sbr_x_gen	libavcodec/aacsbr.c	/^static int sbr_x_gen(SpectralBandReplication *sbr, float X[2][38][64],$/;"	f	file:
sbyte	libswscale/ppc/yuv2rgb_altivec.c	/^typedef signed char   sbyte;$/;"	t	file:
sc	libavcodec/wavpack.c	/^    SavedContext sc, extra_sc;$/;"	m	struct:WavpackFrameContext	file:
sc	libavfilter/vf_unsharp.c	/^    uint32_t *sc[(MAX_SIZE * MAX_SIZE) - 1]; \/\/\/< finite state machine storage$/;"	m	struct:FilterParam	file:
scalability	libavcodec/mpegvideo.h	/^    int scalability;$/;"	m	struct:MpegEncContext
scalar_dequant	libavcodec/cook.c	/^    void (* scalar_dequant)(struct cook *q, int index, int quant_index,$/;"	m	struct:cook	file:
scalar_dequant_float	libavcodec/cook.c	/^static void scalar_dequant_float(COOKContext *q, int index, int quant_index,$/;"	f	file:
scalarproduct_and_madd_int16	libavcodec/dsputil.h	/^    int32_t (*scalarproduct_and_madd_int16)(int16_t *v1\/*align 16*\/, const int16_t *v2, const int16_t *v3, int len, int mul);$/;"	m	struct:DSPContext
scalarproduct_and_madd_int16_altivec	libavcodec/ppc/int_altivec.c	/^static int32_t scalarproduct_and_madd_int16_altivec(int16_t *v1, const int16_t *v2, const int16_t *v3, int order, int mul)$/;"	f	file:
scalarproduct_and_madd_int16_c	libavcodec/dsputil.c	/^static int32_t scalarproduct_and_madd_int16_c(int16_t *v1, const int16_t *v2, const int16_t *v3, int order, int mul)$/;"	f	file:
scalarproduct_float	libavcodec/dsputil.h	/^    float (*scalarproduct_float)(const float *v1, const float *v2, int len);$/;"	m	struct:DSPContext
scalarproduct_float_c	libavcodec/dsputil.c	/^static float scalarproduct_float_c(const float *v1, const float *v2, int len)$/;"	f	file:
scalarproduct_int16	libavcodec/dsputil.h	/^    int32_t (*scalarproduct_int16)(const int16_t *v1, const int16_t *v2\/*align 16*\/, int len, int shift);$/;"	m	struct:DSPContext
scalarproduct_int16_altivec	libavcodec/ppc/int_altivec.c	/^static int32_t scalarproduct_int16_altivec(const int16_t * v1, const int16_t * v2, int order, const int shift)$/;"	f	file:
scalarproduct_int16_c	libavcodec/dsputil.c	/^static int32_t scalarproduct_int16_c(const int16_t * v1, const int16_t * v2, int order, int shift)$/;"	f	file:
scale	libavcodec/lagarithrac.h	/^    unsigned scale;             \/*!< Number of bits of precision in range. *\/$/;"	m	struct:lag_rac
scale	libavformat/avidec.c	/^    int scale;$/;"	m	struct:AVIStream	file:
scale	libavformat/nsvdec.c	/^    int scale;$/;"	m	struct:NSVStream	file:
scale97	libavcodec/j2k_dwt.c	/^const static float scale97[] = {1.625786, 1.230174};$/;"	v	file:
scale_bias	libavcodec/dca.c	/^    float scale_bias;           \/\/\/< output scale$/;"	m	struct:__anon93	file:
scale_bias	libavcodec/nellymoserdec.c	/^    float           scale_bias;$/;"	m	struct:NellyMoserDecodeContext	file:
scale_bias	libavcodec/vorbisdec.c	/^    float         scale_bias; \/\/ for float->int conversion$/;"	m	struct:vorbis_context_s	file:
scale_block	libavcodec/dsputil.h	/^    void (*scale_block)(const uint8_t src[64]\/*align 8*\/, uint8_t *dst\/*align 8*\/, int linesize);$/;"	m	struct:DSPContext
scale_block_c	libavcodec/dsputil.c	/^static void scale_block_c(const uint8_t src[64]\/*align 8*\/, uint8_t *dst\/*align 8*\/, int linesize)$/;"	f	file:
scale_code	libavcodec/mpegaudioenc.c	/^    unsigned char scale_code[MPA_MAX_CHANNELS][SBLIMIT];$/;"	m	struct:MpegAudioContext	file:
scale_coefficients	libavcodec/ac3enc.h	/^    void (*scale_coefficients)(struct AC3EncodeContext *s);$/;"	m	struct:AC3EncodeContext
scale_coefficients	libavcodec/ac3enc_fixed.c	/^void AC3_NAME(scale_coefficients)(AC3EncodeContext *s)$/;"	f
scale_den	libavcodec/cavs.h	/^    int scale_den[2];  \/\/\/< for scaling neighbouring MVs$/;"	m	struct:__anon207
scale_diff_table	libavcodec/mpegaudiotab.h	/^static unsigned char scale_diff_table[128];$/;"	v
scale_factor	libavcodec/dca.c	/^    int scale_factor[DCA_PRIM_CHANNELS_MAX][DCA_SUBBANDS][2];    \/\/\/< scale factors (2 if transient)$/;"	m	struct:__anon93	file:
scale_factor	libavcodec/dcaenc.c	/^    int scale_factor[MAX_CHANNELS][DCA_SUBBANDS_32];$/;"	m	struct:__anon231	file:
scale_factor	libavcodec/g722.c	/^        int16_t scale_factor;        \/\/\/< delayed quantizer scale factor$/;"	m	struct:__anon140::G722Band	file:
scale_factor_idx	libavcodec/wmaprodec.c	/^    int8_t   scale_factor_idx;                        \/\/\/< index for the transmitted scale factor values (used for resampling)$/;"	m	struct:__anon82	file:
scale_factor_inv_table	libavcodec/mpegaudiotab.h	/^static float scale_factor_inv_table[64];$/;"	v
scale_factor_modshift	libavcodec/mpegaudiodec.c	/^static uint16_t scale_factor_modshift[64];$/;"	v	file:
scale_factor_mult	libavcodec/mpegaudiodec.c	/^static int32_t scale_factor_mult[15][3];$/;"	v	file:
scale_factor_mult	libavcodec/mpegaudiotab.h	/^static unsigned short scale_factor_mult[64];$/;"	v
scale_factor_mult2	libavcodec/mpegaudiodec.c	/^static const int32_t scale_factor_mult2[3][3] = {$/;"	v	file:
scale_factor_quant6	libavcodec/dcadata.h	/^static const uint32_t scale_factor_quant6[64] = {$/;"	v
scale_factor_quant7	libavcodec/dcadata.h	/^static const uint32_t scale_factor_quant7[128] = {$/;"	v
scale_factor_shift	libavcodec/mpegaudiotab.h	/^static int8_t scale_factor_shift[64];$/;"	v
scale_factor_step	libavcodec/wmaprodec.c	/^    int8_t   scale_factor_step;                       \/\/\/< scaling step for the current subframe$/;"	m	struct:__anon82	file:
scale_factor_table	libavcodec/mpegaudiotab.h	/^static int scale_factor_table[64];$/;"	v
scale_factors	libavcodec/mpegaudiodec.c	/^    uint8_t scale_factors[40];$/;"	m	struct:GranuleDef	file:
scale_factors	libavcodec/mpegaudioenc.c	/^    unsigned char scale_factors[MPA_MAX_CHANNELS][SBLIMIT][3]; \/* scale factors *\/$/;"	m	struct:MpegAudioContext	file:
scale_factors	libavcodec/wmaprodec.c	/^    int*     scale_factors;                           \/\/\/< pointer to the scale factor values used for decoding$/;"	m	struct:__anon82	file:
scale_huffbits	libavcodec/wmaprodata.h	/^static const uint8_t scale_huffbits[HUFF_SCALE_SIZE] = {$/;"	v
scale_huffcodes	libavcodec/wmaprodata.h	/^static const uint16_t scale_huffcodes[HUFF_SCALE_SIZE] = {$/;"	v
scale_image	libavfilter/libmpcodecs/vf_screenshot.c	/^static void scale_image(struct vf_priv_s* priv, mp_image_t *mpi)$/;"	f	file:
scale_mv	libavcodec/cavs.c	/^static inline void scale_mv(AVSContext *h, int *d_x, int *d_y, cavs_vector *src, int distp) {$/;"	f	file:
scale_mv	libavcodec/vc1dec.c	/^static av_always_inline int scale_mv(int value, int bfrac, int inv, int qs)$/;"	f	file:
scale_mv_ref	libavcodec/snow.c	/^static int scale_mv_ref[MAX_REF_FRAMES][MAX_REF_FRAMES];$/;"	v	file:
scale_rl_huffbits	libavcodec/wmaprodata.h	/^static const uint8_t scale_rl_huffbits[HUFF_SCALE_RL_SIZE] = {$/;"	v
scale_rl_huffcodes	libavcodec/wmaprodata.h	/^static const uint32_t scale_rl_huffcodes[HUFF_SCALE_RL_SIZE] = {$/;"	v
scale_rl_level	libavcodec/wmaprodata.h	/^static const uint8_t scale_rl_level[HUFF_SCALE_RL_SIZE] = {$/;"	v
scale_rl_run	libavcodec/wmaprodata.h	/^static const uint8_t scale_rl_run[HUFF_SCALE_RL_SIZE] = {$/;"	v
scale_slice	libavfilter/vf_scale.c	/^static int scale_slice(AVFilterLink *link, struct SwsContext *sws, int y, int h, int mul, int field)$/;"	f	file:
scale_sws_opts	libavfilter/avfiltergraph.h	/^    char *scale_sws_opts; \/\/\/< sws options to use for the auto-inserted scale filters$/;"	m	struct:AVFilterGraph
scalebits	libavfilter/vf_unsharp.c	/^    int scalebits;                           \/\/\/< bits to shift pixel$/;"	m	struct:FilterParam	file:
scaled_hb_excitation	libavcodec/amrwbdec.c	/^static void scaled_hb_excitation(AMRWBContext *ctx, float *hb_exc,$/;"	f	file:
scalefac_compress	libavcodec/mpegaudiodec.c	/^    int scalefac_compress;$/;"	m	struct:GranuleDef	file:
scalefac_scale	libavcodec/mpegaudiodec.c	/^    uint8_t scalefac_scale;$/;"	m	struct:GranuleDef	file:
scalefactor_adj	libavcodec/dca.c	/^    float scalefactor_adj[DCA_PRIM_CHANNELS_MAX][DCA_ABITS_MAX];   \/\/\/< scale factor adjustment$/;"	m	struct:__anon93	file:
scalefactor_huffman	libavcodec/dca.c	/^    int scalefactor_huffman[DCA_PRIM_CHANNELS_MAX]; \/\/\/< scale factor code book$/;"	m	struct:__anon93	file:
scaleh	libavfilter/libmpcodecs/vf_down3dright.c	/^        int scaleh;$/;"	m	struct:vf_priv_s	file:
scales_bits	libavcodec/dcahuff.h	/^static const uint8_t scales_bits[SCALES_COUNT][129] = {$/;"	v
scales_codes	libavcodec/dcahuff.h	/^static const uint16_t scales_codes[SCALES_COUNT][129] = {$/;"	v
scalew	libavfilter/libmpcodecs/vf_down3dright.c	/^        int scalew;$/;"	m	struct:vf_priv_s	file:
scaling_matrix4	libavcodec/h264.h	/^    uint8_t scaling_matrix4[6][16];$/;"	m	struct:PPS
scaling_matrix4	libavcodec/h264.h	/^    uint8_t scaling_matrix4[6][16];$/;"	m	struct:SPS
scaling_matrix8	libavcodec/h264.h	/^    uint8_t scaling_matrix8[6][64];$/;"	m	struct:PPS
scaling_matrix8	libavcodec/h264.h	/^    uint8_t scaling_matrix8[6][64];$/;"	m	struct:SPS
scaling_matrix_present	libavcodec/h264.h	/^    int scaling_matrix_present;$/;"	m	struct:SPS
scan	libavcodec/ivi_common.h	/^    const uint8_t   *scan;          \/\/\/< ptr to the scan pattern$/;"	m	struct:__anon107
scan	libavcodec/rtjpeg.h	/^    uint8_t scan[64];$/;"	m	struct:__anon172
scan8	libavcodec/arm/h264idct_neon.S	/^scan8:  .byte           4+ 1*8, 5+ 1*8, 4+ 2*8, 5+ 2*8$/;"	l
scan8	libavcodec/h264.h	/^static const uint8_t scan8[16*3 + 3]={$/;"	v
scan8	libavcodec/h264idct_template.c	/^static const uint8_t scan8[16*3]={$/;"	v	file:
scan8_mem	libavcodec/x86/h264_idct.asm	/^scan8_mem: db  4+ 1*8, 5+ 1*8, 4+ 2*8, 5+ 2*8$/;"	d
scan8_mem	libavcodec/x86/h264_idct_10bit.asm	/^scan8_mem: db  4+ 1*8, 5+ 1*8, 4+ 2*8, 5+ 2*8$/;"	d
scan_table	libavcodec/dv.c	/^    const uint8_t *scan_table;$/;"	m	struct:BlockInfo	file:
scantab	libavcodec/asv1.c	/^static const uint8_t scantab[64]={$/;"	v	file:
scantable	libavcodec/asv1.c	/^    ScanTable scantable;$/;"	m	struct:ASV1Context	file:
scantable	libavcodec/bink.c	/^    ScanTable      scantable;            \/\/\/< permutated scantable for DCT coeffs decoding$/;"	m	struct:BinkContext	file:
scantable	libavcodec/cavs.h	/^    ScanTable scantable;$/;"	m	struct:__anon207
scantable	libavcodec/dnxhddec.c	/^    ScanTable scantable;$/;"	m	struct:__anon154	file:
scantable	libavcodec/dsputil.h	/^    const uint8_t *scantable;$/;"	m	struct:ScanTable
scantable	libavcodec/eatgq.c	/^    ScanTable scantable;$/;"	m	struct:TgqContext	file:
scantable	libavcodec/intrax8.h	/^    ScanTable scantable[3];$/;"	m	struct:__anon134
scantable	libavcodec/mdec.c	/^    ScanTable scantable;$/;"	m	struct:MDECContext	file:
scantable	libavcodec/mimic.c	/^    ScanTable       scantable;$/;"	m	struct:__anon282	file:
scantable	libavcodec/mjpegdec.h	/^    ScanTable scantable;$/;"	m	struct:MJpegDecodeContext
scantable	libavcodec/vp3.c	/^    ScanTable scantable;$/;"	m	struct:Vp3DecodeContext	file:
scantable	libavcodec/vp56.h	/^    ScanTable scantable;$/;"	m	struct:vp56_context
scene_change_score	libavcodec/mpegvideo.h	/^    int scene_change_score;$/;"	m	struct:MotionEstContext
scenechange_factor	libavcodec/avcodec.h	/^    int scenechange_factor;$/;"	m	struct:AVCodecContext
scenechange_threshold	libavcodec/avcodec.h	/^    int scenechange_threshold;$/;"	m	struct:AVCodecContext
scf_idx	libavcodec/mpc.h	/^    int scf_idx[2][3];$/;"	m	struct:__anon178
scfi	libavcodec/mpc.h	/^    int scfi[2];$/;"	m	struct:__anon178
scfi_vlc	libavcodec/mpc7.c	/^static VLC scfi_vlc, dscf_vlc, hdr_vlc, quant_vlc[MPC7_QUANT_VLC_TABLES][2];$/;"	v	file:
scfi_vlc	libavcodec/mpc8.c	/^static VLC band_vlc, scfi_vlc[2], dscf_vlc[2], res_vlc[2];$/;"	v	file:
scfsi	libavcodec/mpegaudiodec.c	/^    uint8_t scfsi;$/;"	m	struct:GranuleDef	file:
schro_frame_fmt	libavcodec/libschroedinger.h	/^    SchroFrameFormat  schro_frame_fmt;$/;"	m	struct:__anon133
schro_pix_fmt	libavcodec/libschroedinger.h	/^    SchroChromaFormat schro_pix_fmt;$/;"	m	struct:__anon133
sconf	libavcodec/alsdec.c	/^    ALSSpecificConfig sconf;$/;"	m	struct:__anon152	file:
scope	libavformat/matroskadec.c	/^    uint64_t scope;$/;"	m	struct:__anon356	file:
score	libavdevice/libdc1394.c	/^    int score;$/;"	m	struct:dc1394_color_coding	file:
score_array	tools/probetest.c	/^static int score_array[1000]; \/\/this must be larger than the number of formats$/;"	v	file:
score_header	libavcodec/flac_parser.c	/^static int score_header(FLACParseContext *fpc, FLACHeaderMarker *header)$/;"	f	file:
score_map	libavcodec/mpegvideo.h	/^    uint32_t *score_map;               \/\/\/< map to store the scores$/;"	m	struct:MotionEstContext
score_sequences	libavcodec/flac_parser.c	/^static void score_sequences(FLACParseContext *fpc)$/;"	f	file:
score_tab	libavcodec/zmbvenc.c	/^static int score_tab[256];$/;"	v	file:
scrambled_stream	libavcodec/atrac3.c	/^    int                 scrambled_stream;$/;"	m	struct:__anon131	file:
scratch_buffer	libavcodec/xxan.c	/^    uint8_t *scratch_buffer;$/;"	m	struct:XanContext	file:
scratchbuf	libavcodec/elbg.c	/^    int *scratchbuf;$/;"	m	struct:__anon247	file:
scratchbuf	libavcodec/snow.c	/^    uint8_t *scratchbuf;$/;"	m	struct:SnowContext	file:
scratchbuf	libavcodec/svq1enc.c	/^    uint8_t *scratchbuf;$/;"	m	struct:SVQ1Context	file:
scratchpad	libavcodec/mpegvideo.h	/^    uint8_t *scratchpad;               \/\/\/< data area for the ME algo, so that the ME does not need to malloc\/free$/;"	m	struct:MotionEstContext
screen	ffplay.c	/^static SDL_Surface *screen;$/;"	v	file:
screen_height	ffplay.c	/^static int screen_height = 0;$/;"	v	file:
screen_height	libavcodec/gifdec.c	/^    int screen_height;$/;"	m	struct:GifState	file:
screen_width	ffplay.c	/^static int screen_width = 0;$/;"	v	file:
screen_width	libavcodec/gifdec.c	/^    int screen_width;$/;"	m	struct:GifState	file:
screendta	libavcodec/vmnc.c	/^    uint8_t* screendta;$/;"	m	struct:VmncContext	file:
script_info	libavcodec/ass_split.h	/^    ASSScriptInfo script_info;   \/**< general information about the SSA script*\/$/;"	m	struct:__anon251
script_type	libavcodec/ass_split.h	/^    char *script_type;    \/**< SSA script format version (eg. v4.00) *\/$/;"	m	struct:__anon248
sd3	libavcodec/ps2/mmi.h	90;"	d
sd_1d53	libavcodec/j2k_dwt.c	/^static void sd_1d53(int *p, int i0, int i1)$/;"	f	file:
sd_1d97	libavcodec/j2k_dwt.c	/^static void sd_1d97(float *p, int i0, int i1)$/;"	f	file:
sdl_audio_callback	ffplay.c	/^static void sdl_audio_callback(void *opaque, Uint8 *stream, int len)$/;"	f	file:
sdl_class	libavdevice/sdl.c	/^static const AVClass sdl_class = {$/;"	v	file:
sdl_overlay_pix_fmt_entry	libavdevice/sdl.c	/^struct sdl_overlay_pix_fmt_entry {$/;"	s	file:
sdl_overlay_pix_fmt_map	libavdevice/sdl.c	/^} sdl_overlay_pix_fmt_map[] = {$/;"	v	typeref:struct:sdl_overlay_pix_fmt_entry
sdl_was_already_inited	libavdevice/sdl.c	/^    int sdl_was_already_inited;$/;"	m	struct:__anon309	file:
sdl_write_header	libavdevice/sdl.c	/^static int sdl_write_header(AVFormatContext *s)$/;"	f	file:
sdl_write_packet	libavdevice/sdl.c	/^static int sdl_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
sdl_write_trailer	libavdevice/sdl.c	/^static int sdl_write_trailer(AVFormatContext *s)$/;"	f	file:
sdp	libavformat/sapdec.c	/^    char *sdp;$/;"	m	struct:SAPState	file:
sdp_ctx	libavformat/sapdec.c	/^    AVFormatContext *sdp_ctx;$/;"	m	struct:SAPState	file:
sdp_get_address	libavformat/sdp.c	/^static int sdp_get_address(char *dest_addr, int size, int *ttl, const char *url)$/;"	f	file:
sdp_ip	libavformat/rtsp.h	/^    struct sockaddr_storage sdp_ip; \/**< IP address (from SDP content) *\/$/;"	m	struct:RTSPStream	typeref:struct:RTSPStream::sockaddr_storage
sdp_parse_fmtp_config_h264	libavformat/rtpdec_h264.c	/^static int sdp_parse_fmtp_config_h264(AVStream * stream,$/;"	f	file:
sdp_parse_line	libavformat/rtsp.c	/^static void sdp_parse_line(AVFormatContext *s, SDPParseState *s1,$/;"	f	file:
sdp_parse_rtpmap	libavformat/rtsp.c	/^static int sdp_parse_rtpmap(AVFormatContext *s,$/;"	f	file:
sdp_payload_type	libavformat/rtsp.h	/^    int sdp_payload_type;     \/**< payload type *\/$/;"	m	struct:RTSPStream
sdp_pb	libavformat/sapdec.c	/^    AVIOContext sdp_pb;$/;"	m	struct:SAPState	file:
sdp_port	libavformat/rtsp.h	/^    int sdp_port;             \/**< port (from SDP content) *\/$/;"	m	struct:RTSPStream
sdp_probe	libavformat/rtsp.c	/^static int sdp_probe(AVProbeData *p1)$/;"	f	file:
sdp_read_close	libavformat/rtsp.c	/^static int sdp_read_close(AVFormatContext *s)$/;"	f	file:
sdp_read_header	libavformat/rtsp.c	/^static int sdp_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
sdp_session_level	libavformat/sdp.c	/^struct sdp_session_level {$/;"	s	file:
sdp_ttl	libavformat/rtsp.h	/^    int sdp_ttl;              \/**< IP Time-To-Live (from SDP content) *\/$/;"	m	struct:RTSPStream
sdp_version	libavformat/sdp.c	/^    int sdp_version;      \/**< protocol version (currently 0) *\/$/;"	m	struct:sdp_session_level	file:
sdp_write_address	libavformat/sdp.c	/^static void sdp_write_address(char *buff, int size, const char *dest_addr,$/;"	f	file:
sdp_write_header	libavformat/sdp.c	/^static void sdp_write_header(char *buff, int size, struct sdp_session_level *s)$/;"	f	file:
sdp_write_media_attributes	libavformat/sdp.c	/^static char *sdp_write_media_attributes(char *buff, int size, AVCodecContext *c, int payload_type, AVFormatContext *fmt)$/;"	f	file:
sdt	libavformat/mpegtsenc.c	/^    MpegTSSection sdt; \/* MPEG2 sdt table context *\/$/;"	m	struct:MpegTSWrite	file:
sdt_cb	libavformat/mpegts.c	/^static void sdt_cb(MpegTSFilter *filter, const uint8_t *section, int section_len)$/;"	f	file:
sdt_packet_count	libavformat/mpegtsenc.c	/^    int sdt_packet_count;$/;"	m	struct:MpegTSWrite	file:
sdt_packet_period	libavformat/mpegtsenc.c	/^    int sdt_packet_period;$/;"	m	struct:MpegTSWrite	file:
se	libavcodec/g726.c	/^    int se;             \/**< estimated signal for the next iteration *\/$/;"	m	struct:G726Context	file:
seTab_0	libavcodec/atrac3data.h	/^static const int8_t seTab_0[4] = {0, 1, -2, -1};$/;"	v
search_for_ms	libavcodec/aaccoder.c	/^static void search_for_ms(AACEncContext *s, ChannelElement *cpe,$/;"	f	file:
search_for_ms	libavcodec/aacenc.h	/^    void (*search_for_ms)(struct AACEncContext *s, ChannelElement *cpe, const float lambda);$/;"	m	struct:AACCoefficientsEncoder
search_for_quantizers	libavcodec/aacenc.h	/^    void (*search_for_quantizers)(AVCodecContext *avctx, struct AACEncContext *s,$/;"	m	struct:AACCoefficientsEncoder
search_for_quantizers_anmr	libavcodec/aaccoder.c	/^static void search_for_quantizers_anmr(AVCodecContext *avctx, AACEncContext *s,$/;"	f	file:
search_for_quantizers_faac	libavcodec/aaccoder.c	/^static void search_for_quantizers_faac(AVCodecContext *avctx, AACEncContext *s,$/;"	f	file:
search_for_quantizers_fast	libavcodec/aaccoder.c	/^static void search_for_quantizers_fast(AVCodecContext *avctx, AACEncContext *s,$/;"	f	file:
search_for_quantizers_twoloop	libavcodec/aaccoder.c	/^static void search_for_quantizers_twoloop(AVCodecContext *avctx,$/;"	f	file:
search_hi_lo_keyframes	libavformat/seek.c	/^static void search_hi_lo_keyframes(AVFormatContext *s,$/;"	f	file:
sec_num	libavformat/mpegts.c	/^    uint8_t sec_num;$/;"	m	struct:SectionHeader	file:
second_last_frame	libavcodec/interplayvideo.c	/^    AVFrame second_last_frame;$/;"	m	struct:IpvideoContext	file:
second_pattern	libavcodec/rv34.h	/^    VLC second_pattern[2]; \/\/\/< VLCs used for decoding coefficients in the subblocks 2 and 3$/;"	m	struct:RV34VLC
section	libavcodec/ass_split.c	/^    const char *section;$/;"	m	struct:__anon145	file:
section	libavcodec/x86/fft_mmx.asm	/^section .text$/;"	l
section	libavcodec/x86/vc1dsp_yasm.asm	/^section .text$/;"	l
section_buf	libavformat/mpegts.c	/^    uint8_t *section_buf;$/;"	m	struct:MpegTSSectionFilter	file:
section_cb	libavformat/mpegts.c	/^    SectionCallback *section_cb;$/;"	m	struct:MpegTSSectionFilter	file:
section_filter	libavformat/mpegts.c	/^        MpegTSSectionFilter section_filter;$/;"	m	union:MpegTSFilter::__anon471	file:
section_h_size	libavformat/mpegts.c	/^    int section_h_size;$/;"	m	struct:MpegTSSectionFilter	file:
section_index	libavformat/mpegts.c	/^    int section_index;$/;"	m	struct:MpegTSSectionFilter	file:
section_write_packet	libavformat/mpegtsenc.c	/^static void section_write_packet(MpegTSSection *s, const uint8_t *packet)$/;"	f	file:
sector_bits	libavformat/wtvdec.c	/^    int sector_bits;     \/** sector shift bits; used to convert sector number into pb_filesystem offset *\/$/;"	m	struct:__anon321	file:
sectors	libavformat/wtvdec.c	/^    uint32_t *sectors;   \/** file allocation table *\/$/;"	m	struct:__anon321	file:
seed	tests/videogen.c	/^unsigned int seed = 1;$/;"	v
seek	libavformat/avio.h	/^    int64_t (*seek)(void *opaque, int64_t offset, int whence);$/;"	m	struct:__anon396
seek_by_bytes	ffplay.c	/^static int seek_by_bytes=-1;$/;"	v	file:
seek_flags	ffplay.c	/^    int seek_flags;$/;"	m	struct:VideoState	file:
seek_point	libavfilter/vsrc_movie.c	/^    int64_t seek_point;   \/\/\/< seekpoint in microseconds$/;"	m	struct:__anon38	file:
seek_point_d	libavfilter/vsrc_movie.c	/^    double seek_point_d;$/;"	m	struct:__anon38	file:
seek_pos	ffplay.c	/^    int64_t seek_pos;$/;"	m	struct:VideoState	file:
seek_pos	libavformat/avidec.c	/^    int64_t seek_pos;$/;"	m	struct:AVIStream	file:
seek_rel	ffplay.c	/^    int64_t seek_rel;$/;"	m	struct:VideoState	file:
seek_req	ffplay.c	/^    int seek_req;$/;"	m	struct:VideoState	file:
seek_subtitle	libavformat/avidec.c	/^static void seek_subtitle(AVStream *st, AVStream *st2, int64_t timestamp)$/;"	f	file:
seek_timestamp	libavformat/rtsp.h	/^    int64_t seek_timestamp;$/;"	m	struct:RTSPState
seekable	libavformat/avio.h	/^    int seekable;$/;"	m	struct:__anon396
seekhead	libavformat/matroskadec.c	/^    EbmlList seekhead;$/;"	m	struct:__anon371	file:
seektable	libavformat/ape.c	/^    uint32_t *seektable;$/;"	m	struct:__anon335	file:
seektablelength	libavformat/ape.c	/^    uint32_t seektablelength;$/;"	m	struct:__anon335	file:
seektest	tests/fate-run.sh	/^seektest(){$/;"	f
seen	libavformat/mp3enc.c	/^    uint32_t seen;$/;"	m	struct:MP3Context	file:
seen_data	libavformat/wtvdec.c	/^    int seen_data;$/;"	m	struct:__anon322	file:
seg_hd	libavformat/applehttpproto.c	/^    URLContext *seg_hd;$/;"	m	struct:AppleHTTPContext	file:
sega_film_skip_bytes	libavcodec/cinepak.c	/^    int sega_film_skip_bytes;$/;"	m	struct:CinepakContext	file:
segment	libavcodec/vp8.h	/^    uint8_t segment;             \/\/\/< segment of the current macroblock$/;"	m	struct:__anon182
segment	libavformat/applehttp.c	/^struct segment {$/;"	s	file:
segment	libavformat/applehttpproto.c	/^struct segment {$/;"	s	file:
segment	libavformat/matroskaenc.c	/^    ebml_master     segment;$/;"	m	struct:MatroskaMuxContext	file:
segment_offset	libavformat/matroskaenc.c	/^    int64_t                 segment_offset;     \/\/\/< the file offset to the beginning of the segment$/;"	m	struct:mkv_seekhead	file:
segment_offset	libavformat/matroskaenc.c	/^    int64_t         segment_offset;$/;"	m	struct:MatroskaMuxContext	file:
segment_offset	libavformat/matroskaenc.c	/^    int64_t         segment_offset;$/;"	m	struct:__anon477	file:
segment_start	libavformat/matroskadec.c	/^    int64_t segment_start;$/;"	m	struct:__anon371	file:
segmentation	libavcodec/vp8.h	/^    } segmentation;$/;"	m	struct:__anon182	typeref:struct:__anon182::__anon183
segmentation_map	libavcodec/vp8.h	/^    uint8_t *segmentation_map;$/;"	m	struct:__anon182
segmentid	libavcodec/vp8.h	/^        uint8_t segmentid[3];$/;"	m	struct:__anon182::__anon187
segmentpos	libavformat/matroskaenc.c	/^    uint64_t        segmentpos;$/;"	m	struct:mkv_seekhead_entry	file:
segments	libavformat/applehttp.c	/^    struct segment **segments;$/;"	m	struct:variant	typeref:struct:variant::segment	file:
segments	libavformat/applehttpproto.c	/^    struct segment **segments;$/;"	m	struct:AppleHTTPContext	typeref:struct:AppleHTTPContext::segment	file:
segments	libavformat/mtv.c	/^    unsigned int segments;          \/\/\/< number of 512 byte segments$/;"	m	struct:MTVDemuxContext	file:
segments	libavformat/oggdec.h	/^    uint8_t segments[255];$/;"	m	struct:ogg_stream
segments	libavformat/oggenc.c	/^    uint8_t segments[255];$/;"	m	struct:__anon379	file:
segments_count	libavformat/oggenc.c	/^    uint8_t segments_count;$/;"	m	struct:__anon379	file:
segp	libavformat/oggdec.h	/^    int nsegs, segp;$/;"	m	struct:ogg_stream
sei	libavcodec/libx264.c	/^    uint8_t        *sei;$/;"	m	struct:X264Context	file:
sei	libavcodec/libxavs.c	/^    uint8_t        *sei;$/;"	m	struct:XavsContext	file:
sei_buffering_period_present	libavcodec/h264.h	/^    int sei_buffering_period_present;  \/\/\/< Buffering period SEI flag$/;"	m	struct:H264Context
sei_cpb_removal_delay	libavcodec/h264.h	/^    int sei_cpb_removal_delay;$/;"	m	struct:H264Context
sei_ct_type	libavcodec/h264.h	/^    int sei_ct_type;$/;"	m	struct:H264Context
sei_dpb_output_delay	libavcodec/h264.h	/^    int sei_dpb_output_delay;$/;"	m	struct:H264Context
sei_num_clock_ts_table	libavcodec/h264_sei.c	/^static const uint8_t sei_num_clock_ts_table[9]={$/;"	v	file:
sei_pic_struct	libavcodec/h264.h	/^    SEI_PicStructType sei_pic_struct;$/;"	m	struct:H264Context
sei_recovery_frame_cnt	libavcodec/h264.h	/^    int sei_recovery_frame_cnt;$/;"	m	struct:H264Context
sei_size	libavcodec/libx264.c	/^    int             sei_size;$/;"	m	struct:X264Context	file:
sei_size	libavcodec/libxavs.c	/^    int             sei_size;$/;"	m	struct:XavsContext	file:
select	libavfilter/vf_select.c	/^    double select;$/;"	m	struct:__anon10	file:
select_blocksize	libavcodec/flacenc.c	/^static int select_blocksize(int samplerate, int block_time_ms)$/;"	f	file:
select_delta_tables	libavcodec/truemotion1.c	/^static void select_delta_tables(TrueMotion1Context *s, int delta_table_index)$/;"	f	file:
select_frame	libavfilter/vf_select.c	/^static int select_frame(AVFilterContext *ctx, AVFilterBufferRef *picref)$/;"	f	file:
select_input_picture	libavcodec/mpegvideo_enc.c	/^static int select_input_picture(MpegEncContext *s){$/;"	f	file:
selfTest	libswscale/swscale-test.c	/^static void selfTest(uint8_t *ref[4], int refStride[4], int w, int h,$/;"	f	file:
send_close_packet	libavformat/mmst.c	/^static int send_close_packet(MMSTContext *mmst)$/;"	f	file:
send_command_packet	libavformat/mmst.c	/^static int send_command_packet(MMSTContext *mmst)$/;"	f	file:
send_keepalive_packet	libavformat/mmst.c	/^static int send_keepalive_packet(MMSTContext *mmst)$/;"	f	file:
send_media_file_request	libavformat/mmst.c	/^static int send_media_file_request(MMSTContext *mmst)$/;"	f	file:
send_media_header_request	libavformat/mmst.c	/^static int send_media_header_request(MMSTContext *mmst)$/;"	f	file:
send_media_packet_request	libavformat/mmst.c	/^static int send_media_packet_request(MMSTContext *mmst)$/;"	f	file:
send_on_key	ffserver.c	/^    int send_on_key;$/;"	m	struct:FFStream	file:
send_protocol_select	libavformat/mmst.c	/^static int send_protocol_select(MMSTContext *mmst)$/;"	f	file:
send_startup_packet	libavformat/mmst.c	/^static int send_startup_packet(MMSTContext *mmst)$/;"	f	file:
send_stream_selection_request	libavformat/mmst.c	/^static int send_stream_selection_request(MMSTContext *mmst)$/;"	f	file:
send_time	libavformat/asf.h	/^    uint64_t send_time;         \/**< time to send file, in 100-nanosecond units$/;"	m	struct:__anon400
send_time_test_data	libavformat/mmst.c	/^static int send_time_test_data(MMSTContext *mmst)$/;"	f	file:
sense	libavfilter/libmpcodecs/vf_dint.c	/^  float sense; \/\/ first parameter$/;"	m	struct:vf_priv_s	file:
sent_bytes	libavformat/iff.c	/^    uint32_t  sent_bytes;$/;"	m	struct:__anon395	file:
sent_bytes	libavformat/xa.c	/^    uint32_t sent_bytes;$/;"	m	struct:MaxisXADemuxContext	file:
seq	ffserver.c	/^    int seq; \/* RTSP sequence number *\/$/;"	m	struct:HTTPContext	file:
seq	libavformat/asf.h	/^    unsigned char seq;$/;"	m	struct:__anon399
seq	libavformat/oggparsespeex.c	/^    int seq;$/;"	m	struct:speex_params	file:
seq	libavformat/rtpdec.h	/^    uint16_t seq;$/;"	m	struct:RTPDemuxContext
seq	libavformat/rtpdec.h	/^    uint16_t seq;$/;"	m	struct:RTPPacket
seq	libavformat/rtpenc.h	/^    uint16_t seq;$/;"	m	struct:RTPMuxContext
seq	libavformat/rtsp.h	/^    int seq;                          \/**< RTSP command sequence number *\/$/;"	m	struct:RTSPState
seq	libavformat/rtsp.h	/^    int seq;                         \/**< sequence number *\/$/;"	m	struct:RTSPMessageHeader
seq_decode_op1	libavcodec/tiertexseqv.c	/^static const unsigned char *seq_decode_op1(SeqVideoContext *seq,$/;"	f	file:
seq_decode_op2	libavcodec/tiertexseqv.c	/^static const unsigned char *seq_decode_op2(SeqVideoContext *seq,$/;"	f	file:
seq_decode_op3	libavcodec/tiertexseqv.c	/^static const unsigned char *seq_decode_op3(SeqVideoContext *seq,$/;"	f	file:
seq_fill_buffer	libavformat/tiertexseq.c	/^static int seq_fill_buffer(SeqDemuxContext *seq, AVIOContext *pb, int buffer_num, unsigned int data_offs, int data_size)$/;"	f	file:
seq_init_frame_buffers	libavformat/tiertexseq.c	/^static int seq_init_frame_buffers(SeqDemuxContext *seq, AVIOContext *pb)$/;"	f	file:
seq_p	libavcodec/vorbisenc.c	/^    int seq_p;$/;"	m	struct:__anon188	file:
seq_parse_frame_data	libavformat/tiertexseq.c	/^static int seq_parse_frame_data(SeqDemuxContext *seq, AVIOContext *pb)$/;"	f	file:
seq_probe	libavformat/tiertexseq.c	/^static int seq_probe(AVProbeData *p)$/;"	f	file:
seq_read_close	libavformat/tiertexseq.c	/^static int seq_read_close(AVFormatContext *s)$/;"	f	file:
seq_read_header	libavformat/tiertexseq.c	/^static int seq_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
seq_read_packet	libavformat/tiertexseq.c	/^static int seq_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
seq_unpack_rle_block	libavcodec/tiertexseqv.c	/^static const unsigned char *seq_unpack_rle_block(const unsigned char *src,$/;"	f	file:
seqno	libavformat/asfenc.c	/^    uint32_t seqno;$/;"	m	struct:__anon470	file:
sequence	libavformat/mxfdec.c	/^    MXFSequence *sequence; \/* mandatory, and only one *\/$/;"	m	struct:__anon442	file:
sequence_ref	libavformat/mxfdec.c	/^    UID sequence_ref;$/;"	m	struct:__anon442	file:
seqvideo_decode	libavcodec/tiertexseqv.c	/^static int seqvideo_decode(SeqVideoContext *seq, const unsigned char *data, int data_size)$/;"	f	file:
seqvideo_decode_end	libavcodec/tiertexseqv.c	/^static av_cold int seqvideo_decode_end(AVCodecContext *avctx)$/;"	f	file:
seqvideo_decode_frame	libavcodec/tiertexseqv.c	/^static int seqvideo_decode_frame(AVCodecContext *avctx,$/;"	f	file:
seqvideo_decode_init	libavcodec/tiertexseqv.c	/^static av_cold int seqvideo_decode_init(AVCodecContext *avctx)$/;"	f	file:
serial	libavformat/oggdec.h	/^    uint32_t serial;$/;"	m	struct:ogg_stream
serial_num	libavformat/oggenc.c	/^    unsigned serial_num; \/\/\/< serial number$/;"	m	struct:__anon380	file:
server	libavformat/rtsp.h	/^    char server[64];$/;"	m	struct:RTSPMessageHeader
server_port_max	libavformat/rtsp.h	/^    int server_port_min, server_port_max;$/;"	m	struct:RTSPTransportField
server_port_min	libavformat/rtsp.h	/^    int server_port_min, server_port_max;$/;"	m	struct:RTSPTransportField
server_type	libavformat/rtsp.h	/^    enum RTSPServerType server_type;$/;"	m	struct:RTSPState	typeref:enum:RTSPState::RTSPServerType
service	libavformat/mpegtsenc.c	/^    struct MpegTSService *service;$/;"	m	struct:MpegTSWriteStream	typeref:struct:MpegTSWriteStream::MpegTSService	file:
service_id	libavformat/mpegtsenc.c	/^    int service_id;$/;"	m	struct:MpegTSWrite	file:
service_type	libavcodec/aac_ac3_parser.h	/^    int service_type;$/;"	m	struct:AACAC3ParseContext
services	libavformat/mpegtsenc.c	/^    MpegTSService **services;$/;"	m	struct:MpegTSWrite	file:
session_id	ffserver.c	/^    char session_id[32]; \/* session id *\/$/;"	m	struct:HTTPContext	file:
session_id	libavformat/rtsp.h	/^    char session_id[512];$/;"	m	struct:RTSPMessageHeader
session_id	libavformat/rtsp.h	/^    char session_id[512];$/;"	m	struct:RTSPState
set_all	configure	/^set_all(){$/;"	f
set_bandwidth	libavcodec/ac3enc.c	/^static av_cold void set_bandwidth(AC3EncodeContext *s)$/;"	f	file:
set_blocks	libavcodec/snow.c	/^static inline void set_blocks(SnowContext *s, int level, int x, int y, int l, int cb, int cr, int mx, int my, int ref, int type){$/;"	f	file:
set_brightness	libavfilter/libmpcodecs/vf_eq2.c	/^void set_brightness (vf_eq2_t *eq2, double b)$/;"	f	file:
set_channel_info	libavcodec/ac3enc.c	/^static av_cold int set_channel_info(AC3EncodeContext *s, int channels,$/;"	f	file:
set_codec_from_probe_data	libavformat/utils.c	/^static int set_codec_from_probe_data(AVFormatContext *s, AVStream *st, AVProbeData *pd)$/;"	f	file:
set_color	libavutil/log.c	40;"	d	file:
set_color	libavutil/log.c	44;"	d	file:
set_common_formats	libavfilter/defaults.c	/^static void set_common_formats(AVFilterContext *ctx, AVFilterFormats *fmts,$/;"	f	file:
set_context_opts	cmdutils.c	/^void set_context_opts(void *ctx, void *opts_ctx, int flags, AVCodec *codec)$/;"	f
set_context_opts	ffmpeg/cmdutils.c	/^void set_context_opts(void *ctx, void *opts_ctx, int flags, AVCodec *codec)$/;"	f
set_contrast	libavfilter/libmpcodecs/vf_eq2.c	/^void set_contrast (vf_eq2_t *eq2, double c)$/;"	f	file:
set_default	configure	/^set_default(){$/;"	f
set_default_channel_config	libavcodec/aacdec.c	/^static av_cold int set_default_channel_config(AVCodecContext *avctx,$/;"	f	file:
set_disposition_bits	libavformat/nutdec.c	/^static void set_disposition_bits(AVFormatContext* avf, char* value, int stream_id){$/;"	f	file:
set_downmix_coeffs	libavcodec/ac3dec.c	/^static void set_downmix_coeffs(AC3DecodeContext *s)$/;"	f	file:
set_filter_param	libavfilter/vf_unsharp.c	/^static void set_filter_param(FilterParam *fp, int msize_x, int msize_y, double amount)$/;"	f	file:
set_frame_distances	libavcodec/mpegvideo_enc.c	/^static void set_frame_distances(MpegEncContext * s){$/;"	f	file:
set_gamma	libavfilter/libmpcodecs/vf_eq2.c	/^void set_gamma (vf_eq2_t *eq2, double g)$/;"	f	file:
set_intra_mode_default	libavcodec/cavs.h	/^static inline void set_intra_mode_default(AVSContext *h) {$/;"	f
set_mv_intra	libavcodec/cavs.h	/^static inline void set_mv_intra(AVSContext *h) {$/;"	f
set_mv_strides	libavcodec/error_resilience.c	/^static void set_mv_strides(MpegEncContext *s, int *mv_step, int *stride){$/;"	f	file:
set_mvs	libavcodec/cavs.h	/^static inline void set_mvs(cavs_vector *mv, enum cavs_block size) {$/;"	f
set_ne_test_deps	configure	/^set_ne_test_deps(){$/;"	f
set_p_mv_tables	libavcodec/motion_est.c	/^static inline void set_p_mv_tables(MpegEncContext * s, int mx, int my, int mv4)$/;"	f	file:
set_palette	libavcodec/bethsoftvideo.c	/^static void set_palette(AVFrame * frame, const uint8_t * palette_buffer)$/;"	f	file:
set_param	libavfilter/vf_frei0r.c	/^static int set_param(AVFilterContext *ctx, f0r_param_info_t info, int index, char *param)$/;"	f	file:
set_param_value	libavfilter/vf_frei0r.c	/^    f0r_set_param_value_f set_param_value;$/;"	m	struct:Frei0rContext	file:
set_params	libavfilter/vf_frei0r.c	/^static int set_params(AVFilterContext *ctx, const char *params)$/;"	f	file:
set_pcr_pid	libavformat/mpegts.c	/^static void set_pcr_pid(AVFormatContext *s, unsigned int programid, unsigned int pid)$/;"	f	file:
set_put_bits_buffer_size	libavcodec/put_bits.h	/^static inline void set_put_bits_buffer_size(PutBitContext *s, int size)$/;"	f
set_safe	configure	/^set_safe(){$/;"	f
set_saturation	libavfilter/libmpcodecs/vf_eq2.c	/^void set_saturation (vf_eq2_t *eq2, double s)$/;"	f	file:
set_se_golomb	libavcodec/golomb.h	/^static inline void set_se_golomb(PutBitContext *pb, int i){$/;"	f
set_sr_golomb	libavcodec/golomb.h	/^static inline void set_sr_golomb(PutBitContext *pb, int i, int k, int limit, int esc_len){$/;"	f
set_sr_golomb_flac	libavcodec/golomb.h	/^static inline void set_sr_golomb_flac(PutBitContext *pb, int i, int k, int limit, int esc_len){$/;"	f
set_te_golomb	libavcodec/golomb.h	/^static inline void set_te_golomb(PutBitContext *pb, int i, int range){$/;"	f
set_ue_golomb	libavcodec/golomb.h	/^static inline void set_ue_golomb(PutBitContext *pb, int i){$/;"	f
set_ur_golomb	libavcodec/golomb.h	/^static inline void set_ur_golomb(PutBitContext *pb, int i, int k, int limit, int esc_len){$/;"	f
set_ur_golomb_jpegls	libavcodec/golomb.h	/^static inline void set_ur_golomb_jpegls(PutBitContext *pb, int i, int k, int limit, int esc_len){$/;"	f
set_weak	configure	/^set_weak(){$/;"	f
setbits	libavcodec/mqcenc.c	/^static void setbits(MqcState *mqc)$/;"	f	file:
setdar_config_props	libavfilter/vf_aspect.c	/^static int setdar_config_props(AVFilterLink *inlink)$/;"	f	file:
setinfo_max_samples_per_frame	libavcodec/alac.c	/^    uint32_t setinfo_max_samples_per_frame; \/* 0x1000 = 4096 *\/    \/* max samples per frame? *\/$/;"	m	struct:__anon266	file:
setinfo_rice_historymult	libavcodec/alac.c	/^    uint8_t setinfo_rice_historymult; \/* 0x28 *\/$/;"	m	struct:__anon266	file:
setinfo_rice_initialhistory	libavcodec/alac.c	/^    uint8_t setinfo_rice_initialhistory; \/* 0x0a *\/$/;"	m	struct:__anon266	file:
setinfo_rice_kmodifier	libavcodec/alac.c	/^    uint8_t setinfo_rice_kmodifier; \/* 0x0e *\/$/;"	m	struct:__anon266	file:
setinfo_sample_size	libavcodec/alac.c	/^    uint8_t setinfo_sample_size; \/* 0x10 *\/$/;"	m	struct:__anon266	file:
setpal	libavcodec/kmvc.c	/^    int setpal;$/;"	m	struct:KmvcContext	file:
setsar_config_props	libavfilter/vf_aspect.c	/^static int setsar_config_props(AVFilterLink *inlink)$/;"	f	file:
settings	libavformat/matroskadec.c	/^    EbmlBin  settings;$/;"	m	struct:__anon355	file:
setup_partitions	libavcodec/vp8.c	/^static int setup_partitions(VP8Context *s, const uint8_t *buf, int buf_size)$/;"	f	file:
sextw	libavcodec/alpha/asm.h	56;"	d
sez	libavcodec/g726.c	/^    int sez;            \/**< estimated second order prediction *\/$/;"	m	struct:G726Context	file:
sf	libavcodec/aac.h	/^    float sf[120];                                  \/\/\/< scalefactors$/;"	m	struct:__anon244
sf_delta_lut	libavcodec/nellymoserenc.c	/^static const uint8_t sf_delta_lut[78] = {$/;"	v	file:
sf_idx	libavcodec/aac.h	/^    int sf_idx[128];                                \/\/\/< scalefactor indices (used by encoder)$/;"	m	struct:__anon244
sf_lut	libavcodec/nellymoserenc.c	/^static const uint8_t sf_lut[96] = {$/;"	v	file:
sf_offsets	libavcodec/wmaprodec.c	/^    int8_t           sf_offsets[WMAPRO_BLOCK_SIZES][WMAPRO_BLOCK_SIZES][MAX_BANDS]; \/\/\/< scale factor resample matrix$/;"	m	struct:WMAProDecodeCtx	file:
sf_rl_vlc	libavcodec/wmaprodec.c	/^static VLC              sf_rl_vlc;        \/\/\/< scale factor run length vlc$/;"	v	file:
sf_vlc	libavcodec/wmaprodec.c	/^static VLC              sf_vlc;           \/\/\/< scale factor DPCM vlc$/;"	v	file:
sfb_offsets	libavcodec/wmaprodec.c	/^    int16_t          sfb_offsets[WMAPRO_BLOCK_SIZES][MAX_BANDS];                    \/\/\/< scale factor band offsets (multiples of 4)$/;"	m	struct:WMAProDecodeCtx	file:
sframe_cache	libavcodec/wmavoice.c	/^    uint8_t sframe_cache[SFRAME_CACHE_MAXSIZE + FF_INPUT_BUFFER_PADDING_SIZE];$/;"	m	struct:__anon157	file:
sframe_cache_size	libavcodec/wmavoice.c	/^    int sframe_cache_size;        \/\/\/< set to >0 if we have data from an$/;"	m	struct:__anon157	file:
sframe_lsp_bitsize	libavcodec/wmavoice.c	/^    int sframe_lsp_bitsize;       \/\/\/< size (in bits) of LSPs, when encoded$/;"	m	struct:__anon157	file:
sgi_end	libavcodec/sgidec.c	/^static av_cold int sgi_end(AVCodecContext *avctx)$/;"	f	file:
sgi_init	libavcodec/sgidec.c	/^static av_cold int sgi_init(AVCodecContext *avctx){$/;"	f	file:
sgn	libavcodec/g726.c	/^static inline int sgn(int value)$/;"	f	file:
sgnd	libavcodec/j2kdec.c	/^    uint8_t sgnd[4]; \/\/\/< if a component is signed$/;"	m	struct:__anon98	file:
sh_quote	configure	/^sh_quote(){$/;"	f
sha1_transform	libavutil/sha.c	/^static void sha1_transform(uint32_t state[5], const uint8_t buffer[64])$/;"	f	file:
sha256_transform	libavutil/sha.c	/^static void sha256_transform(uint32_t *state, const uint8_t buffer[64])$/;"	f	file:
shadowcolor	libavfilter/vf_drawtext.c	/^    uint8_t shadowcolor[4];         \/\/\/< shadow color$/;"	m	struct:__anon24	file:
shadowcolor_rgba	libavfilter/vf_drawtext.c	/^    uint8_t shadowcolor_rgba[4];    \/\/\/< shadow color in RGBA$/;"	m	struct:__anon24	file:
shadowcolor_string	libavfilter/vf_drawtext.c	/^    char *shadowcolor_string;       \/\/\/< shadow color as string$/;"	m	struct:__anon24	file:
shadowx	libavfilter/vf_drawtext.c	/^    int shadowx, shadowy;$/;"	m	struct:__anon24	file:
shadowy	libavfilter/vf_drawtext.c	/^    int shadowx, shadowy;$/;"	m	struct:__anon24	file:
shall_we_drop	libavdevice/dshow.c	/^static int shall_we_drop(AVFormatContext *s)$/;"	f	file:
shall_we_drop	libavdevice/vfwcap.c	/^static int shall_we_drop(AVFormatContext *s)$/;"	f	file:
shape	libavcodec/mpegvideo.h	/^    int shape;$/;"	m	struct:MpegEncContext
shape08	libavcodec/twinvq_data.h	/^    int16_t shape08[1280];$/;"	m	struct:__anon263
shape11	libavcodec/twinvq_data.h	/^    int16_t shape11[1280];$/;"	m	struct:__anon263
shape16	libavcodec/twinvq_data.h	/^    int16_t shape16[1920];$/;"	m	struct:__anon263
shape22_1	libavcodec/twinvq_data.h	/^    int16_t shape22_1[1152];$/;"	m	struct:__anon263
shape22_2	libavcodec/twinvq_data.h	/^    int16_t shape22_2[1152];$/;"	m	struct:__anon263
shape44	libavcodec/twinvq_data.h	/^    int16_t shape44[1152];$/;"	m	struct:__anon263
sharp	libavfilter/libmpcodecs/vf_kerndeint.c	/^    int    sharp;$/;"	m	struct:vf_priv_s	file:
sharpness	libavcodec/vp8.h	/^        uint8_t sharpness;$/;"	m	struct:__anon182::__anon184
shift	libavcodec/flacenc.c	/^    int shift;$/;"	m	struct:FlacSubframe	file:
shift	libavcodec/mlp.h	/^    uint8_t     shift; \/\/\/< Right shift to apply to output of filter.$/;"	m	struct:__anon77
shift	libavcodec/sonic.c	/^static inline int shift(int a,int b)$/;"	f	file:
shift	libavcodec/tta.c	/^    int32_t shift, round, error, mode;$/;"	m	struct:TTAFilter	file:
shift	libavcodec/wavpack.c	/^    int and, or, shift;$/;"	m	struct:WavpackFrameContext	file:
shift	libavcodec/wnv1.c	/^    int shift;$/;"	m	struct:WNV1Context	file:
shift	libavutil/pixdesc.h	/^    uint16_t shift        :3;            \/\/\/< number of least significant bits that must be shifted away to get the value$/;"	m	struct:AVComponentDescriptor
shift1	libavcodec/dxa.c	/^static const int shift1[6] = { 0, 8, 8, 8, 4, 4 };$/;"	v	file:
shift2	libavcodec/dxa.c	/^static const int shift2[6] = { 0, 0, 8, 4, 0, 4 };$/;"	v	file:
shift_1	libavcodec/tta.c	/^static const uint32_t shift_1[] = {$/;"	v	file:
shift_16	libavcodec/tta.c	/^static const uint32_t * const shift_16 = shift_1 + 4;$/;"	v	file:
shift_codebook	libavcodec/elbg.c	/^static void shift_codebook(elbg_data *elbg, int *indexes,$/;"	f	file:
shift_down	libavcodec/sonic.c	/^static inline int shift_down(int a,int b)$/;"	f	file:
shift_lsbs	libavcodec/alsdec.c	/^    unsigned int *shift_lsbs;       \/\/\/< contains shift_lsbs flags for all channels$/;"	m	struct:__anon152	file:
shift_lsbs	libavcodec/alsdec.c	/^    unsigned int *shift_lsbs;       \/\/\/< shift of values for this block$/;"	m	struct:__anon153	file:
shift_offset	libavcodec/dv.c	/^    int shift_offset;$/;"	m	struct:BlockInfo	file:
shiftptr	libavfilter/libmpcodecs/vf_noise.c	/^        int shiftptr;$/;"	m	struct:FilterParam	file:
shminfo	libavdevice/x11grab.c	/^    XShmSegmentInfo shminfo; \/**< When using XShm, keeps track of XShm infos *\/$/;"	m	struct:x11_grab	file:
shortName	libpostproc/postprocess_internal.h	/^    const char *shortName;$/;"	m	struct:PPFilter
short_name	libavfilter/libmpcodecs/libvo/video_out.h	/^    const char *short_name;$/;"	m	struct:vo_info_s
short_name	libavfilter/libmpcodecs/mpc_info.h	/^        const char *short_name;$/;"	m	struct:mp_codec_info_s
short_pic_num	libavcodec/h264.h	/^    int short_pic_num;  \/\/\/< pic_num without wrapping (pic_num & max_pic_num)$/;"	m	struct:MMCO
short_ref	libavcodec/h264.h	/^    Picture *short_ref[32];$/;"	m	struct:H264Context
short_ref_count	libavcodec/h264.h	/^    int short_ref_count; \/\/\/< number of actual short term references$/;"	m	struct:H264Context
short_start	libavcodec/mpegaudiodec.c	/^    int short_start, long_end; \/* long\/short band indexes *\/$/;"	m	struct:GranuleDef	file:
short_term_qcount	libavcodec/ratecontrol.h	/^    double short_term_qcount;     \/\/\/< count of recent qscales$/;"	m	struct:RateControlContext
short_term_qsum	libavcodec/ratecontrol.h	/^    double short_term_qsum;       \/\/\/< sum of recent qscales$/;"	m	struct:RateControlContext
short_term_synth	libavcodec/gsmdec_template.c	/^static void short_term_synth(GSMContext *ctx, int16_t *dst, const int16_t *src)$/;"	f	file:
shorten_decode_close	libavcodec/shorten.c	/^static av_cold int shorten_decode_close(AVCodecContext *avctx)$/;"	f	file:
shorten_decode_frame	libavcodec/shorten.c	/^static int shorten_decode_frame(AVCodecContext *avctx,$/;"	f	file:
shorten_decode_init	libavcodec/shorten.c	/^static av_cold int shorten_decode_init(AVCodecContext * avctx)$/;"	f	file:
shorten_flush	libavcodec/shorten.c	/^static void shorten_flush(AVCodecContext *avctx){$/;"	f	file:
shot	libavfilter/libmpcodecs/vf_screenshot.c	/^    int shot, store_slices;$/;"	m	struct:vf_priv_s	file:
show	libavfilter/libmpcodecs/vf_delogo.c	/^    int xoff, yoff, lw, lh, band, show;$/;"	m	struct:vf_priv_s	file:
show_banner	cmdutils.c	/^void show_banner(void)$/;"	f
show_banner	ffmpeg/cmdutils.c	/^void show_banner(void)$/;"	f
show_bits	libavcodec/get_bits.h	/^static inline unsigned int show_bits(GetBitContext *s, int n){$/;"	f
show_bits1	libavcodec/get_bits.h	/^static inline unsigned int show_bits1(GetBitContext *s){$/;"	f
show_bits_long	libavcodec/get_bits.h	/^static inline unsigned int show_bits_long(GetBitContext *s, int n){$/;"	f
show_format	ffprobe.c	/^static void show_format(AVFormatContext *fmt_ctx)$/;"	f	file:
show_help	configure	/^show_help(){$/;"	f
show_help_options	cmdutils.c	/^void show_help_options(const OptionDef *options, const char *msg, int mask, int value)$/;"	f
show_help_options	ffmpeg/cmdutils.c	/^void show_help_options(const OptionDef *options, const char *msg, int mask, int value)$/;"	f
show_list	configure	/^show_list() {$/;"	f
show_mode	ffplay.c	/^    } show_mode;$/;"	m	struct:VideoState	typeref:enum:VideoState::ShowMode	file:
show_mode	ffplay.c	/^static enum ShowMode show_mode = SHOW_MODE_NONE;$/;"	v	typeref:enum:ShowMode	file:
show_packet	ffprobe.c	/^static void show_packet(AVFormatContext *fmt_ctx, AVPacket *pkt)$/;"	f	file:
show_packets	ffprobe.c	/^static void show_packets(AVFormatContext *fmt_ctx)$/;"	f	file:
show_status	ffplay.c	/^static int show_status = 1;$/;"	v	file:
show_stream	ffprobe.c	/^static void show_stream(AVFormatContext *fmt_ctx, int stream_idx)$/;"	f	file:
show_usage	ffmpeg.c	/^static void show_usage(void)$/;"	f	file:
show_usage	ffmpeg/ffmpeg.c	/^static void show_usage(void)$/;"	f	file:
show_usage	ffplay.c	/^static void show_usage(void)$/;"	f	file:
show_usage	ffprobe.c	/^static void show_usage(void)$/;"	f	file:
show_value_unit	ffprobe.c	/^static int show_value_unit              = 0;$/;"	v	file:
showed_multi_packet_warning	ffmpeg.c	/^    int showed_multi_packet_warning;$/;"	m	struct:AVInputStream	file:
showed_multi_packet_warning	ffmpeg/ffmpeg.c	/^    int showed_multi_packet_warning;$/;"	m	struct:AVInputStream	file:
showed_packed_warning	libavcodec/mpegvideo.h	/^    int showed_packed_warning;      \/\/\/< flag for having shown the warning about divxs invalid b frames$/;"	m	struct:MpegEncContext
shrink	libavcodec/dsputil.h	/^    void (*shrink[4])(uint8_t *dst, int dst_wrap, const uint8_t *src, int src_wrap, int width, int height);$/;"	m	struct:DSPContext
shuffle	libavutil/des.c	/^static uint64_t shuffle(uint64_t in, const uint8_t *shuffle, int shuffle_len) {$/;"	f	file:
shuffle_bytes_2103	libswscale/rgb2rgb.c	/^void (*shuffle_bytes_2103)(const uint8_t *src, uint8_t *dst, int src_size);$/;"	v
shuffle_bytes_2103	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(shuffle_bytes_2103)(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
shuffle_bytes_2103_c	libswscale/rgb2rgb_template.c	/^static inline void shuffle_bytes_2103_c(const uint8_t *src, uint8_t *dst, int src_size)$/;"	f	file:
shuffle_inv	libavutil/des.c	/^static uint64_t shuffle_inv(uint64_t in, const uint8_t *shuffle, int shuffle_len) {$/;"	f	file:
shutdown_callback	libavdevice/jack_audio.c	/^static void shutdown_callback(void *arg)$/;"	f	file:
si	libavcodec/dxva2_vc1.c	/^    DXVA_SliceInfo         si;$/;"	m	struct:dxva2_picture_context	file:
si	libavcodec/rv34.h	/^    SliceInfo si;            \/\/\/< current slice information$/;"	m	struct:RV34DecContext
si_prefixes	libavutil/eval.c	/^static const int8_t si_prefixes['z' - 'E' + 1] = {$/;"	v	file:
sid	libavformat/mpegtsenc.c	/^    int sid;           \/* service ID *\/$/;"	m	struct:MpegTSService	file:
side_data	libavcodec/avcodec.h	/^    } *side_data;$/;"	m	struct:AVPacket	typeref:struct:AVPacket::__anon99
side_data_elems	libavcodec/avcodec.h	/^    int side_data_elems;$/;"	m	struct:AVPacket
siff_parse_soun	libavformat/siff.c	/^static int siff_parse_soun(AVFormatContext *s, SIFFContext *c, AVIOContext *pb)$/;"	f	file:
siff_parse_vbv1	libavformat/siff.c	/^static int siff_parse_vbv1(AVFormatContext *s, SIFFContext *c, AVIOContext *pb)$/;"	f	file:
siff_probe	libavformat/siff.c	/^static int siff_probe(AVProbeData *p)$/;"	f	file:
siff_read_header	libavformat/siff.c	/^static int siff_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
siff_read_packet	libavformat/siff.c	/^static int siff_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
sigma0_256	libavutil/sha.c	159;"	d	file:
sigma1_256	libavutil/sha.c	160;"	d	file:
sign	libavcodec/dv.c	/^    uint8_t  sign[64];$/;"	m	struct:EncBlockInfo	file:
sign	libavcodec/g726.c	/^    uint8_t sign;   \/**< 1bit sign *\/$/;"	m	struct:Float11	file:
sign_bias	libavcodec/vp8.h	/^    int8_t sign_bias[4]; \/\/\/< one state [0, 1] per ref frame type$/;"	m	struct:__anon182
sign_convention	libavcodec/rdft.h	/^    int sign_convention;$/;"	m	struct:RDFTContext
sign_extend	libavcodec/mathops.h	/^static inline av_const int sign_extend(int val, unsigned bits)$/;"	f
sign_huff_offset	libavcodec/mlp.h	/^    int32_t     sign_huff_offset; \/\/\/< sign\/rounding-corrected version of huff_offset$/;"	m	struct:__anon78
sign_lookup	libavcodec/g722.c	/^static const int8_t sign_lookup[2] = { -1, 1 };$/;"	v	file:
sign_only	libavcodec/alac.c	/^static inline int sign_only(int v)$/;"	f	file:
signature	libavformat/ipmovie.c	/^static const char signature[] = "Interplay MVE File\\x1A\\0\\x1A";$/;"	v	file:
signed_shift	libavcodec/nellymoser.c	/^static inline int signed_shift(int i, int shift) {$/;"	f	file:
sigterm_handler	ffmpeg.c	/^sigterm_handler(int sig)$/;"	f	file:
sigterm_handler	ffmpeg/ffmpeg.c	/^sigterm_handler(int sig)$/;"	f	file:
silence_gain	libavcodec/wmavoice.c	/^    float silence_gain;           \/\/\/< set for use in blocks if #ACB_TYPE_NONE$/;"	m	struct:__anon157	file:
simple	libavcodec/vp8.h	/^        uint8_t simple;$/;"	m	struct:__anon182::__anon184
simple_idct_arm_add	libavcodec/arm/dsputil_init_arm.c	/^static void simple_idct_arm_add(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
simple_idct_arm_put	libavcodec/arm/dsputil_init_arm.c	/^static void simple_idct_arm_put(uint8_t *dest, int line_size, DCTELEM *block)$/;"	f	file:
simple_lbg	libavcodec/elbg.c	/^static int simple_lbg(elbg_data *elbg,$/;"	f	file:
simple_limit	libavcodec/vp8dsp.c	/^static av_always_inline int simple_limit(uint8_t *p, int stride, int flim)$/;"	f	file:
simple_mmx_permutation	libavcodec/dsputil.c	/^static const uint8_t simple_mmx_permutation[64]={$/;"	v	file:
sin	libavcodec/wmavoice.c	/^    float sin[511], cos[511];     \/\/\/< 8-bit cosine\/sine windows over [-pi,pi]$/;"	m	struct:__anon157	file:
sin64	libavcodec/wmaprodec.c	/^static float            sin64[33];        \/\/\/< sinus table for decorrelation$/;"	v	file:
sinc_win	libavcodec/sipr16kdata.h	/^static const float sinc_win[40] = {$/;"	v
single_decode_warning	libavcodec/h264.h	/^    int single_decode_warning;$/;"	m	struct:H264Context
sipr_decode_frame	libavcodec/sipr.c	/^static int sipr_decode_frame(AVCodecContext *avctx, void *datap,$/;"	f	file:
sipr_decode_lp	libavcodec/sipr.c	/^static void sipr_decode_lp(float *lsfnew, const float *lsfold, float *Az,$/;"	f	file:
sipr_decoder_init	libavcodec/sipr.c	/^static av_cold int sipr_decoder_init(AVCodecContext * avctx)$/;"	f	file:
sipr_swaps	libavformat/rmdec.c	/^static const unsigned char sipr_swaps[38][2] = {$/;"	v	file:
sixtap_filter_hb_m	libavcodec/x86/vp8dsp.asm	/^sixtap_filter_hb_m:  times 8 db   2,   1$/;"	l
sixtap_filter_hw_m	libavcodec/x86/vp8dsp.asm	/^sixtap_filter_hw_m:  times 4 dw   2, -11$/;"	l
sixtap_filter_v_m	libavcodec/x86/vp8dsp.asm	/^sixtap_filter_v_m:   times 8 dw   2$/;"	l
size	ffplay.c	/^    int size;$/;"	m	struct:PacketQueue	file:
size	libavcodec/4xm.c	/^    unsigned int size;$/;"	m	struct:CFrameBuffer	file:
size	libavcodec/ass_split.c	/^    int         size;$/;"	m	struct:__anon145	file:
size	libavcodec/avcodec.h	/^        int      size;$/;"	m	struct:AVPacket::__anon99
size	libavcodec/avcodec.h	/^    int   size;$/;"	m	struct:AVPacket
size	libavcodec/cinepak.c	/^    int size;$/;"	m	struct:CinepakContext	file:
size	libavcodec/cook.c	/^    int                 size;$/;"	m	struct:__anon230	file:
size	libavcodec/dca_parser.c	/^    int size;$/;"	m	struct:DCAParseContext	file:
size	libavcodec/dv_tablegen.h	/^   uint32_t size;$/;"	m	struct:dv_vlc_pair
size	libavcodec/escape124.c	/^    unsigned size;$/;"	m	struct:CodeBook	file:
size	libavcodec/idcinvideo.c	/^    int size;$/;"	m	struct:IdcinContext	file:
size	libavcodec/interplayvideo.c	/^    int size;$/;"	m	struct:IpvideoContext	file:
size	libavcodec/libdirac_libschro.h	/^    int size;$/;"	m	struct:FfmpegDiracSchroQueue
size	libavcodec/libdirac_libschro.h	/^    uint32_t size;$/;"	m	struct:FfmpegDiracSchroEncodedFrame
size	libavcodec/motionpixels.c	/^    uint8_t size;$/;"	m	struct:HuffCode	file:
size	libavcodec/msrle.c	/^    int size;$/;"	m	struct:MsrleContext	file:
size	libavcodec/msvideo1.c	/^    int size;$/;"	m	struct:Msvideo1Context	file:
size	libavcodec/psymodel.h	/^        int size;                     \/\/\/< size of the bitresevoir in bits$/;"	m	struct:FFPsyContext::__anon226
size	libavcodec/qdm2.c	/^    unsigned int size;   \/\/\/< subpacket size$/;"	m	struct:__anon195	file:
size	libavcodec/qtrle.c	/^    int size;$/;"	m	struct:QtrleContext	file:
size	libavcodec/roqvideo.h	/^    int size;$/;"	m	struct:RoqContext
size	libavcodec/rpza.c	/^    int size;$/;"	m	struct:RpzaContext	file:
size	libavcodec/smc.c	/^    int size;$/;"	m	struct:SmcContext	file:
size	libavcodec/truemotion1.c	/^    int size;$/;"	m	struct:TrueMotion1Context	file:
size	libavcodec/twinvq.c	/^    uint16_t     size;        \/\/\/< frame size in samples$/;"	m	struct:__anon66	file:
size	libavcodec/twinvq_data.h	/^    int size;$/;"	m	struct:__anon264
size	libavcodec/vaapi_h264.c	/^    int            size;        \/\/\/< Current number of reference frames in the DPB$/;"	m	struct:DPB	file:
size	libavcodec/vmdav.c	/^    int size;$/;"	m	struct:VmdVideoContext	file:
size	libavcodec/vqavideo.c	/^    int size;$/;"	m	struct:VqaContext	file:
size	libavcodec/wavpack.c	/^    int size;$/;"	m	struct:SavedContext	file:
size	libavcodec/xan.c	/^    int size;$/;"	m	struct:XanContext	file:
size	libavfilter/libmpcodecs/img_format.h	/^    int size;$/;"	m	struct:__anon33
size	libavformat/anm.c	/^    int size;$/;"	m	struct:__anon434	file:
size	libavformat/ape.c	/^    int size;$/;"	m	struct:__anon334	file:
size	libavformat/avformat.h	/^    int size:30; \/\/Yeah, trying to keep the size of this small to reduce memory requirements (it is 24 vs. 32 bytes due to possible 8-byte alignment).$/;"	m	struct:AVIndexEntry
size	libavformat/aviobuf.c	/^    int pos, size, allocated_size;$/;"	m	struct:DynBuffer	file:
size	libavformat/concat.c	/^    int64_t     size;              \/\/\/< url filesize$/;"	m	struct:concat_nodes	file:
size	libavformat/isom.h	/^    int64_t size; \/* total size (excluding the size and type fields) *\/$/;"	m	struct:__anon467
size	libavformat/isom.h	/^    unsigned size;$/;"	m	struct:__anon468
size	libavformat/isom.h	/^    unsigned size;$/;"	m	struct:__anon469
size	libavformat/matroskadec.c	/^    int      size;$/;"	m	struct:__anon353	file:
size	libavformat/movenc.h	/^    int size;$/;"	m	struct:HintSample
size	libavformat/movenc.h	/^    int size;$/;"	m	struct:__anon449
size	libavformat/movenc.h	/^    unsigned int size;$/;"	m	struct:MOVIentry
size	libavformat/mp3enc.c	/^    int32_t size;$/;"	m	struct:MP3Context	file:
size	libavformat/mpc.c	/^    int size, skip;$/;"	m	struct:__anon375	file:
size	libavformat/mpegenc.c	/^    int size;$/;"	m	struct:PacketDesc	file:
size	libavformat/oggenc.c	/^    uint16_t size;$/;"	m	struct:__anon379	file:
size	libavformat/r3d.c	/^    unsigned size;$/;"	m	struct:__anon487	file:
size	libavformat/rtpdec_mpeg4.c	/^        int size;$/;"	m	struct:PayloadContext::AUHeaders	file:
size	libavformat/rtpdec_qcelp.c	/^    int size;$/;"	m	struct:__anon386	file:
size2index	libavcodec/4xm.c	/^static const uint8_t size2index[4][4]={$/;"	v	file:
size_in_bits	libavcodec/get_bits.h	/^    int size_in_bits;$/;"	m	struct:GetBitContext
size_in_bits	libavcodec/put_bits.h	/^    int size_in_bits;$/;"	m	struct:PutBitContext
size_lsb	libavformat/nut.h	/^    uint16_t size_lsb;$/;"	m	struct:__anon491
size_mul	libavformat/nut.h	/^    uint16_t size_mul;$/;"	m	struct:__anon491
size_table	libavcodec/vc1dec.c	/^static const int size_table  [6] = { 0, 2, 3, 4,  5,  8 };$/;"	v	file:
sizebytes	libavformat/matroskaenc.c	/^    int             sizebytes;          \/\/\/< how many bytes were reserved for the size$/;"	m	struct:ebml_master	file:
sizelength	libavformat/rtpdec_mpeg4.c	/^    int sizelength;$/;"	m	struct:PayloadContext	file:
sizes	libavformat/img2.c	/^static const int sizes[][2] = {$/;"	v	file:
skeleton_header	libavformat/oggparseskeleton.c	/^static int skeleton_header(AVFormatContext *s, int idx)$/;"	f	file:
skip	libavcodec/mpegvideo.h	/^    int skip;                          \/\/\/< set if ME is skipped for the current MB$/;"	m	struct:MotionEstContext
skip	libavcodec/vp8.h	/^    uint8_t skip;$/;"	m	struct:__anon181
skip	libavformat/ape.c	/^    int skip;$/;"	m	struct:__anon334	file:
skip	libavformat/mpc.c	/^    int size, skip;$/;"	m	struct:__anon375	file:
skipFlagBits	libavcodec/imc.c	/^    int skipFlagBits[BANDS];   \/\/\/< bits used to code skip flags$/;"	m	struct:__anon90	file:
skipFlagCount	libavcodec/imc.c	/^    int skipFlagCount[BANDS];  \/\/\/< skipped coeffients per band$/;"	m	struct:__anon90	file:
skipFlagRaw	libavcodec/imc.c	/^    int skipFlagRaw[BANDS];    \/\/\/< skip flags are stored in raw form or not$/;"	m	struct:__anon90	file:
skipFlags	libavcodec/imc.c	/^    int skipFlags[COEFFS];     \/\/\/< skip coefficient decoding or not$/;"	m	struct:__anon90	file:
skip_bits	libavcodec/get_bits.h	/^static inline void skip_bits(GetBitContext *s, int n){$/;"	f
skip_bits1	libavcodec/get_bits.h	/^static inline void skip_bits1(GetBitContext *s){$/;"	f
skip_bits_long	libavcodec/get_bits.h	/^static inline void skip_bits_long(GetBitContext *s, int n){$/;"	f
skip_bits_next	libavcodec/wmavoice.c	/^    int skip_bits_next;           \/\/\/< number of bits to skip at the next call$/;"	m	struct:__anon157	file:
skip_bottom	libavcodec/avcodec.h	/^     int skip_bottom;$/;"	m	struct:AVCodecContext
skip_check	libavcodec/mpegvideo_enc.c	/^static int skip_check(MpegEncContext *s, Picture *p, Picture *ref){$/;"	f	file:
skip_count	libavcodec/avcodec.h	/^    int skip_count;$/;"	m	struct:AVCodecContext
skip_count	libavcodec/mpegvideo.h	/^    int skip_count;$/;"	m	struct:MpegEncContext
skip_count	libavcodec/ratecontrol.h	/^    int skip_count;$/;"	m	struct:RateControlEntry
skip_data_stream_element	libavcodec/aacdec.c	/^static int skip_data_stream_element(AACContext *ac, GetBitContext *gb)$/;"	f	file:
skip_frame	ffplay.c	/^static enum AVDiscard skip_frame= AVDISCARD_DEFAULT;$/;"	v	typeref:enum:AVDiscard	file:
skip_frame	libavcodec/avcodec.h	/^    enum AVDiscard skip_frame;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVDiscard
skip_frame	libavcodec/wmaprodec.c	/^    int8_t           skip_frame;                    \/\/\/< skip output step$/;"	m	struct:WMAProDecodeCtx	file:
skip_frames	ffplay.c	/^    float skip_frames;$/;"	m	struct:VideoState	file:
skip_frames_index	ffplay.c	/^    float skip_frames_index;$/;"	m	struct:VideoState	file:
skip_hdr_extension	libavcodec/indeo5.c	/^static inline void skip_hdr_extension(GetBitContext *gb)$/;"	f	file:
skip_idct	ffplay.c	/^static enum AVDiscard skip_idct= AVDISCARD_DEFAULT;$/;"	v	typeref:enum:AVDiscard	file:
skip_idct	libavcodec/avcodec.h	/^    enum AVDiscard skip_idct;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVDiscard
skip_is_raw	libavcodec/vc1.h	/^    int skip_is_raw;              \/\/\/< skip mb plane is not coded$/;"	m	struct:VC1Context
skip_loop_filter	ffplay.c	/^static enum AVDiscard skip_loop_filter= AVDISCARD_DEFAULT;$/;"	v	typeref:enum:AVDiscard	file:
skip_loop_filter	libavcodec/avcodec.h	/^    enum AVDiscard skip_loop_filter;$/;"	m	struct:AVCodecContext	typeref:enum:AVCodecContext::AVDiscard
skip_loop_filter	libavcodec/vp3.c	/^    int skip_loop_filter;$/;"	m	struct:Vp3DecodeContext	file:
skip_media	libavformat/rtsp.c	/^    int            skip_media;  \/\/\/< set if an unknown m= line occurs$/;"	m	struct:SDPParseState	file:
skip_mode_flag	libavcodec/cavs.h	/^    int skip_mode_flag; \/\/\/< select between skip_count or one skip_flag per MB$/;"	m	struct:__anon207
skip_next_output	libavcodec/crystalhd.c	/^    uint8_t skip_next_output;$/;"	m	struct:__anon268	file:
skip_put_bits	libavcodec/put_bits.h	/^static inline void skip_put_bits(PutBitContext *s, int n)$/;"	f
skip_put_bytes	libavcodec/put_bits.h	/^static inline void skip_put_bytes(PutBitContext *s, int n)$/;"	f
skip_reserved	libavformat/nutdec.c	/^static int skip_reserved(AVIOContext *bc, int64_t pos){$/;"	f	file:
skip_space	libavcodec/ass_split.c	/^static inline const char *skip_space(const char *buf)$/;"	f	file:
skip_spaces	ffserver.c	/^static void skip_spaces(const char **pp)$/;"	f	file:
skip_syntax	libavcodec/ac3dec.h	/^    int skip_syntax;                        \/\/\/< skip field syntax enabled              (skipflde)$/;"	m	struct:__anon88
skip_table	libavcodec/qtrleenc.c	/^    uint8_t* skip_table;$/;"	m	struct:QtrleEncContext	file:
skip_to_keyframe	libavformat/matroskadec.c	/^    int skip_to_keyframe;$/;"	m	struct:__anon371	file:
skip_to_timecode	libavformat/matroskadec.c	/^    uint64_t skip_to_timecode;$/;"	m	struct:__anon371	file:
skip_top	libavcodec/avcodec.h	/^     int skip_top;$/;"	m	struct:AVCodecContext
skip_type	libavcodec/wmv2.h	/^    int skip_type;$/;"	m	struct:Wmv2Context
skip_until_key_frame	libavformat/nut.h	/^    int skip_until_key_frame;$/;"	m	struct:__anon492
skipdct	libavcodec/mpegvideo.h	/^    int skipdct;                \/\/\/< skip dct and code zero residual$/;"	m	struct:MpegEncContext
skipflag	libavfilter/libmpcodecs/vf_softskip.c	/^    int skipflag;$/;"	m	struct:vf_priv_s	file:
skiphdr	libavformat/sierravmd.c	/^    int skiphdr;$/;"	m	struct:VmdDemuxContext	file:
skipline	libavfilter/libmpcodecs/vf_down3dright.c	/^        int skipline;$/;"	m	struct:vf_priv_s	file:
sl_begin	libavcodec/flashsv2enc.c	/^    uint8_t *sl_begin, *sl_end;$/;"	m	struct:Block	file:
sl_end	libavcodec/flashsv2enc.c	/^    uint8_t *sl_begin, *sl_end;$/;"	m	struct:Block	file:
slen_table	libavcodec/mpegaudiodectab.h	/^static const uint8_t slen_table[2][16] = {$/;"	v
slice	libavcodec/dxva2_mpeg2.c	/^    DXVA_SliceInfo         slice[MAX_SLICES];$/;"	m	struct:dxva2_picture_context	file:
sliceDir	libswscale/swscale_internal.h	/^    int sliceDir;                 \/\/\/< Direction that slices are fed to the scaler (1 = top-to-bottom, -1 = bottom-to-top).$/;"	m	struct:SwsContext
slice_alpha_c0_offset	libavcodec/h264.h	/^    int slice_alpha_c0_offset;$/;"	m	struct:H264Context
slice_beta_offset	libavcodec/h264.h	/^    int slice_beta_offset;$/;"	m	struct:H264Context
slice_bits	libavcodec/dnxhdenc.h	/^    unsigned slice_bits;$/;"	m	struct:DNXHDEncContext
slice_buf_ids	libavcodec/vaapi.h	/^    uint32_t *slice_buf_ids;$/;"	m	struct:vaapi_context
slice_buf_ids_alloc	libavcodec/vaapi.h	/^    unsigned int slice_buf_ids_alloc;$/;"	m	struct:vaapi_context
slice_buffer	libavcodec/dwt.h	/^} slice_buffer;$/;"	t	typeref:struct:slice_buffer_s
slice_buffer_get_line	libavcodec/dwt.h	129;"	d
slice_buffer_s	libavcodec/dwt.h	/^typedef struct slice_buffer_s {$/;"	s
slice_compare	libavcodec/rv34.c	/^static inline int slice_compare(SliceInfo *si1, SliceInfo *si2)$/;"	f	file:
slice_context	libavcodec/ffv1.c	/^    struct FFV1Context *slice_context[MAX_SLICES];$/;"	m	struct:FFV1Context	typeref:struct:FFV1Context::FFV1Context	file:
slice_count	libavcodec/avcodec.h	/^    int slice_count;$/;"	m	struct:AVCodecContext
slice_count	libavcodec/dxva2_h264.c	/^    unsigned              slice_count;$/;"	m	struct:dxva2_picture_context	file:
slice_count	libavcodec/dxva2_mpeg2.c	/^    unsigned               slice_count;$/;"	m	struct:dxva2_picture_context	file:
slice_count	libavcodec/ffv1.c	/^    int slice_count;$/;"	m	struct:FFV1Context	file:
slice_count	libavcodec/mpeg12.c	/^    int slice_count;$/;"	m	struct:Mpeg1Context	file:
slice_count	libavcodec/vaapi.h	/^    unsigned int slice_count;$/;"	m	struct:vaapi_context
slice_count	libavformat/mxfenc.c	/^    uint8_t slice_count;  \/\/\/< index slice count minus 1 (1 if no audio, 0 otherwise)$/;"	m	struct:MXFContext	file:
slice_data	libavcodec/vaapi.h	/^    const uint8_t *slice_data;$/;"	m	struct:vaapi_context
slice_data_size	libavcodec/vaapi.h	/^    uint32_t slice_data_size;$/;"	m	struct:vaapi_context
slice_decode_thread	libavcodec/mpeg12.c	/^static int slice_decode_thread(AVCodecContext *c, void *arg){$/;"	f	file:
slice_end	libavcodec/mpeg12.c	/^static int slice_end(AVCodecContext *avctx, AVFrame *pict)$/;"	f	file:
slice_flags	libavcodec/avcodec.h	/^    int slice_flags;$/;"	m	struct:AVCodecContext
slice_group_count	libavcodec/h264.h	/^    int slice_group_count;      \/\/\/< num_slice_groups_minus1 + 1$/;"	m	struct:PPS
slice_height	libavcodec/ffv1.c	/^    int slice_height;$/;"	m	struct:FFV1Context	file:
slice_height	libavcodec/mpegvideo.h	/^    int slice_height;      \/\/\/< in macroblocks$/;"	m	struct:MpegEncContext
slice_long	libavcodec/dxva2_h264.c	/^    DXVA_Slice_H264_Long  slice_long[MAX_SLICES];$/;"	m	struct:dxva2_picture_context	file:
slice_num	libavcodec/h264.h	/^    int slice_num;$/;"	m	struct:H264Context
slice_offs	libavcodec/dnxhdenc.h	/^    uint32_t *slice_offs;$/;"	m	struct:DNXHDEncContext
slice_offset	libavcodec/avcodec.h	/^    int *slice_offset;$/;"	m	struct:AVCodecContext
slice_offset	libavformat/mxfenc.c	/^    unsigned slice_offset; \/\/\/< offset of audio slice$/;"	m	struct:__anon457	file:
slice_param_size	libavcodec/vaapi.h	/^    unsigned int slice_param_size;$/;"	m	struct:vaapi_context
slice_params	libavcodec/vaapi.h	/^    void *slice_params;$/;"	m	struct:vaapi_context
slice_params_alloc	libavcodec/vaapi.h	/^    unsigned int slice_params_alloc;$/;"	m	struct:vaapi_context
slice_short	libavcodec/dxva2_h264.c	/^    DXVA_Slice_H264_Short slice_short[MAX_SLICES];$/;"	m	struct:dxva2_picture_context	file:
slice_size	libavcodec/dnxhdenc.h	/^    uint32_t *slice_size;$/;"	m	struct:DNXHDEncContext
slice_table	libavcodec/h264.h	/^    uint16_t *slice_table;     \/\/\/< slice_table_base + 2*mb_stride + 1$/;"	m	struct:H264Context
slice_table_base	libavcodec/h264.h	/^    uint16_t *slice_table_base;$/;"	m	struct:H264Context
slice_type	libavcodec/h264.h	/^    int slice_type;$/;"	m	struct:H264Context
slice_type_fixed	libavcodec/h264.h	/^    int slice_type_fixed;$/;"	m	struct:H264Context
slice_type_nos	libavcodec/h264.h	/^    int slice_type_nos;        \/\/\/< S free slice type (SI\/SP are remapped to I\/P)$/;"	m	struct:H264Context
slice_width	libavcodec/ffv1.c	/^    int slice_width;$/;"	m	struct:FFV1Context	file:
slice_x	libavcodec/ffv1.c	/^    int slice_x;$/;"	m	struct:FFV1Context	file:
slice_y	libavcodec/ffv1.c	/^    int slice_y;$/;"	m	struct:FFV1Context	file:
slice_y	libavfilter/vf_scale.c	/^    int slice_y;                \/\/\/< top of current output slice$/;"	m	struct:__anon18	file:
slices	libavcodec/avcodec.h	/^    int slices;$/;"	m	struct:AVCodecContext
slices	libavformat/rmdec.c	/^    int cur_slice, slices;$/;"	m	struct:RMStream	file:
slope_cos	libavcodec/celp_math.c	/^static const int16_t slope_cos[64] =$/;"	v	file:
slot	libavcodec/lzw.c	/^    int slot;                   \/\/\/< Last read code$/;"	m	struct:LZWState	file:
slow_decay	libavcodec/ac3.h	/^    int slow_gain, slow_decay, fast_decay, db_per_bit, floor;$/;"	m	struct:AC3BitAllocParameters
slow_decay_code	libavcodec/ac3enc.h	/^    int slow_decay_code;                    \/\/\/< slow decay code                        (sdcycod)$/;"	m	struct:AC3EncodeContext
slow_gain	libavcodec/ac3.h	/^    int slow_gain, slow_decay, fast_decay, db_per_bit, floor;$/;"	m	struct:AC3BitAllocParameters
slow_gain_code	libavcodec/ac3enc.h	/^    int slow_gain_code;                     \/\/\/< slow gain code                         (sgaincod)$/;"	m	struct:AC3EncodeContext
slow_level	libavcodec/wavpack.c	/^    int slow_level, error_limit;$/;"	m	struct:WvChannel	file:
smacker_decode_bigtree	libavcodec/smacker.c	/^static int smacker_decode_bigtree(GetBitContext *gb, HuffContext *hc, DBCtx *ctx)$/;"	f	file:
smacker_decode_header_tree	libavcodec/smacker.c	/^static int smacker_decode_header_tree(SmackVContext *smk, GetBitContext *gb, int **recodes, int *last, int size)$/;"	f	file:
smacker_decode_tree	libavcodec/smacker.c	/^static int smacker_decode_tree(GetBitContext *gb, HuffContext *hc, uint32_t prefix, int length)$/;"	f	file:
smacker_probe	libavformat/smacker.c	/^static int smacker_probe(AVProbeData *p)$/;"	f	file:
smacker_read_close	libavformat/smacker.c	/^static int smacker_read_close(AVFormatContext *s)$/;"	f	file:
smacker_read_header	libavformat/smacker.c	/^static int smacker_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
smacker_read_packet	libavformat/smacker.c	/^static int smacker_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
small_bytes	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned small_bytes[2];$/;"	m	struct:vf_priv_s	file:
small_diamond_search	libavcodec/motion_est_template.c	/^static av_always_inline int small_diamond_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
small_strptime	libavutil/parseutils.c	/^const char *small_strptime(const char *p, const char *fmt,$/;"	f	file:
smc_decode_end	libavcodec/smc.c	/^static av_cold int smc_decode_end(AVCodecContext *avctx)$/;"	f	file:
smc_decode_frame	libavcodec/smc.c	/^static int smc_decode_frame(AVCodecContext *avctx,$/;"	f	file:
smc_decode_init	libavcodec/smc.c	/^static av_cold int smc_decode_init(AVCodecContext *avctx)$/;"	f	file:
smc_decode_stream	libavcodec/smc.c	/^static void smc_decode_stream(SmcContext *s)$/;"	f	file:
smk_get_code	libavcodec/smacker.c	/^static av_always_inline int smk_get_code(GetBitContext *gb, int *recode, int *last) {$/;"	f	file:
smk_pal	libavformat/smacker.c	/^static const uint8_t smk_pal[64] = {$/;"	v	file:
smka_decode_frame	libavcodec/smacker.c	/^static int smka_decode_frame(AVCodecContext *avctx, void *data, int *data_size, AVPacket *avpkt)$/;"	f	file:
smka_decode_init	libavcodec/smacker.c	/^static av_cold int smka_decode_init(AVCodecContext *avctx)$/;"	f	file:
smooth_end_frame_filter	libavfilter/vf_libopencv.c	/^static void smooth_end_frame_filter(AVFilterContext *ctx, IplImage *inimg, IplImage *outimg)$/;"	f	file:
smooth_init	libavfilter/vf_libopencv.c	/^static av_cold int smooth_init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
smpte_12m_timecode_track_data_ul	libavformat/mxfenc.c	/^static const uint8_t smpte_12m_timecode_track_data_ul[] = { 0x06,0x0E,0x2B,0x34,0x04,0x01,0x01,0x01,0x01,0x03,0x02,0x01,0x01,0x00,0x00,0x00 };$/;"	v	file:
snd__TAG	libavformat/4xm.c	51;"	d	file:
sndio_demuxer_class	libavdevice/sndio_dec.c	/^static const AVClass sndio_demuxer_class = {$/;"	v	file:
sndsize	libavformat/siff.c	/^    int sndsize;$/;"	m	struct:SIFFContext	file:
snow_horizontal_compose_liftS_lead_out	libavcodec/snow.h	/^static av_always_inline void snow_horizontal_compose_liftS_lead_out(int i, IDWTELEM * dst, IDWTELEM * src, IDWTELEM * ref, int width, int w){$/;"	f
snow_horizontal_compose_lift_lead_out	libavcodec/snow.h	/^static av_always_inline void snow_horizontal_compose_lift_lead_out(int i, IDWTELEM * dst, IDWTELEM * src, IDWTELEM * ref, int width, int w, int lift_high, int mul, int add, int shift){$/;"	f
snow_inner_add_yblock_mmx_accum	libavcodec/x86/snowdsp_mmx.c	791;"	d	file:
snow_inner_add_yblock_mmx_end	libavcodec/x86/snowdsp_mmx.c	809;"	d	file:
snow_inner_add_yblock_mmx_header	libavcodec/x86/snowdsp_mmx.c	762;"	d	file:
snow_inner_add_yblock_mmx_mix	libavcodec/x86/snowdsp_mmx.c	796;"	d	file:
snow_inner_add_yblock_mmx_start	libavcodec/x86/snowdsp_mmx.c	778;"	d	file:
snow_inner_add_yblock_sse2_accum_16	libavcodec/x86/snowdsp_mmx.c	656;"	d	file:
snow_inner_add_yblock_sse2_accum_8	libavcodec/x86/snowdsp_mmx.c	651;"	d	file:
snow_inner_add_yblock_sse2_end_16	libavcodec/x86/snowdsp_mmx.c	684;"	d	file:
snow_inner_add_yblock_sse2_end_8	libavcodec/x86/snowdsp_mmx.c	676;"	d	file:
snow_inner_add_yblock_sse2_end_common1	libavcodec/x86/snowdsp_mmx.c	661;"	d	file:
snow_inner_add_yblock_sse2_end_common2	libavcodec/x86/snowdsp_mmx.c	669;"	d	file:
snow_inner_add_yblock_sse2_header	libavcodec/x86/snowdsp_mmx.c	609;"	d	file:
snow_inner_add_yblock_sse2_start_16	libavcodec/x86/snowdsp_mmx.c	638;"	d	file:
snow_inner_add_yblock_sse2_start_8	libavcodec/x86/snowdsp_mmx.c	625;"	d	file:
snow_interleave_line_footer	libavcodec/snow.h	/^static av_always_inline void snow_interleave_line_footer(int * i, IDWTELEM * low, IDWTELEM * high){$/;"	f
snow_interleave_line_header	libavcodec/snow.h	/^static av_always_inline void snow_interleave_line_header(int * i, int width, IDWTELEM * low, IDWTELEM * high){$/;"	f
snow_vertical_compose_mmx_add	libavcodec/x86/snowdsp_mmx.c	523;"	d	file:
snow_vertical_compose_mmx_load	libavcodec/x86/snowdsp_mmx.c	520;"	d	file:
snow_vertical_compose_mmx_load_add	libavcodec/x86/snowdsp_mmx.c	514;"	d	file:
snow_vertical_compose_mmx_move	libavcodec/x86/snowdsp_mmx.c	532;"	d	file:
snow_vertical_compose_mmx_store	libavcodec/x86/snowdsp_mmx.c	526;"	d	file:
snow_vertical_compose_r2r_add	libavcodec/x86/snowdsp_mmx.c	423;"	d	file:
snow_vertical_compose_r2r_pmulhw	libavcodec/x86/snowdsp_mmx.c	429;"	d	file:
snow_vertical_compose_r2r_sub	libavcodec/x86/snowdsp_mmx.c	405;"	d	file:
snow_vertical_compose_sra	libavcodec/x86/snowdsp_mmx.c	417;"	d	file:
snow_vertical_compose_sse2_add	libavcodec/x86/snowdsp_mmx.c	402;"	d	file:
snow_vertical_compose_sse2_load	libavcodec/x86/snowdsp_mmx.c	399;"	d	file:
snow_vertical_compose_sse2_load_add	libavcodec/x86/snowdsp_mmx.c	393;"	d	file:
snow_vertical_compose_sse2_move	libavcodec/x86/snowdsp_mmx.c	435;"	d	file:
snow_vertical_compose_sse2_store	libavcodec/x86/snowdsp_mmx.c	411;"	d	file:
snr_offset	libavcodec/ac3dec.h	/^    int snr_offset[AC3_MAX_CHANNELS];               \/\/\/< signal-to-noise ratio offsets  (snroffst)$/;"	m	struct:__anon88
snr_offset_strategy	libavcodec/ac3dec.h	/^    int snr_offset_strategy;                \/\/\/< SNR offset strategy                    (snroffststr)$/;"	m	struct:__anon88
sockaddr_storage	libavformat/network.h	/^struct sockaddr_storage {$/;"	s
socket_open_listen	ffserver.c	/^static int socket_open_listen(struct sockaddr_in *my_addr)$/;"	f	file:
socklen_t	libavformat/os_support.h	/^typedef int socklen_t;$/;"	t
sofdec	libavformat/mpeg.c	/^    int sofdec;$/;"	m	struct:MpegDemuxContext	file:
soff	libavformat/wv.c	/^    uint32_t samples, soff;$/;"	m	struct:__anon327	file:
softclip_table	libavcodec/qdm2_tablegen.h	/^static uint16_t softclip_table[HARDCLIP_THRESHOLD - SOFTCLIP_THRESHOLD + 1];$/;"	v
softclip_table_init	libavcodec/qdm2_tablegen.h	/^static av_cold void softclip_table_init(void) {$/;"	f
softclip_table_init	libavcodec/qdm2_tablegen.h	34;"	d
softfloat_mul	libavcodec/lagarith.c	/^static uint32_t softfloat_mul(uint32_t x, uint64_t mantissa)$/;"	f	file:
softfloat_reciprocal	libavcodec/lagarith.c	/^static uint64_t softfloat_reciprocal(uint32_t denom)$/;"	f	file:
softpos	libavdevice/sndio_common.h	/^    int64_t softpos;$/;"	m	struct:__anon318
softthresh_c	libavfilter/libmpcodecs/vf_pp7.c	/^static int softthresh_c(DCTELEM *src, int qp){$/;"	f	file:
softthresh_c	libavfilter/libmpcodecs/vf_spp.c	/^static void softthresh_c(DCTELEM dst[64], DCTELEM src[64], int qp, uint8_t *permutation){$/;"	f	file:
softthresh_mmx	libavfilter/libmpcodecs/vf_spp.c	/^static void softthresh_mmx(DCTELEM dst[64], DCTELEM src[64], int qp, uint8_t *permutation){$/;"	f	file:
soi_ptr	libavformat/mxg.c	/^    uint8_t *soi_ptr;$/;"	m	struct:MXGContext	file:
sol_channels	libavformat/sol.c	/^static int sol_channels(int magic, int type)$/;"	f	file:
sol_codec_id	libavformat/sol.c	/^static enum CodecID sol_codec_id(int magic, int type)$/;"	f	file:
sol_codec_type	libavformat/sol.c	/^static int sol_codec_type(int magic, int type)$/;"	f	file:
sol_probe	libavformat/sol.c	/^static int sol_probe(AVProbeData *p)$/;"	f	file:
sol_read_header	libavformat/sol.c	/^static int sol_read_header(AVFormatContext *s,$/;"	f	file:
sol_read_packet	libavformat/sol.c	/^static int sol_read_packet(AVFormatContext *s,$/;"	f	file:
sol_table	libavcodec/dpcm.c	/^    const int *sol_table;\/\/for SOL_DPCM$/;"	m	struct:DPCMContext	file:
sol_table_16	libavcodec/dpcm.c	/^static const int sol_table_16[128] = {$/;"	v	file:
sol_table_new	libavcodec/dpcm.c	/^static const int sol_table_new[16] =$/;"	v	file:
sol_table_old	libavcodec/dpcm.c	/^static const int sol_table_old[16] =$/;"	v	file:
sonic_decode_close	libavcodec/sonic.c	/^static av_cold int sonic_decode_close(AVCodecContext *avctx)$/;"	f	file:
sonic_decode_frame	libavcodec/sonic.c	/^static int sonic_decode_frame(AVCodecContext *avctx,$/;"	f	file:
sonic_decode_init	libavcodec/sonic.c	/^static av_cold int sonic_decode_init(AVCodecContext *avctx)$/;"	f	file:
sonic_encode_close	libavcodec/sonic.c	/^static av_cold int sonic_encode_close(AVCodecContext *avctx)$/;"	f	file:
sonic_encode_frame	libavcodec/sonic.c	/^static int sonic_encode_frame(AVCodecContext *avctx,$/;"	f	file:
sonic_encode_init	libavcodec/sonic.c	/^static av_cold int sonic_encode_init(AVCodecContext *avctx)$/;"	f	file:
sort	libavcodec/vorbis.h	/^    uint16_t sort;$/;"	m	struct:__anon61
sort_stt	libavcodec/ffv1.c	/^static int sort_stt(FFV1Context *s, uint8_t stt[256]){$/;"	f	file:
sot	libavcodec/tiff.c	/^    int sot;$/;"	m	struct:TiffContext	file:
sound_samples	libavformat/swf.h	/^    int sound_samples;$/;"	m	struct:__anon336
source	libavformat/rtsp.h	/^    char source[INET6_ADDRSTRLEN + 1]; \/**< source IP address *\/$/;"	m	struct:RTSPTransportField
sourceX	libavcodec/roqvideoenc.c	/^    int sourceX, sourceY;$/;"	m	struct:__anon73	file:
sourceY	libavcodec/roqvideoenc.c	/^    int sourceX, sourceY;$/;"	m	struct:__anon73	file:
source_config_props	libavfilter/vf_frei0r.c	/^static int source_config_props(AVFilterLink *outlink)$/;"	f	file:
source_container_ul	libavformat/mxfdec.c	/^    UID source_container_ul;$/;"	m	struct:__anon439	file:
source_index	ffmpeg.c	/^    int source_index;        \/* AVInputStream index *\/$/;"	m	struct:AVOutputStream	file:
source_index	ffmpeg/ffmpeg.c	/^    int source_index;        \/* AVInputStream index *\/$/;"	m	struct:AVOutputStream	file:
source_init	libavfilter/vf_frei0r.c	/^static av_cold int source_init(AVFilterContext *ctx, const char *args, void *opaque)$/;"	f	file:
source_package_uid	libavformat/mxfdec.c	/^    UID source_package_uid;$/;"	m	struct:__anon440	file:
source_pcm_res	libavcodec/dca.c	/^    int source_pcm_res;         \/\/\/< source pcm resolution$/;"	m	struct:__anon93	file:
source_request_frame	libavfilter/vf_frei0r.c	/^static int source_request_frame(AVFilterLink *outlink)$/;"	f	file:
source_track_id	libavformat/mxfdec.c	/^    int source_track_id;$/;"	m	struct:__anon440	file:
sox_probe	libavformat/soxdec.c	/^static int sox_probe(AVProbeData *p)$/;"	f	file:
sox_read_header	libavformat/soxdec.c	/^static int sox_read_header(AVFormatContext *s,$/;"	f	file:
sox_read_packet	libavformat/soxdec.c	/^static int sox_read_packet(AVFormatContext *s,$/;"	f	file:
sox_write_header	libavformat/soxenc.c	/^static int sox_write_header(AVFormatContext *s)$/;"	f	file:
sox_write_packet	libavformat/soxenc.c	/^static int sox_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
sox_write_trailer	libavformat/soxenc.c	/^static int sox_write_trailer(AVFormatContext *s)$/;"	f	file:
sp	libavcodec/alpha/regdef.h	63;"	d
sp	libavcodec/lzw.c	/^    uint8_t *sp;$/;"	m	struct:LZWState	file:
sp5x_data_dht	libavcodec/sp5x.h	/^static const uint8_t sp5x_data_dht[] = {$/;"	v
sp5x_data_dqt	libavcodec/sp5x.h	/^static const uint8_t sp5x_data_dqt[] =$/;"	v
sp5x_data_sof	libavcodec/sp5x.h	/^static const uint8_t sp5x_data_sof[] =$/;"	v
sp5x_data_sos	libavcodec/sp5x.h	/^static const uint8_t sp5x_data_sos[] =$/;"	v
sp5x_decode_frame	libavcodec/sp5xdec.c	/^static int sp5x_decode_frame(AVCodecContext *avctx,$/;"	f	file:
sp5x_quant_table	libavcodec/sp5x.h	/^static const uint8_t sp5x_quant_table[20][64]=$/;"	v
sp_hist	libavcodec/ra288.c	/^    float sp_hist[111];$/;"	m	struct:__anon132	file:
sp_lpc	libavcodec/ra288.c	/^    float sp_lpc[36];      \/\/\/< LPC coefficients for speech data (spec: A)$/;"	m	struct:__anon132	file:
sp_rec	libavcodec/ra288.c	/^    float sp_rec[37];$/;"	m	struct:__anon132	file:
spatial_compensation_0	libavcodec/intrax8dsp.c	/^static void spatial_compensation_0(uint8_t *src , uint8_t *dst, int linesize){$/;"	f	file:
spatial_compensation_1	libavcodec/intrax8dsp.c	/^static void spatial_compensation_1(uint8_t *src , uint8_t *dst, int linesize){$/;"	f	file:
spatial_compensation_10	libavcodec/intrax8dsp.c	/^static void spatial_compensation_10(uint8_t *src , uint8_t *dst, int linesize){$/;"	f	file:
spatial_compensation_11	libavcodec/intrax8dsp.c	/^static void spatial_compensation_11(uint8_t *src , uint8_t *dst, int linesize){$/;"	f	file:
spatial_compensation_2	libavcodec/intrax8dsp.c	/^static void spatial_compensation_2(uint8_t *src , uint8_t *dst, int linesize){$/;"	f	file:
spatial_compensation_3	libavcodec/intrax8dsp.c	/^static void spatial_compensation_3(uint8_t *src , uint8_t *dst, int linesize){$/;"	f	file:
spatial_compensation_4	libavcodec/intrax8dsp.c	/^static void spatial_compensation_4(uint8_t *src , uint8_t *dst, int linesize){$/;"	f	file:
spatial_compensation_5	libavcodec/intrax8dsp.c	/^static void spatial_compensation_5(uint8_t *src , uint8_t *dst, int linesize){$/;"	f	file:
spatial_compensation_6	libavcodec/intrax8dsp.c	/^static void spatial_compensation_6(uint8_t *src , uint8_t *dst, int linesize){$/;"	f	file:
spatial_compensation_7	libavcodec/intrax8dsp.c	/^static void spatial_compensation_7(uint8_t *src , uint8_t *dst, int linesize){$/;"	f	file:
spatial_compensation_8	libavcodec/intrax8dsp.c	/^static void spatial_compensation_8(uint8_t *src , uint8_t *dst, int linesize){$/;"	f	file:
spatial_compensation_9	libavcodec/intrax8dsp.c	/^static void spatial_compensation_9(uint8_t *src , uint8_t *dst, int linesize){$/;"	f	file:
spatial_compose53i	libavcodec/dwt.c	/^static void av_unused spatial_compose53i(IDWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_compose53i_buffered_init	libavcodec/dwt.c	/^static void spatial_compose53i_buffered_init(DWTCompose *cs, slice_buffer * sb, int height, int stride_line){$/;"	f	file:
spatial_compose53i_dy	libavcodec/dwt.c	/^static void spatial_compose53i_dy(DWTCompose *cs, IDWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_compose53i_dy_buffered	libavcodec/dwt.c	/^static void spatial_compose53i_dy_buffered(DWTCompose *cs, slice_buffer * sb, int width, int height, int stride_line){$/;"	f	file:
spatial_compose53i_init	libavcodec/dwt.c	/^static void spatial_compose53i_init(DWTCompose *cs, IDWTELEM *buffer, int height, int stride){$/;"	f	file:
spatial_compose97i	libavcodec/dwt.c	/^static void av_unused spatial_compose97i(IDWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_compose97i_buffered_init	libavcodec/dwt.c	/^static void spatial_compose97i_buffered_init(DWTCompose *cs, slice_buffer * sb, int height, int stride_line){$/;"	f	file:
spatial_compose97i_dy	libavcodec/dwt.c	/^static void spatial_compose97i_dy(DWTCompose *cs, IDWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_compose97i_dy_buffered	libavcodec/dwt.c	/^static void spatial_compose97i_dy_buffered(DWTContext *dsp, DWTCompose *cs, slice_buffer * sb, int width, int height, int stride_line){$/;"	f	file:
spatial_compose97i_init	libavcodec/dwt.c	/^static void spatial_compose97i_init(DWTCompose *cs, IDWTELEM *buffer, int height, int stride){$/;"	f	file:
spatial_cplx_masking	libavcodec/avcodec.h	/^    float spatial_cplx_masking;$/;"	m	struct:AVCodecContext
spatial_decompose53i	libavcodec/dwt.c	/^static void spatial_decompose53i(DWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_decompose97i	libavcodec/dwt.c	/^static void spatial_decompose97i(DWTELEM *buffer, int width, int height, int stride){$/;"	f	file:
spatial_decomposition_count	libavcodec/snow.c	/^    int spatial_decomposition_count;$/;"	m	struct:SnowContext	file:
spatial_decomposition_type	libavcodec/snow.c	/^    int spatial_decomposition_type;$/;"	m	struct:SnowContext	file:
spatial_dwt_buffer	libavcodec/snow.c	/^    DWTELEM *spatial_dwt_buffer;$/;"	m	struct:SnowContext	file:
spatial_idwt_buffer	libavcodec/snow.c	/^    IDWTELEM *spatial_idwt_buffer;$/;"	m	struct:SnowContext	file:
spatial_scalability	libavcodec/snow.c	/^    int spatial_scalability;$/;"	m	struct:SnowContext	file:
spdif_dts4_subtype	libavformat/spdifenc.c	/^static int spdif_dts4_subtype(int period)$/;"	f	file:
spdif_flags	libavformat/spdifenc.c	/^    int spdif_flags;$/;"	m	struct:IEC61937Context	file:
spdif_get_offset_and_codec	libavformat/spdifdec.c	/^static int spdif_get_offset_and_codec(AVFormatContext *s,$/;"	f	file:
spdif_header_aac	libavformat/spdifenc.c	/^static int spdif_header_aac(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
spdif_header_ac3	libavformat/spdifenc.c	/^static int spdif_header_ac3(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
spdif_header_dts	libavformat/spdifenc.c	/^static int spdif_header_dts(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
spdif_header_dts4	libavformat/spdifenc.c	/^static int spdif_header_dts4(AVFormatContext *s, AVPacket *pkt, int core_size,$/;"	f	file:
spdif_header_eac3	libavformat/spdifenc.c	/^static int spdif_header_eac3(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
spdif_header_mpeg	libavformat/spdifenc.c	/^static int spdif_header_mpeg(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
spdif_header_truehd	libavformat/spdifenc.c	/^static int spdif_header_truehd(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
spdif_mpeg_pkt_offset	libavformat/spdif.h	/^static const uint16_t spdif_mpeg_pkt_offset[2][3] = {$/;"	v
spdif_probe	libavformat/spdifdec.c	/^static int spdif_probe(AVProbeData *p)$/;"	f	file:
spdif_put_16	libavformat/spdifenc.c	/^static av_always_inline void spdif_put_16(IEC61937Context *ctx,$/;"	f	file:
spdif_read_header	libavformat/spdifdec.c	/^static int spdif_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
spdif_read_packet	libavformat/spdifdec.c	/^static int spdif_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
spdif_write_header	libavformat/spdifenc.c	/^static int spdif_write_header(AVFormatContext *s)$/;"	f	file:
spdif_write_packet	libavformat/spdifenc.c	/^static int spdif_write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
spdif_write_trailer	libavformat/spdifenc.c	/^static int spdif_write_trailer(AVFormatContext *s)$/;"	f	file:
specs_per_bfu	libavcodec/atrac1data.h	/^static const uint8_t specs_per_bfu[52] = {$/;"	v
spectral_coeff_tab	libavcodec/atrac3.c	/^static VLC              spectral_coeff_tab[7];$/;"	v	file:
spectral_to_sample	libavcodec/aacdec.c	/^static void spectral_to_sample(AACContext *ac)$/;"	f	file:
spectrum	libavcodec/atrac1.c	/^    float*              spectrum[2];$/;"	m	struct:__anon119	file:
spectrum	libavcodec/twinvq.c	/^    float *spectrum;$/;"	m	struct:TwinContext	file:
spectrum_params	libavcodec/sbr.h	/^    SpectrumParameters spectrum_params;$/;"	m	struct:__anon57
speex_header	libavformat/oggparsespeex.c	/^static int speex_header(AVFormatContext *s, int idx) {$/;"	f	file:
speex_packet	libavformat/oggparsespeex.c	/^static int speex_packet(AVFormatContext *s, int idx)$/;"	f	file:
speex_params	libavformat/oggparsespeex.c	/^struct speex_params {$/;"	s	file:
spillover_bitsize	libavcodec/wmavoice.c	/^    int spillover_bitsize;        \/\/\/< number of bits used to specify$/;"	m	struct:__anon157	file:
spillover_nbits	libavcodec/wmavoice.c	/^    int spillover_nbits;          \/\/\/< number of bits of the previous packet's$/;"	m	struct:__anon157	file:
split	libavcodec/avcodec.h	/^    int (*split)(AVCodecContext *avctx, const uint8_t *buf, int buf_size);$/;"	m	struct:AVCodecParser
split_buf	libavformat/rtpdec_xiph.c	/^    uint8_t *split_buf;$/;"	m	struct:PayloadContext	file:
split_buf_len	libavformat/rtpdec_xiph.c	/^    int split_pos, split_buf_len, split_buf_size;$/;"	m	struct:PayloadContext	file:
split_buf_size	libavformat/rtpdec_xiph.c	/^    int split_pos, split_buf_len, split_buf_size;$/;"	m	struct:PayloadContext	file:
split_direction	libavcodec/indeo3.c	/^    int split_direction;$/;"	m	struct:ustr	file:
split_field_copy	libavcodec/h264_refs.c	/^static int split_field_copy(Picture *dest, Picture *src,$/;"	f	file:
split_flag	libavcodec/indeo3.c	/^    int split_flag;$/;"	m	struct:ustr	file:
split_pkts	libavformat/rtpdec_xiph.c	/^    int split_pkts;$/;"	m	struct:PayloadContext	file:
split_planes	libavformat/img2.c	/^    int split_planes;  \/**< use independent file for each Y, U, V plane *\/$/;"	m	struct:__anon389	file:
split_pos	libavformat/rtpdec_xiph.c	/^    int split_pos, split_buf_len, split_buf_size;$/;"	m	struct:PayloadContext	file:
split_radix_permutation	libavcodec/fft.c	/^static int split_radix_permutation(int i, int n, int inverse)$/;"	f	file:
spread_hi	libavcodec/aacpsy.c	/^    float spread_hi [2]; \/\/\/< spreading factor for high-to-low threshold spreading in long frame$/;"	m	struct:AacPsyCoeffs	file:
spread_low	libavcodec/aacpsy.c	/^    float spread_low[2]; \/\/\/< spreading factor for low-to-high threshold spreading in long frame$/;"	m	struct:AacPsyCoeffs	file:
sprintf	libavutil/internal.h	143;"	d
sprintf	libavutil/internal.h	144;"	d
sprite_brightness_change	libavcodec/mpegvideo.h	/^    int sprite_brightness_change;$/;"	m	struct:MpegEncContext
sprite_delta	libavcodec/mpegvideo.h	/^    int sprite_delta[2][2];          \/\/\/< sprite_delta [isY][isMVY]$/;"	m	struct:MpegEncContext
sprite_height	libavcodec/mpegvideo.h	/^    int sprite_height;$/;"	m	struct:MpegEncContext
sprite_left	libavcodec/mpegvideo.h	/^    int sprite_left;$/;"	m	struct:MpegEncContext
sprite_offset	libavcodec/mpegvideo.h	/^    int sprite_offset[2][2];         \/\/\/< sprite offset[isChroma][isMVY]$/;"	m	struct:MpegEncContext
sprite_shift	libavcodec/mpegvideo.h	/^    int sprite_shift[2];             \/\/\/< sprite shift [isChroma]$/;"	m	struct:MpegEncContext
sprite_top	libavcodec/mpegvideo.h	/^    int sprite_top;$/;"	m	struct:MpegEncContext
sprite_traj	libavcodec/mpegvideo.h	/^    uint16_t sprite_traj[4][2];      \/\/\/< sprite trajectory points$/;"	m	struct:MpegEncContext
sprite_trajectory	libavcodec/mpeg4videodec.c	/^static VLC sprite_trajectory;$/;"	v	file:
sprite_trajectory_tab	libavcodec/mpeg4data.h	/^const uint16_t sprite_trajectory_tab[15][2] = {$/;"	v
sprite_warping_accuracy	libavcodec/mpegvideo.h	/^    int sprite_warping_accuracy;$/;"	m	struct:MpegEncContext
sprite_width	libavcodec/mpegvideo.h	/^    int sprite_width;$/;"	m	struct:MpegEncContext
sps	libavcodec/h264.h	/^    SPS sps; \/\/\/< current sps$/;"	m	struct:H264Context
sps_buffers	libavcodec/h264.h	/^    SPS *sps_buffers[MAX_SPS_COUNT];$/;"	m	struct:H264Context
sps_id	libavcodec/h264.h	/^    unsigned int sps_id;$/;"	m	struct:PPS
sps_pps_buf	libavcodec/crystalhd.c	/^    uint8_t *sps_pps_buf;$/;"	m	struct:__anon268	file:
sps_pps_size	libavcodec/crystalhd.c	/^    uint32_t sps_pps_size;$/;"	m	struct:__anon268	file:
spx_atten_code	libavcodec/ac3dec.h	/^    int8_t spx_atten_code[AC3_MAX_CHANNELS];    \/\/\/< spx attenuation code                   (spxattencod)$/;"	m	struct:__anon88
spx_band_sizes	libavcodec/ac3dec.h	/^    uint8_t spx_band_sizes[SPX_MAX_BANDS];      \/\/\/< number of bins in each spx band$/;"	m	struct:__anon88
spx_dst_end_freq	libavcodec/ac3dec.h	/^    int spx_dst_end_freq;                       \/\/\/< spx end frequency bin$/;"	m	struct:__anon88
spx_dst_start_freq	libavcodec/ac3dec.h	/^    int spx_dst_start_freq;                     \/\/\/< spx starting frequency bin for copying (copystartmant)$/;"	m	struct:__anon88
spx_in_use	libavcodec/ac3dec.h	/^    int spx_in_use;                             \/\/\/< spectral extension in use              (spxinu)$/;"	m	struct:__anon88
spx_noise_blend	libavcodec/ac3dec.h	/^    float spx_noise_blend[AC3_MAX_CHANNELS][SPX_MAX_BANDS]; \/\/\/< spx noise blending factor  (nblendfact)$/;"	m	struct:__anon88
spx_signal_blend	libavcodec/ac3dec.h	/^    float spx_signal_blend[AC3_MAX_CHANNELS][SPX_MAX_BANDS];\/\/\/< spx signal blending factor (sblendfact)$/;"	m	struct:__anon88
spx_src_start_freq	libavcodec/ac3dec.h	/^    int spx_src_start_freq;                     \/\/\/< spx start frequency bin$/;"	m	struct:__anon88
sq	libavcodec/ps2/mmi.h	68;"	d
sq2	libavcodec/ps2/mmi.h	96;"	d
sqrt_tab	libavcodec/imc.c	/^    float sqrt_tab[30];$/;"	m	struct:__anon90	file:
sqrthalf	libavcodec/fft-internal.h	25;"	d
sqrthalf	libavcodec/fft-internal.h	47;"	d
square	libavcodec/roqvideoenc.c	/^static inline int square(int x)$/;"	f	file:
squared_diff_macroblock	libavcodec/roqvideoenc.c	/^static inline int squared_diff_macroblock(uint8_t a[], uint8_t b[], int size)$/;"	f	file:
sqvh	libavcodec/cook.c	/^    VLC                 sqvh[7];          \/\/scalar quantization$/;"	m	struct:cook	file:
sr	libavcodec/g726.c	/^    Float11 sr[2];      \/**< prev. reconstructed samples *\/$/;"	m	struct:G726Context	file:
sr_1d53	libavcodec/j2k_dwt.c	/^static void sr_1d53(int *p, int i0, int i1)$/;"	f	file:
sr_1d97	libavcodec/j2k_dwt.c	/^static void sr_1d97(float *p, int i0, int i1)$/;"	f	file:
sr_code	libavcodec/ac3.h	/^    int sr_code;$/;"	m	struct:AC3BitAllocParameters
sr_code	libavcodec/ac3.h	/^    uint8_t sr_code;$/;"	m	struct:__anon170
sr_code	libavcodec/flacenc.c	/^    int sr_code[2];$/;"	m	struct:FlacEncodeContext	file:
sr_shift	libavcodec/ac3.h	/^    int sr_shift;$/;"	m	struct:AC3BitAllocParameters
sr_shift	libavcodec/ac3.h	/^    uint8_t sr_shift;$/;"	m	struct:__anon170
srand	libavfilter/libmpcodecs/mp_image.h	34;"	d
srand	libavutil/des.c	331;"	d	file:
srand	libavutil/internal.h	139;"	d
srand	libavutil/internal.h	140;"	d
srbi	libavcodec/vp56.h	/^    int srbi;  \/* second row block index in MB *\/$/;"	m	struct:vp56_context
src	libavcodec/dnxhdenc.h	/^    uint8_t *src[3];$/;"	m	struct:DNXHDEncContext
src	libavcodec/mpegvideo.h	/^    uint8_t *src[4][4];$/;"	m	struct:MotionEstContext
src	libavfilter/avfilter.h	/^    AVFilterContext *src;       \/\/\/< source filter$/;"	m	struct:AVFilterLink
src	libavfilter/libmpcodecs/vf_fspp.c	/^    uint8_t *src;$/;"	m	struct:vf_priv_s	file:
src	libavfilter/libmpcodecs/vf_mcdeint.c	/^    uint8_t *src[3];$/;"	m	struct:vf_priv_s	file:
src	libavfilter/libmpcodecs/vf_pp7.c	/^    uint8_t *src;$/;"	m	struct:vf_priv_s	file:
src	libavfilter/libmpcodecs/vf_spp.c	/^        uint8_t *src;$/;"	m	struct:vf_priv_s	file:
src	libavfilter/libmpcodecs/vf_uspp.c	/^    uint8_t *src[3];$/;"	m	struct:vf_priv_s	file:
srcByte	libswscale/colorspace-test.c	31;"	d	file:
srcColorspaceTable	libswscale/swscale_internal.h	/^    int srcColorspaceTable[4];$/;"	m	struct:SwsContext
srcFormat	libswscale/swscale_internal.h	/^    enum PixelFormat srcFormat;   \/\/\/< Source      pixel format.$/;"	m	struct:SwsContext	typeref:enum:SwsContext::PixelFormat
srcFormatBpp	libswscale/swscale_internal.h	/^    int srcFormatBpp;             \/\/\/< Number of bits per pixel of the source      pixel format.$/;"	m	struct:SwsContext
srcH	libswscale/swscale_internal.h	/^    int srcH;                     \/\/\/< Height of source      luma\/alpha planes.$/;"	m	struct:SwsContext
srcRange	libswscale/swscale_internal.h	/^    int srcRange;                 \/\/\/< 0 = MPG YUV range, 1 = JPG YUV range (source      image).$/;"	m	struct:SwsContext
srcW	libswscale/swscale_internal.h	/^    int srcW;                     \/\/\/< Width  of source      luma\/alpha planes.$/;"	m	struct:SwsContext
src_addr	libavformat/sdp.c	/^    const char *src_addr; \/**< IP address of the machine from which the session was created *\/$/;"	m	struct:sdp_session_level	file:
src_buf	libavfilter/avfilter.h	/^    AVFilterBufferRef *src_buf;$/;"	m	struct:AVFilterLink
src_incr	libavcodec/resample2.c	/^    int src_incr;$/;"	m	struct:AVResampleContext	file:
src_track	libavformat/movenc.h	/^    int         src_track;    \/\/\/< the track that this hint track describes$/;"	m	struct:MOVIndex
src_type	libavformat/sdp.c	/^    const char *src_type; \/**< address type of src_addr *\/$/;"	m	struct:sdp_session_level	file:
srcpad	libavfilter/avfilter.h	/^    AVFilterPad *srcpad;        \/\/\/< output pad on the source filter$/;"	m	struct:AVFilterLink
srcptr	libavcodec/yop.c	/^    uint8_t *srcptr;$/;"	m	struct:YopDecContext	file:
srt_alignment_cb	libavcodec/srtenc.c	/^static void srt_alignment_cb(void *priv, int alignment)$/;"	f	file:
srt_callbacks	libavcodec/srtenc.c	/^static const ASSCodesCallbacks srt_callbacks = {$/;"	v	file:
srt_cancel_overrides_cb	libavcodec/srtenc.c	/^static void srt_cancel_overrides_cb(void *priv, const char *style)$/;"	f	file:
srt_close_tag	libavcodec/srtenc.c	/^static void srt_close_tag(SRTContext *s, char tag)$/;"	f	file:
srt_color_cb	libavcodec/srtenc.c	/^static void srt_color_cb(void *priv, unsigned int color, unsigned int color_id)$/;"	f	file:
srt_decode_frame	libavcodec/srtdec.c	/^static int srt_decode_frame(AVCodecContext *avctx,$/;"	f	file:
srt_encode_close	libavcodec/srtenc.c	/^static int srt_encode_close(AVCodecContext *avctx)$/;"	f	file:
srt_encode_frame	libavcodec/srtenc.c	/^static int srt_encode_frame(AVCodecContext *avctx,$/;"	f	file:
srt_encode_init	libavcodec/srtenc.c	/^static av_cold int srt_encode_init(AVCodecContext *avctx)$/;"	f	file:
srt_end_cb	libavcodec/srtenc.c	/^static void srt_end_cb(void *priv)$/;"	f	file:
srt_font_name_cb	libavcodec/srtenc.c	/^static void srt_font_name_cb(void *priv, const char *name)$/;"	f	file:
srt_font_size_cb	libavcodec/srtenc.c	/^static void srt_font_size_cb(void *priv, int size)$/;"	f	file:
srt_get_duration	libavformat/matroskaenc.c	/^static int srt_get_duration(uint8_t **buf)$/;"	f	file:
srt_move_cb	libavcodec/srtenc.c	/^static void srt_move_cb(void *priv, int x1, int y1, int x2, int y2,$/;"	f	file:
srt_new_line_cb	libavcodec/srtenc.c	/^static void srt_new_line_cb(void *priv, int forced)$/;"	f	file:
srt_print	libavcodec/srtenc.c	/^static void srt_print(SRTContext *s, const char *str, ...)$/;"	f	file:
srt_probe	libavformat/srtdec.c	/^static int srt_probe(AVProbeData *p)$/;"	f	file:
srt_read_header	libavformat/srtdec.c	/^static int srt_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
srt_read_packet	libavformat/srtdec.c	/^static int srt_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
srt_stack_find	libavcodec/srtenc.c	/^static int srt_stack_find(SRTContext *s, const char c)$/;"	f	file:
srt_stack_pop	libavcodec/srtenc.c	/^static char srt_stack_pop(SRTContext *s)$/;"	f	file:
srt_stack_push	libavcodec/srtenc.c	/^static int srt_stack_push(SRTContext *s, const char c)$/;"	f	file:
srt_stack_push_pop	libavcodec/srtenc.c	/^static void srt_stack_push_pop(SRTContext *s, const char c, int close)$/;"	f	file:
srt_style_apply	libavcodec/srtenc.c	/^static void srt_style_apply(SRTContext *s, const char *style)$/;"	f	file:
srt_style_cb	libavcodec/srtenc.c	/^static void srt_style_cb(void *priv, char style, int close)$/;"	f	file:
srt_text_cb	libavcodec/srtenc.c	/^static void srt_text_cb(void *priv, const char *text, int len)$/;"	f	file:
srt_to_ass	libavcodec/srtdec.c	/^static const char *srt_to_ass(AVCodecContext *avctx, char *out, char *out_end,$/;"	f	file:
ss_align	libavformat/network.h	/^    int64_t ss_align;$/;"	m	struct:sockaddr_storage
ss_family	libavformat/network.h	/^    uint8_t ss_family;$/;"	m	struct:sockaddr_storage
ss_len	libavformat/network.h	/^    uint8_t ss_len;$/;"	m	struct:sockaddr_storage
ss_pad1	libavformat/network.h	/^    char ss_pad1[6];$/;"	m	struct:sockaddr_storage
ss_pad2	libavformat/network.h	/^    char ss_pad2[112];$/;"	m	struct:sockaddr_storage
ssd	libavcodec/adpcm.c	/^    uint32_t ssd;$/;"	m	struct:TrellisNode	file:
ssd	libavcodec/dnxhdenc.h	/^    int ssd;$/;"	m	struct:__anon163
ssd	libavcodec/g722.c	/^        uint32_t ssd;$/;"	m	struct:__anon140::TrellisNode	file:
ssdA	libswscale/swscale-test.c	/^    uint64_t ssdA;$/;"	m	struct:Results	file:
ssdU	libswscale/swscale-test.c	/^    uint64_t ssdU;$/;"	m	struct:Results	file:
ssdV	libswscale/swscale-test.c	/^    uint64_t ssdV;$/;"	m	struct:Results	file:
ssdY	libswscale/swscale-test.c	/^    uint64_t ssdY;$/;"	m	struct:Results	file:
ssd_int8_vs_int16	libavcodec/dsputil.h	/^    int (*ssd_int8_vs_int16)(const int8_t *pix1, const int16_t *pix2,$/;"	m	struct:DSPContext
ssd_int8_vs_int16_altivec	libavcodec/ppc/int_altivec.c	/^static int ssd_int8_vs_int16_altivec(const int8_t *pix1, const int16_t *pix2,$/;"	f	file:
ssd_int8_vs_int16_c	libavcodec/dsputil.c	/^static int ssd_int8_vs_int16_c(const int8_t *pix1, const int16_t *pix2,$/;"	f	file:
ssd_int8_vs_int16_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static int ssd_int8_vs_int16_mmx(const int8_t *pix1, const int16_t *pix2, int size){$/;"	f	file:
sse	libavcodec/dsputil.h	/^    me_cmp_func sse[6];$/;"	m	struct:DSPContext
sse	libavcodec/mpegvideo_enc.c	/^static int sse(MpegEncContext *s, uint8_t *src1, uint8_t *src2, int w, int h, int stride){$/;"	f	file:
sse16_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int sse16_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
sse16_c	libavcodec/dsputil.c	/^static int sse16_c(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
sse16_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static int sse16_mmx(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h) {$/;"	f	file:
sse4_c	libavcodec/dsputil.c	/^static int sse4_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h)$/;"	f	file:
sse8_altivec	libavcodec/ppc/dsputil_altivec.c	/^static int sse8_altivec(void *v, uint8_t *pix1, uint8_t *pix2, int line_size, int h)$/;"	f	file:
sse8_c	libavcodec/dsputil.c	/^static int sse8_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h)$/;"	f	file:
sse8_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static int sse8_mmx(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h) {$/;"	f	file:
sse_mb	libavcodec/mpegvideo_enc.c	/^static int sse_mb(MpegEncContext *s){$/;"	f	file:
ssnd	libavformat/aiffenc.c	/^    int64_t ssnd;$/;"	m	struct:__anon453	file:
ssrc	libavformat/rtpdec.h	/^    uint32_t ssrc;$/;"	m	struct:RTPDemuxContext
ssrc	libavformat/rtpenc.h	/^    uint32_t ssrc;$/;"	m	struct:RTPMuxContext
sstype	libavcodec/tiff.c	/^    int strips, rps, sstype;$/;"	m	struct:TiffContext	file:
st	ffmpeg.c	/^    AVStream *st;            \/* stream in the output file *\/$/;"	m	struct:AVOutputStream	file:
st	ffmpeg.c	/^    AVStream *st;$/;"	m	struct:AVInputStream	file:
st	ffmpeg/ffmpeg.c	/^    AVStream *st;            \/* stream in the output file *\/$/;"	m	struct:AVOutputStream	file:
st	ffmpeg/ffmpeg.c	/^    AVStream *st;$/;"	m	struct:AVInputStream	file:
st	libavformat/mpegts.c	/^    AVStream *st;$/;"	m	struct:PESContext	file:
st	libavformat/rtpdec.h	/^    AVStream *st;$/;"	m	struct:RTPDemuxContext
st	libavformat/rtpenc.h	/^    AVStream *st;$/;"	m	struct:RTPMuxContext
st_audio	libavformat/avs.c	/^    AVStream *st_audio;$/;"	m	struct:avs_format	file:
st_lrm	libavcodec/aacpsy.c	/^    float st_lrm;   \/\/\/< short threshold for L, R, and M channels$/;"	m	struct:__anon256	file:
st_video	libavformat/avs.c	/^    AVStream *st_video;$/;"	m	struct:avs_format	file:
stability_factor	libavcodec/amrwbdec.c	/^static float stability_factor(const float *isf, const float *isf_past)$/;"	f	file:
stabilize_lsps	libavcodec/wmavoice.c	/^static void stabilize_lsps(double *lsps, int num)$/;"	f	file:
stack	libavcodec/lzw.c	/^    uint8_t stack[LZW_SIZTABLE];$/;"	m	struct:LZWState	file:
stack	libavcodec/srtenc.c	/^    char stack[SRT_STACK_SIZE];$/;"	m	struct:__anon139	file:
stack_index	libavutil/eval.c	/^    int stack_index;$/;"	m	struct:Parser	file:
stack_ptr	libavcodec/srtenc.c	/^    int stack_ptr;$/;"	m	struct:__anon139	file:
standard	libavdevice/bktr.c	/^    int standard;$/;"	m	struct:__anon312	file:
standard	libavdevice/v4l.c	/^    int standard;$/;"	m	struct:__anon316	file:
standard	libavdevice/v4l2.c	/^    char *standard;$/;"	m	struct:video_data	file:
standard	libavformat/avformat.h	/^    attribute_deprecated const char *standard; \/**< deprecated, use demuxer-specific options instead. *\/$/;"	m	struct:AVFormatParameters
start	ffmpeg.c	/^    int64_t       start;     \/* time when read started *\/$/;"	m	struct:AVInputStream	file:
start	ffmpeg/ffmpeg.c	/^    int64_t       start;     \/* time when read started *\/$/;"	m	struct:AVInputStream	file:
start	libavcodec/aac.h	/^    int start;$/;"	m	struct:__anon242
start	libavcodec/aacps.h	/^    int    start;$/;"	m	struct:__anon257
start	libavcodec/ass_split.h	/^    int   start;    \/**< start time of the dialog in centiseconds *\/$/;"	m	struct:__anon250
start	libavcodec/dcaenc.c	/^    int start[MAX_CHANNELS];$/;"	m	struct:__anon231	file:
start	libavcodec/flashsv2enc.c	/^    uint8_t start, len;$/;"	m	struct:Block	file:
start	libavcodec/rv34.h	/^    int start, end;        \/\/\/< start and end macroblocks of the slice$/;"	m	struct:SliceInfo
start	libavcodec/sbr.h	/^    int                start;$/;"	m	struct:__anon57
start	libavfilter/libmpcodecs/vf_tile.c	/^    int  start;$/;"	m	struct:vf_priv_s	file:
start	libavformat/avformat.h	/^    int64_t start, end;     \/\/\/< chapter start\/end time in time_base units$/;"	m	struct:AVChapter
start	libavformat/matroskadec.c	/^    uint64_t start;$/;"	m	struct:__anon363	file:
start	libavformat/matroskadec.c	/^    uint64_t start;$/;"	m	struct:__anon370	file:
start	libavformat/nsvdec.c	/^    int start;$/;"	m	struct:NSVStream	file:
start_children	ffserver.c	/^static void start_children(FFStream *feed)$/;"	f	file:
start_code	libavcodec/mjpegdec.h	/^    int start_code; \/* current start code *\/$/;"	m	struct:MJpegDecodeContext
start_column_loop	libavcodec/arm/jrevdct_arm.S	/^start_column_loop:$/;"	l
start_command_packet	libavformat/mmst.c	/^static void start_command_packet(MMSTContext *mmst, MMSCSPacketType packet_type)$/;"	f	file:
start_display_time	libavcodec/avcodec.h	/^    uint32_t start_display_time; \/* relative to packet pts, in ms *\/$/;"	m	struct:AVSubtitle
start_ebml_master	libavformat/matroskaenc.c	/^static ebml_master start_ebml_master(AVIOContext *pb, unsigned int elementid, uint64_t expectedsize)$/;"	f	file:
start_frame	libavcodec/avcodec.h	/^    int (*start_frame)(AVCodecContext *avctx, const uint8_t *buf, uint32_t buf_size);$/;"	m	struct:AVHWAccel
start_frame	libavcodec/avcodec.h	/^    int start_frame;$/;"	m	struct:RcOverride
start_frame	libavcodec/dxva2_h264.c	/^static int start_frame(AVCodecContext *avctx,$/;"	f	file:
start_frame	libavcodec/dxva2_mpeg2.c	/^static int start_frame(AVCodecContext *avctx,$/;"	f	file:
start_frame	libavcodec/dxva2_vc1.c	/^static int start_frame(AVCodecContext *avctx,$/;"	f	file:
start_frame	libavcodec/vaapi_h264.c	/^static int start_frame(AVCodecContext          *avctx,$/;"	f	file:
start_frame	libavfilter/avfilter.h	/^    void (*start_frame)(AVFilterLink *link, AVFilterBufferRef *picref);$/;"	m	struct:AVFilterPad
start_frame	libavfilter/vf_aspect.c	/^static void start_frame(AVFilterLink *link, AVFilterBufferRef *picref)$/;"	f	file:
start_frame	libavfilter/vf_crop.c	/^static void start_frame(AVFilterLink *link, AVFilterBufferRef *picref)$/;"	f	file:
start_frame	libavfilter/vf_fade.c	/^    unsigned int frame_index, start_frame, stop_frame;$/;"	m	struct:__anon11	file:
start_frame	libavfilter/vf_fieldorder.c	/^static void start_frame(AVFilterLink *inlink, AVFilterBufferRef *inpicref)$/;"	f	file:
start_frame	libavfilter/vf_fifo.c	/^static void start_frame(AVFilterLink *inlink, AVFilterBufferRef *picref)$/;"	f	file:
start_frame	libavfilter/vf_gradfun.c	/^static void start_frame(AVFilterLink *inlink, AVFilterBufferRef *inpicref)$/;"	f	file:
start_frame	libavfilter/vf_mp.c	/^static void start_frame(AVFilterLink *inlink, AVFilterBufferRef *picref)$/;"	f	file:
start_frame	libavfilter/vf_overlay.c	/^static void start_frame(AVFilterLink *inlink, AVFilterBufferRef *inpicref)$/;"	f	file:
start_frame	libavfilter/vf_pad.c	/^static void start_frame(AVFilterLink *inlink, AVFilterBufferRef *inpicref)$/;"	f	file:
start_frame	libavfilter/vf_pixdesctest.c	/^static void start_frame(AVFilterLink *inlink, AVFilterBufferRef *picref)$/;"	f	file:
start_frame	libavfilter/vf_scale.c	/^static void start_frame(AVFilterLink *link, AVFilterBufferRef *picref)$/;"	f	file:
start_frame	libavfilter/vf_select.c	/^static void start_frame(AVFilterLink *inlink, AVFilterBufferRef *picref)$/;"	f	file:
start_frame	libavfilter/vf_setpts.c	/^static void start_frame(AVFilterLink *inlink, AVFilterBufferRef *inpicref)$/;"	f	file:
start_frame	libavfilter/vf_settb.c	/^static void start_frame(AVFilterLink *inlink, AVFilterBufferRef *picref)$/;"	f	file:
start_frame	libavfilter/vf_slicify.c	/^static void start_frame(AVFilterLink *link, AVFilterBufferRef *picref)$/;"	f	file:
start_frame	libavfilter/vf_split.c	/^static void start_frame(AVFilterLink *inlink, AVFilterBufferRef *picref)$/;"	f	file:
start_frame	libavfilter/vf_transpose.c	/^static void start_frame(AVFilterLink *inlink, AVFilterBufferRef *picref)$/;"	f	file:
start_frame	libavfilter/vf_vflip.c	/^static void start_frame(AVFilterLink *link, AVFilterBufferRef *inpicref)$/;"	f	file:
start_frame	libavfilter/vf_yadif.c	/^static void start_frame(AVFilterLink *link, AVFilterBufferRef *picref)$/;"	f	file:
start_frame	libavfilter/vsink_nullsink.c	/^static void start_frame(AVFilterLink *link, AVFilterBufferRef *picref)$/;"	f	file:
start_frame_overlay	libavfilter/vf_overlay.c	/^static void start_frame_overlay(AVFilterLink *inlink, AVFilterBufferRef *inpicref)$/;"	f	file:
start_freq	libavcodec/ac3dec.h	/^    int start_freq[AC3_MAX_CHANNELS];       \/\/\/< start frequency bin                    (strtmant)$/;"	m	struct:__anon88
start_freq	libavcodec/ac3enc.h	/^    int start_freq[AC3_MAX_CHANNELS];       \/\/\/< start frequency bin                    (strtmant)$/;"	m	struct:AC3EncodeContext
start_jack	libavdevice/jack_audio.c	/^static int start_jack(AVFormatContext *context, AVFormatParameters *params)$/;"	f	file:
start_mb_y	libavcodec/mpegvideo.h	/^    int start_mb_y;            \/\/\/< start mb_y of this thread (so current thread should process start_mb_y <= row < end_mb_y)$/;"	m	struct:MpegEncContext
start_multicast	ffserver.c	/^static void start_multicast(void)$/;"	f	file:
start_mv_blocks_num	libavcodec/xvmc.h	/^    int             start_mv_blocks_num;$/;"	m	struct:xvmc_pix_fmt
start_pid	libavformat/mpegtsenc.c	/^    int start_pid;$/;"	m	struct:MpegTSWrite	file:
start_position	libavformat/mxfdec.c	/^    int64_t start_position;$/;"	m	struct:__anon440	file:
start_seq_no	libavformat/applehttp.c	/^    int start_seq_no;$/;"	m	struct:variant	file:
start_seq_no	libavformat/applehttpproto.c	/^    int start_seq_no;$/;"	m	struct:AppleHTTPContext	file:
start_slice	libavfilter/libmpcodecs/vf.h	/^    void (*start_slice)(struct vf_instance *vf,$/;"	m	struct:vf_instance
start_slice	libavfilter/libmpcodecs/vf_screenshot.c	/^static void start_slice(struct vf_instance *vf, mp_image_t *mpi)$/;"	f	file:
start_time	ffmpeg.c	/^static int64_t start_time = 0;$/;"	v	file:
start_time	ffmpeg/ffmpeg.c	/^static int64_t start_time = 0;$/;"	v	file:
start_time	ffplay.c	/^static int64_t start_time = AV_NOPTS_VALUE;$/;"	v	file:
start_time	ffserver.c	/^    int64_t start_time;            \/* In milliseconds - this wraps fairly often *\/$/;"	m	struct:HTTPContext	file:
start_time	libavdevice/dshow.h	/^    int64_t start_time;$/;"	m	struct:libAVFilter
start_time	libavformat/avformat.h	/^    int64_t start_time;$/;"	m	struct:AVFormatContext
start_time	libavformat/avformat.h	/^    int64_t start_time;$/;"	m	struct:AVStream
start_time	libavformat/dvenc.c	/^    time_t            start_time;    \/* recording start time *\/$/;"	m	struct:DVMuxContext	file:
start_time	libavformat/sdp.c	/^    int start_time;       \/**< session start time (NTP time, in seconds),$/;"	m	struct:sdp_session_level	file:
start_time_realtime	libavformat/avformat.h	/^    int64_t start_time_realtime;$/;"	m	struct:AVFormatContext
start_wait_request	ffserver.c	/^static void start_wait_request(HTTPContext *c, int is_rtsp)$/;"	f	file:
stat	libavformat/os_support.h	35;"	d
state	ffserver.c	/^    enum HTTPState state;$/;"	m	struct:HTTPContext	typeref:enum:HTTPContext::HTTPState	file:
state	libavcodec/aac_ac3_parser.h	/^    uint64_t state;$/;"	m	struct:AACAC3ParseContext
state	libavcodec/ansi.c	/^    } state;$/;"	m	struct:__anon173	typeref:enum:__anon173::__anon174	file:
state	libavcodec/dirac_parser.c	/^    int state;$/;"	m	struct:DiracParseContext	file:
state	libavcodec/ffv1.c	/^    uint8_t (*state)[CONTEXT_SIZE];$/;"	m	struct:PlaneContext	file:
state	libavcodec/g722.c	/^        struct G722Band state;$/;"	m	struct:__anon140::TrellisNode	typeref:struct:__anon140::TrellisNode::G722Band	file:
state	libavcodec/libopencore-amr.c	/^    void  *state;$/;"	m	struct:AMRWBContext	file:
state	libavcodec/libvo-amrwbenc.c	/^    void  *state;$/;"	m	struct:AMRWBContext	file:
state	libavcodec/mlp.h	/^    int32_t     state[MAX_FIR_ORDER];$/;"	m	struct:__anon77
state	libavcodec/nellymoserdec.c	/^    float           state[128];$/;"	m	struct:NellyMoserDecodeContext	file:
state	libavcodec/parser.h	/^    uint32_t state;             \/\/\/< contains the last few bytes in MSB order$/;"	m	struct:ParseContext
state	libavcodec/png.h	/^    int state;$/;"	m	struct:PNGDecContext
state	libavcodec/pthread.c	/^    } state;$/;"	m	struct:PerThreadContext	typeref:enum:PerThreadContext::__anon278	file:
state	libavcodec/snow.c	/^    uint8_t state[\/*7*2*\/ 7 + 512][32];$/;"	m	struct:SubBand	file:
state	libavcodec/vdpau.h	/^    int state; \/\/\/< Holds FF_VDPAU_STATE_* values.$/;"	m	struct:vdpau_render_state
state	libavdevice/dshow.h	/^    FILTER_STATE state;$/;"	m	struct:libAVFilter
state	libavfilter/libmpcodecs/vf_softpulldown.c	/^    int state;$/;"	m	struct:vf_priv_s	file:
state	libavformat/jvdec.c	/^    } state;$/;"	m	struct:__anon426	typeref:enum:__anon426::__anon427	file:
state	libavformat/mpegts.c	/^    enum MpegTSState state;$/;"	m	struct:PESContext	typeref:enum:PESContext::MpegTSState	file:
state	libavformat/nsvdec.c	/^    enum NSVStatus state;$/;"	m	struct:__anon345	typeref:enum:__anon345::NSVStatus	file:
state	libavformat/oggdec.h	/^    struct ogg_state *state;$/;"	m	struct:ogg	typeref:struct:ogg::ogg_state
state	libavformat/rtmpproto.c	/^    ClientState   state;                      \/\/\/< current state$/;"	m	struct:RTMPContext	file:
state	libavformat/rtsp.h	/^    enum RTSPClientState state;$/;"	m	struct:RTSPState	typeref:enum:RTSPState::RTSPClientState
state	libavutil/aes.c	/^    av_aes_block state[2];$/;"	m	struct:AVAES	file:
state	libavutil/lfg.h	/^    unsigned int state[64];$/;"	m	struct:__anon297
state	libavutil/rc4.h	/^    uint8_t state[256];$/;"	m	struct:AVRC4
state	libavutil/sha.c	/^    uint32_t state[8];    \/\/\/< current hash value$/;"	m	struct:AVSHA	file:
state	libavutil/tree.c	/^    int state;$/;"	m	struct:AVTreeNode	file:
state	tools/trasher.c	/^static uint32_t state;$/;"	v	file:
state64	libavcodec/parser.h	/^    uint64_t state64;           \/\/\/< contains the last 8 bytes in MSB order$/;"	m	struct:ParseContext
state_transition	libavcodec/ffv1.c	/^    uint8_t state_transition[256];$/;"	m	struct:FFV1Context	file:
static_fields	libavcodec/dca.c	/^    int static_fields;          \/\/\/< static fields present$/;"	m	struct:__anon93	file:
static_idx	libavfilter/libmpcodecs/vf.h	/^    int static_idx;$/;"	m	struct:vf_image_context_s
static_idx	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long static_idx;$/;"	m	struct:vf_priv_s	file:
static_images	libavfilter/libmpcodecs/vf.h	/^    mp_image_t* static_images[2];$/;"	m	struct:vf_image_context_s
static_payload_id	libavformat/rtpdec.h	/^    int static_payload_id; \/* 0 means no payload id is set. 0 is a valid$/;"	m	struct:RTPDynamicProtocolHandler_s
static_rl_table_store	libavcodec/msmpeg4.c	/^static uint8_t static_rl_table_store[NB_RL_TABLES][2][2*MAX_RUN + MAX_LEVEL + 3];$/;"	v	file:
statistics	libavformat/rtpdec.h	/^    RTPStatistics statistics; \/\/\/< Statistics for this stream (used by RTCP receiver reports)$/;"	m	struct:RTPDemuxContext
stats	libavcodec/huffyuv.c	/^    uint64_t stats[3][256];$/;"	m	struct:HYuvContext	file:
stats	libavcodec/libtheoraenc.c	/^    uint8_t    *stats;$/;"	m	struct:TheoraContext	file:
stats	libavcodec/libx264.c	/^    char *stats;$/;"	m	struct:X264Context	file:
stats	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct frame_stats stats[2];$/;"	m	struct:vf_priv_s	typeref:struct:vf_priv_s::frame_stats	file:
stats	libavfilter/libmpcodecs/vf_ivtc.c	/^static void stats(struct frameinfo *f)$/;"	f	file:
stats_file	libavcodec/ratecontrol.h	/^    FILE *stats_file;$/;"	m	struct:RateControlContext
stats_in	libavcodec/avcodec.h	/^    char *stats_in;$/;"	m	struct:AVCodecContext
stats_offset	libavcodec/libtheoraenc.c	/^    int         stats_offset;$/;"	m	struct:TheoraContext	file:
stats_out	libavcodec/avcodec.h	/^    char *stats_out;$/;"	m	struct:AVCodecContext
stats_size	libavcodec/libtheoraenc.c	/^    int         stats_size;$/;"	m	struct:TheoraContext	file:
status	libavcodec/adpcm.c	/^    ADPCMChannelStatus status[6];$/;"	m	struct:ADPCMContext	file:
status	libavfilter/libmpcodecs/vf_detc.c	/^static void status(int f, struct metrics *m)$/;"	f	file:
status_code	libavformat/rtsp.h	/^    enum RTSPStatusCode status_code; \/**< response code from server *\/$/;"	m	struct:RTSPMessageHeader	typeref:enum:RTSPMessageHeader::RTSPStatusCode
stc	libavcodec/cavs.h	/^    int stc;           \/\/\/< last start code$/;"	m	struct:__anon207
stdQPTable	libpostproc/postprocess_internal.h	/^    QP_STORE_T *stdQPTable;       \/\/\/< used to fix MPEG2 style qscale$/;"	m	struct:PPContext
std__TAG	libavformat/4xm.c	41;"	d	file:
stddev	tests/fate-run.sh	/^stddev(){$/;"	f
step	ffplay.c	/^static int step = 0;$/;"	v	file:
step	libavcodec/adpcm.c	/^    int step;$/;"	m	struct:ADPCMChannelStatus	file:
step	libavcodec/adpcm.c	/^    int step;$/;"	m	struct:TrellisNode	file:
step	libavfilter/libmpcodecs/vf_fixpts.c	/^    double step;$/;"	m	struct:vf_priv_s	file:
step	libavfilter/vf_lut.c	/^    int step;$/;"	m	struct:__anon23	file:
step_index	libavcodec/adpcm.c	/^    short int step_index;$/;"	m	struct:ADPCMChannelStatus	file:
step_minus1	libavutil/pixdesc.h	/^    uint16_t step_minus1  :3;$/;"	m	struct:AVComponentDescriptor
step_table	libavcodec/adpcm.c	/^static const int step_table[89] = {$/;"	v	file:
step_to_next_frame	ffplay.c	/^static void step_to_next_frame(void)$/;"	f	file:
steps_x	libavfilter/vf_unsharp.c	/^    int steps_x;                             \/\/\/< horizontal step count$/;"	m	struct:FilterParam	file:
steps_y	libavfilter/vf_unsharp.c	/^    int steps_y;                             \/\/\/< vertical step count$/;"	m	struct:FilterParam	file:
stepsize	libavcodec/j2k.h	/^    uint32_t stepsize; \/\/\/< quantization stepsize (* 2^13)$/;"	m	struct:__anon215
stereo	libavcodec/libmp3lame.c	/^    int stereo;$/;"	m	struct:Mp3AudioContext	file:
stereo	libavcodec/libspeexdec.c	/^    SpeexStereoState stereo;$/;"	m	struct:__anon228	file:
stereo	libavcodec/wavpack.c	/^    int stereo, stereo_in;$/;"	m	struct:WavpackFrameContext	file:
stereo_att	libavcodec/psymodel.c	/^    float stereo_att;$/;"	m	struct:FFPsyPreprocessContext	file:
stereo_buffer	libavformat/segafilm.c	/^    unsigned char *stereo_buffer;$/;"	m	struct:FilmDemuxContext	file:
stereo_buffer_size	libavformat/segafilm.c	/^    int stereo_buffer_size;$/;"	m	struct:FilmDemuxContext	file:
stereo_in	libavcodec/wavpack.c	/^    int stereo, stereo_in;$/;"	m	struct:WavpackFrameContext	file:
stereo_mode	libavcodec/aacenc.h	/^    int stereo_mode;$/;"	m	struct:AACEncOptions
stereo_mode	libavformat/matroskadec.c	/^    uint64_t stereo_mode;$/;"	m	struct:__anon357	file:
stereo_processing	libavcodec/aacps.c	/^static void stereo_processing(PSContext *ps, float (*l)[32][2], float (*r)[32][2], int is34)$/;"	f	file:
stereo_rematrixing	libavcodec/ac3.h	/^    int stereo_rematrixing;$/;"	m	struct:AC3EncOptions
stereo_to_mono	libavcodec/resample.c	/^static void stereo_to_mono(short *output, short *input, int n1)$/;"	f	file:
stl	libavcodec/alpha/asm.h	155;"	d
stl	libavcodec/alpha/asm.h	76;"	d
stop_flag	libavcodec/alsdec.c	/^    int stop_flag;$/;"	m	struct:__anon151	file:
stop_frame	libavfilter/vf_fade.c	/^    unsigned int frame_index, start_frame, stop_frame;$/;"	m	struct:__anon11	file:
stop_jack	libavdevice/jack_audio.c	/^static void stop_jack(JackData *self)$/;"	f	file:
stop_parse	libavformat/mpegts.c	/^    int stop_parse;$/;"	m	struct:MpegTSContext	file:
store_in_pool	libavfilter/avfilter.c	/^static void store_in_pool(AVFilterBufferRef *ref)$/;"	f	file:
store_mvs	libavcodec/cavsdec.c	/^static inline void store_mvs(AVSContext *h) {$/;"	f	file:
store_packet	libavformat/rtpdec_qcelp.c	/^static int store_packet(AVFormatContext *ctx, PayloadContext *data,$/;"	f	file:
store_prev_samples	libavcodec/alsdec.c	/^    int          *store_prev_samples;\/\/\/< if true, carryover samples have to be stored$/;"	m	struct:__anon153	file:
store_prev_samples	libavcodec/alsdec.c	/^    int *store_prev_samples;        \/\/\/< contains store_prev_samples flags for all channels$/;"	m	struct:__anon152	file:
store_slice	libavfilter/libmpcodecs/vf_spp.c	/^static void (*store_slice)(uint8_t *dst, int16_t *src, int dst_stride, int src_stride, int width, int height, int log2_scale)= store_slice_c;$/;"	v	file:
store_slice2_c	libavfilter/libmpcodecs/vf_fspp.c	/^static void store_slice2_c(uint8_t *dst, int16_t *src, int dst_stride, int src_stride, int width, int height, int log2_scale)$/;"	f	file:
store_slice2_mmx	libavfilter/libmpcodecs/vf_fspp.c	/^static void store_slice2_mmx(uint8_t *dst, int16_t *src, long dst_stride, long src_stride, long width, long height, long log2_scale)$/;"	f	file:
store_slice2_s	libavfilter/libmpcodecs/vf_fspp.c	174;"	d	file:
store_slice2_s	libavfilter/libmpcodecs/vf_fspp.c	402;"	d	file:
store_slice_c	libavfilter/libmpcodecs/vf_fspp.c	/^static void store_slice_c(uint8_t *dst, int16_t *src, int dst_stride, int src_stride, int width, int height, int log2_scale)$/;"	f	file:
store_slice_c	libavfilter/libmpcodecs/vf_spp.c	/^static void store_slice_c(uint8_t *dst, int16_t *src, int dst_stride, int src_stride, int width, int height, int log2_scale){$/;"	f	file:
store_slice_c	libavfilter/libmpcodecs/vf_uspp.c	/^static void store_slice_c(uint8_t *dst, int16_t *src, int dst_stride, int src_stride, int width, int height, int log2_scale){$/;"	f	file:
store_slice_mmx	libavfilter/libmpcodecs/vf_fspp.c	/^static void store_slice_mmx(uint8_t *dst, int16_t *src, long dst_stride, long src_stride, long width, long height, long log2_scale)$/;"	f	file:
store_slice_mmx	libavfilter/libmpcodecs/vf_spp.c	/^static void store_slice_mmx(uint8_t *dst, int16_t *src, int dst_stride, int src_stride, int width, int height, int log2_scale){$/;"	f	file:
store_slice_s	libavfilter/libmpcodecs/vf_fspp.c	173;"	d	file:
store_slice_s	libavfilter/libmpcodecs/vf_fspp.c	401;"	d	file:
store_slices	libavfilter/libmpcodecs/vf_screenshot.c	/^    int shot, store_slices;$/;"	m	struct:vf_priv_s	file:
store_table	libavcodec/huffyuv.c	/^static int store_table(HYuvContext *s, const uint8_t *len, uint8_t *buf){$/;"	f	file:
storeframe	libavcodec/libvpxenc.c	/^static int storeframe(AVCodecContext *avctx, struct FrameListData *cx_frame,$/;"	f	file:
stp	libavcodec/ppc/asm.S	/^#define stp  std$/;"	d
stp	libavcodec/ppc/asm.S	/^#define stp  stw$/;"	d
stps_count	libavformat/isom.h	/^    unsigned int stps_count;$/;"	m	struct:MOVStreamContext
stps_data	libavformat/isom.h	/^    unsigned *stps_data;  \/\/\/< partial sync sample for mpeg-2 open gop$/;"	m	struct:MOVStreamContext
stpu	libavcodec/ppc/asm.S	/^#define stpu stdu$/;"	d
stpu	libavcodec/ppc/asm.S	/^#define stpu stwu$/;"	d
stq	libavcodec/alpha/asm.h	154;"	d
stq	libavcodec/alpha/asm.h	69;"	d
str	libavformat/avlanguage.c	/^    const char str[4];$/;"	m	struct:LangEntry	file:
str	libavformat/img2.c	/^    const char *str;$/;"	m	struct:__anon390	file:
str	libavformat/matroska.h	/^    char str[20];$/;"	m	struct:CodecTags
str	libavformat/matroska.h	/^    char str[32];$/;"	m	struct:CodecMime
str	libavformat/nut.h	/^    char str[9];$/;"	m	struct:__anon495
str	libavformat/rtpdec_mpeg4.c	/^    const char *str;$/;"	m	struct:__anon463	file:
str	libavutil/opt.h	/^        const char *str;$/;"	m	union:AVOption::__anon304
str_arg	cmdutils.h	/^        char **str_arg;$/;"	m	union:__anon290::__anon291
str_arg	ffmpeg/cmdutils.h	/^        char **str_arg;$/;"	m	union:__anon288::__anon289
str_probe	libavformat/psxstr.c	/^static int str_probe(AVProbeData *p)$/;"	f	file:
str_read_close	libavformat/psxstr.c	/^static int str_read_close(AVFormatContext *s)$/;"	f	file:
str_read_header	libavformat/psxstr.c	/^static int str_read_header(AVFormatContext *s,$/;"	f	file:
str_read_packet	libavformat/psxstr.c	/^static int str_read_packet(AVFormatContext *s,$/;"	f	file:
strcat	libavutil/internal.h	145;"	d
strcat	libavutil/internal.h	146;"	d
strcat	tools/pktdumper.c	31;"	d	file:
stream	ffserver.c	/^    struct FFStream *stream;$/;"	m	struct:HTTPContext	typeref:struct:HTTPContext::FFStream	file:
stream	libavcodec/vb.c	/^    const uint8_t *stream;$/;"	m	struct:VBDecContext	file:
stream	libavformat/matroskadec.c	/^    AVStream *stream;$/;"	m	struct:__anon361	file:
stream	libavformat/matroskadec.c	/^    AVStream *stream;$/;"	m	struct:__anon362	file:
stream	libavformat/mpegts.c	/^    AVFormatContext *stream;$/;"	m	struct:MpegTSContext	file:
stream	libavformat/mpegts.c	/^    AVFormatContext *stream;$/;"	m	struct:PESContext	file:
stream	libavformat/nut.h	/^    StreamContext *stream;$/;"	m	struct:__anon494
stream	libavformat/rtmpproto.c	/^    URLContext*   stream;                     \/\/\/< TCP stream used in interactions with RTMP server$/;"	m	struct:RTMPContext	file:
stream	libavformat/segafilm.c	/^  int stream;$/;"	m	struct:__anon328	file:
stream	libavformat/smacker.c	/^    int stream;$/;"	m	struct:SmackerFrame	file:
stream2_guid	libavformat/wtvdec.c	/^static const ff_asf_guid stream2_guid =$/;"	v	file:
stream_bitrate_guid	libavformat/asfdec.c	/^static const ff_asf_guid stream_bitrate_guid = { \/* (http:\/\/get.to\/sdp) *\/$/;"	v	file:
stream_bitrates	libavformat/asfdec.c	/^    uint32_t stream_bitrates[128];       \/\/\/< max number of streams, bitrate for each (for streaming)$/;"	m	struct:__anon332	file:
stream_close	ffplay.c	/^static void stream_close(VideoState *is)$/;"	f	file:
stream_codec_tag	libavcodec/avcodec.h	/^    unsigned int stream_codec_tag;$/;"	m	struct:AVCodecContext
stream_codec_tag	libavcodec/mpegvideo.h	/^    int stream_codec_tag;      \/\/\/< internal stream_codec_tag upper case converted from avctx stream_codec_tag$/;"	m	struct:MpegEncContext
stream_component_close	ffplay.c	/^static void stream_component_close(VideoState *is, int stream_index)$/;"	f	file:
stream_component_open	ffplay.c	/^static int stream_component_open(VideoState *is, int stream_index)$/;"	f	file:
stream_copy	libavformat/avformat.h	/^    int stream_copy; \/**< If set, just copy stream. *\/$/;"	m	struct:AVStream
stream_cycle_channel	ffplay.c	/^static void stream_cycle_channel(VideoState *is, int codec_type)$/;"	f	file:
stream_end	libavcodec/interplayvideo.c	/^    const unsigned char *stream_end;$/;"	m	struct:IpvideoContext	file:
stream_id	libavformat/nut.h	/^    uint8_t  stream_id;$/;"	m	struct:__anon491
stream_id	libavformat/smacker.c	/^    int stream_id[7];$/;"	m	struct:SmackerContext	file:
stream_identifier	libavformat/avformat.h	/^    int stream_identifier;$/;"	m	struct:AVStream
stream_index	ffmpeg.c	/^    int stream_index;$/;"	m	struct:AVStreamMap	file:
stream_index	ffmpeg/ffmpeg.c	/^    int stream_index;$/;"	m	struct:AVStreamMap	file:
stream_index	libavcodec/avcodec.h	/^    int   stream_index;$/;"	m	struct:AVPacket
stream_index	libavdevice/dshow.h	/^    int stream_index;$/;"	m	struct:libAVFilter
stream_index	libavfilter/vsrc_movie.c	/^    int stream_index;$/;"	m	struct:__anon38	file:
stream_index	libavformat/4xm.c	/^    int stream_index;$/;"	m	struct:AudioTrack	file:
stream_index	libavformat/asfdec.c	/^    int stream_index;$/;"	m	struct:__anon332	file:
stream_index	libavformat/avformat.h	/^    unsigned int   *stream_index;$/;"	m	struct:AVProgram
stream_index	libavformat/avidec.c	/^    int stream_index;$/;"	m	struct:__anon451	file:
stream_index	libavformat/oggenc.c	/^    int stream_index;$/;"	m	struct:__anon379	file:
stream_index	libavformat/rtsp.h	/^    int stream_index;$/;"	m	struct:RTSPStream
stream_index	libavformat/sierravmd.c	/^  int stream_index;$/;"	m	struct:__anon349	file:
stream_index	libavformat/tmv.c	/^    unsigned stream_index;$/;"	m	struct:TMVContext	file:
stream_language_index	libavformat/asf.h	/^    uint16_t stream_language_index;$/;"	m	struct:__anon399
stream_languages	libavformat/asfdec.c	/^    char stream_languages[128][6];       \/\/\/< max number of streams, language for each (RFC1766, e.g. en-US)$/;"	m	struct:__anon332	file:
stream_maps	ffmpeg.c	/^static AVStreamMap *stream_maps = NULL;$/;"	v	file:
stream_maps	ffmpeg/ffmpeg.c	/^static AVStreamMap *stream_maps = NULL;$/;"	v	file:
stream_num	libavformat/mms.h	/^    int stream_num;                      \/\/\/< stream numbers.$/;"	m	struct:__anon455
stream_offset	libavformat/applehttp.c	/^    int stream_offset;$/;"	m	struct:variant	file:
stream_open	ffplay.c	/^static VideoState *stream_open(const char *filename, AVInputFormat *iformat)$/;"	f	file:
stream_ptr	libavcodec/interplayvideo.c	/^    const unsigned char *stream_ptr;$/;"	m	struct:IpvideoContext	file:
stream_revision	libavcodec/cavs.h	/^    int stream_revision; \/\/\/<0 for samples from 2006, 1 for rm52j encoder$/;"	m	struct:__anon207
stream_seek	ffplay.c	/^static void stream_seek(VideoState *is, int64_t pos, int64_t rel, int seek_by_bytes)$/;"	f	file:
stream_states	libavformat/seek.h	/^    AVParserStreamState *stream_states;     \/\/\/< states of individual streams (array)$/;"	m	struct:AVParserState
stream_toggle_pause	ffplay.c	/^static void stream_toggle_pause(VideoState *is)$/;"	f	file:
stream_type	ffserver.c	/^    enum StreamType stream_type;$/;"	m	struct:FFStream	typeref:enum:FFStream::StreamType	file:
stream_type	libavcodec/mlp_parser.h	/^    int stream_type;            \/\/\/< 0xBB for MLP, 0xBA for TrueHD$/;"	m	struct:MLPHeaderInfo
stream_type	libavformat/mpegts.c	/^    int stream_type;$/;"	m	struct:PESContext	file:
stream_type	libavformat/mpegts.c	/^    uint32_t stream_type;$/;"	m	struct:__anon472	file:
streamid_map	ffmpeg.c	/^static int *streamid_map = NULL;$/;"	v	file:
streamid_map	ffmpeg/ffmpeg.c	/^static int *streamid_map = NULL;$/;"	v	file:
streams	ffserver.c	/^    AVStream *streams[MAX_STREAMS];$/;"	m	struct:FFStream	file:
streams	libavformat/asfdec.c	/^    ASFStream streams[128];              \/\/\/< it's max number and it's not that big$/;"	m	struct:__anon332	file:
streams	libavformat/asfenc.c	/^    ASFStream streams[128];              \/\/\/< it's max number and it's not that big$/;"	m	struct:__anon470	file:
streams	libavformat/avformat.h	/^    AVStream **streams;$/;"	m	struct:AVFormatContext
streams	libavformat/avisynth.c	/^  AVISynthStream *streams;$/;"	m	struct:__anon475	file:
streams	libavformat/mms.h	/^    MMSStream *streams;$/;"	m	struct:__anon455
streams	libavformat/oggdec.h	/^    struct ogg_stream *streams;$/;"	m	struct:ogg	typeref:struct:ogg::ogg_stream
streams	libavformat/oggdec.h	/^    struct ogg_stream streams[1];$/;"	m	struct:ogg_state	typeref:struct:ogg_state::ogg_stream
streams	libavformat/rdt.c	/^    AVStream **streams;$/;"	m	struct:RDTDemuxContext	file:
streams	libavformat/rmenc.c	/^    StreamInfo streams[2];$/;"	m	struct:__anon383	file:
streamstate	libavformat/rtpdec_mpeg4.c	/^        int streamstate;$/;"	m	struct:PayloadContext::AUHeaders	file:
streamtype	libavformat/rtpdec_mpeg4.c	/^    int streamtype;$/;"	m	struct:PayloadContext	file:
strength	libavfilter/libmpcodecs/vf_noise.c	/^        int strength;$/;"	m	struct:FilterParam	file:
strength	libavfilter/libmpcodecs/vf_ow.c	/^    float strength[2];$/;"	m	struct:vf_priv_s	file:
strength	libavfilter/libmpcodecs/vf_sab.c	/^    float strength;$/;"	m	struct:FilterParam	file:
strength	libavfilter/libmpcodecs/vf_smartblur.c	/^    float strength;$/;"	m	struct:FilterParam	file:
strict_breaks	libavfilter/libmpcodecs/pullup.h	/^    int strict_breaks;$/;"	m	struct:pullup_context
strict_pairs	libavfilter/libmpcodecs/pullup.h	/^    int strict_pairs;$/;"	m	struct:pullup_context
strict_std_compliance	libavcodec/avcodec.h	/^    int strict_std_compliance;$/;"	m	struct:AVCodecContext
strict_std_compliance	libavcodec/mpegvideo.h	/^    int strict_std_compliance; \/\/\/< strictly follow the std (MPEG4, ...)$/;"	m	struct:MpegEncContext
stride	libavcodec/h264.c	447;"	d	file:
stride	libavcodec/h264idct_template.c	242;"	d	file:
stride	libavcodec/h264idct_template.c	273;"	d	file:
stride	libavcodec/interplayvideo.c	/^    int stride;$/;"	m	struct:IpvideoContext	file:
stride	libavcodec/mace.c	/^    const int16_t *tab1; const int16_t *tab2; int stride;$/;"	m	struct:__anon76	file:
stride	libavcodec/mpegvideo.h	/^    int stride;$/;"	m	struct:MotionEstContext
stride	libavcodec/snow.c	/^    int stride;$/;"	m	struct:SubBand	file:
stride	libavcodec/svq3.c	141;"	d	file:
stride	libavcodec/svq3.c	171;"	d	file:
stride	libavcodec/vp56.h	/^    int stride[4];  \/* stride for each plan *\/$/;"	m	struct:vp56_context
stride	libavfilter/libmpcodecs/mp_image.h	/^    int stride[MP_MAX_PLANES];$/;"	m	struct:mp_image
stride	libavfilter/libmpcodecs/pullup.h	/^    int *bpp, *w, *h, *stride, *background;$/;"	m	struct:pullup_context
stride	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long w, h, cw, ch, stride, chroma_stride, nplanes;$/;"	m	struct:vf_priv_s	file:
stride	libavfilter/libmpcodecs/vf_ow.c	/^    int stride;$/;"	m	struct:vf_priv_s	file:
stride	libavfilter/libmpcodecs/vf_screenshot.c	/^    int dw, dh, stride;$/;"	m	struct:vf_priv_s	file:
stride	libpostproc/postprocess_internal.h	/^    int stride;   \/\/\/<size of some buffers (needed to realloc them if needed)$/;"	m	struct:PPContext
stride_line	libavcodec/snow.c	/^    int stride_line; \/\/\/< Stride measured in lines, not pixels.$/;"	m	struct:SubBand	file:
stridefactor	libavfilter/libmpcodecs/vf_fil.c	/^    int stridefactor;$/;"	m	struct:vf_priv_s	file:
string	libavformat/matroskadec.c	/^    char *string;$/;"	m	struct:__anon366	file:
string	libavutil/opt.c	/^    char *string;$/;"	m	struct:TestContext	file:
string_is_ascii	libavformat/mp3enc.c	/^static int string_is_ascii(const uint8_t *str)$/;"	f	file:
string_table	libavcodec/svq1dec.c	/^static const uint8_t string_table[256] = {$/;"	v	file:
stripdata	libavcodec/tiff.c	/^    const uint8_t* stripdata;$/;"	m	struct:TiffContext	file:
stripoff	libavcodec/tiff.c	/^    int stripsize, stripoff;$/;"	m	struct:TiffContext	file:
strips	libavcodec/cinepak.c	/^    cvid_strip strips[MAX_STRIPS];$/;"	m	struct:CinepakContext	file:
strips	libavcodec/tiff.c	/^    int strips, rps, sstype;$/;"	m	struct:TiffContext	file:
strips	libavcodec/tiffenc.c	/^    int strips;                         \/\/\/< number of strips$/;"	m	struct:TiffEncoderContext	file:
stripsize	libavcodec/tiff.c	/^    int stripsize, stripoff;$/;"	m	struct:TiffContext	file:
stripsizes	libavcodec/tiff.c	/^    const uint8_t* stripsizes;$/;"	m	struct:TiffContext	file:
strk_SIZE	libavformat/4xm.c	54;"	d	file:
strk_TAG	libavformat/4xm.c	44;"	d	file:
strmatch	libavutil/eval.c	/^static int strmatch(const char *s, const char *prefix)$/;"	f	file:
strncpy	libavfilter/libmpcodecs/mp_image.h	36;"	d
strncpy	libavutil/internal.h	147;"	d
strncpy	libavutil/internal.h	148;"	d
struc	libavcodec/x86/fft_mmx.asm	/^struc FFTContext$/;"	l
structural_components_count	libavformat/mxfdec.c	/^    int structural_components_count;$/;"	m	struct:__anon441	file:
structural_components_refs	libavformat/mxfdec.c	/^    UID *structural_components_refs;$/;"	m	struct:__anon441	file:
stsc_count	libavformat/isom.h	/^    unsigned int stsc_count;$/;"	m	struct:MOVStreamContext
stsc_data	libavformat/isom.h	/^    MOVStsc *stsc_data;$/;"	m	struct:MOVStreamContext
stsd_id	libavformat/isom.h	/^    unsigned stsd_id;$/;"	m	struct:__anon468
stsd_id	libavformat/isom.h	/^    unsigned stsd_id;$/;"	m	struct:__anon469
stts_count	libavformat/isom.h	/^    unsigned int stts_count;$/;"	m	struct:MOVStreamContext
stts_data	libavformat/isom.h	/^    MOVStts *stts_data;$/;"	m	struct:MOVStreamContext
style	libavcodec/ass_split.h	/^    char *style;    \/**< name of the ASSStyle to use with this dialog *\/$/;"	m	struct:__anon250
style	libavcodec/ass_split.h	/^    void (*style)(void *priv, char style, int close);$/;"	m	struct:__anon252
styles	libavcodec/ass_split.h	/^    ASSStyle     *styles;        \/**< array of split out styles *\/$/;"	m	struct:__anon251
styles_count	libavcodec/ass_split.h	/^    int           styles_count;  \/**< number of ASSStyle in the styles array *\/$/;"	m	struct:__anon251
sub	ffplay.c	/^    AVSubtitle sub;$/;"	m	struct:SubPicture	file:
sub	libavcodec/twinvq.c	/^    uint8_t         sub;      \/\/\/< Number subblocks in each frame$/;"	m	struct:FrameMode	file:
sub	libavformat/matroskadec.c	/^    EbmlList sub;$/;"	m	struct:__anon366	file:
subCels	libavcodec/roqvideoenc.c	/^    SubcelEvaluation subCels[4];$/;"	m	struct:__anon73	file:
subCels	libavcodec/roqvideoenc.c	/^    int subCels[4];$/;"	m	struct:__anon72	file:
sub_buffer	libavformat/avidec.c	/^    uint8_t *sub_buffer;$/;"	m	struct:AVIStream	file:
sub_ctx	libavformat/avidec.c	/^    AVFormatContext *sub_ctx;$/;"	m	struct:AVIStream	file:
sub_descriptors_count	libavformat/mxfdec.c	/^    int sub_descriptors_count;$/;"	m	struct:__anon443	file:
sub_descriptors_refs	libavformat/mxfdec.c	/^    UID *sub_descriptors_refs;$/;"	m	struct:__anon443	file:
sub_flags	libavcodec/mpegvideo.h	/^    int sub_flags;$/;"	m	struct:MotionEstContext
sub_hfyu_median_prediction	libavcodec/dsputil.h	/^    void (*sub_hfyu_median_prediction)(uint8_t *dst, const uint8_t *src1, const uint8_t *src2, int w, int *left, int *left_top);$/;"	m	struct:DSPContext
sub_hfyu_median_prediction_c	libavcodec/dsputil.c	/^static void sub_hfyu_median_prediction_c(uint8_t *dst, const uint8_t *src1, const uint8_t *src2, int w, int *left, int *left_top){$/;"	f	file:
sub_hfyu_median_prediction_mmx2	libavcodec/x86/dsputilenc_mmx.c	/^static void sub_hfyu_median_prediction_mmx2(uint8_t *dst, const uint8_t *src1, const uint8_t *src2, int w, int *left, int *left_top){$/;"	f	file:
sub_id	libavcodec/avcodec.h	/^    int sub_id;$/;"	m	struct:AVCodecContext
sub_left_prediction	libavcodec/huffyuv.c	/^static inline int sub_left_prediction(HYuvContext *s, uint8_t *dst, uint8_t *src, int w, int left){$/;"	f	file:
sub_left_prediction_bgr32	libavcodec/huffyuv.c	/^static inline void sub_left_prediction_bgr32(HYuvContext *s, uint8_t *dst, uint8_t *src, int w, int *red, int *green, int *blue){$/;"	f	file:
sub_motion_search	libavcodec/mpegvideo.h	/^    int (*sub_motion_search)(struct MpegEncContext * s,$/;"	m	struct:MotionEstContext
sub_opts	cmdutils.c	/^AVDictionary *format_opts, *video_opts, *audio_opts, *sub_opts;$/;"	v
sub_opts	ffmpeg/cmdutils.c	/^AVDictionary *format_opts, *video_opts, *audio_opts, *sub_opts;$/;"	v
sub_packet	libavcodec/qdm2.c	/^    int sub_packet;$/;"	m	struct:__anon200	file:
sub_packet	libavcodec/qdm2.c	/^    int16_t sub_packet;$/;"	m	struct:__anon198	file:
sub_packet_cnt	libavformat/matroskadec.c	/^    int      sub_packet_cnt;$/;"	m	struct:__anon358	file:
sub_packet_cnt	libavformat/rmdec.c	/^    int sub_packet_cnt; \/\/ Subpacket counter, used while reading$/;"	m	struct:RMStream	file:
sub_packet_h	libavformat/matroskadec.c	/^    int      sub_packet_h;$/;"	m	struct:__anon358	file:
sub_packet_h	libavformat/rmdec.c	/^    int sub_packet_size, sub_packet_h, coded_framesize; \/\/\/< Descrambling parameters from container$/;"	m	struct:RMStream	file:
sub_packet_lengths	libavformat/rmdec.c	/^    int sub_packet_lengths[16]; \/\/\/ Length of each subpacket$/;"	m	struct:RMStream	file:
sub_packet_list_A	libavcodec/qdm2.c	/^    QDM2SubPNode sub_packet_list_A[16]; \/\/\/< list of all packets$/;"	m	struct:__anon200	file:
sub_packet_list_B	libavcodec/qdm2.c	/^    QDM2SubPNode sub_packet_list_B[16]; \/\/\/< FFT packets B are on list$/;"	m	struct:__anon200	file:
sub_packet_list_C	libavcodec/qdm2.c	/^    QDM2SubPNode sub_packet_list_C[16]; \/\/\/< packets with errors?$/;"	m	struct:__anon200	file:
sub_packet_list_D	libavcodec/qdm2.c	/^    QDM2SubPNode sub_packet_list_D[16]; \/\/\/< DCT packets$/;"	m	struct:__anon200	file:
sub_packet_size	libavformat/matroskadec.c	/^    int      sub_packet_size;$/;"	m	struct:__anon358	file:
sub_packet_size	libavformat/rmdec.c	/^    int sub_packet_size, sub_packet_h, coded_framesize; \/\/\/< Descrambling parameters from container$/;"	m	struct:RMStream	file:
sub_packets	libavcodec/qdm2.c	/^    QDM2SubPacket sub_packets[16];      \/\/\/< the packets themselves$/;"	m	struct:__anon200	file:
sub_packets_B	libavcodec/qdm2.c	/^    int sub_packets_B;                  \/\/\/< number of packets on 'B' list$/;"	m	struct:__anon200	file:
sub_penalty_factor	libavcodec/mpegvideo.h	/^    int sub_penalty_factor;$/;"	m	struct:MotionEstContext
sub_pkt	libavformat/avidec.c	/^    AVPacket sub_pkt;$/;"	m	struct:AVIStream	file:
sub_png_paeth_prediction	libavcodec/pngenc.c	/^static void sub_png_paeth_prediction(uint8_t *dst, uint8_t *src, uint8_t *top, int w, int bpp)$/;"	f	file:
sub_sampling	libavcodec/qdm2.c	/^    int sub_sampling;        \/\/\/< subsampling: 0=25%, 1=50%, 2=100% *\/$/;"	m	struct:__anon200	file:
sub_st	libavformat/mpegts.c	/^    AVStream *sub_st; \/**< stream for the embedded AC3 stream in HDMV TrueHD *\/$/;"	m	struct:PESContext	file:
sub_version	libavcodec/vp56.h	/^    int sub_version;$/;"	m	struct:vp56_context
subband	libavcodec/dcaenc.c	/^    int32_t subband[PCM_SAMPLES][MAX_CHANNELS][DCA_SUBBANDS_32]; \/* [sample][channel][subband] *\/$/;"	m	struct:__anon231	file:
subbandTab	libavcodec/atrac3data.h	/^static const uint16_t subbandTab[33] = {$/;"	v
subband_activity	libavcodec/dca.c	/^    int subband_activity[DCA_PRIM_CHANNELS_MAX];    \/\/\/< subband activity count$/;"	m	struct:__anon93	file:
subband_samples_hist	libavcodec/dca.c	/^    float subband_samples_hist[DCA_PRIM_CHANNELS_MAX][DCA_SUBBANDS][4];$/;"	m	struct:__anon93	file:
subbands	libavcodec/cook.c	/^    int                 subbands;$/;"	m	struct:__anon230	file:
subblock_gain	libavcodec/mpegaudiodec.c	/^    int subblock_gain[3];$/;"	m	struct:GranuleDef	file:
subclass	libavcodec/vorbis_enc_data.h	/^    int subclass;$/;"	m	struct:__anon274
subclass	libavcodec/vorbisenc.c	/^    int subclass;$/;"	m	struct:__anon189	file:
subclass_books	libavcodec/vorbisdec.c	/^            int16_t       subclass_books[16][8];$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor1_s	file:
subframe	libavcodec/amrnbdata.h	/^    AMRNBSubframe subframe[4]; \/\/\/< unpacked data for each subframe$/;"	m	struct:__anon284
subframe	libavcodec/amrwbdata.h	/^    AMRWBSubFrame subframe[4];             \/\/\/< data for subframes$/;"	m	struct:__anon111
subframe_count	libavcodec/sipr.c	/^    uint8_t subframe_count;$/;"	m	struct:__anon112	file:
subframe_count_exact	libavcodec/flacenc.c	/^static int subframe_count_exact(FlacEncodeContext *s, FlacSubframe *sub,$/;"	f	file:
subframe_len	libavcodec/wmaprodec.c	/^    int16_t          subframe_len;                  \/\/\/< current subframe length$/;"	m	struct:WMAProDecodeCtx	file:
subframe_len	libavcodec/wmaprodec.c	/^    uint16_t subframe_len[MAX_SUBFRAMES];             \/\/\/< subframe length in samples$/;"	m	struct:__anon82	file:
subframe_len_bits	libavcodec/wmaprodec.c	/^    uint8_t          subframe_len_bits;             \/\/\/< number of bits used for the subframe length$/;"	m	struct:WMAProDecodeCtx	file:
subframe_offset	libavcodec/wmaprodec.c	/^    int              subframe_offset;               \/\/\/< subframe offset in the bit reservoir$/;"	m	struct:WMAProDecodeCtx	file:
subframe_offset	libavcodec/wmaprodec.c	/^    uint16_t subframe_offset[MAX_SUBFRAMES];          \/\/\/< subframe positions in the current frame$/;"	m	struct:__anon82	file:
subframes	libavcodec/dca.c	/^    int subframes;              \/\/\/< number of subframes$/;"	m	struct:__anon93	file:
subframes	libavcodec/flacenc.c	/^    FlacSubframe subframes[FLAC_MAX_CHANNELS];$/;"	m	struct:FlacFrame	file:
submap_floor	libavcodec/vorbisdec.c	/^    uint8_t       submap_floor[16];$/;"	m	struct:__anon261	file:
submap_residue	libavcodec/vorbisdec.c	/^    uint8_t       submap_residue[16];$/;"	m	struct:__anon261	file:
submaps	libavcodec/vorbisdec.c	/^    uint8_t       submaps;$/;"	m	struct:__anon261	file:
submaps	libavcodec/vorbisenc.c	/^    int submaps;$/;"	m	struct:__anon192	file:
submit_packet	libavcodec/pthread.c	/^static int submit_packet(PerThreadContext *p, AVPacket *avpkt)$/;"	f	file:
submit_stats	libavcodec/libtheoraenc.c	/^static int submit_stats(AVCodecContext *avctx)$/;"	f	file:
subpacket	libavcodec/cook.c	/^    COOKSubpacket       subpacket[MAX_SUBPACKETS];$/;"	m	struct:cook	file:
subpel_filters	libavcodec/vp8dsp.c	/^static const uint8_t subpel_filters[7][6] = {$/;"	v	file:
subpel_idx	libavcodec/vp8.c	/^static const uint8_t subpel_idx[3][8] = {$/;"	v	file:
subpkts_per_block	libavformat/rtpdec_qdm2.c	/^    int subpkts_per_block;     \/\/\/< max. nr. of subpackets to add per output buffer$/;"	m	struct:PayloadContext	file:
subpq	ffplay.c	/^    SubPicture subpq[SUBPICTURE_QUEUE_SIZE];$/;"	m	struct:VideoState	file:
subpq_cond	ffplay.c	/^    SDL_cond *subpq_cond;$/;"	m	struct:VideoState	file:
subpq_mutex	ffplay.c	/^    SDL_mutex *subpq_mutex;$/;"	m	struct:VideoState	file:
subpq_rindex	ffplay.c	/^    int subpq_size, subpq_rindex, subpq_windex;$/;"	m	struct:VideoState	file:
subpq_size	ffplay.c	/^    int subpq_size, subpq_rindex, subpq_windex;$/;"	m	struct:VideoState	file:
subpq_windex	ffplay.c	/^    int subpq_size, subpq_rindex, subpq_windex;$/;"	m	struct:VideoState	file:
subsampling	libavcodec/tiffenc.c	/^    uint16_t subsampling[2];            \/\/\/< YUV subsampling factors$/;"	m	struct:TiffEncoderContext	file:
subshift	libavutil/aes.c	/^static void subshift(av_aes_block s0[2], int s, const uint8_t *box){$/;"	f	file:
substream	libavcodec/mlpdec.c	/^    SubStream   substream[MAX_SUBSTREAMS];$/;"	m	struct:MLPDecodeContext	file:
substreamid	libavcodec/ac3.h	/^    int substreamid;                        \/\/\/< substream identification$/;"	m	struct:__anon170
substreamid	libavcodec/ac3dec.h	/^    int substreamid;                        \/\/\/< substream identification$/;"	m	struct:__anon88
subsubframes	libavcodec/dca.c	/^    int subsubframes[DCA_SUBFRAMES_MAX];           \/\/\/< number of subsubframes$/;"	m	struct:__anon93	file:
subtitle_bitstream_filters	ffmpeg.c	/^static AVBitStreamFilterContext *subtitle_bitstream_filters=NULL;$/;"	v	file:
subtitle_bitstream_filters	ffmpeg/ffmpeg.c	/^static AVBitStreamFilterContext *subtitle_bitstream_filters=NULL;$/;"	v	file:
subtitle_codec	libavformat/avformat.h	/^    enum CodecID subtitle_codec; \/**< default subtitle codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::CodecID
subtitle_codec_id	libavformat/avformat.h	/^    enum CodecID subtitle_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::CodecID
subtitle_codec_name	ffmpeg.c	/^static char *subtitle_codec_name = NULL;$/;"	v	file:
subtitle_codec_name	ffmpeg/ffmpeg.c	/^static char *subtitle_codec_name = NULL;$/;"	v	file:
subtitle_codec_tag	ffmpeg.c	/^static unsigned int subtitle_codec_tag = 0;$/;"	v	file:
subtitle_codec_tag	ffmpeg/ffmpeg.c	/^static unsigned int subtitle_codec_tag = 0;$/;"	v	file:
subtitle_disable	ffmpeg.c	/^static int subtitle_disable = 0;$/;"	v	file:
subtitle_disable	ffmpeg/ffmpeg.c	/^static int subtitle_disable = 0;$/;"	v	file:
subtitle_header	libavcodec/avcodec.h	/^    uint8_t *subtitle_header;$/;"	m	struct:AVCodecContext
subtitle_header_size	libavcodec/avcodec.h	/^    int subtitle_header_size;$/;"	m	struct:AVCodecContext
subtitle_language	ffmpeg.c	/^static char *subtitle_language = NULL;$/;"	v	file:
subtitle_language	ffmpeg/ffmpeg.c	/^static char *subtitle_language = NULL;$/;"	v	file:
subtitle_st	ffplay.c	/^    AVStream *subtitle_st;$/;"	m	struct:VideoState	file:
subtitle_stream	ffplay.c	/^    int subtitle_stream;$/;"	m	struct:VideoState	file:
subtitle_stream_changed	ffplay.c	/^    int subtitle_stream_changed;$/;"	m	struct:VideoState	file:
subtitle_stream_copy	ffmpeg.c	/^static int subtitle_stream_copy = 0;$/;"	v	file:
subtitle_stream_copy	ffmpeg/ffmpeg.c	/^static int subtitle_stream_copy = 0;$/;"	v	file:
subtitle_thread	ffplay.c	/^static int subtitle_thread(void *arg)$/;"	f	file:
subtitle_tid	ffplay.c	/^    SDL_Thread *subtitle_tid;$/;"	m	struct:VideoState	file:
subtitleq	ffplay.c	/^    PacketQueue subtitleq;$/;"	m	struct:VideoState	file:
subwoofer_cutoffs	libavcodec/wmaprodec.c	/^    int16_t          subwoofer_cutoffs[WMAPRO_BLOCK_SIZES]; \/\/\/< subwoofer cutoff values$/;"	m	struct:WMAProDecodeCtx	file:
suffix	libavcodec/lzw.c	/^    uint8_t suffix[LZW_SIZTABLE];$/;"	m	struct:LZWState	file:
suffix	libavcodec/lzwenc.c	/^    uint8_t suffix;         \/\/\/< Last character in code block$/;"	m	struct:Code	file:
sum	libavcodec/loco.c	/^    int sum, count; \/* sum and count for getting rice parameter *\/$/;"	m	struct:RICEContext	file:
sum	libavfilter/libmpcodecs/vf_divtc.c	/^      ocount, sum[5];$/;"	m	struct:vf_priv_s	file:
sum0	libavcodec/tta.c	/^    uint32_t k0, k1, sum0, sum1;$/;"	m	struct:TTARice	file:
sum1	libavcodec/tta.c	/^    uint32_t k0, k1, sum0, sum1;$/;"	m	struct:TTARice	file:
sumLenArr	libavcodec/imc.c	/^    int sumLenArr[BANDS];      \/\/\/< bits for all coeffs in band$/;"	m	struct:__anon90	file:
sum_abs_dctelem	libavcodec/dsputil.h	/^    int (*sum_abs_dctelem)(DCTELEM *block\/*align 16*\/);$/;"	m	struct:DSPContext
sum_abs_dctelem_c	libavcodec/dsputil.c	/^static int sum_abs_dctelem_c(DCTELEM *block)$/;"	f	file:
sum_bits	libavcodec/nellymoser.c	/^static int sum_bits(short *buf, short shift, short off)$/;"	f	file:
sum_mmx	libavcodec/x86/motion_est_mmx.c	/^static inline int sum_mmx(void)$/;"	f	file:
sum_mmx2	libavcodec/x86/motion_est_mmx.c	/^static inline int sum_mmx2(void)$/;"	f	file:
suncc_flags	configure	/^    suncc_flags(){$/;"	f
sunrast_decode_frame	libavcodec/sunrast.c	/^static int sunrast_decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
sunrast_end	libavcodec/sunrast.c	/^static av_cold int sunrast_end(AVCodecContext *avctx) {$/;"	f	file:
sunrast_init	libavcodec/sunrast.c	/^static av_cold int sunrast_init(AVCodecContext *avctx) {$/;"	f	file:
superblock_coding	libavcodec/vp3.c	/^    unsigned char *superblock_coding;$/;"	m	struct:Vp3DecodeContext	file:
superblock_count	libavcodec/vp3.c	/^    int superblock_count;$/;"	m	struct:Vp3DecodeContext	file:
superblock_fragments	libavcodec/vp3.c	/^    int *superblock_fragments;$/;"	m	struct:Vp3DecodeContext	file:
superblock_run_length_vlc	libavcodec/vp3.c	/^    VLC superblock_run_length_vlc;$/;"	m	struct:Vp3DecodeContext	file:
superblock_run_length_vlc_table	libavcodec/vp3data.h	/^static const uint16_t superblock_run_length_vlc_table[34][2] = {$/;"	v
superblocktype_2_3	libavcodec/qdm2.c	/^    int superblocktype_2_3; \/\/\/< select fft tables and some algorithm based on superblock type$/;"	m	struct:__anon200	file:
supply_new_packets	libavdevice/jack_audio.c	/^static int supply_new_packets(JackData *self, AVFormatContext *context)$/;"	f	file:
supported_framerates	libavcodec/avcodec.h	/^    const AVRational *supported_framerates; \/\/\/< array of supported framerates, or NULL if any, array is terminated by {0,0}$/;"	m	struct:AVCodec
supported_resampling	libavcodec/resample.c	/^static const uint8_t supported_resampling[MAX_CHANNELS] = {$/;"	v	file:
supported_samplerates	libavcodec/avcodec.h	/^    const int *supported_samplerates;       \/\/\/< array of supported audio samplerates, or NULL if unknown, array is terminated by 0$/;"	m	struct:AVCodec
suppress_log	ffserver.c	/^    int suppress_log;$/;"	m	struct:HTTPContext	file:
surface	libavcodec/dxva2.h	/^    LPDIRECT3DSURFACE9 *surface;$/;"	m	struct:dxva_context
surface	libavcodec/vdpau.h	/^    VdpVideoSurface surface; \/\/\/< Used as rendered surface, never changed.$/;"	m	struct:vdpau_render_state
surface	libavdevice/sdl.c	/^    SDL_Surface *surface;$/;"	m	struct:__anon309	file:
surface_count	libavcodec/dxva2.h	/^    unsigned surface_count;$/;"	m	struct:dxva_context
surmixlev_options	libavcodec/ac3enc.c	/^static const float surmixlev_options[SURMIXLEV_NUM_OPTIONS] = {$/;"	v	file:
surround_levels	libavcodec/ac3dec.c	/^static const uint8_t surround_levels[4] = { 4, 6, 7, 6 };$/;"	v	file:
surround_mix_level	libavcodec/ac3.h	/^    float surround_mix_level;$/;"	m	struct:AC3EncOptions
surround_mix_level	libavcodec/ac3.h	/^    int surround_mix_level;                 \/\/\/< Surround mix level index$/;"	m	struct:__anon170
surround_mix_level	libavcodec/ac3dec.h	/^    int surround_mix_level;                 \/\/\/< Surround mix level index$/;"	m	struct:__anon88
surround_mix_level	libavcodec/ac3enc.h	/^    int surround_mix_level;                 \/\/\/< surround mix level code$/;"	m	struct:AC3EncodeContext
surround_sum	libavcodec/dca.c	/^    int surround_sum;           \/\/\/< surround sum\/difference flag$/;"	m	struct:__anon93	file:
surround_to_stereo	libavcodec/resample.c	/^static void surround_to_stereo(short **output, short *input, int channels, int samples)$/;"	f	file:
sv_fmul_scalar	libavcodec/dsputil.h	/^    void (*sv_fmul_scalar[2])(float *dst, const float **sv,$/;"	m	struct:DSPContext
sv_fmul_scalar_2_c	libavcodec/dsputil.c	/^static void sv_fmul_scalar_2_c(float *dst, const float **sv, float mul,$/;"	f	file:
sv_fmul_scalar_4_c	libavcodec/dsputil.c	/^static void sv_fmul_scalar_4_c(float *dst, const float **sv, float mul,$/;"	f	file:
svcd_scan_offset_placeholder	libavcodec/mpeg12enc.c	/^static const uint8_t svcd_scan_offset_placeholder[14] = {$/;"	v	file:
svq1_block_type	libavcodec/svq1dec.c	/^static VLC svq1_block_type;$/;"	v	file:
svq1_decode_block_intra	libavcodec/svq1dec.c	/^static int svq1_decode_block_intra (GetBitContext *bitbuf, uint8_t *pixels, int pitch ) {$/;"	f	file:
svq1_decode_block_non_intra	libavcodec/svq1dec.c	/^static int svq1_decode_block_non_intra (GetBitContext *bitbuf, uint8_t *pixels, int pitch ) {$/;"	f	file:
svq1_decode_delta_block	libavcodec/svq1dec.c	/^static int svq1_decode_delta_block (MpegEncContext *s, GetBitContext *bitbuf,$/;"	f	file:
svq1_decode_end	libavcodec/svq1dec.c	/^static av_cold int svq1_decode_end(AVCodecContext *avctx)$/;"	f	file:
svq1_decode_frame	libavcodec/svq1dec.c	/^static int svq1_decode_frame(AVCodecContext *avctx,$/;"	f	file:
svq1_decode_frame_header	libavcodec/svq1dec.c	/^static int svq1_decode_frame_header (GetBitContext *bitbuf,MpegEncContext *s) {$/;"	f	file:
svq1_decode_init	libavcodec/svq1dec.c	/^static av_cold int svq1_decode_init(AVCodecContext *avctx)$/;"	f	file:
svq1_decode_motion_vector	libavcodec/svq1dec.c	/^static int svq1_decode_motion_vector (GetBitContext *bitbuf, svq1_pmv *mv, svq1_pmv **pmv) {$/;"	f	file:
svq1_encode_end	libavcodec/svq1enc.c	/^static av_cold int svq1_encode_end(AVCodecContext *avctx)$/;"	f	file:
svq1_encode_frame	libavcodec/svq1enc.c	/^static int svq1_encode_frame(AVCodecContext *avctx, unsigned char *buf,$/;"	f	file:
svq1_encode_init	libavcodec/svq1enc.c	/^static av_cold int svq1_encode_init(AVCodecContext *avctx)$/;"	f	file:
svq1_encode_plane	libavcodec/svq1enc.c	/^static int svq1_encode_plane(SVQ1Context *s, int plane, unsigned char *src_plane, unsigned char *ref_plane, unsigned char *decoded_plane,$/;"	f	file:
svq1_frame_size	libavcodec/svq1.h	/^struct svq1_frame_size {$/;"	s
svq1_inter_codebook_sum	libavcodec/svq1enc_cb.h	/^static const int8_t svq1_inter_codebook_sum[4][16*6] = {$/;"	v
svq1_inter_mean	libavcodec/svq1dec.c	/^static VLC svq1_inter_mean;$/;"	v	file:
svq1_inter_multistage	libavcodec/svq1dec.c	/^static VLC svq1_inter_multistage[6];$/;"	v	file:
svq1_intra_codebook_sum	libavcodec/svq1enc_cb.h	/^static const int8_t svq1_intra_codebook_sum[4][16*6] = {$/;"	v
svq1_intra_mean	libavcodec/svq1dec.c	/^static VLC svq1_intra_mean;$/;"	v	file:
svq1_intra_multistage	libavcodec/svq1dec.c	/^static VLC svq1_intra_multistage[6];$/;"	v	file:
svq1_motion_component	libavcodec/svq1dec.c	/^static VLC svq1_motion_component;$/;"	v	file:
svq1_motion_inter_4v_block	libavcodec/svq1dec.c	/^static int svq1_motion_inter_4v_block (MpegEncContext *s, GetBitContext *bitbuf,$/;"	f	file:
svq1_motion_inter_block	libavcodec/svq1dec.c	/^static int svq1_motion_inter_block (MpegEncContext *s, GetBitContext *bitbuf,$/;"	f	file:
svq1_parse_string	libavcodec/svq1dec.c	/^static void svq1_parse_string (GetBitContext *bitbuf, uint8_t *out) {$/;"	f	file:
svq1_pmv	libavcodec/svq1dec.c	/^} svq1_pmv;$/;"	t	typeref:struct:svq1_pmv_s	file:
svq1_pmv_s	libavcodec/svq1dec.c	/^typedef struct svq1_pmv_s {$/;"	s	file:
svq1_skip_block	libavcodec/svq1dec.c	/^static void svq1_skip_block (uint8_t *current, uint8_t *previous, int pitch, int x, int y) {$/;"	f	file:
svq1_write_header	libavcodec/svq1enc.c	/^static void svq1_write_header(SVQ1Context *s, int frame_type)$/;"	f	file:
svq3_dct_tables	libavcodec/svq3.c	/^static const struct { uint8_t run; uint8_t level; } svq3_dct_tables[2][16] = {$/;"	v	typeref:struct:__anon142	file:
svq3_decode_block	libavcodec/svq3.c	/^static inline int svq3_decode_block(GetBitContext *gb, DCTELEM *block,$/;"	f	file:
svq3_decode_end	libavcodec/svq3.c	/^static int svq3_decode_end(AVCodecContext *avctx)$/;"	f	file:
svq3_decode_frame	libavcodec/svq3.c	/^static int svq3_decode_frame(AVCodecContext *avctx,$/;"	f	file:
svq3_decode_init	libavcodec/svq3.c	/^static av_cold int svq3_decode_init(AVCodecContext *avctx)$/;"	f	file:
svq3_decode_mb	libavcodec/svq3.c	/^static int svq3_decode_mb(SVQ3Context *svq3, unsigned int mb_type)$/;"	f	file:
svq3_decode_slice_header	libavcodec/svq3.c	/^static int svq3_decode_slice_header(AVCodecContext *avctx)$/;"	f	file:
svq3_dequant_coeff	libavcodec/svq3.c	/^static const uint32_t svq3_dequant_coeff[32] = {$/;"	v	file:
svq3_extradata_free	libavformat/rtpdec_svq3.c	/^static void svq3_extradata_free(PayloadContext *sv)$/;"	f	file:
svq3_extradata_new	libavformat/rtpdec_svq3.c	/^static PayloadContext *svq3_extradata_new(void)$/;"	f	file:
svq3_get_se_golomb	libavcodec/golomb.h	/^static inline int svq3_get_se_golomb(GetBitContext *gb){$/;"	f
svq3_get_ue_golomb	libavcodec/golomb.h	/^static inline int svq3_get_ue_golomb(GetBitContext *gb){$/;"	f
svq3_mc_dir	libavcodec/svq3.c	/^static inline int svq3_mc_dir(H264Context *h, int size, int mode, int dir,$/;"	f	file:
svq3_mc_dir_part	libavcodec/svq3.c	/^static inline void svq3_mc_dir_part(MpegEncContext *s,$/;"	f	file:
svq3_parse_packet	libavformat/rtpdec_svq3.c	/^static int svq3_parse_packet (AVFormatContext *s, PayloadContext *sv,$/;"	f	file:
svq3_pred_0	libavcodec/svq3.c	/^static const uint8_t svq3_pred_0[25][2] = {$/;"	v	file:
svq3_pred_1	libavcodec/svq3.c	/^static const int8_t svq3_pred_1[6][6][5] = {$/;"	v	file:
svq3_scan	libavcodec/svq3.c	/^static const uint8_t svq3_scan[16] = {$/;"	v	file:
svx8_compression	libavformat/iff.c	/^    svx8_compression_type   svx8_compression;$/;"	m	struct:__anon395	file:
svx8_compression_type	libavformat/iff.c	/^} svx8_compression_type;$/;"	t	typeref:enum:__anon393	file:
sw	libavcodec/mqc.c	/^        uint8_t  sw;$/;"	m	struct:__anon71	file:
sw	libavcodec/ps2/mmi.h	93;"	d
swScale	libswscale/swscale_internal.h	/^    SwsFunc swScale;$/;"	m	struct:SwsContext
swScale_c	libswscale/swscale_template.c	/^static int swScale_c(SwsContext *c, const uint8_t* src[], int srcStride[],$/;"	f	file:
swap	libavfilter/libmpcodecs/vf_il.c	/^    int swap;$/;"	m	struct:FilterParam	file:
swap_buf	libavcodec/mimic.c	/^    void           *swap_buf;$/;"	m	struct:__anon282	file:
swap_buf_size	libavcodec/mimic.c	/^    int             swap_buf_size;$/;"	m	struct:__anon282	file:
swap_planes	libavcodec/bink.c	/^    int            swap_planes;$/;"	m	struct:BinkContext	file:
swap_uv	libavcodec/mpeg12.c	/^    int swap_uv;\/\/indicate VCR2$/;"	m	struct:Mpeg1Context	file:
swap_uv	libavcodec/mpegvideo.h	/^    int swap_uv;             \/\/vcr2 codec is an MPEG-2 variant with U and V swapped$/;"	m	struct:MpegEncContext
swapped	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned swapped, chroma_swapped;$/;"	m	struct:vf_priv_s	file:
swb_offset	libavcodec/aac.h	/^    const uint16_t *swb_offset; \/\/\/< table of offsets to the lowest spectral coefficient of a scalefactor band, sfb, for a particular window$/;"	m	struct:__anon239
swb_offset_1024_16	libavcodec/aactab.c	/^static const uint16_t swb_offset_1024_16[] = {$/;"	v	file:
swb_offset_1024_24	libavcodec/aactab.c	/^static const uint16_t swb_offset_1024_24[] = {$/;"	v	file:
swb_offset_1024_32	libavcodec/aactab.c	/^static const uint16_t swb_offset_1024_32[] = {$/;"	v	file:
swb_offset_1024_48	libavcodec/aactab.c	/^static const uint16_t swb_offset_1024_48[] = {$/;"	v	file:
swb_offset_1024_64	libavcodec/aactab.c	/^static const uint16_t swb_offset_1024_64[] = {$/;"	v	file:
swb_offset_1024_8	libavcodec/aactab.c	/^static const uint16_t swb_offset_1024_8[] = {$/;"	v	file:
swb_offset_1024_96	libavcodec/aactab.c	/^static const uint16_t swb_offset_1024_96[] = {$/;"	v	file:
swb_offset_128_16	libavcodec/aactab.c	/^static const uint16_t swb_offset_128_16[] = {$/;"	v	file:
swb_offset_128_24	libavcodec/aactab.c	/^static const uint16_t swb_offset_128_24[] = {$/;"	v	file:
swb_offset_128_48	libavcodec/aactab.c	/^static const uint16_t swb_offset_128_48[] = {$/;"	v	file:
swb_offset_128_8	libavcodec/aactab.c	/^static const uint16_t swb_offset_128_8[] = {$/;"	v	file:
swb_offset_128_96	libavcodec/aactab.c	/^static const uint16_t swb_offset_128_96[] = {$/;"	v	file:
swb_size_1024	libavcodec/aacenc.c	/^static const uint8_t *swb_size_1024[] = {$/;"	v	file:
swb_size_1024_16	libavcodec/aacenc.c	/^static const uint8_t swb_size_1024_16[] = {$/;"	v	file:
swb_size_1024_24	libavcodec/aacenc.c	/^static const uint8_t swb_size_1024_24[] = {$/;"	v	file:
swb_size_1024_32	libavcodec/aacenc.c	/^static const uint8_t swb_size_1024_32[] = {$/;"	v	file:
swb_size_1024_48	libavcodec/aacenc.c	/^static const uint8_t swb_size_1024_48[] = {$/;"	v	file:
swb_size_1024_64	libavcodec/aacenc.c	/^static const uint8_t swb_size_1024_64[] = {$/;"	v	file:
swb_size_1024_8	libavcodec/aacenc.c	/^static const uint8_t swb_size_1024_8[] = {$/;"	v	file:
swb_size_1024_96	libavcodec/aacenc.c	/^static const uint8_t swb_size_1024_96[] = {$/;"	v	file:
swb_size_128	libavcodec/aacenc.c	/^static const uint8_t *swb_size_128[] = {$/;"	v	file:
swb_size_128_16	libavcodec/aacenc.c	/^static const uint8_t swb_size_128_16[] = {$/;"	v	file:
swb_size_128_24	libavcodec/aacenc.c	/^static const uint8_t swb_size_128_24[] = {$/;"	v	file:
swb_size_128_48	libavcodec/aacenc.c	/^static const uint8_t swb_size_128_48[] = {$/;"	v	file:
swb_size_128_8	libavcodec/aacenc.c	/^static const uint8_t swb_size_128_8[] = {$/;"	v	file:
swb_size_128_96	libavcodec/aacenc.c	/^static const uint8_t swb_size_128_96[] = {$/;"	v	file:
swb_sizes	libavcodec/aac.h	/^    const uint8_t *swb_sizes;   \/\/\/< table of scalefactor band sizes for a particular window$/;"	m	struct:__anon239
swf_audio_codec_tags	libavformat/swf.h	/^static const AVCodecTag swf_audio_codec_tags[] = {$/;"	v
swf_codec_tags	libavformat/swf.h	/^static const AVCodecTag swf_codec_tags[] = {$/;"	v
swf_frame_number	libavformat/swf.h	/^    int swf_frame_number;$/;"	m	struct:__anon336
swf_index_tables	libavcodec/adpcm.c	/^static const int swf_index_tables[4][16] = {$/;"	v	file:
swf_probe	libavformat/swfdec.c	/^static int swf_probe(AVProbeData *p)$/;"	f	file:
swf_read_header	libavformat/swfdec.c	/^static int swf_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
swf_read_packet	libavformat/swfdec.c	/^static int swf_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
swf_write_audio	libavformat/swfenc.c	/^static int swf_write_audio(AVFormatContext *s,$/;"	f	file:
swf_write_header	libavformat/swfenc.c	/^static int swf_write_header(AVFormatContext *s)$/;"	f	file:
swf_write_packet	libavformat/swfenc.c	/^static int swf_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
swf_write_trailer	libavformat/swfenc.c	/^static int swf_write_trailer(AVFormatContext *s)$/;"	f	file:
swf_write_video	libavformat/swfenc.c	/^static int swf_write_video(AVFormatContext *s,$/;"	f	file:
switch_buffer	libavcodec/mpegaudiodec.c	/^static void switch_buffer(MPADecodeContext *s, int *pos, int *end_pos, int *end_pos2){$/;"	f	file:
switch_buffers	libavcodec/indeo5.c	/^static void switch_buffers(IVI5DecContext *ctx)$/;"	f	file:
switch_feed_streams	ffserver.c	/^    int switch_feed_streams[MAX_STREAMS]; \/* index of streams in the feed *\/$/;"	m	struct:HTTPContext	file:
switch_pending	ffserver.c	/^    int switch_pending;$/;"	m	struct:HTTPContext	file:
switch_point	libavcodec/mpegaudiodec.c	/^    uint8_t switch_point;$/;"	m	struct:GranuleDef	file:
sws	libavfilter/vf_scale.c	/^    struct SwsContext *sws;     \/\/\/< software scaler context$/;"	m	struct:__anon18	typeref:struct:__anon18::SwsContext	file:
sws_addVec	libswscale/utils.c	/^void sws_addVec(SwsVector *a, SwsVector *b)$/;"	f
sws_allocVec	libswscale/utils.c	/^SwsVector *sws_allocVec(int length)$/;"	f
sws_alloc_context	libswscale/utils.c	/^SwsContext *sws_alloc_context(void)$/;"	f
sws_cloneVec	libswscale/utils.c	/^SwsVector *sws_cloneVec(SwsVector *a)$/;"	f
sws_context_class	libswscale/options.c	/^const AVClass sws_context_class = { "SWScaler", sws_context_to_name, options };$/;"	v
sws_context_to_name	libswscale/options.c	/^static const char * sws_context_to_name(void * ptr)$/;"	f	file:
sws_convVec	libswscale/utils.c	/^void sws_convVec(SwsVector *a, SwsVector *b)$/;"	f
sws_convertPalette8ToPacked24	libswscale/swscale_unscaled.c	/^void sws_convertPalette8ToPacked24(const uint8_t *src, uint8_t *dst, int num_pixels, const uint8_t *palette)$/;"	f
sws_convertPalette8ToPacked32	libswscale/swscale_unscaled.c	/^void sws_convertPalette8ToPacked32(const uint8_t *src, uint8_t *dst, int num_pixels, const uint8_t *palette)$/;"	f
sws_dcVec	libswscale/utils.c	/^static double sws_dcVec(SwsVector *a)$/;"	f	file:
sws_diffVec	libswscale/utils.c	/^static SwsVector *sws_diffVec(SwsVector *a, SwsVector *b)$/;"	f	file:
sws_flags	doc/examples/muxing-example.c	/^static int sws_flags = SWS_BICUBIC;$/;"	v	file:
sws_flags	ffmpeg.c	/^   int sws_flags;$/;"	m	struct:AVOutputStream	file:
sws_flags	ffmpeg/ffmpeg.c	/^   int sws_flags;$/;"	m	struct:AVOutputStream	file:
sws_flags	ffplay.c	/^static int sws_flags = SWS_BICUBIC;$/;"	v	file:
sws_format_name	libswscale/utils.c	/^const char *sws_format_name(enum PixelFormat format)$/;"	f
sws_freeContext	libswscale/utils.c	/^void sws_freeContext(SwsContext *c)$/;"	f
sws_freeFilter	libswscale/utils.c	/^void sws_freeFilter(SwsFilter *filter)$/;"	f
sws_freeVec	libswscale/utils.c	/^void sws_freeVec(SwsVector *a)$/;"	f
sws_getCachedContext	libswscale/utils.c	/^struct SwsContext *sws_getCachedContext(struct SwsContext *context,$/;"	f
sws_getCoefficients	libswscale/yuv2rgb.c	/^const int *sws_getCoefficients(int colorspace)$/;"	f
sws_getColorspaceDetails	libswscale/utils.c	/^int sws_getColorspaceDetails(SwsContext *c, int **inv_table, int *srcRange, int **table, int *dstRange, int *brightness, int *contrast, int *saturation)$/;"	f
sws_getConstVec	libswscale/utils.c	/^SwsVector *sws_getConstVec(double c, int length)$/;"	f
sws_getContext	libswscale/utils.c	/^SwsContext *sws_getContext(int srcW, int srcH, enum PixelFormat srcFormat,$/;"	f
sws_getContextFromCmdLine	libavfilter/vf_mp.c	/^struct SwsContext *sws_getContextFromCmdLine(int srcW, int srcH, int srcFormat, int dstW, int dstH, int dstFormat)$/;"	f
sws_getConvVec	libswscale/utils.c	/^static SwsVector *sws_getConvVec(SwsVector *a, SwsVector *b)$/;"	f	file:
sws_getDefaultFilter	libswscale/utils.c	/^SwsFilter *sws_getDefaultFilter(float lumaGBlur, float chromaGBlur,$/;"	f
sws_getFlagsAndFilterFromCmdLine	libavfilter/vf_mp.c	/^static void sws_getFlagsAndFilterFromCmdLine(int *flags, SwsFilter **srcFilterParam, SwsFilter **dstFilterParam)$/;"	f	file:
sws_getGaussianVec	libswscale/utils.c	/^SwsVector *sws_getGaussianVec(double variance, double quality)$/;"	f
sws_getIdentityVec	libswscale/utils.c	/^SwsVector *sws_getIdentityVec(void)$/;"	f
sws_getShiftedVec	libswscale/utils.c	/^static SwsVector *sws_getShiftedVec(SwsVector *a, int shift)$/;"	f	file:
sws_init_context	libswscale/utils.c	/^int sws_init_context(SwsContext *c, SwsFilter *srcFilter, SwsFilter *dstFilter)$/;"	f
sws_init_swScale	libswscale/x86/swscale_template.c	/^static av_cold void RENAME(sws_init_swScale)(SwsContext *c)$/;"	f	file:
sws_init_swScale_c	libswscale/swscale_template.c	/^static void sws_init_swScale_c(SwsContext *c)$/;"	f	file:
sws_isSupportedInput	cmdutils.c	839;"	d	file:
sws_isSupportedInput	ffmpeg/cmdutils.c	839;"	d	file:
sws_isSupportedInput	libswscale/utils.c	/^int sws_isSupportedInput(enum PixelFormat pix_fmt)$/;"	f
sws_isSupportedOutput	cmdutils.c	840;"	d	file:
sws_isSupportedOutput	ffmpeg/cmdutils.c	840;"	d	file:
sws_isSupportedOutput	libswscale/utils.c	/^int sws_isSupportedOutput(enum PixelFormat pix_fmt)$/;"	f
sws_normalizeVec	libswscale/utils.c	/^void sws_normalizeVec(SwsVector *a, double height)$/;"	f
sws_opts	cmdutils.c	/^struct SwsContext *sws_opts;$/;"	v	typeref:struct:SwsContext
sws_opts	ffmpeg/cmdutils.c	/^struct SwsContext *sws_opts;$/;"	v	typeref:struct:SwsContext
sws_param	libavfilter/vsrc_buffer.c	/^    char              sws_param[256];$/;"	m	struct:__anon25	file:
sws_printVec	libswscale/utils.c	/^void sws_printVec(SwsVector *a)$/;"	f
sws_printVec2	libswscale/utils.c	/^void sws_printVec2(SwsVector *a, AVClass *log_ctx, int log_level)$/;"	f
sws_rgb2rgb_init	libswscale/rgb2rgb.c	/^void sws_rgb2rgb_init(void)$/;"	f
sws_scale	libswscale/swscale_unscaled.c	/^int sws_scale(SwsContext *c, const uint8_t* const src[], const int srcStride[], int srcSliceY,$/;"	f
sws_scaleVec	libswscale/utils.c	/^void sws_scaleVec(SwsVector *a, double scalar)$/;"	f
sws_scale_ordered	libswscale/swscale_unscaled.c	/^int sws_scale_ordered(SwsContext *c, const uint8_t* const src[], int srcStride[], int srcSliceY,$/;"	f
sws_setColorspaceDetails	libswscale/utils.c	/^int sws_setColorspaceDetails(SwsContext *c, const int inv_table[4], int srcRange, const int table[4], int dstRange, int brightness, int contrast, int saturation)$/;"	f
sws_shiftVec	libswscale/utils.c	/^void sws_shiftVec(SwsVector *a, int shift)$/;"	f
sws_subVec	libswscale/utils.c	/^void sws_subVec(SwsVector *a, SwsVector *b)$/;"	f
sws_sumVec	libswscale/utils.c	/^static SwsVector *sws_sumVec(SwsVector *a, SwsVector *b)$/;"	f	file:
swscale_configuration	libswscale/utils.c	/^const char *swscale_configuration(void)$/;"	f
swscale_license	libswscale/utils.c	/^const char *swscale_license(void)$/;"	f
swscale_version	libswscale/utils.c	/^unsigned swscale_version(void)$/;"	f
sx	libavcodec/ansi.c	/^    int sx;               \/**< saved x cursor position (pixels) *\/$/;"	m	struct:__anon173	file:
sy	libavcodec/ansi.c	/^    int sy;               \/**< saved y cursor position (pixels) *\/$/;"	m	struct:__anon173	file:
sym	libavcodec/huffman.h	/^    int16_t  sym;$/;"	m	struct:__anon149
symCount	libavcodec/cabac.h	/^    int symCount;$/;"	m	struct:CABACContext
sym_factor	libavcodec/cavs.h	/^    int sym_factor;    \/\/\/< for scaling in symmetrical B block$/;"	m	struct:__anon207
sym_quant	libavcodec/ac3enc.c	/^static inline int sym_quant(int c, int e, int levels)$/;"	f	file:
symbol	libavcodec/bitstream.c	/^    uint16_t symbol;$/;"	m	struct:__anon81	file:
symbol_to_vec2	libavcodec/wmaprodata.h	/^static const uint8_t symbol_to_vec2[HUFF_VEC2_SIZE] = {$/;"	v
symbol_to_vec4	libavcodec/wmaprodata.h	/^static const uint16_t symbol_to_vec4[HUFF_VEC4_SIZE] = {$/;"	v
symmetric_dequant	libavcodec/ac3dec.c	/^symmetric_dequant(int code, int levels)$/;"	f	file:
syms	libavcodec/bink.c	/^    uint8_t syms[16]; \/\/\/< leaf value to symbol mapping$/;"	m	struct:Tree	file:
syn_bw_tab	libavcodec/ra288.h	/^static const float syn_bw_tab[36]={$/;"	v
syn_window	libavcodec/ra288.h	/^static const float syn_window[111]={$/;"	v
sync	libavcodec/aac_ac3_parser.h	/^    int (*sync)(uint64_t state, struct AACAC3ParseContext *hdr_info,$/;"	m	struct:AACAC3ParseContext
sync	libavcodec/mpeg12.c	/^    int sync;                        \/\/\/< Did we reach a sync point like a GOP\/SEQ\/KEYFrame?$/;"	m	struct:Mpeg1Context	file:
sync	libavformat/lxfdec.c	/^static int sync(AVFormatContext *s, uint8_t *header)$/;"	f	file:
sync	libavformat/rmdec.c	/^static int sync(AVFormatContext *s, int64_t *timestamp, int *flags, int *stream_index, int64_t *pos){$/;"	f	file:
sync_file_index	ffmpeg.c	/^    int sync_file_index;$/;"	m	struct:AVStreamMap	file:
sync_file_index	ffmpeg/ffmpeg.c	/^    int sync_file_index;$/;"	m	struct:AVStreamMap	file:
sync_header	libavformat/psxstr.c	/^static const char sync_header[12] = {0x00,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x00};$/;"	v	file:
sync_ist	ffmpeg.c	/^    struct AVInputStream *sync_ist; \/* input stream to sync against *\/$/;"	m	struct:AVOutputStream	typeref:struct:AVOutputStream::AVInputStream	file:
sync_ist	ffmpeg/ffmpeg.c	/^    struct AVInputStream *sync_ist; \/* input stream to sync against *\/$/;"	m	struct:AVOutputStream	typeref:struct:AVOutputStream::AVInputStream	file:
sync_offset	libavcodec/dirac_parser.c	/^    int sync_offset;$/;"	m	struct:DiracParseContext	file:
sync_opts	ffmpeg.c	/^    int64_t sync_opts;       \/* output frame counter, could be changed to some true timestamp *\/ \/\/FIXME look at frame_number$/;"	m	struct:AVOutputStream	file:
sync_opts	ffmpeg/ffmpeg.c	/^    int64_t sync_opts;       \/* output frame counter, could be changed to some true timestamp *\/ \/\/FIXME look at frame_number$/;"	m	struct:AVOutputStream	file:
sync_pos	libavformat/oggdec.h	/^    int64_t sync_pos;   \/\/\/< file offset of the first page needed to reconstruct the current packet$/;"	m	struct:ogg_stream
sync_stream_index	ffmpeg.c	/^    int sync_stream_index;$/;"	m	struct:AVStreamMap	file:
sync_stream_index	ffmpeg/ffmpeg.c	/^    int sync_stream_index;$/;"	m	struct:AVStreamMap	file:
sync_word	libavcodec/ac3.h	/^    uint16_t sync_word;$/;"	m	struct:__anon170
synchronize_audio	ffplay.c	/^static int synchronize_audio(VideoState *is, short *samples,$/;"	f	file:
syncpoints	libavformat/nut.h	/^    struct AVTreeNode *syncpoints;$/;"	m	struct:__anon494	typeref:struct:__anon494::AVTreeNode
syncword	libavcodec/mpegaudiodec.c	/^    int syncword; \/\/\/< syncword patch$/;"	m	struct:MP3On4DecodeContext	file:
synth	libavcodec/dca.c	/^    SynthFilterContext synth;$/;"	m	struct:__anon93	file:
synth	libavcodec/sipr.h	/^    float synth[LP_FILTER_ORDER_16k];$/;"	m	struct:__anon235
synth_block	libavcodec/wmavoice.c	/^static void synth_block(WMAVoiceContext *s, GetBitContext *gb,$/;"	f	file:
synth_block_fcb_acb	libavcodec/wmavoice.c	/^static void synth_block_fcb_acb(WMAVoiceContext *s, GetBitContext *gb,$/;"	f	file:
synth_block_hardcoded	libavcodec/wmavoice.c	/^static void synth_block_hardcoded(WMAVoiceContext *s, GetBitContext *gb,$/;"	f	file:
synth_buf_offset	libavcodec/mpc.h	/^    int synth_buf_offset[MPA_MAX_CHANNELS];$/;"	m	struct:__anon179
synth_buf_offset	libavcodec/mpegaudiodec.c	/^    int synth_buf_offset[MPA_MAX_CHANNELS];$/;"	m	struct:MPADecodeContext	file:
synth_buf_offset	libavcodec/qdm2.c	/^    int synth_buf_offset[MPA_MAX_CHANNELS];$/;"	m	struct:__anon200	file:
synth_filter_float	libavcodec/synth_filter.c	/^static void synth_filter_float(FFTContext *imdct,$/;"	f	file:
synth_filter_float	libavcodec/synth_filter.h	/^    void (*synth_filter_float)(FFTContext *imdct,$/;"	m	struct:SynthFilterContext
synth_frame	libavcodec/wmavoice.c	/^static int synth_frame(AVCodecContext *ctx, GetBitContext *gb, int frame_idx,$/;"	f	file:
synth_history	libavcodec/wmavoice.c	/^    float synth_history[MAX_LSPS]; \/\/\/< see #excitation_history$/;"	m	struct:__anon157	file:
synth_superframe	libavcodec/wmavoice.c	/^static int synth_superframe(AVCodecContext *ctx,$/;"	f	file:
synthesis	libavcodec/amrnbdec.c	/^static int synthesis(AMRContext *p, float *lpc,$/;"	f	file:
synthesis	libavcodec/amrwbdec.c	/^static void synthesis(AMRWBContext *ctx, float *lpc, float *excitation,$/;"	f	file:
synthesis_filterbank_samples_offset	libavcodec/sbr.h	/^    int                synthesis_filterbank_samples_offset;$/;"	m	struct:__anon56
synthfilt_build_sb_samples	libavcodec/qdm2.c	/^static void synthfilt_build_sb_samples (QDM2Context *q, GetBitContext *gb, int length, int sb_min, int sb_max)$/;"	f	file:
sys	libavcodec/dv.c	/^    const DVprofile *sys;$/;"	m	struct:DVVideoContext	file:
sys	libavformat/dv.c	/^    const DVprofile*  sys;    \/* Current DV profile. E.g.: 525\/60, 625\/50 *\/$/;"	m	struct:DVDemuxContext	file:
sys	libavformat/dvenc.c	/^    const DVprofile*  sys;           \/* current DV profile, e.g.: 525\/60, 625\/50 *\/$/;"	m	struct:DVMuxContext	file:
system_header_freq	libavformat/mpegenc.c	/^    int system_header_freq;$/;"	m	struct:__anon429	file:
system_header_size	libavformat/mpegenc.c	/^    int system_header_size;$/;"	m	struct:__anon429	file:
system_metadata_pack_key	libavformat/mxfenc.c	/^static const uint8_t system_metadata_pack_key[]        = { 0x06,0x0E,0x2B,0x34,0x02,0x05,0x01,0x01,0x0D,0x01,0x03,0x01,0x04,0x01,0x01,0x00 };$/;"	v	file:
system_metadata_package_set_key	libavformat/mxfenc.c	/^static const uint8_t system_metadata_package_set_key[] = { 0x06,0x0E,0x2B,0x34,0x02,0x43,0x01,0x01,0x0D,0x01,0x03,0x01,0x04,0x01,0x02,0x01 };$/;"	v	file:
syt_offset	libavdevice/dv1394.h	/^        unsigned int syt_offset;$/;"	m	struct:dv1394_init
sz	libavcodec/libvpxenc.c	/^    size_t sz;                       \/**< length of compressed data *\/$/;"	m	struct:FrameListData	file:
t	doc/examples/muxing-example.c	/^float t, tincr, tincr2;$/;"	v
t	libavfilter/libmpcodecs/vf_ivtc.c	/^    int t, s, p;$/;"	m	struct:metrics	file:
t0	libavcodec/alpha/motion_est_mvi_asm.S	/^           t0:  left_u -> left lo -> left$/;"	l
t0	libavcodec/alpha/regdef.h	28;"	d
t0	libavcodec/vorbisdec.c	/^        } t0;$/;"	m	union:__anon259::vorbis_floor_u	typeref:struct:__anon259::vorbis_floor_u::vorbis_floor0_s	file:
t1	libavcodec/alpha/motion_est_mvi_asm.S	/^           t1:  mid$/;"	l
t1	libavcodec/alpha/regdef.h	29;"	d
t1	libavcodec/mjpegdec.h	/^    int t1,t2,t3;$/;"	m	struct:MJpegDecodeContext
t1	libavcodec/vorbisdec.c	/^        } t1;$/;"	m	union:__anon259::vorbis_floor_u	typeref:struct:__anon259::vorbis_floor_u::vorbis_floor1_s	file:
t10	libavcodec/alpha/regdef.h	55;"	d
t11	libavcodec/alpha/regdef.h	56;"	d
t12	libavcodec/alpha/regdef.h	58;"	d
t2	libavcodec/alpha/motion_est_mvi_asm.S	/^           t2:  right_u -> right hi -> right$/;"	l
t2	libavcodec/alpha/regdef.h	30;"	d
t2	libavcodec/mjpegdec.h	/^    int t1,t2,t3;$/;"	m	struct:MJpegDecodeContext
t3	libavcodec/alpha/motion_est_mvi_asm.S	/^           t3:  ref left$/;"	l
t3	libavcodec/alpha/regdef.h	31;"	d
t3	libavcodec/mjpegdec.h	/^    int t1,t2,t3;$/;"	m	struct:MJpegDecodeContext
t4	libavcodec/alpha/motion_est_mvi_asm.S	/^           t4:  ref right$/;"	l
t4	libavcodec/alpha/regdef.h	32;"	d
t5	libavcodec/alpha/motion_est_mvi_asm.S	/^           t5:  left_u -> left lo -> left$/;"	l
t5	libavcodec/alpha/regdef.h	33;"	d
t6	libavcodec/alpha/motion_est_mvi_asm.S	/^           t6:  mid$/;"	l
t6	libavcodec/alpha/regdef.h	34;"	d
t7	libavcodec/alpha/motion_est_mvi_asm.S	/^           t7:  right_u -> right hi -> right$/;"	l
t7	libavcodec/alpha/regdef.h	35;"	d
t8	libavcodec/alpha/motion_est_mvi_asm.S	/^           t8:  ref left$/;"	l
t8	libavcodec/alpha/regdef.h	53;"	d
t9	libavcodec/alpha/motion_est_mvi_asm.S	/^           t9:  ref right$/;"	l
t9	libavcodec/alpha/regdef.h	54;"	d
t_env	libavcodec/sbr.h	/^    uint8_t            t_env[8];$/;"	m	struct:__anon56
t_env_num_env_old	libavcodec/sbr.h	/^    uint8_t            t_env_num_env_old;$/;"	m	struct:__anon56
t_frame	libavcodec/mpegvideo.h	/^    int t_frame;                       \/\/\/< time distance of first I -> B, used for interlaced b frames$/;"	m	struct:MpegEncContext
t_huffman_env_1_5dB_bits	libavcodec/aacsbrdata.h	/^static const uint8_t t_huffman_env_1_5dB_bits[121] = {$/;"	v
t_huffman_env_1_5dB_codes	libavcodec/aacsbrdata.h	/^static const uint32_t t_huffman_env_1_5dB_codes[121] = {$/;"	v
t_huffman_env_3_0dB_bits	libavcodec/aacsbrdata.h	/^static const uint8_t t_huffman_env_3_0dB_bits[63] = {$/;"	v
t_huffman_env_3_0dB_codes	libavcodec/aacsbrdata.h	/^static const uint32_t t_huffman_env_3_0dB_codes[63] = {$/;"	v
t_huffman_env_bal_1_5dB_bits	libavcodec/aacsbrdata.h	/^static const uint8_t t_huffman_env_bal_1_5dB_bits[49] = {$/;"	v
t_huffman_env_bal_1_5dB_codes	libavcodec/aacsbrdata.h	/^static const uint32_t t_huffman_env_bal_1_5dB_codes[49] = {$/;"	v
t_huffman_env_bal_3_0dB_bits	libavcodec/aacsbrdata.h	/^static const uint8_t t_huffman_env_bal_3_0dB_bits[25] = {$/;"	v
t_huffman_env_bal_3_0dB_codes	libavcodec/aacsbrdata.h	/^static const uint16_t t_huffman_env_bal_3_0dB_codes[25] = {$/;"	v
t_huffman_noise_3_0dB_bits	libavcodec/aacsbrdata.h	/^static const uint8_t t_huffman_noise_3_0dB_bits[63] = {$/;"	v
t_huffman_noise_3_0dB_codes	libavcodec/aacsbrdata.h	/^static const uint16_t t_huffman_noise_3_0dB_codes[63] = {$/;"	v
t_huffman_noise_bal_3_0dB_bits	libavcodec/aacsbrdata.h	/^static const uint8_t t_huffman_noise_bal_3_0dB_bits[25] = {$/;"	v
t_huffman_noise_bal_3_0dB_codes	libavcodec/aacsbrdata.h	/^static const uint8_t t_huffman_noise_bal_3_0dB_codes[25] = {$/;"	v
t_q	libavcodec/sbr.h	/^    uint8_t            t_q[3];$/;"	m	struct:__anon56
t_state	libavcodec/libtheoraenc.c	/^    th_enc_ctx *t_state;$/;"	m	struct:TheoraContext	file:
ta	libavcodec/alpha/dsputil_alpha_asm.S	/^#define ta t10$/;"	d
ta	libavcodec/alpha/motion_est_mvi_asm.S	/^           ta:  left hi$/;"	l
ta	libavcodec/alpha/motion_est_mvi_asm.S	/^#define ta t10$/;"	d
tab	libavcodec/ivi_common.h	/^    VLC         *tab;       \/\/\/ pointer to the table associated with tab_sel$/;"	m	struct:__anon102
tab	libavcodec/lzwenc.c	/^    Code tab[LZW_HASH_SIZE]; \/\/\/< Hash table$/;"	m	struct:LZWEncodeState	file:
tab	libavcodec/twinvq_data.h	/^    const uint8_t *tab;$/;"	m	struct:__anon264
tab	libavcodec/twinvq_data.h	/^} tab = {$/;"	v	typeref:struct:__anon263
tab1	libavcodec/mace.c	/^    const int16_t *tab1; const int16_t *tab2; int stride;$/;"	m	struct:__anon76	file:
tab10	libavcodec/twinvq_data.h	/^static const uint8_t tab10[][25] =$/;"	v
tab11	libavcodec/twinvq_data.h	/^static const uint8_t tab11[][55] = {$/;"	v
tab12	libavcodec/twinvq_data.h	/^static const uint8_t tab12[][15] = {$/;"	v
tab2	libavcodec/mace.c	/^    const int16_t *tab1; const int16_t *tab2; int stride;$/;"	m	struct:__anon76	file:
tab7	libavcodec/twinvq_data.h	/^static const uint8_t tab7[][35] = {$/;"	v
tab8	libavcodec/twinvq_data.h	/^static const uint8_t tab8[][5] = {$/;"	v
tab9	libavcodec/twinvq_data.h	/^static const uint8_t tab9[][45] = {$/;"	v
tab_b	tests/rotozoom.c	/^unsigned char tab_b[256 * 256];$/;"	v
tab_bias	libavcodec/mpeg4video.c	115;"	d	file:
tab_bias	libavcodec/mpeg4video.c	75;"	d	file:
tab_cos	libavcodec/celp_math.c	/^static const int16_t tab_cos[65] =$/;"	v	file:
tab_exp2	libavcodec/celp_math.c	/^static const uint16_t tab_exp2[33] =$/;"	v	file:
tab_frw_01234567_sse2	libavcodec/x86/fdct_mmx.c	/^} tab_frw_01234567_sse2 =$/;"	v	typeref:struct:__anon59	file:
tab_g	tests/rotozoom.c	/^unsigned char tab_g[256 * 256];$/;"	v
tab_log2	libavcodec/celp_math.c	/^static const uint16_t tab_log2[33] =$/;"	v	file:
tab_r	tests/rotozoom.c	/^unsigned char tab_r[256 * 256];$/;"	v
tab_sel	libavcodec/ivi_common.h	/^    int32_t     tab_sel;    \/\/\/ index of one of the predefined tables$/;"	m	struct:__anon102
tab_size	libavcodec/mpeg4video.c	114;"	d	file:
tab_size	libavcodec/mpeg4video.c	74;"	d	file:
table	libavcodec/8svx.c	/^    const int8_t *table;$/;"	m	struct:EightSvxContext	file:
table	libavcodec/get_bits.h	/^    VLC_TYPE (*table)[2]; \/\/\/< code, bits$/;"	m	struct:VLC
table	libavcodec/pcm.c	/^    short table[256];$/;"	m	struct:PCMDecode	file:
table	libavcodec/qdm2.c	/^    const float *table;$/;"	m	struct:__anon197	file:
table0_level	libavcodec/msmpeg4data.c	/^static const int8_t table0_level[132] = {$/;"	v	file:
table0_mv_bits	libavcodec/msmpeg4data.c	/^static const uint8_t table0_mv_bits[1100] = {$/;"	v	file:
table0_mv_code	libavcodec/msmpeg4data.c	/^static const uint16_t table0_mv_code[1100] = {$/;"	v	file:
table0_mvx	libavcodec/msmpeg4data.c	/^static const uint8_t table0_mvx[1099] = {$/;"	v	file:
table0_mvy	libavcodec/msmpeg4data.c	/^static const uint8_t table0_mvy[1099] = {$/;"	v	file:
table0_run	libavcodec/msmpeg4data.c	/^static const int8_t table0_run[132] = {$/;"	v	file:
table0_vlc	libavcodec/msmpeg4data.c	/^static const uint16_t table0_vlc[133][2] = {$/;"	v	file:
table1_level	libavcodec/msmpeg4data.c	/^static const int8_t table1_level[148] = {$/;"	v	file:
table1_mv_bits	libavcodec/msmpeg4data.c	/^static const uint8_t table1_mv_bits[1100] = {$/;"	v	file:
table1_mv_code	libavcodec/msmpeg4data.c	/^static const uint16_t table1_mv_code[1100] = {$/;"	v	file:
table1_mvx	libavcodec/msmpeg4data.c	/^static const uint8_t table1_mvx[1099] = {$/;"	v	file:
table1_mvy	libavcodec/msmpeg4data.c	/^static const uint8_t table1_mvy[1099] = {$/;"	v	file:
table1_run	libavcodec/msmpeg4data.c	/^static const int8_t table1_run[148] = {$/;"	v	file:
table1_vlc	libavcodec/msmpeg4data.c	/^static const uint16_t table1_vlc[149][2] = {$/;"	v	file:
table2_level	libavcodec/msmpeg4data.c	/^static const int8_t table2_level[185] = {$/;"	v	file:
table2_run	libavcodec/msmpeg4data.c	/^static const int8_t table2_run[185] = {$/;"	v	file:
table2_vlc	libavcodec/msmpeg4data.c	/^static const uint16_t table2_vlc[186][2] = {$/;"	v	file:
table4_level	libavcodec/msmpeg4data.c	/^static const int8_t table4_level[168] = {$/;"	v	file:
table4_run	libavcodec/msmpeg4data.c	/^static const int8_t table4_run[168] = {$/;"	v	file:
table4_vlc	libavcodec/msmpeg4data.c	/^static const uint16_t table4_vlc[169][2] = {$/;"	v	file:
table_0_entries_legacy_attrib_le16	libavformat/wtvdec.c	/^static const uint8_t table_0_entries_legacy_attrib_le16[] =$/;"	v	file:
table_0_entries_time_le16	libavformat/wtvdec.c	/^static const uint8_t table_0_entries_time_le16[] =$/;"	v	file:
table_4_3_exp	libavcodec/mpegaudio_tablegen.h	/^static int8_t   table_4_3_exp[TABLE_4_3_SIZE];$/;"	v
table_4_3_value	libavcodec/mpegaudio_tablegen.h	/^static uint32_t table_4_3_value[TABLE_4_3_SIZE];$/;"	v
table_allocated	libavcodec/get_bits.h	/^    int table_size, table_allocated;$/;"	m	struct:VLC
table_bU	libswscale/swscale_internal.h	/^    uint8_t * table_bU[256];$/;"	m	struct:SwsContext
table_data	libavcodec/rv34.c	/^static VLC_TYPE table_data[117592][2];$/;"	v	file:
table_gU	libswscale/swscale_internal.h	/^    uint8_t * table_gU[256];$/;"	m	struct:SwsContext
table_gV	libswscale/swscale_internal.h	/^    int    table_gV[256];$/;"	m	struct:SwsContext
table_idx	libavcodec/wmaprodec.c	/^    uint8_t          table_idx;                     \/\/\/< index for the num_sfb, sfb_offsets, sf_offsets and subwoofer_cutoffs tables$/;"	m	struct:WMAProDecodeCtx	file:
table_idx	libavcodec/wmaprodec.c	/^    uint8_t  table_idx;                               \/\/\/< index in sf_offsets for the scale factor reference block$/;"	m	struct:__anon82	file:
table_inter_intra	libavcodec/msmpeg4data.c	/^const uint8_t table_inter_intra[4][2]={$/;"	v
table_level	libavcodec/rl.h	/^    const int8_t *table_level;$/;"	m	struct:RLTable
table_mb_btype	libavcodec/mpeg12decdata.h	/^static const uint8_t table_mb_btype[11][2] = {$/;"	v
table_mb_intra	libavcodec/vc1dec.c	/^static const uint16_t table_mb_intra[64][2];$/;"	v	file:
table_mb_non_intra	libavcodec/msmpeg4data.c	/^const uint32_t table_mb_non_intra[128][2] = {$/;"	v
table_mb_non_intra2	libavcodec/msmpeg4data.c	/^static const uint32_t table_mb_non_intra2[128][2] = {$/;"	v	file:
table_mb_non_intra3	libavcodec/msmpeg4data.c	/^static const uint32_t table_mb_non_intra3[128][2] = {$/;"	v	file:
table_mb_non_intra4	libavcodec/msmpeg4data.c	/^static const uint32_t table_mb_non_intra4[128][2] = {$/;"	v	file:
table_mb_ptype	libavcodec/mpeg12decdata.h	/^static const uint8_t table_mb_ptype[7][2] = {$/;"	v
table_mv_bits	libavcodec/msmpeg4data.h	/^    const uint8_t *table_mv_bits;$/;"	m	struct:MVTable
table_mv_code	libavcodec/msmpeg4data.h	/^    const uint16_t *table_mv_code;$/;"	m	struct:MVTable
table_mv_index	libavcodec/msmpeg4data.h	/^    uint16_t *table_mv_index; \/* encoding: convert mv to index in table_mv *\/$/;"	m	struct:MVTable
table_mvx	libavcodec/msmpeg4data.h	/^    const uint8_t *table_mvx;$/;"	m	struct:MVTable
table_mvy	libavcodec/msmpeg4data.h	/^    const uint8_t *table_mvy;$/;"	m	struct:MVTable
table_offs	libavcodec/rv34.c	/^static const int table_offs[] = {$/;"	v	file:
table_rV	libswscale/swscale_internal.h	/^    uint8_t * table_rV[256];$/;"	m	struct:SwsContext
table_run	libavcodec/rl.h	/^    const int8_t *table_run;$/;"	m	struct:RLTable
table_select	libavcodec/mpegaudiodec.c	/^    int table_select[3];$/;"	m	struct:GranuleDef	file:
table_size	libavcodec/get_bits.h	/^    int table_size, table_allocated;$/;"	m	struct:VLC
table_vlc	libavcodec/rl.h	/^    const uint16_t (*table_vlc)[2];$/;"	m	struct:RLTable
tables	libavcodec/truemotion1data.h	/^static const uint8_t * const tables[] = { pc_tbl2, pc_tbl3, pc_tbl4 };$/;"	v
tabs	libavcodec/mace.c	/^} tabs[] = {$/;"	v	typeref:struct:__anon76	file:
tabs	libavcodec/twinvq_data.h	/^} tabs[] = {$/;"	v	typeref:struct:__anon264
tabsize	libavcodec/lzwenc.c	/^    int tabsize;             \/\/\/< Number of values in hash table$/;"	m	struct:LZWEncodeState	file:
tabsize	libavfilter/vf_drawtext.c	/^    int tabsize;                    \/\/\/< tab size$/;"	m	struct:__anon24	file:
tag	libavcodec/srtdec.c	/^    char tag[128];$/;"	m	struct:__anon205	file:
tag	libavformat/internal.h	/^    unsigned int tag;$/;"	m	struct:AVCodecTag
tag	libavformat/matroskadec.c	/^    EbmlList tag;$/;"	m	struct:__anon368	file:
tag	libavformat/movenc.c	/^    uint32_t tag;$/;"	m	struct:__anon423	file:
tag	libavformat/movenc.h	/^    int         tag; \/\/\/< stsd fourcc$/;"	m	struct:MOVIndex
tag	libavformat/r3d.c	/^    uint32_t tag;$/;"	m	struct:__anon487	file:
tag	libavformat/swf.h	/^    int tag;$/;"	m	struct:__anon336
tag_che_map	libavcodec/aac.h	/^    ChannelElement  *tag_che_map[4][MAX_ELEM_ID];$/;"	m	struct:__anon246
tag_pos	libavformat/swf.h	/^    int64_t tag_pos;$/;"	m	struct:__anon336
tag_tree_code	libavcodec/j2kenc.c	/^static void tag_tree_code(J2kEncoderContext *s, J2kTgtNode *node, int threshold)$/;"	f	file:
tag_tree_decode	libavcodec/j2kdec.c	/^static int tag_tree_decode(J2kDecoderContext *s, J2kTgtNode *node, int threshold)$/;"	f	file:
tag_tree_size	libavcodec/j2k.c	/^static int tag_tree_size(int w, int h)$/;"	f	file:
tag_tree_update	libavcodec/j2kenc.c	/^static void tag_tree_update(J2kTgtNode *node)$/;"	f	file:
tag_tree_zero	libavcodec/j2k.c	/^static void tag_tree_zero(J2kTgtNode *t, int w, int h)$/;"	f	file:
tags	libavformat/matroskadec.c	/^    EbmlList tags;$/;"	m	struct:__anon371	file:
tags_mapped	libavcodec/aac.h	/^    int tags_mapped;$/;"	m	struct:__anon246
tags_per_config	libavcodec/aacdectab.h	/^static const int8_t tags_per_config[16] = { 0, 1, 1, 2, 3, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 0 };$/;"	v
tail	libavcodec/crystalhd.c	/^    OpaqueList *tail;$/;"	m	struct:__anon268	file:
tail	libavcodec/sonic.c	/^    int *tail;$/;"	m	struct:SonicContext	file:
tail_code	libavcodec/alsdec.c	/^static const uint8_t tail_code[16][6] = {$/;"	v	file:
tail_size	libavcodec/sonic.c	/^    int tail_size;$/;"	m	struct:SonicContext	file:
tap_quant	libavcodec/sonic.c	/^    int *tap_quant;$/;"	m	struct:SonicContext	file:
targa_decode_rle	libavcodec/targa.c	/^static int targa_decode_rle(AVCodecContext *avctx, TargaContext *s, const uint8_t *src, int src_size, uint8_t *dst, int w, int h, int stride, int bpp)$/;"	f	file:
targa_encode_frame	libavcodec/targaenc.c	/^static int targa_encode_frame(AVCodecContext *avctx,$/;"	f	file:
targa_encode_init	libavcodec/targaenc.c	/^static av_cold int targa_encode_init(AVCodecContext *avctx)$/;"	f	file:
targa_encode_normal	libavcodec/targaenc.c	/^static int targa_encode_normal(uint8_t *outbuf, AVFrame *pic, int bpp, int w, int h)$/;"	f	file:
targa_encode_rle	libavcodec/targaenc.c	/^static int targa_encode_rle(uint8_t *outbuf, int out_size, AVFrame *pic,$/;"	f	file:
targa_end	libavcodec/targa.c	/^static av_cold int targa_end(AVCodecContext *avctx){$/;"	f	file:
targa_init	libavcodec/targa.c	/^static av_cold int targa_init(AVCodecContext *avctx){$/;"	f	file:
target	libavformat/matroskadec.c	/^    MatroskaTagTarget target;$/;"	m	struct:__anon368	file:
target_clock	ffplay.c	/^    double target_clock;                         \/\/\/<av_gettime() time at which this should be displayed ideally$/;"	m	struct:VideoPicture	file:
target_duration	libavformat/applehttp.c	/^    int target_duration;$/;"	m	struct:variant	file:
target_duration	libavformat/applehttpproto.c	/^    int target_duration;$/;"	m	struct:AppleHTTPContext	file:
tb	libavcodec/alpha/dsputil_alpha_asm.S	/^#define tb t11$/;"	d
tb	libavcodec/alpha/motion_est_mvi_asm.S	/^           tb:  right lo$/;"	l
tb	libavcodec/alpha/motion_est_mvi_asm.S	/^#define tb t11$/;"	d
tb_expr	libavfilter/vf_settb.c	/^    char tb_expr[256];$/;"	m	struct:__anon51	file:
tb_expr	libavfilter/vsrc_nullsrc.c	/^    char tb_expr[256];$/;"	m	struct:__anon9	file:
tb_unreliable	libavformat/utils.c	/^static int tb_unreliable(AVCodecContext *c){$/;"	f	file:
tbls	libavcodec/g726.c	/^    G726Tables tbls;    \/**< static tables needed for computation *\/$/;"	m	struct:G726Context	file:
tc	libavcodec/alpha/dsputil_alpha_asm.S	/^#define tc t12$/;"	d
tc	libavcodec/alpha/motion_est_mvi_asm.S	/^           tc:  error left$/;"	l
tc	libavcodec/alpha/motion_est_mvi_asm.S	/^#define tc t12$/;"	d
tc0_table	libavcodec/h264_loopfilter.c	/^static const uint8_t tc0_table[52*3][4] = {$/;"	v	file:
tc_muls	libavcodec/xsubdec.c	/^static const uint8_t tc_muls[9] = { 10, 6, 10, 6, 10, 10, 10, 10, 1 };$/;"	v	file:
tc_offsets	libavcodec/xsubdec.c	/^static const uint8_t tc_offsets[9] = { 0, 1, 3, 4, 6, 7, 9, 10, 11 };$/;"	v	file:
tc_tab	libavcodec/cavsdata.h	/^static const uint8_t tc_tab[64] = {$/;"	v
tcos	libavcodec/fft.h	/^    FFTSample *tcos;$/;"	m	struct:FFTContext
tcos	libavcodec/rdft.h	/^    const FFTSample *tcos;$/;"	m	struct:RDFTContext
tcp_close	libavformat/tcp.c	/^static int tcp_close(URLContext *h)$/;"	f	file:
tcp_get_file_handle	libavformat/tcp.c	/^static int tcp_get_file_handle(URLContext *h)$/;"	f	file:
tcp_open	libavformat/tcp.c	/^static int tcp_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
tcp_read	libavformat/tcp.c	/^static int tcp_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
tcp_write	libavformat/tcp.c	/^static int tcp_write(URLContext *h, const uint8_t *buf, int size)$/;"	f	file:
tcp_write_packet	libavformat/rtspenc.c	/^static int tcp_write_packet(AVFormatContext *s, RTSPStream *rtsp_st)$/;"	f	file:
td	libavcodec/alpha/dsputil_alpha_asm.S	/^#define td AT$/;"	d
td	libavcodec/alpha/motion_est_mvi_asm.S	/^           td:  error right  *\/$/;"	l
td	libavcodec/alpha/motion_est_mvi_asm.S	/^#define td AT$/;"	d
td	libavcodec/g726.c	/^    int td;             \/**< tone detect *\/$/;"	m	struct:G726Context	file:
te	libavcodec/alpha/dsputil_alpha_asm.S	/^#define te a5$/;"	d
te	libavcodec/alpha/motion_est_mvi_asm.S	/^#define te a5$/;"	d
temp	libavcodec/alpha/motion_est_mvi_asm.S	/^           temp:$/;"	l
temp	libavcodec/huffyuv.c	/^    uint8_t *temp[3];$/;"	m	struct:HYuvContext	file:
temp	libavcodec/mpegvideo.h	/^    uint8_t *temp;$/;"	m	struct:MotionEstContext
temp	libavcodec/resample.c	/^    short *temp[MAX_CHANNELS];$/;"	m	struct:ReSampleContext	file:
temp	libavfilter/libmpcodecs/vf_detc.c	/^        int temp;$/;"	m	struct:metrics	file:
temp	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct { unsigned int even, odd, noise, temp; } sad;$/;"	m	struct:frame_stats::__anon35	file:
temp	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned short int temp;$/;"	m	struct:metrics	file:
temp	libavfilter/libmpcodecs/vf_fspp.c	/^    int16_t *temp;$/;"	m	struct:vf_priv_s	file:
temp	libavfilter/libmpcodecs/vf_mcdeint.c	/^    int16_t *temp[3];$/;"	m	struct:vf_priv_s	file:
temp	libavfilter/libmpcodecs/vf_spp.c	/^        int16_t *temp;$/;"	m	struct:vf_priv_s	file:
temp	libavfilter/libmpcodecs/vf_uspp.c	/^    int16_t *temp[3];$/;"	m	struct:vf_priv_s	file:
temp	libavformat/lxfdec.c	/^    uint8_t temp[LXF_MAX_AUDIO_PACKET]; \/\/\/< temp buffer for de-planarizing the audio data$/;"	m	struct:__anon377	file:
tempBlocks	libpostproc/postprocess_internal.h	/^    uint8_t *tempBlocks; \/\/\/<used for the horizontal code$/;"	m	struct:PPContext
tempBlurred	libpostproc/postprocess_internal.h	/^    uint8_t *tempBlurred[3];$/;"	m	struct:PPContext
tempBlurredPast	libpostproc/postprocess_internal.h	/^    int32_t *tempBlurredPast[3];$/;"	m	struct:PPContext
tempBuf	libavcodec/atrac3.c	/^    float               tempBuf[1070];$/;"	m	struct:__anon131	file:
tempDst	libpostproc/postprocess_internal.h	/^    uint8_t *tempDst;$/;"	m	struct:PPContext
tempNoiseReducer	libpostproc/postprocess_altivec_template.c	/^static inline void RENAME(tempNoiseReducer)(uint8_t *src, int stride,$/;"	f	file:
tempNoiseReducer	libpostproc/postprocess_template.c	/^static inline void RENAME(tempNoiseReducer)(uint8_t *src, int stride,$/;"	f	file:
tempSrc	libpostproc/postprocess_internal.h	/^    uint8_t *tempSrc;$/;"	m	struct:PPContext
temp_idx	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long temp_idx;$/;"	m	struct:vf_priv_s	file:
temp_images	libavfilter/libmpcodecs/vf.h	/^    mp_image_t* temp_images[1];$/;"	m	struct:vf_image_context_s
temp_len	libavcodec/resample.c	/^    int temp_len;$/;"	m	struct:ReSampleContext	file:
temp_mb	libavcodec/mpegvideo.h	/^    uint8_t *temp_mb[2];$/;"	m	struct:MotionEstContext
temp_stride	libavfilter/libmpcodecs/vf_fspp.c	/^    int temp_stride;$/;"	m	struct:vf_priv_s	file:
temp_stride	libavfilter/libmpcodecs/vf_mcdeint.c	/^    int temp_stride[3];$/;"	m	struct:vf_priv_s	file:
temp_stride	libavfilter/libmpcodecs/vf_pp7.c	/^    int temp_stride;$/;"	m	struct:vf_priv_s	file:
temp_stride	libavfilter/libmpcodecs/vf_spp.c	/^        int temp_stride;$/;"	m	struct:vf_priv_s	file:
temp_stride	libavfilter/libmpcodecs/vf_uspp.c	/^    int temp_stride[3];$/;"	m	struct:vf_priv_s	file:
temporal	libavfilter/libmpcodecs/vf_noise.c	/^        int temporal;$/;"	m	struct:FilterParam	file:
temporal_cplx_masking	libavcodec/avcodec.h	/^    float temporal_cplx_masking;$/;"	m	struct:AVCodecContext
temporal_decomposition_count	libavcodec/snow.c	/^    int temporal_decomposition_count;$/;"	m	struct:SnowContext	file:
temporal_decomposition_type	libavcodec/snow.c	/^    int temporal_decomposition_type;$/;"	m	struct:SnowContext	file:
temporal_ref	libavformat/mxfenc.c	/^    uint16_t temporal_ref;$/;"	m	struct:__anon457	file:
temporal_reordering	libavformat/mxfenc.c	/^    int temporal_reordering;$/;"	m	struct:__anon458	file:
term_exit	ffmpeg.c	/^static void term_exit(void)$/;"	f	file:
term_exit	ffmpeg/ffmpeg.c	/^static void term_exit(void)$/;"	f	file:
term_init	ffmpeg.c	/^static void term_init(void)$/;"	f	file:
term_init	ffmpeg/ffmpeg.c	/^static void term_init(void)$/;"	f	file:
term_ts	libavformat/seek.c	/^    int64_t     term_ts;     \/\/\/< termination timestamp (which TS we already read)$/;"	m	struct:__anon438	file:
term_ts_tb	libavformat/seek.c	/^    AVRational  term_ts_tb;  \/\/\/< timebase for term_ts$/;"	m	struct:__anon438	file:
terminated	libavformat/seek.c	/^    int         terminated;  \/\/\/< termination flag for the current iteration$/;"	m	struct:__anon438	file:
terms	libavcodec/wavpack.c	/^    int terms;$/;"	m	struct:WavpackFrameContext	file:
test_class	libavutil/opt.c	/^static const AVClass test_class = {$/;"	v	file:
test_deps	configure	/^test_deps(){$/;"	f
test_encode_decode	libavutil/base64.c	/^static int test_encode_decode(const uint8_t *data, unsigned int data_size,$/;"	f	file:
test_filter	libavfilter/libmpcodecs/vf_remove_logo.c	107;"	d	file:
test_get_name	libavutil/opt.c	/^static const char *test_get_name(void *ctx)$/;"	f	file:
test_key	libavutil/des.c	/^static const uint8_t test_key[] = {0x12, 0x34, 0x56, 0x78, 0x9a, 0xbc, 0xde, 0xf0};$/;"	v	file:
test_ldflags	configure	/^test_ldflags(){$/;"	f
test_motion	libavcodec/motion-test.c	/^static void test_motion(const char *name,$/;"	f	file:
test_options	libavutil/opt.c	/^static const AVOption test_options[]= {$/;"	v	file:
tex_pb	libavcodec/mpegvideo.h	/^    PutBitContext tex_pb;            \/\/\/< used for data partitioned VOPs$/;"	m	struct:MpegEncContext
text	libavcodec/ass_split.h	/^    char *text;     \/**< actual text which will be displayed as a subtitle,$/;"	m	struct:__anon250
text	libavcodec/ass_split.h	/^    void (*text)(void *priv, const char *text, int len);$/;"	m	struct:__anon252
text	libavcodec/avcodec.h	/^    char *text;                     \/\/\/< 0 terminated plain UTF-8 text$/;"	m	struct:AVSubtitleRect
text	libavfilter/vf_drawtext.c	/^    uint8_t *text;                  \/\/\/< text to be drawn$/;"	m	struct:__anon24	file:
text2movsub	libavcodec/movsub_bsf.c	/^static int text2movsub(AVBitStreamFilterContext *bsfc, AVCodecContext *avctx, const char *args,$/;"	f	file:
textfile	libavfilter/vf_drawtext.c	/^    char *textfile;                 \/\/\/< file with text to be drawn$/;"	m	struct:__anon24	file:
tf	libavcodec/alpha/dsputil_alpha_asm.S	/^#define tf a4$/;"	d
tf	libavcodec/alpha/motion_est_mvi_asm.S	/^#define tf a4$/;"	d
tf_transform	libavcodec/fft-test.c	/^enum tf_transform {$/;"	g	file:
tfcntr	libavcodec/vc1.h	/^    uint8_t tfcntr;$/;"	m	struct:VC1Context
tfcntrflag	libavcodec/vc1.h	/^    int tfcntrflag;       \/\/\/< TFCNTR present$/;"	m	struct:VC1Context
tff	libavcodec/rawdec.c	/^    int tff;$/;"	m	struct:RawVideoContext	file:
tff	libavcodec/vc1.h	/^    uint8_t rptfrm, tff, rff;$/;"	m	struct:VC1Context
tg	libavcodec/alpha/dsputil_alpha_asm.S	/^#define tg a3$/;"	d
tg	libavcodec/alpha/motion_est_mvi_asm.S	/^#define tg a3$/;"	d
tget	libavcodec/tiff.c	/^static int tget(const uint8_t **p, int type, int le){$/;"	f	file:
tget_long	libavcodec/tiff.c	/^static int tget_long(const uint8_t **p, int le){$/;"	f	file:
tget_short	libavcodec/tiff.c	/^static int tget_short(const uint8_t **p, int le){$/;"	f	file:
tgq_calculate_qtable	libavcodec/eatgq.c	/^static void tgq_calculate_qtable(TgqContext *s, int quant){$/;"	f	file:
tgq_dconly	libavcodec/eatgq.c	/^static inline void tgq_dconly(TgqContext *s, unsigned char *dst, int dst_stride, int dc){$/;"	f	file:
tgq_decode_block	libavcodec/eatgq.c	/^static void tgq_decode_block(TgqContext *s, DCTELEM block[64], GetBitContext *gb){$/;"	f	file:
tgq_decode_end	libavcodec/eatgq.c	/^static av_cold int tgq_decode_end(AVCodecContext *avctx){$/;"	f	file:
tgq_decode_frame	libavcodec/eatgq.c	/^static int tgq_decode_frame(AVCodecContext *avctx,$/;"	f	file:
tgq_decode_init	libavcodec/eatgq.c	/^static av_cold int tgq_decode_init(AVCodecContext *avctx){$/;"	f	file:
tgq_decode_mb	libavcodec/eatgq.c	/^static void tgq_decode_mb(TgqContext *s, int mb_y, int mb_x, const uint8_t **bs, const uint8_t *buf_end){$/;"	f	file:
tgq_idct_put_mb	libavcodec/eatgq.c	/^static void tgq_idct_put_mb(TgqContext *s, DCTELEM (*block)[64], int mb_x, int mb_y){$/;"	f	file:
tgq_idct_put_mb_dconly	libavcodec/eatgq.c	/^static void tgq_idct_put_mb_dconly(TgqContext *s, int mb_x, int mb_y, const int8_t *dc)$/;"	f	file:
tgv_decode_end	libavcodec/eatgv.c	/^static av_cold int tgv_decode_end(AVCodecContext *avctx)$/;"	f	file:
tgv_decode_frame	libavcodec/eatgv.c	/^static int tgv_decode_frame(AVCodecContext *avctx,$/;"	f	file:
tgv_decode_init	libavcodec/eatgv.c	/^static av_cold int tgv_decode_init(AVCodecContext *avctx){$/;"	f	file:
tgv_decode_inter	libavcodec/eatgv.c	/^static int tgv_decode_inter(TgvContext * s, const uint8_t *buf, const uint8_t *buf_end){$/;"	f	file:
th	libavcodec/alpha/dsputil_alpha_asm.S	/^#define th v0$/;"	d
th	libavcodec/alpha/motion_est_mvi_asm.S	/^#define th v0$/;"	d
thd_chancount	libavcodec/mlp_parser.c	/^static const uint8_t thd_chancount[13] = {$/;"	v	file:
thd_layout	libavcodec/mlp_parser.c	/^static const uint64_t thd_layout[13] = {$/;"	v	file:
the_end	libavcodec/arm/jrevdct_arm.S	/^the_end:$/;"	l
theora	libavcodec/vp3.c	/^    int theora, theora_tables;$/;"	m	struct:Vp3DecodeContext	file:
theora_decode_header	libavcodec/vp3.c	/^static int theora_decode_header(AVCodecContext *avctx, GetBitContext *gb)$/;"	f	file:
theora_decode_init	libavcodec/vp3.c	/^static av_cold int theora_decode_init(AVCodecContext *avctx)$/;"	f	file:
theora_decode_tables	libavcodec/vp3.c	/^static int theora_decode_tables(AVCodecContext *avctx, GetBitContext *gb)$/;"	f	file:
theora_gptopts	libavformat/oggparsetheora.c	/^theora_gptopts(AVFormatContext *ctx, int idx, uint64_t gp, int64_t *dts)$/;"	f	file:
theora_header	libavformat/oggparsetheora.c	/^theora_header (AVFormatContext * s, int idx)$/;"	f	file:
theora_params	libavformat/oggparsetheora.c	/^struct theora_params {$/;"	s	file:
theora_pix_fmts	libavcodec/vp3.c	/^static const enum PixelFormat theora_pix_fmts[4] = {$/;"	v	typeref:enum:PixelFormat	file:
theora_tables	libavcodec/vp3.c	/^    int theora, theora_tables;$/;"	m	struct:Vp3DecodeContext	file:
third_pattern	libavcodec/rv34.h	/^    VLC third_pattern[2];  \/\/\/< VLCs used for decoding coefficients in the last subblock$/;"	m	struct:RV34VLC
thirdpel_flag	libavcodec/svq3.c	/^    int thirdpel_flag;$/;"	m	struct:__anon141	file:
this_motion4	libavcodec/roqvideo.h	/^    motion_vect *this_motion4;$/;"	m	struct:RoqContext
this_motion8	libavcodec/roqvideo.h	/^    motion_vect *this_motion8;$/;"	m	struct:RoqContext
this_year	cmdutils.c	/^static const int this_year = 2011;$/;"	v	file:
this_year	ffmpeg/cmdutils.c	/^static const int this_year = 2011;$/;"	v	file:
thp_probe	libavformat/thp.c	/^static int thp_probe(AVProbeData *p)$/;"	f	file:
thp_read_header	libavformat/thp.c	/^static int thp_read_header(AVFormatContext *s,$/;"	f	file:
thp_read_packet	libavformat/thp.c	/^static int thp_read_packet(AVFormatContext *s,$/;"	f	file:
thr	libavcodec/aacpsy.c	/^    float thr;          \/\/\/< energy threshold$/;"	m	struct:AacPsyBand	file:
thr_quiet	libavcodec/aacpsy.c	/^    float thr_quiet;    \/\/\/< threshold in quiet$/;"	m	struct:AacPsyBand	file:
thread	libavcodec/dnxhdenc.h	/^    struct DNXHDEncContext *thread[MAX_THREADS];$/;"	m	struct:DNXHDEncContext	typeref:struct:DNXHDEncContext::DNXHDEncContext
thread	libavcodec/pthread.c	/^    pthread_t      thread;$/;"	m	struct:PerThreadContext	file:
thread	libavcodec/w32thread.c	/^    HANDLE thread;$/;"	m	struct:ThreadContext	file:
thread_context	libavcodec/h264.h	/^    struct H264Context *thread_context[MAX_THREADS];$/;"	m	struct:H264Context	typeref:struct:H264Context::H264Context
thread_context	libavcodec/mpegvideo.h	/^    struct MpegEncContext *thread_context[MAX_THREADS];$/;"	m	struct:MpegEncContext	typeref:struct:MpegEncContext::MpegEncContext
thread_count	ffmpeg.c	/^static int thread_count= 1;$/;"	v	file:
thread_count	ffmpeg/ffmpeg.c	/^static int thread_count= 1;$/;"	v	file:
thread_count	ffplay.c	/^static int thread_count = 1;$/;"	v	file:
thread_count	libavcodec/avcodec.h	/^    int thread_count;$/;"	m	struct:AVCodecContext
thread_free	libavcodec/pthread.c	/^static void thread_free(AVCodecContext *avctx)$/;"	f	file:
thread_func	libavcodec/w32thread.c	/^static unsigned WINAPI attribute_align_arg thread_func(void *v){$/;"	f	file:
thread_init	libavcodec/pthread.c	/^static int thread_init(AVCodecContext *avctx)$/;"	f	file:
thread_opaque	libavcodec/avcodec.h	/^    void *thread_opaque;$/;"	m	struct:AVCodecContext
thread_safe_callbacks	libavcodec/avcodec.h	/^    int thread_safe_callbacks;$/;"	m	struct:AVCodecContext
thread_size	libavcodec/dnxhdenc.h	/^    unsigned thread_size;$/;"	m	struct:DNXHDEncContext
thread_type	libavcodec/avcodec.h	/^    int thread_type;$/;"	m	struct:AVCodecContext
threadnr	libavcodec/w32thread.c	/^    int threadnr;$/;"	m	struct:ThreadContext	file:
threads	libavcodec/pthread.c	/^    PerThreadContext *threads;     \/\/\/< The contexts for each thread.$/;"	m	struct:FrameThreadContext	file:
thres	libavfilter/libmpcodecs/vf_detc.c	/^        int thres[5];$/;"	m	struct:vf_priv_s	file:
thres	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct metrics thres;$/;"	m	struct:vf_priv_s	typeref:struct:vf_priv_s::metrics	file:
thres	libavfilter/libmpcodecs/vf_pp7.c	/^static const int thres[16]={$/;"	v	file:
thres2	libavfilter/libmpcodecs/vf_pp7.c	/^static int thres2[99][16];$/;"	v	file:
thresh	libavfilter/gradfun.h	/^    int thresh;    \/\/\/< threshold for gradient algorithm$/;"	m	struct:__anon17
thresh	libavfilter/libmpcodecs/vf_gradfun.c	/^    int thresh;$/;"	m	struct:vf_priv_s	file:
thresh	libavfilter/libmpcodecs/vf_kerndeint.c	/^    int    thresh;$/;"	m	struct:vf_priv_s	file:
threshold	libavcodec/psymodel.h	/^    float threshold;$/;"	m	struct:FFPsyBand
threshold	libavfilter/libmpcodecs/vf_divtc.c	/^   double threshold;$/;"	m	struct:vf_priv_s	file:
threshold	libavfilter/libmpcodecs/vf_smartblur.c	/^    int threshold;$/;"	m	struct:FilterParam	file:
threshold_mtx	libavfilter/libmpcodecs/vf_fspp.c	/^    uint64_t threshold_mtx[8*2];\/\/used in both C & MMX (& later SSE2) versions$/;"	m	struct:vf_priv_s	file:
threshold_mtx_noq	libavfilter/libmpcodecs/vf_fspp.c	/^    uint64_t threshold_mtx_noq[8*2];$/;"	m	struct:vf_priv_s	file:
ticks_per_frame	libavcodec/avcodec.h	/^    int ticks_per_frame;$/;"	m	struct:AVCodecContext
tid	libavformat/mpegts.c	/^    uint8_t tid;$/;"	m	struct:SectionHeader	file:
tiff_decode_tag	libavcodec/tiff.c	/^static int tiff_decode_tag(TiffContext *s, const uint8_t *start, const uint8_t *buf, const uint8_t *end_buf)$/;"	f	file:
tiff_end	libavcodec/tiff.c	/^static av_cold int tiff_end(AVCodecContext *avctx)$/;"	f	file:
tiff_init	libavcodec/tiff.c	/^static av_cold int tiff_init(AVCodecContext *avctx){$/;"	f	file:
tiff_uncompress	libavcodec/tiff.c	/^static int tiff_uncompress(uint8_t *dst, unsigned long *len, const uint8_t *src, int size)$/;"	f	file:
tiff_unpack_strip	libavcodec/tiff.c	/^static int tiff_unpack_strip(TiffContext *s, uint8_t* dst, int stride, const uint8_t *src, int size, int lines){$/;"	f	file:
tile	libavcodec/j2kdec.c	/^    J2kTile *tile;$/;"	m	struct:__anon98	file:
tile	libavcodec/j2kenc.c	/^    J2kTile *tile;$/;"	m	struct:__anon63	file:
tile_height	libavcodec/ivi_common.h	/^    uint16_t    tile_height;$/;"	m	struct:__anon109
tile_height	libavcodec/j2kdec.c	/^    int tile_width, tile_height; \/\/\/< tile size$/;"	m	struct:__anon98	file:
tile_height	libavcodec/j2kenc.c	/^    int tile_width, tile_height; \/\/\/< tile size$/;"	m	struct:__anon63	file:
tile_offset_x	libavcodec/j2kdec.c	/^    int tile_offset_x, tile_offset_y;$/;"	m	struct:__anon98	file:
tile_offset_y	libavcodec/j2kdec.c	/^    int tile_offset_x, tile_offset_y;$/;"	m	struct:__anon98	file:
tile_width	libavcodec/ivi_common.h	/^    uint16_t    tile_width;$/;"	m	struct:__anon109
tile_width	libavcodec/j2kdec.c	/^    int tile_width, tile_height; \/\/\/< tile size$/;"	m	struct:__anon98	file:
tile_width	libavcodec/j2kenc.c	/^    int tile_width, tile_height; \/\/\/< tile size$/;"	m	struct:__anon63	file:
tiles	libavcodec/ivi_common.h	/^    IVITile         *tiles;         \/\/\/< array of tile descriptors$/;"	m	struct:__anon107
tilt_coef	libavcodec/amrwbdec.c	/^    float                              tilt_coef; \/\/\/< {beta_1} related to the voicing of the previous subframe$/;"	m	struct:__anon64	file:
tilt_factor	libavcodec/amrnbdec.c	/^static float tilt_factor(float *lpc_n, float *lpc_d)$/;"	f	file:
tilt_factor	libavcodec/wmavoice.c	/^static float tilt_factor(const float *lpcs, int n_lpcs)$/;"	f	file:
tilt_mem	libavcodec/amrnbdec.c	/^    float                          tilt_mem; \/\/\/< previous input to tilt compensation filter$/;"	m	struct:AMRContext	file:
tilt_mem	libavcodec/sipr.h	/^    float tilt_mem;$/;"	m	struct:__anon235
time	libavcodec/mpegvideo.h	/^    int64_t time;                   \/\/\/< time of current frame$/;"	m	struct:MpegEncContext
time	libavfilter/vf_drawtext.c	41;"	d	file:
time	libavformat/gif.c	/^    int64_t time, file_time;$/;"	m	struct:__anon385	file:
time	libavformat/matroskadec.c	/^    uint64_t time;$/;"	m	struct:__anon365	file:
time	libavformat/movenc.h	/^    int64_t time;$/;"	m	struct:MOVMuxContext
time	libavformat/movenc.h	/^    uint64_t    time;$/;"	m	struct:MOVIndex
time	libavutil/internal.h	135;"	d
time	libavutil/internal.h	136;"	d
time	libavutil/parseutils.c	506;"	d	file:
time1	ffserver.c	/^    int64_t time1, time2;$/;"	m	struct:__anon498	file:
time2	ffserver.c	/^    int64_t time1, time2;$/;"	m	struct:__anon498	file:
time_base	libavcodec/avcodec.h	/^    AVRational time_base;$/;"	m	struct:AVCodecContext
time_base	libavcodec/dvdata.h	/^    AVRational       time_base;             \/* 1\/framerate *\/$/;"	m	struct:DVprofile
time_base	libavcodec/mpegvideo.h	/^    int time_base;                  \/\/\/< time in seconds of last I,P,S Frame$/;"	m	struct:MpegEncContext
time_base	libavdevice/v4l.c	/^    AVRational time_base;$/;"	m	struct:__anon316	file:
time_base	libavdevice/x11grab.c	/^    AVRational time_base;    \/**< Time base *\/$/;"	m	struct:x11_grab	file:
time_base	libavfilter/avfilter.h	/^    AVRational time_base;$/;"	m	struct:AVFilterLink
time_base	libavfilter/vf_frei0r.c	/^    AVRational time_base;$/;"	m	struct:Frei0rContext	file:
time_base	libavfilter/vsrc_buffer.c	/^    AVRational        time_base;     \/\/\/< time_base to set in the output link$/;"	m	struct:__anon25	file:
time_base	libavfilter/vsrc_color.c	/^    AVRational time_base;$/;"	m	struct:__anon27	file:
time_base	libavformat/audiointerleave.h	/^    AVRational time_base;         \/\/\/< time base of output audio packets$/;"	m	struct:__anon342
time_base	libavformat/avformat.h	/^    AVRational time_base;   \/\/\/< time base in which the start\/end timestamps are specified$/;"	m	struct:AVChapter
time_base	libavformat/avformat.h	/^    AVRational time_base;$/;"	m	struct:AVStream
time_base	libavformat/avformat.h	/^    attribute_deprecated AVRational time_base;$/;"	m	struct:AVFormatParameters
time_base	libavformat/electronicarts.c	/^    AVRational time_base;$/;"	m	struct:EaDemuxContext	file:
time_base	libavformat/gxfenc.c	/^    AVRational time_base;$/;"	m	struct:GXFContext	file:
time_base	libavformat/mxfenc.c	/^    AVRational time_base;$/;"	m	struct:MXFContext	file:
time_base	libavformat/nut.h	/^    AVRational *time_base;$/;"	m	struct:__anon492
time_base	libavformat/nut.h	/^    AVRational *time_base;$/;"	m	struct:__anon493
time_base	libavformat/nut.h	/^    AVRational *time_base;$/;"	m	struct:__anon494
time_base_count	libavformat/nut.h	/^    unsigned int time_base_count;$/;"	m	struct:__anon494
time_base_id	libavformat/nut.h	/^    int time_base_id;$/;"	m	struct:__anon492
time_diff_flag	libavcodec/alsdec.c	/^    int time_diff_flag;$/;"	m	struct:__anon151	file:
time_diff_index	libavcodec/alsdec.c	/^    int time_diff_index;$/;"	m	struct:__anon151	file:
time_diff_sign	libavcodec/alsdec.c	/^    int time_diff_sign;$/;"	m	struct:__anon151	file:
time_frame	libavdevice/fbdev.c	/^    int64_t time_frame;      \/\/\/< time for the next frame to output (in 1\/1000000 units)$/;"	m	struct:__anon314	file:
time_frame	libavdevice/v4l.c	/^    int64_t time_frame;$/;"	m	struct:__anon316	file:
time_frame	libavdevice/x11grab.c	/^    int64_t time_frame;      \/**< Current time *\/$/;"	m	struct:x11_grab	file:
time_increment_bits	libavcodec/mpegvideo.h	/^    int time_increment_bits;        \/\/\/< number of bits to represent the fractional part of time$/;"	m	struct:MpegEncContext
time_index	libavcodec/qdm2.c	/^    short time_index;$/;"	m	struct:__anon197	file:
time_offset	libavformat/isom.h	/^    int64_t time_offset;  \/\/\/< time offset of the first edit list entry$/;"	m	struct:MOVStreamContext
time_offset_length	libavcodec/h264.h	/^    int time_offset_length;$/;"	m	struct:SPS
time_out	libavcodec/dvbsubdec.c	/^    int time_out;$/;"	m	struct:DVBSubContext	file:
time_scale	libavcodec/h264.h	/^    uint32_t time_scale;$/;"	m	struct:SPS
time_scale	libavformat/isom.h	/^    int time_scale;$/;"	m	struct:MOVContext
time_scale	libavformat/isom.h	/^    int time_scale;$/;"	m	struct:MOVStreamContext
time_scale	libavformat/matroskadec.c	/^    double time_scale;$/;"	m	struct:__anon361	file:
time_scale	libavformat/matroskadec.c	/^    uint64_t time_scale;$/;"	m	struct:__anon371	file:
time_value_string	ffprobe.c	/^static char *time_value_string(char *buf, int buf_size, int64_t val, const AVRational *time_base)$/;"	f	file:
timecode	libavformat/matroskadec.c	/^    uint64_t timecode;$/;"	m	struct:__anon373	file:
timecode_base	libavformat/mxfenc.c	/^    int timecode_base;       \/\/\/< rounded time code base (25 or 30)$/;"	m	struct:MXFContext	file:
timecode_drop_frame	libavformat/mxfenc.c	/^    int timecode_drop_frame; \/\/\/< time code use drop frame method frop mpeg-2 essence gop header$/;"	m	struct:MXFContext	file:
timecode_frame_start	libavcodec/avcodec.h	/^    int64_t timecode_frame_start;$/;"	m	struct:AVCodecContext
timecode_start	libavformat/mxfenc.c	/^    int timecode_start;      \/\/\/< frame number computed from mpeg-2 gop header timecode$/;"	m	struct:MXFContext	file:
timecode_track	libavformat/gxfenc.c	/^    GXFStreamContext timecode_track;$/;"	m	struct:GXFContext	file:
timecode_track	libavformat/mxfenc.c	/^    AVStream *timecode_track;$/;"	m	struct:MXFContext	file:
timefilter	libavdevice/dshow.c	/^    TimeFilter *timefilter;$/;"	m	struct:dshow_ctx	file:
timefilter	libavdevice/jack_audio.c	/^    TimeFilter *    timefilter;$/;"	m	struct:__anon315	file:
timeline_le16	libavformat/wtvdec.c	/^static const uint8_t timeline_le16[] =$/;"	v	file:
timeline_table_0_entries_Events_le16	libavformat/wtvdec.c	/^static const uint8_t timeline_table_0_entries_Events_le16[] =$/;"	v	file:
timeout	ffserver.c	/^    int64_t timeout;$/;"	m	struct:HTTPContext	file:
timeout	libavformat/rtsp.h	/^    int timeout;$/;"	m	struct:RTSPMessageHeader
timeout	libavformat/rtsp.h	/^    int timeout;$/;"	m	struct:RTSPState
timer	libavcodec/ass_split.h	/^    float timer;          \/**< time multiplier to apply to SSA clock (in %) *\/$/;"	m	struct:__anon248
timer_start	ffmpeg.c	/^static int64_t timer_start;$/;"	v	file:
timer_start	ffmpeg/ffmpeg.c	/^static int64_t timer_start;$/;"	v	file:
timescale	libavformat/movenc.h	/^    unsigned    timescale;$/;"	m	struct:MOVIndex
timestamp	libavcodec/dca.c	/^    int timestamp;              \/\/\/< embedded time stamp flag$/;"	m	struct:__anon93	file:
timestamp	libavfilter/libmpcodecs/img_format.h	/^    int timestamp; \/\/ pts, 90000 Hz counter based$/;"	m	struct:__anon33
timestamp	libavformat/asf.h	/^    int timestamp;$/;"	m	struct:__anon399
timestamp	libavformat/avformat.h	/^    int64_t timestamp;$/;"	m	struct:AVFormatContext
timestamp	libavformat/avformat.h	/^    int64_t timestamp;$/;"	m	struct:AVIndexEntry
timestamp	libavformat/mxfenc.c	/^    uint64_t timestamp;   \/\/\/< timestamp, as year(16),month(8),day(8),hour(8),minutes(8),msec\/4(8)$/;"	m	struct:MXFContext	file:
timestamp	libavformat/rtmppkt.h	/^    uint32_t       timestamp;  \/\/\/< packet full timestamp$/;"	m	struct:RTMPPacket
timestamp	libavformat/rtpdec.h	/^    uint32_t timestamp;$/;"	m	struct:RTPDemuxContext
timestamp	libavformat/rtpdec_latm.c	/^    uint32_t timestamp;$/;"	m	struct:PayloadContext	file:
timestamp	libavformat/rtpdec_qdm2.c	/^    uint32_t timestamp;        \/\/\/< timestamp of next-to-be-returned packet$/;"	m	struct:PayloadContext	file:
timestamp	libavformat/rtpdec_qt.c	/^    uint32_t timestamp;$/;"	m	struct:PayloadContext	file:
timestamp	libavformat/rtpdec_svq3.c	/^    int64_t        timestamp;$/;"	m	struct:PayloadContext	file:
timestamp	libavformat/rtpdec_vp8.c	/^    uint32_t       timestamp;$/;"	m	struct:PayloadContext	file:
timestamp	libavformat/rtpdec_xiph.c	/^    uint32_t timestamp;$/;"	m	struct:PayloadContext	file:
timestamp	libavformat/rtpenc.h	/^    uint32_t timestamp;$/;"	m	struct:RTPMuxContext
timing_info_present_flag	libavcodec/h264.h	/^    int timing_info_present_flag;$/;"	m	struct:SPS
tincr	doc/examples/muxing-example.c	/^float t, tincr, tincr2;$/;"	v
tincr2	doc/examples/muxing-example.c	/^float t, tincr, tincr2;$/;"	v
tiny	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct metrics tiny, low, high, bigger, twox, max;$/;"	m	struct:frame_stats	typeref:struct:frame_stats::metrics	file:
title	ffserver.c	/^    char title[512];$/;"	m	struct:FFStream	file:
title	libavformat/matroskadec.c	/^    char    *title;$/;"	m	struct:__anon363	file:
title	libavformat/matroskadec.c	/^    char    *title;$/;"	m	struct:__anon371	file:
tm2_apply_deltas	libavcodec/truemotion2.c	/^static inline void tm2_apply_deltas(TM2Context *ctx, int* Y, int stride, int *deltas, int *last)$/;"	f	file:
tm2_build_huff_table	libavcodec/truemotion2.c	/^static int tm2_build_huff_table(TM2Context *ctx, TM2Codes *code)$/;"	f	file:
tm2_decode_blocks	libavcodec/truemotion2.c	/^static int tm2_decode_blocks(TM2Context *ctx, AVFrame *p)$/;"	f	file:
tm2_free_codes	libavcodec/truemotion2.c	/^static void tm2_free_codes(TM2Codes *code)$/;"	f	file:
tm2_get_token	libavcodec/truemotion2.c	/^static inline int tm2_get_token(GetBitContext *gb, TM2Codes *code)$/;"	f	file:
tm2_hi_res_block	libavcodec/truemotion2.c	/^static inline void tm2_hi_res_block(TM2Context *ctx, AVFrame *pic, int bx, int by)$/;"	f	file:
tm2_high_chroma	libavcodec/truemotion2.c	/^static inline void tm2_high_chroma(int *data, int stride, int *last, int *CD, int *deltas)$/;"	f	file:
tm2_low_chroma	libavcodec/truemotion2.c	/^static inline void tm2_low_chroma(int *data, int stride, int *clast, int *CD, int *deltas, int bx)$/;"	f	file:
tm2_low_res_block	libavcodec/truemotion2.c	/^static inline void tm2_low_res_block(TM2Context *ctx, AVFrame *pic, int bx, int by)$/;"	f	file:
tm2_med_res_block	libavcodec/truemotion2.c	/^static inline void tm2_med_res_block(TM2Context *ctx, AVFrame *pic, int bx, int by)$/;"	f	file:
tm2_motion_block	libavcodec/truemotion2.c	/^static inline void tm2_motion_block(TM2Context *ctx, AVFrame *pic, int bx, int by)$/;"	f	file:
tm2_null_res_block	libavcodec/truemotion2.c	/^static inline void tm2_null_res_block(TM2Context *ctx, AVFrame *pic, int bx, int by)$/;"	f	file:
tm2_read_deltas	libavcodec/truemotion2.c	/^static int tm2_read_deltas(TM2Context *ctx, int stream_id) {$/;"	f	file:
tm2_read_header	libavcodec/truemotion2.c	/^static inline int tm2_read_header(TM2Context *ctx, const uint8_t *buf)$/;"	f	file:
tm2_read_stream	libavcodec/truemotion2.c	/^static int tm2_read_stream(TM2Context *ctx, const uint8_t *buf, int stream_id, int buf_size)$/;"	f	file:
tm2_read_tree	libavcodec/truemotion2.c	/^static int tm2_read_tree(TM2Context *ctx, uint32_t prefix, int length, TM2Huff *huff)$/;"	f	file:
tm2_still_block	libavcodec/truemotion2.c	/^static inline void tm2_still_block(TM2Context *ctx, AVFrame *pic, int bx, int by)$/;"	f	file:
tm2_stream_order	libavcodec/truemotion2.c	/^static const int tm2_stream_order[TM2_NUM_STREAMS] = {$/;"	v	file:
tm2_update_block	libavcodec/truemotion2.c	/^static inline void tm2_update_block(TM2Context *ctx, AVFrame *pic, int bx, int by)$/;"	f	file:
tm_shuf	libavcodec/x86/h264_intrapred.asm	/^tm_shuf: times 8 db 0x03, 0x80$/;"	l
tmode_bits	libavcodec/dcahuff.h	/^static const uint8_t tmode_bits[TMODE_COUNT][4] = {$/;"	v
tmode_codes	libavcodec/dcahuff.h	/^static const uint16_t tmode_codes[TMODE_COUNT][4] = {$/;"	v
tmode_vlc_bits	libavcodec/dcahuff.h	/^static const uint8_t tmode_vlc_bits[TMODE_COUNT] = { 3, 3, 3, 2 };$/;"	v
tmp1	libavcodec/truespeech.c	/^    int16_t tmp1[8];    \/\/ coefficients for adding to out$/;"	m	struct:__anon160	file:
tmp2	libavcodec/truespeech.c	/^    int16_t tmp2[8];    \/\/ coefficients for adding to out$/;"	m	struct:__anon160	file:
tmp3	libavcodec/truespeech.c	/^    int16_t tmp3[8];    \/\/ coefficients for adding to out$/;"	m	struct:__anon160	file:
tmpData	libavcodec/roqvideo.h	/^    struct RoqTempData *tmpData;$/;"	m	struct:RoqContext	typeref:struct:RoqContext::RoqTempData
tmp_buf	libavcodec/fft.h	/^    FFTComplex *tmp_buf;$/;"	m	struct:FFTContext
tmp_buf	libavcodec/twinvq.c	/^    float *tmp_buf;$/;"	m	struct:TwinContext	file:
tmp_picture	doc/examples/muxing-example.c	/^AVFrame *picture, *tmp_picture;$/;"	v
tmp_pkt	libavformat/psxstr.c	/^    AVPacket tmp_pkt;$/;"	m	struct:StrChannel	file:
tmp_row	libavcodec/png.h	/^    uint8_t *tmp_row;$/;"	m	struct:PNGDecContext
tmpblock	libavcodec/flashsv.c	/^    uint8_t        *tmpblock;$/;"	m	struct:FlashSVContext	file:
tmpblock	libavcodec/flashsvenc.c	/^    uint8_t        *tmpblock;$/;"	m	struct:FlashSVContext	file:
tmpbuf	libavcodec/fraps.c	/^    uint8_t *tmpbuf;$/;"	m	struct:FrapsContext	file:
tmpbuf_size	libavcodec/fraps.c	/^    int tmpbuf_size;$/;"	m	struct:FrapsContext	file:
tmpfile	configure	/^tmpfile(){$/;"	f
tms470_flags	configure	/^    tms470_flags(){$/;"	f
tmv_decode_close	libavcodec/tmv.c	/^static av_cold int tmv_decode_close(AVCodecContext *avctx)$/;"	f	file:
tmv_decode_frame	libavcodec/tmv.c	/^static int tmv_decode_frame(AVCodecContext *avctx, void *data,$/;"	f	file:
tmv_decode_init	libavcodec/tmv.c	/^static av_cold int tmv_decode_init(AVCodecContext *avctx)$/;"	f	file:
tmv_probe	libavformat/tmv.c	/^static int tmv_probe(AVProbeData *p)$/;"	f	file:
tmv_read_header	libavformat/tmv.c	/^static int tmv_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
tmv_read_packet	libavformat/tmv.c	/^static int tmv_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
tmv_read_seek	libavformat/tmv.c	/^static int tmv_read_seek(AVFormatContext *s, int stream_index,$/;"	f	file:
tnput	libavcodec/tiffenc.c	/^static void tnput(uint8_t ** p, int n, const uint8_t * val, enum TiffTypes type,$/;"	f	file:
tns	libavcodec/aac.h	/^    TemporalNoiseShaping tns;$/;"	m	struct:__anon244
tns_max_bands	libavcodec/aac.h	/^    int tns_max_bands;$/;"	m	struct:__anon239
tns_tmp2_map	libavcodec/aacdectab.h	/^static const float * const tns_tmp2_map[4] = {$/;"	v
tns_tmp2_map_0_3	libavcodec/aacdectab.h	/^static const float tns_tmp2_map_0_3[8] = {$/;"	v
tns_tmp2_map_0_4	libavcodec/aacdectab.h	/^static const float tns_tmp2_map_0_4[16] = {$/;"	v
tns_tmp2_map_1_3	libavcodec/aacdectab.h	/^static const float tns_tmp2_map_1_3[4] = {$/;"	v
tns_tmp2_map_1_4	libavcodec/aacdectab.h	/^static const float tns_tmp2_map_1_4[8] = {$/;"	v
to	libavfilter/libmpcodecs/libvo/video_out.h	/^  int to;$/;"	m	struct:mp_keymap
to_meta_with_crop	libavcodec/a64multienc.c	/^static void to_meta_with_crop(AVCodecContext *avctx, AVFrame *p, int *dest)$/;"	f	file:
toggle	libavutil/opt.c	/^    int toggle;$/;"	m	struct:TestContext	file:
toggle_audio_display	ffplay.c	/^static void toggle_audio_display(void)$/;"	f	file:
toggle_full_screen	ffplay.c	/^static void toggle_full_screen(void)$/;"	f	file:
toggle_pause	ffplay.c	/^static void toggle_pause(void)$/;"	f	file:
tok_lens	libavcodec/truemotion2.c	/^    int tok_lens[TM2_NUM_STREAMS];$/;"	m	struct:TM2Context	file:
tok_ptrs	libavcodec/truemotion2.c	/^    int tok_ptrs[TM2_NUM_STREAMS];$/;"	m	struct:TM2Context	file:
token	libavcodec/vp8.h	/^        uint8_t token[4][16][3][NUM_DCT_TOKENS-1];$/;"	m	struct:__anon182::__anon187
tokens	libavcodec/truemotion2.c	/^    int *tokens[TM2_NUM_STREAMS];$/;"	m	struct:TM2Context	file:
tolower	configure	/^tolower(){$/;"	f
tonal_component	libavcodec/atrac3.c	/^} tonal_component;$/;"	t	typeref:struct:__anon129	file:
tone_level	libavcodec/qdm2.c	/^    float tone_level[MPA_MAX_CHANNELS][30][64];$/;"	m	struct:__anon200	file:
tone_level_idx	libavcodec/qdm2.c	/^    int8_t tone_level_idx[MPA_MAX_CHANNELS][30][64];$/;"	m	struct:__anon200	file:
tone_level_idx_base	libavcodec/qdm2.c	/^    int8_t tone_level_idx_base[MPA_MAX_CHANNELS][30][8];$/;"	m	struct:__anon200	file:
tone_level_idx_hi1	libavcodec/qdm2.c	/^    int8_t tone_level_idx_hi1[MPA_MAX_CHANNELS][3][8][8];$/;"	m	struct:__anon200	file:
tone_level_idx_hi2	libavcodec/qdm2.c	/^    int8_t tone_level_idx_hi2[MPA_MAX_CHANNELS][26];$/;"	m	struct:__anon200	file:
tone_level_idx_mid	libavcodec/qdm2.c	/^    int8_t tone_level_idx_mid[MPA_MAX_CHANNELS][26][8];$/;"	m	struct:__anon200	file:
tone_level_idx_offset_table	libavcodec/qdm2data.h	/^static const int8_t tone_level_idx_offset_table[30][4] = {$/;"	v
tone_level_idx_temp	libavcodec/qdm2.c	/^    int8_t tone_level_idx_temp[MPA_MAX_CHANNELS][30][64];$/;"	m	struct:__anon200	file:
top	libavfilter/libmpcodecs/libvo/video_out.h	/^  int left, right, top, bottom, width, height;$/;"	m	struct:vo_rect
top_blk_idx	libavcodec/vc1.h	/^    int n_allocated_blks, cur_blk_idx, left_blk_idx, topleft_blk_idx, top_blk_idx;$/;"	m	struct:VC1Context
top_blk_sh	libavcodec/vc1.h	/^    int left_blk_sh, top_blk_sh; \/\/\/< Either 3 or 0, positions of l\/t in blk[]$/;"	m	struct:VC1Context
top_border	libavcodec/vp8.h	/^    uint8_t (*top_border)[16+8+8];$/;"	m	struct:__anon182
top_border_u	libavcodec/cavs.h	/^    uint8_t *top_border_y, *top_border_u, *top_border_v;$/;"	m	struct:__anon207
top_border_v	libavcodec/cavs.h	/^    uint8_t *top_border_y, *top_border_u, *top_border_v;$/;"	m	struct:__anon207
top_border_y	libavcodec/cavs.h	/^    uint8_t *top_border_y, *top_border_u, *top_border_v;$/;"	m	struct:__anon207
top_borders	libavcodec/h264.h	/^    uint8_t (*top_borders[2])[(16*3)*2];$/;"	m	struct:H264Context
top_cbp	libavcodec/h264.h	/^    int top_cbp;$/;"	m	struct:H264Context
top_field_first	ffmpeg.c	/^static int top_field_first = -1;$/;"	v	file:
top_field_first	ffmpeg/ffmpeg.c	/^static int top_field_first = -1;$/;"	v	file:
top_field_first	libavcodec/dirac.h	/^    uint8_t top_field_first;$/;"	m	struct:__anon227
top_field_first	libavcodec/mpegvideo.h	/^    int top_field_first;$/;"	m	struct:MpegEncContext
top_field_first	libavdevice/v4l2.c	/^    int top_field_first;$/;"	m	struct:video_data	file:
top_field_first	libavfilter/avfilter.h	/^    int top_field_first;        \/\/\/< field order$/;"	m	struct:AVFilterBufferRefVideoProps
top_field_first	libavformat/yuv4mpeg.c	/^    int top_field_first;$/;"	m	struct:frame_attributes	file:
top_left_mv_flag	libavcodec/wmv2.h	/^    int top_left_mv_flag;$/;"	m	struct:Wmv2Context
top_mb_xy	libavcodec/h264.h	/^    int top_mb_xy;$/;"	m	struct:H264Context
top_mv	libavcodec/cavs.h	/^    cavs_vector *top_mv[2];$/;"	m	struct:__anon207
top_nnz	libavcodec/vp8.h	/^    uint8_t (*top_nnz)[9];$/;"	m	struct:__anon182
top_pred_Y	libavcodec/cavs.h	/^    int *top_pred_Y;$/;"	m	struct:__anon207
top_qp	libavcodec/cavs.h	/^    uint8_t *top_qp;$/;"	m	struct:__anon207
top_samples_available	libavcodec/h264.h	/^    unsigned int top_samples_available;$/;"	m	struct:H264Context
top_slot	libavcodec/lzw.c	/^    int top_slot;               \/\/\/< Highest code for current size$/;"	m	struct:LZWState	file:
top_type	libavcodec/h264.h	/^    int top_type;$/;"	m	struct:H264Context
topleft_blk_idx	libavcodec/vc1.h	/^    int n_allocated_blks, cur_blk_idx, left_blk_idx, topleft_blk_idx, top_blk_idx;$/;"	m	struct:VC1Context
topleft_border_u	libavcodec/cavs.h	/^    uint8_t topleft_border_y, topleft_border_u, topleft_border_v;$/;"	m	struct:__anon207
topleft_border_v	libavcodec/cavs.h	/^    uint8_t topleft_border_y, topleft_border_u, topleft_border_v;$/;"	m	struct:__anon207
topleft_border_y	libavcodec/cavs.h	/^    uint8_t topleft_border_y, topleft_border_u, topleft_border_v;$/;"	m	struct:__anon207
topleft_mb_xy	libavcodec/h264.h	/^    int topleft_mb_xy;$/;"	m	struct:H264Context
topleft_partition	libavcodec/h264.h	/^    int topleft_partition;$/;"	m	struct:H264Context
topleft_samples_available	libavcodec/h264.h	/^    unsigned int topleft_samples_available;$/;"	m	struct:H264Context
topleft_type	libavcodec/h264.h	/^    int topleft_type;$/;"	m	struct:H264Context
topleftx	libavcodec/vc1.h	/^    uint16_t topleftx;$/;"	m	struct:VC1Context
toplefty	libavcodec/vc1.h	/^    uint16_t toplefty;$/;"	m	struct:VC1Context
topright_mb_xy	libavcodec/h264.h	/^    int topright_mb_xy;$/;"	m	struct:H264Context
topright_samples_available	libavcodec/h264.h	/^    unsigned int topright_samples_available;$/;"	m	struct:H264Context
topright_type	libavcodec/h264.h	/^    int topright_type;$/;"	m	struct:H264Context
toright	libavfilter/libmpcodecs/vf_down3dright.c	/^static void toright(unsigned char *dst[3], unsigned char *src[3],$/;"	f	file:
tot_blocks	libavcodec/flashsv2enc.c	/^    double tot_blocks;          \/\/\/< blocks encoded since last keyframe$/;"	m	struct:FlashSV2Context	file:
tot_lines	libavcodec/flashsv2enc.c	/^    double tot_lines;           \/\/\/< total scanlines in image since last keyframe$/;"	m	struct:FlashSV2Context	file:
total_bits	libavcodec/flashsv2enc.c	/^    double total_bits;          \/\/\/< total bits written to stream so far$/;"	m	struct:FlashSV2Context	file:
total_bits	libavcodec/mpegvideo.h	/^    int64_t total_bits;$/;"	m	struct:MpegEncContext
total_channels	libavcodec/dca.c	/^    int total_channels;         \/\/\/< number of channels including extensions$/;"	m	struct:__anon93	file:
total_frames	libavcodec/tta.c	/^    int frame_length, last_frame_length, total_frames;$/;"	m	struct:TTAContext	file:
total_frames	libavformat/rmenc.c	/^    int total_frames; \/* total number of frames *\/$/;"	m	struct:__anon382	file:
total_num_coded_frags	libavcodec/vp3.c	/^    int total_num_coded_frags;$/;"	m	struct:Vp3DecodeContext	file:
total_quant_bits	libavcodec/mpegaudiotab.h	/^static unsigned short total_quant_bits[17];$/;"	v
total_size	libavformat/mpegts.c	/^    int total_size;$/;"	m	struct:PESContext	file:
total_subbands	libavcodec/cook.c	/^    int                 total_subbands;$/;"	m	struct:__anon230	file:
total_zeros_bits	libavcodec/h264_cavlc.c	/^static const uint8_t total_zeros_bits[16][16]= {$/;"	v	file:
total_zeros_len	libavcodec/h264_cavlc.c	/^static const uint8_t total_zeros_len[16][16]= {$/;"	v	file:
total_zeros_vlc	libavcodec/h264_cavlc.c	/^static VLC total_zeros_vlc[15];$/;"	v	file:
total_zeros_vlc_tables	libavcodec/h264_cavlc.c	/^static VLC_TYPE total_zeros_vlc_tables[15][512][2];$/;"	v	file:
total_zeros_vlc_tables_size	libavcodec/h264_cavlc.c	/^static const int total_zeros_vlc_tables_size = 512;$/;"	v	file:
totalframes	libavformat/ape.c	/^    uint32_t totalframes;$/;"	m	struct:__anon335	file:
totalframes	libavformat/tta.c	/^    int totalframes, currentframe;$/;"	m	struct:__anon483	file:
totalsamples	libavformat/ape.c	/^    uint32_t totalsamples;$/;"	m	struct:__anon335	file:
toupper	configure	/^toupper(){$/;"	f
tpel_mc_func	libavcodec/dsputil.h	/^typedef void (*tpel_mc_func)(uint8_t *block\/*align width (8 or 16)*\/, const uint8_t *pixels\/*align 1*\/, int line_size, int w, int h);$/;"	t
tprintf	libavcodec/get_bits.h	603;"	d
tprintf	libavcodec/get_bits.h	606;"	d
tqi_calculate_qtable	libavcodec/eatqi.c	/^static void tqi_calculate_qtable(MpegEncContext *s, int quant)$/;"	f	file:
tqi_decode_end	libavcodec/eatqi.c	/^static av_cold int tqi_decode_end(AVCodecContext *avctx)$/;"	f	file:
tqi_decode_frame	libavcodec/eatqi.c	/^static int tqi_decode_frame(AVCodecContext *avctx,$/;"	f	file:
tqi_decode_init	libavcodec/eatqi.c	/^static av_cold int tqi_decode_init(AVCodecContext *avctx)$/;"	f	file:
tqi_decode_mb	libavcodec/eatqi.c	/^static void tqi_decode_mb(MpegEncContext *s, DCTELEM (*block)[64])$/;"	f	file:
tqi_idct_put	libavcodec/eatqi.c	/^static inline void tqi_idct_put(TqiContext *t, DCTELEM (*block)[64])$/;"	f	file:
track	libavformat/matroskadec.c	/^    uint64_t track;$/;"	m	struct:__anon364	file:
trackDuration	libavformat/movenc.h	/^    int64_t     trackDuration;$/;"	m	struct:MOVIndex
trackID	libavformat/movenc.h	/^    int         trackID;$/;"	m	struct:MOVIndex
track_count	libavformat/4xm.c	/^    int track_count;$/;"	m	struct:FourxmDemuxContext	file:
track_essence_element_key	libavformat/mxfenc.c	/^    UID track_essence_element_key;$/;"	m	struct:__anon458	file:
track_id	libavformat/isom.h	/^    unsigned track_id;$/;"	m	struct:__anon468
track_id	libavformat/isom.h	/^    unsigned track_id;$/;"	m	struct:__anon469
track_id	libavformat/mxfdec.c	/^    int track_id;$/;"	m	struct:__anon442	file:
track_number	libavformat/mxfdec.c	/^    uint8_t track_number[4];$/;"	m	struct:__anon442	file:
track_position	libavcodec/amrnbdata.h	/^static const uint8_t track_position[16] = {$/;"	v
track_type	libavformat/gxfenc.c	/^    uint32_t track_type;$/;"	m	struct:GXFStreamContext	file:
tracknum	libavformat/matroskaenc.c	/^    int             tracknum;$/;"	m	struct:__anon476	file:
tracks	libavformat/4xm.c	/^    AudioTrack *tracks;$/;"	m	struct:FourxmDemuxContext	file:
tracks	libavformat/matroskadec.c	/^    EbmlList tracks;$/;"	m	struct:__anon371	file:
tracks	libavformat/matroskaenc.c	/^    mkv_track       *tracks;$/;"	m	struct:MatroskaMuxContext	file:
tracks	libavformat/movenc.h	/^    MOVTrack *tracks;$/;"	m	struct:MOVMuxContext
tracks_count	libavformat/mxfdec.c	/^    int tracks_count;$/;"	m	struct:__anon445	file:
tracks_refs	libavformat/mxfdec.c	/^    UID *tracks_refs;$/;"	m	struct:__anon445	file:
trackuid	libavformat/matroskadec.c	/^    uint64_t trackuid;$/;"	m	struct:__anon367	file:
trans	libavcodec/binkaudio.c	/^    } trans;$/;"	m	struct:__anon136	typeref:union:__anon136::__anon137	file:
transcode	ffmpeg.c	/^static int transcode(AVFormatContext **output_files,$/;"	f	file:
transcode	ffmpeg/ffmpeg.c	/^static int transcode(AVFormatContext **output_files,$/;"	f	file:
transfer_char	libavcodec/vc1.h	/^    int transfer_char;    \/\/\/< 8bits, Opto-electronic transfer characteristics$/;"	m	struct:VC1Context
transform	libavcodec/j2k.h	/^    uint8_t transform;        \/\/\/< DWT type$/;"	m	struct:__anon210
transform	libavcodec/wmaprodec.c	/^    int8_t  transform;                                        \/\/\/< transform on \/ off$/;"	m	struct:__anon83	file:
transform	libavutil/sha.c	/^    void     (*transform)(uint32_t *state, const uint8_t buffer[64]);$/;"	m	struct:AVSHA	file:
transform_8x8_mode	libavcodec/h264.h	/^    int transform_8x8_mode;     \/\/\/< transform_8x8_mode_flag$/;"	m	struct:PPS
transform_band	libavcodec/wmaprodec.c	/^    int8_t  transform_band[MAX_BANDS];                        \/\/\/< controls if the transform is enabled for a certain band$/;"	m	struct:__anon83	file:
transform_bypass	libavcodec/h264.h	/^    int transform_bypass;              \/\/\/< qpprime_y_zero_transform_bypass_flag$/;"	m	struct:SPS
transformtype	libavcodec/vorbisdec.c	/^    uint16_t      transformtype;$/;"	m	struct:__anon262	file:
transient_huffman	libavcodec/dca.c	/^    int transient_huffman[DCA_PRIM_CHANNELS_MAX];   \/\/\/< transient mode code book$/;"	m	struct:__anon93	file:
transit	libavformat/rtpdec.h	/^    uint32_t transit;           \/\/\/< relative transit time for previous packet$/;"	m	struct:__anon333
transition_mode	libavcodec/dca.c	/^    int transition_mode[DCA_PRIM_CHANNELS_MAX][DCA_SUBBANDS];    \/\/\/< transition mode (transients)$/;"	m	struct:__anon93	file:
transmit_coefs	libavcodec/wmaprodec.c	/^    uint8_t  transmit_coefs;$/;"	m	struct:__anon82	file:
transmit_num_vec_coeffs	libavcodec/wmaprodec.c	/^    int8_t           transmit_num_vec_coeffs;       \/\/\/< number of vector coded coefficients is part of the bitstream$/;"	m	struct:WMAProDecodeCtx	file:
transparency	libavcodec/iff.c	/^    unsigned  transparency; \/\/\/< TODO: transparency color index in palette$/;"	m	struct:__anon114	file:
transparency	libavformat/iff.c	/^    unsigned  transparency; \/\/\/< transparency color index in palette$/;"	m	struct:__anon395	file:
transparent_color_index	libavcodec/gifdec.c	/^    int transparent_color_index;$/;"	m	struct:GifState	file:
transport	libavformat/rtsp.h	/^    enum RTSPTransport transport;$/;"	m	struct:RTSPState	typeref:enum:RTSPState::RTSPTransport
transport	libavformat/rtsp.h	/^    enum RTSPTransport transport;$/;"	m	struct:RTSPTransportField	typeref:enum:RTSPTransportField::RTSPTransport
transport_option	ffserver.c	/^    char transport_option[512];$/;"	m	struct:RTSPActionServerSetup	file:
transport_priv	libavformat/rtsp.h	/^    void *transport_priv; \/**< RTP\/RDT parse context if input, RTP AVFormatContext if output *\/$/;"	m	struct:RTSPStream
transport_stream_id	libavformat/mpegtsenc.c	/^    int transport_stream_id;$/;"	m	struct:MpegTSWrite	file:
transports	libavformat/rtsp.h	/^    RTSPTransportField transports[RTSP_MAX_TRANSPORTS];$/;"	m	struct:RTSPMessageHeader
transpose	libavcodec/vc1dec.c	3519;"	d	file:
transpose1	libpostproc/postprocess_template.c	/^static inline void RENAME(transpose1)(uint8_t *dst1, uint8_t *dst2, uint8_t *src, int srcStride)$/;"	f	file:
transpose2	libpostproc/postprocess_template.c	/^static inline void RENAME(transpose2)(uint8_t *dst, int dstStride, uint8_t *src)$/;"	f	file:
transpose4x16	libavcodec/ppc/h264_altivec.c	572;"	d	file:
transpose4x4	libavcodec/x86/dsputil_mmx.h	/^static inline void transpose4x4(uint8_t *dst, uint8_t *src, x86_reg dst_stride, x86_reg src_stride){$/;"	f
transpose_16x8_char_toPackedAlign_altivec	libpostproc/postprocess_altivec_template.c	/^static inline void transpose_16x8_char_toPackedAlign_altivec(unsigned char* dst, unsigned char* src, int stride) {$/;"	f	file:
transpose_8x16_char_fromPackedAlign_altivec	libpostproc/postprocess_altivec_template.c	/^static inline void transpose_8x16_char_fromPackedAlign_altivec(unsigned char* dst, unsigned char* src, int stride) {$/;"	f	file:
transpose_perm	libavcodec/twinvq.c	/^static void transpose_perm(int16_t *out, int16_t *in, int num_vect,$/;"	f	file:
tree	libavcodec/bink.c	/^    Tree    tree;      \/\/\/< Huffman tree-related data$/;"	m	struct:Bundle	file:
treesize	libavformat/smacker.c	/^    uint32_t treesize;$/;"	m	struct:SmackerContext	file:
tref_id	libavformat/movenc.h	/^    int         tref_id; \/\/\/< trackID of the referenced track$/;"	m	struct:MOVIndex
tref_tag	libavformat/movenc.h	/^    uint32_t    tref_tag;$/;"	m	struct:MOVIndex
trellis	libavcodec/avcodec.h	/^    int trellis;$/;"	m	struct:AVCodecContext
trellis_hash	libavcodec/adpcm.c	/^    uint8_t *trellis_hash;$/;"	m	struct:ADPCMContext	file:
trex_count	libavformat/isom.h	/^    unsigned trex_count;$/;"	m	struct:MOVContext
trex_data	libavformat/isom.h	/^    MOVTrackExt *trex_data;$/;"	m	struct:MOVContext
triple_des	libavutil/des.h	/^    int triple_des;$/;"	m	struct:AVDES
truehd_channels	libavcodec/mlp_parser.c	/^static int truehd_channels(int chanmap)$/;"	f	file:
truemotion1_decode_16bit	libavcodec/truemotion1.c	/^static void truemotion1_decode_16bit(TrueMotion1Context *s)$/;"	f	file:
truemotion1_decode_24bit	libavcodec/truemotion1.c	/^static void truemotion1_decode_24bit(TrueMotion1Context *s)$/;"	f	file:
truemotion1_decode_end	libavcodec/truemotion1.c	/^static av_cold int truemotion1_decode_end(AVCodecContext *avctx)$/;"	f	file:
truemotion1_decode_frame	libavcodec/truemotion1.c	/^static int truemotion1_decode_frame(AVCodecContext *avctx,$/;"	f	file:
truemotion1_decode_header	libavcodec/truemotion1.c	/^static int truemotion1_decode_header(TrueMotion1Context *s)$/;"	f	file:
truemotion1_decode_init	libavcodec/truemotion1.c	/^static av_cold int truemotion1_decode_init(AVCodecContext *avctx)$/;"	f	file:
truespeech_apply_twopoint_filter	libavcodec/truespeech.c	/^static void truespeech_apply_twopoint_filter(TSContext *dec, int quart)$/;"	f	file:
truespeech_correlate_filter	libavcodec/truespeech.c	/^static void truespeech_correlate_filter(TSContext *dec)$/;"	f	file:
truespeech_decode_frame	libavcodec/truespeech.c	/^static int truespeech_decode_frame(AVCodecContext *avctx,$/;"	f	file:
truespeech_decode_init	libavcodec/truespeech.c	/^static av_cold int truespeech_decode_init(AVCodecContext * avctx)$/;"	f	file:
truespeech_filters_merge	libavcodec/truespeech.c	/^static void truespeech_filters_merge(TSContext *dec)$/;"	f	file:
truespeech_place_pulses	libavcodec/truespeech.c	/^static void truespeech_place_pulses(TSContext *dec, int16_t *out, int quart)$/;"	f	file:
truespeech_read_frame	libavcodec/truespeech.c	/^static void truespeech_read_frame(TSContext *dec, const uint8_t *input)$/;"	f	file:
truespeech_save_prevvec	libavcodec/truespeech.c	/^static void truespeech_save_prevvec(TSContext *c)$/;"	f	file:
truespeech_synth	libavcodec/truespeech.c	/^static void truespeech_synth(TSContext *dec, int16_t *out, int quart)$/;"	f	file:
truespeech_update_filters	libavcodec/truespeech.c	/^static void truespeech_update_filters(TSContext *dec, int16_t *out, int quart)$/;"	f	file:
trunc	libavutil/libm.h	/^static av_always_inline av_const double trunc(double x)$/;"	f
truncate	ffserver.c	/^    int truncate;        \/* True if feeder connection truncate the feed file *\/$/;"	m	struct:FFStream	file:
truncf	libavutil/libm.h	/^static av_always_inline av_const float truncf(float x)$/;"	f
truncpasses	libavcodec/j2kenc.c	/^static void truncpasses(J2kEncoderContext *s, J2kTile *tile)$/;"	f	file:
try_8x8basis	libavcodec/dsputil.h	/^    int (*try_8x8basis)(int16_t rem[64], int16_t weight[64], int16_t basis[64], int scale);$/;"	m	struct:DSPContext
try_8x8basis	libavcodec/x86/dsputil_mmx_qns_template.c	/^static int DEF(try_8x8basis)(int16_t rem[64], int16_t weight[64], int16_t basis[64], int scale)$/;"	f	file:
try_8x8basis_c	libavcodec/dsputil.c	/^static int try_8x8basis_c(int16_t rem[64], int16_t weight[64], int16_t basis[64], int scale){$/;"	f	file:
try_decode_frame	libavformat/utils.c	/^static int try_decode_frame(AVStream *st, AVPacket *avpkt, AVDictionary **options)$/;"	f	file:
try_exec	configure	/^try_exec(){$/;"	f
try_shift_candidate	libavcodec/elbg.c	/^static void try_shift_candidate(elbg_data *elbg, int idx[3])$/;"	f	file:
ts	libavformat/mpegts.c	/^    MpegTSContext *ts;$/;"	m	struct:PESContext	file:
ts	libavformat/nut.h	/^    int64_t ts;$/;"	m	struct:__anon490
ts	libavformat/rtpdec.h	/^    struct MpegTSContext *ts;   \/* only used for MP2T payloads *\/$/;"	m	struct:RTPDemuxContext	typeref:struct:RTPDemuxContext::MpegTSContext
ts_cb_0	libavcodec/truespeech_data.h	/^static const int16_t ts_cb_0[32] = {$/;"	v
ts_cb_1	libavcodec/truespeech_data.h	/^static const int16_t ts_cb_1[32] = {$/;"	v
ts_cb_2	libavcodec/truespeech_data.h	/^static const int16_t ts_cb_2[16] = {$/;"	v
ts_cb_3	libavcodec/truespeech_data.h	/^static const int16_t ts_cb_3[16] = {$/;"	v
ts_cb_4	libavcodec/truespeech_data.h	/^static const int16_t ts_cb_4[16] = {$/;"	v
ts_cb_5	libavcodec/truespeech_data.h	/^static const int16_t ts_cb_5[8] = {$/;"	v
ts_cb_6	libavcodec/truespeech_data.h	/^static const int16_t ts_cb_6[8] = {$/;"	v
ts_cb_7	libavcodec/truespeech_data.h	/^static const int16_t ts_cb_7[8] = {$/;"	v
ts_codebook	libavcodec/truespeech_data.h	/^static const int16_t * const ts_codebook[8] = {$/;"	v
ts_decay_35_64	libavcodec/truespeech_data.h	/^static const int16_t ts_decay_35_64[8] =$/;"	v
ts_decay_3_4	libavcodec/truespeech_data.h	/^static const int16_t ts_decay_3_4[8] =$/;"	v
ts_decay_994_1000	libavcodec/truespeech_data.h	/^static const int16_t ts_decay_994_1000[8] =$/;"	v
ts_delta	libavformat/rtmppkt.h	/^    uint32_t       ts_delta;   \/\/\/< timestamp increment to the previous one in milliseconds (latter only for media packets)$/;"	m	struct:RTMPPacket
ts_distance	libavformat/seek.c	/^static int64_t ts_distance(int64_t ts_hi,$/;"	f	file:
ts_hi	libavformat/seek.c	/^    int64_t     ts_hi;       \/\/\/< frame presentation timestamp or same as pos_hi for byte seeking$/;"	m	struct:__anon438	file:
ts_id	libavformat/avformat.h	/^    int ts_id;$/;"	m	struct:AVFormatContext
ts_lo	libavformat/seek.c	/^    int64_t     ts_lo;       \/\/\/< frame presentation timestamp or same as pos_lo for byte seeking$/;"	m	struct:__anon438	file:
ts_order2_coeffs	libavcodec/truespeech_data.h	/^static const int16_t ts_order2_coeffs[25 * 2] = {$/;"	v
ts_packet_pos	libavformat/mpegts.c	/^    int64_t ts_packet_pos; \/**< position of first TS packet of this PES packet *\/$/;"	m	struct:PESContext	file:
ts_pulse_scales	libavcodec/truespeech_data.h	/^static const int16_t ts_pulse_scales[64] = {$/;"	v
ts_pulse_values	libavcodec/truespeech_data.h	/^static const int16_t ts_pulse_values[120] = {$/;"	v
ts_str	tests/seek_test.c	/^static void ts_str(char buffer[60], int64_t ts, AVRational base)$/;"	f	file:
ts_to_string	libavcodec/ass.c	/^static int ts_to_string(char *str, int strlen, int ts)$/;"	f	file:
ts_value_string	ffprobe.c	/^static char *ts_value_string (char *buf, int buf_size, int64_t ts)$/;"	f	file:
tsid	libavformat/mpegtsenc.c	/^    int tsid;$/;"	m	struct:MpegTSWrite	file:
tsin	libavcodec/fft.h	/^    FFTSample *tsin;$/;"	m	struct:FFTContext
tsin	libavcodec/rdft.h	/^    SINTABLE_CONST FFTSample *tsin;$/;"	m	struct:RDFTContext
tt_index	libavcodec/vc1.h	/^    int tt_index;                 \/\/\/< Index for Transform Type tables$/;"	m	struct:VC1Context
tta_channel_layouts	libavcodec/tta.c	/^static const int64_t tta_channel_layouts[7] = {$/;"	v	file:
tta_decode_close	libavcodec/tta.c	/^static av_cold int tta_decode_close(AVCodecContext *avctx) {$/;"	f	file:
tta_decode_frame	libavcodec/tta.c	/^static int tta_decode_frame(AVCodecContext *avctx,$/;"	f	file:
tta_decode_init	libavcodec/tta.c	/^static av_cold int tta_decode_init(AVCodecContext * avctx)$/;"	f	file:
tta_get_unary	libavcodec/tta.c	/^static int tta_get_unary(GetBitContext *gb)$/;"	f	file:
tta_probe	libavformat/tta.c	/^static int tta_probe(AVProbeData *p)$/;"	f	file:
tta_read_header	libavformat/tta.c	/^static int tta_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
tta_read_packet	libavformat/tta.c	/^static int tta_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
tta_read_seek	libavformat/tta.c	/^static int tta_read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
ttafilter_configs	libavcodec/tta.c	/^static const int32_t ttafilter_configs[4][2] = {$/;"	v	file:
ttafilter_init	libavcodec/tta.c	/^static void ttafilter_init(TTAFilter *c, int32_t shift, int32_t mode) {$/;"	f	file:
ttafilter_process	libavcodec/tta.c	/^static inline void ttafilter_process(TTAFilter *c, int32_t *in, int32_t mode) {$/;"	f	file:
ttblk	libavcodec/vc1.h	/^    int *ttblk_base, *ttblk; \/\/\/< Transform type at the block level$/;"	m	struct:VC1Context
ttblk_base	libavcodec/vc1.h	/^    int *ttblk_base, *ttblk; \/\/\/< Transform type at the block level$/;"	m	struct:VC1Context
ttfrm	libavcodec/vc1.h	/^    int ttfrm;            \/\/\/< Transform type info present at frame level$/;"	m	struct:VC1Context
ttl	libavformat/rtsp.h	/^    int ttl;$/;"	m	struct:RTSPTransportField
ttl	libavformat/sdp.c	/^    int ttl;              \/**< TTL, in case of multicast stream *\/$/;"	m	struct:sdp_session_level	file:
ttl	libavformat/udp.c	/^    int ttl;$/;"	m	struct:__anon320	file:
ttmbf	libavcodec/vc1.h	/^    uint8_t ttmbf;        \/\/\/< Transform type flag$/;"	m	struct:VC1Context
tty_demuxer_class	libavformat/tty.c	/^static const AVClass tty_demuxer_class = {$/;"	v	file:
tune	libavcodec/libx264.c	/^    char *tune;$/;"	m	struct:X264Context	file:
tuner_fd	libavdevice/bktr.c	/^    int tuner_fd;$/;"	m	struct:__anon312	file:
twin_decode_close	libavcodec/twinvq.c	/^static av_cold int twin_decode_close(AVCodecContext *avctx)$/;"	f	file:
twin_decode_frame	libavcodec/twinvq.c	/^static int twin_decode_frame(AVCodecContext * avctx, void *data,$/;"	f	file:
twin_decode_init	libavcodec/twinvq.c	/^static av_cold int twin_decode_init(AVCodecContext *avctx)$/;"	f	file:
two_sprites	libavcodec/vc1.h	/^    int two_sprites;$/;"	m	struct:VC1Context
twonear	libavcodec/jpegls.h	/^    int near, twonear;$/;"	m	struct:JLSState
twopass_stats	libavcodec/libvpxenc.c	/^    struct vpx_fixed_buf twopass_stats;$/;"	m	struct:VP8EncoderContext	typeref:struct:VP8EncoderContext::vpx_fixed_buf	file:
twopassbuffer	libavcodec/libxvidff.c	/^    char *twopassbuffer;           \/**< Character buffer for two-pass *\/$/;"	m	struct:xvid_context	file:
twopassfile	libavcodec/libxvidff.c	/^    char *twopassfile;             \/**< second pass temp file name *\/$/;"	m	struct:xvid_context	file:
twoway	libavfilter/libmpcodecs/vf_kerndeint.c	/^    int    twoway;$/;"	m	struct:vf_priv_s	file:
twox	libavfilter/libmpcodecs/vf_filmdint.c	/^    struct metrics tiny, low, high, bigger, twox, max;$/;"	m	struct:frame_stats	typeref:struct:frame_stats::	file:
txd_decode_frame	libavcodec/txd.c	/^static int txd_decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
txd_end	libavcodec/txd.c	/^static av_cold int txd_end(AVCodecContext *avctx) {$/;"	f	file:
txd_init	libavcodec/txd.c	/^static av_cold int txd_init(AVCodecContext *avctx) {$/;"	f	file:
txd_probe	libavformat/txd.c	/^static int txd_probe(AVProbeData * pd) {$/;"	f	file:
txd_read_header	libavformat/txd.c	/^static int txd_read_header(AVFormatContext *s, AVFormatParameters *ap) {$/;"	f	file:
txd_read_packet	libavformat/txd.c	/^static int txd_read_packet(AVFormatContext *s, AVPacket *pkt) {$/;"	f	file:
type	ffmpeg.c	/^    char type;      \/\/< type of metadata to copy -- (g)lobal, (s)tream, (c)hapter or (p)rogram$/;"	m	struct:AVMetaDataMap	file:
type	ffmpeg/ffmpeg.c	/^    char type;      \/\/< type of metadata to copy -- (g)lobal, (s)tream, (c)hapter or (p)rogram$/;"	m	struct:AVMetaDataMap	file:
type	libavcodec/aac.h	/^    enum RawDataBlockType type[8];   \/\/\/< Type of channel element to be coupled - SCE or CPE.$/;"	m	struct:__anon243	typeref:enum:__anon243::RawDataBlockType
type	libavcodec/ass_split.c	/^    int type;$/;"	m	struct:__anon144	file:
type	libavcodec/avcodec.h	/^        enum AVPacketSideDataType type;$/;"	m	struct:AVPacket::__anon99	typeref:enum:AVPacket::__anon99::AVPacketSideDataType
type	libavcodec/avcodec.h	/^    enum AVMediaType type;$/;"	m	struct:AVCodec	typeref:enum:AVCodec::AVMediaType
type	libavcodec/avcodec.h	/^    enum AVMediaType type;$/;"	m	struct:AVHWAccel	typeref:enum:AVHWAccel::AVMediaType
type	libavcodec/avcodec.h	/^    enum AVSubtitleType type;$/;"	m	struct:AVSubtitleRect	typeref:enum:AVSubtitleRect::AVSubtitleType
type	libavcodec/dvbsubdec.c	/^    int type;$/;"	m	struct:DVBSubObject	file:
type	libavcodec/flacenc.c	/^    int type;$/;"	m	struct:FlacSubframe	file:
type	libavcodec/h264data.h	/^    uint16_t type;$/;"	m	struct:IMbInfo
type	libavcodec/h264data.h	/^    uint16_t type;$/;"	m	struct:PMbInfo
type	libavcodec/ivi_common.h	/^    uint8_t     type;     \/\/\/< macroblock type: 0 - INTRA, 1 - INTER$/;"	m	struct:__anon105
type	libavcodec/j2k_dwt.h	/^    uint8_t  type;                       \/\/\/< 0 for 9\/7; 1 for 5\/3$/;"	m	struct:__anon233
type	libavcodec/pnm.h	/^    int type;$/;"	m	struct:PNMContext
type	libavcodec/qdm2.c	/^    int type;            \/\/\/< subpacket type$/;"	m	struct:__anon195	file:
type	libavcodec/rv34.h	/^    int type;              \/\/\/< slice type (intra, inter)$/;"	m	struct:SliceInfo
type	libavcodec/snow.c	/^    uint8_t type;$/;"	m	struct:BlockNode	file:
type	libavcodec/vorbisdec.c	/^    uint16_t      type;$/;"	m	struct:__anon260	file:
type	libavcodec/vorbisenc.c	/^    int type;$/;"	m	struct:__anon191	file:
type	libavcodec/vp56.h	/^    uint8_t type;$/;"	m	struct:__anon222
type	libavdevice/dshow.h	/^    AM_MEDIA_TYPE type;$/;"	m	struct:libAVEnumMediaTypes
type	libavdevice/dshow.h	/^    AM_MEDIA_TYPE type;$/;"	m	struct:libAVPin
type	libavdevice/dshow.h	/^    enum dshowDeviceType type;$/;"	m	struct:libAVFilter	typeref:enum:libAVFilter::dshowDeviceType
type	libavfilter/avfilter.h	/^    enum AVMediaType type;      \/\/\/< filter media type$/;"	m	struct:AVFilterLink	typeref:enum:AVFilterLink::AVMediaType
type	libavfilter/avfilter.h	/^    enum AVMediaType type;      \/\/\/< media type of buffer data$/;"	m	struct:AVFilterBufferRef	typeref:enum:AVFilterBufferRef::AVMediaType
type	libavfilter/avfilter.h	/^    enum AVMediaType type;$/;"	m	struct:AVFilterPad	typeref:enum:AVFilterPad::AVMediaType
type	libavfilter/libmpcodecs/mp_image.h	/^    unsigned char type;$/;"	m	struct:mp_image
type	libavfilter/vf_libopencv.c	/^    int type;$/;"	m	struct:__anon14	file:
type	libavformat/isom.h	/^    uint32_t type;$/;"	m	struct:__anon466
type	libavformat/isom.h	/^    uint32_t type;$/;"	m	struct:__anon467
type	libavformat/matroskadec.c	/^    EbmlType type;$/;"	m	struct:EbmlSyntax	file:
type	libavformat/matroskadec.c	/^    char    *type;$/;"	m	struct:__anon367	file:
type	libavformat/matroskadec.c	/^    uint64_t type;$/;"	m	struct:__anon356	file:
type	libavformat/matroskadec.c	/^    uint64_t type;$/;"	m	struct:__anon359	file:
type	libavformat/matroskadec.c	/^    uint64_t type;$/;"	m	struct:__anon361	file:
type	libavformat/mov.c	/^    uint32_t type;$/;"	m	struct:MOVParseTableEntry	file:
type	libavformat/mpegts.c	/^    enum MpegTSFilterType type;$/;"	m	struct:MpegTSFilter	typeref:enum:MpegTSFilter::MpegTSFilterType	file:
type	libavformat/mxfdec.c	/^    enum MXFMetadataSetType type;$/;"	m	struct:__anon439	typeref:enum:__anon439::MXFMetadataSetType	file:
type	libavformat/mxfdec.c	/^    enum MXFMetadataSetType type;$/;"	m	struct:__anon440	typeref:enum:__anon440::MXFMetadataSetType	file:
type	libavformat/mxfdec.c	/^    enum MXFMetadataSetType type;$/;"	m	struct:__anon441	typeref:enum:__anon441::MXFMetadataSetType	file:
type	libavformat/mxfdec.c	/^    enum MXFMetadataSetType type;$/;"	m	struct:__anon442	typeref:enum:__anon442::MXFMetadataSetType	file:
type	libavformat/mxfdec.c	/^    enum MXFMetadataSetType type;$/;"	m	struct:__anon443	typeref:enum:__anon443::MXFMetadataSetType	file:
type	libavformat/mxfdec.c	/^    enum MXFMetadataSetType type;$/;"	m	struct:__anon444	typeref:enum:__anon444::MXFMetadataSetType	file:
type	libavformat/mxfdec.c	/^    enum MXFMetadataSetType type;$/;"	m	struct:__anon445	typeref:enum:__anon445::MXFMetadataSetType	file:
type	libavformat/mxfdec.c	/^    enum MXFMetadataSetType type;$/;"	m	struct:__anon446	typeref:enum:__anon446::MXFMetadataSetType	file:
type	libavformat/mxfdec.c	/^    enum MXFMetadataSetType type;$/;"	m	struct:__anon448	typeref:enum:__anon448::MXFMetadataSetType	file:
type	libavformat/rtmppkt.h	/^    RTMPPacketType type;       \/\/\/< packet payload type$/;"	m	struct:RTMPPacket
type	libavformat/rtpdec_mpeg4.c	/^    uint16_t    type;$/;"	m	struct:__anon463	file:
type	libavutil/eval.c	/^    } type;$/;"	m	struct:AVExpr	typeref:enum:AVExpr::__anon305	file:
type	libavutil/opt.h	/^    enum AVOptionType type;$/;"	m	struct:AVOption	typeref:enum:AVOption::AVOptionType
type30_dequant	libavcodec/qdm2data.h	/^static const float type30_dequant[8] = {$/;"	v
type34_delta	libavcodec/qdm2data.h	/^static const float type34_delta[10] = { \/\/ FIXME: covers 8 entries..$/;"	v
typeSpool	libavcodec/roqvideoenc.c	/^    int typeSpool;$/;"	m	struct:__anon75	file:
typeSpoolLength	libavcodec/roqvideoenc.c	/^    int typeSpoolLength;$/;"	m	struct:__anon75	file:
type_code	libavcodec/flacenc.c	/^    int type_code;$/;"	m	struct:FlacSubframe	file:
type_last	libavcodec/smacker.c	/^    int mmap_last[3], mclr_last[3], full_last[3], type_last[3];$/;"	m	struct:SmackVContext	file:
type_size	libavformat/smacker.c	/^    uint32_t mmap_size, mclr_size, full_size, type_size;$/;"	m	struct:SmackerContext	file:
type_sizes	libavcodec/tiff.h	/^static const uint8_t type_sizes[6] = {$/;"	v
type_sizes2	libavcodec/tiffenc.c	/^static const uint8_t type_sizes2[6] = {$/;"	v	file:
type_tbl	libavcodec/smacker.c	/^    int *mmap_tbl, *mclr_tbl, *full_tbl, *type_tbl;$/;"	m	struct:SmackVContext	file:
typevalue	libavformat/matroskadec.c	/^    uint64_t typevalue;$/;"	m	struct:__anon367	file:
u	cmdutils.h	/^    } u;$/;"	m	struct:__anon290	typeref:union:__anon290::__anon291
u	ffmpeg/cmdutils.h	/^    } u;$/;"	m	struct:__anon288	typeref:union:__anon288::__anon289
u	libavcodec/cinepak.c	/^    uint8_t  u, v;$/;"	m	struct:__anon279	file:
u	libavcodec/motionpixels_tablegen.h	/^    int8_t y, v, u;$/;"	m	struct:YuvPixel
u	libavcodec/roqvideo.h	/^    unsigned char u, v;$/;"	m	struct:__anon123
u	libavformat/matroskadec.c	/^        uint64_t    u;$/;"	m	union:EbmlSyntax::__anon351	file:
u	libavformat/mpegts.c	/^    } u;$/;"	m	struct:MpegTSFilter	typeref:union:MpegTSFilter::__anon471	file:
u16	libavutil/intreadwrite.h	/^    uint16_t u16;$/;"	m	union:__anon300
u16	libavutil/intreadwrite.h	/^    uint16_t u16[2];$/;"	m	union:__anon299
u16	libavutil/intreadwrite.h	/^    uint16_t u16[4];$/;"	m	union:__anon298
u32	libavutil/aes.c	/^    uint32_t u32[4];$/;"	m	union:__anon296	file:
u32	libavutil/intreadwrite.h	/^    uint32_t u32;$/;"	m	union:__anon299
u32	libavutil/intreadwrite.h	/^    uint32_t u32[2];$/;"	m	union:__anon298
u64	libavutil/aes.c	/^    uint64_t u64[2];$/;"	m	union:__anon296	file:
u64	libavutil/intreadwrite.h	/^    uint64_t u64;$/;"	m	union:__anon298
u8	libavutil/aes.c	/^    uint8_t u8[16];$/;"	m	union:__anon296	file:
u8	libavutil/intreadwrite.h	/^    uint8_t  u8 [2];$/;"	m	union:__anon300
u8	libavutil/intreadwrite.h	/^    uint8_t  u8 [4];$/;"	m	union:__anon299
u8	libavutil/intreadwrite.h	/^    uint8_t  u8 [8];$/;"	m	union:__anon298
u8x4	libavutil/aes.c	/^    uint8_t u8x4[4][4];$/;"	m	union:__anon296	file:
u_superblock_start	libavcodec/vp3.c	/^    int u_superblock_start;$/;"	m	struct:Vp3DecodeContext	file:
ubyte	libswscale/ppc/yuv2rgb_altivec.c	/^typedef unsigned char ubyte;$/;"	t	file:
uc	libavformat/concat.c	/^    URLContext *uc;                \/\/\/< node's URLContext$/;"	m	struct:concat_nodes	file:
udp_close	libavformat/udp.c	/^static int udp_close(URLContext *h)$/;"	f	file:
udp_fd	libavformat/udp.c	/^    int udp_fd;$/;"	m	struct:__anon320	file:
udp_get_file_handle	libavformat/udp.c	/^static int udp_get_file_handle(URLContext *h)$/;"	f	file:
udp_join_multicast_group	libavformat/udp.c	/^static int udp_join_multicast_group(int sockfd, struct sockaddr *addr)$/;"	f	file:
udp_leave_multicast_group	libavformat/udp.c	/^static int udp_leave_multicast_group(int sockfd, struct sockaddr *addr)$/;"	f	file:
udp_open	libavformat/udp.c	/^static int udp_open(URLContext *h, const char *uri, int flags)$/;"	f	file:
udp_port	libavformat/udp.c	/^static int udp_port(struct sockaddr_storage *addr, int addr_len)$/;"	f	file:
udp_read	libavformat/udp.c	/^static int udp_read(URLContext *h, uint8_t *buf, int size)$/;"	f	file:
udp_read_packet	libavformat/rtsp.c	/^static int udp_read_packet(AVFormatContext *s, RTSPStream **prtsp_st,$/;"	f	file:
udp_resolve_host	libavformat/udp.c	/^static struct addrinfo* udp_resolve_host(const char *hostname, int port,$/;"	f	file:
udp_set_multicast_ttl	libavformat/udp.c	/^static int udp_set_multicast_ttl(int sockfd, int mcastTTL,$/;"	f	file:
udp_set_url	libavformat/udp.c	/^static int udp_set_url(struct sockaddr_storage *addr,$/;"	f	file:
udp_socket_create	libavformat/udp.c	/^static int udp_socket_create(UDPContext *s,$/;"	f	file:
udp_write	libavformat/udp.c	/^static int udp_write(URLContext *h, const uint8_t *buf, int size)$/;"	f	file:
uid	libavformat/matroskadec.c	/^    uint64_t uid;$/;"	m	struct:__anon359	file:
uid	libavformat/matroskadec.c	/^    uint64_t uid;$/;"	m	struct:__anon361	file:
uid	libavformat/matroskadec.c	/^    uint64_t uid;$/;"	m	struct:__anon362	file:
uid	libavformat/matroskadec.c	/^    uint64_t uid;$/;"	m	struct:__anon363	file:
uid	libavformat/mxf.h	/^    UID uid;$/;"	m	struct:__anon326
uid	libavformat/mxfdec.c	/^    UID uid;$/;"	m	struct:__anon439	file:
uid	libavformat/mxfdec.c	/^    UID uid;$/;"	m	struct:__anon440	file:
uid	libavformat/mxfdec.c	/^    UID uid;$/;"	m	struct:__anon441	file:
uid	libavformat/mxfdec.c	/^    UID uid;$/;"	m	struct:__anon442	file:
uid	libavformat/mxfdec.c	/^    UID uid;$/;"	m	struct:__anon443	file:
uid	libavformat/mxfdec.c	/^    UID uid;$/;"	m	struct:__anon444	file:
uid	libavformat/mxfdec.c	/^    UID uid;$/;"	m	struct:__anon445	file:
uid	libavformat/mxfdec.c	/^    UID uid;$/;"	m	struct:__anon446	file:
uid	libavformat/mxfenc.c	/^    UID uid;$/;"	m	struct:__anon456	file:
ulaw2linear	libavcodec/pcm_tablegen.h	/^static av_cold int ulaw2linear(unsigned char u_val)$/;"	f
uldq	libavcodec/alpha/asm.h	157;"	d
uldq	libavcodec/alpha/asm.h	85;"	d
ulti_chromas	libavcodec/ulti.c	/^static const uint8_t ulti_chromas[16] =$/;"	v	file:
ulti_codebook	libavcodec/ulti.c	/^    const uint8_t *ulti_codebook;$/;"	m	struct:UltimotionDecodeContext	file:
ulti_codebook	libavcodec/ulti_cb.h	/^static const unsigned char ulti_codebook[16384]={$/;"	v
ulti_convert_yuv	libavcodec/ulti.c	/^static void ulti_convert_yuv(AVFrame *frame, int x, int y,$/;"	f	file:
ulti_decode_end	libavcodec/ulti.c	/^static av_cold int ulti_decode_end(AVCodecContext *avctx){$/;"	f	file:
ulti_decode_frame	libavcodec/ulti.c	/^static int ulti_decode_frame(AVCodecContext *avctx,$/;"	f	file:
ulti_decode_init	libavcodec/ulti.c	/^static av_cold int ulti_decode_init(AVCodecContext *avctx)$/;"	f	file:
ulti_grad	libavcodec/ulti.c	/^static void ulti_grad(AVFrame *frame, int x, int y, uint8_t *Y, int chroma, int angle)$/;"	f	file:
ulti_lumas	libavcodec/ulti.c	/^static const uint8_t ulti_lumas[64] =$/;"	v	file:
ulti_pattern	libavcodec/ulti.c	/^static void ulti_pattern(AVFrame *frame, int x, int y,$/;"	f	file:
umf_length	libavformat/gxfenc.c	/^    uint32_t umf_length;$/;"	m	struct:GXFContext	file:
umf_media_offset	libavformat/gxfenc.c	/^    uint32_t umf_media_offset;$/;"	m	struct:GXFContext	file:
umf_media_size	libavformat/gxfenc.c	/^    uint16_t umf_media_size;$/;"	m	struct:GXFContext	file:
umf_start_offset	libavformat/gxfenc.c	/^    uint32_t umf_start_offset;$/;"	m	struct:GXFContext	file:
umf_track_offset	libavformat/gxfenc.c	/^    uint32_t umf_track_offset;$/;"	m	struct:GXFContext	file:
umf_track_size	libavformat/gxfenc.c	/^    uint16_t umf_track_size;$/;"	m	struct:GXFContext	file:
umh_search	libavcodec/motion_est_template.c	/^static int umh_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
umid	libavformat/mxfenc.c	/^    uint8_t umid[16];        \/\/\/< unique material identifier$/;"	m	struct:MXFContext	file:
umid_ul	libavformat/mxfenc.c	/^static const uint8_t umid_ul[]              = { 0x06,0x0A,0x2B,0x34,0x01,0x01,0x01,0x05,0x01,0x01,0x0D,0x00,0x13 };$/;"	v	file:
umv_fcode_tab	libavcodec/ituh263enc.c	/^static uint8_t umv_fcode_tab[MAX_MV*2+1];$/;"	v	file:
umvplus	libavcodec/mpegvideo.h	/^    int umvplus;                    \/\/\/< == H263+ && unrestricted_mv$/;"	m	struct:MpegEncContext
unaligned_16	libavutil/intreadwrite.h	/^union unaligned_16 { uint16_t l; } __attribute__((packed)) av_alias;$/;"	u
unaligned_32	libavutil/intreadwrite.h	/^union unaligned_32 { uint32_t l; } __attribute__((packed)) av_alias;$/;"	u
unaligned_64	libavutil/intreadwrite.h	/^union unaligned_64 { uint64_t l; } __attribute__((packed)) av_alias;$/;"	u
unaligned_load	libavcodec/ppc/util_altivec.h	/^static inline vector unsigned char unaligned_load(int offset, uint8_t *src)$/;"	f
unaligned_long	libavcodec/alpha/asm.h	/^struct unaligned_long { uint64_t l; } __attribute__((packed));$/;"	s
uncomp_size	libavcodec/flashsv2enc.c	/^    double uncomp_size;         \/\/\/< size of uncompressed data since last keyframe$/;"	m	struct:FlashSV2Context	file:
underline	libavcodec/ass_split.h	/^    int   underline;      \/**< whether text is underlined (1) or not (0) *\/$/;"	m	struct:__anon249
unescape	libavformat/ffmetadec.c	/^static uint8_t *unescape(uint8_t *buf, int size)$/;"	f	file:
ungroup_3_in_7_bits_tab	libavcodec/ac3dec.c	/^static uint8_t ungroup_3_in_7_bits_tab[128][3];$/;"	v	file:
uni_DCtab_chrom_bits	libavcodec/mpeg4videoenc.c	/^static uint16_t uni_DCtab_chrom_bits[512];$/;"	v	file:
uni_DCtab_chrom_len	libavcodec/mpeg4videoenc.c	/^static uint8_t uni_DCtab_chrom_len[512];$/;"	v	file:
uni_DCtab_lum_bits	libavcodec/mpeg4videoenc.c	/^static uint16_t uni_DCtab_lum_bits[512];$/;"	v	file:
uni_DCtab_lum_len	libavcodec/mpeg4videoenc.c	/^static uint8_t uni_DCtab_lum_len[512];$/;"	v	file:
uni_h263_inter_rl_len	libavcodec/ituh263enc.c	/^static uint8_t  uni_h263_inter_rl_len [64*64*2*2];$/;"	v	file:
uni_h263_intra_aic_rl_len	libavcodec/ituh263enc.c	/^static uint8_t  uni_h263_intra_aic_rl_len [64*64*2*2];$/;"	v	file:
uni_mpeg1_ac_vlc_len	libavcodec/mpeg12enc.c	/^static uint8_t  uni_mpeg1_ac_vlc_len [64*64*2];$/;"	v	file:
uni_mpeg2_ac_vlc_len	libavcodec/mpeg12enc.c	/^static uint8_t  uni_mpeg2_ac_vlc_len [64*64*2];$/;"	v	file:
uni_mpeg4_inter_rl_bits	libavcodec/mpeg4videoenc.c	/^static uint32_t uni_mpeg4_inter_rl_bits[64*64*2*2];$/;"	v	file:
uni_mpeg4_inter_rl_len	libavcodec/mpeg4videoenc.c	/^static uint8_t  uni_mpeg4_inter_rl_len [64*64*2*2];$/;"	v	file:
uni_mpeg4_intra_rl_bits	libavcodec/mpeg4videoenc.c	/^static uint32_t uni_mpeg4_intra_rl_bits[64*64*2*2];$/;"	v	file:
uni_mpeg4_intra_rl_len	libavcodec/mpeg4videoenc.c	/^static uint8_t  uni_mpeg4_intra_rl_len [64*64*2*2];$/;"	v	file:
uniform	libavfilter/libmpcodecs/vf_noise.c	/^        int uniform;$/;"	m	struct:FilterParam	file:
uninit	libavcodec/crystalhd.c	/^static av_cold int uninit(AVCodecContext *avctx)$/;"	f	file:
uninit	libavfilter/avfilter.h	/^    void (*uninit)(AVFilterContext *ctx);$/;"	m	struct:AVFilter
uninit	libavfilter/libmpcodecs/libvo/video_out.h	/^    void (*uninit)(void);$/;"	m	struct:vo_functions_s
uninit	libavfilter/libmpcodecs/vf.h	/^    void (*uninit)(struct vf_instance *vf);$/;"	m	struct:vf_instance
uninit	libavfilter/libmpcodecs/vf_blackframe.c	/^static void uninit(struct vf_instance *vf) {$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_decimate.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_delogo.c	/^static void uninit(struct vf_instance *vf){$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_denoise3d.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_detc.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_divtc.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_down3dright.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_dsize.c	/^static void uninit(vf_instance_t *vf) {$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_eq.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_eq2.c	/^void uninit (vf_instance_t *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_field.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_fil.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_filmdint.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_fixpts.c	/^static void uninit(vf_instance_t *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_framestep.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_fspp.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_geq.c	/^static void uninit(struct vf_instance *vf){$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_gradfun.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_harddup.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_hqdn3d.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_hue.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_ivtc.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_kerndeint.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_noise.c	/^static void uninit(struct vf_instance *vf){$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_ow.c	/^static void uninit(struct vf_instance *vf){$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_palette.c	/^static void uninit(vf_instance_t *vf) {$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_perspective.c	/^static void uninit(struct vf_instance *vf){$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_phase.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_pp7.c	/^static void uninit(struct vf_instance *vf){$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_pullup.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_qp.c	/^static void uninit(struct vf_instance *vf){$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_remove_logo.c	/^static void uninit(vf_instance_t *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_sab.c	/^static void uninit(struct vf_instance *vf){$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_screenshot.c	/^static void uninit(vf_instance_t *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_smartblur.c	/^static void uninit(struct vf_instance *vf){$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_softpulldown.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_softskip.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_spp.c	/^static void uninit(struct vf_instance *vf){$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_telecine.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_tile.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_tinterlace.c	/^static void uninit(struct vf_instance *vf)$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_unsharp.c	/^static void uninit( struct vf_instance *vf ) {$/;"	f	file:
uninit	libavfilter/libmpcodecs/vf_uspp.c	/^static void uninit(struct vf_instance *vf){$/;"	f	file:
uninit	libavfilter/vf_crop.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_drawtext.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_fifo.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_frei0r.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_gradfun.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_hqdn3d.c	/^static void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_libopencv.c	/^    void (*uninit)(AVFilterContext *ctx);$/;"	m	struct:__anon13	file:
uninit	libavfilter/vf_libopencv.c	/^    void (*uninit)(AVFilterContext *ctx);$/;"	m	struct:__anon16	file:
uninit	libavfilter/vf_libopencv.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_lut.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_overlay.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_pad.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_pixdesctest.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_scale.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_select.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_setpts.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_unsharp.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vf_yadif.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vsink_buffer.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit	libavfilter/vsrc_movie.c	/^static av_cold void uninit(AVFilterContext *ctx)$/;"	f	file:
uninit_opts	cmdutils.c	/^void uninit_opts(void)$/;"	f
uninit_opts	ffmpeg/cmdutils.c	/^void uninit_opts(void)$/;"	f
unit	libavutil/opt.h	/^    const char *unit;$/;"	m	struct:AVOption
unit_bit_per_second_str	ffprobe.c	/^static const char *unit_bit_per_second_str  = "bit\/s";$/;"	v	file:
unit_byte_str	ffprobe.c	/^static const char *unit_byte_str            = "byte" ;$/;"	v	file:
unit_hertz_str	ffprobe.c	/^static const char *unit_hertz_str           = "Hz"   ;$/;"	v	file:
unit_second_str	ffprobe.c	/^static const char *unit_second_str          = "s"    ;$/;"	v	file:
unix_to_file_time	libavformat/asfenc.c	/^static int64_t unix_to_file_time(int ti)$/;"	f	file:
unknown_flag	libavcodec/svq3.c	/^    int unknown_flag;$/;"	m	struct:__anon141	file:
unlikely	libavcodec/alpha/asm.h	31;"	d
unlikely	libavcodec/alpha/asm.h	34;"	d
unmunge	doc/texi2pod.pl	/^sub unmunge$/;"	s
unpack	libavcodec/eatgv.c	/^static int unpack(const uint8_t *src, const uint8_t *src_end, unsigned char *dst, int width, int height) {$/;"	f	file:
unpack_SQVH	libavcodec/cook.c	/^static int unpack_SQVH(COOKContext *q, COOKSubpacket *p, int category, int* subband_coef_index,$/;"	f	file:
unpack_bitstream	libavcodec/amrnbdec.c	/^static enum Mode unpack_bitstream(AMRContext *p, const uint8_t *buf,$/;"	f	file:
unpack_block_qpis	libavcodec/vp3.c	/^static int unpack_block_qpis(Vp3DecodeContext *s, GetBitContext *gb)$/;"	f	file:
unpack_buffer	libavcodec/vmdav.c	/^    unsigned char *unpack_buffer;$/;"	m	struct:VmdVideoContext	file:
unpack_buffer_size	libavcodec/vmdav.c	/^    int unpack_buffer_size;$/;"	m	struct:VmdVideoContext	file:
unpack_codebook	libavcodec/escape124.c	/^static CodeBook unpack_codebook(GetBitContext* gb, unsigned depth,$/;"	f	file:
unpack_coeffs	libavcodec/snow.c	/^static inline void unpack_coeffs(SnowContext *s, SubBand *b, SubBand * parent, int orientation){$/;"	f	file:
unpack_dct_coeffs	libavcodec/vp3.c	/^static int unpack_dct_coeffs(Vp3DecodeContext *s, GetBitContext *gb)$/;"	f	file:
unpack_modes	libavcodec/vp3.c	/^static int unpack_modes(Vp3DecodeContext *s, GetBitContext *gb)$/;"	f	file:
unpack_parse_unit	libavcodec/dirac_parser.c	/^static int unpack_parse_unit(DiracParseUnit *pu, DiracParseContext *pc,$/;"	f	file:
unpack_roq_cell	libavcodec/roqvideoenc.c	/^static void unpack_roq_cell(roq_cell *cell, uint8_t u[4*3])$/;"	f	file:
unpack_roq_qcell	libavcodec/roqvideoenc.c	/^static void unpack_roq_qcell(uint8_t cb2[], roq_qcell *qcell, uint8_t u[4*4*3])$/;"	f	file:
unpack_superblocks	libavcodec/vp3.c	/^static int unpack_superblocks(Vp3DecodeContext *s, GetBitContext *gb)$/;"	f	file:
unpack_vectors	libavcodec/vp3.c	/^static int unpack_vectors(Vp3DecodeContext *s, GetBitContext *gb)$/;"	f	file:
unpack_vlcs	libavcodec/vp3.c	/^static int unpack_vlcs(Vp3DecodeContext *s, GetBitContext *gb,$/;"	f	file:
unpacked_cb2	libavcodec/roqvideoenc.c	/^    uint8_t unpacked_cb2[MAX_CBS_2x2*2*2*3];$/;"	m	struct:__anon74	file:
unpacked_cb4	libavcodec/roqvideoenc.c	/^    uint8_t unpacked_cb4[MAX_CBS_4x4*4*4*3];$/;"	m	struct:__anon74	file:
unpacked_cb4_enlarged	libavcodec/roqvideoenc.c	/^    uint8_t unpacked_cb4_enlarged[MAX_CBS_4x4*8*8*3];$/;"	m	struct:__anon74	file:
unpkbl	libavcodec/alpha/asm.h	131;"	d
unpkbl	libavcodec/alpha/asm.h	145;"	d
unpkbl	libavcodec/alpha/asm.h	178;"	d
unpkbw	libavcodec/alpha/asm.h	132;"	d
unpkbw	libavcodec/alpha/asm.h	146;"	d
unpkbw	libavcodec/alpha/asm.h	179;"	d
unreference_pic	libavcodec/h264_refs.c	/^static inline int unreference_pic(H264Context *h, Picture *pic, int refmask){$/;"	f	file:
unrestricted_mv	libavcodec/mpegvideo.h	/^    int unrestricted_mv;        \/\/\/< mv can point outside of the coded picture$/;"	m	struct:MpegEncContext
unsharp	libavfilter/libmpcodecs/vf_unsharp.c	/^static void unsharp( uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int width, int height, FilterParam *fp ) {$/;"	f	file:
unsharpen	libavfilter/vf_unsharp.c	/^static void unsharpen(uint8_t *dst, const uint8_t *src, int dst_stride, int src_stride, int width, int height, FilterParam *fp)$/;"	f	file:
unsigned_intra	libavcodec/xvmc.h	/^    int             unsigned_intra;$/;"	m	struct:xvmc_pix_fmt
unwritten_size	libavformat/mpegenc.c	/^    int unwritten_size;$/;"	m	struct:PacketDesc	file:
update	libavfilter/vf_frei0r.c	/^    f0r_update_f update;$/;"	m	struct:Frei0rContext	file:
update	tests/fate.sh	/^update()($/;"	f
updateMMXDitherTables	libswscale/x86/swscale_mmx.c	/^void updateMMXDitherTables(SwsContext *c, int dstY, int lumBufIndex, int chrBufIndex,$/;"	f
updatePacketSize	libavformat/gxfenc.c	/^static int64_t updatePacketSize(AVIOContext *pb, int64_t pos)$/;"	f	file:
updateSize	libavformat/gxfenc.c	/^static int64_t updateSize(AVIOContext *pb, int64_t pos)$/;"	f	file:
updateSize	libavformat/movenc.c	/^static int64_t updateSize(AVIOContext *pb, int64_t pos)$/;"	f	file:
update_altref	libavcodec/vp8.h	/^    int update_altref;$/;"	m	struct:__anon182
update_bap_counts	libavcodec/ac3dsp.h	/^    void (*update_bap_counts)(uint16_t mant_cnt[16], uint8_t *bap, int len);$/;"	m	struct:AC3DSPContext
update_checksum	libavformat/avio.h	/^    unsigned long (*update_checksum)(unsigned long checksum, const uint8_t *buf, unsigned int size);$/;"	m	struct:__anon396
update_context_from_thread	libavcodec/pthread.c	/^static int update_context_from_thread(AVCodecContext *dst, AVCodecContext *src, int for_user)$/;"	f	file:
update_context_from_user	libavcodec/pthread.c	/^static void update_context_from_user(AVCodecContext *dst, AVCodecContext *src)$/;"	f	file:
update_datarate	ffserver.c	/^static void update_datarate(DataRateData *drd, int64_t count)$/;"	f	file:
update_dimensions	libavcodec/vp8.c	/^static int update_dimensions(VP8Context *s, int width, int height)$/;"	f	file:
update_duplicate_context_after_me	libavcodec/mpegvideo_enc.c	/^static void update_duplicate_context_after_me(MpegEncContext *dst, MpegEncContext *src){$/;"	f	file:
update_error_limit	libavcodec/wavpack.c	/^static void update_error_limit(WavpackFrameContext *ctx)$/;"	f	file:
update_frames	libavcodec/vp3.c	/^static void update_frames(AVCodecContext *avctx)$/;"	f	file:
update_golden	libavcodec/vp8.h	/^    int update_golden;  \/\/\/< VP56_FRAME_NONE if not updated, or which frame to copy if so$/;"	m	struct:__anon182
update_high_predictor	libavcodec/g722.c	/^static void update_high_predictor(struct G722Band *band, const int dhigh,$/;"	f	file:
update_initial_durations	libavformat/utils.c	/^static void update_initial_durations(AVFormatContext *s, AVStream *st, AVPacket *pkt)$/;"	f	file:
update_initial_timestamps	libavformat/utils.c	/^static void update_initial_timestamps(AVFormatContext *s, int stream_index,$/;"	f	file:
update_last	libavcodec/vp8.h	/^    int update_last;    \/\/\/< update VP56_FRAME_PREVIOUS with the current one$/;"	m	struct:__anon182
update_last_header_values	libavcodec/snow.c	/^static void update_last_header_values(SnowContext *s){$/;"	f	file:
update_lf_deltas	libavcodec/vp8.c	/^static void update_lf_deltas(VP8Context *s)$/;"	f	file:
update_low_predictor	libavcodec/g722.c	/^static void update_low_predictor(struct G722Band *band, const int ilow)$/;"	f	file:
update_ltp	libavcodec/aacdec.c	/^static void update_ltp(AACContext *ac, SingleChannelElement *sce)$/;"	f	file:
update_map	libavcodec/vp8.h	/^        uint8_t update_map;$/;"	m	struct:__anon182::__anon183
update_map_generation	libavcodec/motion_est.c	/^static inline int update_map_generation(MotionEstContext *c)$/;"	f	file:
update_md5_strings	libavformat/httpauth.c	/^static void update_md5_strings(struct AVMD5 *md5ctx, ...)$/;"	f	file:
update_md5_sum	libavcodec/flacenc.c	/^static void update_md5_sum(FlacEncodeContext *s, const int16_t *samples)$/;"	f	file:
update_noise_reduction	libavcodec/mpegvideo.c	/^static void update_noise_reduction(MpegEncContext *s){$/;"	f	file:
update_palette_index	libavcodec/flashsv2enc.c	/^static int update_palette_index(Palette * palette)$/;"	f	file:
update_predictor	libavcodec/ratecontrol.c	/^static void update_predictor(Predictor *p, double q, double var, double size)$/;"	f	file:
update_probabilities	libavcodec/vp8.h	/^    int update_probabilities;$/;"	m	struct:__anon182
update_qscale	libavcodec/mpegvideo_enc.c	/^static inline void update_qscale(MpegEncContext *s){$/;"	f	file:
update_refs	libavcodec/vp8.c	/^static void update_refs(VP8Context *s)$/;"	f	file:
update_rice	libavcodec/apedec.c	/^static inline void update_rice(APERice *rice, int x)$/;"	f	file:
update_sample_display	ffplay.c	/^static void update_sample_display(VideoState *is, short *samples, int samples_size)$/;"	f	file:
update_state	libavcodec/amrnbdec.c	/^static void update_state(AMRContext *p)$/;"	f	file:
update_sub_state	libavcodec/amrwbdec.c	/^static void update_sub_state(AMRWBContext *ctx)$/;"	f	file:
update_thread_context	libavcodec/avcodec.h	/^    int (*update_thread_context)(AVCodecContext *dst, const AVCodecContext *src);$/;"	m	struct:AVCodec
update_utility_and_n_cb	libavcodec/elbg.c	/^static void update_utility_and_n_cb(elbg_data *elbg, int idx, int newutility)$/;"	f	file:
update_vlc_state	libavcodec/ffv1.c	/^static inline void update_vlc_state(VlcState * const state, const int v){$/;"	f	file:
upper_motion_limit_offset	libavcodec/interplayvideo.c	/^    int upper_motion_limit_offset;$/;"	m	struct:IpvideoContext	file:
upsample_5_4	libavcodec/amrwbdec.c	/^static void upsample_5_4(float *out, const float *in, int o_size)$/;"	f	file:
upsample_fir	libavcodec/amrwbdata.h	/^static const float upsample_fir[4][24] = {$/;"	v
uri	libavformat/applehttp.c	/^     char uri[MAX_URL_SIZE];$/;"	m	struct:key_info	file:
url	ffserver.c	/^    char url[128];$/;"	m	struct:HTTPContext	file:
url	libavformat/applehttp.c	/^    char url[MAX_URL_SIZE];$/;"	m	struct:segment	file:
url	libavformat/applehttp.c	/^    char url[MAX_URL_SIZE];$/;"	m	struct:variant	file:
url	libavformat/applehttpproto.c	/^    char url[MAX_URL_SIZE];$/;"	m	struct:segment	file:
url	libavformat/applehttpproto.c	/^    char url[MAX_URL_SIZE];$/;"	m	struct:variant	file:
url_add_option	libavformat/rtpproto.c	/^static void url_add_option(char *buf, int buf_size, const char *fmt, ...)$/;"	f	file:
url_alloc	libavformat/avio.c	/^int url_alloc(URLContext **puc, const char *filename, int flags)$/;"	f
url_alloc_for_protocol	libavformat/avio.c	/^static int url_alloc_for_protocol (URLContext **puc, struct URLProtocol *up,$/;"	f	file:
url_check	libavformat/avio.h	/^    int (*url_check)(URLContext *h, int mask);$/;"	m	struct:URLProtocol
url_check	libavformat/url.h	/^    int (*url_check)(URLContext *h, int mask);$/;"	m	struct:URLProtocol
url_close	libavformat/avio.c	/^int url_close(URLContext *h)$/;"	f
url_close	libavformat/avio.h	/^    int (*url_close)(URLContext *h);$/;"	m	struct:URLProtocol
url_close	libavformat/url.h	/^    int     (*url_close)(URLContext *h);$/;"	m	struct:URLProtocol
url_close_buf	libavformat/aviobuf.c	/^int url_close_buf(AVIOContext *s)$/;"	f
url_close_dyn_buf	libavformat/aviobuf.c	/^int url_close_dyn_buf(AVIOContext *s, uint8_t **pbuffer)$/;"	f
url_connect	libavformat/avio.c	/^int url_connect(URLContext* uc)$/;"	f
url_exist	libavformat/avio.c	/^int url_exist(const char *filename)$/;"	f
url_fclose	libavformat/aviobuf.c	/^int url_fclose(AVIOContext *s)$/;"	f
url_fdopen	libavformat/aviobuf.c	/^int url_fdopen(AVIOContext **s, URLContext *h)$/;"	f
url_feof	libavformat/aviobuf.c	/^int url_feof(AVIOContext *s)$/;"	f
url_ferror	libavformat/aviobuf.c	/^int url_ferror(AVIOContext *s)$/;"	f
url_fget_max_packet_size	libavformat/aviobuf.c	/^int url_fget_max_packet_size(AVIOContext *s)$/;"	f
url_fgetc	libavformat/aviobuf.c	/^int url_fgetc(AVIOContext *s)$/;"	f
url_fgets	libavformat/aviobuf.c	/^char *url_fgets(AVIOContext *s, char *buf, int buf_size)$/;"	f
url_fileno	libavformat/aviobuf.c	/^URLContext *url_fileno(AVIOContext *s)$/;"	f
url_filesize	libavformat/avio.c	/^int64_t url_filesize(URLContext *h)$/;"	f
url_fopen	libavformat/aviobuf.c	/^int url_fopen(AVIOContext **s, const char *filename, int flags)$/;"	f
url_fprintf	libavformat/aviobuf.c	/^int url_fprintf(AVIOContext *s, const char *fmt, ...)$/;"	f
url_fseek	libavformat/aviobuf.c	/^int64_t url_fseek(AVIOContext *s, int64_t offset, int whence)$/;"	f
url_fsize	libavformat/aviobuf.c	/^int64_t url_fsize(AVIOContext *s)$/;"	f
url_fskip	libavformat/aviobuf.c	/^int url_fskip(AVIOContext *s, int64_t offset)$/;"	f
url_ftell	libavformat/aviobuf.c	/^int64_t url_ftell(AVIOContext *s)$/;"	f
url_get_file_handle	libavformat/avio.c	/^int url_get_file_handle(URLContext *h)$/;"	f
url_get_file_handle	libavformat/avio.h	/^    int (*url_get_file_handle)(URLContext *h);$/;"	m	struct:URLProtocol
url_get_file_handle	libavformat/url.h	/^    int (*url_get_file_handle)(URLContext *h);$/;"	m	struct:URLProtocol
url_get_filename	libavformat/avio.c	/^void url_get_filename(URLContext *h, char *buf, int buf_size)$/;"	f
url_get_max_packet_size	libavformat/avio.c	/^int url_get_max_packet_size(URLContext *h)$/;"	f
url_interrupt_cb	libavformat/avio.c	/^int (*url_interrupt_cb)(void) = default_interrupt_cb;$/;"	v
url_is_streamed	libavformat/avio.h	/^attribute_deprecated static inline int url_is_streamed(AVIOContext *s)$/;"	f
url_open	libavformat/avio.c	/^int url_open(URLContext **puc, const char *filename, int flags)$/;"	f
url_open	libavformat/avio.h	/^    int (*url_open)(URLContext *h, const char *url, int flags);$/;"	m	struct:URLProtocol
url_open	libavformat/url.h	/^    int     (*url_open)( URLContext *h, const char *url, int flags);$/;"	m	struct:URLProtocol
url_open_buf	libavformat/aviobuf.c	/^int url_open_buf(AVIOContext **s, uint8_t *buf, int buf_size, int flags)$/;"	f
url_open_dyn_buf	libavformat/aviobuf.c	/^int url_open_dyn_buf(AVIOContext **s)$/;"	f
url_open_dyn_buf_internal	libavformat/aviobuf.c	/^static int url_open_dyn_buf_internal(AVIOContext **s, int max_packet_size)$/;"	f	file:
url_open_dyn_packet_buf	libavformat/aviobuf.c	/^int url_open_dyn_packet_buf(AVIOContext **s, int max_packet_size)$/;"	f
url_open_protocol	libavformat/avio.c	/^int url_open_protocol (URLContext **puc, struct URLProtocol *up,$/;"	f
url_read	libavformat/avio.c	/^int url_read(URLContext *h, unsigned char *buf, int size)$/;"	f
url_read	libavformat/avio.h	/^    int (*url_read)(URLContext *h, unsigned char *buf, int size);$/;"	m	struct:URLProtocol
url_read	libavformat/url.h	/^    int     (*url_read)( URLContext *h, unsigned char *buf, int size);$/;"	m	struct:URLProtocol
url_read_complete	libavformat/avio.c	/^int url_read_complete(URLContext *h, unsigned char *buf, int size)$/;"	f
url_read_pause	libavformat/avio.h	/^    int (*url_read_pause)(URLContext *h, int pause);$/;"	m	struct:URLProtocol
url_read_pause	libavformat/url.h	/^    int (*url_read_pause)(URLContext *h, int pause);$/;"	m	struct:URLProtocol
url_read_seek	libavformat/avio.h	/^    int64_t (*url_read_seek)(URLContext *h, int stream_index,$/;"	m	struct:URLProtocol
url_read_seek	libavformat/url.h	/^    int64_t (*url_read_seek)(URLContext *h, int stream_index,$/;"	m	struct:URLProtocol
url_resetbuf	libavformat/aviobuf.c	/^static int url_resetbuf(AVIOContext *s, int flags)$/;"	f	file:
url_seek	libavformat/avio.c	/^int64_t url_seek(URLContext *h, int64_t pos, int whence)$/;"	f
url_seek	libavformat/avio.h	/^    int64_t (*url_seek)(URLContext *h, int64_t pos, int whence);$/;"	m	struct:URLProtocol
url_seek	libavformat/url.h	/^    int64_t (*url_seek)( URLContext *h, int64_t pos, int whence);$/;"	m	struct:URLProtocol
url_set_interrupt_cb	libavformat/avio.c	/^void url_set_interrupt_cb(URLInterruptCB *interrupt_cb)$/;"	f
url_setbufsize	libavformat/aviobuf.c	/^int url_setbufsize(AVIOContext *s, int buf_size)$/;"	f
url_write	libavformat/avio.c	/^int url_write(URLContext *h, const unsigned char *buf, int size)$/;"	f
url_write	libavformat/avio.h	/^    int (*url_write)(URLContext *h, const unsigned char *buf, int size);$/;"	m	struct:URLProtocol
url_write	libavformat/url.h	/^    int     (*url_write)(URLContext *h, const unsigned char *buf, int size);$/;"	m	struct:URLProtocol
urlcontext_class	libavformat/avio.c	/^static const AVClass urlcontext_class = {$/;"	v	file:
urlcontext_to_name	libavformat/avio.c	/^static const char *urlcontext_to_name(void *ptr)$/;"	f	file:
usage	doc/texi2pod.pl	/^sub usage$/;"	s
usage	tools/graph2dot.c	/^static void usage(void)$/;"	f	file:
usage	tools/pktdumper.c	/^static int usage(int ret)$/;"	f	file:
usage_count	libavfilter/libmpcodecs/mp_image.h	/^    int usage_count;$/;"	m	struct:mp_image
use15_7	libavcodec/flashsv2enc.c	/^    int use15_7, dist, comp;$/;"	m	struct:FlashSV2Context	file:
use15_7_threshold	libavcodec/flashsv2enc.c	/^static const double use15_7_threshold = 8192;$/;"	v	file:
usePal	libswscale/swscale_internal.h	504;"	d
use_bit_reservoir	libavcodec/wma.h	/^    int use_bit_reservoir;$/;"	m	struct:WMACodecContext
use_byte_value_binary_prefix	ffprobe.c	/^static int use_byte_value_binary_prefix = 0;$/;"	v	file:
use_color	libavutil/log.c	/^static int use_color=-1;$/;"	v	file:
use_custom_palette	libavcodec/flashsv2enc.c	/^    uint8_t use_custom_palette;$/;"	m	struct:FlashSV2Context	file:
use_dr1	ffplay.c	/^    int use_dr1;$/;"	m	struct:__anon2	file:
use_exp_vlc	libavcodec/wma.h	/^    int use_exp_vlc;                        \/\/\/< exponent coding: 0 = lsp, 1 = vlc + delta$/;"	m	struct:WMACodecContext
use_huffman	libavcodec/vp56.h	/^    int use_huffman;$/;"	m	struct:vp56_context
use_ic	libavcodec/vc1.h	/^    int use_ic;                   \/\/\/< use intensity compensation in B-frames$/;"	m	struct:VC1Context
use_intra_dc_vlc	libavcodec/mpegvideo.h	/^    int use_intra_dc_vlc;$/;"	m	struct:MpegEncContext
use_kb_window	libavcodec/aac.h	/^    uint8_t use_kb_window[2];   \/\/\/< If set, use Kaiser-Bessel window, otherwise use a sinus window.$/;"	m	struct:__anon239
use_kerning	libavfilter/vf_drawtext.c	/^    int use_kerning;                \/\/\/< font kerning is used - true\/false$/;"	m	struct:__anon24	file:
use_ltp	libavcodec/alsdec.c	/^    int          *use_ltp;          \/\/\/< if true, long-term prediction is used$/;"	m	struct:__anon153	file:
use_ltp	libavcodec/alsdec.c	/^    int *use_ltp;                   \/\/\/< contains use_ltp flags for all channels$/;"	m	struct:__anon152	file:
use_mmap	libavdevice/v4l.c	/^    int use_mmap;$/;"	m	struct:__anon316	file:
use_noise_coding	libavcodec/wma.h	/^    int use_noise_coding;                   \/\/\/< true if perceptual noise is added$/;"	m	struct:WMACodecContext
use_odml	libavformat/avidec.c	/^    int use_odml;$/;"	m	struct:__anon451	file:
use_preamble	libavformat/spdifenc.c	/^    int use_preamble;               \/\/\/< preamble enabled (disabled for exactly pre-padded DTS)$/;"	m	struct:IEC61937Context	file:
use_quant_matrix	libavcodec/intrax8.h	/^    int use_quant_matrix;$/;"	m	struct:__anon134
use_random_h	libavfilter/vf_slicify.c	/^    int use_random_h;   \/\/\/< enable the use of random slice height values$/;"	m	struct:__anon22	file:
use_shm	libavdevice/x11grab.c	/^    int use_shm;             \/**< !0 when using XShm extension *\/$/;"	m	struct:x11_grab	file:
use_skip_mb_code	libavcodec/mpegvideo.h	/^    int use_skip_mb_code;$/;"	m	struct:MpegEncContext
use_value_prefix	ffprobe.c	/^static int use_value_prefix             = 0;$/;"	v	file:
use_value_sexagesimal_format	ffprobe.c	/^static int use_value_sexagesimal_format = 0;$/;"	v	file:
use_variable_block_len	libavcodec/wma.h	/^    int use_variable_block_len;$/;"	m	struct:WMACodecContext
use_weight	libavcodec/h264.h	/^    int use_weight;$/;"	m	struct:H264Context
use_weight_chroma	libavcodec/h264.h	/^    int use_weight_chroma;$/;"	m	struct:H264Context
used	libavcodec/aac.h	/^    int8_t used[MAX_LTP_LONG_SFB];$/;"	m	struct:__anon238
used	libavcodec/idcinvideo.c	/^  unsigned char used;$/;"	m	struct:__anon65	file:
usedCB2	libavcodec/roqvideoenc.c	/^    int usedCB2[MAX_CBS_2x2];$/;"	m	struct:__anon74	file:
usedCB4	libavcodec/roqvideoenc.c	/^    int usedCB4[MAX_CBS_4x4];$/;"	m	struct:__anon74	file:
used_option	libavcodec/roqvideoenc.c	/^    int used_option[4];$/;"	m	struct:RoqTempData	file:
user	libavformat/sdp.c	/^    const char *user;     \/**< username of the session's creator *\/$/;"	m	struct:sdp_session_level	file:
user_data	libavcodec/libvo-aacenc.c	/^    VO_CODEC_INIT_USERDATA user_data;$/;"	m	struct:AACContext	file:
user_specified_pts	libavcodec/mpegvideo.h	/^    int64_t user_specified_pts;\/\/\/< last non zero pts from AVFrame which was passed into avcodec_encode_video()$/;"	m	struct:MpegEncContext
uses_vdpau	libavcodec/mpeg12.c	/^static inline int uses_vdpau(AVCodecContext *avctx) {$/;"	f	file:
using_stdin	ffmpeg.c	/^static int using_stdin = 0;$/;"	v	file:
using_stdin	ffmpeg/ffmpeg.c	/^static int using_stdin = 0;$/;"	v	file:
usl7	libavcodec/indeo3.c	/^    int usl7;$/;"	m	struct:ustr	file:
ustr	libavcodec/indeo3.c	/^struct ustr {$/;"	s	file:
utf8len	libavformat/movenc.c	/^static int utf8len(const uint8_t *b)$/;"	f	file:
utility	libavcodec/elbg.c	/^    int *utility;$/;"	m	struct:__anon247	file:
utility_inc	libavcodec/elbg.c	/^    int *utility_inc;$/;"	m	struct:__anon247	file:
uuid_base	libavformat/mxfenc.c	/^static const uint8_t uuid_base[]            = { 0xAD,0xAB,0x44,0x24,0x2f,0x25,0x4d,0xc7,0x92,0xff,0x29,0xbd };$/;"	v	file:
uv_h	libavcodec/indeo3.c	/^    unsigned short uv_w, uv_h;$/;"	m	struct:__anon54	file:
uv_hshift	libavcodec/libtheoraenc.c	/^    int         uv_hshift;$/;"	m	struct:TheoraContext	file:
uv_vshift	libavcodec/libtheoraenc.c	/^    int         uv_vshift;$/;"	m	struct:TheoraContext	file:
uv_w	libavcodec/indeo3.c	/^    unsigned short uv_w, uv_h;$/;"	m	struct:__anon54	file:
uvlinesize	libavcodec/mpegvideo.h	/^    int uvlinesize;            \/\/\/< line size, for chroma in bytes, may be different from width$/;"	m	struct:MpegEncContext
uvlinesize	libavcodec/vp8.h	/^    int uvlinesize;$/;"	m	struct:__anon182
uvsamp	libavcodec/vc1.h	/^    uint8_t uvsamp;$/;"	m	struct:VC1Context
uvstride	libavcodec/mpegvideo.h	/^    int uvstride;$/;"	m	struct:MotionEstContext
uyvyToUV	libswscale/x86/swscale_template.c	/^static void RENAME(uyvyToUV)(uint8_t *dstU, uint8_t *dstV,$/;"	f	file:
uyvyToUV_c	libswscale/swscale_template.c	/^static inline void uyvyToUV_c(uint8_t *dstU, uint8_t *dstV, const uint8_t *src1,$/;"	f	file:
uyvyToY	libswscale/x86/swscale_template.c	/^static void RENAME(uyvyToY)(uint8_t *dst, const uint8_t *src,$/;"	f	file:
uyvyToY_c	libswscale/swscale_template.c	/^static inline void uyvyToY_c(uint8_t *dst, const uint8_t *src, int width,$/;"	f	file:
uyvyToYuv420Wrapper	libswscale/swscale_unscaled.c	/^static int uyvyToYuv420Wrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
uyvyToYuv422Wrapper	libswscale/swscale_unscaled.c	/^static int uyvyToYuv422Wrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
uyvytoyuv420	libswscale/rgb2rgb.c	/^void (*uyvytoyuv420)(uint8_t *ydst, uint8_t *udst, uint8_t *vdst, const uint8_t *src,$/;"	v
uyvytoyuv420	libswscale/x86/rgb2rgb_template.c	/^static void RENAME(uyvytoyuv420)(uint8_t *ydst, uint8_t *udst, uint8_t *vdst, const uint8_t *src,$/;"	f	file:
uyvytoyuv420_c	libswscale/rgb2rgb_template.c	/^static void uyvytoyuv420_c(uint8_t *ydst, uint8_t *udst, uint8_t *vdst,$/;"	f	file:
uyvytoyuv422	libswscale/rgb2rgb.c	/^void (*uyvytoyuv422)(uint8_t *ydst, uint8_t *udst, uint8_t *vdst, const uint8_t *src,$/;"	v
uyvytoyuv422	libswscale/x86/rgb2rgb_template.c	/^static void RENAME(uyvytoyuv422)(uint8_t *ydst, uint8_t *udst, uint8_t *vdst, const uint8_t *src,$/;"	f	file:
uyvytoyuv422_c	libswscale/rgb2rgb_template.c	/^static void uyvytoyuv422_c(uint8_t *ydst, uint8_t *udst, uint8_t *vdst,$/;"	f	file:
uyvytoyv12	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(uyvytoyv12)(const uint8_t *src, uint8_t *ydst, uint8_t *udst, uint8_t *vdst,$/;"	f	file:
uyvytoyv12_c	libswscale/rgb2rgb_template.c	/^static inline void uyvytoyv12_c(const uint8_t *src, uint8_t *ydst,$/;"	f	file:
uyvytoyv12_unscaled	libswscale/bfin/swscale_bfin.c	/^static int uyvytoyv12_unscaled(SwsContext *c, uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
v	libavcodec/cinepak.c	/^    uint8_t  u, v;$/;"	m	struct:__anon279	file:
v	libavcodec/gsmdec_data.h	/^    int v[9];$/;"	m	struct:__anon67
v	libavcodec/motionpixels_tablegen.h	/^    int8_t y, v, u;$/;"	m	struct:YuvPixel
v	libavcodec/ppc/regs.h	30;"	d
v	libavcodec/ppc/regs.h	34;"	d
v	libavcodec/roqvideo.h	/^    unsigned char u, v;$/;"	m	struct:__anon123
v	libavcodec/vc1_parser.c	/^    VC1Context v;$/;"	m	struct:__anon138	file:
v	libavutil/integer.h	/^    uint16_t v[AV_INTEGER_SIZE];$/;"	m	struct:AVInteger
v0	libavcodec/alpha/regdef.h	26;"	d
v1	libavcodec/smacker.c	/^    VLC *v1, *v2;$/;"	m	struct:DBCtx	file:
v1_codebook	libavcodec/cinepak.c	/^    cvid_codebook     v1_codebook[256];$/;"	m	struct:__anon280	file:
v2	libavcodec/smacker.c	/^    VLC *v1, *v2;$/;"	m	struct:DBCtx	file:
v2_dc_chroma_table	libavcodec/msmpeg4.c	/^static uint32_t v2_dc_chroma_table[512][2];$/;"	v	file:
v2_dc_chroma_vlc	libavcodec/msmpeg4.c	/^static VLC v2_dc_chroma_vlc;$/;"	v	file:
v2_dc_lum_table	libavcodec/msmpeg4.c	/^static uint32_t v2_dc_lum_table[512][2];$/;"	v	file:
v2_dc_lum_vlc	libavcodec/msmpeg4.c	/^static VLC v2_dc_lum_vlc;$/;"	v	file:
v2_intra_cbpc	libavcodec/msmpeg4data.c	/^const uint8_t v2_intra_cbpc[4][2] = {$/;"	v
v2_intra_cbpc_vlc	libavcodec/msmpeg4.c	/^static VLC v2_intra_cbpc_vlc;$/;"	v	file:
v2_mb_type	libavcodec/msmpeg4data.c	/^const uint8_t v2_mb_type[8][2] = {$/;"	v
v2_mb_type_vlc	libavcodec/msmpeg4.c	/^static VLC v2_mb_type_vlc;$/;"	v	file:
v2_mv_vlc	libavcodec/msmpeg4.c	/^static VLC v2_mv_vlc;$/;"	v	file:
v4_codebook	libavcodec/cinepak.c	/^    cvid_codebook     v4_codebook[256];$/;"	m	struct:__anon280	file:
v4l2_class	libavdevice/v4l2.c	/^static const AVClass v4l2_class = {$/;"	v	file:
v4l2_fmt	libavdevice/v4l2.c	/^    uint32_t v4l2_fmt;$/;"	m	struct:fmt_map	file:
v4l2_read_close	libavdevice/v4l2.c	/^static int v4l2_read_close(AVFormatContext *s1)$/;"	f	file:
v4l2_read_header	libavdevice/v4l2.c	/^static int v4l2_read_header(AVFormatContext *s1, AVFormatParameters *ap)$/;"	f	file:
v4l2_read_packet	libavdevice/v4l2.c	/^static int v4l2_read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
v4l2_set_parameters	libavdevice/v4l2.c	/^static int v4l2_set_parameters(AVFormatContext *s1, AVFormatParameters *ap)$/;"	f	file:
v4l_class	libavdevice/v4l.c	/^static const AVClass v4l_class = {$/;"	v	file:
v4l_mm_read_picture	libavdevice/v4l.c	/^static int v4l_mm_read_picture(VideoData *s, uint8_t *buf)$/;"	f	file:
vBlur	libavfilter/libmpcodecs/vf_boxblur.c	/^static void vBlur(uint8_t *dst, uint8_t *src, int w, int h, int dstStride, int srcStride, int radius, int power){$/;"	f	file:
vCCoeffsBank	libswscale/swscale_internal.h	/^    vector signed short   *vYCoeffsBank, *vCCoeffsBank;$/;"	m	struct:SwsContext
vChrBufSize	libswscale/swscale_internal.h	/^    int       vChrBufSize;        \/\/\/< Number of vertical chroma     lines allocated in the ring buffer.$/;"	m	struct:SwsContext
vChrDrop	libswscale/swscale_internal.h	/^    int vChrDrop;                 \/\/\/< Binary logarithm of extra vertical subsampling factor in source image chroma planes specified by user.$/;"	m	struct:SwsContext
vChrFilter	libswscale/swscale_internal.h	/^    int16_t *vChrFilter;          \/\/\/< Array of vertical   filter coefficients for chroma     planes.$/;"	m	struct:SwsContext
vChrFilterPos	libswscale/swscale_internal.h	/^    int16_t *vChrFilterPos;       \/\/\/< Array of vertical   filter starting positions for each dst[i] for chroma     planes.$/;"	m	struct:SwsContext
vChrFilterSize	libswscale/swscale_internal.h	/^    int      vChrFilterSize;      \/\/\/< Vertical   filter size for chroma     pixels.$/;"	m	struct:SwsContext
vChromaSubSample	libpostproc/postprocess_internal.h	/^    int vChromaSubSample;$/;"	m	struct:PPContext
vLumBufSize	libswscale/swscale_internal.h	/^    int       vLumBufSize;        \/\/\/< Number of vertical luma\/alpha lines allocated in the ring buffer.$/;"	m	struct:SwsContext
vLumFilter	libswscale/swscale_internal.h	/^    int16_t *vLumFilter;          \/\/\/< Array of vertical   filter coefficients for luma\/alpha planes.$/;"	m	struct:SwsContext
vLumFilterPos	libswscale/swscale_internal.h	/^    int16_t *vLumFilterPos;       \/\/\/< Array of vertical   filter starting positions for each dst[i] for luma\/alpha planes.$/;"	m	struct:SwsContext
vLumFilterSize	libswscale/swscale_internal.h	/^    int      vLumFilterSize;      \/\/\/< Vertical   filter size for luma\/alpha pixels.$/;"	m	struct:SwsContext
vYCoeffsBank	libswscale/swscale_internal.h	/^    vector signed short   *vYCoeffsBank, *vCCoeffsBank;$/;"	m	struct:SwsContext
v_block_filter	libavcodec/error_resilience.c	/^static void v_block_filter(MpegEncContext *s, uint8_t *dst, int w, int h, int stride, int is_luma){$/;"	f	file:
v_count	libavcodec/mjpegdec.h	/^    int v_count[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext
v_edge_pos	libavcodec/mpegvideo.h	/^    int h_edge_pos, v_edge_pos;\/\/\/< horizontal \/ vertical position of the right\/bottom edge (pixel replication)$/;"	m	struct:MpegEncContext
v_id	libavformat/nuv.c	/^    int v_id;$/;"	m	struct:__anon387	file:
v_max	libavcodec/mjpegdec.h	/^    int h_max, v_max; \/* maximum h and v counts *\/$/;"	m	struct:MJpegDecodeContext
v_scount	libavcodec/mjpegdec.h	/^    int v_scount[MAX_COMPONENTS];$/;"	m	struct:MJpegDecodeContext
v_subpel_filters	libavcodec/ppc/vp8dsp_altivec.c	/^static const vec_u8 v_subpel_filters[7] =$/;"	v	file:
v_superblock_start	libavcodec/vp3.c	/^    int v_superblock_start;$/;"	m	struct:Vp3DecodeContext	file:
va_pics	libavcodec/vaapi_h264.c	/^    VAPictureH264 *va_pics;     \/\/\/< Pointer to VAPictureParameterBufferH264.ReferenceFrames array$/;"	m	struct:DPB	file:
vaapi_context	libavcodec/vaapi.h	/^struct vaapi_context {$/;"	s
vaapi_mpeg2_decode_slice	libavcodec/vaapi_mpeg2.c	/^static int vaapi_mpeg2_decode_slice(AVCodecContext *avctx, const uint8_t *buffer, uint32_t size)$/;"	f	file:
vaapi_mpeg2_end_frame	libavcodec/vaapi_mpeg2.c	/^static int vaapi_mpeg2_end_frame(AVCodecContext *avctx)$/;"	f	file:
vaapi_mpeg2_start_frame	libavcodec/vaapi_mpeg2.c	/^static int vaapi_mpeg2_start_frame(AVCodecContext *avctx, av_unused const uint8_t *buffer, av_unused uint32_t size)$/;"	f	file:
vaapi_mpeg4_decode_slice	libavcodec/vaapi_mpeg4.c	/^static int vaapi_mpeg4_decode_slice(AVCodecContext *avctx, const uint8_t *buffer, uint32_t size)$/;"	f	file:
vaapi_mpeg4_end_frame	libavcodec/vaapi_mpeg4.c	/^static int vaapi_mpeg4_end_frame(AVCodecContext *avctx)$/;"	f	file:
vaapi_mpeg4_start_frame	libavcodec/vaapi_mpeg4.c	/^static int vaapi_mpeg4_start_frame(AVCodecContext *avctx, av_unused const uint8_t *buffer, av_unused uint32_t size)$/;"	f	file:
vaapi_vc1_decode_slice	libavcodec/vaapi_vc1.c	/^static int vaapi_vc1_decode_slice(AVCodecContext *avctx, const uint8_t *buffer, uint32_t size)$/;"	f	file:
vaapi_vc1_end_frame	libavcodec/vaapi_vc1.c	/^static int vaapi_vc1_end_frame(AVCodecContext *avctx)$/;"	f	file:
vaapi_vc1_start_frame	libavcodec/vaapi_vc1.c	/^static int vaapi_vc1_start_frame(AVCodecContext *avctx, av_unused const uint8_t *buffer, av_unused uint32_t size)$/;"	f	file:
vad	libavcodec/amrwbdata.h	/^    uint16_t vad;                          \/\/\/< voice activity detection flag$/;"	m	struct:__anon111
val	libavcodec/huffyuv.c	/^    uint64_t val;$/;"	m	struct:__anon201	file:
val	libavcodec/j2k.h	/^    uint8_t val;$/;"	m	struct:J2kTgtNode
val	libavcodec/vp56data.h	/^  int8_t val;$/;"	m	struct:__anon148
val	libavformat/avformat.h	/^    int64_t val, num, den;$/;"	m	struct:AVFrac
val_bits	libavcodec/truemotion2.c	/^    int val_bits; \/\/\/< length of literal$/;"	m	struct:TM2Huff	file:
validate_acl	ffserver.c	/^static int validate_acl(FFStream *stream, HTTPContext *c)$/;"	f	file:
validate_acl_list	ffserver.c	/^static int validate_acl_list(IPAddressACL *in_acl, HTTPContext *c)$/;"	f	file:
validate_codec_tag	libavformat/utils.c	/^static int validate_codec_tag(AVFormatContext *s, AVStream *st)$/;"	f	file:
validate_float_option	libavcodec/ac3enc.c	/^static int validate_float_option(float v, const float *v_list, int v_list_size)$/;"	f	file:
validate_metadata	libavcodec/ac3enc.c	/^static int validate_metadata(AVCodecContext *avctx)$/;"	f	file:
validate_mix_level	libavcodec/ac3enc.c	/^static void validate_mix_level(void *log_ctx, const char *opt_name,$/;"	f	file:
validate_options	libavcodec/ac3enc.c	/^static av_cold int validate_options(AVCodecContext *avctx, AC3EncodeContext *s)$/;"	f	file:
validate_thread_parameters	libavcodec/pthread.c	/^static void validate_thread_parameters(AVCodecContext *avctx)$/;"	f	file:
valtab	libavcodec/ivi_common.h	/^    int8_t      valtab[256];$/;"	m	struct:__anon104
value	libavcodec/dnxhdenc.h	/^    int value;$/;"	m	struct:__anon162
value	libavcodec/g722.c	/^        int value;$/;"	m	struct:__anon140::TrellisPath	file:
value	libavcodec/wavpack.c	/^    int value;$/;"	m	struct:Decorr	file:
value	libavfilter/libmpcodecs/vf.h	/^    int value;$/;"	m	struct:vf_seteq_s
value	libavformat/avformat.h	/^    int value;$/;"	m	struct:AVInputFormat
value	libavutil/dict.h	/^    char *value;$/;"	m	struct:__anon295
value	libavutil/eval.c	/^    double value; \/\/ is sign in other types$/;"	m	struct:AVExpr	file:
value_string	ffprobe.c	/^static char *value_string(char *buf, int buf_size, double val, const char *unit)$/;"	f	file:
values	libavcodec/smacker.c	/^    int *values;$/;"	m	struct:HuffContext	file:
values	libavcodec/vorbisenc.c	/^    int values;$/;"	m	struct:__anon190	file:
var	libavfilter/libmpcodecs/pullup.h	/^    int (*var)(unsigned char *, unsigned char *, int);$/;"	m	struct:pullup_context
var	libavfilter/libmpcodecs/pullup.h	/^    int *var;$/;"	m	struct:pullup_field
var	libavutil/eval.c	/^    double var[VARS];$/;"	m	struct:Parser	file:
var0	libavcodec/aac.h	/^    float var0;$/;"	m	struct:__anon237
var1	libavcodec/aac.h	/^    float var1;$/;"	m	struct:__anon237
var_diamond_search	libavcodec/motion_est_template.c	/^static int var_diamond_search(MpegEncContext * s, int *best, int dmin,$/;"	f	file:
var_name	libavfilter/vf_crop.c	/^enum var_name {$/;"	g	file:
var_name	libavfilter/vf_lut.c	/^enum var_name {$/;"	g	file:
var_name	libavfilter/vf_overlay.c	/^enum var_name {$/;"	g	file:
var_name	libavfilter/vf_pad.c	/^enum var_name {$/;"	g	file:
var_name	libavfilter/vf_scale.c	/^enum var_name {$/;"	g	file:
var_name	libavfilter/vf_select.c	/^enum var_name {$/;"	g	file:
var_name	libavfilter/vf_setpts.c	/^enum var_name {$/;"	g	file:
var_name	libavfilter/vf_settb.c	/^enum var_name {$/;"	g	file:
var_name	libavfilter/vsrc_nullsrc.c	/^enum var_name {$/;"	g	file:
var_names	libavfilter/vf_crop.c	/^static const char *var_names[] = {$/;"	v	file:
var_names	libavfilter/vf_lut.c	/^static const char *var_names[] = {$/;"	v	file:
var_names	libavfilter/vf_overlay.c	/^static const char *var_names[] = {$/;"	v	file:
var_names	libavfilter/vf_pad.c	/^static const char *var_names[] = {$/;"	v	file:
var_names	libavfilter/vf_scale.c	/^static const char *var_names[] = {$/;"	v	file:
var_names	libavfilter/vf_select.c	/^static const char *var_names[] = {$/;"	v	file:
var_names	libavfilter/vf_setpts.c	/^static const char *var_names[] = {$/;"	v	file:
var_names	libavfilter/vf_settb.c	/^static const char *var_names[] = {$/;"	v	file:
var_names	libavfilter/vsrc_nullsrc.c	/^static const char *var_names[] = {$/;"	v	file:
var_values	libavfilter/vf_crop.c	/^    double var_values[VAR_VARS_NB];$/;"	m	struct:__anon5	file:
var_values	libavfilter/vf_lut.c	/^    double var_values[VAR_VARS_NB];$/;"	m	struct:__anon23	file:
var_values	libavfilter/vf_select.c	/^    double var_values[VAR_VARS_NB];$/;"	m	struct:__anon10	file:
var_values	libavfilter/vf_setpts.c	/^    double var_values[VAR_VARS_NB];$/;"	m	struct:__anon40	file:
var_values	libavfilter/vf_settb.c	/^    double var_values[VAR_VARS_NB];$/;"	m	struct:__anon51	file:
var_values	libavfilter/vsrc_nullsrc.c	/^    double var_values[VAR_VARS_NB];$/;"	m	struct:__anon9	file:
var_y	libavfilter/libmpcodecs/pullup.c	/^static int var_y(unsigned char *a, unsigned char *b, int s)$/;"	f	file:
var_y_mmx	libavfilter/libmpcodecs/pullup.c	/^static int var_y_mmx(unsigned char *a, unsigned char *b, int s)$/;"	f	file:
variance	libavutil/lls.h	/^    double variance[MAX_VARS];$/;"	m	struct:LLSModel
variant	libavformat/applehttp.c	/^struct variant {$/;"	s	file:
variant	libavformat/applehttpproto.c	/^struct variant {$/;"	s	file:
variant_info	libavformat/applehttp.c	/^struct variant_info {$/;"	s	file:
variant_info	libavformat/applehttpproto.c	/^struct variant_info {$/;"	s	file:
variants	libavformat/applehttp.c	/^    struct variant **variants;$/;"	m	struct:AppleHTTPContext	typeref:struct:AppleHTTPContext::variant	file:
variants	libavformat/applehttpproto.c	/^    struct variant **variants;$/;"	m	struct:AppleHTTPContext	typeref:struct:AppleHTTPContext::variant	file:
varinfo	libavdevice/fbdev.c	/^    struct fb_var_screeninfo varinfo; \/\/\/< variable info;$/;"	m	struct:__anon314	typeref:struct:__anon314::fb_var_screeninfo	file:
vb	libavcodec/libvorbis.c	/^    vorbis_block vb ;$/;"	m	struct:OggVorbisContext	file:
vb_decode_framedata	libavcodec/vb.c	/^static int vb_decode_framedata(VBDecContext *c, const uint8_t *buf, int data_size, int offset)$/;"	f	file:
vb_decode_palette	libavcodec/vb.c	/^static void vb_decode_palette(VBDecContext *c, int data_size)$/;"	f	file:
vb_patterns	libavcodec/vb.c	/^static const uint16_t vb_patterns[64] = {$/;"	v	file:
vbm_tree	libavcodec/wmavoice.c	/^    int8_t vbm_tree[25];          \/\/\/< converts VLC codes to frame type$/;"	m	struct:__anon157	file:
vbv_delay	libavcodec/avcodec.h	/^    uint64_t vbv_delay;$/;"	m	struct:AVCodecContext
vbv_delay_ptr	libavcodec/mpegvideo.h	/^    uint8_t *vbv_delay_ptr;  \/\/\/< pointer to vbv_delay in the bitstream$/;"	m	struct:MpegEncContext
vc	libavcodec/libvorbis.c	/^    vorbis_comment vc ;$/;"	m	struct:OggVorbisContext	file:
vc1	libavcodec/vdpau.h	/^        VdpPictureInfoVC1          vc1;$/;"	m	union:vdpau_render_state::VdpPictureInfo
vc1_ac_sizes	libavcodec/vc1acdata.h	/^static const int vc1_ac_sizes[AC_MODES] = {$/;"	v
vc1_ac_tables	libavcodec/vc1acdata.h	/^static const uint32_t vc1_ac_tables[AC_MODES][186][2] = {$/;"	v
vc1_apply_p_h_loop_filter	libavcodec/vc1dec.c	/^static av_always_inline void vc1_apply_p_h_loop_filter(VC1Context *v, int block_num)$/;"	f	file:
vc1_apply_p_loop_filter	libavcodec/vc1dec.c	/^static void vc1_apply_p_loop_filter(VC1Context *v)$/;"	f	file:
vc1_apply_p_v_loop_filter	libavcodec/vc1dec.c	/^static av_always_inline void vc1_apply_p_v_loop_filter(VC1Context *v, int block_num)$/;"	f	file:
vc1_b_mc	libavcodec/vc1dec.c	/^static inline void vc1_b_mc(VC1Context *v, int dmv_x[2], int dmv_y[2], int direct, int mode)$/;"	f	file:
vc1_class	libavcodec/crystalhd.c	/^static AVClass vc1_class = {$/;"	v	file:
vc1_coded_block_pred	libavcodec/vc1dec.c	/^static inline int vc1_coded_block_pred(MpegEncContext * s, int n, uint8_t **coded_block_ptr)$/;"	f	file:
vc1_decode_ac_coeff	libavcodec/vc1dec.c	/^static void vc1_decode_ac_coeff(VC1Context *v, int *last, int *skip, int *value, int codingset)$/;"	f	file:
vc1_decode_b_blocks	libavcodec/vc1dec.c	/^static void vc1_decode_b_blocks(VC1Context *v)$/;"	f	file:
vc1_decode_b_mb	libavcodec/vc1dec.c	/^static void vc1_decode_b_mb(VC1Context *v)$/;"	f	file:
vc1_decode_blocks	libavcodec/vc1dec.c	/^static void vc1_decode_blocks(VC1Context *v)$/;"	f	file:
vc1_decode_end	libavcodec/vc1dec.c	/^static av_cold int vc1_decode_end(AVCodecContext *avctx)$/;"	f	file:
vc1_decode_entry_point	libavcodec/vc1.c	/^int vc1_decode_entry_point(AVCodecContext *avctx, VC1Context *v, GetBitContext *gb)$/;"	f
vc1_decode_frame	libavcodec/vc1dec.c	/^static int vc1_decode_frame(AVCodecContext *avctx,$/;"	f	file:
vc1_decode_i_block	libavcodec/vc1dec.c	/^static int vc1_decode_i_block(VC1Context *v, DCTELEM block[64], int n, int coded, int codingset)$/;"	f	file:
vc1_decode_i_block_adv	libavcodec/vc1dec.c	/^static int vc1_decode_i_block_adv(VC1Context *v, DCTELEM block[64], int n, int coded, int codingset, int mquant)$/;"	f	file:
vc1_decode_i_blocks	libavcodec/vc1dec.c	/^static void vc1_decode_i_blocks(VC1Context *v)$/;"	f	file:
vc1_decode_i_blocks_adv	libavcodec/vc1dec.c	/^static void vc1_decode_i_blocks_adv(VC1Context *v)$/;"	f	file:
vc1_decode_init	libavcodec/vc1dec.c	/^static av_cold int vc1_decode_init(AVCodecContext *avctx)$/;"	f	file:
vc1_decode_intra_block	libavcodec/vc1dec.c	/^static int vc1_decode_intra_block(VC1Context *v, DCTELEM block[64], int n, int coded, int mquant, int codingset)$/;"	f	file:
vc1_decode_p_block	libavcodec/vc1dec.c	/^static int vc1_decode_p_block(VC1Context *v, DCTELEM block[64], int n, int mquant, int ttmb, int first_block,$/;"	f	file:
vc1_decode_p_blocks	libavcodec/vc1dec.c	/^static void vc1_decode_p_blocks(VC1Context *v)$/;"	f	file:
vc1_decode_p_mb	libavcodec/vc1dec.c	/^static int vc1_decode_p_mb(VC1Context *v)$/;"	f	file:
vc1_decode_sequence_header	libavcodec/vc1.c	/^int vc1_decode_sequence_header(AVCodecContext *avctx, VC1Context *v, GetBitContext *gb)$/;"	f
vc1_decode_skip_blocks	libavcodec/vc1dec.c	/^static void vc1_decode_skip_blocks(VC1Context *v)$/;"	f	file:
vc1_delta_level_table	libavcodec/vc1acdata.h	/^static const uint8_t vc1_delta_level_table[AC_MODES][31] = {$/;"	v
vc1_delta_run_table	libavcodec/vc1acdata.h	/^static const uint8_t vc1_delta_run_table[AC_MODES][57] = {$/;"	v
vc1_extract_headers	libavcodec/vc1_parser.c	/^static void vc1_extract_headers(AVCodecParserContext *s, AVCodecContext *avctx,$/;"	f	file:
vc1_filter_line	libavcodec/vc1dsp.c	/^static av_always_inline int vc1_filter_line(uint8_t* src, int stride, int pq){$/;"	f	file:
vc1_find_frame_end	libavcodec/vc1_parser.c	/^static int vc1_find_frame_end(ParseContext *pc, const uint8_t *buf,$/;"	f	file:
vc1_get_MVMODE	libavcodec/vaapi_vc1.c	/^static inline VAMvModeVC1 vc1_get_MVMODE(VC1Context *v)$/;"	f	file:
vc1_get_MVMODE2	libavcodec/vaapi_vc1.c	/^static inline VAMvModeVC1 vc1_get_MVMODE2(VC1Context *v)$/;"	f	file:
vc1_get_PTYPE	libavcodec/vaapi_vc1.c	/^static int vc1_get_PTYPE(VC1Context *v)$/;"	f	file:
vc1_get_TTFRM	libavcodec/vaapi_vc1.c	/^static inline int vc1_get_TTFRM(VC1Context *v)$/;"	f	file:
vc1_h_loop_filter16	libavcodec/vc1dsp.h	/^    void (*vc1_h_loop_filter16)(uint8_t *src, int stride, int pq);$/;"	m	struct:VC1DSPContext
vc1_h_loop_filter16_c	libavcodec/vc1dsp.c	/^static void vc1_h_loop_filter16_c(uint8_t *src, int stride, int pq)$/;"	f	file:
vc1_h_loop_filter16_sse4	libavcodec/x86/vc1dsp_mmx.c	/^static void vc1_h_loop_filter16_sse4(uint8_t *src, int stride, int pq)$/;"	f	file:
vc1_h_loop_filter4	libavcodec/vc1dsp.h	/^    void (*vc1_h_loop_filter4)(uint8_t *src, int stride, int pq);$/;"	m	struct:VC1DSPContext
vc1_h_loop_filter4_c	libavcodec/vc1dsp.c	/^static void vc1_h_loop_filter4_c(uint8_t *src, int stride, int pq)$/;"	f	file:
vc1_h_loop_filter8	libavcodec/vc1dsp.h	/^    void (*vc1_h_loop_filter8)(uint8_t *src, int stride, int pq);$/;"	m	struct:VC1DSPContext
vc1_h_loop_filter8_c	libavcodec/vc1dsp.c	/^static void vc1_h_loop_filter8_c(uint8_t *src, int stride, int pq)$/;"	f	file:
vc1_h_overlap	libavcodec/vc1dsp.h	/^    void (*vc1_h_overlap)(uint8_t *src, int stride);$/;"	m	struct:VC1DSPContext
vc1_h_overlap_c	libavcodec/vc1dsp.c	/^static void vc1_h_overlap_c(uint8_t* src, int stride)$/;"	f	file:
vc1_h_s_overlap	libavcodec/vc1dsp.h	/^    void (*vc1_h_s_overlap)(DCTELEM *left, DCTELEM *right);$/;"	m	struct:VC1DSPContext
vc1_h_s_overlap_c	libavcodec/vc1dsp.c	/^static void vc1_h_s_overlap_c(DCTELEM *left, DCTELEM *right)$/;"	f	file:
vc1_has_ACPRED_bitplane	libavcodec/vaapi_vc1.c	/^static inline int vc1_has_ACPRED_bitplane(VC1Context *v)$/;"	f	file:
vc1_has_DIRECTMB_bitplane	libavcodec/vaapi_vc1.c	/^static inline int vc1_has_DIRECTMB_bitplane(VC1Context *v)$/;"	f	file:
vc1_has_MVTYPEMB_bitplane	libavcodec/vaapi_vc1.c	/^static inline int vc1_has_MVTYPEMB_bitplane(VC1Context *v)$/;"	f	file:
vc1_has_OVERFLAGS_bitplane	libavcodec/vaapi_vc1.c	/^static inline int vc1_has_OVERFLAGS_bitplane(VC1Context *v)$/;"	f	file:
vc1_has_SKIPMB_bitplane	libavcodec/vaapi_vc1.c	/^static inline int vc1_has_SKIPMB_bitplane(VC1Context *v)$/;"	f	file:
vc1_i_pred_dc	libavcodec/vc1dec.c	/^static inline int vc1_i_pred_dc(MpegEncContext *s, int overlap, int pq, int n,$/;"	f	file:
vc1_index_decode_table	libavcodec/vc1acdata.h	/^static const uint8_t vc1_index_decode_table[AC_MODES][185][2] = {$/;"	v
vc1_init_common	libavcodec/vc1dec.c	/^static int vc1_init_common(VC1Context *v)$/;"	f	file:
vc1_interp_mc	libavcodec/vc1dec.c	/^static void vc1_interp_mc(VC1Context *v)$/;"	f	file:
vc1_inv_trans_4x4	libavcodec/vc1dsp.h	/^    void (*vc1_inv_trans_4x4)(uint8_t *dest, int line_size, DCTELEM *block);$/;"	m	struct:VC1DSPContext
vc1_inv_trans_4x4_c	libavcodec/vc1dsp.c	/^static void vc1_inv_trans_4x4_c(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f	file:
vc1_inv_trans_4x4_dc	libavcodec/vc1dsp.h	/^    void (*vc1_inv_trans_4x4_dc)(uint8_t *dest, int line_size, DCTELEM *block);$/;"	m	struct:VC1DSPContext
vc1_inv_trans_4x4_dc_c	libavcodec/vc1dsp.c	/^static void vc1_inv_trans_4x4_dc_c(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f	file:
vc1_inv_trans_4x4_dc_mmx2	libavcodec/x86/vc1dsp_mmx.c	/^static void vc1_inv_trans_4x4_dc_mmx2(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f	file:
vc1_inv_trans_4x8	libavcodec/vc1dsp.h	/^    void (*vc1_inv_trans_4x8)(uint8_t *dest, int line_size, DCTELEM *block);$/;"	m	struct:VC1DSPContext
vc1_inv_trans_4x8_c	libavcodec/vc1dsp.c	/^static void vc1_inv_trans_4x8_c(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f	file:
vc1_inv_trans_4x8_dc	libavcodec/vc1dsp.h	/^    void (*vc1_inv_trans_4x8_dc)(uint8_t *dest, int line_size, DCTELEM *block);$/;"	m	struct:VC1DSPContext
vc1_inv_trans_4x8_dc_c	libavcodec/vc1dsp.c	/^static void vc1_inv_trans_4x8_dc_c(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f	file:
vc1_inv_trans_4x8_dc_mmx2	libavcodec/x86/vc1dsp_mmx.c	/^static void vc1_inv_trans_4x8_dc_mmx2(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f	file:
vc1_inv_trans_8x4	libavcodec/vc1dsp.h	/^    void (*vc1_inv_trans_8x4)(uint8_t *dest, int line_size, DCTELEM *block);$/;"	m	struct:VC1DSPContext
vc1_inv_trans_8x4_altivec	libavcodec/ppc/vc1dsp_altivec.c	/^static void vc1_inv_trans_8x4_altivec(uint8_t *dest, int stride, DCTELEM *block)$/;"	f	file:
vc1_inv_trans_8x4_c	libavcodec/vc1dsp.c	/^static void vc1_inv_trans_8x4_c(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f	file:
vc1_inv_trans_8x4_dc	libavcodec/vc1dsp.h	/^    void (*vc1_inv_trans_8x4_dc)(uint8_t *dest, int line_size, DCTELEM *block);$/;"	m	struct:VC1DSPContext
vc1_inv_trans_8x4_dc_c	libavcodec/vc1dsp.c	/^static void vc1_inv_trans_8x4_dc_c(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f	file:
vc1_inv_trans_8x4_dc_mmx2	libavcodec/x86/vc1dsp_mmx.c	/^static void vc1_inv_trans_8x4_dc_mmx2(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f	file:
vc1_inv_trans_8x8	libavcodec/vc1dsp.h	/^    void (*vc1_inv_trans_8x8)(DCTELEM *b);$/;"	m	struct:VC1DSPContext
vc1_inv_trans_8x8_altivec	libavcodec/ppc/vc1dsp_altivec.c	/^static void vc1_inv_trans_8x8_altivec(DCTELEM block[64])$/;"	f	file:
vc1_inv_trans_8x8_c	libavcodec/vc1dsp.c	/^static void vc1_inv_trans_8x8_c(DCTELEM block[64])$/;"	f	file:
vc1_inv_trans_8x8_dc	libavcodec/vc1dsp.h	/^    void (*vc1_inv_trans_8x8_dc)(uint8_t *dest, int line_size, DCTELEM *block);$/;"	m	struct:VC1DSPContext
vc1_inv_trans_8x8_dc_c	libavcodec/vc1dsp.c	/^static void vc1_inv_trans_8x8_dc_c(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f	file:
vc1_inv_trans_8x8_dc_mmx2	libavcodec/x86/vc1dsp_mmx.c	/^static void vc1_inv_trans_8x8_dc_mmx2(uint8_t *dest, int linesize, DCTELEM *block)$/;"	f	file:
vc1_last_decode_table	libavcodec/vc1acdata.h	/^static const int vc1_last_decode_table[AC_MODES] = {$/;"	v
vc1_last_delta_level_table	libavcodec/vc1acdata.h	/^static const uint8_t vc1_last_delta_level_table[AC_MODES][44] = {$/;"	v
vc1_last_delta_run_table	libavcodec/vc1acdata.h	/^static const uint8_t vc1_last_delta_run_table[AC_MODES][10] = {$/;"	v
vc1_loop_filter	libavcodec/vc1dsp.c	/^static inline void vc1_loop_filter(uint8_t* src, int step, int stride, int len, int pq)$/;"	f	file:
vc1_loop_filter_iblk	libavcodec/vc1dec.c	/^static void vc1_loop_filter_iblk(VC1Context *v, int pq)$/;"	f	file:
vc1_loop_filter_iblk_delayed	libavcodec/vc1dec.c	/^static void vc1_loop_filter_iblk_delayed(VC1Context *v, int pq)$/;"	f	file:
vc1_mc_1mv	libavcodec/vc1dec.c	/^static void vc1_mc_1mv(VC1Context *v, int dir)$/;"	f	file:
vc1_mc_4mv_chroma	libavcodec/vc1dec.c	/^static void vc1_mc_4mv_chroma(VC1Context *v)$/;"	f	file:
vc1_mc_4mv_luma	libavcodec/vc1dec.c	/^static void vc1_mc_4mv_luma(VC1Context *v, int n)$/;"	f	file:
vc1_mspel_filter	libavcodec/vc1dsp.c	/^static av_always_inline int vc1_mspel_filter(const uint8_t *src, int stride, int mode, int r)$/;"	f	file:
vc1_mspel_mc_filter_8bits	libavcodec/x86/vc1dsp_mmx.c	/^typedef void (*vc1_mspel_mc_filter_8bits)(uint8_t *dst, const uint8_t *src, x86_reg stride, int rnd, x86_reg offset);$/;"	t	file:
vc1_mspel_mc_filter_hor_16bits	libavcodec/x86/vc1dsp_mmx.c	/^typedef void (*vc1_mspel_mc_filter_hor_16bits)(uint8_t *dst, x86_reg dst_stride, const int16_t *src, int rnd);$/;"	t	file:
vc1_mspel_mc_filter_ver_16bits	libavcodec/x86/vc1dsp_mmx.c	/^typedef void (*vc1_mspel_mc_filter_ver_16bits)(int16_t *dst, const uint8_t *src, x86_reg src_stride, int rnd, int64_t shift);$/;"	t	file:
vc1_pack_bitplanes	libavcodec/vaapi_vc1.c	/^static inline void vc1_pack_bitplanes(uint8_t *bitplane, int n, const uint8_t *ff_bp[3], int x, int y, int stride)$/;"	f	file:
vc1_parse	libavcodec/vc1_parser.c	/^static int vc1_parse(AVCodecParserContext *s,$/;"	f	file:
vc1_parse_frame_header	libavcodec/vc1.c	/^int vc1_parse_frame_header(VC1Context *v, GetBitContext* gb)$/;"	f
vc1_parse_frame_header_adv	libavcodec/vc1.c	/^int vc1_parse_frame_header_adv(VC1Context *v, GetBitContext* gb)$/;"	f
vc1_parse_sprites	libavcodec/vc1dec.c	/^static void vc1_parse_sprites(VC1Context *v, GetBitContext* gb)$/;"	f	file:
vc1_pred_b_mv	libavcodec/vc1dec.c	/^static inline void vc1_pred_b_mv(VC1Context *v, int dmv_x[2], int dmv_y[2], int direct, int mvtype)$/;"	f	file:
vc1_pred_dc	libavcodec/vc1dec.c	/^static inline int vc1_pred_dc(MpegEncContext *s, int overlap, int pq, int n,$/;"	f	file:
vc1_pred_mv	libavcodec/vc1dec.c	/^static inline void vc1_pred_mv(VC1Context *v, int n, int dmv_x, int dmv_y, int mv1, int r_x, int r_y, uint8_t* is_intra)$/;"	f	file:
vc1_put_signed_blocks_clamped	libavcodec/vc1dec.c	/^static void vc1_put_signed_blocks_clamped(VC1Context *v)$/;"	f	file:
vc1_put_ver_16b_shift2_mmx	libavcodec/x86/vc1dsp_mmx.c	/^static void vc1_put_ver_16b_shift2_mmx(int16_t *dst,$/;"	f	file:
vc1_smooth_overlap_filter_iblk	libavcodec/vc1dec.c	/^static void vc1_smooth_overlap_filter_iblk(VC1Context *v)$/;"	f	file:
vc1_split	libavcodec/vc1_parser.c	/^static int vc1_split(AVCodecContext *avctx,$/;"	f	file:
vc1_sprite_parse_transform	libavcodec/vc1dec.c	/^static void vc1_sprite_parse_transform(VC1Context *v, GetBitContext* gb, float c[7])$/;"	f	file:
vc1_unescape_buffer	libavcodec/vc1.h	/^static av_always_inline int vc1_unescape_buffer(const uint8_t *src, int size, uint8_t *dst)$/;"	f
vc1_v_loop_filter16	libavcodec/vc1dsp.h	/^    void (*vc1_v_loop_filter16)(uint8_t *src, int stride, int pq);$/;"	m	struct:VC1DSPContext
vc1_v_loop_filter16_c	libavcodec/vc1dsp.c	/^static void vc1_v_loop_filter16_c(uint8_t *src, int stride, int pq)$/;"	f	file:
vc1_v_loop_filter4	libavcodec/vc1dsp.h	/^    void (*vc1_v_loop_filter4)(uint8_t *src, int stride, int pq);$/;"	m	struct:VC1DSPContext
vc1_v_loop_filter4_c	libavcodec/vc1dsp.c	/^static void vc1_v_loop_filter4_c(uint8_t *src, int stride, int pq)$/;"	f	file:
vc1_v_loop_filter8	libavcodec/vc1dsp.h	/^    void (*vc1_v_loop_filter8)(uint8_t *src, int stride, int pq);$/;"	m	struct:VC1DSPContext
vc1_v_loop_filter8_c	libavcodec/vc1dsp.c	/^static void vc1_v_loop_filter8_c(uint8_t *src, int stride, int pq)$/;"	f	file:
vc1_v_overlap	libavcodec/vc1dsp.h	/^    void (*vc1_v_overlap)(uint8_t *src, int stride);$/;"	m	struct:VC1DSPContext
vc1_v_overlap_c	libavcodec/vc1dsp.c	/^static void vc1_v_overlap_c(uint8_t* src, int stride)$/;"	f	file:
vc1_v_s_overlap	libavcodec/vc1dsp.h	/^    void (*vc1_v_s_overlap)(DCTELEM *top,  DCTELEM *bottom);$/;"	m	struct:VC1DSPContext
vc1_v_s_overlap_c	libavcodec/vc1dsp.c	/^static void vc1_v_s_overlap_c(DCTELEM *top,  DCTELEM *bottom)$/;"	f	file:
vc1dsp	libavcodec/vc1.h	/^    VC1DSPContext vc1dsp;$/;"	m	struct:VC1Context
vc1t_probe	libavformat/vc1test.c	/^static int vc1t_probe(AVProbeData *p)$/;"	f	file:
vc1t_read_header	libavformat/vc1test.c	/^static int vc1t_read_header(AVFormatContext *s,$/;"	f	file:
vc1t_read_packet	libavformat/vc1test.c	/^static int vc1t_read_packet(AVFormatContext *s,$/;"	f	file:
vc1test_write_header	libavformat/vc1testenc.c	/^static int vc1test_write_header(AVFormatContext *s)$/;"	f	file:
vc1test_write_packet	libavformat/vc1testenc.c	/^static int vc1test_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
vc1test_write_trailer	libavformat/vc1testenc.c	/^static int vc1test_write_trailer(AVFormatContext *s)$/;"	f	file:
vcd_padding_bitrate	libavformat/mpegenc.c	/^    double vcd_padding_bitrate; \/\/FIXME floats$/;"	m	struct:__anon429	file:
vcd_padding_bytes_written	libavformat/mpegenc.c	/^    int64_t vcd_padding_bytes_written;$/;"	m	struct:__anon429	file:
vcii	libavcodec/ppc/util_altivec.h	49;"	d
vcl_hrd_parameters_present_flag	libavcodec/h264.h	/^    int vcl_hrd_parameters_present_flag;$/;"	m	struct:SPS
vcprm	libavcodec/ppc/fft_altivec_s.S	/^#define vcprm(a, b, c, d) .byte WORD_##a, WORD_##b, WORD_##c, WORD_##d$/;"	d
vcprm	libavcodec/ppc/util_altivec.h	48;"	d
vcprmle	libavcodec/ppc/util_altivec.h	54;"	d
vcr2_init_sequence	libavcodec/mpeg12.c	/^static int vcr2_init_sequence(AVCodecContext *avctx)$/;"	f	file:
vd	libavcodec/libvorbis.c	/^    vorbis_dsp_state vd ;$/;"	m	struct:OggVorbisContext	file:
vd_tab	libavcodec/cookdata.h	/^static const int vd_tab[7] = {$/;"	v
vdpau_mpeg2_decode_slice	libavcodec/vdpau.c	/^static int vdpau_mpeg2_decode_slice(AVCodecContext *avctx, const uint8_t *buffer, uint32_t size)$/;"	f	file:
vdpau_mpeg2_end_frame	libavcodec/vdpau.c	/^static int vdpau_mpeg2_end_frame(AVCodecContext *avctx)$/;"	f	file:
vdpau_mpeg2_start_frame	libavcodec/vdpau.c	/^static int vdpau_mpeg2_start_frame(AVCodecContext *avctx, const uint8_t *buffer, uint32_t size)$/;"	f	file:
vdpau_render_state	libavcodec/vdpau.h	/^struct vdpau_render_state {$/;"	s
vec1_huffbits	libavcodec/wmaprodata.h	/^static const uint8_t vec1_huffbits[HUFF_VEC1_SIZE] = {$/;"	v
vec1_huffcodes	libavcodec/wmaprodata.h	/^static const uint16_t vec1_huffcodes[HUFF_VEC1_SIZE] = {$/;"	v
vec1_vlc	libavcodec/wmaprodec.c	/^static VLC              vec1_vlc;         \/\/\/< 1 coefficient per symbol$/;"	v	file:
vec2_huffbits	libavcodec/wmaprodata.h	/^static const uint8_t vec2_huffbits[HUFF_VEC2_SIZE] = {$/;"	v
vec2_huffcodes	libavcodec/wmaprodata.h	/^static const uint16_t vec2_huffcodes[HUFF_VEC2_SIZE] = {$/;"	v
vec2_vlc	libavcodec/wmaprodec.c	/^static VLC              vec2_vlc;         \/\/\/< 2 coefficients per symbol$/;"	v	file:
vec4_huffbits	libavcodec/wmaprodata.h	/^static const uint8_t vec4_huffbits[HUFF_VEC4_SIZE] = {$/;"	v
vec4_huffcodes	libavcodec/wmaprodata.h	/^static const uint16_t vec4_huffcodes[HUFF_VEC4_SIZE] = {$/;"	v
vec4_vlc	libavcodec/wmaprodec.c	/^static VLC              vec4_vlc;         \/\/\/< 4 coefficients per symbol$/;"	v	file:
vec_clip_s16	libswscale/ppc/yuv2rgb_altivec.c	234;"	d	file:
vec_f	libavcodec/ppc/types_altivec.h	33;"	d
vec_merge3	libswscale/ppc/yuv2rgb_altivec.c	155;"	d	file:
vec_mstbgr24	libswscale/ppc/yuv2rgb_altivec.c	166;"	d	file:
vec_mstrgb24	libswscale/ppc/yuv2rgb_altivec.c	175;"	d	file:
vec_mstrgb32	libswscale/ppc/yuv2rgb_altivec.c	188;"	d	file:
vec_packclp	libswscale/ppc/yuv2rgb_altivec.c	238;"	d	file:
vec_s16	libavcodec/ppc/types_altivec.h	30;"	d
vec_s32	libavcodec/ppc/types_altivec.h	32;"	d
vec_s8	libavcodec/ppc/types_altivec.h	28;"	d
vec_u16	libavcodec/ppc/types_altivec.h	29;"	d
vec_u32	libavcodec/ppc/types_altivec.h	31;"	d
vec_u8	libavcodec/ppc/types_altivec.h	27;"	d
vec_unaligned_load	libavcodec/ppc/int_altivec.c	49;"	d	file:
vec_unh	libswscale/ppc/yuv2rgb_altivec.c	223;"	d	file:
vec_unl	libswscale/ppc/yuv2rgb_altivec.c	228;"	d	file:
vect_division	libavcodec/elbg.c	/^static inline void vect_division(int *res, int *vect, int div, int dim)$/;"	f	file:
vectable	libavcodec/truemotion1.c	/^    uint8_t vectable;$/;"	m	struct:frame_header	file:
vector	libavcodec/svq1enc.c	117;"	d	file:
vector	libavcodec/truespeech.c	/^    int16_t vector[8];  \/\/< input vector: 5\/5\/4\/4\/4\/3\/3\/3$/;"	m	struct:__anon160	file:
vector_candidate	libavcodec/vp56.h	/^    VP56mv vector_candidate[2];$/;"	m	struct:vp56_context
vector_candidate_pos	libavcodec/vp56.h	/^    int vector_candidate_pos;$/;"	m	struct:vp56_context
vector_clipf	libavcodec/dsputil.h	/^    void (*vector_clipf)(float *dst \/* align 16 *\/, const float *src \/* align 16 *\/, float min, float max, int len \/* align 16 *\/);$/;"	m	struct:DSPContext
vector_clipf_c	libavcodec/dsputil.c	/^static void vector_clipf_c(float *dst, const float *src, float min, float max, int len){$/;"	f	file:
vector_clipf_c_opposite_sign	libavcodec/dsputil.c	/^static void vector_clipf_c_opposite_sign(float *dst, const float *src, float *min, float *max, int len){$/;"	f	file:
vector_clipf_sse	libavcodec/x86/dsputil_mmx.c	/^static void vector_clipf_sse(float *dst, const float *src, float min, float max,$/;"	f	file:
vector_dct	libavcodec/vp56.h	/^    uint8_t vector_dct[2];           \/* delta coding types *\/$/;"	m	struct:__anon223
vector_fdv	libavcodec/vp56.h	/^    uint8_t vector_fdv[2][8];        \/* 8 bit delta value definition *\/$/;"	m	struct:__anon223
vector_fmul	libavcodec/dsputil.h	/^    void (*vector_fmul)(float *dst, const float *src0, const float *src1, int len);$/;"	m	struct:DSPContext
vector_fmul_3dnow	libavcodec/x86/dsputil_mmx.c	/^static void vector_fmul_3dnow(float *dst, const float *src0, const float *src1, int len){$/;"	f	file:
vector_fmul_add	libavcodec/dsputil.h	/^    void (*vector_fmul_add)(float *dst, const float *src0, const float *src1, const float *src2, int len);$/;"	m	struct:DSPContext
vector_fmul_add_3dnow	libavcodec/x86/dsputil_mmx.c	/^static void vector_fmul_add_3dnow(float *dst, const float *src0, const float *src1,$/;"	f	file:
vector_fmul_add_altivec	libavcodec/ppc/float_altivec.c	/^static void vector_fmul_add_altivec(float *dst, const float *src0,$/;"	f	file:
vector_fmul_add_c	libavcodec/dsputil.c	/^static void vector_fmul_add_c(float *dst, const float *src0, const float *src1, const float *src2, int len){$/;"	f	file:
vector_fmul_add_sse	libavcodec/x86/dsputil_mmx.c	/^static void vector_fmul_add_sse(float *dst, const float *src0, const float *src1,$/;"	f	file:
vector_fmul_altivec	libavcodec/ppc/float_altivec.c	/^static void vector_fmul_altivec(float *dst, const float *src0, const float *src1, int len)$/;"	f	file:
vector_fmul_c	libavcodec/dsputil.c	/^static void vector_fmul_c(float *dst, const float *src0, const float *src1, int len){$/;"	f	file:
vector_fmul_reverse	libavcodec/dsputil.h	/^    void (*vector_fmul_reverse)(float *dst, const float *src0, const float *src1, int len);$/;"	m	struct:DSPContext
vector_fmul_reverse_3dnow2	libavcodec/x86/dsputil_mmx.c	/^static void vector_fmul_reverse_3dnow2(float *dst, const float *src0, const float *src1, int len){$/;"	f	file:
vector_fmul_reverse_altivec	libavcodec/ppc/float_altivec.c	/^static void vector_fmul_reverse_altivec(float *dst, const float *src0,$/;"	f	file:
vector_fmul_reverse_c	libavcodec/dsputil.c	/^static void vector_fmul_reverse_c(float *dst, const float *src0, const float *src1, int len){$/;"	f	file:
vector_fmul_reverse_sse	libavcodec/x86/dsputil_mmx.c	/^static void vector_fmul_reverse_sse(float *dst, const float *src0, const float *src1, int len){$/;"	f	file:
vector_fmul_scalar	libavcodec/dsputil.h	/^    void (*vector_fmul_scalar)(float *dst, const float *src, float mul,$/;"	m	struct:DSPContext
vector_fmul_scalar_c	libavcodec/dsputil.c	/^static void vector_fmul_scalar_c(float *dst, const float *src, float mul,$/;"	f	file:
vector_fmul_sse	libavcodec/x86/dsputil_mmx.c	/^static void vector_fmul_sse(float *dst, const float *src0, const float *src1, int len){$/;"	f	file:
vector_fmul_sv_scalar	libavcodec/dsputil.h	/^    void (*vector_fmul_sv_scalar[2])(float *dst, const float *src,$/;"	m	struct:DSPContext
vector_fmul_sv_scalar_2_c	libavcodec/dsputil.c	/^static void vector_fmul_sv_scalar_2_c(float *dst, const float *src,$/;"	f	file:
vector_fmul_sv_scalar_4_c	libavcodec/dsputil.c	/^static void vector_fmul_sv_scalar_4_c(float *dst, const float *src,$/;"	f	file:
vector_fmul_window	libavcodec/dsputil.h	/^    void (*vector_fmul_window)(float *dst, const float *src0, const float *src1, const float *win, int len);$/;"	m	struct:DSPContext
vector_fmul_window_3dnow2	libavcodec/x86/dsputil_mmx.c	/^static void vector_fmul_window_3dnow2(float *dst, const float *src0, const float *src1,$/;"	f	file:
vector_fmul_window_altivec	libavcodec/ppc/float_altivec.c	/^static void vector_fmul_window_altivec(float *dst, const float *src0, const float *src1, const float *win, int len)$/;"	f	file:
vector_fmul_window_c	libavcodec/dsputil.c	/^static void vector_fmul_window_c(float *dst, const float *src0,$/;"	f	file:
vector_fmul_window_sse	libavcodec/x86/dsputil_mmx.c	/^static void vector_fmul_window_sse(float *dst, const float *src0, const float *src1,$/;"	f	file:
vector_height	libavcodec/vqavideo.c	/^    int vector_height;  \/* height of individual vector *\/$/;"	m	struct:VqaContext	file:
vector_pdi	libavcodec/vp56.h	/^    uint8_t vector_pdi[2][2];        \/* predefined delta init *\/$/;"	m	struct:__anon223
vector_pdv	libavcodec/vp56.h	/^    uint8_t vector_pdv[2][7];        \/* predefined delta values *\/$/;"	m	struct:__anon223
vector_sig	libavcodec/vp56.h	/^    uint8_t vector_sig[2];           \/* delta sign *\/$/;"	m	struct:__anon223
vector_width	libavcodec/vqavideo.c	/^    int vector_width;  \/* width of individual vector *\/$/;"	m	struct:VqaContext	file:
ver	libavformat/mpc.c	/^    int ver;$/;"	m	struct:__anon376	file:
ver	libavformat/mpc8.c	/^    int ver;$/;"	m	struct:__anon398	file:
ver2_state	libavcodec/ffv1.c	/^static const uint8_t ver2_state[256]= {$/;"	v	file:
verbatim_only	libavcodec/flacenc.c	/^    int verbatim_only;$/;"	m	struct:FlacFrame	file:
verbose	ffmpeg.c	/^static int verbose = 1;$/;"	v	file:
verbose	ffmpeg/ffmpeg.c	/^static int verbose = 1;$/;"	v	file:
verbose	libavfilter/libmpcodecs/pullup.h	/^    int verbose;$/;"	m	struct:pullup_context
verbose	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned verbose;$/;"	m	struct:vf_priv_s	file:
verbose	libavfilter/libmpcodecs/vf_phase.c	/^   int verbose;$/;"	m	struct:vf_priv_s	file:
verify_expr	libavutil/eval.c	/^static int verify_expr(AVExpr *e)$/;"	f	file:
version	libavcodec/4xm.c	/^    int version;$/;"	m	struct:FourXContext	file:
version	libavcodec/bink.c	/^    int            version;              \/\/\/< internal Bink file version$/;"	m	struct:BinkContext	file:
version	libavcodec/dca.c	/^    int version;                \/\/\/< encoder software revision$/;"	m	struct:__anon93	file:
version	libavcodec/dvbsubdec.c	/^    int version;$/;"	m	struct:DVBSubDisplayDefinition	file:
version	libavcodec/ffv1.c	/^    int version;$/;"	m	struct:FFV1Context	file:
version	libavcodec/huffyuv.c	/^    int version;$/;"	m	struct:HYuvContext	file:
version	libavcodec/libxvidff.c	/^    int     version;                \/**< Xvid version *\/$/;"	m	struct:xvid_ff_pass1	file:
version	libavcodec/mdec.c	/^    int version;$/;"	m	struct:MDECContext	file:
version	libavcodec/shorten.c	/^    int version;$/;"	m	struct:ShortenContext	file:
version	libavcodec/snow.c	/^    int version;$/;"	m	struct:SnowContext	file:
version	libavcodec/truemotion1.c	/^    uint8_t version;$/;"	m	struct:frame_header	file:
version	libavcodec/vorbisdec.c	/^    uint32_t      version;$/;"	m	struct:vorbis_context_s	file:
version	libavcodec/vp3.c	/^    int version;$/;"	m	struct:Vp3DecodeContext	file:
version	libavcodec/wma.h	/^    int version;                            \/\/\/< 1 = 0x160 (WMAV1), 2 = 0x161 (WMAV2)$/;"	m	struct:WMACodecContext
version	libavformat/matroskadec.c	/^    uint64_t version;$/;"	m	struct:__anon354	file:
version	libavformat/mpegts.c	/^    uint8_t version;$/;"	m	struct:SectionHeader	file:
version	libavformat/oggparsetheora.c	/^    unsigned version;$/;"	m	struct:theora_params	file:
version	libavformat/sdp.c	/^    int version;          \/**< session version *\/$/;"	m	struct:sdp_session_level	file:
version	libavformat/segafilm.c	/^    unsigned int version;$/;"	m	struct:FilmDemuxContext	file:
version	libavformat/thp.c	/^    int              version;$/;"	m	struct:ThpDemuxContext	file:
version	libavutil/log.h	/^    int version;$/;"	m	struct:__anon308
version_b	libavcodec/binkaudio.c	/^    int version_b;          \/\/\/< Bink version 'b'$/;"	m	struct:__anon136	file:
vertClassify	libpostproc/postprocess_template.c	/^static inline int RENAME(vertClassify)(uint8_t src[], int stride, PPContext *c){$/;"	f	file:
vertClassify_C	libpostproc/postprocess.c	/^static inline int vertClassify_C(uint8_t src[], int stride, PPContext *c)$/;"	f	file:
vertClassify_altivec	libpostproc/postprocess_altivec_template.c	/^static inline int vertClassify_altivec(uint8_t src[], int stride, PPContext *c) {$/;"	f	file:
vertX1Filter	libpostproc/postprocess_template.c	/^static inline void RENAME(vertX1Filter)(uint8_t *src, int stride, PPContext *co)$/;"	f	file:
vert_pred	libavcodec/truemotion1.c	/^    unsigned int *vert_pred;$/;"	m	struct:TrueMotion1Context	file:
vert_pred_size	libavcodec/truemotion1.c	/^    int vert_pred_size;$/;"	m	struct:TrueMotion1Context	file:
vertical_compose53iH0	libavcodec/dwt.c	/^static void vertical_compose53iH0(IDWTELEM *b0, IDWTELEM *b1, IDWTELEM *b2, int width){$/;"	f	file:
vertical_compose53iL0	libavcodec/dwt.c	/^static void vertical_compose53iL0(IDWTELEM *b0, IDWTELEM *b1, IDWTELEM *b2, int width){$/;"	f	file:
vertical_compose97i	libavcodec/dwt.h	/^    void (*vertical_compose97i)(IDWTELEM *b0, IDWTELEM *b1, IDWTELEM *b2, IDWTELEM *b3, IDWTELEM *b4, IDWTELEM *b5, int width);$/;"	m	struct:DWTContext
vertical_compose97iH0	libavcodec/dwt.c	/^static void vertical_compose97iH0(IDWTELEM *b0, IDWTELEM *b1, IDWTELEM *b2, int width){$/;"	f	file:
vertical_compose97iH1	libavcodec/dwt.c	/^static void vertical_compose97iH1(IDWTELEM *b0, IDWTELEM *b1, IDWTELEM *b2, int width){$/;"	f	file:
vertical_compose97iL0	libavcodec/dwt.c	/^static void vertical_compose97iL0(IDWTELEM *b0, IDWTELEM *b1, IDWTELEM *b2, int width){$/;"	f	file:
vertical_compose97iL1	libavcodec/dwt.c	/^static void vertical_compose97iL1(IDWTELEM *b0, IDWTELEM *b1, IDWTELEM *b2, int width){$/;"	f	file:
vertical_decompose53iH0	libavcodec/dwt.c	/^static void vertical_decompose53iH0(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_decompose53iL0	libavcodec/dwt.c	/^static void vertical_decompose53iL0(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_decompose97iH0	libavcodec/dwt.c	/^static void vertical_decompose97iH0(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_decompose97iH1	libavcodec/dwt.c	/^static void vertical_decompose97iH1(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_decompose97iL0	libavcodec/dwt.c	/^static void vertical_decompose97iL0(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
vertical_decompose97iL1	libavcodec/dwt.c	/^static void vertical_decompose97iL1(DWTELEM *b0, DWTELEM *b1, DWTELEM *b2, int width){$/;"	f	file:
very_broken_op	libavcodec/twinvq.c	/^static int very_broken_op(int a, int b)$/;"	f	file:
vf	libavfilter/vf_mp.c	/^    vf_instance_t vf;$/;"	m	struct:__anon47	file:
vf_clone_mpi_attributes	libavfilter/vf_mp.c	/^void vf_clone_mpi_attributes(mp_image_t* dst, mp_image_t* src){$/;"	f
vf_default_query_format	libavfilter/vf_mp.c	/^static int vf_default_query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f	file:
vf_eq2_t	libavfilter/libmpcodecs/vf_eq2.c	/^} vf_eq2_t;$/;"	t	typeref:struct:vf_priv_s	file:
vf_equalizer_t	libavfilter/libmpcodecs/vf.h	/^} vf_equalizer_t;$/;"	t	typeref:struct:vf_seteq_s
vf_format_context_t	libavfilter/libmpcodecs/vf.h	/^typedef struct vf_format_context_t {$/;"	s
vf_format_context_t	libavfilter/libmpcodecs/vf.h	/^} vf_format_context_t;$/;"	t	typeref:struct:vf_format_context_t
vf_get_image	libavfilter/vf_mp.c	/^mp_image_t* vf_get_image(vf_instance_t* vf, unsigned int outfmt, int mp_imgtype, int mp_imgflag, int w, int h){$/;"	f
vf_image_context_s	libavfilter/libmpcodecs/vf.h	/^typedef struct vf_image_context_s {$/;"	s
vf_image_context_t	libavfilter/libmpcodecs/vf.h	/^} vf_image_context_t;$/;"	t	typeref:struct:vf_image_context_s
vf_info_2xsai	libavfilter/libmpcodecs/vf_2xsai.c	/^const vf_info_t vf_info_2xsai = {$/;"	v
vf_info_blackframe	libavfilter/libmpcodecs/vf_blackframe.c	/^const vf_info_t vf_info_blackframe = {$/;"	v
vf_info_boxblur	libavfilter/libmpcodecs/vf_boxblur.c	/^const vf_info_t vf_info_boxblur = {$/;"	v
vf_info_cropdetect	libavfilter/libmpcodecs/vf_cropdetect.c	/^const vf_info_t vf_info_cropdetect = {$/;"	v
vf_info_decimate	libavfilter/libmpcodecs/vf_decimate.c	/^const vf_info_t vf_info_decimate = {$/;"	v
vf_info_delogo	libavfilter/libmpcodecs/vf_delogo.c	/^const vf_info_t vf_info_delogo = {$/;"	v
vf_info_denoise3d	libavfilter/libmpcodecs/vf_denoise3d.c	/^const vf_info_t vf_info_denoise3d = {$/;"	v
vf_info_detc	libavfilter/libmpcodecs/vf_detc.c	/^const vf_info_t vf_info_detc = {$/;"	v
vf_info_dint	libavfilter/libmpcodecs/vf_dint.c	/^const vf_info_t vf_info_dint = {$/;"	v
vf_info_divtc	libavfilter/libmpcodecs/vf_divtc.c	/^const vf_info_t vf_info_divtc =$/;"	v
vf_info_divtc	libavfilter/libmpcodecs/vf_divtc.c	/^const vf_info_t vf_info_divtc;$/;"	v
vf_info_down3dright	libavfilter/libmpcodecs/vf_down3dright.c	/^const vf_info_t vf_info_down3dright = {$/;"	v
vf_info_dsize	libavfilter/libmpcodecs/vf_dsize.c	/^const vf_info_t vf_info_dsize = {$/;"	v
vf_info_eq	libavfilter/libmpcodecs/vf_eq.c	/^const vf_info_t vf_info_eq = {$/;"	v
vf_info_eq2	libavfilter/libmpcodecs/vf_eq2.c	/^const vf_info_t vf_info_eq2 = {$/;"	v
vf_info_field	libavfilter/libmpcodecs/vf_field.c	/^const vf_info_t vf_info_field = {$/;"	v
vf_info_fil	libavfilter/libmpcodecs/vf_fil.c	/^const vf_info_t vf_info_fil = {$/;"	v
vf_info_filmdint	libavfilter/libmpcodecs/vf_filmdint.c	/^const vf_info_t vf_info_filmdint = {$/;"	v
vf_info_fixpts	libavfilter/libmpcodecs/vf_fixpts.c	/^const vf_info_t vf_info_fixpts = {$/;"	v
vf_info_framestep	libavfilter/libmpcodecs/vf_framestep.c	/^const vf_info_t vf_info_framestep = {$/;"	v
vf_info_fspp	libavfilter/libmpcodecs/vf_fspp.c	/^const vf_info_t vf_info_fspp = {$/;"	v
vf_info_geq	libavfilter/libmpcodecs/vf_geq.c	/^const vf_info_t vf_info_geq = {$/;"	v
vf_info_gradfun	libavfilter/libmpcodecs/vf_gradfun.c	/^const vf_info_t vf_info_gradfun = {$/;"	v
vf_info_harddup	libavfilter/libmpcodecs/vf_harddup.c	/^const vf_info_t vf_info_harddup = {$/;"	v
vf_info_hqdn3d	libavfilter/libmpcodecs/vf_hqdn3d.c	/^const vf_info_t vf_info_hqdn3d = {$/;"	v
vf_info_hue	libavfilter/libmpcodecs/vf_hue.c	/^const vf_info_t vf_info_hue = {$/;"	v
vf_info_il	libavfilter/libmpcodecs/vf_il.c	/^const vf_info_t vf_info_il = {$/;"	v
vf_info_ilpack	libavfilter/libmpcodecs/vf_ilpack.c	/^const vf_info_t vf_info_ilpack = {$/;"	v
vf_info_ivtc	libavfilter/libmpcodecs/vf_ivtc.c	/^const vf_info_t vf_info_ivtc = {$/;"	v
vf_info_kerndeint	libavfilter/libmpcodecs/vf_kerndeint.c	/^const vf_info_t vf_info_kerndeint = {$/;"	v
vf_info_mirror	libavfilter/libmpcodecs/vf_mirror.c	/^const vf_info_t vf_info_mirror = {$/;"	v
vf_info_noise	libavfilter/libmpcodecs/vf_noise.c	/^const vf_info_t vf_info_noise = {$/;"	v
vf_info_ow	libavfilter/libmpcodecs/vf_ow.c	/^const vf_info_t vf_info_ow = {$/;"	v
vf_info_palette	libavfilter/libmpcodecs/vf_palette.c	/^const vf_info_t vf_info_palette = {$/;"	v
vf_info_perspective	libavfilter/libmpcodecs/vf_perspective.c	/^const vf_info_t vf_info_perspective = {$/;"	v
vf_info_phase	libavfilter/libmpcodecs/vf_phase.c	/^const vf_info_t vf_info_phase =$/;"	v
vf_info_pp7	libavfilter/libmpcodecs/vf_pp7.c	/^const vf_info_t vf_info_pp7 = {$/;"	v
vf_info_pullup	libavfilter/libmpcodecs/vf_pullup.c	/^const vf_info_t vf_info_pullup = {$/;"	v
vf_info_qp	libavfilter/libmpcodecs/vf_qp.c	/^const vf_info_t vf_info_qp = {$/;"	v
vf_info_rectangle	libavfilter/libmpcodecs/vf_rectangle.c	/^const vf_info_t vf_info_rectangle = {$/;"	v
vf_info_remove_logo	libavfilter/libmpcodecs/vf_remove_logo.c	/^const vf_info_t vf_info_remove_logo = {$/;"	v
vf_info_rgbtest	libavfilter/libmpcodecs/vf_rgbtest.c	/^const vf_info_t vf_info_rgbtest = {$/;"	v
vf_info_rotate	libavfilter/libmpcodecs/vf_rotate.c	/^const vf_info_t vf_info_rotate = {$/;"	v
vf_info_s	libavfilter/libmpcodecs/vf.h	/^typedef struct vf_info_s {$/;"	s
vf_info_sab	libavfilter/libmpcodecs/vf_sab.c	/^const vf_info_t vf_info_sab = {$/;"	v
vf_info_screenshot	libavfilter/libmpcodecs/vf_screenshot.c	/^const vf_info_t vf_info_screenshot = {$/;"	v
vf_info_smartblur	libavfilter/libmpcodecs/vf_smartblur.c	/^const vf_info_t vf_info_smartblur = {$/;"	v
vf_info_softpulldown	libavfilter/libmpcodecs/vf_softpulldown.c	/^const vf_info_t vf_info_softpulldown = {$/;"	v
vf_info_softskip	libavfilter/libmpcodecs/vf_softskip.c	/^const vf_info_t vf_info_softskip = {$/;"	v
vf_info_spp	libavfilter/libmpcodecs/vf_spp.c	/^const vf_info_t vf_info_spp = {$/;"	v
vf_info_swapuv	libavfilter/libmpcodecs/vf_swapuv.c	/^const vf_info_t vf_info_swapuv = {$/;"	v
vf_info_t	libavfilter/libmpcodecs/vf.h	/^} vf_info_t;$/;"	t	typeref:struct:vf_info_s
vf_info_telecine	libavfilter/libmpcodecs/vf_telecine.c	/^const vf_info_t vf_info_telecine = {$/;"	v
vf_info_test	libavfilter/libmpcodecs/vf_test.c	/^const vf_info_t vf_info_test = {$/;"	v
vf_info_tile	libavfilter/libmpcodecs/vf_tile.c	/^const vf_info_t vf_info_tile = {$/;"	v
vf_info_tinterlace	libavfilter/libmpcodecs/vf_tinterlace.c	/^const vf_info_t vf_info_tinterlace = {$/;"	v
vf_info_unsharp	libavfilter/libmpcodecs/vf_unsharp.c	/^const vf_info_t vf_info_unsharp = {$/;"	v
vf_info_uspp	libavfilter/libmpcodecs/vf_uspp.c	/^const vf_info_t vf_info_uspp = {$/;"	v
vf_info_yuvcsp	libavfilter/libmpcodecs/vf_yuvcsp.c	/^const vf_info_t vf_info_yuvcsp = {$/;"	v
vf_info_yvu9	libavfilter/libmpcodecs/vf_yvu9.c	/^const vf_info_t vf_info_yvu9 = {$/;"	v
vf_instance	libavfilter/libmpcodecs/vf.h	/^typedef struct vf_instance {$/;"	s
vf_instance_t	libavfilter/libmpcodecs/vf.h	/^} vf_instance_t;$/;"	t	typeref:struct:vf_instance
vf_match_csp	libavfilter/vf_mp.c	/^unsigned int vf_match_csp(vf_instance_t** vfp,const unsigned int* list,unsigned int preferred){$/;"	f
vf_mpi_clear	libavfilter/vf_mp.c	/^void vf_mpi_clear(mp_image_t* mpi,int x0,int y0,int w,int h){$/;"	f
vf_next_config	libavfilter/vf_mp.c	/^int vf_next_config(struct vf_instance *vf,$/;"	f
vf_next_control	libavfilter/vf_mp.c	/^int vf_next_control(struct vf_instance *vf, int request, void* data){$/;"	f
vf_next_draw_slice	libavfilter/vf_mp.c	/^void vf_next_draw_slice(struct vf_instance *vf,unsigned char** src, int * stride,int w, int h, int x, int y){$/;"	f
vf_next_put_image	libavfilter/vf_mp.c	/^int vf_next_put_image(struct vf_instance *vf,mp_image_t *mpi, double pts){$/;"	f
vf_next_query_format	libavfilter/vf_mp.c	/^int vf_next_query_format(struct vf_instance *vf, unsigned int fmt){$/;"	f
vf_open	libavfilter/libmpcodecs/vf.h	/^    int (*vf_open)(struct vf_instance *vf,char* args);$/;"	m	struct:vf_info_s
vf_open	libavfilter/libmpcodecs/vf_2xsai.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_blackframe.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_boxblur.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_cropdetect.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_decimate.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_delogo.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_denoise3d.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_detc.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_dint.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_divtc.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_down3dright.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_dsize.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_eq.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_eq2.c	/^int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_field.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_fil.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_filmdint.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_framestep.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_fspp.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_geq.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_gradfun.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_harddup.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_hqdn3d.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_hue.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_il.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_ilpack.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_ivtc.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_kerndeint.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_mirror.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_noise.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_ow.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_palette.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_perspective.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_phase.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_pp7.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_pullup.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_qp.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_rectangle.c	/^vf_open(vf_instance_t *vf, char *args) {$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_remove_logo.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_rgbtest.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_rotate.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_sab.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_screenshot.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_smartblur.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_softpulldown.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_softskip.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_spp.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_swapuv.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_telecine.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_test.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_tile.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_tinterlace.c	/^static int vf_open(vf_instance_t *vf, char *args)$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_unsharp.c	/^static int vf_open( vf_instance_t *vf, char *args ) {$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_uspp.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_yuvcsp.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_open	libavfilter/libmpcodecs/vf_yvu9.c	/^static int vf_open(vf_instance_t *vf, char *args){$/;"	f	file:
vf_priv_s	libavfilter/libmpcodecs/vf_blackframe.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_boxblur.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_cropdetect.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_decimate.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_delogo.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_denoise3d.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_detc.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_dint.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_divtc.c	/^struct vf_priv_s$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_down3dright.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_dsize.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_eq.c	/^static struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_eq2.c	/^typedef struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_field.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_fil.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_filmdint.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_fixpts.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_framestep.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_fspp.c	/^struct vf_priv_s { \/\/align 16 !$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_geq.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_gradfun.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_harddup.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_hqdn3d.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_hue.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_il.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_ilpack.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_ivtc.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_kerndeint.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_mcdeint.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_noise.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_ow.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_palette.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_perspective.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_phase.c	/^struct vf_priv_s$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_pp7.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_pullup.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_qp.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_rectangle.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_remove_logo.c	/^struct vf_priv_s$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_remove_logo.c	/^} vf_priv_s;$/;"	v	typeref:struct:vf_priv_s
vf_priv_s	libavfilter/libmpcodecs/vf_rgbtest.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_rotate.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_sab.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_screenshot.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_smartblur.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_softpulldown.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_softskip.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_spp.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_telecine.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_test.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_tile.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_tinterlace.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_unsharp.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_uspp.c	/^struct vf_priv_s {$/;"	s	file:
vf_priv_s	libavfilter/libmpcodecs/vf_yuvcsp.c	/^struct vf_priv_s {$/;"	s	file:
vf_seteq_s	libavfilter/libmpcodecs/vf.h	/^typedef struct vf_seteq_s$/;"	s
vfilters	ffmpeg.c	/^static char *vfilters = NULL;$/;"	v	file:
vfilters	ffmpeg/ffmpeg.c	/^static char *vfilters = NULL;$/;"	v	file:
vfilters	ffplay.c	/^static char *vfilters = NULL;$/;"	v	file:
vframes_pos	libavformat/swf.h	/^    int64_t vframes_pos;$/;"	m	struct:__anon336
vfw_class	libavdevice/vfwcap.c	/^static const AVClass vfw_class = {$/;"	v	file:
vfw_codecid	libavdevice/vfwcap.c	/^static enum CodecID vfw_codecid(DWORD biCompression)$/;"	f	file:
vfw_ctx	libavdevice/vfwcap.c	/^struct vfw_ctx {$/;"	s	file:
vfw_pixfmt	libavdevice/vfwcap.c	/^static enum PixelFormat vfw_pixfmt(DWORD biCompression, WORD biBitCount)$/;"	f	file:
vfw_read_close	libavdevice/vfwcap.c	/^static int vfw_read_close(AVFormatContext *s)$/;"	f	file:
vfw_read_header	libavdevice/vfwcap.c	/^static int vfw_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
vfw_read_packet	libavdevice/vfwcap.c	/^static int vfw_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
vheight	libavformat/nsvdec.c	/^    uint16_t vwidth, vheight;$/;"	m	struct:__anon345	file:
vhsize_tab	libavcodec/cookdata.h	/^static const int vhsize_tab[7] = {$/;"	v
vhvlcsize_tab	libavcodec/cookdata.h	/^static const int vhvlcsize_tab[7] = {$/;"	v
vi	libavcodec/libvorbis.c	/^    vorbis_info vi ;$/;"	m	struct:OggVorbisContext	file:
vid_probe	libavformat/bethsoftvid.c	/^static int vid_probe(AVProbeData *p)$/;"	f	file:
vid_read_header	libavformat/bethsoftvid.c	/^static int vid_read_header(AVFormatContext *s,$/;"	f	file:
vid_read_packet	libavformat/bethsoftvid.c	/^static int vid_read_packet(AVFormatContext *s,$/;"	f	file:
video	libavfilter/avfilter.h	/^    AVFilterBufferRefVideoProps *video; \/\/\/< video buffer specific properties$/;"	m	struct:AVFilterBufferRef
video	libavformat/matroskadec.c	/^    MatroskaTrackVideo video;$/;"	m	struct:__anon361	file:
video_audio_display	ffplay.c	/^static void video_audio_display(VideoState *s)$/;"	f	file:
video_base	libavcodec/rl2.c	/^    unsigned short video_base; \/\/\/< initial drawing offset$/;"	m	struct:Rl2Context	file:
video_bitstream_filters	ffmpeg.c	/^static AVBitStreamFilterContext *video_bitstream_filters=NULL;$/;"	v	file:
video_bitstream_filters	ffmpeg/ffmpeg.c	/^static AVBitStreamFilterContext *video_bitstream_filters=NULL;$/;"	v	file:
video_bound	libavformat/mpegenc.c	/^    int video_bound;$/;"	m	struct:__anon429	file:
video_bpp	libavformat/ipmovie.c	/^    unsigned int video_bpp;$/;"	m	struct:IPMVEContext	file:
video_buf	libavdevice/bktr.c	/^uint8_t *video_buf;$/;"	v
video_buf	libavdevice/v4l.c	/^    uint8_t *video_buf;$/;"	m	struct:__anon316	file:
video_buf_size	libavdevice/bktr.c	/^size_t video_buf_size;$/;"	v
video_cap	libavdevice/v4l.c	/^    struct video_capability video_cap;$/;"	m	struct:__anon316	typeref:struct:__anon316::video_capability	file:
video_channel	ffmpeg.c	/^static int  video_channel = 0;$/;"	v	file:
video_channel	ffmpeg/ffmpeg.c	/^static int  video_channel = 0;$/;"	v	file:
video_chunk_offset	libavformat/ipmovie.c	/^    int64_t video_chunk_offset;$/;"	m	struct:IPMVEContext	file:
video_chunk_size	libavformat/ipmovie.c	/^    int video_chunk_size;$/;"	m	struct:IPMVEContext	file:
video_chunk_size	libavformat/tmv.c	/^    unsigned video_chunk_size;$/;"	m	struct:TMVContext	file:
video_clock	ffplay.c	/^    double video_clock;                          \/\/\/<pts of last decoded frame \/ predicted pts of next decoded frame$/;"	m	struct:VideoState	file:
video_codec	libavformat/avformat.h	/^    enum CodecID video_codec; \/**< default video codec *\/$/;"	m	struct:AVOutputFormat	typeref:enum:AVOutputFormat::CodecID
video_codec	libavformat/electronicarts.c	/^    enum CodecID video_codec;$/;"	m	struct:EaDemuxContext	typeref:enum:EaDemuxContext::CodecID	file:
video_codec_id	libavformat/avformat.h	/^    enum CodecID video_codec_id;$/;"	m	struct:AVFormatContext	typeref:enum:AVFormatContext::CodecID
video_codec_name	ffmpeg.c	/^static char *video_codec_name = NULL;$/;"	v	file:
video_codec_name	ffmpeg/ffmpeg.c	/^static char *video_codec_name = NULL;$/;"	v	file:
video_codec_tag	ffmpeg.c	/^static unsigned int video_codec_tag = 0;$/;"	v	file:
video_codec_tag	ffmpeg/ffmpeg.c	/^static unsigned int video_codec_tag = 0;$/;"	v	file:
video_current_pos	ffplay.c	/^    int64_t video_current_pos;                   \/\/\/<current displayed file pos$/;"	m	struct:VideoState	file:
video_current_pts	ffplay.c	/^    double video_current_pts;                    \/\/\/<current displayed pts (different from video_clock if frame fifos are used)$/;"	m	struct:VideoState	file:
video_current_pts_drift	ffplay.c	/^    double video_current_pts_drift;              \/\/\/<video_current_pts - time (av_gettime) at which we updated video_current_pts - used to have running video pts$/;"	m	struct:VideoState	file:
video_data	libavdevice/v4l2.c	/^struct video_data {$/;"	s	file:
video_decode_example	doc/examples/encoding-example.c	/^static void video_decode_example(const char *outfilename, const char *filename)$/;"	f	file:
video_disable	ffmpeg.c	/^static int video_disable = 0;$/;"	v	file:
video_disable	ffmpeg/ffmpeg.c	/^static int video_disable = 0;$/;"	v	file:
video_disable	ffplay.c	/^static int video_disable;$/;"	v	file:
video_discard	ffmpeg.c	/^static int video_discard = 0;$/;"	v	file:
video_discard	ffmpeg/ffmpeg.c	/^static int video_discard = 0;$/;"	v	file:
video_display	ffplay.c	/^static void video_display(VideoState *is)$/;"	f	file:
video_enc	libavformat/swf.h	/^    AVCodecContext *audio_enc, *video_enc;$/;"	m	struct:__anon336
video_encode_example	doc/examples/encoding-example.c	/^static void video_encode_example(const char *filename)$/;"	f	file:
video_fd	libavdevice/bktr.c	/^    int video_fd;$/;"	m	struct:__anon312	file:
video_formats	libavdevice/v4l.c	/^} video_formats [] = {$/;"	v	typeref:struct:__anon317	file:
video_fps	libavformat/mtv.c	/^    unsigned int video_fps;         \/\/$/;"	m	struct:MTVDemuxContext	file:
video_frame	libavformat/bfi.c	/^    int video_frame;$/;"	m	struct:BFIContext	file:
video_frame_height	libavformat/dsicin.c	/^    int video_frame_height;$/;"	m	struct:CinFileHeader	file:
video_frame_num	libavdevice/dshow.c	/^    unsigned int video_frame_num;$/;"	m	struct:dshow_ctx	file:
video_frame_number	libavformat/swf.h	/^    int video_frame_number;$/;"	m	struct:__anon336
video_frame_size	libavformat/dsicin.c	/^    int video_frame_size;$/;"	m	struct:CinFileHeader	file:
video_frame_size	libavformat/dsicin.c	/^    int video_frame_size;$/;"	m	struct:CinFrameHeader	file:
video_frame_size	libavformat/mvi.c	/^    int video_frame_size;$/;"	m	struct:MviDemuxContext	file:
video_frame_type	libavformat/dsicin.c	/^    int video_frame_type;$/;"	m	struct:CinFrameHeader	file:
video_frame_width	libavformat/dsicin.c	/^    int video_frame_width;$/;"	m	struct:CinFileHeader	file:
video_height	libavformat/ipmovie.c	/^    unsigned int video_height;$/;"	m	struct:IPMVEContext	file:
video_image_display	ffplay.c	/^static void video_image_display(VideoState *is)$/;"	f	file:
video_language	ffmpeg.c	/^static char *video_language = NULL;$/;"	v	file:
video_language	ffmpeg/ffmpeg.c	/^static char *video_language = NULL;$/;"	v	file:
video_offsets	libavformat/r3d.c	/^    unsigned *video_offsets;$/;"	m	struct:__anon486	file:
video_offsets_count	libavformat/r3d.c	/^    unsigned video_offsets_count;$/;"	m	struct:__anon486	file:
video_open	ffplay.c	/^static int video_open(VideoState *is){$/;"	f	file:
video_options	libavformat/rawdec.c	/^static const AVOption video_options[] = {$/;"	v	file:
video_opts	cmdutils.c	/^AVDictionary *format_opts, *video_opts, *audio_opts, *sub_opts;$/;"	v
video_opts	ffmpeg/cmdutils.c	/^AVDictionary *format_opts, *video_opts, *audio_opts, *sub_opts;$/;"	v
video_outbuf	doc/examples/muxing-example.c	/^uint8_t *video_outbuf;$/;"	v
video_outbuf_size	doc/examples/muxing-example.c	/^int frame_count, video_outbuf_size;$/;"	v
video_packet	libavformat/yop.c	/^    AVPacket video_packet;$/;"	m	struct:yop_dec_context	file:
video_pts	libavformat/4xm.c	/^    int64_t video_pts;$/;"	m	struct:FourxmDemuxContext	file:
video_pts	libavformat/bethsoftvid.c	/^    int video_pts;$/;"	m	struct:BVID_DemuxContext	file:
video_pts	libavformat/bink.c	/^    int64_t video_pts;$/;"	m	struct:__anon403	file:
video_pts	libavformat/idroqdec.c	/^    int64_t video_pts;$/;"	m	struct:RoqDemuxContext	file:
video_pts	libavformat/ipmovie.c	/^    int64_t video_pts;$/;"	m	struct:IPMVEContext	file:
video_pts	libavformat/mm.c	/^  unsigned int audio_pts, video_pts;$/;"	m	struct:__anon421	file:
video_qscale	ffmpeg.c	/^static float video_qscale = 0;$/;"	v	file:
video_qscale	ffmpeg/ffmpeg.c	/^static float video_qscale = 0;$/;"	v	file:
video_rate_abbrs	libavutil/parseutils.c	/^static const VideoRateAbbr video_rate_abbrs[]= {$/;"	v	file:
video_rc_override_string	ffmpeg.c	/^static const char *video_rc_override_string=NULL;$/;"	v	file:
video_rc_override_string	ffmpeg/ffmpeg.c	/^static const char *video_rc_override_string=NULL;$/;"	v	file:
video_refresh	ffplay.c	/^static void video_refresh(void *opaque)$/;"	f	file:
video_resample	ffmpeg.c	/^    int video_resample;$/;"	m	struct:AVOutputStream	file:
video_resample	ffmpeg/ffmpeg.c	/^    int video_resample;$/;"	m	struct:AVOutputStream	file:
video_signal_type_present_flag	libavcodec/h264.h	/^    int video_signal_type_present_flag;$/;"	m	struct:SPS
video_size	ffmpeg.c	/^static int64_t video_size = 0;$/;"	v	file:
video_size	ffmpeg/ffmpeg.c	/^static int64_t video_size = 0;$/;"	v	file:
video_size	libavdevice/bktr.c	/^    char *video_size; \/**< String describing video size, set by a private option. *\/$/;"	m	struct:__anon312	file:
video_size	libavdevice/libdc1394.c	/^    char *video_size;       \/**< String describing video size, set by a private option. *\/$/;"	m	struct:dc1394_data	file:
video_size	libavdevice/v4l2.c	/^    char *video_size; \/**< String describing video size, set by a private option. *\/$/;"	m	struct:video_data	file:
video_size	libavdevice/vfwcap.c	/^    char *video_size;       \/**< A string describing video size, set by a private option. *\/$/;"	m	struct:vfw_ctx	file:
video_size	libavdevice/x11grab.c	/^    char *video_size;        \/**< String describing video size, set by a private option. *\/$/;"	m	struct:x11_grab	file:
video_size	libavformat/bfi.c	/^    int video_size;$/;"	m	struct:BFIContext	file:
video_size	libavformat/img2.c	/^    char *video_size;       \/**< Set by a private option. *\/$/;"	m	struct:__anon389	file:
video_size	libavformat/jvdec.c	/^    int video_size;    \/** video packet size (bytes) *\/$/;"	m	struct:__anon425	file:
video_size	libavformat/rawdec.h	/^    char *video_size;         \/**< String describing video size, set by a private option. *\/$/;"	m	struct:FFRawVideoDemuxerContext
video_size	libavformat/tty.c	/^    char *video_size;\/**< A string describing video size, set by a private option. *\/$/;"	m	struct:__anon485	file:
video_size_abbrs	libavutil/parseutils.c	/^static const VideoSizeAbbr video_size_abbrs[] = {$/;"	v	file:
video_st	ffplay.c	/^    AVStream *video_st;$/;"	m	struct:VideoState	file:
video_standard	ffmpeg.c	/^static char *video_standard;$/;"	v	file:
video_standard	ffmpeg/ffmpeg.c	/^static char *video_standard;$/;"	v	file:
video_stream	ffplay.c	/^    int video_stream;$/;"	m	struct:VideoState	file:
video_stream	libavformat/rmenc.c	/^    StreamInfo *audio_stream, *video_stream;$/;"	m	struct:__anon383	file:
video_stream_copy	ffmpeg.c	/^static int video_stream_copy = 0;$/;"	v	file:
video_stream_copy	ffmpeg/ffmpeg.c	/^static int video_stream_copy = 0;$/;"	v	file:
video_stream_index	libavformat/4xm.c	/^    int video_stream_index;$/;"	m	struct:FourxmDemuxContext	file:
video_stream_index	libavformat/dsicin.c	/^    int video_stream_index;$/;"	m	struct:CinDemuxContext	file:
video_stream_index	libavformat/electronicarts.c	/^    int video_stream_index;$/;"	m	struct:EaDemuxContext	file:
video_stream_index	libavformat/flic.c	/^    int video_stream_index;$/;"	m	struct:FlicDemuxContext	file:
video_stream_index	libavformat/idcin.c	/^    int video_stream_index;$/;"	m	struct:IdcinDemuxContext	file:
video_stream_index	libavformat/idroqdec.c	/^    int video_stream_index;$/;"	m	struct:RoqDemuxContext	file:
video_stream_index	libavformat/ipmovie.c	/^    int video_stream_index;$/;"	m	struct:IPMVEContext	file:
video_stream_index	libavformat/psxstr.c	/^    int video_stream_index;$/;"	m	struct:StrChannel	file:
video_stream_index	libavformat/segafilm.c	/^    int video_stream_index;$/;"	m	struct:FilmDemuxContext	file:
video_stream_index	libavformat/sierravmd.c	/^    int video_stream_index;$/;"	m	struct:VmdDemuxContext	file:
video_stream_index	libavformat/thp.c	/^    int              video_stream_index;$/;"	m	struct:ThpDemuxContext	file:
video_stream_index	libavformat/tiertexseq.c	/^    int video_stream_index;$/;"	m	struct:SeqDemuxContext	file:
video_stream_index	libavformat/wc3movie.c	/^    int video_stream_index;$/;"	m	struct:Wc3DemuxContext	file:
video_stream_index	libavformat/westwood.c	/^    int video_stream_index;$/;"	m	struct:WsVqaDemuxContext	file:
video_stream_pts	libavformat/dsicin.c	/^    int64_t video_stream_pts;$/;"	m	struct:CinDemuxContext	file:
video_stype	libavcodec/dvdata.h	/^    int              video_stype;           \/* stype for VAUX source pack *\/$/;"	m	struct:DVprofile
video_sync_method	ffmpeg.c	/^static int video_sync_method= -1;$/;"	v	file:
video_sync_method	ffmpeg/ffmpeg.c	/^static int video_sync_method= -1;$/;"	v	file:
video_thread	ffplay.c	/^static int video_thread(void *arg)$/;"	f	file:
video_tid	ffplay.c	/^    SDL_Thread *video_tid;$/;"	m	struct:VideoState	file:
video_type	libavformat/jvdec.c	/^    int video_type;    \/** per-frame video compression type *\/$/;"	m	struct:__anon425	file:
video_type	libavformat/segafilm.c	/^    enum CodecID video_type;$/;"	m	struct:FilmDemuxContext	typeref:enum:FilmDemuxContext::CodecID	file:
video_width	libavformat/ipmovie.c	/^    unsigned int video_width;$/;"	m	struct:IPMVEContext	file:
video_win	libavdevice/v4l.c	/^    struct video_window video_win;$/;"	m	struct:__anon316	typeref:struct:__anon316::video_window	file:
videobufpos	libavformat/rmdec.c	/^    int videobufpos;   \/\/\/< position for the next slice in the video buffer$/;"	m	struct:RMStream	file:
videobufsize	libavformat/rmdec.c	/^    int videobufsize;  \/\/\/< current assembled frame size$/;"	m	struct:RMStream	file:
videoindex	libavformat/smacker.c	/^    int videoindex;$/;"	m	struct:SmackerContext	file:
videoq	ffplay.c	/^    PacketQueue videoq;$/;"	m	struct:VideoState	file:
videostream_cb	libavdevice/vfwcap.c	/^static LRESULT CALLBACK videostream_cb(HWND hwnd, LPVIDEOHDR vdhdr)$/;"	f	file:
vidpos	libavformat/dxa.c	/^    int64_t wavpos, vidpos;$/;"	m	struct:__anon330	file:
vis	libavcodec/j2k.h	/^    uint8_t vis;$/;"	m	struct:J2kTgtNode
vis_420P_ARGB32	libswscale/sparc/yuv2rgb_vis.c	/^static int vis_420P_ARGB32(SwsContext *c, uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
vis_422P_ARGB32	libswscale/sparc/yuv2rgb_vis.c	/^static int vis_422P_ARGB32(SwsContext *c, uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
vis_alignaddr	libavcodec/sparc/vis.h	/^static inline const void *vis_alignaddr(const void *_ptr)$/;"	f
vis_alignaddr_g0	libavcodec/sparc/vis.h	/^static inline void vis_alignaddr_g0(void *_ptr)$/;"	f
vis_alignaddrl	libavcodec/sparc/vis.h	/^static inline void *vis_alignaddrl(void *_ptr)$/;"	f
vis_alignaddrl_g0	libavcodec/sparc/vis.h	/^static inline void vis_alignaddrl_g0(void *_ptr)$/;"	f
vis_and	libavcodec/sparc/vis.h	310;"	d
vis_andnot1	libavcodec/sparc/vis.h	322;"	d
vis_andnot1s	libavcodec/sparc/vis.h	323;"	d
vis_andnot2	libavcodec/sparc/vis.h	324;"	d
vis_andnot2s	libavcodec/sparc/vis.h	325;"	d
vis_ands	libavcodec/sparc/vis.h	311;"	d
vis_d	libavcodec/sparc/vis.h	125;"	d
vis_d12d	libavcodec/sparc/vis.h	96;"	d
vis_d22d	libavcodec/sparc/vis.h	102;"	d
vis_d2s	libavcodec/sparc/vis.h	84;"	d
vis_dd2d	libavcodec/sparc/vis.h	63;"	d
vis_dreg	libavcodec/sparc/vis.h	48;"	d
vis_expand	libavcodec/sparc/vis.h	211;"	d
vis_faligndata	libavcodec/sparc/vis.h	290;"	d
vis_fone	libavcodec/sparc/vis.h	296;"	d
vis_fones	libavcodec/sparc/vis.h	297;"	d
vis_fzero	libavcodec/sparc/vis.h	294;"	d
vis_fzeros	libavcodec/sparc/vis.h	295;"	d
vis_ld32	libavcodec/sparc/vis.h	156;"	d
vis_ld32_2	libavcodec/sparc/vis.h	157;"	d
vis_ld64	libavcodec/sparc/vis.h	160;"	d
vis_ld64_2	libavcodec/sparc/vis.h	161;"	d
vis_ldblk	libavcodec/sparc/vis.h	165;"	d
vis_level	libavcodec/sparc/dsputil_vis.c	/^static int vis_level(void)$/;"	f	file:
vis_m2r	libavcodec/sparc/vis.h	136;"	d
vis_m2r_2	libavcodec/sparc/vis.h	139;"	d
vis_membar_storestore	libavcodec/sparc/vis.h	185;"	d
vis_membar_sync	libavcodec/sparc/vis.h	188;"	d
vis_mul8sux16	libavcodec/sparc/vis.h	219;"	d
vis_mul8ulx16	libavcodec/sparc/vis.h	220;"	d
vis_mul8x16	libavcodec/sparc/vis.h	216;"	d
vis_mul8x16al	libavcodec/sparc/vis.h	218;"	d
vis_mul8x16au	libavcodec/sparc/vis.h	217;"	d
vis_muld8sux16	libavcodec/sparc/vis.h	221;"	d
vis_muld8ulx16	libavcodec/sparc/vis.h	222;"	d
vis_nand	libavcodec/sparc/vis.h	312;"	d
vis_nands	libavcodec/sparc/vis.h	313;"	d
vis_nor	libavcodec/sparc/vis.h	308;"	d
vis_nors	libavcodec/sparc/vis.h	309;"	d
vis_not1	libavcodec/sparc/vis.h	302;"	d
vis_not1s	libavcodec/sparc/vis.h	303;"	d
vis_not2	libavcodec/sparc/vis.h	304;"	d
vis_not2s	libavcodec/sparc/vis.h	305;"	d
vis_opc_base	libavcodec/sparc/vis.h	45;"	d
vis_opf	libavcodec/sparc/vis.h	46;"	d
vis_or	libavcodec/sparc/vis.h	306;"	d
vis_ornot1	libavcodec/sparc/vis.h	318;"	d
vis_ornot1s	libavcodec/sparc/vis.h	319;"	d
vis_ornot2	libavcodec/sparc/vis.h	320;"	d
vis_ornot2s	libavcodec/sparc/vis.h	321;"	d
vis_ors	libavcodec/sparc/vis.h	307;"	d
vis_pack16	libavcodec/sparc/vis.h	208;"	d
vis_pack32	libavcodec/sparc/vis.h	209;"	d
vis_packfix	libavcodec/sparc/vis.h	210;"	d
vis_padd16	libavcodec/sparc/vis.h	197;"	d
vis_padd16s	libavcodec/sparc/vis.h	198;"	d
vis_padd32	libavcodec/sparc/vis.h	199;"	d
vis_padd32s	libavcodec/sparc/vis.h	200;"	d
vis_pdist	libavcodec/sparc/vis.h	329;"	d
vis_pmerge	libavcodec/sparc/vis.h	212;"	d
vis_psub16	libavcodec/sparc/vis.h	201;"	d
vis_psub16s	libavcodec/sparc/vis.h	202;"	d
vis_psub32	libavcodec/sparc/vis.h	203;"	d
vis_psub32s	libavcodec/sparc/vis.h	204;"	d
vis_r2m	libavcodec/sparc/vis.h	130;"	d
vis_r2m_2	libavcodec/sparc/vis.h	133;"	d
vis_rd_d	libavcodec/sparc/vis.h	54;"	d
vis_rd_s	libavcodec/sparc/vis.h	53;"	d
vis_rs1_d	libavcodec/sparc/vis.h	50;"	d
vis_rs1_s	libavcodec/sparc/vis.h	49;"	d
vis_rs2_d	libavcodec/sparc/vis.h	52;"	d
vis_rs2_s	libavcodec/sparc/vis.h	51;"	d
vis_s	libavcodec/sparc/vis.h	120;"	d
vis_s12s	libavcodec/sparc/vis.h	108;"	d
vis_s22s	libavcodec/sparc/vis.h	114;"	d
vis_s2d	libavcodec/sparc/vis.h	90;"	d
vis_sd2d	libavcodec/sparc/vis.h	77;"	d
vis_set_gsr	libavcodec/sparc/vis.h	/^static inline void vis_set_gsr(unsigned int _val)$/;"	f
vis_src1	libavcodec/sparc/vis.h	298;"	d
vis_src1s	libavcodec/sparc/vis.h	299;"	d
vis_src2	libavcodec/sparc/vis.h	300;"	d
vis_src2s	libavcodec/sparc/vis.h	301;"	d
vis_sreg	libavcodec/sparc/vis.h	47;"	d
vis_ss2d	libavcodec/sparc/vis.h	70;"	d
vis_ss2s	libavcodec/sparc/vis.h	56;"	d
vis_st32	libavcodec/sparc/vis.h	158;"	d
vis_st32_2	libavcodec/sparc/vis.h	159;"	d
vis_st64	libavcodec/sparc/vis.h	162;"	d
vis_st64_2	libavcodec/sparc/vis.h	163;"	d
vis_stblk	libavcodec/sparc/vis.h	175;"	d
vis_xnor	libavcodec/sparc/vis.h	316;"	d
vis_xnors	libavcodec/sparc/vis.h	317;"	d
vis_xor	libavcodec/sparc/vis.h	314;"	d
vis_xors	libavcodec/sparc/vis.h	315;"	d
visualization_buffer	libavcodec/mpegvideo.h	/^    uint8_t *visualization_buffer[3]; \/\/< temporary buffer vor MV visualization$/;"	m	struct:MpegEncContext
vlc	libavcodec/dca.c	/^    VLC vlc[8];                 \/\/\/< actual codes$/;"	m	struct:__anon92	file:
vlc	libavcodec/dv_tablegen.h	/^   uint32_t vlc;$/;"	m	struct:dv_vlc_pair
vlc	libavcodec/huffyuv.c	/^    VLC vlc[6];                             \/\/Y,U,V,YY,YU,YV$/;"	m	struct:HYuvContext	file:
vlc	libavcodec/mimic.c	/^    VLC             vlc;$/;"	m	struct:__anon282	file:
vlc	libavcodec/motionpixels.c	/^    VLC vlc;$/;"	m	struct:MotionPixelsContext	file:
vlc	libavcodec/msmpeg4data.h	/^    VLC vlc;                \/* decoding: vlc *\/$/;"	m	struct:MVTable
vlc	libavcodec/rl.h	/^    VLC vlc;                       \/\/\/< decoding only deprecated FIXME remove$/;"	m	struct:RLTable
vlc	libavcodec/truemotion2.c	/^    VLC vlc; \/\/\/< table for FFmpeg bitstream reader$/;"	m	struct:TM2Codes	file:
vlc	libavcodec/vorbisdec.c	/^    VLC          vlc;$/;"	m	struct:__anon258	file:
vlc_bits	libavcodec/dnxhdenc.h	/^    uint8_t  *vlc_bits;$/;"	m	struct:DNXHDEncContext
vlc_codes	libavcodec/dnxhdenc.h	/^    uint32_t *vlc_codes;$/;"	m	struct:DNXHDEncContext
vlc_decode_block	libavcodec/mimic.c	/^static int vlc_decode_block(MimicContext *ctx, int num_coeffs, int qscale)$/;"	f	file:
vlc_num	libavcodec/bink.c	/^    int     vlc_num;  \/\/\/< tree number (in bink_trees[])$/;"	m	struct:Tree	file:
vlc_offs	libavcodec/vc1dec.c	/^static const uint16_t vlc_offs[] = {$/;"	v	file:
vlc_offsets	libavcodec/imc.c	/^static const int vlc_offsets[17] = {$/;"	v	file:
vlc_offsets	libavcodec/mpc8.c	/^static const uint16_t vlc_offsets[13] = {$/;"	v	file:
vlc_ps	libavcodec/aacps.c	/^static VLC vlc_ps[10];$/;"	v	file:
vlc_sbr	libavcodec/aacsbr.c	/^static VLC vlc_sbr[10];$/;"	v	file:
vlc_sbr_lav	libavcodec/aacsbr.c	/^static const int8_t vlc_sbr_lav[10] =$/;"	v	file:
vlc_scalefactors	libavcodec/aacdec.c	/^static VLC vlc_scalefactors;$/;"	v	file:
vlc_set	libavcodec/rv34.h	/^    int vlc_set;           \/\/\/< VLCs used for this slice$/;"	m	struct:SliceInfo
vlc_spectral	libavcodec/aacdec.c	/^static VLC vlc_spectral[11];$/;"	v	file:
vlc_stage3_values	libavcodec/qdm2data.h	/^static const int vlc_stage3_values[60] = {$/;"	v
vlc_state	libavcodec/ffv1.c	/^    VlcState *vlc_state;$/;"	m	struct:PlaneContext	file:
vlc_tab_diff	libavcodec/qdm2.c	/^static VLC vlc_tab_diff;$/;"	v	file:
vlc_tab_diff_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_diff_huffbits[37] = {$/;"	v
vlc_tab_diff_huffcodes	libavcodec/qdm2data.h	/^static const uint16_t vlc_tab_diff_huffcodes[37] = {$/;"	v
vlc_tab_fft_tone_offset	libavcodec/qdm2.c	/^static VLC vlc_tab_fft_tone_offset[5];$/;"	v	file:
vlc_tab_fft_tone_offset_0_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_fft_tone_offset_0_huffbits[23] = {$/;"	v
vlc_tab_fft_tone_offset_0_huffcodes	libavcodec/qdm2data.h	/^static const uint16_t vlc_tab_fft_tone_offset_0_huffcodes[23] = {$/;"	v
vlc_tab_fft_tone_offset_1_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_fft_tone_offset_1_huffbits[28] = {$/;"	v
vlc_tab_fft_tone_offset_1_huffcodes	libavcodec/qdm2data.h	/^static const uint16_t vlc_tab_fft_tone_offset_1_huffcodes[28] = {$/;"	v
vlc_tab_fft_tone_offset_2_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_fft_tone_offset_2_huffbits[32] = {$/;"	v
vlc_tab_fft_tone_offset_2_huffcodes	libavcodec/qdm2data.h	/^static const uint16_t vlc_tab_fft_tone_offset_2_huffcodes[32] = {$/;"	v
vlc_tab_fft_tone_offset_3_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_fft_tone_offset_3_huffbits[35] = {$/;"	v
vlc_tab_fft_tone_offset_3_huffcodes	libavcodec/qdm2data.h	/^static const uint16_t vlc_tab_fft_tone_offset_3_huffcodes[35] = {$/;"	v
vlc_tab_fft_tone_offset_4_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_fft_tone_offset_4_huffbits[38] = {$/;"	v
vlc_tab_fft_tone_offset_4_huffcodes	libavcodec/qdm2data.h	/^static const uint16_t vlc_tab_fft_tone_offset_4_huffcodes[38] = {$/;"	v
vlc_tab_level	libavcodec/qdm2.c	/^static VLC vlc_tab_level;$/;"	v	file:
vlc_tab_level_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_level_huffbits[24] = {$/;"	v
vlc_tab_level_huffcodes	libavcodec/qdm2data.h	/^static const uint16_t vlc_tab_level_huffcodes[24] = {$/;"	v
vlc_tab_run	libavcodec/qdm2.c	/^static VLC vlc_tab_run;$/;"	v	file:
vlc_tab_run_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_run_huffbits[6] = {$/;"	v
vlc_tab_run_huffcodes	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_run_huffcodes[6] = {$/;"	v
vlc_tab_tone_level_idx_hi1	libavcodec/qdm2.c	/^static VLC vlc_tab_tone_level_idx_hi1;$/;"	v	file:
vlc_tab_tone_level_idx_hi1_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_tone_level_idx_hi1_huffbits[20] = {$/;"	v
vlc_tab_tone_level_idx_hi1_huffcodes	libavcodec/qdm2data.h	/^static const uint16_t vlc_tab_tone_level_idx_hi1_huffcodes[20] = {$/;"	v
vlc_tab_tone_level_idx_hi2	libavcodec/qdm2.c	/^static VLC vlc_tab_tone_level_idx_hi2;$/;"	v	file:
vlc_tab_tone_level_idx_hi2_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_tone_level_idx_hi2_huffbits[24] = {$/;"	v
vlc_tab_tone_level_idx_hi2_huffcodes	libavcodec/qdm2data.h	/^static const uint16_t vlc_tab_tone_level_idx_hi2_huffcodes[24] = {$/;"	v
vlc_tab_tone_level_idx_mid	libavcodec/qdm2.c	/^static VLC vlc_tab_tone_level_idx_mid;$/;"	v	file:
vlc_tab_tone_level_idx_mid_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_tone_level_idx_mid_huffbits[24] = {$/;"	v
vlc_tab_tone_level_idx_mid_huffcodes	libavcodec/qdm2data.h	/^static const uint16_t vlc_tab_tone_level_idx_mid_huffcodes[24] = {$/;"	v
vlc_tab_type30	libavcodec/qdm2.c	/^static VLC vlc_tab_type30;$/;"	v	file:
vlc_tab_type30_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_type30_huffbits[9] = {$/;"	v
vlc_tab_type30_huffcodes	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_type30_huffcodes[9] = {$/;"	v
vlc_tab_type34	libavcodec/qdm2.c	/^static VLC vlc_tab_type34;$/;"	v	file:
vlc_tab_type34_huffbits	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_type34_huffbits[10] = {$/;"	v
vlc_tab_type34_huffcodes	libavcodec/qdm2data.h	/^static const uint8_t vlc_tab_type34_huffcodes[10] = {$/;"	v
vlc_tables	libavcodec/imc.c	/^static VLC_TYPE vlc_tables[VLC_TABLES_SIZE][2];$/;"	v	file:
vlcdec_lookup	libavcodec/mimic.c	/^static const int8_t vlcdec_lookup[9][64] = {$/;"	v	file:
vlcs	libavcodec/mjpegdec.h	/^    VLC vlcs[3][4];$/;"	m	struct:MJpegDecodeContext
vmd_decode	libavcodec/vmdav.c	/^static void vmd_decode(VmdVideoContext *s)$/;"	f	file:
vmd_frame	libavformat/sierravmd.c	/^} vmd_frame;$/;"	t	typeref:struct:__anon349	file:
vmd_header	libavformat/sierravmd.c	/^    unsigned char vmd_header[VMD_HEADER_SIZE];$/;"	m	struct:VmdDemuxContext	file:
vmd_probe	libavformat/sierravmd.c	/^static int vmd_probe(AVProbeData *p)$/;"	f	file:
vmd_read_close	libavformat/sierravmd.c	/^static int vmd_read_close(AVFormatContext *s)$/;"	f	file:
vmd_read_header	libavformat/sierravmd.c	/^static int vmd_read_header(AVFormatContext *s,$/;"	f	file:
vmd_read_packet	libavformat/sierravmd.c	/^static int vmd_read_packet(AVFormatContext *s,$/;"	f	file:
vmdaudio_decode_audio	libavcodec/vmdav.c	/^static void vmdaudio_decode_audio(VmdAudioContext *s, unsigned char *data,$/;"	f	file:
vmdaudio_decode_frame	libavcodec/vmdav.c	/^static int vmdaudio_decode_frame(AVCodecContext *avctx,$/;"	f	file:
vmdaudio_decode_init	libavcodec/vmdav.c	/^static av_cold int vmdaudio_decode_init(AVCodecContext *avctx)$/;"	f	file:
vmdaudio_loadsound	libavcodec/vmdav.c	/^static int vmdaudio_loadsound(VmdAudioContext *s, unsigned char *data,$/;"	f	file:
vmdaudio_table	libavcodec/vmdav.c	/^static const uint16_t vmdaudio_table[128] = {$/;"	v	file:
vmdvideo_decode_end	libavcodec/vmdav.c	/^static av_cold int vmdvideo_decode_end(AVCodecContext *avctx)$/;"	f	file:
vmdvideo_decode_frame	libavcodec/vmdav.c	/^static int vmdvideo_decode_frame(AVCodecContext *avctx,$/;"	f	file:
vmdvideo_decode_init	libavcodec/vmdav.c	/^static av_cold int vmdvideo_decode_init(AVCodecContext *avctx)$/;"	f	file:
vmnc_get_pixel	libavcodec/vmnc.c	/^static av_always_inline int vmnc_get_pixel(const uint8_t* buf, int bpp, int be) {$/;"	f	file:
vo_format_name	libavfilter/libmpcodecs/img_format.c	/^const char *vo_format_name(int format)$/;"	f
vo_functions_s	libavfilter/libmpcodecs/libvo/video_out.h	/^typedef struct vo_functions_s$/;"	s
vo_functions_t	libavfilter/libmpcodecs/libvo/video_out.h	/^} vo_functions_t;$/;"	t	typeref:struct:vo_functions_s
vo_info_s	libavfilter/libmpcodecs/libvo/video_out.h	/^typedef struct vo_info_s$/;"	s
vo_info_t	libavfilter/libmpcodecs/libvo/video_out.h	/^} vo_info_t;$/;"	t	typeref:struct:vo_info_s
vo_mpegpes_t	libavfilter/libmpcodecs/img_format.h	/^} vo_mpegpes_t;$/;"	t	typeref:struct:__anon33
vo_rect	libavfilter/libmpcodecs/libvo/video_out.h	/^struct vo_rect {$/;"	s
vo_time	libavfilter/libmpcodecs/vf_filmdint.c	/^    double diff_time, merge_time, decode_time, vo_time, filter_time;$/;"	m	struct:vf_priv_s	file:
vo_type	libavcodec/mpegvideo.h	/^    int vo_type;$/;"	m	struct:MpegEncContext
vobu_start_pts	libavformat/mpegenc.c	/^    int64_t vobu_start_pts;$/;"	m	struct:__anon428	file:
voc	libavformat/avs.c	/^    VocDecContext voc;$/;"	m	struct:avs_format	file:
voc	libavformat/c93.c	/^    VocDecContext voc;$/;"	m	struct:__anon482	file:
voc_dec_context	libavformat/voc.h	/^typedef struct voc_dec_context {$/;"	s
voc_enc_context	libavformat/vocenc.c	/^typedef struct voc_enc_context {$/;"	s	file:
voc_get_packet	libavformat/vocdec.c	/^voc_get_packet(AVFormatContext *s, AVPacket *pkt, AVStream *st, int max_size)$/;"	f
voc_probe	libavformat/vocdec.c	/^static int voc_probe(AVProbeData *p)$/;"	f	file:
voc_read_header	libavformat/vocdec.c	/^static int voc_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
voc_read_packet	libavformat/vocdec.c	/^static int voc_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
voc_type	libavformat/voc.h	/^typedef enum voc_type {$/;"	g
voc_write_header	libavformat/vocenc.c	/^static int voc_write_header(AVFormatContext *s)$/;"	f	file:
voc_write_packet	libavformat/vocenc.c	/^static int voc_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
voc_write_trailer	libavformat/vocenc.c	/^static int voc_write_trailer(AVFormatContext *s)$/;"	f	file:
voice_factor	libavcodec/amrwbdec.c	/^static float voice_factor(float *p_vector, float p_gain,$/;"	f	file:
vol_control_parameters	libavcodec/mpegvideo.h	/^    int vol_control_parameters;      \/\/\/< does the stream contain the low_delay flag, used to workaround buggy encoders$/;"	m	struct:MpegEncContext
vol_flags	libavcodec/libxvidff.c	/^    int vol_flags;                 \/**< VOL flags for Xvid encoder *\/$/;"	m	struct:xvid_context	file:
vol_sprite_usage	libavcodec/mpegvideo.h	/^    int vol_sprite_usage;$/;"	m	struct:MpegEncContext
volume	libavformat/isom.h	/^    char volume[28];$/;"	m	struct:__anon466
vop_dquant_decoding	libavcodec/vc1.c	/^static int vop_dquant_decoding(VC1Context *v)$/;"	f	file:
vop_flags	libavcodec/libxvidff.c	/^    int vop_flags;                 \/**< VOP flags for Xvid encoder *\/$/;"	m	struct:xvid_context	file:
vorbis_codebook	libavcodec/vorbisdec.c	/^} vorbis_codebook;$/;"	t	typeref:struct:__anon258	file:
vorbis_context	libavcodec/vorbisdec.c	/^} vorbis_context;$/;"	t	typeref:struct:vorbis_context_s	file:
vorbis_context_s	libavcodec/vorbisdec.c	/^typedef struct vorbis_context_s {$/;"	s	file:
vorbis_decode_close	libavcodec/vorbisdec.c	/^static av_cold int vorbis_decode_close(AVCodecContext *avccontext)$/;"	f	file:
vorbis_decode_frame	libavcodec/vorbisdec.c	/^static int vorbis_decode_frame(AVCodecContext *avccontext,$/;"	f	file:
vorbis_decode_init	libavcodec/vorbisdec.c	/^static av_cold int vorbis_decode_init(AVCodecContext *avccontext)$/;"	f	file:
vorbis_enc_codebook	libavcodec/vorbisenc.c	/^} vorbis_enc_codebook;$/;"	t	typeref:struct:__anon188	file:
vorbis_enc_context	libavcodec/vorbisenc.c	/^} vorbis_enc_context;$/;"	t	typeref:struct:__anon194	file:
vorbis_enc_floor	libavcodec/vorbisenc.c	/^} vorbis_enc_floor;$/;"	t	typeref:struct:__anon190	file:
vorbis_enc_floor_class	libavcodec/vorbisenc.c	/^} vorbis_enc_floor_class;$/;"	t	typeref:struct:__anon189	file:
vorbis_enc_mapping	libavcodec/vorbisenc.c	/^} vorbis_enc_mapping;$/;"	t	typeref:struct:__anon192	file:
vorbis_enc_mode	libavcodec/vorbisenc.c	/^} vorbis_enc_mode;$/;"	t	typeref:struct:__anon193	file:
vorbis_enc_residue	libavcodec/vorbisenc.c	/^} vorbis_enc_residue;$/;"	t	typeref:struct:__anon191	file:
vorbis_encode_close	libavcodec/vorbisenc.c	/^static av_cold int vorbis_encode_close(AVCodecContext *avccontext)$/;"	f	file:
vorbis_encode_frame	libavcodec/vorbisenc.c	/^static int vorbis_encode_frame(AVCodecContext *avccontext,$/;"	f	file:
vorbis_encode_init	libavcodec/vorbisenc.c	/^static av_cold int vorbis_encode_init(AVCodecContext *avccontext)$/;"	f	file:
vorbis_floor	libavcodec/vorbisdec.c	/^} vorbis_floor;$/;"	t	typeref:struct:__anon259	file:
vorbis_floor0	libavcodec/vorbisdec.c	/^typedef struct vorbis_floor0_s vorbis_floor0;$/;"	t	typeref:struct:vorbis_floor0_s	file:
vorbis_floor0_decode	libavcodec/vorbisdec.c	/^static int vorbis_floor0_decode(vorbis_context *vc,$/;"	f	file:
vorbis_floor0_s	libavcodec/vorbisdec.c	/^        struct vorbis_floor0_s {$/;"	s	union:__anon259::vorbis_floor_u	file:
vorbis_floor1	libavcodec/vorbisdec.c	/^typedef struct vorbis_floor1_s vorbis_floor1;$/;"	t	typeref:struct:vorbis_floor1_s	file:
vorbis_floor1_decode	libavcodec/vorbisdec.c	/^static int vorbis_floor1_decode(vorbis_context *vc,$/;"	f	file:
vorbis_floor1_entry	libavcodec/vorbis.h	/^} vorbis_floor1_entry;$/;"	t	typeref:struct:__anon61
vorbis_floor1_s	libavcodec/vorbisdec.c	/^        struct vorbis_floor1_s {$/;"	s	union:__anon259::vorbis_floor_u	file:
vorbis_floor_data	libavcodec/vorbisdec.c	/^typedef union  vorbis_floor_u  vorbis_floor_data;$/;"	t	typeref:union:vorbis_floor_u	file:
vorbis_floor_decode_func	libavcodec/vorbisdec.c	/^int (* vorbis_floor_decode_func)$/;"	t	file:
vorbis_floor_u	libavcodec/vorbisdec.c	/^    union vorbis_floor_u {$/;"	u	struct:__anon259	file:
vorbis_free	libavcodec/vorbisdec.c	/^static void vorbis_free(vorbis_context *vc)$/;"	f	file:
vorbis_header	libavformat/oggparsevorbis.c	/^vorbis_header (AVFormatContext * s, int idx)$/;"	f	file:
vorbis_inverse_coupling	libavcodec/dsputil.h	/^    void (*vorbis_inverse_coupling)(float *mag, float *ang, int blocksize);$/;"	m	struct:DSPContext
vorbis_inverse_coupling	libavcodec/vorbisdec.c	/^void vorbis_inverse_coupling(float *mag, float *ang, int blocksize)$/;"	f
vorbis_inverse_coupling_3dnow	libavcodec/x86/dsputil_mmx.c	/^static void vorbis_inverse_coupling_3dnow(float *mag, float *ang, int blocksize)$/;"	f	file:
vorbis_inverse_coupling_altivec	libavcodec/ppc/dsputil_altivec.c	/^static void vorbis_inverse_coupling_altivec(float *mag, float *ang,$/;"	f	file:
vorbis_inverse_coupling_sse	libavcodec/x86/dsputil_mmx.c	/^static void vorbis_inverse_coupling_sse(float *mag, float *ang, int blocksize)$/;"	f	file:
vorbis_mapping	libavcodec/vorbisdec.c	/^} vorbis_mapping;$/;"	t	typeref:struct:__anon261	file:
vorbis_mode	libavcodec/vorbisdec.c	/^} vorbis_mode;$/;"	t	typeref:struct:__anon262	file:
vorbis_parse_audio_packet	libavcodec/vorbisdec.c	/^static int vorbis_parse_audio_packet(vorbis_context *vc)$/;"	f	file:
vorbis_parse_id_hdr	libavcodec/vorbisdec.c	/^static int vorbis_parse_id_hdr(vorbis_context *vc)$/;"	f	file:
vorbis_parse_setup_hdr	libavcodec/vorbisdec.c	/^static int vorbis_parse_setup_hdr(vorbis_context *vc)$/;"	f	file:
vorbis_parse_setup_hdr_codebooks	libavcodec/vorbisdec.c	/^static int vorbis_parse_setup_hdr_codebooks(vorbis_context *vc)$/;"	f	file:
vorbis_parse_setup_hdr_floors	libavcodec/vorbisdec.c	/^static int vorbis_parse_setup_hdr_floors(vorbis_context *vc)$/;"	f	file:
vorbis_parse_setup_hdr_mappings	libavcodec/vorbisdec.c	/^static int vorbis_parse_setup_hdr_mappings(vorbis_context *vc)$/;"	f	file:
vorbis_parse_setup_hdr_modes	libavcodec/vorbisdec.c	/^static int vorbis_parse_setup_hdr_modes(vorbis_context *vc)$/;"	f	file:
vorbis_parse_setup_hdr_residues	libavcodec/vorbisdec.c	/^static int vorbis_parse_setup_hdr_residues(vorbis_context *vc)$/;"	f	file:
vorbis_parse_setup_hdr_tdtransforms	libavcodec/vorbisdec.c	/^static int vorbis_parse_setup_hdr_tdtransforms(vorbis_context *vc)$/;"	f	file:
vorbis_residue	libavcodec/vorbisdec.c	/^} vorbis_residue;$/;"	t	typeref:struct:__anon260	file:
vorbis_residue_decode	libavcodec/vorbisdec.c	/^static inline int vorbis_residue_decode(vorbis_context *vc, vorbis_residue *vr,$/;"	f	file:
vorbis_residue_decode_internal	libavcodec/vorbisdec.c	/^static av_always_inline int vorbis_residue_decode_internal(vorbis_context *vc,$/;"	f	file:
vorbisfloat2float	libavcodec/vorbisdec.c	/^static float vorbisfloat2float(unsigned val)$/;"	f	file:
vosData	libavformat/movenc.h	/^    uint8_t     *vosData;$/;"	m	struct:MOVIndex
vosLen	libavformat/movenc.h	/^    int         vosLen;$/;"	m	struct:MOVIndex
vp31_ac_scale_factor	libavcodec/vp3data.h	/^static const uint32_t vp31_ac_scale_factor[64] =$/;"	v
vp31_dc_scale_factor	libavcodec/vp3data.h	/^static const int16_t vp31_dc_scale_factor[64] =$/;"	v
vp31_filter_limit_values	libavcodec/vp3data.h	/^static const uint8_t vp31_filter_limit_values[64] =$/;"	v
vp31_inter_dequant	libavcodec/vp3data.h	/^static const int16_t vp31_inter_dequant[64] =$/;"	v
vp31_intra_c_dequant	libavcodec/vp3data.h	/^static const int16_t vp31_intra_c_dequant[64] =$/;"	v
vp31_intra_y_dequant	libavcodec/vp3data.h	/^static const int16_t vp31_intra_y_dequant[64] =$/;"	v
vp3_decode_end	libavcodec/vp3.c	/^static av_cold int vp3_decode_end(AVCodecContext *avctx)$/;"	f	file:
vp3_decode_flush	libavcodec/vp3.c	/^static void vp3_decode_flush(AVCodecContext *avctx)$/;"	f	file:
vp3_decode_frame	libavcodec/vp3.c	/^static int vp3_decode_frame(AVCodecContext *avctx,$/;"	f	file:
vp3_decode_init	libavcodec/vp3.c	/^static av_cold int vp3_decode_init(AVCodecContext *avctx)$/;"	f	file:
vp3_dequant	libavcodec/vp3.c	/^static inline int vp3_dequant(Vp3DecodeContext *s, Vp3Fragment *frag,$/;"	f	file:
vp3_draw_horiz_band	libavcodec/vp3.c	/^static void vp3_draw_horiz_band(Vp3DecodeContext *s, int y)$/;"	f	file:
vp3_h_loop_filter	libavcodec/dsputil.h	/^    void (*vp3_h_loop_filter)(uint8_t *src, int stride, int *bounding_values);$/;"	m	struct:DSPContext
vp3_idct_constants	libavcodec/arm/vp3dsp_neon.S	/^vp3_idct_constants:$/;"	l
vp3_idct_data	libavcodec/x86/vp3dsp.asm	/^vp3_idct_data: times 8 dw 64277$/;"	l
vp3_idct_dc_add	libavcodec/dsputil.h	/^    void (*vp3_idct_dc_add)(uint8_t *dest\/*align 8*\/, int line_size, const DCTELEM *block\/*align 16*\/);$/;"	m	struct:DSPContext
vp3_idct_funcs	libavcodec/x86/vp3dsp.asm	/^vp3_idct_funcs mmx,  0, REGS$/;"	l
vp3_idct_funcs	libavcodec/x86/vp3dsp.asm	/^vp3_idct_funcs sse2, 9, REGS$/;"	l
vp3_init_thread_copy	libavcodec/vp3.c	/^static int vp3_init_thread_copy(AVCodecContext *avctx)$/;"	f	file:
vp3_update_thread_context	libavcodec/vp3.c	/^static int vp3_update_thread_context(AVCodecContext *dst, const AVCodecContext *src)$/;"	f	file:
vp3_v_loop_filter	libavcodec/dsputil.h	/^    void (*vp3_v_loop_filter)(uint8_t *src, int stride, int *bounding_values);$/;"	m	struct:DSPContext
vp56_ac_dequant	libavcodec/vp56data.h	/^static const uint8_t vp56_ac_dequant[64] = {$/;"	v
vp56_add_predictors_dc	libavcodec/vp56.c	/^static void vp56_add_predictors_dc(VP56Context *s, VP56Frame ref_frame)$/;"	f	file:
vp56_b2p	libavcodec/vp56data.c	/^const uint8_t vp56_b2p[]   = { 0, 0, 0, 0, 1, 2, 3, 3, 3, 3 };$/;"	v
vp56_b6to4	libavcodec/vp56data.c	/^const uint8_t vp56_b6to4[] = { 0, 0, 1, 1, 2, 3 };$/;"	v
vp56_candidate_predictor_pos	libavcodec/vp56data.h	/^static const int8_t vp56_candidate_predictor_pos[12][2] = {$/;"	v
vp56_coeff_bias	libavcodec/vp56data.c	/^const uint8_t vp56_coeff_bias[] = { 0, 1, 2, 3, 4, 5, 7, 11, 19, 35, 67 };$/;"	v
vp56_coeff_bit_length	libavcodec/vp56data.c	/^const uint8_t vp56_coeff_bit_length[] = { 0, 1, 2, 3, 4, 10 };$/;"	v
vp56_coeff_parse_table	libavcodec/vp56data.c	/^const uint8_t vp56_coeff_parse_table[6][11] = {$/;"	v
vp56_context	libavcodec/vp56.h	/^struct vp56_context {$/;"	s
vp56_coord_div	libavcodec/vp56.h	/^    const uint8_t *vp56_coord_div;$/;"	m	struct:vp56_context
vp56_dc_dequant	libavcodec/vp56data.h	/^static const uint8_t vp56_dc_dequant[64] = {$/;"	v
vp56_deblock_filter	libavcodec/vp56.c	/^static void vp56_deblock_filter(VP56Context *s, uint8_t *yuv,$/;"	f	file:
vp56_decode_4mv	libavcodec/vp56.c	/^static void vp56_decode_4mv(VP56Context *s, int row, int col)$/;"	f	file:
vp56_decode_mb	libavcodec/vp56.c	/^static void vp56_decode_mb(VP56Context *s, int row, int col, int is_alpha)$/;"	f	file:
vp56_decode_mv	libavcodec/vp56.c	/^static VP56mb vp56_decode_mv(VP56Context *s, int row, int col)$/;"	f	file:
vp56_def_mb_types_stats	libavcodec/vp56data.c	/^const uint8_t vp56_def_mb_types_stats[3][10][2] = {$/;"	v
vp56_filter_threshold	libavcodec/vp56data.h	/^static const uint8_t vp56_filter_threshold[] = {$/;"	v
vp56_get_vectors_predictors	libavcodec/vp56.c	/^static int vp56_get_vectors_predictors(VP56Context *s, int row, int col,$/;"	f	file:
vp56_mb_type_model_model	libavcodec/vp56data.h	/^static const uint8_t vp56_mb_type_model_model[] = {$/;"	v
vp56_mc	libavcodec/vp56.c	/^static void vp56_mc(VP56Context *s, int b, int plane, uint8_t *src,$/;"	f	file:
vp56_parse_mb_type	libavcodec/vp56.c	/^static VP56mb vp56_parse_mb_type(VP56Context *s,$/;"	f	file:
vp56_parse_mb_type_models	libavcodec/vp56.c	/^static void vp56_parse_mb_type_models(VP56Context *s)$/;"	f	file:
vp56_pc_tree	libavcodec/vp56data.c	/^const VP56Tree vp56_pc_tree[] = {$/;"	v
vp56_pmbt_tree	libavcodec/vp56data.h	/^static const VP56Tree vp56_pmbt_tree[] = {$/;"	v
vp56_pmbtm_tree	libavcodec/vp56data.h	/^static const VP56Tree vp56_pmbtm_tree[] = {$/;"	v
vp56_pre_def_mb_type_stats	libavcodec/vp56data.h	/^static const uint8_t vp56_pre_def_mb_type_stats[16][3][10][2] = {$/;"	v
vp56_pva_tree	libavcodec/vp56data.c	/^const VP56Tree vp56_pva_tree[] = {$/;"	v
vp56_rac_get	libavcodec/vp56.h	/^static av_always_inline int vp56_rac_get(VP56RangeCoder *c)$/;"	f
vp56_rac_get_prob	libavcodec/arm/vp56_arith.h	26;"	d
vp56_rac_get_prob	libavcodec/vp56.h	/^static av_always_inline int vp56_rac_get_prob(VP56RangeCoder *c, uint8_t prob)$/;"	f
vp56_rac_get_prob	libavcodec/vp56.h	211;"	d
vp56_rac_get_prob	libavcodec/x86/vp56_arith.h	/^static av_always_inline int vp56_rac_get_prob(VP56RangeCoder *c, uint8_t prob)$/;"	f
vp56_rac_get_prob	libavcodec/x86/vp56_arith.h	28;"	d
vp56_rac_get_prob_armv6	libavcodec/arm/vp56_arith.h	/^static inline int vp56_rac_get_prob_armv6(VP56RangeCoder *c, int pr)$/;"	f
vp56_rac_get_prob_branchy	libavcodec/arm/vp56_arith.h	57;"	d
vp56_rac_get_prob_branchy	libavcodec/vp56.h	/^static av_always_inline int vp56_rac_get_prob_branchy(VP56RangeCoder *c, int prob)$/;"	f
vp56_rac_get_prob_branchy_armv6	libavcodec/arm/vp56_arith.h	/^static inline int vp56_rac_get_prob_branchy_armv6(VP56RangeCoder *c, int pr)$/;"	f
vp56_rac_get_tree	libavcodec/vp56.h	/^int vp56_rac_get_tree(VP56RangeCoder *c,$/;"	f
vp56_rac_gets	libavcodec/vp56.h	/^static av_unused int vp56_rac_gets(VP56RangeCoder *c, int bits)$/;"	f
vp56_rac_gets_nn	libavcodec/vp56.h	/^static av_unused int vp56_rac_gets_nn(VP56RangeCoder *c, int bits)$/;"	f
vp56_rac_renorm	libavcodec/vp56.h	/^static av_always_inline unsigned int vp56_rac_renorm(VP56RangeCoder *c)$/;"	f
vp56_reference_frame	libavcodec/vp56data.h	/^static const VP56Frame vp56_reference_frame[] = {$/;"	v
vp56_size_changed	libavcodec/vp56.c	/^static int vp56_size_changed(AVCodecContext *avctx)$/;"	f	file:
vp56dsp	libavcodec/vp56.h	/^    VP56DSPContext vp56dsp;$/;"	m	struct:vp56_context
vp5_adjust	libavcodec/vp56dsp.c	/^static int vp5_adjust(int v, int t)$/;"	f	file:
vp5_coeff_groups	libavcodec/vp5data.h	/^static const uint8_t vp5_coeff_groups[] = {$/;"	v
vp5_coord_div	libavcodec/vp5data.h	/^static const uint8_t vp5_coord_div[] = { 2, 2, 2, 2, 4, 4 };$/;"	v
vp5_dccv_lc	libavcodec/vp5data.h	/^static const int16_t vp5_dccv_lc[5][36][2] = {$/;"	v
vp5_dccv_pct	libavcodec/vp5data.h	/^static const uint8_t vp5_dccv_pct[2][11] = {$/;"	v
vp5_decode_init	libavcodec/vp5.c	/^static av_cold int vp5_decode_init(AVCodecContext *avctx)$/;"	f	file:
vp5_default_models_init	libavcodec/vp5.c	/^static void vp5_default_models_init(VP56Context *s)$/;"	f	file:
vp5_parse_coeff	libavcodec/vp5.c	/^static void vp5_parse_coeff(VP56Context *s)$/;"	f	file:
vp5_parse_coeff_models	libavcodec/vp5.c	/^static int vp5_parse_coeff_models(VP56Context *s)$/;"	f	file:
vp5_parse_header	libavcodec/vp5.c	/^static int vp5_parse_header(VP56Context *s, const uint8_t *buf, int buf_size,$/;"	f	file:
vp5_parse_vector_adjustment	libavcodec/vp5.c	/^static void vp5_parse_vector_adjustment(VP56Context *s, VP56mv *vect)$/;"	f	file:
vp5_parse_vector_models	libavcodec/vp5.c	/^static void vp5_parse_vector_models(VP56Context *s)$/;"	f	file:
vp5_ract_lc	libavcodec/vp5data.h	/^static const int16_t vp5_ract_lc[3][3][5][6][2] = {$/;"	v
vp5_ract_pct	libavcodec/vp5data.h	/^static const uint8_t vp5_ract_pct[3][2][6][11] = {$/;"	v
vp5_vmc_pct	libavcodec/vp5data.h	/^static const uint8_t vp5_vmc_pct[2][11] = {$/;"	v
vp6_adjust	libavcodec/vp56dsp.c	/^static int vp6_adjust(int v, int t)$/;"	f	file:
vp6_block_copy_filter	libavcodec/vp6data.h	/^static const int16_t vp6_block_copy_filter[17][8][4] = {$/;"	v
vp6_block_variance	libavcodec/vp6.c	/^static int vp6_block_variance(uint8_t *src, int stride)$/;"	f	file:
vp6_build_huff_tree	libavcodec/vp6.c	/^static int vp6_build_huff_tree(VP56Context *s, uint8_t coeff_model[],$/;"	f	file:
vp6_coeff_groups	libavcodec/vp6data.h	/^static const uint8_t vp6_coeff_groups[] = {$/;"	v
vp6_coeff_order_table_init	libavcodec/vp6.c	/^static void vp6_coeff_order_table_init(VP56Context *s)$/;"	f	file:
vp6_coeff_reorder_pct	libavcodec/vp6data.h	/^static const uint8_t vp6_coeff_reorder_pct[] =  {$/;"	v
vp6_coord_div	libavcodec/vp6data.h	/^static const uint8_t vp6_coord_div[] = { 4, 4, 4, 4, 8, 8 };$/;"	v
vp6_dccv_lc	libavcodec/vp6data.h	/^static const int vp6_dccv_lc[3][5][2] = {$/;"	v
vp6_dccv_pct	libavcodec/vp6data.h	/^static const uint8_t vp6_dccv_pct[2][11] = {$/;"	v
vp6_decode_free	libavcodec/vp6.c	/^static av_cold int vp6_decode_free(AVCodecContext *avctx)$/;"	f	file:
vp6_decode_init	libavcodec/vp6.c	/^static av_cold int vp6_decode_init(AVCodecContext *avctx)$/;"	f	file:
vp6_def_coeff_reorder	libavcodec/vp6data.h	/^static const uint8_t vp6_def_coeff_reorder[] = {$/;"	v
vp6_def_fdv_vector_model	libavcodec/vp6data.h	/^static const uint8_t vp6_def_fdv_vector_model[2][8] = {$/;"	v
vp6_def_pdv_vector_model	libavcodec/vp6data.h	/^static const uint8_t vp6_def_pdv_vector_model[2][7] = {$/;"	v
vp6_def_runv_coeff_model	libavcodec/vp6data.h	/^static const uint8_t vp6_def_runv_coeff_model[2][14] = {$/;"	v
vp6_default_models_init	libavcodec/vp6.c	/^static void vp6_default_models_init(VP56Context *s)$/;"	f	file:
vp6_fdv_pct	libavcodec/vp6data.h	/^static const uint8_t vp6_fdv_pct[2][8] = {$/;"	v
vp6_filter	libavcodec/vp6.c	/^static void vp6_filter(VP56Context *s, uint8_t *dst, uint8_t *src,$/;"	f	file:
vp6_filter_diag2	libavcodec/vp6.c	/^static void vp6_filter_diag2(VP56Context *s, uint8_t *dst, uint8_t *src,$/;"	f	file:
vp6_filter_diag4	libavcodec/vp56dsp.h	/^    void (*vp6_filter_diag4)(uint8_t *dst, uint8_t *src, int stride,$/;"	m	struct:VP56DSPContext
vp6_filter_diag4	libavcodec/x86/vp56dsp.asm	/^vp6_filter_diag4 mmx,  0$/;"	l
vp6_filter_diag4	libavcodec/x86/vp56dsp.asm	/^vp6_filter_diag4 sse2, 8$/;"	l
vp6_filter_hv4	libavcodec/vp6.c	/^static void vp6_filter_hv4(uint8_t *dst, uint8_t *src, int stride,$/;"	f	file:
vp6_get_nb_null	libavcodec/vp6.c	/^static unsigned vp6_get_nb_null(VP56Context *s)$/;"	f	file:
vp6_huff_cmp	libavcodec/vp6.c	/^static int vp6_huff_cmp(const void *va, const void *vb)$/;"	f	file:
vp6_huff_coeff_map	libavcodec/vp6data.h	/^static const uint8_t vp6_huff_coeff_map[] = {$/;"	v
vp6_huff_run_map	libavcodec/vp6data.h	/^static const uint8_t vp6_huff_run_map[] = {$/;"	v
vp6_parse_coeff	libavcodec/vp6.c	/^static void vp6_parse_coeff(VP56Context *s)$/;"	f	file:
vp6_parse_coeff_huffman	libavcodec/vp6.c	/^static void vp6_parse_coeff_huffman(VP56Context *s)$/;"	f	file:
vp6_parse_coeff_models	libavcodec/vp6.c	/^static int vp6_parse_coeff_models(VP56Context *s)$/;"	f	file:
vp6_parse_header	libavcodec/vp6.c	/^static int vp6_parse_header(VP56Context *s, const uint8_t *buf, int buf_size,$/;"	f	file:
vp6_parse_vector_adjustment	libavcodec/vp6.c	/^static void vp6_parse_vector_adjustment(VP56Context *s, VP56mv *vect)$/;"	f	file:
vp6_parse_vector_models	libavcodec/vp6.c	/^static void vp6_parse_vector_models(VP56Context *s)$/;"	f	file:
vp6_pcr_tree	libavcodec/vp6data.h	/^static const VP56Tree vp6_pcr_tree[] = {$/;"	v
vp6_pdv_pct	libavcodec/vp6data.h	/^static const uint8_t vp6_pdv_pct[2][7] = {$/;"	v
vp6_ract_pct	libavcodec/vp6data.h	/^static const uint8_t vp6_ract_pct[3][2][6][11] = {$/;"	v
vp6_runv_pct	libavcodec/vp6data.h	/^static const uint8_t vp6_runv_pct[2][14] = {$/;"	v
vp6_sig_dct_pct	libavcodec/vp6data.h	/^static const uint8_t vp6_sig_dct_pct[2][2] = {$/;"	v
vp8_ac_qlookup	libavcodec/vp8data.h	/^static const uint16_t vp8_ac_qlookup[VP8_MAX_QUANT+1] =$/;"	v
vp8_coeff_band	libavcodec/vp8data.h	/^static const uint8_t vp8_coeff_band[16] =$/;"	v
vp8_coeff_band_indexes	libavcodec/vp8data.h	/^static const int8_t vp8_coeff_band_indexes[8][10] =$/;"	v
vp8_dc_qlookup	libavcodec/vp8data.h	/^static const uint8_t vp8_dc_qlookup[VP8_MAX_QUANT+1] =$/;"	v
vp8_dct_cat1_prob	libavcodec/vp8data.h	/^static const uint8_t vp8_dct_cat1_prob[] = { 159, 0 };$/;"	v
vp8_dct_cat2_prob	libavcodec/vp8data.h	/^static const uint8_t vp8_dct_cat2_prob[] = { 165, 145, 0 };$/;"	v
vp8_dct_cat3_prob	libavcodec/vp8data.h	/^static const uint8_t vp8_dct_cat3_prob[] = { 173, 148, 140, 0 };$/;"	v
vp8_dct_cat4_prob	libavcodec/vp8data.h	/^static const uint8_t vp8_dct_cat4_prob[] = { 176, 155, 140, 135, 0 };$/;"	v
vp8_dct_cat5_prob	libavcodec/vp8data.h	/^static const uint8_t vp8_dct_cat5_prob[] = { 180, 157, 141, 134, 130, 0 };$/;"	v
vp8_dct_cat6_prob	libavcodec/vp8data.h	/^static const uint8_t vp8_dct_cat6_prob[] = { 254, 254, 243, 230, 196, 177, 153, 140, 133, 130, 129, 0 };$/;"	v
vp8_decode	libavcodec/libvpxdec.c	/^static int vp8_decode(AVCodecContext *avctx,$/;"	f	file:
vp8_decode_flush	libavcodec/vp8.c	/^static void vp8_decode_flush(AVCodecContext *avctx)$/;"	f	file:
vp8_decode_frame	libavcodec/vp8.c	/^static int vp8_decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
vp8_decode_free	libavcodec/vp8.c	/^static av_cold int vp8_decode_free(AVCodecContext *avctx)$/;"	f	file:
vp8_decode_init	libavcodec/vp8.c	/^static av_cold int vp8_decode_init(AVCodecContext *avctx)$/;"	f	file:
vp8_decode_init_thread_copy	libavcodec/vp8.c	/^static av_cold int vp8_decode_init_thread_copy(AVCodecContext *avctx)$/;"	f	file:
vp8_decode_update_thread_context	libavcodec/vp8.c	/^static int vp8_decode_update_thread_context(AVCodecContext *dst, const AVCodecContext *src)$/;"	f	file:
vp8_encode	libavcodec/libvpxenc.c	/^static int vp8_encode(AVCodecContext *avctx, uint8_t *buf, int buf_size,$/;"	f	file:
vp8_free	libavcodec/libvpxdec.c	/^static av_cold int vp8_free(AVCodecContext *avctx)$/;"	f	file:
vp8_free	libavcodec/libvpxenc.c	/^static av_cold int vp8_free(AVCodecContext *avctx)$/;"	f	file:
vp8_free_context	libavformat/rtpdec_vp8.c	/^static void vp8_free_context(PayloadContext *vp8)$/;"	f	file:
vp8_h_loop_filter16	libavcodec/arm/vp8dsp_neon.S	/^vp8_h_loop_filter16 _inner,  inner=1$/;"	l
vp8_h_loop_filter16	libavcodec/arm/vp8dsp_neon.S	/^vp8_h_loop_filter16 _simple, simple=1$/;"	l
vp8_h_loop_filter16	libavcodec/arm/vp8dsp_neon.S	/^vp8_h_loop_filter16$/;"	l
vp8_h_loop_filter16y	libavcodec/vp8dsp.h	/^    void (*vp8_h_loop_filter16y)(uint8_t *dst, int stride,$/;"	m	struct:VP8DSPContext
vp8_h_loop_filter16y_inner	libavcodec/vp8dsp.h	/^    void (*vp8_h_loop_filter16y_inner)(uint8_t *dst, int stride,$/;"	m	struct:VP8DSPContext
vp8_h_loop_filter8uv	libavcodec/arm/vp8dsp_neon.S	/^vp8_h_loop_filter8uv _inner, inner=1$/;"	l
vp8_h_loop_filter8uv	libavcodec/arm/vp8dsp_neon.S	/^vp8_h_loop_filter8uv$/;"	l
vp8_h_loop_filter8uv	libavcodec/vp8dsp.h	/^    void (*vp8_h_loop_filter8uv)(uint8_t *dstU, uint8_t *dstV, int stride,$/;"	m	struct:VP8DSPContext
vp8_h_loop_filter8uv_inner	libavcodec/vp8dsp.h	/^    void (*vp8_h_loop_filter8uv_inner)(uint8_t *dstU, uint8_t *dstV, int stride,$/;"	m	struct:VP8DSPContext
vp8_h_loop_filter_simple	libavcodec/vp8dsp.h	/^    void (*vp8_h_loop_filter_simple)(uint8_t *dst, int stride, int flim);$/;"	m	struct:VP8DSPContext
vp8_h_loop_filter_simple_c	libavcodec/vp8dsp.c	/^static void vp8_h_loop_filter_simple_c(uint8_t *dst, int stride, int flim)$/;"	f	file:
vp8_handle_packet	libavformat/rtpdec_vp8.c	/^static int vp8_handle_packet(AVFormatContext *ctx,$/;"	f	file:
vp8_idct_add	libavcodec/vp8dsp.h	/^    void (*vp8_idct_add)(uint8_t *dst, DCTELEM block[16], int stride);$/;"	m	struct:VP8DSPContext
vp8_idct_add_c	libavcodec/vp8dsp.c	/^static void vp8_idct_add_c(uint8_t *dst, DCTELEM block[16], int stride)$/;"	f	file:
vp8_idct_dc_add	libavcodec/vp8dsp.h	/^    void (*vp8_idct_dc_add)(uint8_t *dst, DCTELEM block[16], int stride);$/;"	m	struct:VP8DSPContext
vp8_idct_dc_add4uv	libavcodec/vp8dsp.h	/^    void (*vp8_idct_dc_add4uv)(uint8_t *dst, DCTELEM block[4][16], int stride);$/;"	m	struct:VP8DSPContext
vp8_idct_dc_add4uv_c	libavcodec/vp8dsp.c	/^static void vp8_idct_dc_add4uv_c(uint8_t *dst, DCTELEM block[4][16], int stride)$/;"	f	file:
vp8_idct_dc_add4y	libavcodec/vp8dsp.h	/^    void (*vp8_idct_dc_add4y)(uint8_t *dst, DCTELEM block[4][16], int stride);$/;"	m	struct:VP8DSPContext
vp8_idct_dc_add4y_c	libavcodec/vp8dsp.c	/^static void vp8_idct_dc_add4y_c(uint8_t *dst, DCTELEM block[4][16], int stride)$/;"	f	file:
vp8_idct_dc_add_c	libavcodec/vp8dsp.c	/^static void vp8_idct_dc_add_c(uint8_t *dst, DCTELEM block[16], int stride)$/;"	f	file:
vp8_init	libavcodec/libvpxdec.c	/^static av_cold int vp8_init(AVCodecContext *avctx)$/;"	f	file:
vp8_init	libavcodec/libvpxenc.c	/^static av_cold int vp8_init(AVCodecContext *avctx)$/;"	f	file:
vp8_luma_dc_wht	libavcodec/vp8dsp.h	/^    void (*vp8_luma_dc_wht)(DCTELEM block[4][4][16], DCTELEM dc[16]);$/;"	m	struct:VP8DSPContext
vp8_luma_dc_wht_c	libavcodec/vp8dsp.c	/^static void vp8_luma_dc_wht_c(DCTELEM block[4][4][16], DCTELEM dc[16])$/;"	f	file:
vp8_luma_dc_wht_dc	libavcodec/vp8dsp.h	/^    void (*vp8_luma_dc_wht_dc)(DCTELEM block[4][4][16], DCTELEM dc[16]);$/;"	m	struct:VP8DSPContext
vp8_luma_dc_wht_dc_c	libavcodec/vp8dsp.c	/^static void vp8_luma_dc_wht_dc_c(DCTELEM block[4][4][16], DCTELEM dc[16])$/;"	f	file:
vp8_mbfirstidx	libavcodec/vp8data.h	/^static const uint8_t vp8_mbfirstidx[4][16] = {$/;"	v
vp8_mbsplit_count	libavcodec/vp8data.h	/^static const uint8_t vp8_mbsplit_count[4] = {   2,   2,   4,  16 };$/;"	v
vp8_mbsplit_prob	libavcodec/vp8data.h	/^static const uint8_t vp8_mbsplit_prob[3]  = { 110, 111, 150 };$/;"	v
vp8_mbsplits	libavcodec/vp8data.h	/^static const uint8_t vp8_mbsplits[5][16] = {$/;"	v
vp8_mc_chroma	libavcodec/vp8.c	/^void vp8_mc_chroma(VP8Context *s, uint8_t *dst1, uint8_t *dst2, AVFrame *ref,$/;"	f	file:
vp8_mc_func	libavcodec/vp8dsp.h	/^typedef void (*vp8_mc_func)(uint8_t *dst\/*align 8*\/, int dstStride, uint8_t *src\/*align 1*\/, int srcStride, int h, int x, int y);$/;"	t
vp8_mc_luma	libavcodec/vp8.c	/^void vp8_mc_luma(VP8Context *s, uint8_t *dst, AVFrame *ref, const VP56mv *mv,$/;"	f	file:
vp8_mc_part	libavcodec/vp8.c	/^void vp8_mc_part(VP8Context *s, uint8_t *dst[3],$/;"	f	file:
vp8_mode_contexts	libavcodec/vp8data.h	/^static const int vp8_mode_contexts[6][4] = {$/;"	v
vp8_mv_default_prob	libavcodec/vp8data.h	/^static const uint8_t vp8_mv_default_prob[2][19] = {$/;"	v
vp8_mv_update_prob	libavcodec/vp8data.h	/^static const uint8_t vp8_mv_update_prob[2][19] = {$/;"	v
vp8_new_context	libavformat/rtpdec_vp8.c	/^static PayloadContext *vp8_new_context(void)$/;"	f	file:
vp8_pred16x16_prob_inter	libavcodec/vp8data.h	/^static const uint8_t vp8_pred16x16_prob_inter[4] = { 112,  86, 140,  37 };$/;"	v
vp8_pred16x16_prob_intra	libavcodec/vp8data.h	/^static const uint8_t vp8_pred16x16_prob_intra[4] = { 145, 156, 163, 128 };$/;"	v
vp8_pred16x16_tree_inter	libavcodec/vp8data.h	/^static const int8_t vp8_pred16x16_tree_inter[4][2] =$/;"	v
vp8_pred16x16_tree_intra	libavcodec/vp8data.h	/^static const int8_t vp8_pred16x16_tree_intra[4][2] =$/;"	v
vp8_pred4x4_mode	libavcodec/vp8data.h	/^static const uint8_t vp8_pred4x4_mode[] =$/;"	v
vp8_pred4x4_prob_inter	libavcodec/vp8data.h	/^static const uint8_t vp8_pred4x4_prob_inter[9] =$/;"	v
vp8_pred4x4_prob_intra	libavcodec/vp8data.h	/^static const uint8_t vp8_pred4x4_prob_intra[10][10][9] =$/;"	v
vp8_pred4x4_tree	libavcodec/vp8data.h	/^static const int8_t vp8_pred4x4_tree[9][2] =$/;"	v
vp8_pred8x8c_prob_inter	libavcodec/vp8data.h	/^static const uint8_t vp8_pred8x8c_prob_inter[3] = { 162, 101, 204 };$/;"	v
vp8_pred8x8c_prob_intra	libavcodec/vp8data.h	/^static const uint8_t vp8_pred8x8c_prob_intra[3] = { 142, 114, 183 };$/;"	v
vp8_pred8x8c_tree	libavcodec/vp8data.h	/^static const int8_t vp8_pred8x8c_tree[3][2] =$/;"	v
vp8_rac_get	libavcodec/vp56.h	/^static av_always_inline int vp8_rac_get(VP56RangeCoder *c)$/;"	f
vp8_rac_get_coeff	libavcodec/vp56.h	/^static av_always_inline int vp8_rac_get_coeff(VP56RangeCoder *c, const uint8_t *prob)$/;"	f
vp8_rac_get_nn	libavcodec/vp56.h	/^static av_unused int vp8_rac_get_nn(VP56RangeCoder *c)$/;"	f
vp8_rac_get_sint	libavcodec/vp56.h	/^static av_unused int vp8_rac_get_sint(VP56RangeCoder *c, int bits)$/;"	f
vp8_rac_get_tree	libavcodec/vp56.h	/^int vp8_rac_get_tree(VP56RangeCoder *c, const int8_t (*tree)[2],$/;"	f
vp8_rac_get_tree_with_offset	libavcodec/vp56.h	/^int vp8_rac_get_tree_with_offset(VP56RangeCoder *c, const int8_t (*tree)[2],$/;"	f
vp8_rac_get_uint	libavcodec/vp56.h	/^static av_unused int vp8_rac_get_uint(VP56RangeCoder *c, int bits)$/;"	f
vp8_segmentid_tree	libavcodec/vp8data.h	/^static const int8_t vp8_segmentid_tree[][2] =$/;"	v
vp8_submv_prob	libavcodec/vp8data.h	/^static const uint8_t vp8_submv_prob[5][3] = {$/;"	v
vp8_token_default_probs	libavcodec/vp8data.h	/^static const uint8_t vp8_token_default_probs[4][8][3][NUM_DCT_TOKENS-1] =$/;"	v
vp8_token_update_probs	libavcodec/vp8data.h	/^static const uint8_t vp8_token_update_probs[4][8][3][NUM_DCT_TOKENS-1] =$/;"	v
vp8_v_loop_filter16	libavcodec/arm/vp8dsp_neon.S	/^vp8_v_loop_filter16 _inner,  inner=1$/;"	l
vp8_v_loop_filter16	libavcodec/arm/vp8dsp_neon.S	/^vp8_v_loop_filter16 _simple, simple=1$/;"	l
vp8_v_loop_filter16	libavcodec/arm/vp8dsp_neon.S	/^vp8_v_loop_filter16$/;"	l
vp8_v_loop_filter16y	libavcodec/vp8dsp.h	/^    void (*vp8_v_loop_filter16y)(uint8_t *dst, int stride,$/;"	m	struct:VP8DSPContext
vp8_v_loop_filter16y_inner	libavcodec/vp8dsp.h	/^    void (*vp8_v_loop_filter16y_inner)(uint8_t *dst, int stride,$/;"	m	struct:VP8DSPContext
vp8_v_loop_filter8uv	libavcodec/arm/vp8dsp_neon.S	/^vp8_v_loop_filter8uv _inner, inner=1$/;"	l
vp8_v_loop_filter8uv	libavcodec/arm/vp8dsp_neon.S	/^vp8_v_loop_filter8uv$/;"	l
vp8_v_loop_filter8uv	libavcodec/vp8dsp.h	/^    void (*vp8_v_loop_filter8uv)(uint8_t *dstU, uint8_t *dstV, int stride,$/;"	m	struct:VP8DSPContext
vp8_v_loop_filter8uv_inner	libavcodec/vp8dsp.h	/^    void (*vp8_v_loop_filter8uv_inner)(uint8_t *dstU, uint8_t *dstV, int stride,$/;"	m	struct:VP8DSPContext
vp8_v_loop_filter_simple	libavcodec/vp8dsp.h	/^    void (*vp8_v_loop_filter_simple)(uint8_t *dst, int stride, int flim);$/;"	m	struct:VP8DSPContext
vp8_v_loop_filter_simple_c	libavcodec/vp8dsp.c	/^static void vp8_v_loop_filter_simple_c(uint8_t *dst, int stride, int flim)$/;"	f	file:
vp8dsp	libavcodec/vp8.h	/^    VP8DSPContext vp8dsp;$/;"	m	struct:__anon182
vpkt	libavformat/wc3movie.c	/^    AVPacket vpkt;$/;"	m	struct:Wc3DemuxContext	file:
vpr_tab	libavcodec/cookdata.h	/^static const int vpr_tab[7] = {$/;"	v
vpt	libavcodec/motionpixels.c	/^    YuvPixel *vpt, *hpt;$/;"	m	struct:MotionPixelsContext	file:
vq_gain	libavcodec/amrwbdata.h	/^    uint16_t vq_gain;                      \/\/\/< VQ adaptive and innovative gains$/;"	m	struct:__anon110
vq_hebap1	libavcodec/eac3dec_data.c	/^static const int16_t vq_hebap1[4][6] = {$/;"	v	file:
vq_hebap2	libavcodec/eac3dec_data.c	/^static const int16_t vq_hebap2[8][6] = {$/;"	v	file:
vq_hebap3	libavcodec/eac3dec_data.c	/^static const int16_t vq_hebap3[16][6] = {$/;"	v	file:
vq_hebap4	libavcodec/eac3dec_data.c	/^static const int16_t vq_hebap4[32][6] = {$/;"	v	file:
vq_hebap5	libavcodec/eac3dec_data.c	/^static const int16_t vq_hebap5[128][6] = {$/;"	v	file:
vq_hebap6	libavcodec/eac3dec_data.c	/^static const int16_t vq_hebap6[256][6] = {$/;"	v	file:
vq_hebap7	libavcodec/eac3dec_data.c	/^static const int16_t vq_hebap7[512][6] = {$/;"	v	file:
vq_indexes	libavcodec/sipr.h	/^    int vq_indexes[5];$/;"	m	struct:__anon236
vq_indexes_bits	libavcodec/sipr.c	/^    uint8_t vq_indexes_bits[5];$/;"	m	struct:__anon112	file:
vq_start_subband	libavcodec/dca.c	/^    int vq_start_subband[DCA_PRIM_CHANNELS_MAX];    \/\/\/< high frequency vq start subband$/;"	m	struct:__anon93	file:
vqa_decode_chunk	libavcodec/vqavideo.c	/^static void vqa_decode_chunk(VqaContext *s)$/;"	f	file:
vqa_decode_end	libavcodec/vqavideo.c	/^static av_cold int vqa_decode_end(AVCodecContext *avctx)$/;"	f	file:
vqa_decode_frame	libavcodec/vqavideo.c	/^static int vqa_decode_frame(AVCodecContext *avctx,$/;"	f	file:
vqa_decode_init	libavcodec/vqavideo.c	/^static av_cold int vqa_decode_init(AVCodecContext *avctx)$/;"	f	file:
vqa_version	libavcodec/vqavideo.c	/^    int vqa_version;  \/* this should be either 1, 2 or 3 *\/$/;"	m	struct:VqaContext	file:
vqf_probe	libavformat/vqf.c	/^static int vqf_probe(AVProbeData *probe_packet)$/;"	f	file:
vqf_read_header	libavformat/vqf.c	/^static int vqf_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
vqf_read_packet	libavformat/vqf.c	/^static int vqf_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
vqf_read_seek	libavformat/vqf.c	/^static int vqf_read_seek(AVFormatContext *s,$/;"	f	file:
vrev	libavformat/oggenc.c	/^    int vrev;$/;"	m	struct:__anon380	file:
vs16	libavcodec/ppc/fdct_altivec.c	29;"	d	file:
vs32	libavcodec/ppc/fdct_altivec.c	30;"	d	file:
vs_total_ac_bits	libavcodec/dv.c	/^static const int vs_total_ac_bits = (100 * 4 + 68*2) * 5;$/;"	v	file:
vsad	libavcodec/dsputil.h	/^    me_cmp_func vsad[6];$/;"	m	struct:DSPContext
vsad16_c	libavcodec/dsputil.c	/^static int vsad16_c(\/*MpegEncContext*\/ void *c, uint8_t *s1, uint8_t *s2, int stride, int h){$/;"	f	file:
vsad16_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static int vsad16_mmx(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h) {$/;"	f	file:
vsad16_mmx2	libavcodec/x86/dsputilenc_mmx.c	/^static int vsad16_mmx2(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h) {$/;"	f	file:
vsad_intra16_mmx	libavcodec/x86/dsputilenc_mmx.c	/^static int vsad_intra16_mmx(void *v, uint8_t * pix, uint8_t * dummy, int line_size, int h) {$/;"	f	file:
vsad_intra16_mmx2	libavcodec/x86/dsputilenc_mmx.c	/^static int vsad_intra16_mmx2(void *v, uint8_t * pix, uint8_t * dummy, int line_size, int h) {$/;"	f	file:
vscroll	libavcodec/cdgraphics.c	/^    int vscroll;$/;"	m	struct:CDGraphicsContext	file:
vshift	libavfilter/vf_slicify.c	/^    int vshift;     \/\/\/< vertical chroma subsampling shift$/;"	m	struct:__anon22	file:
vsse	libavcodec/dsputil.h	/^    me_cmp_func vsse[6];$/;"	m	struct:DSPContext
vsse16_c	libavcodec/dsputil.c	/^static int vsse16_c(\/*MpegEncContext*\/ void *c, uint8_t *s1, uint8_t *s2, int stride, int h){$/;"	f	file:
vst	libavformat/dv.c	/^    AVStream*         vst;$/;"	m	struct:DVDemuxContext	file:
vst	libavformat/thp.c	/^    AVStream*        vst;$/;"	m	struct:ThpDemuxContext	file:
vstats_file	ffmpeg.c	/^static FILE *vstats_file;$/;"	v	file:
vstats_file	ffmpeg/ffmpeg.c	/^static FILE *vstats_file;$/;"	v	file:
vstats_filename	ffmpeg.c	/^static char *vstats_filename;$/;"	v	file:
vstats_filename	ffmpeg/ffmpeg.c	/^static char *vstats_filename;$/;"	v	file:
vstransform	libavcodec/vc1.h	/^    int vstransform;      \/\/\/< variable-size [48]x[48] transform type + info$/;"	m	struct:VC1Context
vsub	libavfilter/vf_crop.c	/^    int hsub, vsub;     \/\/\/< chroma subsampling$/;"	m	struct:__anon5	file:
vsub	libavfilter/vf_drawbox.c	/^    int vsub, hsub;   \/\/< chroma subsampling$/;"	m	struct:__anon20	file:
vsub	libavfilter/vf_drawtext.c	/^    int hsub, vsub;                 \/\/\/< chroma subsampling values$/;"	m	struct:__anon24	file:
vsub	libavfilter/vf_fade.c	/^    int hsub, vsub, bpp;$/;"	m	struct:__anon11	file:
vsub	libavfilter/vf_hflip.c	/^    int hsub, vsub;     \/\/\/< chroma subsampling$/;"	m	struct:__anon43	file:
vsub	libavfilter/vf_hqdn3d.c	/^    int hsub, vsub;$/;"	m	struct:__anon8	file:
vsub	libavfilter/vf_lut.c	/^    int hsub, vsub;$/;"	m	struct:__anon23	file:
vsub	libavfilter/vf_overlay.c	/^    int hsub, vsub;             \/\/\/< chroma subsampling values$/;"	m	struct:__anon7	file:
vsub	libavfilter/vf_pad.c	/^    int hsub, vsub;         \/\/\/< chroma subsampling values$/;"	m	struct:__anon52	file:
vsub	libavfilter/vf_scale.c	/^    int hsub, vsub;             \/\/\/< chroma subsampling$/;"	m	struct:__anon18	file:
vsub	libavfilter/vf_transpose.c	/^    int hsub, vsub;$/;"	m	struct:__anon45	file:
vsub	libavfilter/vf_vflip.c	/^    int vsub;   \/\/\/< vertical chroma subsampling$/;"	m	struct:__anon44	file:
vsub	libavfilter/vsrc_color.c	/^    int hsub, vsub;         \/\/\/< chroma subsampling values$/;"	m	struct:__anon27	file:
vtag	libavformat/nsvdec.c	/^    uint32_t vtag, atag;$/;"	m	struct:__anon345	file:
vtbl	libavdevice/dshow.h	/^    IBaseFilterVtbl *vtbl;$/;"	m	struct:libAVFilter
vtbl	libavdevice/dshow.h	/^    IEnumPinsVtbl *vtbl;$/;"	m	struct:libAVEnumMediaTypes
vtbl	libavdevice/dshow.h	/^    IEnumPinsVtbl *vtbl;$/;"	m	struct:libAVEnumPins
vtbl	libavdevice/dshow.h	/^    IPinVtbl *vtbl;$/;"	m	struct:libAVPin
vtmp	libavcodec/bfin/fdct_bfin.S	/^vtmp:   .space 128$/;"	l
vtmp	libavcodec/bfin/idct_bfin.S	/^vtmp: .space 256$/;"	l
vtmp	libavcodec/bfin/vp3_idct_bfin.S	/^vtmp: .space 256$/;"	l
vtrk_SIZE	libavformat/4xm.c	53;"	d	file:
vtrk_TAG	libavformat/4xm.c	43;"	d	file:
vu16	libavcodec/ppc/fdct_altivec.c	32;"	d	file:
vu32	libavcodec/ppc/fdct_altivec.c	33;"	d	file:
vu8	libavcodec/ppc/fdct_altivec.c	31;"	d	file:
vu9_to_vu12	libswscale/rgb2rgb.c	/^void (*vu9_to_vu12)(const uint8_t *src1, const uint8_t *src2,$/;"	v
vu9_to_vu12	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(vu9_to_vu12)(const uint8_t *src1, const uint8_t *src2,$/;"	f	file:
vu9_to_vu12_c	libswscale/rgb2rgb_template.c	/^static inline void vu9_to_vu12_c(const uint8_t *src1, const uint8_t *src2,$/;"	f	file:
vui_parameters_present_flag	libavcodec/h264.h	/^    int vui_parameters_present_flag;$/;"	m	struct:SPS
vwidth	libavformat/nsvdec.c	/^    uint16_t vwidth, vheight;$/;"	m	struct:__anon345	file:
vzero	libswscale/ppc/swscale_altivec.c	31;"	d	file:
w	libavcodec/avcodec.h	/^    int w;         \/\/\/< width            of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
w	libavcodec/pgssubdec.c	/^    int          w;$/;"	m	struct:PGSSubPicture	file:
w	libavcodec/rtjpeg.h	/^    int w, h;$/;"	m	struct:__anon172
w	libavcodec/truemotion1.c	/^    int x, y, w, h;$/;"	m	struct:TrueMotion1Context	file:
w	libavfilter/avfilter.h	/^    int w, h;                   \/\/\/< width and height of the allocated buffer$/;"	m	struct:AVFilterBuffer
w	libavfilter/avfilter.h	/^    int w;                      \/\/\/< agreed upon image width$/;"	m	struct:AVFilterLink
w	libavfilter/avfilter.h	/^    int w;                      \/\/\/< image width$/;"	m	struct:AVFilterBufferRefVideoProps
w	libavfilter/libmpcodecs/libvo/video_out.h	/^  int w,h;$/;"	m	struct:__anon31
w	libavfilter/libmpcodecs/mp_image.h	/^    int x,y,w,h;  \/\/ visible dimensions$/;"	m	struct:mp_image
w	libavfilter/libmpcodecs/pullup.h	/^    int *bpp, *w, *h, *stride, *background;$/;"	m	struct:pullup_context
w	libavfilter/libmpcodecs/vf.h	/^    int w, h;$/;"	m	struct:vf_instance
w	libavfilter/libmpcodecs/vf_dsize.c	/^    int w, h;$/;"	m	struct:vf_priv_s	file:
w	libavfilter/libmpcodecs/vf_eq2.c	/^  double        w;$/;"	m	struct:eq2_param_t	file:
w	libavfilter/libmpcodecs/vf_filmdint.c	/^    unsigned long w, h, cw, ch, stride, chroma_stride, nplanes;$/;"	m	struct:vf_priv_s	file:
w	libavfilter/libmpcodecs/vf_rectangle.c	/^    int x, y, w, h;$/;"	m	struct:vf_priv_s	file:
w	libavfilter/libmpcodecs/vf_rgbtest.c	/^    int w, h;$/;"	m	struct:vf_priv_s	file:
w	libavfilter/vf_crop.c	/^    int  w;             \/\/\/< width of the cropped area$/;"	m	struct:__anon5	file:
w	libavfilter/vf_drawbox.c	/^    int x, y, w, h;$/;"	m	struct:__anon20	file:
w	libavfilter/vf_frei0r.c	/^    int w, h;$/;"	m	struct:Frei0rContext	file:
w	libavfilter/vf_pad.c	/^    int w, h;               \/\/\/< output dimensions, a value of 0 will result in the input size$/;"	m	struct:__anon52	file:
w	libavfilter/vf_scale.c	/^    int w, h;$/;"	m	struct:__anon18	file:
w	libavfilter/vsrc_buffer.c	/^    int               h, w;$/;"	m	struct:__anon25	file:
w	libavfilter/vsrc_color.c	/^    int w, h;$/;"	m	struct:__anon27	file:
w	libavfilter/vsrc_movie.c	/^    int w, h;$/;"	m	struct:__anon38	file:
w	libavfilter/vsrc_nullsrc.c	/^    int w, h;$/;"	m	struct:__anon9	file:
w	tests/videogen.c	/^    int x, y, w, h;$/;"	m	struct:VObj	file:
w1	libavcodec/arm/simple_idct_neon.S	/^#define w1 d0[0]$/;"	d
w13	libavcodec/arm/simple_idct_armv5te.S	/^w13:    .long W13$/;"	l
w13	libavcodec/arm/simple_idct_armv6.S	/^w13:    .long W13$/;"	l
w2	libavcodec/arm/simple_idct_neon.S	/^#define w2 d0[1]$/;"	d
w26	libavcodec/arm/simple_idct_armv5te.S	/^w26:    .long W26$/;"	l
w26	libavcodec/arm/simple_idct_armv6.S	/^w26:    .long W26$/;"	l
w3	libavcodec/arm/simple_idct_neon.S	/^#define w3 d0[2]$/;"	d
w4	libavcodec/arm/simple_idct_neon.S	/^#define w4 d0[3]$/;"	d
w42	libavcodec/arm/simple_idct_armv6.S	/^w42:    .long W42$/;"	l
w42n	libavcodec/arm/simple_idct_armv6.S	/^w42n:   .long W42n$/;"	l
w46	libavcodec/arm/simple_idct_armv6.S	/^w46:    .long W46$/;"	l
w4c	libavcodec/arm/simple_idct_neon.S	/^#define w4c d1[3]$/;"	d
w5	libavcodec/arm/simple_idct_neon.S	/^#define w5 d1[0]$/;"	d
w53	libavcodec/dsputil.h	/^    me_cmp_func w53[6];$/;"	m	struct:DSPContext
w53_16_c	libavcodec/dwt.c	/^static int w53_16_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h){$/;"	f	file:
w53_8_c	libavcodec/dwt.c	/^static int w53_8_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h){$/;"	f	file:
w57	libavcodec/arm/simple_idct_armv5te.S	/^w57:    .long W57$/;"	l
w57	libavcodec/arm/simple_idct_armv6.S	/^w57:    .long W57$/;"	l
w6	libavcodec/arm/simple_idct_neon.S	/^#define w6 d1[1]$/;"	d
w64	libavformat/wav.c	/^    int w64;$/;"	m	struct:__anon409	file:
w64_probe	libavformat/wav.c	/^static int w64_probe(AVProbeData *p)$/;"	f	file:
w64_read_header	libavformat/wav.c	/^static int w64_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
w7	libavcodec/arm/simple_idct_neon.S	/^#define w7 d1[2]$/;"	d
w97	libavcodec/dsputil.h	/^    me_cmp_func w97[6];$/;"	m	struct:DSPContext
w97_16_c	libavcodec/dwt.c	/^static int w97_16_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h){$/;"	f	file:
w97_8_c	libavcodec/dwt.c	/^static int w97_8_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int h){$/;"	f	file:
w_c	libavcodec/dwt.c	/^static inline int w_c(void *v, uint8_t * pix1, uint8_t * pix2, int line_size, int w, int h, int type){$/;"	f	file:
w_expr	libavfilter/vf_pad.c	/^    char w_expr[256];       \/\/\/< width  expression string$/;"	m	struct:__anon52	file:
w_expr	libavfilter/vf_scale.c	/^    char w_expr[256];           \/\/\/< width  expression string$/;"	m	struct:__anon18	file:
want	libavformat/mp3enc.c	/^    uint32_t want;$/;"	m	struct:MP3Context	file:
wanted_bits	libavcodec/mpegvideo.h	/^    int64_t wanted_bits;$/;"	m	struct:MpegEncContext
wanted_stream	ffplay.c	/^static int wanted_stream[AVMEDIA_TYPE_NB]={$/;"	v	file:
warn	configure	/^warn(){$/;"	f
warn_insufficient_frame_quality	libavcodec/qcelpdec.c	/^static void warn_insufficient_frame_quality(AVCodecContext *avctx,$/;"	f	file:
warn_interlaced	libavcodec/vc1.h	/^    int warn_interlaced;$/;"	m	struct:VC1Context
warned_buf_mismatch_bitrate	libavcodec/qcelpdec.c	/^    uint8_t  warned_buf_mismatch_bitrate;$/;"	m	struct:__anon225	file:
warned_cfg	cmdutils.c	/^static int warned_cfg = 0;$/;"	v	file:
warned_cfg	ffmpeg/cmdutils.c	/^static int warned_cfg = 0;$/;"	v	file:
was_dint	libavfilter/libmpcodecs/vf_dint.c	/^  int was_dint;$/;"	m	struct:vf_priv_s	file:
wasted_bits	libavcodec/alac.c	/^    int wasted_bits;$/;"	m	struct:__anon266	file:
wasted_bits_buffer	libavcodec/alac.c	/^    int32_t *wasted_bits_buffer[MAX_CHANNELS];$/;"	m	struct:__anon266	file:
watermark_key	libavcodec/svq3.c	/^    uint32_t watermark_key;$/;"	m	struct:__anon141	file:
wav_metadata_conv	libavformat/wav.c	/^static const AVMetadataConv wav_metadata_conv[] = {$/;"	v	file:
wav_parse_bext_string	libavformat/wav.c	/^static inline int wav_parse_bext_string(AVFormatContext *s, const char *key, int length)$/;"	f	file:
wav_parse_bext_tag	libavformat/wav.c	/^static int wav_parse_bext_tag(AVFormatContext *s, int64_t size)$/;"	f	file:
wav_parse_fmt_tag	libavformat/wav.c	/^static int wav_parse_fmt_tag(AVFormatContext *s, int64_t size, AVStream **st)$/;"	f	file:
wav_probe	libavformat/wav.c	/^static int wav_probe(AVProbeData *p)$/;"	f	file:
wav_read_header	libavformat/wav.c	/^static int wav_read_header(AVFormatContext *s,$/;"	f	file:
wav_read_packet	libavformat/wav.c	/^static int wav_read_packet(AVFormatContext *s,$/;"	f	file:
wav_read_seek	libavformat/wav.c	/^static int wav_read_seek(AVFormatContext *s,$/;"	f	file:
wav_write_header	libavformat/wav.c	/^static int wav_write_header(AVFormatContext *s)$/;"	f	file:
wav_write_packet	libavformat/wav.c	/^static int wav_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
wav_write_trailer	libavformat/wav.c	/^static int wav_write_trailer(AVFormatContext *s)$/;"	f	file:
waveform_codec_id	libavdevice/dshow.c	/^static enum CodecID waveform_codec_id(enum AVSampleFormat sample_fmt)$/;"	f	file:
wavheaderlength	libavformat/ape.c	/^    uint32_t wavheaderlength;$/;"	m	struct:__anon335	file:
wavpack_decode_block	libavcodec/wavpack.c	/^static int wavpack_decode_block(AVCodecContext *avctx, int block_no,$/;"	f	file:
wavpack_decode_end	libavcodec/wavpack.c	/^static av_cold int wavpack_decode_end(AVCodecContext *avctx)$/;"	f	file:
wavpack_decode_flush	libavcodec/wavpack.c	/^static void wavpack_decode_flush(AVCodecContext *avctx)$/;"	f	file:
wavpack_decode_frame	libavcodec/wavpack.c	/^static int wavpack_decode_frame(AVCodecContext *avctx,$/;"	f	file:
wavpack_decode_init	libavcodec/wavpack.c	/^static av_cold int wavpack_decode_init(AVCodecContext *avctx)$/;"	f	file:
wavpos	libavformat/dxa.c	/^    int64_t wavpos, vidpos;$/;"	m	struct:__anon330	file:
wavtaillength	libavformat/ape.c	/^    uint32_t wavtaillength;$/;"	m	struct:__anon335	file:
wc3_probe	libavformat/wc3movie.c	/^static int wc3_probe(AVProbeData *p)$/;"	f	file:
wc3_read_close	libavformat/wc3movie.c	/^static int wc3_read_close(AVFormatContext *s)$/;"	f	file:
wc3_read_header	libavformat/wc3movie.c	/^static int wc3_read_header(AVFormatContext *s,$/;"	f	file:
wc3_read_packet	libavformat/wc3movie.c	/^static int wc3_read_packet(AVFormatContext *s,$/;"	f	file:
weightA	libavcodec/wavpack.c	/^    int weightA;$/;"	m	struct:Decorr	file:
weightB	libavcodec/wavpack.c	/^    int weightB;$/;"	m	struct:Decorr	file:
weight_h264_WxH_altivec	libavcodec/ppc/h264_altivec.c	/^void weight_h264_WxH_altivec(uint8_t *block, int stride, int log2_denom, int weight, int offset, int w, int h)$/;"	f	file:
weight_h264_pixels_tab	libavcodec/h264dsp.h	/^    h264_weight_func weight_h264_pixels_tab[10];$/;"	m	struct:H264DSPContext
weighted_bipred_idc	libavcodec/h264.h	/^    int weighted_bipred_idc;$/;"	m	struct:PPS
weighted_p_pred	libavcodec/avcodec.h	/^    int weighted_p_pred;$/;"	m	struct:AVCodecContext
weighted_pred	libavcodec/h264.h	/^    int weighted_pred;          \/\/\/< weighted_pred_flag$/;"	m	struct:PPS
weighted_vector_sumd	libavcodec/amrnbdec.c	/^static void weighted_vector_sumd(double *out, const double *in_a,$/;"	f	file:
weighting	libavcodec/alsdec.c	/^    int weighting[6];$/;"	m	struct:__anon151	file:
weighting_delay	libavcodec/atrac3.c	/^    int                 weighting_delay[6];$/;"	m	struct:__anon131	file:
weightp	libavcodec/libx264.c	/^    char *weightp;$/;"	m	struct:X264Context	file:
wh64	libavcodec/alpha/asm.h	117;"	d
wh64	libavcodec/alpha/asm.h	180;"	d
width	ffplay.c	/^    int width, height, xleft, ytop;$/;"	m	struct:VideoState	file:
width	ffplay.c	/^    int width, height; \/* source height & width *\/$/;"	m	struct:VideoPicture	file:
width	libavcodec/avcodec.h	/^    int width, height;$/;"	m	struct:AVCodecContext
width	libavcodec/avcodec.h	/^    int width;$/;"	m	struct:AVPanScan
width	libavcodec/cinepak.c	/^    int width, height;$/;"	m	struct:CinepakContext	file:
width	libavcodec/cyuv.c	/^    int width, height;$/;"	m	struct:CyuvDecodeContext	file:
width	libavcodec/dirac.h	/^    unsigned width;$/;"	m	struct:__anon227
width	libavcodec/dnxhddata.h	/^    unsigned int width, height;$/;"	m	struct:__anon281
width	libavcodec/dnxhddec.c	/^    unsigned int width, height;$/;"	m	struct:__anon154	file:
width	libavcodec/dvbsubdec.c	/^    int width;$/;"	m	struct:DVBSubDisplayDefinition	file:
width	libavcodec/dvbsubdec.c	/^    int width;$/;"	m	struct:DVBSubRegion	file:
width	libavcodec/dvdata.h	/^    int              width;                 \/* picture width in pixels *\/$/;"	m	struct:DVprofile
width	libavcodec/eacmv.c	/^    int width, height;$/;"	m	struct:CmvContext	file:
width	libavcodec/eatgq.c	/^    int width,height;$/;"	m	struct:TgqContext	file:
width	libavcodec/eatgv.c	/^    int width,height;$/;"	m	struct:TgvContext	file:
width	libavcodec/ffv1.c	/^    int width, height;$/;"	m	struct:FFV1Context	file:
width	libavcodec/flashsv2enc.c	/^    uint8_t col, row, width, height;$/;"	m	struct:Block	file:
width	libavcodec/huffyuv.c	/^    int width, height;$/;"	m	struct:HYuvContext	file:
width	libavcodec/indeo3.c	/^    int width, height;$/;"	m	struct:Indeo3DecodeContext	file:
width	libavcodec/indeo3.c	/^    int width;$/;"	m	struct:ustr	file:
width	libavcodec/ivi_common.h	/^    int             width;$/;"	m	struct:__anon107
width	libavcodec/ivi_common.h	/^    int         width;$/;"	m	struct:__anon106
width	libavcodec/ivi_common.h	/^    uint16_t    width;$/;"	m	struct:__anon108
width	libavcodec/j2kdec.c	/^    int width, height; \/\/\/< image width and height$/;"	m	struct:__anon98	file:
width	libavcodec/j2kenc.c	/^    int width, height; \/\/\/< image width and height$/;"	m	struct:__anon63	file:
width	libavcodec/libdirac_libschro.h	/^    uint16_t width;$/;"	m	struct:__anon166
width	libavcodec/mjpegdec.h	/^    int width, height;$/;"	m	struct:MJpegDecodeContext
width	libavcodec/mpegvideo.h	/^    int width, height;\/\/\/< picture size. must be a multiple of 16$/;"	m	struct:MpegEncContext
width	libavcodec/nuv.c	/^    int width, height;$/;"	m	struct:__anon100	file:
width	libavcodec/parser.h	/^    int width, height;$/;"	m	struct:ParseContext1
width	libavcodec/pictordec.c	/^    int width, height;$/;"	m	struct:PicContext	file:
width	libavcodec/png.h	/^    int width, height;$/;"	m	struct:PNGDecContext
width	libavcodec/roqvideo.h	/^    int width, height;$/;"	m	struct:RoqContext
width	libavcodec/rv34.h	/^    int width;             \/\/\/< coded width$/;"	m	struct:SliceInfo
width	libavcodec/sgidec.c	/^    unsigned int width;$/;"	m	struct:SgiState	file:
width	libavcodec/snow.c	/^    int width;$/;"	m	struct:Plane	file:
width	libavcodec/snow.c	/^    int width;$/;"	m	struct:SubBand	file:
width	libavcodec/svq1.h	/^    uint16_t width;$/;"	m	struct:svq1_frame_size
width	libavcodec/targa.c	/^    int width, height;$/;"	m	struct:TargaContext	file:
width	libavcodec/tiff.c	/^    int width, height;$/;"	m	struct:TiffContext	file:
width	libavcodec/tiffenc.c	/^    int width;                          \/\/\/< picture width$/;"	m	struct:TiffEncoderContext	file:
width	libavcodec/truemotion1.c	/^    uint16_t width;$/;"	m	struct:frame_header	file:
width	libavcodec/ulti.c	/^    int width, height, blocks;$/;"	m	struct:UltimotionDecodeContext	file:
width	libavcodec/utils.c	/^    int width, height;$/;"	m	struct:InternalBuffer	file:
width	libavcodec/vmnc.c	/^    int width, height;$/;"	m	struct:VmncContext	file:
width	libavcodec/vp3.c	/^    int width, height;$/;"	m	struct:Vp3DecodeContext	file:
width	libavcodec/vqavideo.c	/^    int width;   \/* width of a frame *\/$/;"	m	struct:VqaContext	file:
width	libavcodec/zmbv.c	/^    int width, height;$/;"	m	struct:ZmbvContext	file:
width	libavdevice/bktr.c	/^    int width, height;$/;"	m	struct:__anon312	file:
width	libavdevice/fbdev.c	/^    int width, heigth;       \/\/\/< assumed frame resolution$/;"	m	struct:__anon314	file:
width	libavdevice/v4l2.c	/^    int width, height;$/;"	m	struct:video_data	file:
width	libavdevice/x11grab.c	/^    int width;               \/**< Width of the grab frame *\/$/;"	m	struct:x11_grab	file:
width	libavfilter/libmpcodecs/libvo/video_out.h	/^  int left, right, top, bottom, width, height;$/;"	m	struct:vo_rect
width	libavfilter/libmpcodecs/mp_image.h	/^    int width,height;  \/\/ stored dimensions$/;"	m	struct:mp_image
width	libavfilter/libmpcodecs/vf_fil.c	/^    int width;$/;"	m	struct:vf_priv_s	file:
width	libavfilter/libmpcodecs/vf_remove_logo.c	/^  unsigned int width;$/;"	m	struct:__anon34	file:
width	libavformat/4xm.c	/^    int width;$/;"	m	struct:FourxmDemuxContext	file:
width	libavformat/avformat.h	/^    attribute_deprecated int width;$/;"	m	struct:AVFormatParameters
width	libavformat/avs.c	/^    int width;$/;"	m	struct:avs_format	file:
width	libavformat/electronicarts.c	/^    int width, height;$/;"	m	struct:EaDemuxContext	file:
width	libavformat/idroqdec.c	/^    int width;$/;"	m	struct:RoqDemuxContext	file:
width	libavformat/isom.h	/^    int width;            \/\/\/< tkhd width$/;"	m	struct:MOVStreamContext
width	libavformat/mxfdec.c	/^    int width;$/;"	m	struct:__anon443	file:
width	libavformat/smacker.c	/^    uint32_t width, height;$/;"	m	struct:SmackerContext	file:
width	libavformat/wc3movie.c	/^    int width;$/;"	m	struct:Wc3DemuxContext	file:
width	libavutil/parseutils.c	/^    int width, height;$/;"	m	struct:__anon292	file:
width	tests/rotozoom.c	/^int width, height, wrap;$/;"	v
width	tests/videogen.c	/^int width, height, wrap;$/;"	v
wiener_denoise	libavcodec/wmavoice.c	/^static void wiener_denoise(WMAVoiceContext *s, int fcb_type,$/;"	f	file:
willclose	libavformat/http.c	/^    int willclose;          \/**< Set if the server correctly handles Connection: close and will close the connection after feeding us the content. *\/$/;"	m	struct:__anon462	file:
win	libavcodec/vorbisdec.c	/^    const float  *win[2];$/;"	m	struct:vorbis_context_s	file:
win	libavcodec/vorbisenc.c	/^    const float *win[2];$/;"	m	struct:__anon194	file:
win32_argc	cmdutils.c	/^static int win32_argc = 0;$/;"	v	file:
win32_argc	ffmpeg/cmdutils.c	/^static int win32_argc = 0;$/;"	v	file:
win32_argv_utf8	cmdutils.c	/^static char** win32_argv_utf8 = NULL;$/;"	v	file:
win32_argv_utf8	ffmpeg/cmdutils.c	/^static char** win32_argv_utf8 = NULL;$/;"	v	file:
win_energy	libavcodec/aacpsy.c	/^    float       win_energy;              \/\/\/< sliding average of channel energy$/;"	m	struct:AacPsyChannel	file:
window	libavcodec/ac3enc.h	/^    const SampleType *window;           \/\/\/< MDCT window function$/;"	m	struct:AC3MDCTContext
window	libavcodec/psymodel.h	/^    FFPsyWindowInfo (*window)(FFPsyContext *ctx, const int16_t *audio, const int16_t *la, int channel, int prev_type);$/;"	m	struct:FFPsyModel
window	libavcodec/sonic.c	/^    int *window;$/;"	m	struct:SonicContext	file:
window	libavfilter/libmpcodecs/vf_divtc.c	/^   int deghost, pass, phase, window, fcount, bcount, frameno, misscount,$/;"	m	struct:vf_priv_s	file:
window_grouping	libavcodec/aacpsy.c	/^static const uint8_t window_grouping[9] = {$/;"	v	file:
window_height	libavdevice/sdl.c	/^    int window_width, window_height;$/;"	m	struct:__anon309	file:
window_sequence	libavcodec/aac.h	/^    enum WindowSequence window_sequence[2];$/;"	m	struct:__anon239	typeref:enum:__anon239::WindowSequence
window_shape	libavcodec/psymodel.h	/^    int window_shape;                 \/\/\/< window shape (sine\/KBD\/whatever)$/;"	m	struct:FFPsyWindowInfo
window_size	libavcodec/sonic.c	/^    int window_size;$/;"	m	struct:SonicContext	file:
window_size	libavdevice/sdl.c	/^    char *window_size;$/;"	m	struct:__anon309	file:
window_sizes	libavcodec/psymodel.h	/^    int *window_sizes;                \/\/\/< sequence of window sizes inside one frame (for eg. WMA)$/;"	m	struct:FFPsyWindowInfo
window_title	ffplay.c	/^static const char *window_title;$/;"	v	file:
window_title	libavdevice/sdl.c	/^    char *window_title;$/;"	m	struct:__anon309	file:
window_type	libavcodec/psymodel.h	/^    int window_type[3];               \/\/\/< window type (short\/long\/transitional, etc.) - current, previous and next$/;"	m	struct:FFPsyWindowInfo
window_width	libavdevice/sdl.c	/^    int window_width, window_height;$/;"	m	struct:__anon309	file:
windowed_samples	libavcodec/ac3enc.h	/^    SampleType *windowed_samples;$/;"	m	struct:AC3EncodeContext
windowed_samples	libavcodec/lpc.h	/^    double *windowed_samples;$/;"	m	struct:LPCContext
windowing_and_mdct_ltp	libavcodec/aacdec.c	/^static void windowing_and_mdct_ltp(AACContext *ac, float *out,$/;"	f	file:
windows	libavcodec/wma.h	/^    float *windows[BLOCK_NB_SIZES];$/;"	m	struct:WMACodecContext
windows	libavcodec/wmaprodec.c	/^    float*           windows[WMAPRO_BLOCK_SIZES];   \/\/\/< windows for the different block sizes$/;"	m	struct:WMAProDecodeCtx	file:
windowtype	libavcodec/vorbisdec.c	/^    uint16_t      windowtype;$/;"	m	struct:__anon262	file:
wma_decode_block	libavcodec/wmadec.c	/^static int wma_decode_block(WMACodecContext *s)$/;"	f	file:
wma_decode_frame	libavcodec/wmadec.c	/^static int wma_decode_frame(WMACodecContext *s, int16_t *samples)$/;"	f	file:
wma_decode_init	libavcodec/wmadec.c	/^static int wma_decode_init(AVCodecContext * avctx)$/;"	f	file:
wma_decode_superframe	libavcodec/wmadec.c	/^static int wma_decode_superframe(AVCodecContext *avctx,$/;"	f	file:
wma_lsp_to_curve	libavcodec/wmadec.c	/^static void wma_lsp_to_curve(WMACodecContext *s,$/;"	f	file:
wma_lsp_to_curve_init	libavcodec/wmadec.c	/^static void wma_lsp_to_curve_init(WMACodecContext *s, int frame_len)$/;"	f	file:
wma_window	libavcodec/wmadec.c	/^static void wma_window(WMACodecContext *s, float *out)$/;"	f	file:
wmapro_window	libavcodec/wmaprodec.c	/^static void wmapro_window(WMAProDecodeCtx *s)$/;"	f	file:
wmavoice_decode_end	libavcodec/wmavoice.c	/^static av_cold int wmavoice_decode_end(AVCodecContext *ctx)$/;"	f	file:
wmavoice_decode_init	libavcodec/wmavoice.c	/^static av_cold int wmavoice_decode_init(AVCodecContext *ctx)$/;"	f	file:
wmavoice_decode_packet	libavcodec/wmavoice.c	/^static int wmavoice_decode_packet(AVCodecContext *ctx, void *data,$/;"	f	file:
wmavoice_denoise_power_table	libavcodec/wmavoice_data.h	/^static const float wmavoice_denoise_power_table[12][64] = {$/;"	v
wmavoice_dq_lsp10i	libavcodec/wmavoice_data.h	/^static const uint8_t wmavoice_dq_lsp10i[0xf00] = {$/;"	v
wmavoice_dq_lsp10r	libavcodec/wmavoice_data.h	/^static const uint8_t wmavoice_dq_lsp10r[0x1400] = {$/;"	v
wmavoice_dq_lsp16i1	libavcodec/wmavoice_data.h	/^static const uint8_t wmavoice_dq_lsp16i1[0x640] = {$/;"	v
wmavoice_dq_lsp16i2	libavcodec/wmavoice_data.h	/^static const uint8_t wmavoice_dq_lsp16i2[0x3c0] = {$/;"	v
wmavoice_dq_lsp16i3	libavcodec/wmavoice_data.h	/^static const uint8_t wmavoice_dq_lsp16i3[0x300] = {$/;"	v
wmavoice_dq_lsp16r1	libavcodec/wmavoice_data.h	/^static const uint8_t wmavoice_dq_lsp16r1[0x500] = {$/;"	v
wmavoice_dq_lsp16r2	libavcodec/wmavoice_data.h	/^static const uint8_t wmavoice_dq_lsp16r2[0x500] = {$/;"	v
wmavoice_dq_lsp16r3	libavcodec/wmavoice_data.h	/^static const uint8_t wmavoice_dq_lsp16r3[0x600] = {$/;"	v
wmavoice_energy_table	libavcodec/wmavoice_data.h	/^static const float wmavoice_energy_table[128] = {$/;"	v
wmavoice_flush	libavcodec/wmavoice.c	/^static av_cold void wmavoice_flush(AVCodecContext *ctx)$/;"	f	file:
wmavoice_gain_codebook_acb	libavcodec/wmavoice_data.h	/^static const float wmavoice_gain_codebook_acb[128] = {$/;"	v
wmavoice_gain_codebook_fcb	libavcodec/wmavoice_data.h	/^static const float wmavoice_gain_codebook_fcb[128] = {$/;"	v
wmavoice_gain_silence	libavcodec/wmavoice_data.h	/^static const float wmavoice_gain_silence[256] = {$/;"	v
wmavoice_gain_universal	libavcodec/wmavoice_data.h	/^static const float wmavoice_gain_universal[64] = {$/;"	v
wmavoice_ipol1_coeffs	libavcodec/wmavoice_data.h	/^static const float wmavoice_ipol1_coeffs[17*9] = {$/;"	v
wmavoice_ipol2_coeffs	libavcodec/wmavoice_data.h	/^static const float wmavoice_ipol2_coeffs[32] = {$/;"	v
wmavoice_lsp10_intercoeff_a	libavcodec/wmavoice_data.h	/^static const float wmavoice_lsp10_intercoeff_a[32][2][10] = {$/;"	v
wmavoice_lsp10_intercoeff_b	libavcodec/wmavoice_data.h	/^static const float wmavoice_lsp10_intercoeff_b[32][2][10] = {$/;"	v
wmavoice_lsp16_intercoeff_a	libavcodec/wmavoice_data.h	/^static const float wmavoice_lsp16_intercoeff_a[32][2][16] = {$/;"	v
wmavoice_lsp16_intercoeff_b	libavcodec/wmavoice_data.h	/^static const float wmavoice_lsp16_intercoeff_b[32][2][16] = {$/;"	v
wmavoice_mean_lsf10	libavcodec/wmavoice_data.h	/^static const double wmavoice_mean_lsf10[2][10] = {$/;"	v
wmavoice_mean_lsf16	libavcodec/wmavoice_data.h	/^static const double wmavoice_mean_lsf16[2][16] = {$/;"	v
wmavoice_std_codebook	libavcodec/wmavoice_data.h	/^static const float wmavoice_std_codebook[1000] = {$/;"	v
wmp_client_id	ffserver.c	/^    int wmp_client_id;$/;"	m	struct:HTTPContext	file:
wmv1_c_dc_scale_table	libavcodec/msmpeg4data.c	/^const uint8_t wmv1_c_dc_scale_table[32]={$/;"	v
wmv1_scantable	libavcodec/msmpeg4data.c	/^const uint8_t wmv1_scantable[WMV1_SCANTABLE_COUNT][64]={$/;"	v
wmv1_y_dc_scale_table	libavcodec/msmpeg4data.c	/^const uint8_t wmv1_y_dc_scale_table[32]={$/;"	v
wmv2_add_block	libavcodec/wmv2.c	/^static void wmv2_add_block(Wmv2Context *w, DCTELEM *block1, uint8_t *dst, int stride, int n){$/;"	f	file:
wmv2_decode_end	libavcodec/wmv2dec.c	/^static av_cold int wmv2_decode_end(AVCodecContext *avctx)$/;"	f	file:
wmv2_decode_init	libavcodec/wmv2dec.c	/^static av_cold int wmv2_decode_init(AVCodecContext *avctx){$/;"	f	file:
wmv2_decode_inter_block	libavcodec/wmv2dec.c	/^static inline int wmv2_decode_inter_block(Wmv2Context *w, DCTELEM *block, int n, int cbp){$/;"	f	file:
wmv2_decode_motion	libavcodec/wmv2dec.c	/^static inline int wmv2_decode_motion(Wmv2Context *w, int *mx_ptr, int *my_ptr){$/;"	f	file:
wmv2_encode_init	libavcodec/wmv2enc.c	/^static av_cold int wmv2_encode_init(AVCodecContext *avctx){$/;"	f	file:
wmv2_idct_col	libavcodec/dsputil.c	/^static void wmv2_idct_col(short * b)$/;"	f	file:
wmv2_idct_row	libavcodec/dsputil.c	/^static void wmv2_idct_row(short * b)$/;"	f	file:
wmv2_inter_table	libavcodec/msmpeg4data.c	/^const uint32_t (* const wmv2_inter_table[WMV2_INTER_CBP_TABLE_COUNT])[2]={$/;"	v
wmv2_mspel8_h_lowpass	libavcodec/dsputil.c	/^static void wmv2_mspel8_h_lowpass(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h){$/;"	f	file:
wmv2_mspel8_h_lowpass	libavcodec/sh4/qpel.c	/^static void wmv2_mspel8_h_lowpass(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int h){$/;"	f	file:
wmv2_mspel8_v_lowpass	libavcodec/dsputil.c	/^static void wmv2_mspel8_v_lowpass(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int w){$/;"	f	file:
wmv2_mspel8_v_lowpass	libavcodec/sh4/qpel.c	/^static void wmv2_mspel8_v_lowpass(uint8_t *dst, uint8_t *src, int dstStride, int srcStride, int w){$/;"	f	file:
wmv2_pred_motion	libavcodec/wmv2dec.c	/^static int16_t *wmv2_pred_motion(Wmv2Context *w, int *px, int *py){$/;"	f	file:
wmv2_scantableA	libavcodec/msmpeg4data.c	/^const uint8_t wmv2_scantableA[64]={$/;"	v
wmv2_scantableB	libavcodec/msmpeg4data.c	/^const uint8_t wmv2_scantableB[64]={$/;"	v
wmv3_class	libavcodec/crystalhd.c	/^static AVClass wmv3_class = {$/;"	v	file:
wmv3_dc_scale_table	libavcodec/vc1data.c	/^const uint8_t wmv3_dc_scale_table[32]={$/;"	v
wndx	libavutil/fifo.h	/^    uint32_t rndx, wndx;$/;"	m	struct:AVFifoBuffer
wnv1_get_code	libavcodec/wnv1.c	/^static inline int wnv1_get_code(WNV1Context *w, int base_value)$/;"	f	file:
wordstream	libavcodec/4xm.c	/^    const uint16_t *wordstream;$/;"	m	struct:FourXContext	file:
wordstream_end	libavcodec/4xm.c	/^    const uint16_t *wordstream_end;$/;"	m	struct:FourXContext	file:
work_buf	libavcodec/zmbvenc.c	/^    uint8_t *comp_buf, *work_buf;$/;"	m	struct:ZmbvEncContext	file:
work_chunks	libavcodec/dvdata.h	/^    DVwork_chunk    *work_chunks;           \/* each thread gets its own chunk of frame to work on *\/$/;"	m	struct:DVprofile
work_chunks_dv100ntsci	libavcodec/dvdata.c	/^static DVwork_chunk work_chunks_dv100ntsci[4*10*27];$/;"	v	file:
work_chunks_dv100ntscp	libavcodec/dvdata.c	/^static DVwork_chunk work_chunks_dv100ntscp[2*10*27];$/;"	v	file:
work_chunks_dv100pali	libavcodec/dvdata.c	/^static DVwork_chunk work_chunks_dv100pali [4*12*27];$/;"	v	file:
work_chunks_dv100palp	libavcodec/dvdata.c	/^static DVwork_chunk work_chunks_dv100palp [2*12*27];$/;"	v	file:
work_chunks_dv25ntsc	libavcodec/dvdata.c	/^static DVwork_chunk work_chunks_dv25ntsc  [1*10*27];$/;"	v	file:
work_chunks_dv25pal	libavcodec/dvdata.c	/^static DVwork_chunk work_chunks_dv25pal   [1*12*27];$/;"	v	file:
work_chunks_dv25pal411	libavcodec/dvdata.c	/^static DVwork_chunk work_chunks_dv25pal411[1*12*27];$/;"	v	file:
work_chunks_dv50ntsc	libavcodec/dvdata.c	/^static DVwork_chunk work_chunks_dv50ntsc  [2*10*27];$/;"	v	file:
work_chunks_dv50pal	libavcodec/dvdata.c	/^static DVwork_chunk work_chunks_dv50pal   [2*12*27];$/;"	v	file:
work_sem	libavcodec/w32thread.c	/^    HANDLE work_sem;$/;"	m	struct:ThreadContext	file:
workaround	libavcodec/dxva2.h	/^    uint64_t workaround;$/;"	m	struct:dxva_context
workaround_bugs	ffplay.c	/^static int workaround_bugs = 1;$/;"	v	file:
workaround_bugs	libavcodec/avcodec.h	/^    int workaround_bugs;$/;"	m	struct:AVCodecContext
workaround_bugs	libavcodec/mpegvideo.h	/^    int workaround_bugs;       \/\/\/< workaround bugs in encoders which cannot be detected automatically$/;"	m	struct:MpegEncContext
worker	libavcodec/pthread.c	/^static void* attribute_align_arg worker(void *v)$/;"	f	file:
workers	libavcodec/pthread.c	/^    pthread_t *workers;$/;"	m	struct:ThreadContext	file:
wp_exp2	libavcodec/wavpack.c	/^static av_always_inline int wp_exp2(int16_t val)$/;"	f	file:
wp_exp2_table	libavcodec/wavpack.c	/^static const uint8_t wp_exp2_table [256] = {$/;"	v	file:
wp_log2	libavcodec/wavpack.c	/^static av_always_inline int wp_log2(int32_t val)$/;"	f	file:
wp_log2_table	libavcodec/wavpack.c	/^static const uint8_t wp_log2_table [] = {$/;"	v	file:
wptr	libavutil/fifo.h	/^    uint8_t *rptr, *wptr, *end;$/;"	m	struct:AVFifoBuffer
wrap	libavcodec/dca.c	/^    int wrap;                   \/\/\/< wrap for get_vlc2()$/;"	m	struct:__anon92	file:
wrap	tests/rotozoom.c	/^int width, height, wrap;$/;"	v
wrap	tests/videogen.c	/^int width, height, wrap;$/;"	v
wrap_buf	libavcodec/flac_parser.c	/^    uint8_t *wrap_buf;             \/**< general fifo read buffer when wrapped *\/$/;"	m	struct:FLACParseContext	file:
wrap_buf_allocated_size	libavcodec/flac_parser.c	/^    int wrap_buf_allocated_size;   \/**< actual allocated size of the buffer   *\/$/;"	m	struct:FLACParseContext	file:
write16	libavcodec/dpxenc.c	64;"	d	file:
write16x4	libavcodec/ppc/h264_altivec.c	/^static inline void write16x4(uint8_t *dst, int dst_stride,$/;"	f	file:
write32	libavcodec/dpxenc.c	70;"	d	file:
writeCode	libavcodec/lzwenc.c	/^static inline void writeCode(LZWEncodeState * s, int c)$/;"	f	file:
write_adts	libavformat/adts.h	/^    int write_adts;$/;"	m	struct:__anon431
write_all_blocks	libavcodec/flashsv2enc.c	/^static int write_all_blocks(FlashSV2Context * s, uint8_t * buf,$/;"	f	file:
write_audio_frame	doc/examples/muxing-example.c	/^static void write_audio_frame(AVFormatContext *oc, AVStream *st)$/;"	f	file:
write_back_motion	libavcodec/h264.h	/^static inline void write_back_motion(H264Context *h, int mb_type){$/;"	f
write_back_non_zero_count	libavcodec/h264.h	/^static inline void write_back_non_zero_count(H264Context *h){$/;"	f
write_bitstream	libavcodec/flashsv2enc.c	/^static int write_bitstream(FlashSV2Context * s, const uint8_t * src, int stride,$/;"	f	file:
write_block	libavcodec/flashsv2enc.c	/^static int write_block(Block * b, uint8_t * buf, int buf_size)$/;"	f	file:
write_chapter	libavformat/nutenc.c	/^static int write_chapter(NUTContext *nut, AVIOContext *bc, int id)$/;"	f	file:
write_codebooks	libavcodec/roqvideoenc.c	/^static void write_codebooks(RoqContext *enc, RoqTempdata *tempData)$/;"	f	file:
write_compressed_frame	libavcodec/alacenc.c	/^static void write_compressed_frame(AlacEncodeContext *s)$/;"	f	file:
write_desc	libavformat/mxfenc.c	/^    void (*write_desc)(AVFormatContext *, AVStream *);$/;"	m	struct:__anon459	file:
write_dts	libavformat/matroskaenc.c	/^    int             write_dts;$/;"	m	struct:__anon478	file:
write_escape_str	libavformat/ffmetaenc.c	/^static void write_escape_str(AVIOContext *s, const uint8_t *str)$/;"	f	file:
write_extra_header	libavcodec/ffv1.c	/^static int write_extra_header(FFV1Context *f){$/;"	f	file:
write_fileheader	libavcodec/tableprint.h	/^static inline void write_fileheader(void)$/;"	f
write_flag	libavformat/avio.h	/^    int write_flag;         \/**< true if open for writing *\/$/;"	m	struct:__anon396
write_float_3d_array	libavcodec/aacps_tablegen.c	/^void write_float_3d_array (const void *p, int b, int c, int d)$/;"	f
write_float_4d_array	libavcodec/aacps_tablegen.c	/^void write_float_4d_array (const void *p, int a, int b, int c, int d)$/;"	f
write_frame	ffmpeg.c	/^static void write_frame(AVFormatContext *s, AVPacket *pkt, AVCodecContext *avctx, AVBitStreamFilterContext *bsfc){$/;"	f	file:
write_frame	ffmpeg/ffmpeg.c	/^static void write_frame(AVFormatContext *s, AVPacket *pkt, AVCodecContext *avctx, AVBitStreamFilterContext *bsfc){$/;"	f	file:
write_frame	libavcodec/flacenc.c	/^static int write_frame(FlacEncodeContext *s, uint8_t *frame, int buf_size)$/;"	f	file:
write_frame_footer	libavcodec/flacenc.c	/^static void write_frame_footer(FlacEncodeContext *s)$/;"	f	file:
write_frame_header	libavcodec/alacenc.c	/^static void write_frame_header(AlacEncodeContext *s, int is_verbatim)$/;"	f	file:
write_frame_header	libavcodec/flacenc.c	/^static void write_frame_header(FlacEncodeContext *s)$/;"	f	file:
write_globalinfo	libavformat/nutenc.c	/^static int write_globalinfo(NUTContext *nut, AVIOContext *bc){$/;"	f	file:
write_header	libavcodec/ffv1.c	/^static void write_header(FFV1Context *f){$/;"	f	file:
write_header	libavcodec/flashsv2enc.c	/^static int write_header(FlashSV2Context * s, uint8_t * buf, int buf_size)$/;"	f	file:
write_header	libavformat/assenc.c	/^static int write_header(AVFormatContext *s)$/;"	f	file:
write_header	libavformat/avformat.h	/^    int (*write_header)(struct AVFormatContext *);$/;"	m	struct:AVOutputFormat
write_header	libavformat/ffmetaenc.c	/^static int write_header(AVFormatContext *s)$/;"	f	file:
write_header	libavformat/filmstripenc.c	/^static int write_header(AVFormatContext *s)$/;"	f	file:
write_header	libavformat/img2.c	/^static int write_header(AVFormatContext *s)$/;"	f	file:
write_header	libavformat/md5enc.c	/^static int write_header(struct AVFormatContext *s)$/;"	f	file:
write_header	libavformat/nutenc.c	/^static int write_header(AVFormatContext *s){$/;"	f	file:
write_headers	libavformat/nutenc.c	/^static int write_headers(AVFormatContext *avctx, AVIOContext *bc){$/;"	f	file:
write_hint_packets	libavformat/movenchint.c	/^static int write_hint_packets(AVIOContext *out, const uint8_t *data,$/;"	f	file:
write_index	libavformat/ffm.h	/^    int64_t write_index, file_size;$/;"	m	struct:FFMContext
write_mainheader	libavformat/nutenc.c	/^static void write_mainheader(NUTContext *nut, AVIOContext *bc){$/;"	f	file:
write_out_ptr	libavformat/mms.h	/^    uint8_t *write_out_ptr;              \/\/\/< Pointer for writting the buffer.$/;"	m	struct:__anon455
write_packet	libavformat/assenc.c	/^static int write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
write_packet	libavformat/avformat.h	/^    int (*write_packet)(struct AVFormatContext *, AVPacket *pkt);$/;"	m	struct:AVOutputFormat
write_packet	libavformat/avio.h	/^    int (*write_packet)(void *opaque, uint8_t *buf, int buf_size);$/;"	m	struct:__anon396
write_packet	libavformat/ffmetaenc.c	/^static int write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
write_packet	libavformat/filmstripenc.c	/^static int write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
write_packet	libavformat/img2.c	/^static int write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
write_packet	libavformat/md5enc.c	/^static int write_packet(struct AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
write_packet	libavformat/mpegtsenc.c	/^    void (*write_packet)(struct MpegTSSection *s, const uint8_t *packet);$/;"	m	struct:MpegTSSection	file:
write_packet	libavformat/nutenc.c	/^static int write_packet(AVFormatContext *s, AVPacket *pkt){$/;"	f	file:
write_packet_header	libavformat/rmenc.c	/^static void write_packet_header(AVFormatContext *ctx, StreamInfo *stream,$/;"	f	file:
write_palette	libavcodec/flashsv2enc.c	/^static int write_palette(FlashSV2Context * s, uint8_t * buf, int buf_size)$/;"	f	file:
write_pcr_bits	libavformat/mpegtsenc.c	/^static uint8_t* write_pcr_bits(uint8_t *buf, int64_t pcr)$/;"	f	file:
write_pixel_15_7	libavcodec/flashsv2enc.c	/^static int write_pixel_15_7(Palette * palette, uint8_t * dest, const uint8_t * src,$/;"	f	file:
write_png	libavfilter/libmpcodecs/vf_screenshot.c	/^static void write_png(struct vf_priv_s *priv)$/;"	f	file:
write_pts	libavformat/mpegtsenc.c	/^static void write_pts(uint8_t *q, int fourbits, int64_t pts)$/;"	f	file:
write_quant_table	libavcodec/ffv1.c	/^static void write_quant_table(RangeCoder *c, int16_t *quant_table){$/;"	f	file:
write_quant_tables	libavcodec/ffv1.c	/^static void write_quant_tables(RangeCoder *c, int16_t quant_table[MAX_CONTEXT_INPUTS][256]){$/;"	f	file:
write_sample_size	libavcodec/alacenc.c	/^    int write_sample_size;$/;"	m	struct:AlacEncodeContext	file:
write_section_data	libavformat/mpegts.c	/^static void write_section_data(AVFormatContext *s, MpegTSFilter *tss1,$/;"	f	file:
write_slice_end	libavcodec/mpegvideo_enc.c	/^static void write_slice_end(MpegEncContext *s){$/;"	f	file:
write_streamheader	libavformat/nutenc.c	/^static int write_streamheader(AVFormatContext *avctx, AVIOContext *bc, AVStream *st, int i){$/;"	f	file:
write_streaminfo	libavcodec/flacenc.c	/^static void write_streaminfo(FlacEncodeContext *s, uint8_t *header)$/;"	f	file:
write_streaminfo	libavformat/nutenc.c	/^static int write_streaminfo(NUTContext *nut, AVIOContext *bc, int stream_id){$/;"	f	file:
write_subframes	libavcodec/flacenc.c	/^static void write_subframes(FlacEncodeContext *s)$/;"	f	file:
write_tags	libavformat/ffmetaenc.c	/^static void write_tags(AVIOContext *s, AVDictionary *m)$/;"	f	file:
write_trailer	libavformat/assenc.c	/^static int write_trailer(AVFormatContext *s)$/;"	f	file:
write_trailer	libavformat/avformat.h	/^    int (*write_trailer)(struct AVFormatContext *);$/;"	m	struct:AVOutputFormat
write_trailer	libavformat/ffmetaenc.c	/^static int write_trailer(AVFormatContext *s)$/;"	f	file:
write_trailer	libavformat/filmstripenc.c	/^static int write_trailer(AVFormatContext *s)$/;"	f	file:
write_trailer	libavformat/md5enc.c	/^static int write_trailer(struct AVFormatContext *s)$/;"	f	file:
write_trailer	libavformat/nutenc.c	/^static int write_trailer(AVFormatContext *s){$/;"	f	file:
write_typecode	libavcodec/roqvideoenc.c	/^static void write_typecode(CodingSpool *s, uint8_t type)$/;"	f	file:
write_uint_max	libavcodec/sonic.c	/^static void write_uint_max(PutBitContext *pb, unsigned int value, unsigned int max)$/;"	f	file:
write_utf8	libavcodec/flacenc.c	/^static void write_utf8(PutBitContext *pb, uint32_t val)$/;"	f	file:
write_video_frame	doc/examples/muxing-example.c	/^static void write_video_frame(AVFormatContext *oc, AVStream *st)$/;"	f	file:
writtenBytes	libavcodec/lzwenc.c	/^static int writtenBytes(LZWEncodeState *s){$/;"	f	file:
wrong_dts	libavformat/flvdec.c	/^    int wrong_dts; \/\/\/< wrong dts due to negative cts$/;"	m	struct:__anon437	file:
wrong_dts	libavformat/isom.h	/^    int wrong_dts;        \/\/\/< dts are wrong due to huge ctts offset (iMovie files)$/;"	m	struct:MOVStreamContext
wrong_run	libavcodec/ituh263enc.c	/^static const uint8_t wrong_run[102] = {$/;"	v	file:
ws_adpcm_2bit	libavcodec/ws-snd1.c	/^static const int8_t ws_adpcm_2bit[] = { -2, -1, 0, 1};$/;"	v	file:
ws_adpcm_4bit	libavcodec/ws-snd1.c	/^static const int8_t ws_adpcm_4bit[] = {$/;"	v	file:
ws_snd_decode_frame	libavcodec/ws-snd1.c	/^static int ws_snd_decode_frame(AVCodecContext *avctx,$/;"	f	file:
ws_snd_decode_init	libavcodec/ws-snd1.c	/^static av_cold int ws_snd_decode_init(AVCodecContext * avctx)$/;"	f	file:
wsaud_probe	libavformat/westwood.c	/^static int wsaud_probe(AVProbeData *p)$/;"	f	file:
wsaud_read_header	libavformat/westwood.c	/^static int wsaud_read_header(AVFormatContext *s,$/;"	f	file:
wsaud_read_packet	libavformat/westwood.c	/^static int wsaud_read_packet(AVFormatContext *s,$/;"	f	file:
wsvqa_probe	libavformat/westwood.c	/^static int wsvqa_probe(AVProbeData *p)$/;"	f	file:
wsvqa_read_header	libavformat/westwood.c	/^static int wsvqa_read_header(AVFormatContext *s,$/;"	f	file:
wsvqa_read_packet	libavformat/westwood.c	/^static int wsvqa_read_packet(AVFormatContext *s,$/;"	f	file:
wtvfile_close	libavformat/wtvdec.c	/^static void wtvfile_close(AVIOContext *pb)$/;"	f	file:
wtvfile_open	libavformat/wtvdec.c	282;"	d	file:
wtvfile_open2	libavformat/wtvdec.c	/^static AVIOContext * wtvfile_open2(AVFormatContext *s, const uint8_t *buf, int buf_size, const uint8_t *filename, int filename_size)$/;"	f	file:
wtvfile_open_sector	libavformat/wtvdec.c	/^static AVIOContext * wtvfile_open_sector(int first_sector, uint64_t length, int depth, AVFormatContext *s)$/;"	f	file:
wtvfile_read_packet	libavformat/wtvdec.c	/^static int wtvfile_read_packet(void *opaque, uint8_t *buf, int buf_size)$/;"	f	file:
wtvfile_seek	libavformat/wtvdec.c	/^static int64_t wtvfile_seek(void *opaque, int64_t offset, int whence)$/;"	f	file:
wv_alloc_frame_context	libavcodec/wavpack.c	/^static av_cold int wv_alloc_frame_context(WavpackContext *c)$/;"	f	file:
wv_get_value	libavcodec/wavpack.c	/^static int wv_get_value(WavpackFrameContext *ctx, GetBitContext *gb, int channel, int *last)$/;"	f	file:
wv_get_value_float	libavcodec/wavpack.c	/^static float wv_get_value_float(WavpackFrameContext *s, uint32_t *crc, int S)$/;"	f	file:
wv_get_value_integer	libavcodec/wavpack.c	/^static inline int wv_get_value_integer(WavpackFrameContext *s, uint32_t *crc, int S)$/;"	f	file:
wv_probe	libavformat/wv.c	/^static int wv_probe(AVProbeData *p)$/;"	f	file:
wv_rates	libavformat/wv.c	/^static const int wv_rates[16] = {$/;"	v	file:
wv_read_block_header	libavformat/wv.c	/^static int wv_read_block_header(AVFormatContext *ctx, AVIOContext *pb, int append)$/;"	f	file:
wv_read_header	libavformat/wv.c	/^static int wv_read_header(AVFormatContext *s,$/;"	f	file:
wv_read_packet	libavformat/wv.c	/^static int wv_read_packet(AVFormatContext *s,$/;"	f	file:
wv_read_seek	libavformat/wv.c	/^static int wv_read_seek(AVFormatContext *s, int stream_index, int64_t timestamp, int flags)$/;"	f	file:
wv_reset_saved_context	libavcodec/wavpack.c	/^static void wv_reset_saved_context(WavpackFrameContext *s)$/;"	f	file:
wv_unpack_mono	libavcodec/wavpack.c	/^static inline int wv_unpack_mono(WavpackFrameContext *s, GetBitContext *gb, void *dst, const int type)$/;"	f	file:
wv_unpack_stereo	libavcodec/wavpack.c	/^static inline int wv_unpack_stereo(WavpackFrameContext *s, GetBitContext *gb, void *dst, const int type)$/;"	f	file:
x	libavcodec/acelp_vectors.h	/^    int      x[10];$/;"	m	struct:__anon122
x	libavcodec/anm.c	/^    int x;  \/\/\/< x coordinate position$/;"	m	struct:AnmContext	file:
x	libavcodec/ansi.c	/^    int x;                \/**< x cursor position (pixels) *\/$/;"	m	struct:__anon173	file:
x	libavcodec/avcodec.h	/^    int x;         \/\/\/< top left corner  of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
x	libavcodec/dvbsubdec.c	/^    int x;$/;"	m	struct:DVBSubDisplayDefinition	file:
x	libavcodec/iirfilter.c	/^    float x[1];$/;"	m	struct:FFIIRFilterState	file:
x	libavcodec/motion_est.c	/^    int x, y;$/;"	m	struct:Minima	file:
x	libavcodec/pgssubdec.c	/^    int x;$/;"	m	struct:PGSSubPresentation	file:
x	libavcodec/snow.c	/^    int16_t x;$/;"	m	struct:x_and_coeff	file:
x	libavcodec/svq1dec.c	/^  int           x;$/;"	m	struct:svq1_pmv_s	file:
x	libavcodec/truemotion1.c	/^    int x, y, w, h;$/;"	m	struct:TrueMotion1Context	file:
x	libavcodec/vorbis.h	/^    uint16_t x;$/;"	m	struct:__anon61
x	libavcodec/vp56.h	/^    int16_t x;$/;"	m	struct:__anon219
x	libavfilter/libmpcodecs/libvo/video_out.h	/^  int x,y;$/;"	m	struct:__anon31
x	libavfilter/libmpcodecs/mp_image.h	/^    int x,y,w,h;  \/\/ visible dimensions$/;"	m	struct:mp_image
x	libavfilter/libmpcodecs/vf_rectangle.c	/^    int x, y, w, h;$/;"	m	struct:vf_priv_s	file:
x	libavfilter/vf_crop.c	/^    int  x;             \/\/\/< x offset of the non-cropped area with respect to the input area$/;"	m	struct:__anon5	file:
x	libavfilter/vf_drawbox.c	/^    int x, y, w, h;$/;"	m	struct:__anon20	file:
x	libavfilter/vf_drawtext.c	/^    unsigned int x;                 \/\/\/< x position to start drawing text$/;"	m	struct:__anon24	file:
x	libavfilter/vf_overlay.c	/^    int x, y;                   \/\/\/< position of overlayed picture$/;"	m	struct:__anon7	file:
x	libavfilter/vf_pad.c	/^    int x, y;               \/\/\/< offsets of the input area with respect to the padded area$/;"	m	struct:__anon52	file:
x	libavutil/rc4.h	/^    int x, y;$/;"	m	struct:AVRC4
x	tests/videogen.c	/^    int x, y, w, h;$/;"	m	struct:VObj	file:
x1	libavcodec/cinepak.c	/^    uint16_t          x1, y1;$/;"	m	struct:__anon280	file:
x1	libavfilter/libmpcodecs/vf_cropdetect.c	/^    int x1,y1,x2,y2;$/;"	m	struct:vf_priv_s	file:
x1	libavfilter/vf_cropdetect.c	/^    int x1, y1, x2, y2;$/;"	m	struct:__anon48	file:
x11	libavfilter/libmpcodecs/libvo/video_out.h	/^  uint32_t x11; \/\/ The raw x11 color$/;"	m	struct:__anon30
x11_class	libavdevice/x11grab.c	/^static const AVClass x11_class = {$/;"	v	file:
x11_grab	libavdevice/x11grab.c	/^struct x11_grab$/;"	s	file:
x11grab_read_close	libavdevice/x11grab.c	/^x11grab_read_close(AVFormatContext *s1)$/;"	f	file:
x11grab_read_header	libavdevice/x11grab.c	/^x11grab_read_header(AVFormatContext *s1, AVFormatParameters *ap)$/;"	f	file:
x11grab_read_packet	libavdevice/x11grab.c	/^x11grab_read_packet(AVFormatContext *s1, AVPacket *pkt)$/;"	f	file:
x2	libavcodec/cinepak.c	/^    uint16_t          x2, y2;$/;"	m	struct:__anon280	file:
x2	libavfilter/libmpcodecs/vf_cropdetect.c	/^    int x1,y1,x2,y2;$/;"	m	struct:vf_priv_s	file:
x2	libavfilter/vf_cropdetect.c	/^    int x1, y1, x2, y2;$/;"	m	struct:__anon48	file:
x264_add8x4_idct_sse2	libavcodec/x86/h264_idct.asm	/^x264_add8x4_idct_sse2:$/;"	l
x264_build	libavcodec/h264.h	/^    int x264_build;$/;"	m	struct:H264Context
x264opts	libavcodec/libx264.c	/^    char *x264opts;$/;"	m	struct:X264Context	file:
x8	libavcodec/vc1.h	/^    IntraX8Context x8;$/;"	m	struct:VC1Context
x8	libavcodec/wmv2.h	/^    IntraX8Context x8;$/;"	m	struct:Wmv2Context
x86_reg	libavutil/x86_cpu.h	/^typedef int x86_reg;$/;"	t
x86_reg	libavutil/x86_cpu.h	/^typedef int32_t x86_reg;$/;"	t
x86_reg	libavutil/x86_cpu.h	/^typedef int64_t x86_reg;$/;"	t
x8_ac0_highquant_table	libavcodec/intrax8huf.h	/^static const uint16_t x8_ac0_highquant_table[8][77][2]={$/;"	v
x8_ac0_lowquant_table	libavcodec/intrax8huf.h	/^static const uint16_t x8_ac0_lowquant_table[8][77][2]={$/;"	v
x8_ac1_highquant_table	libavcodec/intrax8huf.h	/^static const uint16_t x8_ac1_highquant_table[8][77][2]={$/;"	v
x8_ac1_lowquant_table	libavcodec/intrax8huf.h	/^static const uint16_t x8_ac1_lowquant_table[8][77][2]={$/;"	v
x8_ac_compensation	libavcodec/intrax8.c	/^static void x8_ac_compensation(IntraX8Context * const w, int const direction, int const dc_level){$/;"	f	file:
x8_dc_highquant_table	libavcodec/intrax8huf.h	/^static const uint16_t x8_dc_highquant_table[8][34][2]={$/;"	v
x8_dc_lowquant_table	libavcodec/intrax8huf.h	/^static const uint16_t x8_dc_lowquant_table[8][34][2]={$/;"	v
x8_decode_intra_mb	libavcodec/intrax8.c	/^static int x8_decode_intra_mb(IntraX8Context* const w, const int chroma){$/;"	f	file:
x8_get_ac_rlf	libavcodec/intrax8.c	/^static void x8_get_ac_rlf(IntraX8Context * const w, const int mode,$/;"	f	file:
x8_get_dc_rlf	libavcodec/intrax8.c	/^static int x8_get_dc_rlf(IntraX8Context * const w,int const mode, int * const level, int * const final){$/;"	f	file:
x8_get_orient_vlc	libavcodec/intrax8.c	/^static inline int x8_get_orient_vlc(IntraX8Context * w){$/;"	f	file:
x8_get_prediction	libavcodec/intrax8.c	/^static void x8_get_prediction(IntraX8Context * const w){$/;"	f	file:
x8_get_prediction_chroma	libavcodec/intrax8.c	/^static void x8_get_prediction_chroma(IntraX8Context * const w){$/;"	f	file:
x8_h_loop_filter	libavcodec/dsputil.h	/^    void (*x8_h_loop_filter)(uint8_t *src, int stride, int qscale);$/;"	m	struct:DSPContext
x8_h_loop_filter	libavcodec/intrax8dsp.c	/^static void x8_h_loop_filter(uint8_t *src, int stride, int qscale){$/;"	f	file:
x8_init_block_index	libavcodec/intrax8.c	/^static void x8_init_block_index(MpegEncContext *s){ \/\/FIXME maybe merge with ff_*$/;"	f	file:
x8_loop_filter	libavcodec/intrax8dsp.c	/^static void x8_loop_filter(uint8_t * ptr, const int a_stride, const int b_stride, int quant){$/;"	f	file:
x8_orient_highquant_table	libavcodec/intrax8huf.h	/^static const uint16_t x8_orient_highquant_table[2][12][2]={$/;"	v
x8_orient_lowquant_table	libavcodec/intrax8huf.h	/^static const uint16_t x8_orient_lowquant_table[4][12][2]={$/;"	v
x8_reset_vlc_tables	libavcodec/intrax8.c	/^static void x8_reset_vlc_tables(IntraX8Context * w){$/;"	f	file:
x8_select_ac_table	libavcodec/intrax8.c	/^static inline void x8_select_ac_table(IntraX8Context * const w , int mode){$/;"	f	file:
x8_setup_spatial_compensation	libavcodec/dsputil.h	/^    void (*x8_setup_spatial_compensation)(uint8_t *src, uint8_t *dst, int linesize,$/;"	m	struct:DSPContext
x8_setup_spatial_compensation	libavcodec/intrax8dsp.c	/^static void x8_setup_spatial_compensation(uint8_t *src, uint8_t *dst, int linesize,$/;"	f	file:
x8_setup_spatial_predictor	libavcodec/intrax8.c	/^static int x8_setup_spatial_predictor(IntraX8Context * const w, const int chroma){$/;"	f	file:
x8_spatial_compensation	libavcodec/dsputil.h	/^    void (*x8_spatial_compensation[12])(uint8_t *src , uint8_t *dst, int linesize);$/;"	m	struct:DSPContext
x8_type	libavcodec/vc1.h	/^    int x8_type;$/;"	m	struct:VC1Context
x8_update_predictions	libavcodec/intrax8.c	/^static void x8_update_predictions(IntraX8Context * const w, const int orient, const int est_run ){$/;"	f	file:
x8_v_loop_filter	libavcodec/dsputil.h	/^    void (*x8_v_loop_filter)(uint8_t *src, int stride, int qscale);$/;"	m	struct:DSPContext
x8_v_loop_filter	libavcodec/intrax8dsp.c	/^static void x8_v_loop_filter(uint8_t *src, int stride, int qscale){$/;"	f	file:
x8_vlc_init	libavcodec/intrax8.c	/^static av_cold void x8_vlc_init(void){$/;"	f	file:
xC1S7	libavcodec/arm/vp3dsp_neon.S	/^#define xC1S7 d0[0]$/;"	d
xC1S7	libavcodec/vp3dsp.c	31;"	d	file:
xC2S6	libavcodec/arm/vp3dsp_neon.S	/^#define xC2S6 d0[1]$/;"	d
xC2S6	libavcodec/vp3dsp.c	32;"	d	file:
xC3S5	libavcodec/arm/vp3dsp_neon.S	/^#define xC3S5 d0[2]$/;"	d
xC3S5	libavcodec/vp3dsp.c	33;"	d	file:
xC4S4	libavcodec/arm/vp3dsp_neon.S	/^#define xC4S4 d0[3]$/;"	d
xC4S4	libavcodec/vp3dsp.c	34;"	d	file:
xC5S3	libavcodec/arm/vp3dsp_neon.S	/^#define xC5S3 d1[0]$/;"	d
xC5S3	libavcodec/vp3dsp.c	35;"	d	file:
xC6S2	libavcodec/arm/vp3dsp_neon.S	/^#define xC6S2 d1[1]$/;"	d
xC6S2	libavcodec/vp3dsp.c	36;"	d	file:
xC7S1	libavcodec/arm/vp3dsp_neon.S	/^#define xC7S1 d1[2]$/;"	d
xC7S1	libavcodec/vp3dsp.c	37;"	d	file:
xStride	libavcodec/h264.c	446;"	d	file:
xTab	libavcodec/imcdata.h	/^static const float xTab[14] = {7.6, 3.6, 4.4, 3.7, 6.1, 5.1, 2.3, 1.6, 6.2, 1.5, 1.8, 1.2, 0, 0}; \/\/10014048$/;"	v
x_and_coeff	libavcodec/snow.c	/^typedef struct x_and_coeff{$/;"	s	file:
x_and_coeff	libavcodec/snow.c	/^} x_and_coeff;$/;"	t	typeref:struct:x_and_coeff	file:
x_coeff	libavcodec/snow.c	/^    x_and_coeff * x_coeff;$/;"	m	struct:SubBand	file:
x_expr	libavfilter/vf_crop.c	/^    char x_expr[256], y_expr[256], ow_expr[256], oh_expr[256];$/;"	m	struct:__anon5	file:
x_expr	libavfilter/vf_overlay.c	/^    char x_expr[256], y_expr[256];$/;"	m	struct:__anon7	file:
x_expr	libavfilter/vf_pad.c	/^    char x_expr[256];       \/\/\/< width  expression string$/;"	m	struct:__anon52	file:
x_list_dim	libavcodec/vorbisdec.c	/^            uint16_t      x_list_dim;$/;"	m	struct:__anon259::vorbis_floor_u::vorbis_floor1_s	file:
x_off	libavcodec/vmdav.c	/^    int x_off, y_off;$/;"	m	struct:VmdVideoContext	file:
x_off	libavdevice/x11grab.c	/^    int x_off;               \/**< Horizontal top-left corner coordinate *\/$/;"	m	struct:x11_grab	file:
x_pexpr	libavfilter/vf_crop.c	/^    AVExpr *x_pexpr, *y_pexpr;  \/* parsed expressions for x and y *\/$/;"	m	struct:__anon5	file:
x_pos	libavcodec/dvbsubdec.c	/^    int x_pos;$/;"	m	struct:DVBSubObjectDisplay	file:
x_pos	libavcodec/dvbsubdec.c	/^    int x_pos;$/;"	m	struct:DVBSubRegionDisplay	file:
xa_adpcm_table	libavcodec/adpcm.c	/^static const int xa_adpcm_table[5][2] = {$/;"	v	file:
xa_decode	libavcodec/adpcm.c	/^static void xa_decode(short *out, const unsigned char *in,$/;"	f	file:
xa_probe	libavformat/xa.c	/^static int xa_probe(AVProbeData *p)$/;"	f	file:
xa_read_header	libavformat/xa.c	/^static int xa_read_header(AVFormatContext *s,$/;"	f	file:
xa_read_packet	libavformat/xa.c	/^static int xa_read_packet(AVFormatContext *s,$/;"	f	file:
xan_decode_chroma	libavcodec/xxan.c	/^static int xan_decode_chroma(AVCodecContext *avctx, AVPacket *avpkt)$/;"	f	file:
xan_decode_end	libavcodec/xan.c	/^static av_cold int xan_decode_end(AVCodecContext *avctx)$/;"	f	file:
xan_decode_end	libavcodec/xxan.c	/^static av_cold int xan_decode_end(AVCodecContext *avctx)$/;"	f	file:
xan_decode_frame	libavcodec/xan.c	/^static int xan_decode_frame(AVCodecContext *avctx,$/;"	f	file:
xan_decode_frame	libavcodec/xxan.c	/^static int xan_decode_frame(AVCodecContext *avctx,$/;"	f	file:
xan_decode_frame_type0	libavcodec/xxan.c	/^static int xan_decode_frame_type0(AVCodecContext *avctx, AVPacket *avpkt)$/;"	f	file:
xan_decode_frame_type1	libavcodec/xxan.c	/^static int xan_decode_frame_type1(AVCodecContext *avctx, AVPacket *avpkt)$/;"	f	file:
xan_decode_init	libavcodec/xan.c	/^static av_cold int xan_decode_init(AVCodecContext *avctx)$/;"	f	file:
xan_decode_init	libavcodec/xxan.c	/^static av_cold int xan_decode_init(AVCodecContext *avctx)$/;"	f	file:
xan_huffman_decode	libavcodec/xan.c	/^static int xan_huffman_decode(unsigned char *dest, int dest_len,$/;"	f	file:
xan_unpack	libavcodec/xan.c	/^static void xan_unpack(unsigned char *dest, int dest_len,$/;"	f	file:
xan_unpack	libavcodec/xxan.c	/^static int xan_unpack(uint8_t *dest, const int dest_len,$/;"	f	file:
xan_unpack_luma	libavcodec/xxan.c	/^static int xan_unpack_luma(const uint8_t *src, const int src_size,$/;"	f	file:
xan_wc3_copy_pixel_run	libavcodec/xan.c	/^static inline void xan_wc3_copy_pixel_run(XanContext *s,$/;"	f	file:
xan_wc3_decode_frame	libavcodec/xan.c	/^static int xan_wc3_decode_frame(XanContext *s) {$/;"	f	file:
xan_wc3_output_pixel_run	libavcodec/xan.c	/^static inline void xan_wc3_output_pixel_run(XanContext *s,$/;"	f	file:
xbits	libavcodec/ivi_common.h	/^    uint8_t     xbits[16];$/;"	m	struct:__anon101
xch_base_channel	libavcodec/dca.c	/^    int xch_base_channel;       \/\/\/< index of first (only) channel containing XCH data$/;"	m	struct:__anon93	file:
xch_present	libavcodec/dca.c	/^    int xch_present;            \/\/\/< XCh extension present and valid$/;"	m	struct:__anon93	file:
xchg_mb_border	libavcodec/h264.c	/^static inline void xchg_mb_border(H264Context *h, uint8_t *src_y,$/;"	f	file:
xchg_mb_border	libavcodec/vp8.c	/^void xchg_mb_border(uint8_t *top_border, uint8_t *src_y, uint8_t *src_cb, uint8_t *src_cr,$/;"	f	file:
xget_zpixmap	libavdevice/x11grab.c	/^xget_zpixmap(Display *dpy, Drawable d, XImage *image, int x, int y)$/;"	f	file:
xgetbv	libavutil/x86/cpu.c	38;"	d	file:
xglue	libavcodec/imgconvert.c	45;"	d	file:
xi0	libavcodec/j2k.h	/^    uint16_t xi0, xi1, yi0, yi1; \/\/\/< codeblock indexes ([xi0, xi1))$/;"	m	struct:__anon214
xi1	libavcodec/j2k.h	/^    uint16_t xi0, xi1, yi0, yi1; \/\/\/< codeblock indexes ([xi0, xi1))$/;"	m	struct:__anon214
xing_offtbl	libavformat/mp3enc.c	/^static const int64_t xing_offtbl[2][2] = {{32, 17}, {17,9}};$/;"	v	file:
xiph_extradata2config	libavformat/sdp.c	/^static char *xiph_extradata2config(AVCodecContext *c)$/;"	f	file:
xiph_free_context	libavformat/rtpdec_xiph.c	/^static void xiph_free_context(PayloadContext * data)$/;"	f	file:
xiph_handle_packet	libavformat/rtpdec_xiph.c	/^static int xiph_handle_packet(AVFormatContext * ctx,$/;"	f	file:
xiph_len	libavcodec/libvorbis.c	/^static int xiph_len(int l) { return (1 + l \/ 255 + l); }$/;"	f	file:
xiph_new_context	libavformat/rtpdec_xiph.c	/^static PayloadContext *xiph_new_context(void)$/;"	f	file:
xiph_parse_fmtp_pair	libavformat/rtpdec_xiph.c	/^static int xiph_parse_fmtp_pair(AVStream* stream,$/;"	f	file:
xiph_parse_sdp_line	libavformat/rtpdec_xiph.c	/^static int xiph_parse_sdp_line(AVFormatContext *s, int st_index,$/;"	f	file:
xl_table	libavcodec/xl.c	/^static const int xl_table[32] = {$/;"	v	file:
xleft	ffplay.c	/^    int width, height, xleft, ytop;$/;"	m	struct:VideoState	file:
xmax	libavcodec/mpegvideo.h	/^    int xmax;$/;"	m	struct:MotionEstContext
xmin	libavcodec/mpegvideo.h	/^    int xmin;$/;"	m	struct:MotionEstContext
xmm_reg	libavcodec/x86/dsputil_mmx.h	/^typedef struct { uint64_t a, b; } xmm_reg;$/;"	t	typeref:struct:__anon60
xoff	libavfilter/libmpcodecs/vf_delogo.c	/^    int xoff, yoff, lw, lh, band, show;$/;"	m	struct:vf_priv_s	file:
xoffset	libavcodec/truemotion1.c	/^    uint16_t xoffset;$/;"	m	struct:frame_header	file:
xor_32_to_8	libavcodec/mlp.h	/^static inline uint8_t xor_32_to_8(uint32_t value)$/;"	f
xpos	ffplay.c	/^    int xpos;$/;"	m	struct:VideoState	file:
xpos	libavcodec/indeo3.c	/^    int xpos;$/;"	m	struct:ustr	file:
xpos	libavcodec/ivi_common.h	/^    int         xpos;$/;"	m	struct:__anon106
xpos	libavcodec/ivi_common.h	/^    int16_t     xpos;$/;"	m	struct:__anon105
xrun_callback	libavdevice/jack_audio.c	/^static int xrun_callback(void *arg)$/;"	f	file:
xsize	libavcodec/libxvidff.c	/^    int xsize;                     \/**< Frame x size *\/$/;"	m	struct:xvid_context	file:
xsize	libavcodec/mpegaudiodectab.h	/^    int xsize;$/;"	m	struct:HuffTable
xsize	libavcodec/truemotion1.c	/^    uint16_t xsize;$/;"	m	struct:frame_header	file:
xsub_encode	libavcodec/xsubenc.c	/^static int xsub_encode(AVCodecContext *avctx, unsigned char *buf,$/;"	f	file:
xsub_encode_rle	libavcodec/xsubenc.c	/^static int xsub_encode_rle(PutBitContext *pb, const uint8_t *bitmap,$/;"	f	file:
xsub_encoder_init	libavcodec/xsubenc.c	/^static av_cold int xsub_encoder_init(AVCodecContext *avctx)$/;"	f	file:
xtile	libavfilter/libmpcodecs/vf_tile.c	/^    int  xtile;$/;"	m	struct:vf_priv_s	file:
xvid_build	libavcodec/mpegvideo.h	/^    int xvid_build;$/;"	m	struct:MpegEncContext
xvid_context	libavcodec/libxvidff.c	/^struct xvid_context {$/;"	s	file:
xvid_correct_framerate	libavcodec/libxvidff.c	/^void xvid_correct_framerate(AVCodecContext *avctx) {$/;"	f
xvid_encode_close	libavcodec/libxvidff.c	/^static av_cold int xvid_encode_close(AVCodecContext *avctx) {$/;"	f	file:
xvid_encode_frame	libavcodec/libxvidff.c	/^static int xvid_encode_frame(AVCodecContext *avctx,$/;"	f	file:
xvid_encode_init	libavcodec/libxvidff.c	/^static av_cold int xvid_encode_init(AVCodecContext *avctx)  {$/;"	f	file:
xvid_ff_2pass	libavcodec/libxvidff.c	/^int xvid_ff_2pass(void *ref, int cmd, void *p1, void *p2) {$/;"	f
xvid_ff_2pass_after	libavcodec/libxvidff.c	/^static int xvid_ff_2pass_after(struct xvid_context *ref,$/;"	f	file:
xvid_ff_2pass_before	libavcodec/libxvidff.c	/^static int xvid_ff_2pass_before(struct xvid_context *ref,$/;"	f	file:
xvid_ff_2pass_create	libavcodec/libxvidff.c	/^static int xvid_ff_2pass_create(xvid_plg_create_t * param,$/;"	f	file:
xvid_ff_2pass_destroy	libavcodec/libxvidff.c	/^static int xvid_ff_2pass_destroy(struct xvid_context *ref,$/;"	f	file:
xvid_ff_pass1	libavcodec/libxvidff.c	/^struct xvid_ff_pass1 {$/;"	s	file:
xvid_strip_vol_header	libavcodec/libxvidff.c	/^int xvid_strip_vol_header(AVCodecContext *avctx,$/;"	f
xvmc_acceleration	libavcodec/avcodec.h	/^    int xvmc_acceleration;$/;"	m	struct:AVCodecContext
xvmc_id	libavcodec/xvmc.h	/^    int             xvmc_id;$/;"	m	struct:xvmc_pix_fmt
xvmc_pix_fmt	libavcodec/xvmc.h	/^struct xvmc_pix_fmt {$/;"	s
xwma_probe	libavformat/xwma.c	/^static int xwma_probe(AVProbeData *p)$/;"	f	file:
xwma_read_header	libavformat/xwma.c	/^static int xwma_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
xwma_read_packet	libavformat/xwma.c	/^static int xwma_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
xytile	libavfilter/libmpcodecs/vf_tile.c	/^    int  xytile;$/;"	m	struct:vf_priv_s	file:
y	libavcodec/acelp_vectors.h	/^    float    y[10];$/;"	m	struct:__anon122
y	libavcodec/ansi.c	/^    int y;                \/**< y cursor position (pixels) *\/$/;"	m	struct:__anon173	file:
y	libavcodec/avcodec.h	/^    int y;         \/\/\/< top left corner  of pict, undefined when pict is not set$/;"	m	struct:AVSubtitleRect
y	libavcodec/dvbsubdec.c	/^    int y;$/;"	m	struct:DVBSubDisplayDefinition	file:
y	libavcodec/dwt.h	/^    int y;$/;"	m	struct:__anon206
y	libavcodec/g726.c	/^    int y;              \/**< quantizer scaling factor for the next iteration *\/$/;"	m	struct:G726Context	file:
y	libavcodec/motion_est.c	/^    int x, y;$/;"	m	struct:Minima	file:
y	libavcodec/motionpixels_tablegen.h	/^    int8_t y, v, u;$/;"	m	struct:YuvPixel
y	libavcodec/pgssubdec.c	/^    int y;$/;"	m	struct:PGSSubPresentation	file:
y	libavcodec/png.h	/^    int y;$/;"	m	struct:PNGDecContext
y	libavcodec/roqvideo.h	/^    unsigned char y[4];$/;"	m	struct:__anon123
y	libavcodec/svq1dec.c	/^  int           y;$/;"	m	struct:svq1_pmv_s	file:
y	libavcodec/truemotion1.c	/^    int x, y, w, h;$/;"	m	struct:TrueMotion1Context	file:
y	libavcodec/vp56.h	/^    int16_t y;$/;"	m	struct:__anon219
y	libavfilter/libmpcodecs/libvo/video_out.h	/^  int x,y;$/;"	m	struct:__anon31
y	libavfilter/libmpcodecs/mp_image.h	/^    int x,y,w,h;  \/\/ visible dimensions$/;"	m	struct:mp_image
y	libavfilter/libmpcodecs/vf_rectangle.c	/^    int x, y, w, h;$/;"	m	struct:vf_priv_s	file:
y	libavfilter/vf_crop.c	/^    int  y;             \/\/\/< y offset of the non-cropped area with respect to the input area$/;"	m	struct:__anon5	file:
y	libavfilter/vf_drawbox.c	/^    int x, y, w, h;$/;"	m	struct:__anon20	file:
y	libavfilter/vf_drawtext.c	/^    unsigned int y;                 \/\/\/< y position to start drawing text$/;"	m	struct:__anon24	file:
y	libavfilter/vf_overlay.c	/^    int x, y;                   \/\/\/< position of overlayed picture$/;"	m	struct:__anon7	file:
y	libavfilter/vf_pad.c	/^    int x, y;               \/\/\/< offsets of the input area with respect to the padded area$/;"	m	struct:__anon52	file:
y	libavutil/rc4.h	/^    int x, y;$/;"	m	struct:AVRC4
y	tests/videogen.c	/^    int x, y, w, h;$/;"	m	struct:VObj	file:
y0	libavcodec/cinepak.c	/^    uint8_t  y0, y1, y2, y3;$/;"	m	struct:__anon279	file:
y1	libavcodec/cinepak.c	/^    uint16_t          x1, y1;$/;"	m	struct:__anon280	file:
y1	libavcodec/cinepak.c	/^    uint8_t  y0, y1, y2, y3;$/;"	m	struct:__anon279	file:
y1	libavfilter/libmpcodecs/vf_cropdetect.c	/^    int x1,y1,x2,y2;$/;"	m	struct:vf_priv_s	file:
y1	libavfilter/vf_cropdetect.c	/^    int x1, y1, x2, y2;$/;"	m	struct:__anon48	file:
y2	libavcodec/cinepak.c	/^    uint16_t          x2, y2;$/;"	m	struct:__anon280	file:
y2	libavcodec/cinepak.c	/^    uint8_t  y0, y1, y2, y3;$/;"	m	struct:__anon279	file:
y2	libavfilter/libmpcodecs/vf_cropdetect.c	/^    int x1,y1,x2,y2;$/;"	m	struct:vf_priv_s	file:
y2	libavfilter/vf_cropdetect.c	/^    int x1, y1, x2, y2;$/;"	m	struct:__anon48	file:
y3	libavcodec/cinepak.c	/^    uint8_t  y0, y1, y2, y3;$/;"	m	struct:__anon279	file:
yHistogram	libpostproc/postprocess_internal.h	/^    uint64_t *yHistogram;$/;"	m	struct:PPContext
y_ac_table_index	libavcodec/vc1.h	/^    int y_ac_table_index; \/\/\/< Luma index from AC2FRM element$/;"	m	struct:VC1Context
y_block_height	libavcodec/svq1enc.c	/^    int y_block_height;$/;"	m	struct:SVQ1Context	file:
y_block_width	libavcodec/svq1enc.c	/^    int y_block_width;$/;"	m	struct:SVQ1Context	file:
y_buffer	libavcodec/xxan.c	/^    uint8_t *y_buffer;$/;"	m	struct:XanContext	file:
y_dc_scale	libavcodec/mpegvideo.h	/^    int y_dc_scale, c_dc_scale;$/;"	m	struct:MpegEncContext
y_dc_scale_table	libavcodec/mpegvideo.h	/^    const uint8_t *y_dc_scale_table;     \/\/\/< qscale -> y_dc_scale table$/;"	m	struct:MpegEncContext
y_expr	libavfilter/vf_crop.c	/^    char x_expr[256], y_expr[256], ow_expr[256], oh_expr[256];$/;"	m	struct:__anon5	file:
y_expr	libavfilter/vf_overlay.c	/^    char x_expr[256], y_expr[256];$/;"	m	struct:__anon7	file:
y_expr	libavfilter/vf_pad.c	/^    char y_expr[256];       \/\/\/< height expression string$/;"	m	struct:__anon52	file:
y_h	libavcodec/indeo3.c	/^    unsigned short y_w, y_h;$/;"	m	struct:__anon54	file:
y_off	libavcodec/vmdav.c	/^    int x_off, y_off;$/;"	m	struct:VmdVideoContext	file:
y_off	libavdevice/x11grab.c	/^    int y_off;               \/**< Vertical top-left corner coordinate *\/$/;"	m	struct:x11_grab	file:
y_pexpr	libavfilter/vf_crop.c	/^    AVExpr *x_pexpr, *y_pexpr;  \/* parsed expressions for x and y *\/$/;"	m	struct:__anon5	file:
y_pos	libavcodec/dvbsubdec.c	/^    int y_pos;$/;"	m	struct:DVBSubObjectDisplay	file:
y_pos	libavcodec/dvbsubdec.c	/^    int y_pos;$/;"	m	struct:DVBSubRegionDisplay	file:
y_predictor_table	libavcodec/truemotion1.c	/^    uint32_t y_predictor_table[1024];$/;"	m	struct:TrueMotion1Context	file:
y_superblock_count	libavcodec/vp3.c	/^    int y_superblock_count;$/;"	m	struct:Vp3DecodeContext	file:
y_superblock_height	libavcodec/vp3.c	/^    int y_superblock_height;$/;"	m	struct:Vp3DecodeContext	file:
y_superblock_width	libavcodec/vp3.c	/^    int y_superblock_width;$/;"	m	struct:Vp3DecodeContext	file:
y_w	libavcodec/indeo3.c	/^    unsigned short y_w, y_h;$/;"	m	struct:__anon54	file:
yamaha_difflookup	libavcodec/adpcm.c	/^static const int yamaha_difflookup[] = {$/;"	v	file:
yamaha_indexscale	libavcodec/adpcm.c	/^static const int yamaha_indexscale[] = {$/;"	v	file:
ydt	libavcodec/truemotion1.c	/^    int16_t ydt[8];$/;"	m	struct:TrueMotion1Context	file:
ydt1	libavcodec/truemotion1data.h	/^static const int16_t ydt1[8] = { 0, -2, 2, -6, 6, -12, 12, -12 };$/;"	v
ydt2	libavcodec/truemotion1data.h	/^static const int16_t ydt2[8] = { 0, -2, 4, -6, 8, -12, 12, -12 };$/;"	v
ydt3	libavcodec/truemotion1data.h	/^static const int16_t ydt3[8] = { 4, -6, 20, -20, 46, -46, 94, -94 };$/;"	v
ydt4	libavcodec/truemotion1data.h	/^static const int16_t ydt4[8] = { 0, -4, 4, -16, 16, -36, 36, -80 };$/;"	v
ydts	libavcodec/truemotion1data.h	/^static const int16_t * const ydts[] = { ydt1, ydt2, ydt3, ydt4, NULL };$/;"	v
yi0	libavcodec/j2k.h	/^    uint16_t xi0, xi1, yi0, yi1; \/\/\/< codeblock indexes ([xi0, xi1))$/;"	m	struct:__anon214
yi1	libavcodec/j2k.h	/^    uint16_t xi0, xi1, yi0, yi1; \/\/\/< codeblock indexes ([xi0, xi1))$/;"	m	struct:__anon214
yl	libavcodec/g726.c	/^    int yl;             \/**< slow scale factor *\/$/;"	m	struct:G726Context	file:
ymax	libavcodec/mpegvideo.h	/^    int ymax;$/;"	m	struct:MotionEstContext
ymin	libavcodec/mpegvideo.h	/^    int ymin;$/;"	m	struct:MotionEstContext
yoff	libavfilter/libmpcodecs/vf_delogo.c	/^    int xoff, yoff, lw, lh, band, show;$/;"	m	struct:vf_priv_s	file:
yoffset	libavcodec/truemotion1.c	/^    uint16_t yoffset;$/;"	m	struct:frame_header	file:
yop_copy_previous_block	libavcodec/yop.c	/^static int yop_copy_previous_block(YopDecContext *s, int copy_tag)$/;"	f	file:
yop_dec_context	libavformat/yop.c	/^typedef struct yop_dec_context {$/;"	s	file:
yop_decode_close	libavcodec/yop.c	/^static av_cold int yop_decode_close(AVCodecContext *avctx)$/;"	f	file:
yop_decode_frame	libavcodec/yop.c	/^static int yop_decode_frame(AVCodecContext *avctx, void *data, int *data_size,$/;"	f	file:
yop_decode_init	libavcodec/yop.c	/^static av_cold int yop_decode_init(AVCodecContext *avctx)$/;"	f	file:
yop_get_next_nibble	libavcodec/yop.c	/^static uint8_t yop_get_next_nibble(YopDecContext *s)$/;"	f	file:
yop_next_macroblock	libavcodec/yop.c	/^static void yop_next_macroblock(YopDecContext *s)$/;"	f	file:
yop_paint_block	libavcodec/yop.c	/^static void yop_paint_block(YopDecContext *s, int tag)$/;"	f	file:
yop_probe	libavformat/yop.c	/^static int yop_probe(AVProbeData *probe_packet)$/;"	f	file:
yop_read_close	libavformat/yop.c	/^static int yop_read_close(AVFormatContext *s)$/;"	f	file:
yop_read_header	libavformat/yop.c	/^static int yop_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
yop_read_packet	libavformat/yop.c	/^static int yop_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
yop_read_seek	libavformat/yop.c	/^static int yop_read_seek(AVFormatContext *s, int stream_index,$/;"	f	file:
ypos	libavcodec/indeo3.c	/^    int ypos;$/;"	m	struct:ustr	file:
ypos	libavcodec/ivi_common.h	/^    int         ypos;$/;"	m	struct:__anon106
ypos	libavcodec/ivi_common.h	/^    int16_t     ypos;$/;"	m	struct:__anon105
ysize	libavcodec/libxvidff.c	/^    int ysize;                     \/**< Frame y size *\/$/;"	m	struct:xvid_context	file:
ysize	libavcodec/truemotion1.c	/^    uint16_t ysize;$/;"	m	struct:frame_header	file:
ytile	libavfilter/libmpcodecs/vf_tile.c	/^    int  ytile;$/;"	m	struct:vf_priv_s	file:
ytop	ffplay.c	/^    int width, height, xleft, ytop;$/;"	m	struct:VideoState	file:
yu	libavcodec/g726.c	/^    int yu;             \/**< fast scale factor *\/$/;"	m	struct:G726Context	file:
yuv2422_1_c_template	libswscale/swscale.c	/^yuv2422_1_c_template(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2422_2_c_template	libswscale/swscale.c	/^yuv2422_2_c_template(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2422_X_c_template	libswscale/swscale.c	/^yuv2422_X_c_template(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2NBPS	libswscale/swscale.c	359;"	d	file:
yuv2bgr24_1	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2bgr24_1)(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2bgr24_2	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2bgr24_2)(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2bgr24_X	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2bgr24_X)(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2bgr24_X_ar	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2bgr24_X_ar)(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2gray16_1_c_template	libswscale/swscale.c	/^yuv2gray16_1_c_template(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2gray16_2_c_template	libswscale/swscale.c	/^yuv2gray16_2_c_template(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2gray16_X_c_template	libswscale/swscale.c	/^yuv2gray16_X_c_template(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2mono_1_c_template	libswscale/swscale.c	/^yuv2mono_1_c_template(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2mono_2_c_template	libswscale/swscale.c	/^yuv2mono_2_c_template(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2mono_X_c_template	libswscale/swscale.c	/^yuv2mono_X_c_template(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2nv12X_c	libswscale/swscale.c	/^static void yuv2nv12X_c(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2nv12X_c	libswscale/swscale_template.c	/^static inline void yuv2nv12X_c(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2packed1	libswscale/swscale_internal.h	/^    yuv2packed1_fn yuv2packed1;$/;"	m	struct:SwsContext
yuv2packed1_c	libswscale/swscale_template.c	/^static inline void yuv2packed1_c(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2packed1_fn	libswscale/swscale_internal.h	/^typedef void (*yuv2packed1_fn) (struct SwsContext *c,$/;"	t
yuv2packed2	libswscale/swscale_internal.h	/^    yuv2packed2_fn yuv2packed2;$/;"	m	struct:SwsContext
yuv2packed2_c	libswscale/swscale_template.c	/^static inline void yuv2packed2_c(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2packed2_fn	libswscale/swscale_internal.h	/^typedef void (*yuv2packed2_fn) (struct SwsContext *c,$/;"	t
yuv2packedX	libswscale/swscale_internal.h	/^    yuv2packedX_fn yuv2packedX;$/;"	m	struct:SwsContext
yuv2packedX_c	libswscale/swscale.c	/^static void yuv2packedX_c(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2packedX_c	libswscale/swscale_template.c	/^static inline void yuv2packedX_c(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2packedX_fn	libswscale/swscale_internal.h	/^typedef void (*yuv2packedX_fn) (struct SwsContext *c,$/;"	t
yuv2planar1_fn	libswscale/swscale_internal.h	/^typedef void (*yuv2planar1_fn) (struct SwsContext *c,$/;"	t
yuv2planarX_fn	libswscale/swscale_internal.h	/^typedef void (*yuv2planarX_fn) (struct SwsContext *c,$/;"	t
yuv2rgb32_1	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2rgb32_1)(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2rgb32_2	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2rgb32_2)(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2rgb32_X	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2rgb32_X)(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2rgb32_X_ar	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2rgb32_X_ar)(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2rgb48_1_c_template	libswscale/swscale.c	/^yuv2rgb48_1_c_template(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2rgb48_2_c_template	libswscale/swscale.c	/^yuv2rgb48_2_c_template(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2rgb48_X_c_template	libswscale/swscale.c	/^yuv2rgb48_X_c_template(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2rgb555_1	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2rgb555_1)(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2rgb555_2	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2rgb555_2)(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2rgb555_X	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2rgb555_X)(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2rgb555_X_ar	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2rgb555_X_ar)(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2rgb565_1	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2rgb565_1)(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2rgb565_2	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2rgb565_2)(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2rgb565_X	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2rgb565_X)(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2rgb565_X_ar	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2rgb565_X_ar)(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2rgbX_c_full	libswscale/swscale.c	/^static void yuv2rgbX_c_full(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2rgb_u2b_coeff	libswscale/swscale_internal.h	/^    int yuv2rgb_u2b_coeff;$/;"	m	struct:SwsContext
yuv2rgb_u2g_coeff	libswscale/swscale_internal.h	/^    int yuv2rgb_u2g_coeff;$/;"	m	struct:SwsContext
yuv2rgb_v2g_coeff	libswscale/swscale_internal.h	/^    int yuv2rgb_v2g_coeff;$/;"	m	struct:SwsContext
yuv2rgb_v2r_coeff	libswscale/swscale_internal.h	/^    int yuv2rgb_v2r_coeff;$/;"	m	struct:SwsContext
yuv2rgb_y_coeff	libswscale/swscale_internal.h	/^    int yuv2rgb_y_coeff;$/;"	m	struct:SwsContext
yuv2rgb_y_offset	libswscale/swscale_internal.h	/^    int yuv2rgb_y_offset;$/;"	m	struct:SwsContext
yuv2yuv1	libswscale/swscale_internal.h	/^    yuv2planar1_fn yuv2yuv1;$/;"	m	struct:SwsContext
yuv2yuv1	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2yuv1)(SwsContext *c, const int16_t *lumSrc,$/;"	f	file:
yuv2yuv1_ar	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2yuv1_ar)(SwsContext *c, const int16_t *lumSrc,$/;"	f	file:
yuv2yuv1_c	libswscale/swscale.c	/^static void yuv2yuv1_c(SwsContext *c, const int16_t *lumSrc,$/;"	f	file:
yuv2yuv1_c	libswscale/swscale_template.c	/^static inline void yuv2yuv1_c(SwsContext *c, const int16_t *lumSrc,$/;"	f	file:
yuv2yuvX	libswscale/swscale_internal.h	/^    yuv2planarX_fn yuv2yuvX;$/;"	m	struct:SwsContext
yuv2yuvX	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2yuvX)(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2yuvX16_c_template	libswscale/swscale.c	/^yuv2yuvX16_c_template(const int16_t *lumFilter, const int16_t **lumSrc,$/;"	f	file:
yuv2yuvX_altivec_real	libswscale/ppc/swscale_altivec.c	/^yuv2yuvX_altivec_real(SwsContext *c,$/;"	f	file:
yuv2yuvX_ar	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2yuvX_ar)(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2yuvX_c	libswscale/swscale.c	/^static void yuv2yuvX_c(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2yuvX_c	libswscale/swscale_template.c	/^static inline void yuv2yuvX_c(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2yuyv422_1	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2yuyv422_1)(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2yuyv422_2	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2yuyv422_2)(SwsContext *c, const uint16_t *buf0,$/;"	f	file:
yuv2yuyv422_X	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2yuyv422_X)(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv2yuyv422_X_ar	libswscale/x86/swscale_template.c	/^static void RENAME(yuv2yuyv422_X_ar)(SwsContext *c, const int16_t *lumFilter,$/;"	f	file:
yuv420_bgr24	libswscale/x86/yuv2rgb_template.c	/^static inline int RENAME(yuv420_bgr24)(SwsContext *c, const uint8_t *src[],$/;"	f	file:
yuv420_bgr32	libswscale/x86/yuv2rgb_template.c	/^static inline int RENAME(yuv420_bgr32)(SwsContext *c, const uint8_t *src[],$/;"	f	file:
yuv420_rgb15	libswscale/x86/yuv2rgb_template.c	/^static inline int RENAME(yuv420_rgb15)(SwsContext *c, const uint8_t *src[],$/;"	f	file:
yuv420_rgb16	libswscale/x86/yuv2rgb_template.c	/^static inline int RENAME(yuv420_rgb16)(SwsContext *c, const uint8_t *src[],$/;"	f	file:
yuv420_rgb24	libswscale/x86/yuv2rgb_template.c	/^static inline int RENAME(yuv420_rgb24)(SwsContext *c, const uint8_t *src[],$/;"	f	file:
yuv420_rgb32	libswscale/x86/yuv2rgb_template.c	/^static inline int RENAME(yuv420_rgb32)(SwsContext *c, const uint8_t *src[],$/;"	f	file:
yuv422pToUyvyWrapper	libswscale/swscale_unscaled.c	/^static int yuv422pToUyvyWrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
yuv422pToYuy2Wrapper	libswscale/swscale_unscaled.c	/^static int yuv422pToYuy2Wrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
yuv422ptouyvy	libswscale/rgb2rgb.c	/^void (*yuv422ptouyvy)(const uint8_t *ysrc, const uint8_t *usrc, const uint8_t *vsrc, uint8_t *dst,$/;"	v
yuv422ptouyvy	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(yuv422ptouyvy)(const uint8_t *ysrc, const uint8_t *usrc, const uint8_t *vsrc, uint8_t *dst,$/;"	f	file:
yuv422ptouyvy_c	libswscale/rgb2rgb_template.c	/^static inline void yuv422ptouyvy_c(const uint8_t *ysrc, const uint8_t *usrc,$/;"	f	file:
yuv422ptoyuy2	libswscale/rgb2rgb.c	/^void (*yuv422ptoyuy2)(const uint8_t *ysrc, const uint8_t *usrc, const uint8_t *vsrc, uint8_t *dst,$/;"	v
yuv422ptoyuy2	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(yuv422ptoyuy2)(const uint8_t *ysrc, const uint8_t *usrc, const uint8_t *vsrc, uint8_t *dst,$/;"	f	file:
yuv422ptoyuy2_c	libswscale/rgb2rgb_template.c	/^static inline void yuv422ptoyuy2_c(const uint8_t *ysrc, const uint8_t *usrc,$/;"	f	file:
yuv4_generate_header	libavformat/yuv4mpeg.c	/^static int yuv4_generate_header(AVFormatContext *s, char* buf)$/;"	f	file:
yuv4_probe	libavformat/yuv4mpeg.c	/^static int yuv4_probe(AVProbeData *pd)$/;"	f	file:
yuv4_read_header	libavformat/yuv4mpeg.c	/^static int yuv4_read_header(AVFormatContext *s, AVFormatParameters *ap)$/;"	f	file:
yuv4_read_packet	libavformat/yuv4mpeg.c	/^static int yuv4_read_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
yuv4_write_header	libavformat/yuv4mpeg.c	/^static int yuv4_write_header(AVFormatContext *s)$/;"	f	file:
yuv4_write_packet	libavformat/yuv4mpeg.c	/^static int yuv4_write_packet(AVFormatContext *s, AVPacket *pkt)$/;"	f	file:
yuvPlanartouyvy	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(yuvPlanartouyvy)(const uint8_t *ysrc, const uint8_t *usrc, const uint8_t *vsrc, uint8_t *dst,$/;"	f	file:
yuvPlanartouyvy_c	libswscale/rgb2rgb_template.c	/^static inline void yuvPlanartouyvy_c(const uint8_t *ysrc, const uint8_t *usrc,$/;"	f	file:
yuvPlanartoyuy2	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(yuvPlanartoyuy2)(const uint8_t *ysrc, const uint8_t *usrc, const uint8_t *vsrc, uint8_t *dst,$/;"	f	file:
yuvPlanartoyuy2_c	libswscale/rgb2rgb_template.c	/^static inline void yuvPlanartoyuy2_c(const uint8_t *ysrc, const uint8_t *usrc,$/;"	f	file:
yuvTable	libswscale/swscale_internal.h	/^    void * yuvTable;            \/\/ pointer to the yuv->rgb table start so it can be freed()$/;"	m	struct:SwsContext
yuv_a_to_rgba	libavcodec/dvdsubdec.c	/^static void yuv_a_to_rgba(const uint8_t *ycbcr, const uint8_t *alpha, uint32_t *rgba, int num_values)$/;"	f	file:
yuv_color	libavfilter/vf_drawbox.c	/^    unsigned char yuv_color[4];$/;"	m	struct:__anon20	file:
yuv_pix_fmts	libavfilter/vf_lut.c	/^static enum PixelFormat yuv_pix_fmts[] = { YUV_FORMATS, PIX_FMT_NONE };$/;"	v	typeref:enum:PixelFormat	file:
yuva420_bgr32	libswscale/x86/yuv2rgb_template.c	/^static inline int RENAME(yuva420_bgr32)(SwsContext *c, const uint8_t *src[],$/;"	f	file:
yuva420_rgb32	libswscale/x86/yuv2rgb_template.c	/^static inline int RENAME(yuva420_rgb32)(SwsContext *c, const uint8_t *src[],$/;"	f	file:
yuy2	libavcodec/huffyuv.c	/^    int yuy2;                               \/\/use yuy2 instead of 422P$/;"	m	struct:HYuvContext	file:
yuy2ToUV	libswscale/x86/swscale_template.c	/^static void RENAME(yuy2ToUV)(uint8_t *dstU, uint8_t *dstV,$/;"	f	file:
yuy2ToUV_c	libswscale/swscale_template.c	/^static inline void yuy2ToUV_c(uint8_t *dstU, uint8_t *dstV, const uint8_t *src1,$/;"	f	file:
yuy2ToY	libswscale/x86/swscale_template.c	/^static void RENAME(yuy2ToY)(uint8_t *dst, const uint8_t *src,$/;"	f	file:
yuy2ToY_c	libswscale/swscale_template.c	/^static inline void yuy2ToY_c(uint8_t *dst, const uint8_t *src, int width,$/;"	f	file:
yuy2toyv12	libswscale/rgb2rgb.c	/^void (*yuy2toyv12)(const uint8_t *src, uint8_t *ydst, uint8_t *udst, uint8_t *vdst,$/;"	v
yuy2toyv12	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(yuy2toyv12)(const uint8_t *src, uint8_t *ydst, uint8_t *udst, uint8_t *vdst,$/;"	f	file:
yuy2toyv12_c	libswscale/rgb2rgb_template.c	/^static inline void yuy2toyv12_c(const uint8_t *src, uint8_t *ydst,$/;"	f	file:
yuyvToYuv420Wrapper	libswscale/swscale_unscaled.c	/^static int yuyvToYuv420Wrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
yuyvToYuv422Wrapper	libswscale/swscale_unscaled.c	/^static int yuyvToYuv422Wrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
yuyvtoyuv420	libswscale/rgb2rgb.c	/^void (*yuyvtoyuv420)(uint8_t *ydst, uint8_t *udst, uint8_t *vdst, const uint8_t *src,$/;"	v
yuyvtoyuv420	libswscale/x86/rgb2rgb_template.c	/^static void RENAME(yuyvtoyuv420)(uint8_t *ydst, uint8_t *udst, uint8_t *vdst, const uint8_t *src,$/;"	f	file:
yuyvtoyuv420_c	libswscale/rgb2rgb_template.c	/^static void yuyvtoyuv420_c(uint8_t *ydst, uint8_t *udst, uint8_t *vdst,$/;"	f	file:
yuyvtoyuv422	libswscale/rgb2rgb.c	/^void (*yuyvtoyuv422)(uint8_t *ydst, uint8_t *udst, uint8_t *vdst, const uint8_t *src,$/;"	v
yuyvtoyuv422	libswscale/x86/rgb2rgb_template.c	/^static void RENAME(yuyvtoyuv422)(uint8_t *ydst, uint8_t *udst, uint8_t *vdst, const uint8_t *src,$/;"	f	file:
yuyvtoyuv422_c	libswscale/rgb2rgb_template.c	/^static void yuyvtoyuv422_c(uint8_t *ydst, uint8_t *udst, uint8_t *vdst,$/;"	f	file:
yuyvtoyv12_unscaled	libswscale/bfin/swscale_bfin.c	/^static int yuyvtoyv12_unscaled(SwsContext *c, uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
yv12touyvy	libswscale/rgb2rgb.c	/^void (*yv12touyvy)(const uint8_t *ysrc, const uint8_t *usrc, const uint8_t *vsrc, uint8_t *dst,$/;"	v
yv12touyvy	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(yv12touyvy)(const uint8_t *ysrc, const uint8_t *usrc, const uint8_t *vsrc, uint8_t *dst,$/;"	f	file:
yv12touyvy_c	libswscale/rgb2rgb_template.c	/^static inline void yv12touyvy_c(const uint8_t *ysrc, const uint8_t *usrc,$/;"	f	file:
yv12touyvy_unscaled_altivec	libswscale/ppc/yuv2yuv_altivec.c	/^static int yv12touyvy_unscaled_altivec(SwsContext *c, const uint8_t* src[],$/;"	f	file:
yv12toyuy2	libswscale/rgb2rgb.c	/^void (*yv12toyuy2)(const uint8_t *ysrc, const uint8_t *usrc, const uint8_t *vsrc, uint8_t *dst,$/;"	v
yv12toyuy2	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(yv12toyuy2)(const uint8_t *ysrc, const uint8_t *usrc, const uint8_t *vsrc, uint8_t *dst,$/;"	f	file:
yv12toyuy2_c	libswscale/rgb2rgb_template.c	/^static inline void yv12toyuy2_c(const uint8_t *ysrc, const uint8_t *usrc,$/;"	f	file:
yv12toyuy2_unscaled_altivec	libswscale/ppc/yuv2yuv_altivec.c	/^static int yv12toyuy2_unscaled_altivec(SwsContext *c, const uint8_t* src[],$/;"	f	file:
yvu9ToYv12Wrapper	libswscale/swscale_unscaled.c	/^static int yvu9ToYv12Wrapper(SwsContext *c, const uint8_t* src[], int srcStride[], int srcSliceY,$/;"	f	file:
yvu9_to_yuy2	libswscale/rgb2rgb.c	/^void (*yvu9_to_yuy2)(const uint8_t *src1, const uint8_t *src2, const uint8_t *src3,$/;"	v
yvu9_to_yuy2	libswscale/x86/rgb2rgb_template.c	/^static inline void RENAME(yvu9_to_yuy2)(const uint8_t *src1, const uint8_t *src2, const uint8_t *src3,$/;"	f	file:
yvu9_to_yuy2_c	libswscale/rgb2rgb_template.c	/^static inline void yvu9_to_yuy2_c(const uint8_t *src1, const uint8_t *src2,$/;"	f	file:
zap	libavcodec/alpha/asm.h	111;"	d
zap	libavcodec/alpha/asm.h	162;"	d
zap	libavcodec/alpha/asm.h	97;"	d
zapnot	libavcodec/alpha/asm.h	112;"	d
zapnot	libavcodec/alpha/asm.h	163;"	d
zapnot	libavcodec/alpha/asm.h	98;"	d
zero	libavcodec/alpha/regdef.h	64;"	d
zero	libavcodec/j2k.h	/^    uint8_t zero;$/;"	m	struct:__anon213
zero	libavcodec/wavpack.c	/^    int zero, one, zeroes;$/;"	m	struct:WavpackFrameContext	file:
zero_cmp	libavcodec/dsputil.c	/^static int zero_cmp(void *s, uint8_t *a, uint8_t *b, int stride, int h){$/;"	f	file:
zero_cmp	libavcodec/motion_est.c	/^static int zero_cmp(void *s, uint8_t *a, uint8_t *b, int stride, int h){$/;"	f	file:
zero_exc_pf	libavcodec/wmavoice.c	/^    float zero_exc_pf[MAX_SIGNAL_HISTORY + MAX_SFRAMESIZE];$/;"	m	struct:__anon157	file:
zero_extend	libavcodec/mathops.h	/^static inline av_const unsigned zero_extend(unsigned val, unsigned bits)$/;"	f
zero_hpel	libavcodec/motion_est.c	/^static void zero_hpel(uint8_t *a, const uint8_t *b, int stride, int h){$/;"	f	file:
zero_mem	libavcodec/g722.c	/^        int16_t zero_mem[6];         \/\/\/< Seventh-order zero section coefficient buffer$/;"	m	struct:__anon140::G722Band	file:
zero_prediction_weights	libavcodec/intrax8dsp.c	/^static const uint16_t zero_prediction_weights[64*2] = {$/;"	v	file:
zero_remaining	libavcodec/alsdec.c	/^static void zero_remaining(unsigned int b, unsigned int b_max,$/;"	f	file:
zero_run_base	libavcodec/vp3data.h	/^static const int zero_run_base[32] = {$/;"	v
zero_run_get_bits	libavcodec/vp3data.h	/^static const int zero_run_get_bits[32] = {$/;"	v
zero_s16v	libavcodec/ppc/types_altivec.h	43;"	d
zero_s32v	libavcodec/ppc/types_altivec.h	45;"	d
zero_s8v	libavcodec/ppc/types_altivec.h	41;"	d
zero_state	libavcodec/rangecoder.h	/^    uint8_t zero_state[256];$/;"	m	struct:RangeCoder
zero_u16v	libavcodec/ppc/types_altivec.h	42;"	d
zero_u32v	libavcodec/ppc/types_altivec.h	44;"	d
zero_u8v	libavcodec/ppc/types_altivec.h	40;"	d
zerobits	libavcodec/j2k.h	/^    J2kTgtNode *zerobits;$/;"	m	struct:__anon214
zeroes	libavcodec/aac.h	/^    uint8_t zeroes[128];                            \/\/\/< band is not coded (used by encoder)$/;"	m	struct:__anon244
zeroes	libavcodec/wavpack.c	/^    int zero, one, zeroes;$/;"	m	struct:WavpackFrameContext	file:
zeros	libavcodec/lagarith.c	/^    int zeros;                  \/*!< number of consecutive zero bytes encountered *\/$/;"	m	struct:LagarithContext	file:
zeros_rem	libavcodec/lagarith.c	/^    int zeros_rem;              \/*!< number of zero bytes remaining to output *\/$/;"	m	struct:LagarithContext	file:
zigzag_scan	libavcodec/arm/vp8_armv6.S	/^zigzag_scan:$/;"	l
zigzag_scan	libavcodec/h264.h	/^    uint8_t zigzag_scan[16];$/;"	m	struct:H264Context
zigzag_scan	libavcodec/h264data.h	/^static const uint8_t zigzag_scan[16]={$/;"	v
zigzag_scan	libavcodec/vp8data.h	/^static const uint8_t zigzag_scan[16]={$/;"	v
zigzag_scan8x8	libavcodec/h264.h	/^    uint8_t zigzag_scan8x8[64];$/;"	m	struct:H264Context
zigzag_scan8x8_cavlc	libavcodec/h264.h	/^    uint8_t zigzag_scan8x8_cavlc[64];$/;"	m	struct:H264Context
zigzag_scan8x8_cavlc	libavcodec/h264data.h	/^static const uint8_t zigzag_scan8x8_cavlc[64]={$/;"	v
zigzag_scan8x8_cavlc_q0	libavcodec/h264.h	/^    const uint8_t *zigzag_scan8x8_cavlc_q0;$/;"	m	struct:H264Context
zigzag_scan8x8_q0	libavcodec/h264.h	/^    const uint8_t *zigzag_scan8x8_q0;$/;"	m	struct:H264Context
zigzag_scan_q0	libavcodec/h264.h	/^    const uint8_t *zigzag_scan_q0;$/;"	m	struct:H264Context
zlib_decomp	libavcodec/lcldec.c	/^static int zlib_decomp(AVCodecContext *avctx, const uint8_t *src, int src_len, int offset, int expected)$/;"	f	file:
zmbv_decode_intra	libavcodec/zmbv.c	/^static int zmbv_decode_intra(ZmbvContext *c)$/;"	f	file:
zmbv_decode_xor_16	libavcodec/zmbv.c	/^static int zmbv_decode_xor_16(ZmbvContext *c)$/;"	f	file:
zmbv_decode_xor_24	libavcodec/zmbv.c	/^static int zmbv_decode_xor_24(ZmbvContext *c)$/;"	f	file:
zmbv_decode_xor_32	libavcodec/zmbv.c	/^static int zmbv_decode_xor_32(ZmbvContext *c)$/;"	f	file:
zmbv_decode_xor_8	libavcodec/zmbv.c	/^static int zmbv_decode_xor_8(ZmbvContext *c)$/;"	f	file:
zmbv_me	libavcodec/zmbvenc.c	/^static int zmbv_me(ZmbvEncContext *c, uint8_t *src, int sstride, uint8_t *prev,$/;"	f	file:
zstream	libavcodec/flashsv.c	/^    z_stream        zstream;$/;"	m	struct:FlashSVContext	file:
zstream	libavcodec/flashsvenc.c	/^    z_stream        zstream;$/;"	m	struct:FlashSVContext	file:
zstream	libavcodec/lcldec.c	/^    z_stream zstream;$/;"	m	struct:LclDecContext	file:
zstream	libavcodec/lclenc.c	/^    z_stream zstream;$/;"	m	struct:LclEncContext	file:
zstream	libavcodec/png.h	/^    z_stream zstream;$/;"	m	struct:PNGDecContext
zstream	libavcodec/pngenc.c	/^    z_stream zstream;$/;"	m	struct:PNGEncContext	file:
zstream	libavcodec/tscc.c	/^    z_stream zstream;$/;"	m	struct:TsccContext	file:
zstream	libavcodec/zmbv.c	/^    z_stream zstream;$/;"	m	struct:ZmbvContext	file:
zstream	libavcodec/zmbvenc.c	/^    z_stream zstream;$/;"	m	struct:ZmbvEncContext	file:
zz_4x8	libavcodec/vc1.h	/^    const uint8_t* zz_4x8;\/\/\/< Zigzag scan table for TT_4x8 coding mode$/;"	m	struct:VC1Context
zz_8x4	libavcodec/vc1.h	/^    const uint8_t* zz_8x4;\/\/\/< Zigzag scan table for TT_8x4 coding mode$/;"	m	struct:VC1Context
zz_8x8	libavcodec/vc1.h	/^    uint8_t zz_8x8[4][64];\/\/\/< Zigzag table for TT_8x8, permuted for IDCT$/;"	m	struct:VC1Context
